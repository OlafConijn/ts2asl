[
  {
    "name": {
      "identifier": "thresholds",
      "_syntaxKind": "identifier"
    },
    "expression": {
      "parameters": {
        "elements": [
          {
            "properties": {
              "metric": {
                "value": "mappings.requests",
                "type": "string",
                "_syntaxKind": "literal"
              },
              "ceiling": {
                "value": 100,
                "type": "numeric",
                "_syntaxKind": "literal"
              }
            },
            "_syntaxKind": "literal-object"
          },
          {
            "properties": {
              "metric": {
                "value": "mappings.requests",
                "type": "string",
                "_syntaxKind": "literal"
              },
              "ceiling": {
                "value": 1000,
                "type": "numeric",
                "_syntaxKind": "literal"
              }
            },
            "_syntaxKind": "literal-object"
          }
        ],
        "_syntaxKind": "literal-array"
      },
      "comment": "thresholds = [\n    {\n      \"metric\": \"mappings.requests\",\n      \"ceiling\": 100\n    },\n    {\n      \"metric\": \"mappings.requests\",\n      \"ceiling\": 1000\n    }\n  ]",
      "_syntaxKind": "asl-pass-state"
    },
    "_syntaxKind": "variable-assignment"
  },
  {
    "name": {
      "identifier": "lastEvaluatedKey",
      "_syntaxKind": "identifier"
    },
    "expression": {
      "parameters": {
        "value": null,
        "type": "null",
        "_syntaxKind": "literal"
      },
      "comment": "lastEvaluatedKey: any | undefined = undefined",
      "_syntaxKind": "asl-pass-state"
    },
    "_syntaxKind": "variable-assignment"
  },
  {
    "condition": {
      "operator": "is-present",
      "rhs": {
        "identifier": "lastEvaluatedKey",
        "_syntaxKind": "identifier"
      }
    },
    "while": {
      "expressions": [
        {
          "name": {
            "identifier": "scan",
            "_syntaxKind": "identifier"
          },
          "expression": {
            "resource": "arn:aws:states:::aws-sdk:dynamodb:scan",
            "parameters": {
              "_syntaxKind": "literal-object",
              "properties": {
                "TableName": {
                  "value": "MyStorage",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                "Limit": {
                  "value": 1,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                "ExclusiveStartKey": {
                  "identifier": "lastEvaluatedKey",
                  "_syntaxKind": "identifier"
                }
              }
            },
            "_syntaxKind": "asl-task-state"
          },
          "_syntaxKind": "variable-assignment"
        },
        {
          "items": {
            "identifier": "scan.Items",
            "_syntaxKind": "identifier"
          },
          "catch": [],
          "retry": [],
          "iterator": {
            "expressions": [
              {
                "items": {
                  "identifier": "thresholds",
                  "_syntaxKind": "identifier"
                },
                "catch": [],
                "retry": [],
                "iterator": {
                  "expressions": [
                    {
                      "name": {
                        "identifier": "numericLastSentOnValue",
                        "_syntaxKind": "identifier"
                      },
                      "expression": {
                        "arguments": [
                          {
                            "identifier": "item.lastSentOnValue.N",
                            "_syntaxKind": "identifier"
                          }
                        ],
                        "function": "asl.states.stringToJson",
                        "_syntaxKind": "asl-intrinsic-function"
                      },
                      "_syntaxKind": "variable-assignment"
                    },
                    {
                      "name": {
                        "identifier": "numericTotal",
                        "_syntaxKind": "identifier"
                      },
                      "expression": {
                        "arguments": [
                          {
                            "identifier": "item.total.N",
                            "_syntaxKind": "identifier"
                          }
                        ],
                        "function": "asl.states.stringToJson",
                        "_syntaxKind": "asl-intrinsic-function"
                      },
                      "_syntaxKind": "variable-assignment"
                    },
                    {
                      "condition": {
                        "lhs": {
                          "lhs": {
                            "lhs": {
                              "lhs": {
                                "lhs": {
                                  "identifier": "item.sk.S",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "eq",
                                "rhs": {
                                  "identifier": "threshold.metric",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "operator": "and",
                              "rhs": {
                                "lhs": {
                                  "identifier": "threshold.ceiling",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "lte",
                                "rhs": {
                                  "identifier": "numericTotal",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "and",
                            "rhs": {
                              "lhs": {
                                "identifier": "threshold.ceiling",
                                "_syntaxKind": "identifier"
                              },
                              "operator": "gt",
                              "rhs": {
                                "identifier": "numericLastSentOnValue",
                                "_syntaxKind": "identifier"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "operator": "and",
                          "rhs": {
                            "lhs": {
                              "operator": "not",
                              "rhs": {
                                "operator": "is-present",
                                "rhs": {
                                  "identifier": "item.lastBeginDateValue.S",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "or",
                            "rhs": {
                              "lhs": {
                                "identifier": "item.beginDate.S",
                                "_syntaxKind": "identifier"
                              },
                              "operator": "eq",
                              "rhs": {
                                "identifier": "item.lastBeginDateValue.S",
                                "_syntaxKind": "identifier"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "_syntaxKind": "binary-expression"
                        },
                        "operator": "or",
                        "rhs": {
                          "lhs": {
                            "lhs": {
                              "lhs": {
                                "identifier": "item.sk.S",
                                "_syntaxKind": "identifier"
                              },
                              "operator": "eq",
                              "rhs": {
                                "identifier": "threshold.metric",
                                "_syntaxKind": "identifier"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "and",
                            "rhs": {
                              "lhs": {
                                "identifier": "threshold.ceiling",
                                "_syntaxKind": "identifier"
                              },
                              "operator": "lte",
                              "rhs": {
                                "identifier": "numericTotal",
                                "_syntaxKind": "identifier"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "operator": "and",
                          "rhs": {
                            "lhs": {
                              "operator": "not",
                              "rhs": {
                                "operator": "is-present",
                                "rhs": {
                                  "identifier": "item.lastBeginDateValue.S",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "or",
                            "rhs": {
                              "lhs": {
                                "identifier": "item.beginDate.S",
                                "_syntaxKind": "identifier"
                              },
                              "operator": "eq",
                              "rhs": {
                                "identifier": "item.lastBeginDateValue.S",
                                "_syntaxKind": "identifier"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "_syntaxKind": "binary-expression"
                        },
                        "_syntaxKind": "binary-expression"
                      },
                      "then": {
                        "expressions": [
                          {
                            "resource": "arn:aws:states:::aws-sdk:eventbridge:putEvents",
                            "parameters": {
                              "_syntaxKind": "literal-object",
                              "properties": {
                                "Entries": {
                                  "elements": [
                                    {
                                      "properties": {
                                        "Detail": {
                                          "arguments": [
                                            {
                                              "properties": {
                                                "account_id": {
                                                  "identifier": "item.pk",
                                                  "_syntaxKind": "identifier"
                                                },
                                                "threshold": {
                                                  "identifier": "threshold",
                                                  "_syntaxKind": "identifier"
                                                }
                                              },
                                              "_syntaxKind": "literal-object"
                                            }
                                          ],
                                          "function": "asl.states.jsonToString",
                                          "_syntaxKind": "asl-intrinsic-function"
                                        },
                                        "DetailType": {
                                          "value": "accounts.thresholds.breached",
                                          "type": "string",
                                          "_syntaxKind": "literal"
                                        },
                                        "EventBusName": {
                                          "value": "default",
                                          "type": "string",
                                          "_syntaxKind": "literal"
                                        },
                                        "Source": {
                                          "value": "com.stedi.billing",
                                          "type": "string",
                                          "_syntaxKind": "literal"
                                        }
                                      },
                                      "_syntaxKind": "literal-object"
                                    }
                                  ],
                                  "_syntaxKind": "literal-array"
                                }
                              }
                            },
                            "_syntaxKind": "asl-task-state"
                          },
                          {
                            "resource": "arn:aws:states:::aws-sdk:dynamodb:updateItem",
                            "parameters": {
                              "_syntaxKind": "literal-object",
                              "properties": {
                                "TableName": {
                                  "value": "MyStorage",
                                  "type": "string",
                                  "_syntaxKind": "literal"
                                },
                                "Key": {
                                  "properties": {
                                    "pk": {
                                      "identifier": "item.pk",
                                      "_syntaxKind": "identifier"
                                    },
                                    "sk": {
                                      "identifier": "item.sk",
                                      "_syntaxKind": "identifier"
                                    }
                                  },
                                  "_syntaxKind": "literal-object"
                                },
                                "ConditionExpression": {
                                  "value": "lastSentOnValue < :newLastSentOnValue OR lastBeginDateValue <> :newLastBeginDateValue",
                                  "type": "string",
                                  "_syntaxKind": "literal"
                                },
                                "UpdateExpression": {
                                  "value": "SET lastSentOnValue = :newLastSentOnValue, lastBeginDateValue = :newLastBeginDateValue",
                                  "type": "string",
                                  "_syntaxKind": "literal"
                                },
                                "ExpressionAttributeValues": {
                                  "properties": {
                                    ":newLastSentOnValue": {
                                      "properties": {
                                        "N": {
                                          "identifier": "item.total.N",
                                          "_syntaxKind": "identifier"
                                        }
                                      },
                                      "_syntaxKind": "literal-object"
                                    },
                                    ":newLastBeginDateValue": {
                                      "properties": {
                                        "S": {
                                          "identifier": "item.beginDate.S",
                                          "_syntaxKind": "identifier"
                                        }
                                      },
                                      "_syntaxKind": "literal-object"
                                    }
                                  },
                                  "_syntaxKind": "literal-object"
                                }
                              }
                            },
                            "_syntaxKind": "asl-task-state"
                          }
                        ]
                      },
                      "_syntaxKind": "if"
                    }
                  ]
                },
                "_syntaxKind": "asl-map-state"
              }
            ]
          },
          "_syntaxKind": "asl-map-state"
        },
        {
          "name": {
            "identifier": "lastEvaluatedKey",
            "_syntaxKind": "identifier"
          },
          "expression": {
            "identifier": "scan.LastEvaluatedKey",
            "_syntaxKind": "identifier"
          },
          "_syntaxKind": "variable-assignment"
        }
      ]
    },
    "_syntaxKind": "do-while"
  }
]
