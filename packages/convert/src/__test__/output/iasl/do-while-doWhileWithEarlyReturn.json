{
  "statements": [
    {
      "name": {
        "identifier": "counter",
        "_syntaxKind": "identifier",
        "type": "string"
      },
      "expression": {
        "stateName": "Assign counter",
        "parameters": {
          "value": "",
          "type": "string",
          "_syntaxKind": "literal"
        },
        "source": "counter = \"\"",
        "_syntaxKind": "asl-pass-state"
      },
      "stateName": "Assign counter",
      "_syntaxKind": "variable-assignment"
    },
    {
      "stateName": "Do While (counter != \"aaaaa\")",
      "condition": {
        "operator": "not",
        "rhs": {
          "lhs": {
            "identifier": "counter",
            "_syntaxKind": "identifier",
            "type": "string"
          },
          "operator": "eq",
          "rhs": {
            "value": "aaaaa",
            "type": "string",
            "_syntaxKind": "literal"
          },
          "_syntaxKind": "binary-expression"
        },
        "_syntaxKind": "binary-expression"
      },
      "while": {
        "statements": [
          {
            "name": {
              "identifier": "counter",
              "_syntaxKind": "identifier",
              "type": "string"
            },
            "expression": {
              "arguments": [
                {
                  "value": "{}a",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                {
                  "identifier": "counter",
                  "_syntaxKind": "identifier",
                  "type": "string"
                }
              ],
              "function": "asl.states.format",
              "_syntaxKind": "asl-intrinsic-function"
            },
            "stateName": "Assign counter",
            "_syntaxKind": "variable-assignment"
          },
          {
            "stateName": "If (counter == \"aa\")",
            "condition": {
              "lhs": {
                "identifier": "counter",
                "_syntaxKind": "identifier",
                "type": "string"
              },
              "operator": "eq",
              "rhs": {
                "value": "aa",
                "type": "string",
                "_syntaxKind": "literal"
              },
              "_syntaxKind": "binary-expression"
            },
            "then": {
              "statements": [
                {
                  "expression": {
                    "identifier": "counter",
                    "_syntaxKind": "identifier",
                    "type": "string"
                  },
                  "_syntaxKind": "return",
                  "stateName": "Return counter"
                }
              ],
              "_syntaxKind": "function"
            },
            "source": "if (counter == \"aa\") {\n      return counter; //returns \"aa\"\n    }",
            "_syntaxKind": "if"
          }
        ],
        "_syntaxKind": "function"
      },
      "_syntaxKind": "do-while"
    },
    {
      "stateName": "Throw Error",
      "cause": "this should not happen",
      "error": "Error",
      "source": "throw new Error(\"this should not happen\");",
      "_syntaxKind": "asl-fail-state"
    }
  ],
  "_syntaxKind": "statemachine"
}