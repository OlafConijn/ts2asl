{
  "statements": [
    {
      "stateName": "Try Catch",
      "try": {
        "statements": [
          {
            "name": {
              "identifier": "arr",
              "type": "object",
              "_syntaxKind": "identifier"
            },
            "expression": {
              "stateName": "Assign arr",
              "parameters": {
                "elements": [
                  {
                    "value": 1,
                    "type": "numeric",
                    "_syntaxKind": "literal"
                  }
                ],
                "_syntaxKind": "literal-array"
              },
              "source": "arr = [1]",
              "_syntaxKind": "asl-pass-state"
            },
            "stateName": "Assign arr",
            "_syntaxKind": "variable-assignment"
          },
          {
            "name": {
              "identifier": "withinTry",
              "type": "object",
              "_syntaxKind": "identifier"
            },
            "expression": {
              "stateName": "arr.map => x",
              "items": {
                "identifier": "arr",
                "type": "object",
                "_syntaxKind": "identifier"
              },
              "iterator": {
                "inputArgumentName": {
                  "identifier": "x",
                  "type": "object",
                  "_syntaxKind": "identifier"
                },
                "statements": [
                  {
                    "expression": {
                      "value": "succeeded",
                      "type": "string",
                      "_syntaxKind": "literal"
                    },
                    "_syntaxKind": "return",
                    "stateName": "Return \"succeeded\""
                  }
                ],
                "_syntaxKind": "function"
              },
              "source": "arr.map(x => \"succeeded\")",
              "_syntaxKind": "asl-map-state"
            },
            "stateName": "Assign withinTry",
            "_syntaxKind": "variable-assignment"
          },
          {
            "expression": {
              "identifier": "",
              "indexExpression": {
                "value": 0,
                "type": "numeric",
                "_syntaxKind": "literal"
              },
              "lhs": {
                "identifier": "withinTry",
                "type": "object",
                "_syntaxKind": "identifier"
              },
              "type": "unknown",
              "_syntaxKind": "identifier"
            },
            "_syntaxKind": "return",
            "stateName": "Return withinTry[0]"
          }
        ],
        "_syntaxKind": "function"
      },
      "catch": [
        {
          "errorEquals": [
            "States.ALL"
          ],
          "block": {
            "statements": [
              {
                "expression": {
                  "value": "it failed",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                "_syntaxKind": "return",
                "stateName": "Return \"it failed\""
              }
            ],
            "_syntaxKind": "function"
          }
        }
      ],
      "source": "try {\n    const arr = [1]\n    const withinTry = arr.map(x => \"succeeded\");\n    return withinTry[0];\n  } catch {\n    return \"it failed\";\n  }",
      "_syntaxKind": "try"
    }
  ],
  "_syntaxKind": "statemachine"
}