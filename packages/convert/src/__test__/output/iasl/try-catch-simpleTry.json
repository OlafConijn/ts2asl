{
  "statements": [
    {
      "name": {
        "identifier": "result",
        "_syntaxKind": "identifier",
        "type": "string"
      },
      "expression": {
        "stateName": "Assign result",
        "parameters": {
          "value": "",
          "type": "string",
          "_syntaxKind": "literal"
        },
        "source": "result = \"\"",
        "_syntaxKind": "asl-pass-state"
      },
      "stateName": "Assign result",
      "_syntaxKind": "variable-assignment"
    },
    {
      "stateName": "Try Catch",
      "try": {
        "statements": [
          {
            "name": {
              "identifier": "result",
              "_syntaxKind": "identifier",
              "type": "string"
            },
            "expression": {
              "value": "succeeded",
              "type": "string",
              "_syntaxKind": "literal"
            },
            "stateName": "Assign result",
            "_syntaxKind": "variable-assignment"
          },
          {
            "stateName": "Throw Error",
            "cause": "fail",
            "error": "Error",
            "source": "throw new Error(\"fail\");",
            "_syntaxKind": "asl-fail-state"
          }
        ],
        "_syntaxKind": "function"
      },
      "catch": [
        {
          "errorEquals": [
            "States.ALL"
          ],
          "block": {
            "statements": [
              {
                "name": {
                  "identifier": "result",
                  "_syntaxKind": "identifier",
                  "type": "string"
                },
                "expression": {
                  "value": "failed",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                "stateName": "Assign result",
                "_syntaxKind": "variable-assignment"
              }
            ],
            "_syntaxKind": "function"
          }
        }
      ],
      "source": "try {\n    result = \"succeeded\";\n    throw new Error(\"fail\");\n  } catch {\n    result = \"failed\";\n  }",
      "_syntaxKind": "try"
    },
    {
      "expression": {
        "identifier": "result",
        "_syntaxKind": "identifier",
        "type": "string"
      },
      "_syntaxKind": "return",
      "stateName": "Return result"
    }
  ],
  "_syntaxKind": "statemachine"
}