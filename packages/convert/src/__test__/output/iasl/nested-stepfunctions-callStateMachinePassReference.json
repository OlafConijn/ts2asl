{
  "statements": [
    {
      "name": {
        "identifier": "args",
        "_syntaxKind": "identifier",
        "type": "object"
      },
      "expression": {
        "stateName": "Assign args",
        "parameters": {
          "properties": {
            "firstName": {
              "value": "Santa",
              "type": "string",
              "_syntaxKind": "literal"
            },
            "lastName": {
              "value": "Claus",
              "type": "string",
              "_syntaxKind": "literal"
            }
          },
          "_syntaxKind": "literal-object"
        },
        "source": "args = {firstName: \"Santa\", lastName: \"Claus\" }",
        "_syntaxKind": "asl-pass-state"
      },
      "stateName": "Assign args",
      "_syntaxKind": "variable-assignment"
    },
    {
      "name": {
        "identifier": "name",
        "_syntaxKind": "identifier",
        "type": "string"
      },
      "expression": {
        "stateName": "childStateMachine(args)",
        "integrationPattern": "sync",
        "stateMachineName": "[!state-machine[childStateMachine]name]",
        "stateMachineArn": "[!state-machine[childStateMachine]arn]",
        "parameters": {
          "identifier": "args",
          "_syntaxKind": "identifier",
          "type": "object"
        },
        "retry": [
          {
            "errorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "intervalSeconds": 2,
            "maxAttempts": 6,
            "backoffRate": 2
          }
        ],
        "source": "childStateMachine(args)",
        "_syntaxKind": "asl-invoke-state-machine"
      },
      "stateName": "Assign name",
      "_syntaxKind": "variable-assignment"
    },
    {
      "expression": {
        "identifier": "name",
        "_syntaxKind": "identifier",
        "type": "string"
      },
      "_syntaxKind": "return",
      "stateName": "Return name"
    }
  ],
  "_syntaxKind": "statemachine"
}