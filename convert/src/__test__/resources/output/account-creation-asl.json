{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "Pass"
    },
    "Pass": {
      "Type": "Pass",
      "Result": "sdfsd",
      "Comment": "source: console.log(\"sdfsd\")",
      "Next": "7: If (typeof input.numberOf ..."
    },
    "7: If (typeof input.numberOf ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "And": [
              {
                "Variable": "$.vars.numberOfNewAccount",
                "IsPresent": true
              },
              {
                "Variable": "$.vars.numberOfNewAccount",
                "IsNumeric": true
              }
            ]
          },
          "Next": "8: Assign input.numberOfNewA ..."
        }
      ],
      "Comment": "source: if (typeof input.numberOfNewAccount !== \"numbe ...",
      "Default": "10: If (typeof input.emailAcc ..."
    },
    "8: Assign input.numberOfNewA ...": {
      "Type": "Pass",
      "ResultPath": "$.vars.numberOfNewAccount",
      "Result": 20,
      "Next": "10: If (typeof input.emailAcc ..."
    },
    "10: If (typeof input.emailAcc ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "And": [
              {
                "Variable": "$.vars.emailAccountPrefix",
                "IsPresent": true
              },
              {
                "Variable": "$.vars.emailAccountPrefix",
                "IsString": true
              }
            ]
          },
          "Next": "12: Assign input.emailAccount ..."
        }
      ],
      "Comment": "source: if (typeof input.emailAccountPrefix !== \"strin ...",
      "Default": "14: If (typeof input.organiza ..."
    },
    "12: Assign input.emailAccount ...": {
      "Type": "Pass",
      "ResultPath": "$.vars.emailAccountPrefix",
      "Result": "aws+stedi-customer-account",
      "Next": "14: If (typeof input.organiza ..."
    },
    "14: If (typeof input.organiza ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "And": [
              {
                "Variable": "$.vars.organizationalUnitName",
                "IsPresent": true
              },
              {
                "Variable": "$.vars.organizationalUnitName",
                "IsString": true
              }
            ]
          },
          "Next": "16: Assign input.organization ..."
        }
      ],
      "Comment": "source: if (typeof input.organizationalUnitName !== \"s ...",
      "Default": "20: retrieveAccountCreationId ..."
    },
    "16: Assign input.organization ...": {
      "Type": "Pass",
      "ResultPath": "$.vars.organizationalUnitName",
      "Result": "customer-accounts",
      "Next": "20: retrieveAccountCreationId ..."
    },
    "20: retrieveAccountCreationId ...": {
      "Type": "Task",
      "ResultPath": "$.vars.customerOUIds",
      "Resource": "typescript:retrieveAccountCreationIds",
      "Parameters": {
        "organizationalUnitName.$": "$.vars.organizationalUnitName"
      },
      "Comment": "source: retrieveAccountCreationIds({ organizationalUni ...",
      "Next": "22: createListOfAccountsToBeC ..."
    },
    "22: createListOfAccountsToBeC ...": {
      "Type": "Task",
      "ResultPath": "$.vars.newAccounts",
      "Resource": "typescript:createListOfAccountsToBeCreated",
      "Parameters": {
        "prefix.$": "$.vars.emailAccountPrefix",
        "currentNumberOfAccounts.$": "$.vars.customerOUIds.currentNumberOfAccounts",
        "numberOfAccounts.$": "$.vars.numberOfNewAccount"
      },
      "Comment": "source: createListOfAccountsToBeCreated({ prefix: inpu ...",
      "Next": "22: Assign accounts"
    },
    "22: Assign accounts": {
      "Type": "Map",
      "ResultPath": "$.vars.accounts",
      "Iterator": {
        "StartAt": "CreateAccount",
        "States": {
          "CreateAccount": {
            "Type": "Task",
            "ResultPath": "$.vars.accountCreationResult",
            "Resource": "arn:aws:states:::aws-sdk:organizations:createAccount",
            "Parameters": {
              "parameters": {
                "Email.$": "$.vars.x.rootEmail",
                "AccountName.$": "$.vars.x.name"
              }
            },
            "Next": "24: Assign createdAccount"
          },
          "24: Assign createdAccount": {
            "Type": "Pass",
            "ResultPath": "$.vars.createdAccount",
            "InputPath": "$.vars.accountCreationResult.CreateAccountStatus",
            "Comment": "source: createdAccount = accountCreationResult.CreateA ...",
            "Next": "25: If (!createdAccount)"
          },
          "25: If (!createdAccount)": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.vars.createdAccount",
                "IsPresent": false,
                "Next": "26: Throw UnexpectedError"
              }
            ],
            "Comment": "source: if (!createdAccount) throw new UnexpectedError();",
            "Default": "Typescript Invoke checkAccountCreationDone"
          },
          "26: Throw UnexpectedError": {
            "Type": "Fail",
            "Error": "UnexpectedError",
            "Comment": "source: throw new UnexpectedError();"
          },
          "Typescript Invoke checkAccountCreationDone": {
            "Type": "Task",
            "ResultPath": "$.vars.result",
            "Resource": "typescript:checkAccountCreationDone",
            "InputPath": "$.vars.createdAccount",
            "Next": "38: moveAccount({ sourceParen ..."
          },
          "38: moveAccount({ sourceParen ...": {
            "Type": "Task",
            "Resource": "typescript:moveAccount",
            "Parameters": {
              "sourceParentId.$": "$.vars.customerOUIds.rootId",
              "destinationParentId.$": "$.vars.customerOUIds.customerAccountsOU",
              "accountId.$": "$.vars.result.AccountId"
            },
            "Next": "Pass_1"
          },
          "Pass_1": {
            "End": true,
            "Type": "Pass",
            "InputPath": "$.vars.result"
          }
        }
      },
      "ItemsPath": "$.vars.newAccounts",
      "Parameters": {
        "vars": {
          "x.$": "$$.Map.Item.Value",
          "customerOUIds.$": "$.vars.customerOUIds"
        }
      },
      "Next": "Pass_2"
    },
    "Pass_2": {
      "End": true,
      "Type": "Pass",
      "Parameters": {
        "accountIds.$": "$.vars.accounts"
      }
    }
  }
}