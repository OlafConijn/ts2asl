{
  "inputArgumentName": {
    "identifier": "input",
    "_syntaxKind": "identifier"
  },
  "contextArgumentName": {
    "identifier": "context",
    "_syntaxKind": "identifier"
  },
  "statements": [
    {
      "condition": {
        "operator": "not",
        "rhs": {
          "lhs": {
            "operand": {
              "identifier": "input.name",
              "type": "string",
              "_syntaxKind": "identifier"
            },
            "_syntaxKind": "type-of-expression"
          },
          "operator": "eq",
          "rhs": {
            "value": "string",
            "type": "string",
            "_syntaxKind": "literal"
          },
          "_syntaxKind": "binary-expression"
        },
        "_syntaxKind": "binary-expression"
      },
      "then": {
        "statements": [
          {
            "name": {
              "identifier": "input.name",
              "type": "string",
              "_syntaxKind": "identifier"
            },
            "expression": {
              "value": "fred",
              "type": "string",
              "_syntaxKind": "literal"
            },
            "_syntaxKind": "variable-assignment"
          }
        ],
        "_syntaxKind": "function"
      },
      "source": "if (typeof input.name !== \"string\") {\n    input.name = \"fred\";\n  }",
      "_syntaxKind": "if"
    },
    {
      "name": {
        "identifier": "x",
        "_syntaxKind": "identifier",
        "type": "object"
      },
      "expression": {
        "parameters": {
          "properties": {
            "name": {
              "identifier": "input.name",
              "type": "string",
              "_syntaxKind": "identifier"
            },
            "executionId": {
              "identifier": "context.execution.id",
              "type": "string",
              "_syntaxKind": "identifier"
            }
          },
          "_syntaxKind": "literal-object"
        },
        "source": "x = {\n    name: input.name,\n    executionId: context.execution.id\n  }",
        "_syntaxKind": "asl-pass-state"
      },
      "_syntaxKind": "variable-assignment"
    },
    {
      "name": {
        "identifier": "y",
        "_syntaxKind": "identifier",
        "type": "object"
      },
      "expression": {
        "parameters": {
          "properties": {
            "x": {
              "identifier": "x",
              "_syntaxKind": "identifier",
              "type": "object"
            },
            "startTime": {
              "identifier": "context.execution.startTime",
              "type": "string",
              "_syntaxKind": "identifier"
            },
            "func": {
              "arguments": [
                {
                  "identifier": "x",
                  "_syntaxKind": "identifier",
                  "type": "object"
                }
              ],
              "function": "asl.states.jsonToString",
              "_syntaxKind": "asl-intrinsic-function"
            },
            "number": {
              "arguments": [
                {
                  "value": "123",
                  "type": "string",
                  "_syntaxKind": "literal"
                }
              ],
              "function": "asl.states.stringToJson",
              "_syntaxKind": "asl-intrinsic-function"
            },
            "arr": {
              "arguments": [
                {
                  "value": 1,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                {
                  "value": 2,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                {
                  "value": 3,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                {
                  "value": 4,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                {
                  "value": 5,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                },
                {
                  "value": 6,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                }
              ],
              "function": "asl.states.array",
              "_syntaxKind": "asl-intrinsic-function"
            }
          },
          "_syntaxKind": "literal-object"
        },
        "source": "y = {\n    x,\n    startTime: context.execution.startTime,\n    func: asl.states.jsonToString(x),\n    number: asl.states.stringToJson(\"123\") as number,\n    arr: asl.states.array(1, 2, 3, 4, 5, 6),\n  }",
        "_syntaxKind": "asl-pass-state"
      },
      "_syntaxKind": "variable-assignment"
    },
    {
      "expression": {
        "identifier": "y",
        "_syntaxKind": "identifier",
        "type": "object"
      },
      "_syntaxKind": "return"
    }
  ],
  "_syntaxKind": "statemachine"
}