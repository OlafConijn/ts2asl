{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "If (typeof input.name !== ..."
    },
    "If (typeof input.name !== ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "And": [
              {
                "Variable": "$.vars.name",
                "IsPresent": true
              },
              {
                "Variable": "$.vars.name",
                "IsString": true
              }
            ]
          },
          "Next": "Assign Name"
        }
      ],
      "Comment": "source: if (typeof input.name !== \"string\") { input.na ...",
      "Default": "Assign X"
    },
    "Assign Name": {
      "Type": "Pass",
      "ResultPath": "$.vars.name",
      "Result": "fred",
      "Next": "Assign X"
    },
    "Assign X": {
      "Type": "Pass",
      "ResultPath": "$.vars.x",
      "Parameters": {
        "name.$": "$.vars.name",
        "executionId.$": "$$.Execution.Id"
      },
      "Comment": "source: x = { name: input.name, executionId: context.e ...",
      "Next": "Assign Y"
    },
    "Assign Y": {
      "Type": "Pass",
      "ResultPath": "$.vars.y",
      "Parameters": {
        "x.$": "$.vars.x",
        "somethingLiteral": [
          "one",
          2,
          "three"
        ],
        "startTime.$": "$$.Execution.StartTime",
        "func.$": "States.JsonToString($.vars.x)",
        "number.$": "States.StringToJson('123')",
        "arr.$": "States.Array(1, 2, 3, 4, 5, 6)"
      },
      "Next": "Pass"
    },
    "Pass": {
      "Type": "Pass",
      "InputPath": "$.vars.y",
      "Next": "Succeed"
    },
    "Succeed": {
      "Type": "Succeed"
    }
  }
}