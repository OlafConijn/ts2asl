{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "4: If (typeof input.delayInS ..."
    },
    "4: If (typeof input.delayInS ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "And": [
              {
                "Variable": "$.vars.delayInSeconds",
                "IsPresent": true
              },
              {
                "Variable": "$.vars.delayInSeconds",
                "IsNumeric": true
              }
            ]
          },
          "Next": "6: Assign input.delayInSeconds"
        }
      ],
      "Comment": "source: if (typeof input.delayInSeconds !== \"number\")  ...",
      "Default": "8: If (input.delayInSeconds ..."
    },
    "6: Assign input.delayInSeconds": {
      "Type": "Pass",
      "ResultPath": "$.vars.delayInSeconds",
      "Result": 5,
      "Next": "8: If (input.delayInSeconds ..."
    },
    "8: If (input.delayInSeconds ...": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.vars.delayInSeconds",
              "NumericGreaterThan": 10
            },
            {
              "Variable": "$.vars.delayInSeconds",
              "NumericLessThan": 1
            }
          ],
          "Next": "10: Throw ValidationError"
        }
      ],
      "Comment": "source: if (input.delayInSeconds > 10 || input.delayIn ...",
      "Default": "Wait"
    },
    "10: Throw ValidationError": {
      "Type": "Fail",
      "Error": "ValidationError",
      "Cause": "delay in seconds must be numeric value no greater than 10 and no smaller than 1",
      "Comment": "source: throw new ValidationError(\"delay in seconds mu ..."
    },
    "Wait": {
      "Type": "Wait",
      "SecondsPath": "$.vars.delayInSeconds",
      "End": true
    }
  }
}