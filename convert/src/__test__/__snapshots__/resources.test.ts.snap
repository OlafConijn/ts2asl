// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when converting test-resources 1`] = `
"import * as asl from \\"@ts2asl/asl-lib\\";
import { handler as ReplayPrefixerHandler } from \\"../../functions/replay/prefixer\\";

const replayPrefixer = asl.deploy.asLambda((input: StateMachineInput) => { return [\\"\\"] });

//option 1: native typescript
// export const main = asl.deploy.asStateMachine(async (input: StateMachineInput) => {
//   const result = await replayPrefixer(input);
//   for (const prefix of result) {
//     await asl.nativeSfnStartExecution({
//       parameters: {
//         input: asl.states.format(\\"{}\\", prefix),
//         stateMachineArn: asl.deploy.getParameter(\\"stateMachineArn\\"),
//       },
//     });
//   }
// });

//option 2: asl lib typescript
export const main = asl.deploy.asStateMachine(async (input: StateMachineInput) =>{
    const result = asl.typescriptInvoke({
        name: \\"22: replayPrefixer(input)\\",
        resource: replayPrefixer,
        parameters: () => input,
        comment: \\"replayPrefixer(input)\\"
    });
    asl.map({
        maxConcurrency: 5,
        items: result,
        iterator: (prefix) => {
            asl.nativeSfnStartExecution({
                parameters: {
                    input: asl.states.format(\\"{}\\", prefix),
                    stateMachineArn: asl.deploy.getParameter(\\"stateMachineArn\\"),
                },
            });
        },
    });
});

interface StateMachineInput {
  startDate: string;
  endDate?: string;
}
"
`;

exports[`when converting test-resources 2`] = `
Object {
  "_syntaxKind": "statemachine",
  "contextArgumentName": undefined,
  "inputArgumentName": Object {
    "_syntaxKind": "identifier",
    "identifier": "input",
  },
  "statements": Array [
    Object {
      "_syntaxKind": "variable-assignment",
      "expression": Object {
        "_syntaxKind": "asl-task-state",
        "catch": Array [],
        "parameters": Object {
          "_syntaxKind": "identifier",
          "identifier": "input",
          "type": "object",
        },
        "resource": "typescript:replayPrefixer",
        "retry": Array [],
        "source": "replayPrefixer(input)",
        "stateName": "22: replayPrefixer(input)",
      },
      "name": Object {
        "_syntaxKind": "identifier",
        "identifier": "result",
        "type": "object",
      },
      "stateName": "21: Assign result",
    },
    Object {
      "_syntaxKind": "asl-map-state",
      "catch": Array [],
      "items": Object {
        "_syntaxKind": "identifier",
        "identifier": "result",
        "type": "object",
      },
      "iterator": Object {
        "_syntaxKind": "function",
        "inputArgumentName": Object {
          "_syntaxKind": "identifier",
          "identifier": "prefix",
        },
        "statements": Array [
          Object {
            "_syntaxKind": "asl-task-state",
            "parameters": Object {
              "_syntaxKind": "literal-object",
              "properties": Object {
                "input": Object {
                  "_syntaxKind": "asl-intrinsic-function",
                  "arguments": Array [
                    Object {
                      "_syntaxKind": "literal",
                      "type": "string",
                      "value": "{}",
                    },
                    Object {
                      "_syntaxKind": "identifier",
                      "identifier": "prefix",
                      "type": "string",
                    },
                  ],
                  "function": "asl.states.format",
                },
                "stateMachineArn": Object {
                  "_syntaxKind": "literal",
                  "type": "string",
                  "value": "arn:something.something",
                },
              },
            },
            "resource": "arn:aws:states:::aws-sdk:sfn:startExecution",
            "stateName": "StartExecution",
          },
        ],
      },
      "maxConcurrency": 5,
      "retry": Array [],
    },
  ],
}
`;

exports[`when converting test-resources 3`] = `
Object {
  "StartAt": "Initialize",
  "States": Object {
    "22: replayPrefixer(input)": Object {
      "Catch": Array [],
      "Comment": "source: replayPrefixer(input)",
      "HeartbeatSeconds": undefined,
      "InputPath": "$.vars",
      "Next": "Map",
      "Resource": "typescript:replayPrefixer",
      "ResultPath": "$.vars.result",
      "Retry": Array [],
      "TimeoutSeconds": undefined,
      "Type": "Task",
    },
    "Initialize": Object {
      "Next": "22: replayPrefixer(input)",
      "Parameters": Object {
        "vars.$": "$$.Execution.Input",
      },
      "ResultPath": "$",
      "Type": "Pass",
    },
    "Map": Object {
      "Comment": undefined,
      "End": true,
      "ItemsPath": "$.vars.result",
      "Iterator": Object {
        "StartAt": "StartExecution",
        "States": Object {
          "StartExecution": Object {
            "Catch": undefined,
            "Comment": undefined,
            "End": true,
            "HeartbeatSeconds": undefined,
            "Parameters": Object {
              "input.$": "States.Format('{}', $.vars.prefix)",
              "stateMachineArn": "arn:something.something",
            },
            "Resource": "arn:aws:states:::aws-sdk:sfn:startExecution",
            "Retry": undefined,
            "TimeoutSeconds": undefined,
            "Type": "Task",
          },
        },
      },
      "MaxConcurrency": 5,
      "Parameters": Object {
        "vars": Object {
          "prefix.$": "$$.Map.Item.Value",
        },
      },
      "ResultPath": "$.lastResult",
      "Type": "Map",
    },
  },
}
`;
