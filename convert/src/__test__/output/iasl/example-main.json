{
  "inputArgumentName": {
    "identifier": "_input",
    "_syntaxKind": "identifier"
  },
  "contextArgumentName": {
    "identifier": "_context",
    "_syntaxKind": "identifier"
  },
  "statements": [
    {
      "name": {
        "identifier": "thresholds",
        "_syntaxKind": "identifier",
        "type": "object"
      },
      "expression": {
        "stateName": "Assign thresholds",
        "parameters": {
          "elements": [
            {
              "properties": {
                "metric": {
                  "value": "mappings.requests",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                "ceiling": {
                  "value": 100,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                }
              },
              "_syntaxKind": "literal-object"
            },
            {
              "properties": {
                "metric": {
                  "value": "mappings.requests",
                  "type": "string",
                  "_syntaxKind": "literal"
                },
                "ceiling": {
                  "value": 1000,
                  "type": "numeric",
                  "_syntaxKind": "literal"
                }
              },
              "_syntaxKind": "literal-object"
            }
          ],
          "_syntaxKind": "literal-array"
        },
        "source": "thresholds = [\n    {\n      \"metric\": \"mappings.requests\",\n      \"ceiling\": 100\n    },\n    {\n      \"metric\": \"mappings.requests\",\n      \"ceiling\": 1000\n    }\n  ]",
        "_syntaxKind": "asl-pass-state"
      },
      "stateName": "Assign thresholds",
      "_syntaxKind": "variable-assignment"
    },
    {
      "name": {
        "identifier": "lastEvaluatedKey",
        "_syntaxKind": "identifier",
        "type": "unknown"
      },
      "expression": {
        "stateName": "Assign lastEvaluatedKey",
        "parameters": {
          "value": null,
          "type": "null",
          "_syntaxKind": "literal"
        },
        "source": "lastEvaluatedKey: any | undefined = undefined",
        "_syntaxKind": "asl-pass-state"
      },
      "stateName": "Assign lastEvaluatedKey",
      "_syntaxKind": "variable-assignment"
    },
    {
      "stateName": "Do While (lastEvaluatedKey)",
      "condition": {
        "operator": "is-truthy",
        "rhs": {
          "identifier": "lastEvaluatedKey",
          "_syntaxKind": "identifier",
          "type": "unknown"
        },
        "_syntaxKind": "binary-expression"
      },
      "while": {
        "statements": [
          {
            "name": {
              "identifier": "scan",
              "_syntaxKind": "identifier",
              "type": "object"
            },
            "expression": {
              "stateName": "Scan",
              "resource": "arn:aws:states:::aws-sdk:dynamodb:scan",
              "parameters": {
                "properties": {
                  "TableName": {
                    "value": "MyStorage",
                    "type": "string",
                    "_syntaxKind": "literal"
                  },
                  "Limit": {
                    "value": 1,
                    "type": "numeric",
                    "_syntaxKind": "literal"
                  },
                  "ExclusiveStartKey": {
                    "identifier": "lastEvaluatedKey",
                    "_syntaxKind": "identifier",
                    "type": "unknown"
                  }
                },
                "_syntaxKind": "literal-object"
              },
              "_syntaxKind": "asl-task-state"
            },
            "stateName": "Assign scan",
            "_syntaxKind": "variable-assignment"
          },
          {
            "stateName": "For item Of scan.Items",
            "items": {
              "identifier": "scan.Items",
              "type": "object",
              "_syntaxKind": "identifier"
            },
            "iterator": {
              "inputArgumentName": {
                "identifier": "item",
                "_syntaxKind": "identifier"
              },
              "statements": [
                {
                  "stateName": "For threshold Of thresholds",
                  "items": {
                    "identifier": "thresholds",
                    "_syntaxKind": "identifier",
                    "type": "object"
                  },
                  "iterator": {
                    "inputArgumentName": {
                      "identifier": "threshold",
                      "_syntaxKind": "identifier"
                    },
                    "statements": [
                      {
                        "name": {
                          "identifier": "numericLastSentOnValue",
                          "_syntaxKind": "identifier",
                          "type": "numeric"
                        },
                        "expression": {
                          "arguments": [
                            {
                              "identifier": "item.lastSentOnValue.N",
                              "type": "string",
                              "_syntaxKind": "identifier"
                            }
                          ],
                          "function": "asl.states.stringToJson",
                          "_syntaxKind": "asl-intrinsic-function"
                        },
                        "stateName": "Assign numericLastSentOnValue",
                        "_syntaxKind": "variable-assignment"
                      },
                      {
                        "name": {
                          "identifier": "numericTotal",
                          "_syntaxKind": "identifier",
                          "type": "numeric"
                        },
                        "expression": {
                          "arguments": [
                            {
                              "identifier": "item.total.N",
                              "type": "string",
                              "_syntaxKind": "identifier"
                            }
                          ],
                          "function": "asl.states.stringToJson",
                          "_syntaxKind": "asl-intrinsic-function"
                        },
                        "stateName": "Assign numericTotal",
                        "_syntaxKind": "variable-assignment"
                      },
                      {
                        "stateName": "If ((item.sk.S === thresh ...",
                        "condition": {
                          "lhs": {
                            "lhs": {
                              "lhs": {
                                "lhs": {
                                  "lhs": {
                                    "identifier": "item.sk.S",
                                    "type": "string",
                                    "_syntaxKind": "identifier"
                                  },
                                  "operator": "eq",
                                  "rhs": {
                                    "identifier": "threshold.metric",
                                    "type": "string",
                                    "_syntaxKind": "identifier"
                                  },
                                  "_syntaxKind": "binary-expression"
                                },
                                "operator": "and",
                                "rhs": {
                                  "lhs": {
                                    "identifier": "threshold.ceiling",
                                    "type": "numeric",
                                    "_syntaxKind": "identifier"
                                  },
                                  "operator": "lte",
                                  "rhs": {
                                    "identifier": "numericTotal",
                                    "_syntaxKind": "identifier",
                                    "type": "numeric"
                                  },
                                  "_syntaxKind": "binary-expression"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "operator": "and",
                              "rhs": {
                                "lhs": {
                                  "identifier": "threshold.ceiling",
                                  "type": "numeric",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "gt",
                                "rhs": {
                                  "identifier": "numericLastSentOnValue",
                                  "_syntaxKind": "identifier",
                                  "type": "numeric"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "and",
                            "rhs": {
                              "lhs": {
                                "operator": "not",
                                "rhs": {
                                  "operator": "is-truthy",
                                  "rhs": {
                                    "identifier": "item.lastBeginDateValue.S",
                                    "type": "string",
                                    "_syntaxKind": "identifier"
                                  },
                                  "_syntaxKind": "binary-expression"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "operator": "or",
                              "rhs": {
                                "lhs": {
                                  "identifier": "item.beginDate.S",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "eq",
                                "rhs": {
                                  "identifier": "item.lastBeginDateValue.S",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "operator": "or",
                          "rhs": {
                            "lhs": {
                              "lhs": {
                                "lhs": {
                                  "identifier": "item.sk.S",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "eq",
                                "rhs": {
                                  "identifier": "threshold.metric",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "operator": "and",
                              "rhs": {
                                "lhs": {
                                  "identifier": "threshold.ceiling",
                                  "type": "numeric",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "lte",
                                "rhs": {
                                  "identifier": "numericTotal",
                                  "_syntaxKind": "identifier",
                                  "type": "numeric"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "operator": "and",
                            "rhs": {
                              "lhs": {
                                "operator": "not",
                                "rhs": {
                                  "operator": "is-truthy",
                                  "rhs": {
                                    "identifier": "item.lastBeginDateValue.S",
                                    "type": "string",
                                    "_syntaxKind": "identifier"
                                  },
                                  "_syntaxKind": "binary-expression"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "operator": "or",
                              "rhs": {
                                "lhs": {
                                  "identifier": "item.beginDate.S",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "operator": "eq",
                                "rhs": {
                                  "identifier": "item.lastBeginDateValue.S",
                                  "type": "string",
                                  "_syntaxKind": "identifier"
                                },
                                "_syntaxKind": "binary-expression"
                              },
                              "_syntaxKind": "binary-expression"
                            },
                            "_syntaxKind": "binary-expression"
                          },
                          "_syntaxKind": "binary-expression"
                        },
                        "then": {
                          "statements": [
                            {
                              "name": {
                                "identifier": "detail",
                                "_syntaxKind": "identifier",
                                "type": "object"
                              },
                              "expression": {
                                "stateName": "Assign detail",
                                "parameters": {
                                  "properties": {
                                    "account_id": {
                                      "identifier": "item.pk",
                                      "type": "object",
                                      "_syntaxKind": "identifier"
                                    },
                                    "threshold": {
                                      "identifier": "threshold",
                                      "_syntaxKind": "identifier",
                                      "type": "object"
                                    }
                                  },
                                  "_syntaxKind": "literal-object"
                                },
                                "source": "detail = {\n            account_id: item.pk,\n            threshold: threshold\n          }",
                                "_syntaxKind": "asl-pass-state"
                              },
                              "stateName": "Assign detail",
                              "_syntaxKind": "variable-assignment"
                            },
                            {
                              "stateName": "PutEvents",
                              "resource": "arn:aws:states:::aws-sdk:eventbridge:putEvents",
                              "parameters": {
                                "properties": {
                                  "Entries": {
                                    "elements": [
                                      {
                                        "properties": {
                                          "Detail": {
                                            "arguments": [
                                              {
                                                "identifier": "detail",
                                                "_syntaxKind": "identifier",
                                                "type": "object"
                                              }
                                            ],
                                            "function": "asl.states.jsonToString",
                                            "_syntaxKind": "asl-intrinsic-function"
                                          },
                                          "DetailType": {
                                            "value": "xxx.detail.type",
                                            "type": "string",
                                            "_syntaxKind": "literal"
                                          },
                                          "EventBusName": {
                                            "value": "default",
                                            "type": "string",
                                            "_syntaxKind": "literal"
                                          },
                                          "Source": {
                                            "value": "zzz.my.source",
                                            "type": "string",
                                            "_syntaxKind": "literal"
                                          }
                                        },
                                        "_syntaxKind": "literal-object"
                                      }
                                    ],
                                    "_syntaxKind": "literal-array"
                                  }
                                },
                                "_syntaxKind": "literal-object"
                              },
                              "_syntaxKind": "asl-task-state"
                            },
                            {
                              "stateName": "UpdateItem",
                              "resource": "arn:aws:states:::aws-sdk:dynamodb:updateItem",
                              "parameters": {
                                "properties": {
                                  "TableName": {
                                    "value": "MyStorage",
                                    "type": "string",
                                    "_syntaxKind": "literal"
                                  },
                                  "Key": {
                                    "properties": {
                                      "pk": {
                                        "identifier": "item.pk",
                                        "type": "object",
                                        "_syntaxKind": "identifier"
                                      },
                                      "sk": {
                                        "identifier": "item.sk",
                                        "type": "object",
                                        "_syntaxKind": "identifier"
                                      }
                                    },
                                    "_syntaxKind": "literal-object"
                                  },
                                  "ConditionExpression": {
                                    "value": "lastSentOnValue < :newLastSentOnValue OR lastBeginDateValue <> :newLastBeginDateValue",
                                    "type": "string",
                                    "_syntaxKind": "literal"
                                  },
                                  "UpdateExpression": {
                                    "value": "SET lastSentOnValue = :newLastSentOnValue, lastBeginDateValue = :newLastBeginDateValue",
                                    "type": "string",
                                    "_syntaxKind": "literal"
                                  },
                                  "ExpressionAttributeValues": {
                                    "properties": {
                                      ":newLastSentOnValue": {
                                        "properties": {
                                          "N": {
                                            "identifier": "item.total.N",
                                            "type": "string",
                                            "_syntaxKind": "identifier"
                                          }
                                        },
                                        "_syntaxKind": "literal-object"
                                      },
                                      ":newLastBeginDateValue": {
                                        "properties": {
                                          "S": {
                                            "identifier": "item.beginDate.S",
                                            "type": "string",
                                            "_syntaxKind": "identifier"
                                          }
                                        },
                                        "_syntaxKind": "literal-object"
                                      }
                                    },
                                    "_syntaxKind": "literal-object"
                                  }
                                },
                                "_syntaxKind": "literal-object"
                              },
                              "_syntaxKind": "asl-task-state"
                            }
                          ],
                          "_syntaxKind": "function"
                        },
                        "_syntaxKind": "if"
                      }
                    ],
                    "_syntaxKind": "function"
                  },
                  "_syntaxKind": "asl-map-state"
                }
              ],
              "_syntaxKind": "function"
            },
            "_syntaxKind": "asl-map-state"
          },
          {
            "name": {
              "identifier": "lastEvaluatedKey",
              "_syntaxKind": "identifier",
              "type": "unknown"
            },
            "expression": {
              "identifier": "scan.LastEvaluatedKey",
              "type": "object",
              "_syntaxKind": "identifier"
            },
            "stateName": "Assign lastEvaluatedKey",
            "_syntaxKind": "variable-assignment"
          }
        ],
        "_syntaxKind": "function"
      },
      "_syntaxKind": "do-while"
    }
  ],
  "_syntaxKind": "statemachine"
}