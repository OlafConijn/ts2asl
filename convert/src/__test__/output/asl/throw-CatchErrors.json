{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "Parallel"
    },
    "Parallel": {
      "Branches": [
        {
          "StartAt": "Throw UnexpectedError",
          "States": {
            "Throw UnexpectedError": {
              "Type": "Fail",
              "Error": "UnexpectedError",
              "Cause": "bad luck!",
              "Comment": "source: throw new UnexpectedError(\"bad luck!\")"
            }
          }
        }
      ],
      "Type": "Parallel",
      "Catch": [
        {
          "Next": "Parallel_1",
          "ErrorEquals": [
            "UnexpectedError"
          ],
          "ResultPath": "$.vars.error"
        }
      ],
      "Retry": [
        {
          "ErrorEquals": [
            "RetryableError"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "End": true
    },
    "Parallel_1": {
      "Type": "Parallel",
      "OutputPath": "$[0]",
      "Branches": [
        {
          "StartAt": "Log (???)",
          "States": {
            "Log (???)": {
              "Type": "Pass",
              "ResultPath": "$.lastResult",
              "Parameters": {
                "value.$": "States.Format('cause {}', $.vars.error.Cause)"
              },
              "Comment": "source: result of an expression cannot be placed in In ...",
              "Next": "Log (???)_1"
            },
            "Log (???)_1": {
              "Type": "Pass",
              "ResultPath": "$.lastResult",
              "InputPath": "$.lastResult.value",
              "Next": "Log (???)_2"
            },
            "Log (???)_2": {
              "Type": "Pass",
              "ResultPath": "$.lastResult",
              "Parameters": {
                "value.$": "States.Format('message {}', $.vars.error.Error)"
              },
              "Comment": "source: result of an expression cannot be placed in In ...",
              "Next": "Log (???)_3"
            },
            "Log (???)_3": {
              "Type": "Pass",
              "ResultPath": "$.lastResult",
              "InputPath": "$.lastResult.value",
              "End": true
            }
          }
        }
      ],
      "End": true
    }
  }
}