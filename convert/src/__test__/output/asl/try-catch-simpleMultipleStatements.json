{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "Return"
    },
    "Return": {
      "Type": "Pass",
      "InputPath": "$.vars[0]",
      "Next": "Parallel"
    },
    "Parallel": {
      "Type": "Parallel",
      "ResultPath": "$.vars",
      "Parameters": {
        "vars.$": "$.vars"
      },
      "Branches": [
        {
          "StartAt": "lambda()",
          "States": {
            "lambda()": {
              "Type": "Task",
              "ResultPath": "$.vars.withinTry",
              "Resource": "[!lambda[lambda]arn]",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "Comment": "source: lambda()",
              "Next": "Return withinTry"
            },
            "Return withinTry": {
              "End": true,
              "Type": "Pass",
              "InputPath": "$.vars.withinTry"
            }
          }
        }
      ],
      "Catch": [
        {
          "Next": "Return \"it failed\"",
          "ErrorEquals": [
            "States.ALL"
          ]
        }
      ],
      "End": true
    },
    "Return \"it failed\"": {
      "Type": "Pass",
      "Result": "it failed",
      "End": true
    }
  }
}