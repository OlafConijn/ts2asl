{
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$",
      "Parameters": {
        "vars.$": "$$.Execution.Input"
      },
      "Next": "Evaluate States.Array(1, ..."
    },
    "Evaluate States.Array(1, ...": {
      "Type": "Pass",
      "ResultPath": "$.tmp.eval",
      "Parameters": {
        "value.$": "States.Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)"
      },
      "Comment": "source: result of an expression cannot be placed in In ...",
      "Next": "Assign myArray"
    },
    "Assign myArray": {
      "Type": "Pass",
      "ResultPath": "$.vars.myArray",
      "InputPath": "$.tmp.eval.value",
      "Next": "Evaluate States.JsonToStr ..."
    },
    "Evaluate States.JsonToStr ...": {
      "Type": "Pass",
      "ResultPath": "$.tmp.eval",
      "Parameters": {
        "value.$": "States.JsonToString($.vars.myArray)"
      },
      "Comment": "source: result of an expression cannot be placed in In ...",
      "Next": "Assign mySerializedArray"
    },
    "Assign mySerializedArray": {
      "Type": "Pass",
      "ResultPath": "$.vars.mySerializedArray",
      "InputPath": "$.tmp.eval.value",
      "Next": "Evaluate States.StringToJ ..."
    },
    "Evaluate States.StringToJ ...": {
      "Type": "Pass",
      "ResultPath": "$.tmp.eval",
      "Parameters": {
        "value.$": "States.StringToJson($.vars.mySerializedArray)"
      },
      "Comment": "source: result of an expression cannot be placed in In ...",
      "Next": "Assign myArray_1"
    },
    "Assign myArray_1": {
      "Type": "Pass",
      "ResultPath": "$.vars.myArray",
      "InputPath": "$.tmp.eval.value",
      "Next": "Return myArray"
    },
    "Return myArray": {
      "End": true,
      "Type": "Pass",
      "InputPath": "$.vars.myArray"
    }
  },
  "Comment": "ASL Generated using ts2asl version 0.1.29."
}