// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-connect' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AssociateApprovedOriginCommandInput, AssociateApprovedOriginCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateApprovedOriginCommand";
    import { AssociateBotCommandInput, AssociateBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateBotCommand";
    import { AssociateDefaultVocabularyCommandInput, AssociateDefaultVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateDefaultVocabularyCommand";
    import { AssociateInstanceStorageConfigCommandInput, AssociateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateInstanceStorageConfigCommand";
    import { AssociateLambdaFunctionCommandInput, AssociateLambdaFunctionCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLambdaFunctionCommand";
    import { AssociateLexBotCommandInput, AssociateLexBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLexBotCommand";
    import { AssociatePhoneNumberContactFlowCommandInput, AssociatePhoneNumberContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociatePhoneNumberContactFlowCommand";
    import { AssociateQueueQuickConnectsCommandInput, AssociateQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateQueueQuickConnectsCommand";
    import { AssociateRoutingProfileQueuesCommandInput, AssociateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateRoutingProfileQueuesCommand";
    import { AssociateSecurityKeyCommandInput, AssociateSecurityKeyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateSecurityKeyCommand";
    import { ClaimPhoneNumberCommandInput, ClaimPhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ClaimPhoneNumberCommand";
    import { CreateAgentStatusCommandInput, CreateAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateAgentStatusCommand";
    import { CreateContactFlowCommandInput, CreateContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowCommand";
    import { CreateContactFlowModuleCommandInput, CreateContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowModuleCommand";
    import { CreateHoursOfOperationCommandInput, CreateHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateHoursOfOperationCommand";
    import { CreateInstanceCommandInput, CreateInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateInstanceCommand";
    import { CreateIntegrationAssociationCommandInput, CreateIntegrationAssociationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateIntegrationAssociationCommand";
    import { CreateQueueCommandInput, CreateQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQueueCommand";
    import { CreateQuickConnectCommandInput, CreateQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQuickConnectCommand";
    import { CreateRoutingProfileCommandInput, CreateRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateRoutingProfileCommand";
    import { CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateSecurityProfileCommand";
    import { CreateTaskTemplateCommandInput, CreateTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateTaskTemplateCommand";
    import { CreateUseCaseCommandInput, CreateUseCaseCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUseCaseCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserCommand";
    import { CreateUserHierarchyGroupCommandInput, CreateUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserHierarchyGroupCommand";
    import { CreateVocabularyCommandInput, CreateVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateVocabularyCommand";
    import { DeleteContactFlowCommandInput, DeleteContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowCommand";
    import { DeleteContactFlowModuleCommandInput, DeleteContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowModuleCommand";
    import { DeleteHoursOfOperationCommandInput, DeleteHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteHoursOfOperationCommand";
    import { DeleteInstanceCommandInput, DeleteInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteInstanceCommand";
    import { DeleteIntegrationAssociationCommandInput, DeleteIntegrationAssociationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteIntegrationAssociationCommand";
    import { DeleteQuickConnectCommandInput, DeleteQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteQuickConnectCommand";
    import { DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteSecurityProfileCommand";
    import { DeleteTaskTemplateCommandInput, DeleteTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteTaskTemplateCommand";
    import { DeleteUseCaseCommandInput, DeleteUseCaseCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUseCaseCommand";
    import { DeleteUserCommandInput, DeleteUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserCommand";
    import { DeleteUserHierarchyGroupCommandInput, DeleteUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserHierarchyGroupCommand";
    import { DeleteVocabularyCommandInput, DeleteVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteVocabularyCommand";
    import { DescribeAgentStatusCommandInput, DescribeAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeAgentStatusCommand";
    import { DescribeContactCommandInput, DescribeContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactCommand";
    import { DescribeContactFlowCommandInput, DescribeContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowCommand";
    import { DescribeContactFlowModuleCommandInput, DescribeContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowModuleCommand";
    import { DescribeHoursOfOperationCommandInput, DescribeHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeHoursOfOperationCommand";
    import { DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceAttributeCommand";
    import { DescribeInstanceCommandInput, DescribeInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceCommand";
    import { DescribeInstanceStorageConfigCommandInput, DescribeInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceStorageConfigCommand";
    import { DescribePhoneNumberCommandInput, DescribePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribePhoneNumberCommand";
    import { DescribeQueueCommandInput, DescribeQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQueueCommand";
    import { DescribeQuickConnectCommandInput, DescribeQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQuickConnectCommand";
    import { DescribeRoutingProfileCommandInput, DescribeRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeRoutingProfileCommand";
    import { DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeSecurityProfileCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserCommand";
    import { DescribeUserHierarchyGroupCommandInput, DescribeUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyGroupCommand";
    import { DescribeUserHierarchyStructureCommandInput, DescribeUserHierarchyStructureCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyStructureCommand";
    import { DescribeVocabularyCommandInput, DescribeVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeVocabularyCommand";
    import { DisassociateApprovedOriginCommandInput, DisassociateApprovedOriginCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateApprovedOriginCommand";
    import { DisassociateBotCommandInput, DisassociateBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateBotCommand";
    import { DisassociateInstanceStorageConfigCommandInput, DisassociateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateInstanceStorageConfigCommand";
    import { DisassociateLambdaFunctionCommandInput, DisassociateLambdaFunctionCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLambdaFunctionCommand";
    import { DisassociateLexBotCommandInput, DisassociateLexBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLexBotCommand";
    import { DisassociatePhoneNumberContactFlowCommandInput, DisassociatePhoneNumberContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociatePhoneNumberContactFlowCommand";
    import { DisassociateQueueQuickConnectsCommandInput, DisassociateQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateQueueQuickConnectsCommand";
    import { DisassociateRoutingProfileQueuesCommandInput, DisassociateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateRoutingProfileQueuesCommand";
    import { DisassociateSecurityKeyCommandInput, DisassociateSecurityKeyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateSecurityKeyCommand";
    import { GetContactAttributesCommandInput, GetContactAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetContactAttributesCommand";
    import { GetCurrentMetricDataCommandInput, GetCurrentMetricDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentMetricDataCommand";
    import { GetCurrentUserDataCommandInput, GetCurrentUserDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentUserDataCommand";
    import { GetFederationTokenCommandInput, GetFederationTokenCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetFederationTokenCommand";
    import { GetMetricDataCommandInput, GetMetricDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetMetricDataCommand";
    import { GetTaskTemplateCommandInput, GetTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetTaskTemplateCommand";
    import { ListAgentStatusesCommandInput, ListAgentStatusesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListAgentStatusesCommand";
    import { ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListApprovedOriginsCommand";
    import { ListBotsCommandInput, ListBotsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListBotsCommand";
    import { ListContactFlowModulesCommandInput, ListContactFlowModulesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowModulesCommand";
    import { ListContactFlowsCommandInput, ListContactFlowsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowsCommand";
    import { ListContactReferencesCommandInput, ListContactReferencesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactReferencesCommand";
    import { ListDefaultVocabulariesCommandInput, ListDefaultVocabulariesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListDefaultVocabulariesCommand";
    import { ListHoursOfOperationsCommandInput, ListHoursOfOperationsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListHoursOfOperationsCommand";
    import { ListInstanceAttributesCommandInput, ListInstanceAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceAttributesCommand";
    import { ListInstancesCommandInput, ListInstancesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstancesCommand";
    import { ListInstanceStorageConfigsCommandInput, ListInstanceStorageConfigsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceStorageConfigsCommand";
    import { ListIntegrationAssociationsCommandInput, ListIntegrationAssociationsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListIntegrationAssociationsCommand";
    import { ListLambdaFunctionsCommandInput, ListLambdaFunctionsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLambdaFunctionsCommand";
    import { ListLexBotsCommandInput, ListLexBotsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLexBotsCommand";
    import { ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersCommand";
    import { ListPhoneNumbersV2CommandInput, ListPhoneNumbersV2CommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersV2Command";
    import { ListPromptsCommandInput, ListPromptsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPromptsCommand";
    import { ListQueueQuickConnectsCommandInput, ListQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueueQuickConnectsCommand";
    import { ListQueuesCommandInput, ListQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueuesCommand";
    import { ListQuickConnectsCommandInput, ListQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQuickConnectsCommand";
    import { ListRoutingProfileQueuesCommandInput, ListRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfileQueuesCommand";
    import { ListRoutingProfilesCommandInput, ListRoutingProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfilesCommand";
    import { ListSecurityKeysCommandInput, ListSecurityKeysCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityKeysCommand";
    import { ListSecurityProfilePermissionsCommandInput, ListSecurityProfilePermissionsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilePermissionsCommand";
    import { ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTagsForResourceCommand";
    import { ListTaskTemplatesCommandInput, ListTaskTemplatesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTaskTemplatesCommand";
    import { ListUseCasesCommandInput, ListUseCasesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUseCasesCommand";
    import { ListUserHierarchyGroupsCommandInput, ListUserHierarchyGroupsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUserHierarchyGroupsCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUsersCommand";
    import { PutUserStatusCommandInput, PutUserStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/PutUserStatusCommand";
    import { ReleasePhoneNumberCommandInput, ReleasePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ReleasePhoneNumberCommand";
    import { ResumeContactRecordingCommandInput, ResumeContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ResumeContactRecordingCommand";
    import { SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchAvailablePhoneNumbersCommand";
    import { SearchUsersCommandInput, SearchUsersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchUsersCommand";
    import { SearchVocabulariesCommandInput, SearchVocabulariesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchVocabulariesCommand";
    import { StartChatContactCommandInput, StartChatContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartChatContactCommand";
    import { StartContactRecordingCommandInput, StartContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactRecordingCommand";
    import { StartContactStreamingCommandInput, StartContactStreamingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactStreamingCommand";
    import { StartOutboundVoiceContactCommandInput, StartOutboundVoiceContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartOutboundVoiceContactCommand";
    import { StartTaskContactCommandInput, StartTaskContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartTaskContactCommand";
    import { StopContactCommandInput, StopContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactCommand";
    import { StopContactRecordingCommandInput, StopContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactRecordingCommand";
    import { StopContactStreamingCommandInput, StopContactStreamingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactStreamingCommand";
    import { SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SuspendContactRecordingCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TagResourceCommand";
    import { TransferContactCommandInput, TransferContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TransferContactCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UntagResourceCommand";
    import { UpdateAgentStatusCommandInput, UpdateAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateAgentStatusCommand";
    import { UpdateContactAttributesCommandInput, UpdateContactAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactAttributesCommand";
    import { UpdateContactCommandInput, UpdateContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactCommand";
    import { UpdateContactFlowContentCommandInput, UpdateContactFlowContentCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowContentCommand";
    import { UpdateContactFlowMetadataCommandInput, UpdateContactFlowMetadataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowMetadataCommand";
    import { UpdateContactFlowModuleContentCommandInput, UpdateContactFlowModuleContentCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleContentCommand";
    import { UpdateContactFlowModuleMetadataCommandInput, UpdateContactFlowModuleMetadataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleMetadataCommand";
    import { UpdateContactFlowNameCommandInput, UpdateContactFlowNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowNameCommand";
    import { UpdateContactScheduleCommandInput, UpdateContactScheduleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactScheduleCommand";
    import { UpdateHoursOfOperationCommandInput, UpdateHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateHoursOfOperationCommand";
    import { UpdateInstanceAttributeCommandInput, UpdateInstanceAttributeCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceAttributeCommand";
    import { UpdateInstanceStorageConfigCommandInput, UpdateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceStorageConfigCommand";
    import { UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdatePhoneNumberCommand";
    import { UpdateQueueHoursOfOperationCommandInput, UpdateQueueHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueHoursOfOperationCommand";
    import { UpdateQueueMaxContactsCommandInput, UpdateQueueMaxContactsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueMaxContactsCommand";
    import { UpdateQueueNameCommandInput, UpdateQueueNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueNameCommand";
    import { UpdateQueueOutboundCallerConfigCommandInput, UpdateQueueOutboundCallerConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueOutboundCallerConfigCommand";
    import { UpdateQueueStatusCommandInput, UpdateQueueStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueStatusCommand";
    import { UpdateQuickConnectConfigCommandInput, UpdateQuickConnectConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectConfigCommand";
    import { UpdateQuickConnectNameCommandInput, UpdateQuickConnectNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectNameCommand";
    import { UpdateRoutingProfileConcurrencyCommandInput, UpdateRoutingProfileConcurrencyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileConcurrencyCommand";
    import { UpdateRoutingProfileDefaultOutboundQueueCommandInput, UpdateRoutingProfileDefaultOutboundQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileDefaultOutboundQueueCommand";
    import { UpdateRoutingProfileNameCommandInput, UpdateRoutingProfileNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileNameCommand";
    import { UpdateRoutingProfileQueuesCommandInput, UpdateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileQueuesCommand";
    import { UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateSecurityProfileCommand";
    import { UpdateTaskTemplateCommandInput, UpdateTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateTaskTemplateCommand";
    import { UpdateUserHierarchyCommandInput, UpdateUserHierarchyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyCommand";
    import { UpdateUserHierarchyGroupNameCommandInput, UpdateUserHierarchyGroupNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyGroupNameCommand";
    import { UpdateUserHierarchyStructureCommandInput, UpdateUserHierarchyStructureCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyStructureCommand";
    import { UpdateUserIdentityInfoCommandInput, UpdateUserIdentityInfoCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserIdentityInfoCommand";
    import { UpdateUserPhoneConfigCommandInput, UpdateUserPhoneConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserPhoneConfigCommand";
    import { UpdateUserRoutingProfileCommandInput, UpdateUserRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserRoutingProfileCommand";
    import { UpdateUserSecurityProfilesCommandInput, UpdateUserSecurityProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserSecurityProfilesCommand";
    import { ConnectClient } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    /**
        * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer
        *    contact center and provide reliable customer engagement at any scale.</p>
        *          <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing.
        *    You can also resolve customer issues more efficiently by getting customers in touch with the
        *    appropriate agents.</p>
        *          <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits
        *    to the number of requests that you can make per second. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect
        *     Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        *          <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For
        *    a list of Amazon Connect endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/connect_region.html">Amazon Connect Endpoints</a>.</p>
        *          <note>
        *             <p>Working with contact flows? Check out the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>
        *          </note>
        */
    export class Connect extends ConnectClient {
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Associates an approved origin to an Amazon Connect instance.</p>
                */
            associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, options?: __HttpHandlerOptions): Promise<AssociateApprovedOriginCommandOutput>;
            associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, cb: (err: any, data?: AssociateApprovedOriginCommandOutput) => void): void;
            associateApprovedOrigin(args: AssociateApprovedOriginCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateApprovedOriginCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.</p>
                */
            associateBot(args: AssociateBotCommandInput, options?: __HttpHandlerOptions): Promise<AssociateBotCommandOutput>;
            associateBot(args: AssociateBotCommandInput, cb: (err: any, data?: AssociateBotCommandOutput) => void): void;
            associateBot(args: AssociateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateBotCommandOutput) => void): void;
            /**
                * <p>Associates an existing vocabulary as the default. Contact Lens for Amazon Connect uses the vocabulary in post-call
                *    and real-time analysis sessions for the given language.</p>
                */
            associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<AssociateDefaultVocabularyCommandOutput>;
            associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, cb: (err: any, data?: AssociateDefaultVocabularyCommandOutput) => void): void;
            associateDefaultVocabulary(args: AssociateDefaultVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateDefaultVocabularyCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Associates a storage resource type for the first time. You can only associate one type of
                *    storage configuration in a single call. This means, for example, that you can't define an
                *    instance with multiple S3 buckets for storing chat transcripts.</p>
                *          <p>This API does not create a resource that doesn't exist. It only associates it to the
                *    instance. Ensure that the resource being specified in the storage configuration, like an S3
                *    bucket, exists when being used for association.</p>
                */
            associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<AssociateInstanceStorageConfigCommandOutput>;
            associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, cb: (err: any, data?: AssociateInstanceStorageConfigCommandOutput) => void): void;
            associateInstanceStorageConfig(args: AssociateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateInstanceStorageConfigCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Allows the specified Amazon Connect instance to access the specified Lambda function.</p>
                */
            associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, options?: __HttpHandlerOptions): Promise<AssociateLambdaFunctionCommandOutput>;
            associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, cb: (err: any, data?: AssociateLambdaFunctionCommandOutput) => void): void;
            associateLambdaFunction(args: AssociateLambdaFunctionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateLambdaFunctionCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex bot.</p>
                */
            associateLexBot(args: AssociateLexBotCommandInput, options?: __HttpHandlerOptions): Promise<AssociateLexBotCommandOutput>;
            associateLexBot(args: AssociateLexBotCommandInput, cb: (err: any, data?: AssociateLexBotCommandOutput) => void): void;
            associateLexBot(args: AssociateLexBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateLexBotCommandOutput) => void): void;
            /**
                * <p>Associates a contact flow with a phone number claimed to your Amazon Connect instance.</p>
                */
            associatePhoneNumberContactFlow(args: AssociatePhoneNumberContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePhoneNumberContactFlowCommandOutput>;
            associatePhoneNumberContactFlow(args: AssociatePhoneNumberContactFlowCommandInput, cb: (err: any, data?: AssociatePhoneNumberContactFlowCommandOutput) => void): void;
            associatePhoneNumberContactFlow(args: AssociatePhoneNumberContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePhoneNumberContactFlowCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Associates a set of quick connects with a queue.</p>
                */
            associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<AssociateQueueQuickConnectsCommandOutput>;
            associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, cb: (err: any, data?: AssociateQueueQuickConnectsCommandOutput) => void): void;
            associateQueueQuickConnects(args: AssociateQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateQueueQuickConnectsCommandOutput) => void): void;
            /**
                * <p>Associates a set of queues with a routing profile.</p>
                */
            associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<AssociateRoutingProfileQueuesCommandOutput>;
            associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, cb: (err: any, data?: AssociateRoutingProfileQueuesCommandOutput) => void): void;
            associateRoutingProfileQueues(args: AssociateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateRoutingProfileQueuesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Associates a security key to the instance.</p>
                */
            associateSecurityKey(args: AssociateSecurityKeyCommandInput, options?: __HttpHandlerOptions): Promise<AssociateSecurityKeyCommandOutput>;
            associateSecurityKey(args: AssociateSecurityKeyCommandInput, cb: (err: any, data?: AssociateSecurityKeyCommandOutput) => void): void;
            associateSecurityKey(args: AssociateSecurityKeyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateSecurityKeyCommandOutput) => void): void;
            /**
                * <p>Claims an available phone number to your Amazon Connect instance.</p>
                */
            claimPhoneNumber(args: ClaimPhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<ClaimPhoneNumberCommandOutput>;
            claimPhoneNumber(args: ClaimPhoneNumberCommandInput, cb: (err: any, data?: ClaimPhoneNumberCommandOutput) => void): void;
            claimPhoneNumber(args: ClaimPhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ClaimPhoneNumberCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Creates an agent status for the specified Amazon Connect instance.</p>
                */
            createAgentStatus(args: CreateAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<CreateAgentStatusCommandOutput>;
            createAgentStatus(args: CreateAgentStatusCommandInput, cb: (err: any, data?: CreateAgentStatusCommandOutput) => void): void;
            createAgentStatus(args: CreateAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAgentStatusCommandOutput) => void): void;
            /**
                * <p>Creates a contact flow for the specified Amazon Connect instance.</p>
                *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
                *    Flow language</a>.</p>
                */
            createContactFlow(args: CreateContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactFlowCommandOutput>;
            createContactFlow(args: CreateContactFlowCommandInput, cb: (err: any, data?: CreateContactFlowCommandOutput) => void): void;
            createContactFlow(args: CreateContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactFlowCommandOutput) => void): void;
            /**
                * <p>Creates a contact flow module for the specified Amazon Connect instance. </p>
                */
            createContactFlowModule(args: CreateContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactFlowModuleCommandOutput>;
            createContactFlowModule(args: CreateContactFlowModuleCommandInput, cb: (err: any, data?: CreateContactFlowModuleCommandOutput) => void): void;
            createContactFlowModule(args: CreateContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactFlowModuleCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Creates hours of operation. </p>
                */
            createHoursOfOperation(args: CreateHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<CreateHoursOfOperationCommandOutput>;
            createHoursOfOperation(args: CreateHoursOfOperationCommandInput, cb: (err: any, data?: CreateHoursOfOperationCommandOutput) => void): void;
            createHoursOfOperation(args: CreateHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateHoursOfOperationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any
                *    storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not
                *    allow for any configurations on features, such as Contact Lens for Amazon Connect. </p>
                *          <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
                * If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
                * You must wait 30 days before you can restart creating and deleting instances in your account.</p>
                */
            createInstance(args: CreateInstanceCommandInput, options?: __HttpHandlerOptions): Promise<CreateInstanceCommandOutput>;
            createInstance(args: CreateInstanceCommandInput, cb: (err: any, data?: CreateInstanceCommandOutput) => void): void;
            createInstance(args: CreateInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateInstanceCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Web Services resource association with an Amazon Connect instance.</p>
                */
            createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, options?: __HttpHandlerOptions): Promise<CreateIntegrationAssociationCommandOutput>;
            createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, cb: (err: any, data?: CreateIntegrationAssociationCommandOutput) => void): void;
            createIntegrationAssociation(args: CreateIntegrationAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIntegrationAssociationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Creates a new queue for the specified Amazon Connect instance.</p>
                */
            createQueue(args: CreateQueueCommandInput, options?: __HttpHandlerOptions): Promise<CreateQueueCommandOutput>;
            createQueue(args: CreateQueueCommandInput, cb: (err: any, data?: CreateQueueCommandOutput) => void): void;
            createQueue(args: CreateQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateQueueCommandOutput) => void): void;
            /**
                * <p>Creates a quick connect for the specified Amazon Connect instance.</p>
                */
            createQuickConnect(args: CreateQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<CreateQuickConnectCommandOutput>;
            createQuickConnect(args: CreateQuickConnectCommandInput, cb: (err: any, data?: CreateQuickConnectCommandOutput) => void): void;
            createQuickConnect(args: CreateQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateQuickConnectCommandOutput) => void): void;
            /**
                * <p>Creates a new routing profile.</p>
                */
            createRoutingProfile(args: CreateRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateRoutingProfileCommandOutput>;
            createRoutingProfile(args: CreateRoutingProfileCommandInput, cb: (err: any, data?: CreateRoutingProfileCommandOutput) => void): void;
            createRoutingProfile(args: CreateRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRoutingProfileCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Creates a security profile.</p>
                */
            createSecurityProfile(args: CreateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateSecurityProfileCommandOutput>;
            createSecurityProfile(args: CreateSecurityProfileCommandInput, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
            createSecurityProfile(args: CreateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Creates a new task template in the specified Amazon Connect instance.</p>
                */
            createTaskTemplate(args: CreateTaskTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateTaskTemplateCommandOutput>;
            createTaskTemplate(args: CreateTaskTemplateCommandInput, cb: (err: any, data?: CreateTaskTemplateCommandOutput) => void): void;
            createTaskTemplate(args: CreateTaskTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTaskTemplateCommandOutput) => void): void;
            /**
                * <p>Creates a use case for an integration association.</p>
                */
            createUseCase(args: CreateUseCaseCommandInput, options?: __HttpHandlerOptions): Promise<CreateUseCaseCommandOutput>;
            createUseCase(args: CreateUseCaseCommandInput, cb: (err: any, data?: CreateUseCaseCommandOutput) => void): void;
            createUseCase(args: CreateUseCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUseCaseCommandOutput) => void): void;
            /**
                * <p>Creates a user account for the specified Amazon Connect instance.</p>
                *          <p>For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users</a> in
                *    the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            createUser(args: CreateUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserCommandOutput>;
            createUser(args: CreateUserCommandInput, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            createUser(args: CreateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            /**
                * <p>Creates a new user hierarchy group.</p>
                */
            createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserHierarchyGroupCommandOutput>;
            createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, cb: (err: any, data?: CreateUserHierarchyGroupCommandOutput) => void): void;
            createUserHierarchyGroup(args: CreateUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserHierarchyGroupCommandOutput) => void): void;
            /**
                * <p>Creates a custom vocabulary associated with your Amazon Connect instance. You can set a custom
                *    vocabulary to be your default vocabulary for a given language. Contact Lens for Amazon Connect uses the default
                *    vocabulary in post-call and real-time contact analysis sessions for that language.</p>
                */
            createVocabulary(args: CreateVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<CreateVocabularyCommandOutput>;
            createVocabulary(args: CreateVocabularyCommandInput, cb: (err: any, data?: CreateVocabularyCommandOutput) => void): void;
            createVocabulary(args: CreateVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVocabularyCommandOutput) => void): void;
            /**
                * <p>Deletes a contact flow for the specified Amazon Connect instance.</p>
                */
            deleteContactFlow(args: DeleteContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactFlowCommandOutput>;
            deleteContactFlow(args: DeleteContactFlowCommandInput, cb: (err: any, data?: DeleteContactFlowCommandOutput) => void): void;
            deleteContactFlow(args: DeleteContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactFlowCommandOutput) => void): void;
            /**
                * <p>Deletes the specified contact flow module.</p>
                */
            deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactFlowModuleCommandOutput>;
            deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, cb: (err: any, data?: DeleteContactFlowModuleCommandOutput) => void): void;
            deleteContactFlowModule(args: DeleteContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactFlowModuleCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Deletes an hours of operation.</p>
                */
            deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteHoursOfOperationCommandOutput>;
            deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, cb: (err: any, data?: DeleteHoursOfOperationCommandOutput) => void): void;
            deleteHoursOfOperation(args: DeleteHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteHoursOfOperationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Deletes the Amazon Connect instance.</p>
                *          <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
                * If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
                * You must wait 30 days before you can restart creating and deleting instances in your account.</p>
                */
            deleteInstance(args: DeleteInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteInstanceCommandOutput>;
            deleteInstance(args: DeleteInstanceCommandInput, cb: (err: any, data?: DeleteInstanceCommandOutput) => void): void;
            deleteInstance(args: DeleteInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteInstanceCommandOutput) => void): void;
            /**
                * <p>Deletes an Amazon Web Services resource association from an Amazon Connect instance. The association
                *    must not have any use cases associated with it.</p>
                */
            deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIntegrationAssociationCommandOutput>;
            deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, cb: (err: any, data?: DeleteIntegrationAssociationCommandOutput) => void): void;
            deleteIntegrationAssociation(args: DeleteIntegrationAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIntegrationAssociationCommandOutput) => void): void;
            /**
                * <p>Deletes a quick connect.</p>
                */
            deleteQuickConnect(args: DeleteQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<DeleteQuickConnectCommandOutput>;
            deleteQuickConnect(args: DeleteQuickConnectCommandInput, cb: (err: any, data?: DeleteQuickConnectCommandOutput) => void): void;
            deleteQuickConnect(args: DeleteQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteQuickConnectCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Deletes a security profile.</p>
                */
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSecurityProfileCommandOutput>;
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
            deleteSecurityProfile(args: DeleteSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Deletes the task template.</p>
                */
            deleteTaskTemplate(args: DeleteTaskTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTaskTemplateCommandOutput>;
            deleteTaskTemplate(args: DeleteTaskTemplateCommandInput, cb: (err: any, data?: DeleteTaskTemplateCommandOutput) => void): void;
            deleteTaskTemplate(args: DeleteTaskTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTaskTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes a use case from an integration association.</p>
                */
            deleteUseCase(args: DeleteUseCaseCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUseCaseCommandOutput>;
            deleteUseCase(args: DeleteUseCaseCommandInput, cb: (err: any, data?: DeleteUseCaseCommandOutput) => void): void;
            deleteUseCase(args: DeleteUseCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUseCaseCommandOutput) => void): void;
            /**
                * <p>Deletes a user account from the specified Amazon Connect instance.</p>
                *          <p>For information about what happens to a user's data when their account is deleted, see
                *     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from
                *     Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            deleteUser(args: DeleteUserCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserCommandOutput>;
            deleteUser(args: DeleteUserCommandInput, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
            deleteUser(args: DeleteUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
            /**
                * <p>Deletes an existing user hierarchy group. It must not be associated with any agents or have
                *    any active child groups.</p>
                */
            deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserHierarchyGroupCommandOutput>;
            deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, cb: (err: any, data?: DeleteUserHierarchyGroupCommandOutput) => void): void;
            deleteUserHierarchyGroup(args: DeleteUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserHierarchyGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the vocabulary that has the given identifier.</p>
                */
            deleteVocabulary(args: DeleteVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVocabularyCommandOutput>;
            deleteVocabulary(args: DeleteVocabularyCommandInput, cb: (err: any, data?: DeleteVocabularyCommandOutput) => void): void;
            deleteVocabulary(args: DeleteVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVocabularyCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Describes an agent status.</p>
                */
            describeAgentStatus(args: DescribeAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAgentStatusCommandOutput>;
            describeAgentStatus(args: DescribeAgentStatusCommandInput, cb: (err: any, data?: DescribeAgentStatusCommandOutput) => void): void;
            describeAgentStatus(args: DescribeAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAgentStatusCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Describes the specified contact. </p>
                *          <important>
                *             <p>Contact information remains available in Amazon Connect for 24 months, and then it is
                *     deleted.</p>
                *          </important>
                */
            describeContact(args: DescribeContactCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactCommandOutput>;
            describeContact(args: DescribeContactCommandInput, cb: (err: any, data?: DescribeContactCommandOutput) => void): void;
            describeContact(args: DescribeContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactCommandOutput) => void): void;
            /**
                * <p>Describes the specified contact flow.</p>
                *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
                *    Flow language</a>.</p>
                */
            describeContactFlow(args: DescribeContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactFlowCommandOutput>;
            describeContactFlow(args: DescribeContactFlowCommandInput, cb: (err: any, data?: DescribeContactFlowCommandOutput) => void): void;
            describeContactFlow(args: DescribeContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactFlowCommandOutput) => void): void;
            /**
                * <p>Describes the specified contact flow module.</p>
                */
            describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, options?: __HttpHandlerOptions): Promise<DescribeContactFlowModuleCommandOutput>;
            describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, cb: (err: any, data?: DescribeContactFlowModuleCommandOutput) => void): void;
            describeContactFlowModule(args: DescribeContactFlowModuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeContactFlowModuleCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Describes the hours of operation.</p>
                */
            describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHoursOfOperationCommandOutput>;
            describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, cb: (err: any, data?: DescribeHoursOfOperationCommandOutput) => void): void;
            describeHoursOfOperation(args: DescribeHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHoursOfOperationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns the current state of the specified instance identifier. It tracks the instance while
                *    it is being created and returns an error status, if applicable. </p>
                *          <p>If an instance is not created successfully, the instance status reason field returns details
                *    relevant to the reason. The instance in a failed state is returned only for 24 hours after the
                *    CreateInstance API was invoked.</p>
                */
            describeInstance(args: DescribeInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceCommandOutput>;
            describeInstance(args: DescribeInstanceCommandInput, cb: (err: any, data?: DescribeInstanceCommandOutput) => void): void;
            describeInstance(args: DescribeInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Describes the specified instance attribute.</p>
                */
            describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceAttributeCommandOutput>;
            describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
            describeInstanceAttribute(args: DescribeInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceAttributeCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Retrieves the current storage configurations for the specified resource type, association
                *    ID, and instance ID.</p>
                */
            describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInstanceStorageConfigCommandOutput>;
            describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, cb: (err: any, data?: DescribeInstanceStorageConfigCommandOutput) => void): void;
            describeInstanceStorageConfig(args: DescribeInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInstanceStorageConfigCommandOutput) => void): void;
            /**
                * <p>Gets details and status of a phone number that’s claimed to your Amazon Connect instance</p>
                */
            describePhoneNumber(args: DescribePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<DescribePhoneNumberCommandOutput>;
            describePhoneNumber(args: DescribePhoneNumberCommandInput, cb: (err: any, data?: DescribePhoneNumberCommandOutput) => void): void;
            describePhoneNumber(args: DescribePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePhoneNumberCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Describes the specified queue.</p>
                */
            describeQueue(args: DescribeQueueCommandInput, options?: __HttpHandlerOptions): Promise<DescribeQueueCommandOutput>;
            describeQueue(args: DescribeQueueCommandInput, cb: (err: any, data?: DescribeQueueCommandOutput) => void): void;
            describeQueue(args: DescribeQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeQueueCommandOutput) => void): void;
            /**
                * <p>Describes the quick connect.</p>
                */
            describeQuickConnect(args: DescribeQuickConnectCommandInput, options?: __HttpHandlerOptions): Promise<DescribeQuickConnectCommandOutput>;
            describeQuickConnect(args: DescribeQuickConnectCommandInput, cb: (err: any, data?: DescribeQuickConnectCommandOutput) => void): void;
            describeQuickConnect(args: DescribeQuickConnectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeQuickConnectCommandOutput) => void): void;
            /**
                * <p>Describes the specified routing profile.</p>
                */
            describeRoutingProfile(args: DescribeRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRoutingProfileCommandOutput>;
            describeRoutingProfile(args: DescribeRoutingProfileCommandInput, cb: (err: any, data?: DescribeRoutingProfileCommandOutput) => void): void;
            describeRoutingProfile(args: DescribeRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRoutingProfileCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Gets basic information about the security profle.</p>
                */
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityProfileCommandOutput>;
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
            describeSecurityProfile(args: DescribeSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Describes the specified user account. You can find the instance ID in the console (it’s the
                *    final part of the ARN). The console does not display the user IDs. Instead, list the users and
                *    note the IDs provided in the output.</p>
                */
            describeUser(args: DescribeUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserCommandOutput>;
            describeUser(args: DescribeUserCommandInput, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            describeUser(args: DescribeUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            /**
                * <p>Describes the specified hierarchy group.</p>
                */
            describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserHierarchyGroupCommandOutput>;
            describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, cb: (err: any, data?: DescribeUserHierarchyGroupCommandOutput) => void): void;
            describeUserHierarchyGroup(args: DescribeUserHierarchyGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserHierarchyGroupCommandOutput) => void): void;
            /**
                * <p>Describes the hierarchy structure of the specified Amazon Connect instance.</p>
                */
            describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserHierarchyStructureCommandOutput>;
            describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, cb: (err: any, data?: DescribeUserHierarchyStructureCommandOutput) => void): void;
            describeUserHierarchyStructure(args: DescribeUserHierarchyStructureCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserHierarchyStructureCommandOutput) => void): void;
            /**
                * <p>Describes the specified vocabulary.</p>
                */
            describeVocabulary(args: DescribeVocabularyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeVocabularyCommandOutput>;
            describeVocabulary(args: DescribeVocabularyCommandInput, cb: (err: any, data?: DescribeVocabularyCommandOutput) => void): void;
            describeVocabulary(args: DescribeVocabularyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeVocabularyCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Revokes access to integrated applications from Amazon Connect.</p>
                */
            disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateApprovedOriginCommandOutput>;
            disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, cb: (err: any, data?: DisassociateApprovedOriginCommandOutput) => void): void;
            disassociateApprovedOrigin(args: DisassociateApprovedOriginCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateApprovedOriginCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2
                *    bot. </p>
                */
            disassociateBot(args: DisassociateBotCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateBotCommandOutput>;
            disassociateBot(args: DisassociateBotCommandInput, cb: (err: any, data?: DisassociateBotCommandOutput) => void): void;
            disassociateBot(args: DisassociateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateBotCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Removes the storage type configurations for the specified resource type and association
                *    ID.</p>
                */
            disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateInstanceStorageConfigCommandOutput>;
            disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, cb: (err: any, data?: DisassociateInstanceStorageConfigCommandOutput) => void): void;
            disassociateInstanceStorageConfig(args: DisassociateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateInstanceStorageConfigCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Remove the Lambda function from the dropdown options available in the relevant contact flow
                *    blocks.</p>
                */
            disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateLambdaFunctionCommandOutput>;
            disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, cb: (err: any, data?: DisassociateLambdaFunctionCommandOutput) => void): void;
            disassociateLambdaFunction(args: DisassociateLambdaFunctionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateLambdaFunctionCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Revokes authorization from the specified instance to access the specified Amazon Lex bot.</p>
                */
            disassociateLexBot(args: DisassociateLexBotCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateLexBotCommandOutput>;
            disassociateLexBot(args: DisassociateLexBotCommandInput, cb: (err: any, data?: DisassociateLexBotCommandOutput) => void): void;
            disassociateLexBot(args: DisassociateLexBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateLexBotCommandOutput) => void): void;
            /**
                * <p>Removes the contact flow association from a phone number claimed to your Amazon Connect instance, if
                *    a contact flow association exists.</p>
                */
            disassociatePhoneNumberContactFlow(args: DisassociatePhoneNumberContactFlowCommandInput, options?: __HttpHandlerOptions): Promise<DisassociatePhoneNumberContactFlowCommandOutput>;
            disassociatePhoneNumberContactFlow(args: DisassociatePhoneNumberContactFlowCommandInput, cb: (err: any, data?: DisassociatePhoneNumberContactFlowCommandOutput) => void): void;
            disassociatePhoneNumberContactFlow(args: DisassociatePhoneNumberContactFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociatePhoneNumberContactFlowCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Disassociates a set of quick connects from a queue.</p>
                */
            disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateQueueQuickConnectsCommandOutput>;
            disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, cb: (err: any, data?: DisassociateQueueQuickConnectsCommandOutput) => void): void;
            disassociateQueueQuickConnects(args: DisassociateQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateQueueQuickConnectsCommandOutput) => void): void;
            /**
                * <p>Disassociates a set of queues from a routing profile.</p>
                */
            disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateRoutingProfileQueuesCommandOutput>;
            disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, cb: (err: any, data?: DisassociateRoutingProfileQueuesCommandOutput) => void): void;
            disassociateRoutingProfileQueues(args: DisassociateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateRoutingProfileQueuesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Deletes the specified security key.</p>
                */
            disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateSecurityKeyCommandOutput>;
            disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, cb: (err: any, data?: DisassociateSecurityKeyCommandOutput) => void): void;
            disassociateSecurityKey(args: DisassociateSecurityKeyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateSecurityKeyCommandOutput) => void): void;
            /**
                * <p>Retrieves the contact attributes for the specified contact.</p>
                */
            getContactAttributes(args: GetContactAttributesCommandInput, options?: __HttpHandlerOptions): Promise<GetContactAttributesCommandOutput>;
            getContactAttributes(args: GetContactAttributesCommandInput, cb: (err: any, data?: GetContactAttributesCommandOutput) => void): void;
            getContactAttributes(args: GetContactAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContactAttributesCommandOutput) => void): void;
            /**
                * <p>Gets the real-time metric data from the specified Amazon Connect instance.</p>
                *          <p>For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics
                *     Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            getCurrentMetricData(args: GetCurrentMetricDataCommandInput, options?: __HttpHandlerOptions): Promise<GetCurrentMetricDataCommandOutput>;
            getCurrentMetricData(args: GetCurrentMetricDataCommandInput, cb: (err: any, data?: GetCurrentMetricDataCommandOutput) => void): void;
            getCurrentMetricData(args: GetCurrentMetricDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCurrentMetricDataCommandOutput) => void): void;
            /**
                * <p>Gets the real-time active user data from the specified Amazon Connect instance. </p>
                */
            getCurrentUserData(args: GetCurrentUserDataCommandInput, options?: __HttpHandlerOptions): Promise<GetCurrentUserDataCommandOutput>;
            getCurrentUserData(args: GetCurrentUserDataCommandInput, cb: (err: any, data?: GetCurrentUserDataCommandOutput) => void): void;
            getCurrentUserData(args: GetCurrentUserDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCurrentUserDataCommandOutput) => void): void;
            /**
                * <p>Retrieves a token for federation.</p>
                *          <note>
                *             <p>This API doesn't support root users. If you try to invoke GetFederationToken with root
                *     credentials, an error message similar to the following one appears: </p>
                *             <p>
                *                <code>Provided identity: Principal: .... User: .... cannot be used for federation with
                *      Amazon Connect</code>
                *             </p>
                *          </note>
                */
            getFederationToken(args: GetFederationTokenCommandInput, options?: __HttpHandlerOptions): Promise<GetFederationTokenCommandOutput>;
            getFederationToken(args: GetFederationTokenCommandInput, cb: (err: any, data?: GetFederationTokenCommandOutput) => void): void;
            getFederationToken(args: GetFederationTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetFederationTokenCommandOutput) => void): void;
            /**
                * <p>Gets historical metric data from the specified Amazon Connect instance.</p>
                *
                *          <p>For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics
                *     Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            getMetricData(args: GetMetricDataCommandInput, options?: __HttpHandlerOptions): Promise<GetMetricDataCommandOutput>;
            getMetricData(args: GetMetricDataCommandInput, cb: (err: any, data?: GetMetricDataCommandOutput) => void): void;
            getMetricData(args: GetMetricDataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMetricDataCommandOutput) => void): void;
            /**
                * <p>Gets details about a specific task template in the specified Amazon Connect instance.</p>
                */
            getTaskTemplate(args: GetTaskTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetTaskTemplateCommandOutput>;
            getTaskTemplate(args: GetTaskTemplateCommandInput, cb: (err: any, data?: GetTaskTemplateCommandOutput) => void): void;
            getTaskTemplate(args: GetTaskTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTaskTemplateCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Lists agent statuses.</p>
                */
            listAgentStatuses(args: ListAgentStatusesCommandInput, options?: __HttpHandlerOptions): Promise<ListAgentStatusesCommandOutput>;
            listAgentStatuses(args: ListAgentStatusesCommandInput, cb: (err: any, data?: ListAgentStatusesCommandOutput) => void): void;
            listAgentStatuses(args: ListAgentStatusesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAgentStatusesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns a paginated list of all approved origins associated with the instance.</p>
                */
            listApprovedOrigins(args: ListApprovedOriginsCommandInput, options?: __HttpHandlerOptions): Promise<ListApprovedOriginsCommandOutput>;
            listApprovedOrigins(args: ListApprovedOriginsCommandInput, cb: (err: any, data?: ListApprovedOriginsCommandOutput) => void): void;
            listApprovedOrigins(args: ListApprovedOriginsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListApprovedOriginsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently
                *    associated with the instance. </p>
                */
            listBots(args: ListBotsCommandInput, options?: __HttpHandlerOptions): Promise<ListBotsCommandOutput>;
            listBots(args: ListBotsCommandInput, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
            listBots(args: ListBotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
            /**
                * <p>Provides information about the contact flow modules for the specified Amazon Connect instance.</p>
                */
            listContactFlowModules(args: ListContactFlowModulesCommandInput, options?: __HttpHandlerOptions): Promise<ListContactFlowModulesCommandOutput>;
            listContactFlowModules(args: ListContactFlowModulesCommandInput, cb: (err: any, data?: ListContactFlowModulesCommandOutput) => void): void;
            listContactFlowModules(args: ListContactFlowModulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactFlowModulesCommandOutput) => void): void;
            /**
                * <p>Provides information about the contact flows for the specified Amazon Connect instance.</p>
                *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
                *    Flow language</a>.</p>
                *          <p>For more information about contact flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Contact Flows</a> in the
                *     <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listContactFlows(args: ListContactFlowsCommandInput, options?: __HttpHandlerOptions): Promise<ListContactFlowsCommandOutput>;
            listContactFlows(args: ListContactFlowsCommandInput, cb: (err: any, data?: ListContactFlowsCommandOutput) => void): void;
            listContactFlows(args: ListContactFlowsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactFlowsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>For the specified <code>referenceTypes</code>, returns a list of references associated with
                *    the contact. </p>
                */
            listContactReferences(args: ListContactReferencesCommandInput, options?: __HttpHandlerOptions): Promise<ListContactReferencesCommandOutput>;
            listContactReferences(args: ListContactReferencesCommandInput, cb: (err: any, data?: ListContactReferencesCommandOutput) => void): void;
            listContactReferences(args: ListContactReferencesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactReferencesCommandOutput) => void): void;
            /**
                * <p>Lists the default vocabularies for the specified Amazon Connect instance.</p>
                */
            listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, options?: __HttpHandlerOptions): Promise<ListDefaultVocabulariesCommandOutput>;
            listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, cb: (err: any, data?: ListDefaultVocabulariesCommandOutput) => void): void;
            listDefaultVocabularies(args: ListDefaultVocabulariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDefaultVocabulariesCommandOutput) => void): void;
            /**
                * <p>Provides information about the hours of operation for the specified Amazon Connect instance.</p>
                *          <p>For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a
                *     Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listHoursOfOperations(args: ListHoursOfOperationsCommandInput, options?: __HttpHandlerOptions): Promise<ListHoursOfOperationsCommandOutput>;
            listHoursOfOperations(args: ListHoursOfOperationsCommandInput, cb: (err: any, data?: ListHoursOfOperationsCommandOutput) => void): void;
            listHoursOfOperations(args: ListHoursOfOperationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListHoursOfOperationsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns a paginated list of all attribute types for the given instance.</p>
                */
            listInstanceAttributes(args: ListInstanceAttributesCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceAttributesCommandOutput>;
            listInstanceAttributes(args: ListInstanceAttributesCommandInput, cb: (err: any, data?: ListInstanceAttributesCommandOutput) => void): void;
            listInstanceAttributes(args: ListInstanceAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceAttributesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Return a list of instances which are in active state, creation-in-progress state, and failed
                *    state. Instances that aren't successfully created (they are in a failed state) are returned only
                *    for 24 hours after the CreateInstance API was invoked.</p>
                */
            listInstances(args: ListInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListInstancesCommandOutput>;
            listInstances(args: ListInstancesCommandInput, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
            listInstances(args: ListInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *
                *          <p>Returns a paginated list of storage configs for the identified instance and resource
                *    type.</p>
                */
            listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceStorageConfigsCommandOutput>;
            listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, cb: (err: any, data?: ListInstanceStorageConfigsCommandOutput) => void): void;
            listInstanceStorageConfigs(args: ListInstanceStorageConfigsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceStorageConfigsCommandOutput) => void): void;
            /**
                * <p>Provides summary information about the Amazon Web Services resource associations for the
                *    specified Amazon Connect instance.</p>
                */
            listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<ListIntegrationAssociationsCommandOutput>;
            listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, cb: (err: any, data?: ListIntegrationAssociationsCommandOutput) => void): void;
            listIntegrationAssociations(args: ListIntegrationAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListIntegrationAssociationsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns a paginated list of all Lambda functions that display in the dropdown options in the
                *    relevant contact flow blocks.</p>
                */
            listLambdaFunctions(args: ListLambdaFunctionsCommandInput, options?: __HttpHandlerOptions): Promise<ListLambdaFunctionsCommandOutput>;
            listLambdaFunctions(args: ListLambdaFunctionsCommandInput, cb: (err: any, data?: ListLambdaFunctionsCommandOutput) => void): void;
            listLambdaFunctions(args: ListLambdaFunctionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLambdaFunctionsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns a paginated list of all the Amazon Lex bots currently associated with the
                *    instance.</p>
                */
            listLexBots(args: ListLexBotsCommandInput, options?: __HttpHandlerOptions): Promise<ListLexBotsCommandOutput>;
            listLexBots(args: ListLexBotsCommandInput, cb: (err: any, data?: ListLexBotsCommandOutput) => void): void;
            listLexBots(args: ListLexBotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLexBotsCommandOutput) => void): void;
            /**
                * <p>Provides information about the phone numbers for the specified Amazon Connect instance. </p>
                *          <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your
                *     Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, options?: __HttpHandlerOptions): Promise<ListPhoneNumbersCommandOutput>;
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
            /**
                * <p>Lists phone numbers claimed to your Amazon Connect instance. </p>
                *          <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your
                *     Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listPhoneNumbersV2(args: ListPhoneNumbersV2CommandInput, options?: __HttpHandlerOptions): Promise<ListPhoneNumbersV2CommandOutput>;
            listPhoneNumbersV2(args: ListPhoneNumbersV2CommandInput, cb: (err: any, data?: ListPhoneNumbersV2CommandOutput) => void): void;
            listPhoneNumbersV2(args: ListPhoneNumbersV2CommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPhoneNumbersV2CommandOutput) => void): void;
            /**
                * <p>Provides information about the prompts for the specified Amazon Connect instance.</p>
                */
            listPrompts(args: ListPromptsCommandInput, options?: __HttpHandlerOptions): Promise<ListPromptsCommandOutput>;
            listPrompts(args: ListPromptsCommandInput, cb: (err: any, data?: ListPromptsCommandOutput) => void): void;
            listPrompts(args: ListPromptsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPromptsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Lists the quick connects associated with a queue.</p>
                */
            listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<ListQueueQuickConnectsCommandOutput>;
            listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, cb: (err: any, data?: ListQueueQuickConnectsCommandOutput) => void): void;
            listQueueQuickConnects(args: ListQueueQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQueueQuickConnectsCommandOutput) => void): void;
            /**
                * <p>Provides information about the queues for the specified Amazon Connect instance.</p>
                *          <p>If you do not specify a <code>QueueTypes</code>
                *    parameter, both standard and agent queues are returned. This might cause an unexpected truncation
                *    of results if you have more than 1000 agents and you limit the number of results of the API call
                *    in code.</p>
                *          <p>For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and
                *     Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listQueues(args: ListQueuesCommandInput, options?: __HttpHandlerOptions): Promise<ListQueuesCommandOutput>;
            listQueues(args: ListQueuesCommandInput, cb: (err: any, data?: ListQueuesCommandOutput) => void): void;
            listQueues(args: ListQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQueuesCommandOutput) => void): void;
            /**
                * <p>Provides information about the quick connects for the specified Amazon Connect instance. </p>
                */
            listQuickConnects(args: ListQuickConnectsCommandInput, options?: __HttpHandlerOptions): Promise<ListQuickConnectsCommandOutput>;
            listQuickConnects(args: ListQuickConnectsCommandInput, cb: (err: any, data?: ListQuickConnectsCommandOutput) => void): void;
            listQuickConnects(args: ListQuickConnectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListQuickConnectsCommandOutput) => void): void;
            /**
                * <p>Lists the queues associated with a routing profile.</p>
                */
            listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<ListRoutingProfileQueuesCommandOutput>;
            listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, cb: (err: any, data?: ListRoutingProfileQueuesCommandOutput) => void): void;
            listRoutingProfileQueues(args: ListRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoutingProfileQueuesCommandOutput) => void): void;
            /**
                * <p>Provides summary information about the routing profiles for the specified Amazon Connect
                *    instance.</p>
                *          <p>For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing
                *     Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listRoutingProfiles(args: ListRoutingProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListRoutingProfilesCommandOutput>;
            listRoutingProfiles(args: ListRoutingProfilesCommandInput, cb: (err: any, data?: ListRoutingProfilesCommandOutput) => void): void;
            listRoutingProfiles(args: ListRoutingProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoutingProfilesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Returns a paginated list of all security keys associated with the instance.</p>
                */
            listSecurityKeys(args: ListSecurityKeysCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityKeysCommandOutput>;
            listSecurityKeys(args: ListSecurityKeysCommandInput, cb: (err: any, data?: ListSecurityKeysCommandOutput) => void): void;
            listSecurityKeys(args: ListSecurityKeysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityKeysCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Lists the permissions granted to a security profile.</p>
                */
            listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilePermissionsCommandOutput>;
            listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, cb: (err: any, data?: ListSecurityProfilePermissionsCommandOutput) => void): void;
            listSecurityProfilePermissions(args: ListSecurityProfilePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilePermissionsCommandOutput) => void): void;
            /**
                * <p>Provides summary information about the security profiles for the specified Amazon Connect
                *    instance.</p>
                *          <p>For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles</a> in the
                *     <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityProfilesCommandOutput>;
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
            listSecurityProfiles(args: ListSecurityProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityProfilesCommandOutput) => void): void;
            /**
                * <p>Lists the tags for the specified resource.</p>
                *          <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
                *     Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Lists task templates for the specified Amazon Connect instance.</p>
                */
            listTaskTemplates(args: ListTaskTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListTaskTemplatesCommandOutput>;
            listTaskTemplates(args: ListTaskTemplatesCommandInput, cb: (err: any, data?: ListTaskTemplatesCommandOutput) => void): void;
            listTaskTemplates(args: ListTaskTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTaskTemplatesCommandOutput) => void): void;
            /**
                * <p>Lists the use cases for the integration association. </p>
                */
            listUseCases(args: ListUseCasesCommandInput, options?: __HttpHandlerOptions): Promise<ListUseCasesCommandOutput>;
            listUseCases(args: ListUseCasesCommandInput, cb: (err: any, data?: ListUseCasesCommandOutput) => void): void;
            listUseCases(args: ListUseCasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUseCasesCommandOutput) => void): void;
            /**
                * <p>Provides summary information about the hierarchy groups for the specified Amazon Connect
                *    instance.</p>
                *          <p>For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies</a> in the
                *     <i>Amazon Connect Administrator Guide</i>.</p>
                */
            listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListUserHierarchyGroupsCommandOutput>;
            listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, cb: (err: any, data?: ListUserHierarchyGroupsCommandOutput) => void): void;
            listUserHierarchyGroups(args: ListUserHierarchyGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUserHierarchyGroupsCommandOutput) => void): void;
            /**
                * <p>Provides summary information about the users for the specified Amazon Connect instance.</p>
                */
            listUsers(args: ListUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListUsersCommandOutput>;
            listUsers(args: ListUsersCommandInput, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            listUsers(args: ListUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            /**
                * <p>Changes the current status of a user or agent in Amazon Connect. If the agent is currently handling a
                *    contact, this sets the agent's next status.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/metrics-agent-status.html">Agent status</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-next-status.html">Set your next
                *     status</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            putUserStatus(args: PutUserStatusCommandInput, options?: __HttpHandlerOptions): Promise<PutUserStatusCommandOutput>;
            putUserStatus(args: PutUserStatusCommandInput, cb: (err: any, data?: PutUserStatusCommandOutput) => void): void;
            putUserStatus(args: PutUserStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutUserStatusCommandOutput) => void): void;
            /**
                * <p>Releases a phone number previously claimed to an Amazon Connect instance.</p>
                */
            releasePhoneNumber(args: ReleasePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<ReleasePhoneNumberCommandOutput>;
            releasePhoneNumber(args: ReleasePhoneNumberCommandInput, cb: (err: any, data?: ReleasePhoneNumberCommandOutput) => void): void;
            releasePhoneNumber(args: ReleasePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ReleasePhoneNumberCommandOutput) => void): void;
            /**
                * <p>When a contact is being recorded, and the recording has been suspended using
                *    SuspendContactRecording, this API resumes recording the call.</p>
                *
                *          <p>Only voice recordings are supported at this time.</p>
                */
            resumeContactRecording(args: ResumeContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<ResumeContactRecordingCommandOutput>;
            resumeContactRecording(args: ResumeContactRecordingCommandInput, cb: (err: any, data?: ResumeContactRecordingCommandOutput) => void): void;
            resumeContactRecording(args: ResumeContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResumeContactRecordingCommandOutput) => void): void;
            /**
                * <p>Searches for available phone numbers that you can claim to your Amazon Connect instance.</p>
                */
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, options?: __HttpHandlerOptions): Promise<SearchAvailablePhoneNumbersCommandOutput>;
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, cb: (err: any, data?: SearchAvailablePhoneNumbersCommandOutput) => void): void;
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchAvailablePhoneNumbersCommandOutput) => void): void;
            /**
                * <p>Searches users in an Amazon Connect instance, with optional filtering.</p>
                */
            searchUsers(args: SearchUsersCommandInput, options?: __HttpHandlerOptions): Promise<SearchUsersCommandOutput>;
            searchUsers(args: SearchUsersCommandInput, cb: (err: any, data?: SearchUsersCommandOutput) => void): void;
            searchUsers(args: SearchUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchUsersCommandOutput) => void): void;
            /**
                * <p>Searches for vocabularies within a specific Amazon Connect instance using <code>State</code>,
                *     <code>NameStartsWith</code>, and <code>LanguageCode</code>.</p>
                */
            searchVocabularies(args: SearchVocabulariesCommandInput, options?: __HttpHandlerOptions): Promise<SearchVocabulariesCommandOutput>;
            searchVocabularies(args: SearchVocabulariesCommandInput, cb: (err: any, data?: SearchVocabulariesCommandOutput) => void): void;
            searchVocabularies(args: SearchVocabulariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchVocabulariesCommandOutput) => void): void;
            /**
                * <p>Initiates a contact flow to start a new chat for the customer. Response of this API provides
                *    a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p>
                *
                *          <p>When a new chat contact is successfully created, clients must subscribe to the participant’s
                *    connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p>
                *
                *          <p>A 429 error occurs in the following situations:</p>
                *          <ul>
                *             <li>
                *                <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code>
                *      exception.</p>
                *             </li>
                *             <li>
                *                <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active
                *       chats</a> is exceeded. Active chat throttling returns a
                *       <code>LimitExceededException</code>.</p>
                *             </li>
                *          </ul>
                *          <p>If you use the <code>ChatDurationInMinutes</code> parameter and receive a 400 error, your
                *    account may not support the ability to configure custom chat durations. For more information,
                *    contact Amazon Web Services Support. </p>
                *
                *          <p>For more information about chat, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat</a> in the <i>Amazon Connect Administrator
                *     Guide</i>.</p>
                */
            startChatContact(args: StartChatContactCommandInput, options?: __HttpHandlerOptions): Promise<StartChatContactCommandOutput>;
            startChatContact(args: StartChatContactCommandInput, cb: (err: any, data?: StartChatContactCommandOutput) => void): void;
            startChatContact(args: StartChatContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartChatContactCommandOutput) => void): void;
            /**
                * <p>Starts recording the contact: </p>
                *          <ul>
                *             <li>
                *                <p>If the API is called <i>before</i> the agent joins the call, recording
                *      starts when the agent joins the call.</p>
                *             </li>
                *             <li>
                *                <p>If the API is called <i>after</i> the agent joins the call, recording starts
                *      at the time of the API call.</p>
                *             </li>
                *          </ul>
                *
                *          <p>StartContactRecording is a one-time action. For example, if you use StopContactRecording to
                *    stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios
                *    where the recording has started and you want to suspend and resume it, such as when collecting
                *    sensitive information (for example, a credit card number), use SuspendContactRecording and
                *    ResumeContactRecording.</p>
                *          <p>You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording
                *     behavior</a> block.</p>
                *          <p>Only voice recordings are supported at this time.</p>
                */
            startContactRecording(args: StartContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<StartContactRecordingCommandOutput>;
            startContactRecording(args: StartContactRecordingCommandInput, cb: (err: any, data?: StartContactRecordingCommandOutput) => void): void;
            startContactRecording(args: StartContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartContactRecordingCommandOutput) => void): void;
            /**
                * <p> Initiates real-time message streaming for a new chat contact.</p>
                *          <p> For more information about message streaming, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html">Enable real-time chat message
                *     streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            startContactStreaming(args: StartContactStreamingCommandInput, options?: __HttpHandlerOptions): Promise<StartContactStreamingCommandOutput>;
            startContactStreaming(args: StartContactStreamingCommandInput, cb: (err: any, data?: StartContactStreamingCommandOutput) => void): void;
            startContactStreaming(args: StartContactStreamingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartContactStreamingCommandOutput) => void): void;
            /**
                * <p>Places an outbound call to a contact, and then initiates the contact flow. It performs the
                *    actions in the contact flow that's specified (in <code>ContactFlowId</code>).</p>
                *
                *          <p>Agents do not initiate the outbound API, which means that they do not dial the contact. If
                *    the contact flow places an outbound call to a contact, and then puts the contact in queue, the
                *    call is then routed to the agent, like any other inbound case.</p>
                *
                *          <p>There is a 60-second dialing timeout for this operation. If the call is not connected after
                *    60 seconds, it fails.</p>
                *          <note>
                *             <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK
                *     mobile numbers, you must submit a service quota increase request. For more information, see
                *      <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
                *          </note>
                *          <note>
                *             <p>Campaign calls are not allowed by default. Before you can make a call with
                *      <code>TrafficType</code> = <code>CAMPAIGN</code>, you must submit a service quota increase
                *     request. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a>
                *     in the <i>Amazon Connect Administrator Guide</i>. </p>
                *          </note>
                */
            startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, options?: __HttpHandlerOptions): Promise<StartOutboundVoiceContactCommandOutput>;
            startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, cb: (err: any, data?: StartOutboundVoiceContactCommandOutput) => void): void;
            startOutboundVoiceContact(args: StartOutboundVoiceContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartOutboundVoiceContactCommandOutput) => void): void;
            /**
                * <p>Initiates a contact flow to start a new task.</p>
                */
            startTaskContact(args: StartTaskContactCommandInput, options?: __HttpHandlerOptions): Promise<StartTaskContactCommandOutput>;
            startTaskContact(args: StartTaskContactCommandInput, cb: (err: any, data?: StartTaskContactCommandOutput) => void): void;
            startTaskContact(args: StartTaskContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartTaskContactCommandOutput) => void): void;
            /**
                * <p>Ends the specified contact. This call does not work for the following initiation
                *    methods:</p>
                *
                *          <ul>
                *             <li>
                *                <p>DISCONNECT</p>
                *             </li>
                *             <li>
                *                <p>TRANSFER</p>
                *             </li>
                *             <li>
                *                <p>QUEUE_TRANSFER</p>
                *             </li>
                *          </ul>
                */
            stopContact(args: StopContactCommandInput, options?: __HttpHandlerOptions): Promise<StopContactCommandOutput>;
            stopContact(args: StopContactCommandInput, cb: (err: any, data?: StopContactCommandOutput) => void): void;
            stopContact(args: StopContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactCommandOutput) => void): void;
            /**
                * <p>Stops recording a call when a contact is being recorded. StopContactRecording is a one-time
                *    action. If you use StopContactRecording to stop recording an ongoing call, you can't use
                *    StartContactRecording to restart it. For scenarios where the recording has started and you want
                *    to suspend it for sensitive information (for example, to collect a credit card number), and then
                *    restart it, use SuspendContactRecording and ResumeContactRecording.</p>
                *
                *          <p>Only voice recordings are supported at this time.</p>
                */
            stopContactRecording(args: StopContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<StopContactRecordingCommandOutput>;
            stopContactRecording(args: StopContactRecordingCommandInput, cb: (err: any, data?: StopContactRecordingCommandOutput) => void): void;
            stopContactRecording(args: StopContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactRecordingCommandOutput) => void): void;
            /**
                * <p> Ends message streaming on a specified contact. To restart message streaming on that
                *    contact, call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html">StartContactStreaming</a>
                *    API. </p>
                */
            stopContactStreaming(args: StopContactStreamingCommandInput, options?: __HttpHandlerOptions): Promise<StopContactStreamingCommandOutput>;
            stopContactStreaming(args: StopContactStreamingCommandInput, cb: (err: any, data?: StopContactStreamingCommandOutput) => void): void;
            stopContactStreaming(args: StopContactStreamingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopContactStreamingCommandOutput) => void): void;
            /**
                * <p>When a contact is being recorded, this API suspends recording the call. For example, you
                *    might suspend the call recording while collecting sensitive information, such as a credit card
                *    number. Then use ResumeContactRecording to restart recording. </p>
                *          <p>The period of time that the recording is suspended is filled with silence in the final
                *    recording. </p>
                *          <p>Only voice recordings are supported at this time.</p>
                */
            suspendContactRecording(args: SuspendContactRecordingCommandInput, options?: __HttpHandlerOptions): Promise<SuspendContactRecordingCommandOutput>;
            suspendContactRecording(args: SuspendContactRecordingCommandInput, cb: (err: any, data?: SuspendContactRecordingCommandOutput) => void): void;
            suspendContactRecording(args: SuspendContactRecordingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SuspendContactRecordingCommandOutput) => void): void;
            /**
                * <p>Adds the specified tags to the specified resource.</p>
                *          <p>The supported resource types are users, routing profiles, queues, quick connects, contact
                *    flows, agent status, hours of operation, phone number, security profiles, and task
                *    templates.</p>
                *          <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
                *     Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Transfers contacts from one agent or queue to another agent or queue at any point after a
                *    contact is created. You can transfer a contact to another queue by providing the contact flow
                *    which orchestrates the contact to the destination queue. This gives you more control over contact
                *    handling and helps you adhere to the service level agreement (SLA) guaranteed to your
                *    customers.</p>
                *          <p>Note the following requirements:</p>
                *          <ul>
                *             <li>
                *                <p>Transfer is supported for only <code>TASK</code> contacts.</p>
                *             </li>
                *             <li>
                *                <p>Do not use both <code>QueueId</code> and <code>UserId</code> in the same call.</p>
                *             </li>
                *             <li>
                *                <p>The following contact flow types are supported: Inbound contact flow, Transfer to agent
                *      flow, and Transfer to queue flow.</p>
                *             </li>
                *             <li>
                *                <p>The <code>TransferContact</code> API can be called only on active contacts.</p>
                *             </li>
                *             <li>
                *                <p>A contact cannot be transferred more than 11 times.</p>
                *             </li>
                *          </ul>
                */
            transferContact(args: TransferContactCommandInput, options?: __HttpHandlerOptions): Promise<TransferContactCommandOutput>;
            transferContact(args: TransferContactCommandInput, cb: (err: any, data?: TransferContactCommandOutput) => void): void;
            transferContact(args: TransferContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TransferContactCommandOutput) => void): void;
            /**
                * <p>Removes the specified tags from the specified resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates agent status.</p>
                */
            updateAgentStatus(args: UpdateAgentStatusCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAgentStatusCommandOutput>;
            updateAgentStatus(args: UpdateAgentStatusCommandInput, cb: (err: any, data?: UpdateAgentStatusCommandOutput) => void): void;
            updateAgentStatus(args: UpdateAgentStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAgentStatusCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Adds or updates user-defined contact information associated with the specified contact. At
                *    least one field to be updated must be present in the request.</p>
                *          <important>
                *             <p>You can add or update user-defined contact information for both ongoing and completed
                *     contacts.</p>
                *          </important>
                */
            updateContact(args: UpdateContactCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactCommandOutput>;
            updateContact(args: UpdateContactCommandInput, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
            updateContact(args: UpdateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
            /**
                * <p>Creates or updates
                *    user-defined contact attributes
                *    associated with the specified contact.</p>
                *          <p>You can create or update user-defined attributes for both ongoing and completed contacts.
                *    For example, while the call is active, you can update the customer's name or the reason the
                *    customer called. You can add notes about steps that the agent took during the call that display
                *    to the next agent that takes the call. You can also update attributes for a contact using data
                *    from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls
                *    for additional analysis, such as legal review or to identify abusive callers.</p>
                *          <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For
                *    information about CTR retention and the maximum size of the CTR attributes section, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
                *     specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
                *
                *          <p>
                *             <b>Important:</b> You cannot use the operation to update
                *    attributes for contacts that occurred prior to the release of the API, which was September 12,
                *    2018. You can update attributes only for contacts that started after the release of the API. If
                *    you attempt to update attributes for a contact that occurred prior to the release of the API, a
                *    400 error is returned. This applies also to queued callbacks that were initiated prior to the
                *    release of the API but are still active in your instance.</p>
                */
            updateContactAttributes(args: UpdateContactAttributesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactAttributesCommandOutput>;
            updateContactAttributes(args: UpdateContactAttributesCommandInput, cb: (err: any, data?: UpdateContactAttributesCommandOutput) => void): void;
            updateContactAttributes(args: UpdateContactAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactAttributesCommandOutput) => void): void;
            /**
                * <p>Updates the specified contact flow.</p>
                *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
                *    Flow language</a>.</p>
                */
            updateContactFlowContent(args: UpdateContactFlowContentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowContentCommandOutput>;
            updateContactFlowContent(args: UpdateContactFlowContentCommandInput, cb: (err: any, data?: UpdateContactFlowContentCommandOutput) => void): void;
            updateContactFlowContent(args: UpdateContactFlowContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowContentCommandOutput) => void): void;
            /**
                * <p>Updates metadata about specified contact flow.</p>
                */
            updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowMetadataCommandOutput>;
            updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, cb: (err: any, data?: UpdateContactFlowMetadataCommandOutput) => void): void;
            updateContactFlowMetadata(args: UpdateContactFlowMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowMetadataCommandOutput) => void): void;
            /**
                * <p>Updates specified contact flow module for the specified Amazon Connect instance. </p>
                */
            updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowModuleContentCommandOutput>;
            updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, cb: (err: any, data?: UpdateContactFlowModuleContentCommandOutput) => void): void;
            updateContactFlowModuleContent(args: UpdateContactFlowModuleContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowModuleContentCommandOutput) => void): void;
            /**
                * <p>Updates metadata about specified contact flow module.</p>
                */
            updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowModuleMetadataCommandOutput>;
            updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, cb: (err: any, data?: UpdateContactFlowModuleMetadataCommandOutput) => void): void;
            updateContactFlowModuleMetadata(args: UpdateContactFlowModuleMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowModuleMetadataCommandOutput) => void): void;
            /**
                * <p>The name of the contact flow.</p>
                *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
                *    Flow language</a>.</p>
                */
            updateContactFlowName(args: UpdateContactFlowNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactFlowNameCommandOutput>;
            updateContactFlowName(args: UpdateContactFlowNameCommandInput, cb: (err: any, data?: UpdateContactFlowNameCommandOutput) => void): void;
            updateContactFlowName(args: UpdateContactFlowNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactFlowNameCommandOutput) => void): void;
            /**
                * <p>Updates the scheduled time of a task contact that is already scheduled.</p>
                */
            updateContactSchedule(args: UpdateContactScheduleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactScheduleCommandOutput>;
            updateContactSchedule(args: UpdateContactScheduleCommandInput, cb: (err: any, data?: UpdateContactScheduleCommandOutput) => void): void;
            updateContactSchedule(args: UpdateContactScheduleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactScheduleCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the hours of operation.</p>
                */
            updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateHoursOfOperationCommandOutput>;
            updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, cb: (err: any, data?: UpdateHoursOfOperationCommandOutput) => void): void;
            updateHoursOfOperation(args: UpdateHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateHoursOfOperationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the value for the specified attribute type.</p>
                */
            updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, options?: __HttpHandlerOptions): Promise<UpdateInstanceAttributeCommandOutput>;
            updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, cb: (err: any, data?: UpdateInstanceAttributeCommandOutput) => void): void;
            updateInstanceAttribute(args: UpdateInstanceAttributeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateInstanceAttributeCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates an existing configuration for a resource type. This API is idempotent.</p>
                */
            updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateInstanceStorageConfigCommandOutput>;
            updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, cb: (err: any, data?: UpdateInstanceStorageConfigCommandOutput) => void): void;
            updateInstanceStorageConfig(args: UpdateInstanceStorageConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateInstanceStorageConfigCommandOutput) => void): void;
            /**
                * <p>Updates your claimed phone number from its current Amazon Connect instance to another Amazon Connect instance
                *    in the same Region.</p>
                */
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePhoneNumberCommandOutput>;
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, cb: (err: any, data?: UpdatePhoneNumberCommandOutput) => void): void;
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePhoneNumberCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the hours of operation for the specified queue.</p>
                */
            updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueHoursOfOperationCommandOutput>;
            updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, cb: (err: any, data?: UpdateQueueHoursOfOperationCommandOutput) => void): void;
            updateQueueHoursOfOperation(args: UpdateQueueHoursOfOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueHoursOfOperationCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the maximum number of contacts allowed in a queue before it is considered
                *    full.</p>
                */
            updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueMaxContactsCommandOutput>;
            updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, cb: (err: any, data?: UpdateQueueMaxContactsCommandOutput) => void): void;
            updateQueueMaxContacts(args: UpdateQueueMaxContactsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueMaxContactsCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the name and description of a queue. At least <code>Name</code> or <code>Description</code> must be provided.</p>
                */
            updateQueueName(args: UpdateQueueNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueNameCommandOutput>;
            updateQueueName(args: UpdateQueueNameCommandInput, cb: (err: any, data?: UpdateQueueNameCommandOutput) => void): void;
            updateQueueName(args: UpdateQueueNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueNameCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the outbound caller ID name, number, and outbound whisper flow for a specified
                *    queue.</p>
                */
            updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueOutboundCallerConfigCommandOutput>;
            updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, cb: (err: any, data?: UpdateQueueOutboundCallerConfigCommandOutput) => void): void;
            updateQueueOutboundCallerConfig(args: UpdateQueueOutboundCallerConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueOutboundCallerConfigCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates the status of the queue.</p>
                */
            updateQueueStatus(args: UpdateQueueStatusCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQueueStatusCommandOutput>;
            updateQueueStatus(args: UpdateQueueStatusCommandInput, cb: (err: any, data?: UpdateQueueStatusCommandOutput) => void): void;
            updateQueueStatus(args: UpdateQueueStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQueueStatusCommandOutput) => void): void;
            /**
                * <p>Updates the configuration settings for the specified quick connect.</p>
                */
            updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQuickConnectConfigCommandOutput>;
            updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, cb: (err: any, data?: UpdateQuickConnectConfigCommandOutput) => void): void;
            updateQuickConnectConfig(args: UpdateQuickConnectConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQuickConnectConfigCommandOutput) => void): void;
            /**
                * <p>Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.</p>
                */
            updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateQuickConnectNameCommandOutput>;
            updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, cb: (err: any, data?: UpdateQuickConnectNameCommandOutput) => void): void;
            updateQuickConnectName(args: UpdateQuickConnectNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateQuickConnectNameCommandOutput) => void): void;
            /**
                * <p>Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing
                *    profile.</p>
                */
            updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileConcurrencyCommandOutput>;
            updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, cb: (err: any, data?: UpdateRoutingProfileConcurrencyCommandOutput) => void): void;
            updateRoutingProfileConcurrency(args: UpdateRoutingProfileConcurrencyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileConcurrencyCommandOutput) => void): void;
            /**
                * <p>Updates the default outbound queue of a routing profile.</p>
                */
            updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileDefaultOutboundQueueCommandOutput>;
            updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, cb: (err: any, data?: UpdateRoutingProfileDefaultOutboundQueueCommandOutput) => void): void;
            updateRoutingProfileDefaultOutboundQueue(args: UpdateRoutingProfileDefaultOutboundQueueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileDefaultOutboundQueueCommandOutput) => void): void;
            /**
                * <p>Updates the name and description of a routing profile. The request accepts the following data in JSON format.
                *    At least <code>Name</code> or <code>Description</code> must be provided.</p>
                */
            updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileNameCommandOutput>;
            updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, cb: (err: any, data?: UpdateRoutingProfileNameCommandOutput) => void): void;
            updateRoutingProfileName(args: UpdateRoutingProfileNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileNameCommandOutput) => void): void;
            /**
                * <p>Updates the properties associated with a set of queues for a routing profile.</p>
                */
            updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoutingProfileQueuesCommandOutput>;
            updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, cb: (err: any, data?: UpdateRoutingProfileQueuesCommandOutput) => void): void;
            updateRoutingProfileQueues(args: UpdateRoutingProfileQueuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoutingProfileQueuesCommandOutput) => void): void;
            /**
                * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
                *          <p>Updates a security profile.</p>
                */
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSecurityProfileCommandOutput>;
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
            updateSecurityProfile(args: UpdateSecurityProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSecurityProfileCommandOutput) => void): void;
            /**
                * <p>Updates details about a specific task template in the specified Amazon Connect instance. This
                *    operation does not support partial updates. Instead it does a full update of template
                *    content.</p>
                */
            updateTaskTemplate(args: UpdateTaskTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTaskTemplateCommandOutput>;
            updateTaskTemplate(args: UpdateTaskTemplateCommandInput, cb: (err: any, data?: UpdateTaskTemplateCommandOutput) => void): void;
            updateTaskTemplate(args: UpdateTaskTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTaskTemplateCommandOutput) => void): void;
            /**
                * <p>Assigns the specified hierarchy group to the specified user.</p>
                */
            updateUserHierarchy(args: UpdateUserHierarchyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyCommandOutput>;
            updateUserHierarchy(args: UpdateUserHierarchyCommandInput, cb: (err: any, data?: UpdateUserHierarchyCommandOutput) => void): void;
            updateUserHierarchy(args: UpdateUserHierarchyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyCommandOutput) => void): void;
            /**
                * <p>Updates the name of the user hierarchy group. </p>
                */
            updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyGroupNameCommandOutput>;
            updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, cb: (err: any, data?: UpdateUserHierarchyGroupNameCommandOutput) => void): void;
            updateUserHierarchyGroupName(args: UpdateUserHierarchyGroupNameCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyGroupNameCommandOutput) => void): void;
            /**
                * <p>Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.</p>
                */
            updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserHierarchyStructureCommandOutput>;
            updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, cb: (err: any, data?: UpdateUserHierarchyStructureCommandOutput) => void): void;
            updateUserHierarchyStructure(args: UpdateUserHierarchyStructureCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserHierarchyStructureCommandOutput) => void): void;
            /**
                * <p>Updates the identity information for the specified user.</p>
                *          <important>
                *             <p>We strongly recommend limiting who has the ability to invoke
                *      <code>UpdateUserIdentityInfo</code>. Someone with that ability can change the login credentials
                *     of other users by changing their email address. This poses a security risk to your organization.
                *     They can change the email address of a user to the attacker's email address, and then reset the
                *     password through email. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for
                *      Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                *          </important>
                */
            updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserIdentityInfoCommandOutput>;
            updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, cb: (err: any, data?: UpdateUserIdentityInfoCommandOutput) => void): void;
            updateUserIdentityInfo(args: UpdateUserIdentityInfoCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserIdentityInfoCommandOutput) => void): void;
            /**
                * <p>Updates the phone configuration settings for the specified user.</p>
                */
            updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserPhoneConfigCommandOutput>;
            updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, cb: (err: any, data?: UpdateUserPhoneConfigCommandOutput) => void): void;
            updateUserPhoneConfig(args: UpdateUserPhoneConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserPhoneConfigCommandOutput) => void): void;
            /**
                * <p>Assigns the specified routing profile to the specified user.</p>
                */
            updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserRoutingProfileCommandOutput>;
            updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, cb: (err: any, data?: UpdateUserRoutingProfileCommandOutput) => void): void;
            updateUserRoutingProfile(args: UpdateUserRoutingProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserRoutingProfileCommandOutput) => void): void;
            /**
                * <p>Assigns the specified security profiles to the specified user.</p>
                */
            updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserSecurityProfilesCommandOutput>;
            updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, cb: (err: any, data?: UpdateUserSecurityProfilesCommandOutput) => void): void;
            updateUserSecurityProfiles(args: UpdateUserSecurityProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserSecurityProfilesCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateApprovedOriginCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateApprovedOriginRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateApprovedOriginCommandInput extends AssociateApprovedOriginRequest {
    }
    export interface AssociateApprovedOriginCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Associates an approved origin to an Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateApprovedOriginCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateApprovedOriginCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateApprovedOriginCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateApprovedOriginCommandInput} for command's `input` shape.
        * @see {@link AssociateApprovedOriginCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateApprovedOriginCommand extends $Command<AssociateApprovedOriginCommandInput, AssociateApprovedOriginCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateApprovedOriginCommandInput;
            constructor(input: AssociateApprovedOriginCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateApprovedOriginCommandInput, AssociateApprovedOriginCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateBotRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateBotCommandInput extends AssociateBotRequest {
    }
    export interface AssociateBotCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateBotCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateBotCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateBotCommandInput} for command's `input` shape.
        * @see {@link AssociateBotCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateBotCommand extends $Command<AssociateBotCommandInput, AssociateBotCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateBotCommandInput;
            constructor(input: AssociateBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateBotCommandInput, AssociateBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateDefaultVocabularyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateDefaultVocabularyRequest, AssociateDefaultVocabularyResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateDefaultVocabularyCommandInput extends AssociateDefaultVocabularyRequest {
    }
    export interface AssociateDefaultVocabularyCommandOutput extends AssociateDefaultVocabularyResponse, __MetadataBearer {
    }
    /**
        * <p>Associates an existing vocabulary as the default. Contact Lens for Amazon Connect uses the vocabulary in post-call
        *    and real-time analysis sessions for the given language.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateDefaultVocabularyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateDefaultVocabularyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateDefaultVocabularyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateDefaultVocabularyCommandInput} for command's `input` shape.
        * @see {@link AssociateDefaultVocabularyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateDefaultVocabularyCommand extends $Command<AssociateDefaultVocabularyCommandInput, AssociateDefaultVocabularyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateDefaultVocabularyCommandInput;
            constructor(input: AssociateDefaultVocabularyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateDefaultVocabularyCommandInput, AssociateDefaultVocabularyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateInstanceStorageConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateInstanceStorageConfigRequest, AssociateInstanceStorageConfigResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateInstanceStorageConfigCommandInput extends AssociateInstanceStorageConfigRequest {
    }
    export interface AssociateInstanceStorageConfigCommandOutput extends AssociateInstanceStorageConfigResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Associates a storage resource type for the first time. You can only associate one type of
        *    storage configuration in a single call. This means, for example, that you can't define an
        *    instance with multiple S3 buckets for storing chat transcripts.</p>
        *          <p>This API does not create a resource that doesn't exist. It only associates it to the
        *    instance. Ensure that the resource being specified in the storage configuration, like an S3
        *    bucket, exists when being used for association.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateInstanceStorageConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateInstanceStorageConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateInstanceStorageConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateInstanceStorageConfigCommandInput} for command's `input` shape.
        * @see {@link AssociateInstanceStorageConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateInstanceStorageConfigCommand extends $Command<AssociateInstanceStorageConfigCommandInput, AssociateInstanceStorageConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateInstanceStorageConfigCommandInput;
            constructor(input: AssociateInstanceStorageConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateInstanceStorageConfigCommandInput, AssociateInstanceStorageConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLambdaFunctionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateLambdaFunctionRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateLambdaFunctionCommandInput extends AssociateLambdaFunctionRequest {
    }
    export interface AssociateLambdaFunctionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Allows the specified Amazon Connect instance to access the specified Lambda function.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateLambdaFunctionCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateLambdaFunctionCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateLambdaFunctionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateLambdaFunctionCommandInput} for command's `input` shape.
        * @see {@link AssociateLambdaFunctionCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateLambdaFunctionCommand extends $Command<AssociateLambdaFunctionCommandInput, AssociateLambdaFunctionCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateLambdaFunctionCommandInput;
            constructor(input: AssociateLambdaFunctionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateLambdaFunctionCommandInput, AssociateLambdaFunctionCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLexBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateLexBotRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateLexBotCommandInput extends AssociateLexBotRequest {
    }
    export interface AssociateLexBotCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex bot.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateLexBotCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateLexBotCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateLexBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateLexBotCommandInput} for command's `input` shape.
        * @see {@link AssociateLexBotCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateLexBotCommand extends $Command<AssociateLexBotCommandInput, AssociateLexBotCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateLexBotCommandInput;
            constructor(input: AssociateLexBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateLexBotCommandInput, AssociateLexBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociatePhoneNumberContactFlowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociatePhoneNumberContactFlowRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociatePhoneNumberContactFlowCommandInput extends AssociatePhoneNumberContactFlowRequest {
    }
    export interface AssociatePhoneNumberContactFlowCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Associates a contact flow with a phone number claimed to your Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociatePhoneNumberContactFlowCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociatePhoneNumberContactFlowCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociatePhoneNumberContactFlowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociatePhoneNumberContactFlowCommandInput} for command's `input` shape.
        * @see {@link AssociatePhoneNumberContactFlowCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociatePhoneNumberContactFlowCommand extends $Command<AssociatePhoneNumberContactFlowCommandInput, AssociatePhoneNumberContactFlowCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociatePhoneNumberContactFlowCommandInput;
            constructor(input: AssociatePhoneNumberContactFlowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociatePhoneNumberContactFlowCommandInput, AssociatePhoneNumberContactFlowCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateQueueQuickConnectsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateQueueQuickConnectsRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateQueueQuickConnectsCommandInput extends AssociateQueueQuickConnectsRequest {
    }
    export interface AssociateQueueQuickConnectsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Associates a set of quick connects with a queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateQueueQuickConnectsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateQueueQuickConnectsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateQueueQuickConnectsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateQueueQuickConnectsCommandInput} for command's `input` shape.
        * @see {@link AssociateQueueQuickConnectsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateQueueQuickConnectsCommand extends $Command<AssociateQueueQuickConnectsCommandInput, AssociateQueueQuickConnectsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateQueueQuickConnectsCommandInput;
            constructor(input: AssociateQueueQuickConnectsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateQueueQuickConnectsCommandInput, AssociateQueueQuickConnectsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateRoutingProfileQueuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateRoutingProfileQueuesRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateRoutingProfileQueuesCommandInput extends AssociateRoutingProfileQueuesRequest {
    }
    export interface AssociateRoutingProfileQueuesCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Associates a set of queues with a routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateRoutingProfileQueuesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateRoutingProfileQueuesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateRoutingProfileQueuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateRoutingProfileQueuesCommandInput} for command's `input` shape.
        * @see {@link AssociateRoutingProfileQueuesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateRoutingProfileQueuesCommand extends $Command<AssociateRoutingProfileQueuesCommandInput, AssociateRoutingProfileQueuesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateRoutingProfileQueuesCommandInput;
            constructor(input: AssociateRoutingProfileQueuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateRoutingProfileQueuesCommandInput, AssociateRoutingProfileQueuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateSecurityKeyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { AssociateSecurityKeyRequest, AssociateSecurityKeyResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface AssociateSecurityKeyCommandInput extends AssociateSecurityKeyRequest {
    }
    export interface AssociateSecurityKeyCommandOutput extends AssociateSecurityKeyResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Associates a security key to the instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, AssociateSecurityKeyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, AssociateSecurityKeyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new AssociateSecurityKeyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateSecurityKeyCommandInput} for command's `input` shape.
        * @see {@link AssociateSecurityKeyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class AssociateSecurityKeyCommand extends $Command<AssociateSecurityKeyCommandInput, AssociateSecurityKeyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: AssociateSecurityKeyCommandInput;
            constructor(input: AssociateSecurityKeyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateSecurityKeyCommandInput, AssociateSecurityKeyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ClaimPhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ClaimPhoneNumberRequest, ClaimPhoneNumberResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ClaimPhoneNumberCommandInput extends ClaimPhoneNumberRequest {
    }
    export interface ClaimPhoneNumberCommandOutput extends ClaimPhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Claims an available phone number to your Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ClaimPhoneNumberCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ClaimPhoneNumberCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ClaimPhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ClaimPhoneNumberCommandInput} for command's `input` shape.
        * @see {@link ClaimPhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ClaimPhoneNumberCommand extends $Command<ClaimPhoneNumberCommandInput, ClaimPhoneNumberCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ClaimPhoneNumberCommandInput;
            constructor(input: ClaimPhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ClaimPhoneNumberCommandInput, ClaimPhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateAgentStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateAgentStatusRequest, CreateAgentStatusResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateAgentStatusCommandInput extends CreateAgentStatusRequest {
    }
    export interface CreateAgentStatusCommandOutput extends CreateAgentStatusResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Creates an agent status for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateAgentStatusCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateAgentStatusCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateAgentStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAgentStatusCommandInput} for command's `input` shape.
        * @see {@link CreateAgentStatusCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateAgentStatusCommand extends $Command<CreateAgentStatusCommandInput, CreateAgentStatusCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateAgentStatusCommandInput;
            constructor(input: CreateAgentStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAgentStatusCommandInput, CreateAgentStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateContactFlowRequest, CreateContactFlowResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateContactFlowCommandInput extends CreateContactFlowRequest {
    }
    export interface CreateContactFlowCommandOutput extends CreateContactFlowResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a contact flow for the specified Amazon Connect instance.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateContactFlowCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateContactFlowCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateContactFlowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateContactFlowCommandInput} for command's `input` shape.
        * @see {@link CreateContactFlowCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateContactFlowCommand extends $Command<CreateContactFlowCommandInput, CreateContactFlowCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateContactFlowCommandInput;
            constructor(input: CreateContactFlowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateContactFlowCommandInput, CreateContactFlowCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowModuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateContactFlowModuleRequest, CreateContactFlowModuleResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateContactFlowModuleCommandInput extends CreateContactFlowModuleRequest {
    }
    export interface CreateContactFlowModuleCommandOutput extends CreateContactFlowModuleResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a contact flow module for the specified Amazon Connect instance. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateContactFlowModuleCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateContactFlowModuleCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateContactFlowModuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateContactFlowModuleCommandInput} for command's `input` shape.
        * @see {@link CreateContactFlowModuleCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateContactFlowModuleCommand extends $Command<CreateContactFlowModuleCommandInput, CreateContactFlowModuleCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateContactFlowModuleCommandInput;
            constructor(input: CreateContactFlowModuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateContactFlowModuleCommandInput, CreateContactFlowModuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateHoursOfOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateHoursOfOperationRequest, CreateHoursOfOperationResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateHoursOfOperationCommandInput extends CreateHoursOfOperationRequest {
    }
    export interface CreateHoursOfOperationCommandOutput extends CreateHoursOfOperationResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Creates hours of operation. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateHoursOfOperationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateHoursOfOperationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateHoursOfOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateHoursOfOperationCommandInput} for command's `input` shape.
        * @see {@link CreateHoursOfOperationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateHoursOfOperationCommand extends $Command<CreateHoursOfOperationCommandInput, CreateHoursOfOperationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateHoursOfOperationCommandInput;
            constructor(input: CreateHoursOfOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateHoursOfOperationCommandInput, CreateHoursOfOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateInstanceRequest, CreateInstanceResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateInstanceCommandInput extends CreateInstanceRequest {
    }
    export interface CreateInstanceCommandOutput extends CreateInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any
        *    storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not
        *    allow for any configurations on features, such as Contact Lens for Amazon Connect. </p>
        *          <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
        * If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
        * You must wait 30 days before you can restart creating and deleting instances in your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateInstanceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateInstanceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateInstanceCommandInput} for command's `input` shape.
        * @see {@link CreateInstanceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateInstanceCommand extends $Command<CreateInstanceCommandInput, CreateInstanceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateInstanceCommandInput;
            constructor(input: CreateInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateInstanceCommandInput, CreateInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateIntegrationAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateIntegrationAssociationRequest, CreateIntegrationAssociationResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateIntegrationAssociationCommandInput extends CreateIntegrationAssociationRequest {
    }
    export interface CreateIntegrationAssociationCommandOutput extends CreateIntegrationAssociationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Web Services resource association with an Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateIntegrationAssociationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateIntegrationAssociationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateIntegrationAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateIntegrationAssociationCommandInput} for command's `input` shape.
        * @see {@link CreateIntegrationAssociationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateIntegrationAssociationCommand extends $Command<CreateIntegrationAssociationCommandInput, CreateIntegrationAssociationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateIntegrationAssociationCommandInput;
            constructor(input: CreateIntegrationAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateIntegrationAssociationCommandInput, CreateIntegrationAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQueueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateQueueRequest, CreateQueueResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateQueueCommandInput extends CreateQueueRequest {
    }
    export interface CreateQueueCommandOutput extends CreateQueueResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Creates a new queue for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateQueueCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateQueueCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateQueueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateQueueCommandInput} for command's `input` shape.
        * @see {@link CreateQueueCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateQueueCommand extends $Command<CreateQueueCommandInput, CreateQueueCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateQueueCommandInput;
            constructor(input: CreateQueueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateQueueCommandInput, CreateQueueCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQuickConnectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateQuickConnectRequest, CreateQuickConnectResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateQuickConnectCommandInput extends CreateQuickConnectRequest {
    }
    export interface CreateQuickConnectCommandOutput extends CreateQuickConnectResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a quick connect for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateQuickConnectCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateQuickConnectCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateQuickConnectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateQuickConnectCommandInput} for command's `input` shape.
        * @see {@link CreateQuickConnectCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateQuickConnectCommand extends $Command<CreateQuickConnectCommandInput, CreateQuickConnectCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateQuickConnectCommandInput;
            constructor(input: CreateQuickConnectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateQuickConnectCommandInput, CreateQuickConnectCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateRoutingProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateRoutingProfileRequest, CreateRoutingProfileResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateRoutingProfileCommandInput extends CreateRoutingProfileRequest {
    }
    export interface CreateRoutingProfileCommandOutput extends CreateRoutingProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateRoutingProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateRoutingProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateRoutingProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRoutingProfileCommandInput} for command's `input` shape.
        * @see {@link CreateRoutingProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateRoutingProfileCommand extends $Command<CreateRoutingProfileCommandInput, CreateRoutingProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateRoutingProfileCommandInput;
            constructor(input: CreateRoutingProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRoutingProfileCommandInput, CreateRoutingProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateSecurityProfileRequest, CreateSecurityProfileResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateSecurityProfileCommandInput extends CreateSecurityProfileRequest {
    }
    export interface CreateSecurityProfileCommandOutput extends CreateSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Creates a security profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateSecurityProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateSecurityProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link CreateSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateSecurityProfileCommand extends $Command<CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateSecurityProfileCommandInput;
            constructor(input: CreateSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateTaskTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateTaskTemplateRequest, CreateTaskTemplateResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateTaskTemplateCommandInput extends CreateTaskTemplateRequest {
    }
    export interface CreateTaskTemplateCommandOutput extends CreateTaskTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new task template in the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateTaskTemplateCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateTaskTemplateCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateTaskTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTaskTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateTaskTemplateCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateTaskTemplateCommand extends $Command<CreateTaskTemplateCommandInput, CreateTaskTemplateCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateTaskTemplateCommandInput;
            constructor(input: CreateTaskTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTaskTemplateCommandInput, CreateTaskTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUseCaseCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateUseCaseRequest, CreateUseCaseResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateUseCaseCommandInput extends CreateUseCaseRequest {
    }
    export interface CreateUseCaseCommandOutput extends CreateUseCaseResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a use case for an integration association.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateUseCaseCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateUseCaseCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateUseCaseCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateUseCaseCommandInput} for command's `input` shape.
        * @see {@link CreateUseCaseCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateUseCaseCommand extends $Command<CreateUseCaseCommandInput, CreateUseCaseCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateUseCaseCommandInput;
            constructor(input: CreateUseCaseCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateUseCaseCommandInput, CreateUseCaseCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateUserRequest, CreateUserResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateUserCommandInput extends CreateUserRequest {
    }
    export interface CreateUserCommandOutput extends CreateUserResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a user account for the specified Amazon Connect instance.</p>
        *          <p>For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users</a> in
        *    the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateUserCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateUserCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateUserCommandInput} for command's `input` shape.
        * @see {@link CreateUserCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateUserCommand extends $Command<CreateUserCommandInput, CreateUserCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateUserCommandInput;
            constructor(input: CreateUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateUserCommandInput, CreateUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserHierarchyGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateUserHierarchyGroupRequest, CreateUserHierarchyGroupResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateUserHierarchyGroupCommandInput extends CreateUserHierarchyGroupRequest {
    }
    export interface CreateUserHierarchyGroupCommandOutput extends CreateUserHierarchyGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new user hierarchy group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateUserHierarchyGroupCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateUserHierarchyGroupCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateUserHierarchyGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateUserHierarchyGroupCommandInput} for command's `input` shape.
        * @see {@link CreateUserHierarchyGroupCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateUserHierarchyGroupCommand extends $Command<CreateUserHierarchyGroupCommandInput, CreateUserHierarchyGroupCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateUserHierarchyGroupCommandInput;
            constructor(input: CreateUserHierarchyGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateUserHierarchyGroupCommandInput, CreateUserHierarchyGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateVocabularyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { CreateVocabularyRequest, CreateVocabularyResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface CreateVocabularyCommandInput extends CreateVocabularyRequest {
    }
    export interface CreateVocabularyCommandOutput extends CreateVocabularyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a custom vocabulary associated with your Amazon Connect instance. You can set a custom
        *    vocabulary to be your default vocabulary for a given language. Contact Lens for Amazon Connect uses the default
        *    vocabulary in post-call and real-time contact analysis sessions for that language.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, CreateVocabularyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, CreateVocabularyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new CreateVocabularyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateVocabularyCommandInput} for command's `input` shape.
        * @see {@link CreateVocabularyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class CreateVocabularyCommand extends $Command<CreateVocabularyCommandInput, CreateVocabularyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: CreateVocabularyCommandInput;
            constructor(input: CreateVocabularyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVocabularyCommandInput, CreateVocabularyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteContactFlowRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteContactFlowCommandInput extends DeleteContactFlowRequest {
    }
    export interface DeleteContactFlowCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a contact flow for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteContactFlowCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteContactFlowCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteContactFlowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteContactFlowCommandInput} for command's `input` shape.
        * @see {@link DeleteContactFlowCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteContactFlowCommand extends $Command<DeleteContactFlowCommandInput, DeleteContactFlowCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteContactFlowCommandInput;
            constructor(input: DeleteContactFlowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteContactFlowCommandInput, DeleteContactFlowCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowModuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteContactFlowModuleRequest, DeleteContactFlowModuleResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteContactFlowModuleCommandInput extends DeleteContactFlowModuleRequest {
    }
    export interface DeleteContactFlowModuleCommandOutput extends DeleteContactFlowModuleResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified contact flow module.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteContactFlowModuleCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteContactFlowModuleCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteContactFlowModuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteContactFlowModuleCommandInput} for command's `input` shape.
        * @see {@link DeleteContactFlowModuleCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteContactFlowModuleCommand extends $Command<DeleteContactFlowModuleCommandInput, DeleteContactFlowModuleCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteContactFlowModuleCommandInput;
            constructor(input: DeleteContactFlowModuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteContactFlowModuleCommandInput, DeleteContactFlowModuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteHoursOfOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteHoursOfOperationRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteHoursOfOperationCommandInput extends DeleteHoursOfOperationRequest {
    }
    export interface DeleteHoursOfOperationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Deletes an hours of operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteHoursOfOperationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteHoursOfOperationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteHoursOfOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteHoursOfOperationCommandInput} for command's `input` shape.
        * @see {@link DeleteHoursOfOperationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteHoursOfOperationCommand extends $Command<DeleteHoursOfOperationCommandInput, DeleteHoursOfOperationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteHoursOfOperationCommandInput;
            constructor(input: DeleteHoursOfOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteHoursOfOperationCommandInput, DeleteHoursOfOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteInstanceRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteInstanceCommandInput extends DeleteInstanceRequest {
    }
    export interface DeleteInstanceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Deletes the Amazon Connect instance.</p>
        *          <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
        * If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
        * You must wait 30 days before you can restart creating and deleting instances in your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteInstanceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteInstanceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteInstanceCommandInput} for command's `input` shape.
        * @see {@link DeleteInstanceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteInstanceCommand extends $Command<DeleteInstanceCommandInput, DeleteInstanceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteInstanceCommandInput;
            constructor(input: DeleteInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteInstanceCommandInput, DeleteInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteIntegrationAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteIntegrationAssociationRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteIntegrationAssociationCommandInput extends DeleteIntegrationAssociationRequest {
    }
    export interface DeleteIntegrationAssociationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an Amazon Web Services resource association from an Amazon Connect instance. The association
        *    must not have any use cases associated with it.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteIntegrationAssociationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteIntegrationAssociationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteIntegrationAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteIntegrationAssociationCommandInput} for command's `input` shape.
        * @see {@link DeleteIntegrationAssociationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteIntegrationAssociationCommand extends $Command<DeleteIntegrationAssociationCommandInput, DeleteIntegrationAssociationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteIntegrationAssociationCommandInput;
            constructor(input: DeleteIntegrationAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteIntegrationAssociationCommandInput, DeleteIntegrationAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteQuickConnectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteQuickConnectRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteQuickConnectCommandInput extends DeleteQuickConnectRequest {
    }
    export interface DeleteQuickConnectCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a quick connect.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteQuickConnectCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteQuickConnectCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteQuickConnectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteQuickConnectCommandInput} for command's `input` shape.
        * @see {@link DeleteQuickConnectCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteQuickConnectCommand extends $Command<DeleteQuickConnectCommandInput, DeleteQuickConnectCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteQuickConnectCommandInput;
            constructor(input: DeleteQuickConnectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteQuickConnectCommandInput, DeleteQuickConnectCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteSecurityProfileRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteSecurityProfileCommandInput extends DeleteSecurityProfileRequest {
    }
    export interface DeleteSecurityProfileCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Deletes a security profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteSecurityProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteSecurityProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link DeleteSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteSecurityProfileCommand extends $Command<DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteSecurityProfileCommandInput;
            constructor(input: DeleteSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteTaskTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteTaskTemplateRequest, DeleteTaskTemplateResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteTaskTemplateCommandInput extends DeleteTaskTemplateRequest {
    }
    export interface DeleteTaskTemplateCommandOutput extends DeleteTaskTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the task template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteTaskTemplateCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteTaskTemplateCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteTaskTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTaskTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteTaskTemplateCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteTaskTemplateCommand extends $Command<DeleteTaskTemplateCommandInput, DeleteTaskTemplateCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteTaskTemplateCommandInput;
            constructor(input: DeleteTaskTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTaskTemplateCommandInput, DeleteTaskTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUseCaseCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteUseCaseRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteUseCaseCommandInput extends DeleteUseCaseRequest {
    }
    export interface DeleteUseCaseCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a use case from an integration association.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteUseCaseCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteUseCaseCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteUseCaseCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteUseCaseCommandInput} for command's `input` shape.
        * @see {@link DeleteUseCaseCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteUseCaseCommand extends $Command<DeleteUseCaseCommandInput, DeleteUseCaseCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteUseCaseCommandInput;
            constructor(input: DeleteUseCaseCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteUseCaseCommandInput, DeleteUseCaseCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteUserRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteUserCommandInput extends DeleteUserRequest {
    }
    export interface DeleteUserCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a user account from the specified Amazon Connect instance.</p>
        *          <p>For information about what happens to a user's data when their account is deleted, see
        *     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from
        *     Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteUserCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteUserCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteUserCommandInput} for command's `input` shape.
        * @see {@link DeleteUserCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteUserCommand extends $Command<DeleteUserCommandInput, DeleteUserCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteUserCommandInput;
            constructor(input: DeleteUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteUserCommandInput, DeleteUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserHierarchyGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteUserHierarchyGroupRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteUserHierarchyGroupCommandInput extends DeleteUserHierarchyGroupRequest {
    }
    export interface DeleteUserHierarchyGroupCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an existing user hierarchy group. It must not be associated with any agents or have
        *    any active child groups.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteUserHierarchyGroupCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteUserHierarchyGroupCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteUserHierarchyGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteUserHierarchyGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteUserHierarchyGroupCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteUserHierarchyGroupCommand extends $Command<DeleteUserHierarchyGroupCommandInput, DeleteUserHierarchyGroupCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteUserHierarchyGroupCommandInput;
            constructor(input: DeleteUserHierarchyGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteUserHierarchyGroupCommandInput, DeleteUserHierarchyGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteVocabularyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DeleteVocabularyRequest, DeleteVocabularyResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DeleteVocabularyCommandInput extends DeleteVocabularyRequest {
    }
    export interface DeleteVocabularyCommandOutput extends DeleteVocabularyResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the vocabulary that has the given identifier.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DeleteVocabularyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DeleteVocabularyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DeleteVocabularyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVocabularyCommandInput} for command's `input` shape.
        * @see {@link DeleteVocabularyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DeleteVocabularyCommand extends $Command<DeleteVocabularyCommandInput, DeleteVocabularyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DeleteVocabularyCommandInput;
            constructor(input: DeleteVocabularyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVocabularyCommandInput, DeleteVocabularyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeAgentStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeAgentStatusRequest, DescribeAgentStatusResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeAgentStatusCommandInput extends DescribeAgentStatusRequest {
    }
    export interface DescribeAgentStatusCommandOutput extends DescribeAgentStatusResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Describes an agent status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeAgentStatusCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeAgentStatusCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeAgentStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAgentStatusCommandInput} for command's `input` shape.
        * @see {@link DescribeAgentStatusCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeAgentStatusCommand extends $Command<DescribeAgentStatusCommandInput, DescribeAgentStatusCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeAgentStatusCommandInput;
            constructor(input: DescribeAgentStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAgentStatusCommandInput, DescribeAgentStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeContactRequest, DescribeContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeContactCommandInput extends DescribeContactRequest {
    }
    export interface DescribeContactCommandOutput extends DescribeContactResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Describes the specified contact. </p>
        *          <important>
        *             <p>Contact information remains available in Amazon Connect for 24 months, and then it is
        *     deleted.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeContactCommandInput} for command's `input` shape.
        * @see {@link DescribeContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeContactCommand extends $Command<DescribeContactCommandInput, DescribeContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeContactCommandInput;
            constructor(input: DescribeContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeContactCommandInput, DescribeContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeContactFlowRequest, DescribeContactFlowResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeContactFlowCommandInput extends DescribeContactFlowRequest {
    }
    export interface DescribeContactFlowCommandOutput extends DescribeContactFlowResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified contact flow.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeContactFlowCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeContactFlowCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeContactFlowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeContactFlowCommandInput} for command's `input` shape.
        * @see {@link DescribeContactFlowCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeContactFlowCommand extends $Command<DescribeContactFlowCommandInput, DescribeContactFlowCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeContactFlowCommandInput;
            constructor(input: DescribeContactFlowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeContactFlowCommandInput, DescribeContactFlowCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowModuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeContactFlowModuleRequest, DescribeContactFlowModuleResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeContactFlowModuleCommandInput extends DescribeContactFlowModuleRequest {
    }
    export interface DescribeContactFlowModuleCommandOutput extends DescribeContactFlowModuleResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified contact flow module.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeContactFlowModuleCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeContactFlowModuleCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeContactFlowModuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeContactFlowModuleCommandInput} for command's `input` shape.
        * @see {@link DescribeContactFlowModuleCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeContactFlowModuleCommand extends $Command<DescribeContactFlowModuleCommandInput, DescribeContactFlowModuleCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeContactFlowModuleCommandInput;
            constructor(input: DescribeContactFlowModuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeContactFlowModuleCommandInput, DescribeContactFlowModuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeHoursOfOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeHoursOfOperationRequest, DescribeHoursOfOperationResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeHoursOfOperationCommandInput extends DescribeHoursOfOperationRequest {
    }
    export interface DescribeHoursOfOperationCommandOutput extends DescribeHoursOfOperationResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Describes the hours of operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeHoursOfOperationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeHoursOfOperationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeHoursOfOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeHoursOfOperationCommandInput} for command's `input` shape.
        * @see {@link DescribeHoursOfOperationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeHoursOfOperationCommand extends $Command<DescribeHoursOfOperationCommandInput, DescribeHoursOfOperationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeHoursOfOperationCommandInput;
            constructor(input: DescribeHoursOfOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeHoursOfOperationCommandInput, DescribeHoursOfOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceAttributeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeInstanceAttributeRequest, DescribeInstanceAttributeResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeInstanceAttributeCommandInput extends DescribeInstanceAttributeRequest {
    }
    export interface DescribeInstanceAttributeCommandOutput extends DescribeInstanceAttributeResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Describes the specified instance attribute.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeInstanceAttributeCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeInstanceAttributeCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeInstanceAttributeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeInstanceAttributeCommandInput} for command's `input` shape.
        * @see {@link DescribeInstanceAttributeCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeInstanceAttributeCommand extends $Command<DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeInstanceAttributeCommandInput;
            constructor(input: DescribeInstanceAttributeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeInstanceRequest, DescribeInstanceResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeInstanceCommandInput extends DescribeInstanceRequest {
    }
    export interface DescribeInstanceCommandOutput extends DescribeInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns the current state of the specified instance identifier. It tracks the instance while
        *    it is being created and returns an error status, if applicable. </p>
        *          <p>If an instance is not created successfully, the instance status reason field returns details
        *    relevant to the reason. The instance in a failed state is returned only for 24 hours after the
        *    CreateInstance API was invoked.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeInstanceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeInstanceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeInstanceCommandInput} for command's `input` shape.
        * @see {@link DescribeInstanceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeInstanceCommand extends $Command<DescribeInstanceCommandInput, DescribeInstanceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeInstanceCommandInput;
            constructor(input: DescribeInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeInstanceCommandInput, DescribeInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceStorageConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeInstanceStorageConfigRequest, DescribeInstanceStorageConfigResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeInstanceStorageConfigCommandInput extends DescribeInstanceStorageConfigRequest {
    }
    export interface DescribeInstanceStorageConfigCommandOutput extends DescribeInstanceStorageConfigResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Retrieves the current storage configurations for the specified resource type, association
        *    ID, and instance ID.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeInstanceStorageConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeInstanceStorageConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeInstanceStorageConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeInstanceStorageConfigCommandInput} for command's `input` shape.
        * @see {@link DescribeInstanceStorageConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeInstanceStorageConfigCommand extends $Command<DescribeInstanceStorageConfigCommandInput, DescribeInstanceStorageConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeInstanceStorageConfigCommandInput;
            constructor(input: DescribeInstanceStorageConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeInstanceStorageConfigCommandInput, DescribeInstanceStorageConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribePhoneNumberRequest, DescribePhoneNumberResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribePhoneNumberCommandInput extends DescribePhoneNumberRequest {
    }
    export interface DescribePhoneNumberCommandOutput extends DescribePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Gets details and status of a phone number that’s claimed to your Amazon Connect instance</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribePhoneNumberCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribePhoneNumberCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link DescribePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribePhoneNumberCommand extends $Command<DescribePhoneNumberCommandInput, DescribePhoneNumberCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribePhoneNumberCommandInput;
            constructor(input: DescribePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePhoneNumberCommandInput, DescribePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQueueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeQueueRequest, DescribeQueueResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeQueueCommandInput extends DescribeQueueRequest {
    }
    export interface DescribeQueueCommandOutput extends DescribeQueueResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Describes the specified queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeQueueCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeQueueCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeQueueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeQueueCommandInput} for command's `input` shape.
        * @see {@link DescribeQueueCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeQueueCommand extends $Command<DescribeQueueCommandInput, DescribeQueueCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeQueueCommandInput;
            constructor(input: DescribeQueueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeQueueCommandInput, DescribeQueueCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQuickConnectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeQuickConnectRequest, DescribeQuickConnectResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeQuickConnectCommandInput extends DescribeQuickConnectRequest {
    }
    export interface DescribeQuickConnectCommandOutput extends DescribeQuickConnectResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the quick connect.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeQuickConnectCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeQuickConnectCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeQuickConnectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeQuickConnectCommandInput} for command's `input` shape.
        * @see {@link DescribeQuickConnectCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeQuickConnectCommand extends $Command<DescribeQuickConnectCommandInput, DescribeQuickConnectCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeQuickConnectCommandInput;
            constructor(input: DescribeQuickConnectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeQuickConnectCommandInput, DescribeQuickConnectCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeRoutingProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeRoutingProfileRequest, DescribeRoutingProfileResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeRoutingProfileCommandInput extends DescribeRoutingProfileRequest {
    }
    export interface DescribeRoutingProfileCommandOutput extends DescribeRoutingProfileResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeRoutingProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeRoutingProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeRoutingProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeRoutingProfileCommandInput} for command's `input` shape.
        * @see {@link DescribeRoutingProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeRoutingProfileCommand extends $Command<DescribeRoutingProfileCommandInput, DescribeRoutingProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeRoutingProfileCommandInput;
            constructor(input: DescribeRoutingProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeRoutingProfileCommandInput, DescribeRoutingProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeSecurityProfileRequest, DescribeSecurityProfileResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeSecurityProfileCommandInput extends DescribeSecurityProfileRequest {
    }
    export interface DescribeSecurityProfileCommandOutput extends DescribeSecurityProfileResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Gets basic information about the security profle.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeSecurityProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeSecurityProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link DescribeSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeSecurityProfileCommand extends $Command<DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeSecurityProfileCommandInput;
            constructor(input: DescribeSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeUserRequest, DescribeUserResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeUserCommandInput extends DescribeUserRequest {
    }
    export interface DescribeUserCommandOutput extends DescribeUserResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified user account. You can find the instance ID in the console (it’s the
        *    final part of the ARN). The console does not display the user IDs. Instead, list the users and
        *    note the IDs provided in the output.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeUserCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeUserCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeUserCommandInput} for command's `input` shape.
        * @see {@link DescribeUserCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeUserCommand extends $Command<DescribeUserCommandInput, DescribeUserCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeUserCommandInput;
            constructor(input: DescribeUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeUserCommandInput, DescribeUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeUserHierarchyGroupRequest, DescribeUserHierarchyGroupResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeUserHierarchyGroupCommandInput extends DescribeUserHierarchyGroupRequest {
    }
    export interface DescribeUserHierarchyGroupCommandOutput extends DescribeUserHierarchyGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified hierarchy group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeUserHierarchyGroupCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeUserHierarchyGroupCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeUserHierarchyGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeUserHierarchyGroupCommandInput} for command's `input` shape.
        * @see {@link DescribeUserHierarchyGroupCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeUserHierarchyGroupCommand extends $Command<DescribeUserHierarchyGroupCommandInput, DescribeUserHierarchyGroupCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeUserHierarchyGroupCommandInput;
            constructor(input: DescribeUserHierarchyGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeUserHierarchyGroupCommandInput, DescribeUserHierarchyGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyStructureCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeUserHierarchyStructureRequest, DescribeUserHierarchyStructureResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeUserHierarchyStructureCommandInput extends DescribeUserHierarchyStructureRequest {
    }
    export interface DescribeUserHierarchyStructureCommandOutput extends DescribeUserHierarchyStructureResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the hierarchy structure of the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeUserHierarchyStructureCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeUserHierarchyStructureCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeUserHierarchyStructureCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeUserHierarchyStructureCommandInput} for command's `input` shape.
        * @see {@link DescribeUserHierarchyStructureCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeUserHierarchyStructureCommand extends $Command<DescribeUserHierarchyStructureCommandInput, DescribeUserHierarchyStructureCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeUserHierarchyStructureCommandInput;
            constructor(input: DescribeUserHierarchyStructureCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeUserHierarchyStructureCommandInput, DescribeUserHierarchyStructureCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeVocabularyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DescribeVocabularyRequest, DescribeVocabularyResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DescribeVocabularyCommandInput extends DescribeVocabularyRequest {
    }
    export interface DescribeVocabularyCommandOutput extends DescribeVocabularyResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the specified vocabulary.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DescribeVocabularyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DescribeVocabularyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DescribeVocabularyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeVocabularyCommandInput} for command's `input` shape.
        * @see {@link DescribeVocabularyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DescribeVocabularyCommand extends $Command<DescribeVocabularyCommandInput, DescribeVocabularyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DescribeVocabularyCommandInput;
            constructor(input: DescribeVocabularyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeVocabularyCommandInput, DescribeVocabularyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateApprovedOriginCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateApprovedOriginRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateApprovedOriginCommandInput extends DisassociateApprovedOriginRequest {
    }
    export interface DisassociateApprovedOriginCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Revokes access to integrated applications from Amazon Connect.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateApprovedOriginCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateApprovedOriginCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateApprovedOriginCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateApprovedOriginCommandInput} for command's `input` shape.
        * @see {@link DisassociateApprovedOriginCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateApprovedOriginCommand extends $Command<DisassociateApprovedOriginCommandInput, DisassociateApprovedOriginCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateApprovedOriginCommandInput;
            constructor(input: DisassociateApprovedOriginCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateApprovedOriginCommandInput, DisassociateApprovedOriginCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateBotRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateBotCommandInput extends DisassociateBotRequest {
    }
    export interface DisassociateBotCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2
        *    bot. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateBotCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateBotCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateBotCommandInput} for command's `input` shape.
        * @see {@link DisassociateBotCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateBotCommand extends $Command<DisassociateBotCommandInput, DisassociateBotCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateBotCommandInput;
            constructor(input: DisassociateBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateBotCommandInput, DisassociateBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateInstanceStorageConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateInstanceStorageConfigRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateInstanceStorageConfigCommandInput extends DisassociateInstanceStorageConfigRequest {
    }
    export interface DisassociateInstanceStorageConfigCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Removes the storage type configurations for the specified resource type and association
        *    ID.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateInstanceStorageConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateInstanceStorageConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateInstanceStorageConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateInstanceStorageConfigCommandInput} for command's `input` shape.
        * @see {@link DisassociateInstanceStorageConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateInstanceStorageConfigCommand extends $Command<DisassociateInstanceStorageConfigCommandInput, DisassociateInstanceStorageConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateInstanceStorageConfigCommandInput;
            constructor(input: DisassociateInstanceStorageConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateInstanceStorageConfigCommandInput, DisassociateInstanceStorageConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLambdaFunctionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateLambdaFunctionRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateLambdaFunctionCommandInput extends DisassociateLambdaFunctionRequest {
    }
    export interface DisassociateLambdaFunctionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Remove the Lambda function from the dropdown options available in the relevant contact flow
        *    blocks.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateLambdaFunctionCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateLambdaFunctionCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateLambdaFunctionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateLambdaFunctionCommandInput} for command's `input` shape.
        * @see {@link DisassociateLambdaFunctionCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateLambdaFunctionCommand extends $Command<DisassociateLambdaFunctionCommandInput, DisassociateLambdaFunctionCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateLambdaFunctionCommandInput;
            constructor(input: DisassociateLambdaFunctionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateLambdaFunctionCommandInput, DisassociateLambdaFunctionCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLexBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateLexBotRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateLexBotCommandInput extends DisassociateLexBotRequest {
    }
    export interface DisassociateLexBotCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Revokes authorization from the specified instance to access the specified Amazon Lex bot.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateLexBotCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateLexBotCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateLexBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateLexBotCommandInput} for command's `input` shape.
        * @see {@link DisassociateLexBotCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateLexBotCommand extends $Command<DisassociateLexBotCommandInput, DisassociateLexBotCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateLexBotCommandInput;
            constructor(input: DisassociateLexBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateLexBotCommandInput, DisassociateLexBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociatePhoneNumberContactFlowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociatePhoneNumberContactFlowRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociatePhoneNumberContactFlowCommandInput extends DisassociatePhoneNumberContactFlowRequest {
    }
    export interface DisassociatePhoneNumberContactFlowCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the contact flow association from a phone number claimed to your Amazon Connect instance, if
        *    a contact flow association exists.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociatePhoneNumberContactFlowCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociatePhoneNumberContactFlowCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociatePhoneNumberContactFlowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociatePhoneNumberContactFlowCommandInput} for command's `input` shape.
        * @see {@link DisassociatePhoneNumberContactFlowCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociatePhoneNumberContactFlowCommand extends $Command<DisassociatePhoneNumberContactFlowCommandInput, DisassociatePhoneNumberContactFlowCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociatePhoneNumberContactFlowCommandInput;
            constructor(input: DisassociatePhoneNumberContactFlowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociatePhoneNumberContactFlowCommandInput, DisassociatePhoneNumberContactFlowCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateQueueQuickConnectsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateQueueQuickConnectsRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateQueueQuickConnectsCommandInput extends DisassociateQueueQuickConnectsRequest {
    }
    export interface DisassociateQueueQuickConnectsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Disassociates a set of quick connects from a queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateQueueQuickConnectsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateQueueQuickConnectsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateQueueQuickConnectsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateQueueQuickConnectsCommandInput} for command's `input` shape.
        * @see {@link DisassociateQueueQuickConnectsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateQueueQuickConnectsCommand extends $Command<DisassociateQueueQuickConnectsCommandInput, DisassociateQueueQuickConnectsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateQueueQuickConnectsCommandInput;
            constructor(input: DisassociateQueueQuickConnectsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateQueueQuickConnectsCommandInput, DisassociateQueueQuickConnectsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateRoutingProfileQueuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateRoutingProfileQueuesRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateRoutingProfileQueuesCommandInput extends DisassociateRoutingProfileQueuesRequest {
    }
    export interface DisassociateRoutingProfileQueuesCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disassociates a set of queues from a routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateRoutingProfileQueuesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateRoutingProfileQueuesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateRoutingProfileQueuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateRoutingProfileQueuesCommandInput} for command's `input` shape.
        * @see {@link DisassociateRoutingProfileQueuesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateRoutingProfileQueuesCommand extends $Command<DisassociateRoutingProfileQueuesCommandInput, DisassociateRoutingProfileQueuesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateRoutingProfileQueuesCommandInput;
            constructor(input: DisassociateRoutingProfileQueuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateRoutingProfileQueuesCommandInput, DisassociateRoutingProfileQueuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateSecurityKeyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { DisassociateSecurityKeyRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface DisassociateSecurityKeyCommandInput extends DisassociateSecurityKeyRequest {
    }
    export interface DisassociateSecurityKeyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Deletes the specified security key.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, DisassociateSecurityKeyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, DisassociateSecurityKeyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new DisassociateSecurityKeyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateSecurityKeyCommandInput} for command's `input` shape.
        * @see {@link DisassociateSecurityKeyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class DisassociateSecurityKeyCommand extends $Command<DisassociateSecurityKeyCommandInput, DisassociateSecurityKeyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: DisassociateSecurityKeyCommandInput;
            constructor(input: DisassociateSecurityKeyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateSecurityKeyCommandInput, DisassociateSecurityKeyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetContactAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetContactAttributesRequest, GetContactAttributesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetContactAttributesCommandInput extends GetContactAttributesRequest {
    }
    export interface GetContactAttributesCommandOutput extends GetContactAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the contact attributes for the specified contact.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetContactAttributesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetContactAttributesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetContactAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetContactAttributesCommandInput} for command's `input` shape.
        * @see {@link GetContactAttributesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetContactAttributesCommand extends $Command<GetContactAttributesCommandInput, GetContactAttributesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetContactAttributesCommandInput;
            constructor(input: GetContactAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetContactAttributesCommandInput, GetContactAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentMetricDataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetCurrentMetricDataRequest, GetCurrentMetricDataResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetCurrentMetricDataCommandInput extends GetCurrentMetricDataRequest {
    }
    export interface GetCurrentMetricDataCommandOutput extends GetCurrentMetricDataResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the real-time metric data from the specified Amazon Connect instance.</p>
        *          <p>For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics
        *     Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetCurrentMetricDataCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetCurrentMetricDataCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetCurrentMetricDataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetCurrentMetricDataCommandInput} for command's `input` shape.
        * @see {@link GetCurrentMetricDataCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetCurrentMetricDataCommand extends $Command<GetCurrentMetricDataCommandInput, GetCurrentMetricDataCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetCurrentMetricDataCommandInput;
            constructor(input: GetCurrentMetricDataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCurrentMetricDataCommandInput, GetCurrentMetricDataCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentUserDataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetCurrentUserDataRequest, GetCurrentUserDataResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetCurrentUserDataCommandInput extends GetCurrentUserDataRequest {
    }
    export interface GetCurrentUserDataCommandOutput extends GetCurrentUserDataResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the real-time active user data from the specified Amazon Connect instance. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetCurrentUserDataCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetCurrentUserDataCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetCurrentUserDataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetCurrentUserDataCommandInput} for command's `input` shape.
        * @see {@link GetCurrentUserDataCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetCurrentUserDataCommand extends $Command<GetCurrentUserDataCommandInput, GetCurrentUserDataCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetCurrentUserDataCommandInput;
            constructor(input: GetCurrentUserDataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCurrentUserDataCommandInput, GetCurrentUserDataCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetFederationTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetFederationTokenRequest, GetFederationTokenResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetFederationTokenCommandInput extends GetFederationTokenRequest {
    }
    export interface GetFederationTokenCommandOutput extends GetFederationTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a token for federation.</p>
        *          <note>
        *             <p>This API doesn't support root users. If you try to invoke GetFederationToken with root
        *     credentials, an error message similar to the following one appears: </p>
        *             <p>
        *                <code>Provided identity: Principal: .... User: .... cannot be used for federation with
        *      Amazon Connect</code>
        *             </p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetFederationTokenCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetFederationTokenCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetFederationTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetFederationTokenCommandInput} for command's `input` shape.
        * @see {@link GetFederationTokenCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetFederationTokenCommand extends $Command<GetFederationTokenCommandInput, GetFederationTokenCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetFederationTokenCommandInput;
            constructor(input: GetFederationTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetFederationTokenCommandInput, GetFederationTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetMetricDataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetMetricDataRequest, GetMetricDataResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetMetricDataCommandInput extends GetMetricDataRequest {
    }
    export interface GetMetricDataCommandOutput extends GetMetricDataResponse, __MetadataBearer {
    }
    /**
        * <p>Gets historical metric data from the specified Amazon Connect instance.</p>
        *
        *          <p>For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics
        *     Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetMetricDataCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetMetricDataCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetMetricDataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMetricDataCommandInput} for command's `input` shape.
        * @see {@link GetMetricDataCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetMetricDataCommand extends $Command<GetMetricDataCommandInput, GetMetricDataCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetMetricDataCommandInput;
            constructor(input: GetMetricDataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMetricDataCommandInput, GetMetricDataCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetTaskTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { GetTaskTemplateRequest, GetTaskTemplateResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface GetTaskTemplateCommandInput extends GetTaskTemplateRequest {
    }
    export interface GetTaskTemplateCommandOutput extends GetTaskTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Gets details about a specific task template in the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, GetTaskTemplateCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, GetTaskTemplateCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new GetTaskTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTaskTemplateCommandInput} for command's `input` shape.
        * @see {@link GetTaskTemplateCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class GetTaskTemplateCommand extends $Command<GetTaskTemplateCommandInput, GetTaskTemplateCommandOutput, ConnectClientResolvedConfig> {
            readonly input: GetTaskTemplateCommandInput;
            constructor(input: GetTaskTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTaskTemplateCommandInput, GetTaskTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListAgentStatusesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListAgentStatusRequest, ListAgentStatusResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListAgentStatusesCommandInput extends ListAgentStatusRequest {
    }
    export interface ListAgentStatusesCommandOutput extends ListAgentStatusResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Lists agent statuses.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListAgentStatusesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListAgentStatusesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListAgentStatusesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAgentStatusesCommandInput} for command's `input` shape.
        * @see {@link ListAgentStatusesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListAgentStatusesCommand extends $Command<ListAgentStatusesCommandInput, ListAgentStatusesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListAgentStatusesCommandInput;
            constructor(input: ListAgentStatusesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAgentStatusesCommandInput, ListAgentStatusesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListApprovedOriginsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListApprovedOriginsRequest, ListApprovedOriginsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListApprovedOriginsCommandInput extends ListApprovedOriginsRequest {
    }
    export interface ListApprovedOriginsCommandOutput extends ListApprovedOriginsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns a paginated list of all approved origins associated with the instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListApprovedOriginsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListApprovedOriginsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListApprovedOriginsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListApprovedOriginsCommandInput} for command's `input` shape.
        * @see {@link ListApprovedOriginsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListApprovedOriginsCommand extends $Command<ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListApprovedOriginsCommandInput;
            constructor(input: ListApprovedOriginsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListBotsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListBotsRequest, ListBotsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListBotsCommandInput extends ListBotsRequest {
    }
    export interface ListBotsCommandOutput extends ListBotsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently
        *    associated with the instance. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListBotsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListBotsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListBotsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBotsCommandInput} for command's `input` shape.
        * @see {@link ListBotsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListBotsCommand extends $Command<ListBotsCommandInput, ListBotsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListBotsCommandInput;
            constructor(input: ListBotsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBotsCommandInput, ListBotsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowModulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListContactFlowModulesRequest, ListContactFlowModulesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListContactFlowModulesCommandInput extends ListContactFlowModulesRequest {
    }
    export interface ListContactFlowModulesCommandOutput extends ListContactFlowModulesResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the contact flow modules for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListContactFlowModulesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListContactFlowModulesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListContactFlowModulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListContactFlowModulesCommandInput} for command's `input` shape.
        * @see {@link ListContactFlowModulesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListContactFlowModulesCommand extends $Command<ListContactFlowModulesCommandInput, ListContactFlowModulesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListContactFlowModulesCommandInput;
            constructor(input: ListContactFlowModulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListContactFlowModulesCommandInput, ListContactFlowModulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListContactFlowsRequest, ListContactFlowsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListContactFlowsCommandInput extends ListContactFlowsRequest {
    }
    export interface ListContactFlowsCommandOutput extends ListContactFlowsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the contact flows for the specified Amazon Connect instance.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        *          <p>For more information about contact flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Contact Flows</a> in the
        *     <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListContactFlowsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListContactFlowsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListContactFlowsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListContactFlowsCommandInput} for command's `input` shape.
        * @see {@link ListContactFlowsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListContactFlowsCommand extends $Command<ListContactFlowsCommandInput, ListContactFlowsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListContactFlowsCommandInput;
            constructor(input: ListContactFlowsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListContactFlowsCommandInput, ListContactFlowsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactReferencesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListContactReferencesRequest, ListContactReferencesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListContactReferencesCommandInput extends ListContactReferencesRequest {
    }
    export interface ListContactReferencesCommandOutput extends ListContactReferencesResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>For the specified <code>referenceTypes</code>, returns a list of references associated with
        *    the contact. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListContactReferencesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListContactReferencesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListContactReferencesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListContactReferencesCommandInput} for command's `input` shape.
        * @see {@link ListContactReferencesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListContactReferencesCommand extends $Command<ListContactReferencesCommandInput, ListContactReferencesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListContactReferencesCommandInput;
            constructor(input: ListContactReferencesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListContactReferencesCommandInput, ListContactReferencesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListDefaultVocabulariesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListDefaultVocabulariesRequest, ListDefaultVocabulariesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListDefaultVocabulariesCommandInput extends ListDefaultVocabulariesRequest {
    }
    export interface ListDefaultVocabulariesCommandOutput extends ListDefaultVocabulariesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the default vocabularies for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListDefaultVocabulariesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListDefaultVocabulariesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListDefaultVocabulariesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDefaultVocabulariesCommandInput} for command's `input` shape.
        * @see {@link ListDefaultVocabulariesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListDefaultVocabulariesCommand extends $Command<ListDefaultVocabulariesCommandInput, ListDefaultVocabulariesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListDefaultVocabulariesCommandInput;
            constructor(input: ListDefaultVocabulariesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDefaultVocabulariesCommandInput, ListDefaultVocabulariesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListHoursOfOperationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListHoursOfOperationsRequest, ListHoursOfOperationsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListHoursOfOperationsCommandInput extends ListHoursOfOperationsRequest {
    }
    export interface ListHoursOfOperationsCommandOutput extends ListHoursOfOperationsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the hours of operation for the specified Amazon Connect instance.</p>
        *          <p>For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a
        *     Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListHoursOfOperationsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListHoursOfOperationsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListHoursOfOperationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListHoursOfOperationsCommandInput} for command's `input` shape.
        * @see {@link ListHoursOfOperationsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListHoursOfOperationsCommand extends $Command<ListHoursOfOperationsCommandInput, ListHoursOfOperationsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListHoursOfOperationsCommandInput;
            constructor(input: ListHoursOfOperationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListHoursOfOperationsCommandInput, ListHoursOfOperationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListInstanceAttributesRequest, ListInstanceAttributesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListInstanceAttributesCommandInput extends ListInstanceAttributesRequest {
    }
    export interface ListInstanceAttributesCommandOutput extends ListInstanceAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns a paginated list of all attribute types for the given instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListInstanceAttributesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListInstanceAttributesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListInstanceAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListInstanceAttributesCommandInput} for command's `input` shape.
        * @see {@link ListInstanceAttributesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListInstanceAttributesCommand extends $Command<ListInstanceAttributesCommandInput, ListInstanceAttributesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListInstanceAttributesCommandInput;
            constructor(input: ListInstanceAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListInstanceAttributesCommandInput, ListInstanceAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstancesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListInstancesRequest, ListInstancesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListInstancesCommandInput extends ListInstancesRequest {
    }
    export interface ListInstancesCommandOutput extends ListInstancesResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Return a list of instances which are in active state, creation-in-progress state, and failed
        *    state. Instances that aren't successfully created (they are in a failed state) are returned only
        *    for 24 hours after the CreateInstance API was invoked.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListInstancesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListInstancesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListInstancesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListInstancesCommandInput} for command's `input` shape.
        * @see {@link ListInstancesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListInstancesCommand extends $Command<ListInstancesCommandInput, ListInstancesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListInstancesCommandInput;
            constructor(input: ListInstancesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListInstancesCommandInput, ListInstancesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceStorageConfigsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListInstanceStorageConfigsRequest, ListInstanceStorageConfigsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListInstanceStorageConfigsCommandInput extends ListInstanceStorageConfigsRequest {
    }
    export interface ListInstanceStorageConfigsCommandOutput extends ListInstanceStorageConfigsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *
        *          <p>Returns a paginated list of storage configs for the identified instance and resource
        *    type.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListInstanceStorageConfigsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListInstanceStorageConfigsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListInstanceStorageConfigsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListInstanceStorageConfigsCommandInput} for command's `input` shape.
        * @see {@link ListInstanceStorageConfigsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListInstanceStorageConfigsCommand extends $Command<ListInstanceStorageConfigsCommandInput, ListInstanceStorageConfigsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListInstanceStorageConfigsCommandInput;
            constructor(input: ListInstanceStorageConfigsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListInstanceStorageConfigsCommandInput, ListInstanceStorageConfigsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListIntegrationAssociationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListIntegrationAssociationsRequest, ListIntegrationAssociationsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListIntegrationAssociationsCommandInput extends ListIntegrationAssociationsRequest {
    }
    export interface ListIntegrationAssociationsCommandOutput extends ListIntegrationAssociationsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides summary information about the Amazon Web Services resource associations for the
        *    specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListIntegrationAssociationsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListIntegrationAssociationsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListIntegrationAssociationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListIntegrationAssociationsCommandInput} for command's `input` shape.
        * @see {@link ListIntegrationAssociationsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListIntegrationAssociationsCommand extends $Command<ListIntegrationAssociationsCommandInput, ListIntegrationAssociationsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListIntegrationAssociationsCommandInput;
            constructor(input: ListIntegrationAssociationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListIntegrationAssociationsCommandInput, ListIntegrationAssociationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLambdaFunctionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListLambdaFunctionsRequest, ListLambdaFunctionsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListLambdaFunctionsCommandInput extends ListLambdaFunctionsRequest {
    }
    export interface ListLambdaFunctionsCommandOutput extends ListLambdaFunctionsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns a paginated list of all Lambda functions that display in the dropdown options in the
        *    relevant contact flow blocks.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListLambdaFunctionsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListLambdaFunctionsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListLambdaFunctionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListLambdaFunctionsCommandInput} for command's `input` shape.
        * @see {@link ListLambdaFunctionsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListLambdaFunctionsCommand extends $Command<ListLambdaFunctionsCommandInput, ListLambdaFunctionsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListLambdaFunctionsCommandInput;
            constructor(input: ListLambdaFunctionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListLambdaFunctionsCommandInput, ListLambdaFunctionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLexBotsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListLexBotsRequest, ListLexBotsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListLexBotsCommandInput extends ListLexBotsRequest {
    }
    export interface ListLexBotsCommandOutput extends ListLexBotsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns a paginated list of all the Amazon Lex bots currently associated with the
        *    instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListLexBotsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListLexBotsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListLexBotsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListLexBotsCommandInput} for command's `input` shape.
        * @see {@link ListLexBotsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListLexBotsCommand extends $Command<ListLexBotsCommandInput, ListLexBotsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListLexBotsCommandInput;
            constructor(input: ListLexBotsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListLexBotsCommandInput, ListLexBotsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListPhoneNumbersRequest, ListPhoneNumbersResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListPhoneNumbersCommandInput extends ListPhoneNumbersRequest {
    }
    export interface ListPhoneNumbersCommandOutput extends ListPhoneNumbersResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the phone numbers for the specified Amazon Connect instance. </p>
        *          <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your
        *     Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListPhoneNumbersCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListPhoneNumbersCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListPhoneNumbersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPhoneNumbersCommandInput} for command's `input` shape.
        * @see {@link ListPhoneNumbersCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListPhoneNumbersCommand extends $Command<ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListPhoneNumbersCommandInput;
            constructor(input: ListPhoneNumbersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersV2Command' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListPhoneNumbersV2Request, ListPhoneNumbersV2Response } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListPhoneNumbersV2CommandInput extends ListPhoneNumbersV2Request {
    }
    export interface ListPhoneNumbersV2CommandOutput extends ListPhoneNumbersV2Response, __MetadataBearer {
    }
    /**
        * <p>Lists phone numbers claimed to your Amazon Connect instance. </p>
        *          <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your
        *     Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListPhoneNumbersV2Command } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListPhoneNumbersV2Command } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListPhoneNumbersV2Command(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPhoneNumbersV2CommandInput} for command's `input` shape.
        * @see {@link ListPhoneNumbersV2CommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListPhoneNumbersV2Command extends $Command<ListPhoneNumbersV2CommandInput, ListPhoneNumbersV2CommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListPhoneNumbersV2CommandInput;
            constructor(input: ListPhoneNumbersV2CommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPhoneNumbersV2CommandInput, ListPhoneNumbersV2CommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPromptsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListPromptsRequest, ListPromptsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListPromptsCommandInput extends ListPromptsRequest {
    }
    export interface ListPromptsCommandOutput extends ListPromptsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the prompts for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListPromptsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListPromptsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListPromptsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPromptsCommandInput} for command's `input` shape.
        * @see {@link ListPromptsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListPromptsCommand extends $Command<ListPromptsCommandInput, ListPromptsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListPromptsCommandInput;
            constructor(input: ListPromptsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPromptsCommandInput, ListPromptsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueueQuickConnectsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListQueueQuickConnectsRequest, ListQueueQuickConnectsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export interface ListQueueQuickConnectsCommandInput extends ListQueueQuickConnectsRequest {
    }
    export interface ListQueueQuickConnectsCommandOutput extends ListQueueQuickConnectsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Lists the quick connects associated with a queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListQueueQuickConnectsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListQueueQuickConnectsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListQueueQuickConnectsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListQueueQuickConnectsCommandInput} for command's `input` shape.
        * @see {@link ListQueueQuickConnectsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListQueueQuickConnectsCommand extends $Command<ListQueueQuickConnectsCommandInput, ListQueueQuickConnectsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListQueueQuickConnectsCommandInput;
            constructor(input: ListQueueQuickConnectsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListQueueQuickConnectsCommandInput, ListQueueQuickConnectsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListQueuesRequest, ListQueuesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListQueuesCommandInput extends ListQueuesRequest {
    }
    export interface ListQueuesCommandOutput extends ListQueuesResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the queues for the specified Amazon Connect instance.</p>
        *          <p>If you do not specify a <code>QueueTypes</code>
        *    parameter, both standard and agent queues are returned. This might cause an unexpected truncation
        *    of results if you have more than 1000 agents and you limit the number of results of the API call
        *    in code.</p>
        *          <p>For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and
        *     Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListQueuesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListQueuesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListQueuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListQueuesCommandInput} for command's `input` shape.
        * @see {@link ListQueuesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListQueuesCommand extends $Command<ListQueuesCommandInput, ListQueuesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListQueuesCommandInput;
            constructor(input: ListQueuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListQueuesCommandInput, ListQueuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQuickConnectsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListQuickConnectsRequest, ListQuickConnectsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListQuickConnectsCommandInput extends ListQuickConnectsRequest {
    }
    export interface ListQuickConnectsCommandOutput extends ListQuickConnectsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about the quick connects for the specified Amazon Connect instance. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListQuickConnectsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListQuickConnectsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListQuickConnectsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListQuickConnectsCommandInput} for command's `input` shape.
        * @see {@link ListQuickConnectsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListQuickConnectsCommand extends $Command<ListQuickConnectsCommandInput, ListQuickConnectsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListQuickConnectsCommandInput;
            constructor(input: ListQuickConnectsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListQuickConnectsCommandInput, ListQuickConnectsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfileQueuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListRoutingProfileQueuesRequest, ListRoutingProfileQueuesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListRoutingProfileQueuesCommandInput extends ListRoutingProfileQueuesRequest {
    }
    export interface ListRoutingProfileQueuesCommandOutput extends ListRoutingProfileQueuesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the queues associated with a routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListRoutingProfileQueuesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListRoutingProfileQueuesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListRoutingProfileQueuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRoutingProfileQueuesCommandInput} for command's `input` shape.
        * @see {@link ListRoutingProfileQueuesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListRoutingProfileQueuesCommand extends $Command<ListRoutingProfileQueuesCommandInput, ListRoutingProfileQueuesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListRoutingProfileQueuesCommandInput;
            constructor(input: ListRoutingProfileQueuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRoutingProfileQueuesCommandInput, ListRoutingProfileQueuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfilesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListRoutingProfilesRequest, ListRoutingProfilesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListRoutingProfilesCommandInput extends ListRoutingProfilesRequest {
    }
    export interface ListRoutingProfilesCommandOutput extends ListRoutingProfilesResponse, __MetadataBearer {
    }
    /**
        * <p>Provides summary information about the routing profiles for the specified Amazon Connect
        *    instance.</p>
        *          <p>For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing
        *     Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListRoutingProfilesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListRoutingProfilesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListRoutingProfilesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRoutingProfilesCommandInput} for command's `input` shape.
        * @see {@link ListRoutingProfilesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListRoutingProfilesCommand extends $Command<ListRoutingProfilesCommandInput, ListRoutingProfilesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListRoutingProfilesCommandInput;
            constructor(input: ListRoutingProfilesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRoutingProfilesCommandInput, ListRoutingProfilesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityKeysCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListSecurityKeysRequest, ListSecurityKeysResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListSecurityKeysCommandInput extends ListSecurityKeysRequest {
    }
    export interface ListSecurityKeysCommandOutput extends ListSecurityKeysResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Returns a paginated list of all security keys associated with the instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListSecurityKeysCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListSecurityKeysCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListSecurityKeysCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSecurityKeysCommandInput} for command's `input` shape.
        * @see {@link ListSecurityKeysCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListSecurityKeysCommand extends $Command<ListSecurityKeysCommandInput, ListSecurityKeysCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListSecurityKeysCommandInput;
            constructor(input: ListSecurityKeysCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSecurityKeysCommandInput, ListSecurityKeysCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilePermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListSecurityProfilePermissionsRequest, ListSecurityProfilePermissionsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListSecurityProfilePermissionsCommandInput extends ListSecurityProfilePermissionsRequest {
    }
    export interface ListSecurityProfilePermissionsCommandOutput extends ListSecurityProfilePermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Lists the permissions granted to a security profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListSecurityProfilePermissionsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListSecurityProfilePermissionsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListSecurityProfilePermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSecurityProfilePermissionsCommandInput} for command's `input` shape.
        * @see {@link ListSecurityProfilePermissionsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListSecurityProfilePermissionsCommand extends $Command<ListSecurityProfilePermissionsCommandInput, ListSecurityProfilePermissionsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListSecurityProfilePermissionsCommandInput;
            constructor(input: ListSecurityProfilePermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSecurityProfilePermissionsCommandInput, ListSecurityProfilePermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListSecurityProfilesRequest, ListSecurityProfilesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListSecurityProfilesCommandInput extends ListSecurityProfilesRequest {
    }
    export interface ListSecurityProfilesCommandOutput extends ListSecurityProfilesResponse, __MetadataBearer {
    }
    /**
        * <p>Provides summary information about the security profiles for the specified Amazon Connect
        *    instance.</p>
        *          <p>For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles</a> in the
        *     <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListSecurityProfilesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListSecurityProfilesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListSecurityProfilesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSecurityProfilesCommandInput} for command's `input` shape.
        * @see {@link ListSecurityProfilesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListSecurityProfilesCommand extends $Command<ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListSecurityProfilesCommandInput;
            constructor(input: ListSecurityProfilesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags for the specified resource.</p>
        *          <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
        *     Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListTagsForResourceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListTagsForResourceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTaskTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListTaskTemplatesRequest, ListTaskTemplatesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListTaskTemplatesCommandInput extends ListTaskTemplatesRequest {
    }
    export interface ListTaskTemplatesCommandOutput extends ListTaskTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists task templates for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListTaskTemplatesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListTaskTemplatesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListTaskTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTaskTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListTaskTemplatesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListTaskTemplatesCommand extends $Command<ListTaskTemplatesCommandInput, ListTaskTemplatesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListTaskTemplatesCommandInput;
            constructor(input: ListTaskTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTaskTemplatesCommandInput, ListTaskTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUseCasesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListUseCasesRequest, ListUseCasesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListUseCasesCommandInput extends ListUseCasesRequest {
    }
    export interface ListUseCasesCommandOutput extends ListUseCasesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the use cases for the integration association. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListUseCasesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListUseCasesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListUseCasesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUseCasesCommandInput} for command's `input` shape.
        * @see {@link ListUseCasesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListUseCasesCommand extends $Command<ListUseCasesCommandInput, ListUseCasesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListUseCasesCommandInput;
            constructor(input: ListUseCasesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUseCasesCommandInput, ListUseCasesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUserHierarchyGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListUserHierarchyGroupsRequest, ListUserHierarchyGroupsResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListUserHierarchyGroupsCommandInput extends ListUserHierarchyGroupsRequest {
    }
    export interface ListUserHierarchyGroupsCommandOutput extends ListUserHierarchyGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Provides summary information about the hierarchy groups for the specified Amazon Connect
        *    instance.</p>
        *          <p>For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies</a> in the
        *     <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListUserHierarchyGroupsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListUserHierarchyGroupsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListUserHierarchyGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUserHierarchyGroupsCommandInput} for command's `input` shape.
        * @see {@link ListUserHierarchyGroupsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListUserHierarchyGroupsCommand extends $Command<ListUserHierarchyGroupsCommandInput, ListUserHierarchyGroupsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListUserHierarchyGroupsCommandInput;
            constructor(input: ListUserHierarchyGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUserHierarchyGroupsCommandInput, ListUserHierarchyGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ListUsersRequest, ListUsersResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ListUsersCommandInput extends ListUsersRequest {
    }
    export interface ListUsersCommandOutput extends ListUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Provides summary information about the users for the specified Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ListUsersCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ListUsersCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ListUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUsersCommandInput} for command's `input` shape.
        * @see {@link ListUsersCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ListUsersCommand extends $Command<ListUsersCommandInput, ListUsersCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ListUsersCommandInput;
            constructor(input: ListUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUsersCommandInput, ListUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/PutUserStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { PutUserStatusRequest, PutUserStatusResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface PutUserStatusCommandInput extends PutUserStatusRequest {
    }
    export interface PutUserStatusCommandOutput extends PutUserStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Changes the current status of a user or agent in Amazon Connect. If the agent is currently handling a
        *    contact, this sets the agent's next status.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/metrics-agent-status.html">Agent status</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-next-status.html">Set your next
        *     status</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, PutUserStatusCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, PutUserStatusCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new PutUserStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutUserStatusCommandInput} for command's `input` shape.
        * @see {@link PutUserStatusCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class PutUserStatusCommand extends $Command<PutUserStatusCommandInput, PutUserStatusCommandOutput, ConnectClientResolvedConfig> {
            readonly input: PutUserStatusCommandInput;
            constructor(input: PutUserStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutUserStatusCommandInput, PutUserStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ReleasePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ReleasePhoneNumberRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ReleasePhoneNumberCommandInput extends ReleasePhoneNumberRequest {
    }
    export interface ReleasePhoneNumberCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Releases a phone number previously claimed to an Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ReleasePhoneNumberCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ReleasePhoneNumberCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ReleasePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ReleasePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link ReleasePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ReleasePhoneNumberCommand extends $Command<ReleasePhoneNumberCommandInput, ReleasePhoneNumberCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ReleasePhoneNumberCommandInput;
            constructor(input: ReleasePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ReleasePhoneNumberCommandInput, ReleasePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ResumeContactRecordingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { ResumeContactRecordingRequest, ResumeContactRecordingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface ResumeContactRecordingCommandInput extends ResumeContactRecordingRequest {
    }
    export interface ResumeContactRecordingCommandOutput extends ResumeContactRecordingResponse, __MetadataBearer {
    }
    /**
        * <p>When a contact is being recorded, and the recording has been suspended using
        *    SuspendContactRecording, this API resumes recording the call.</p>
        *
        *          <p>Only voice recordings are supported at this time.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, ResumeContactRecordingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, ResumeContactRecordingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new ResumeContactRecordingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResumeContactRecordingCommandInput} for command's `input` shape.
        * @see {@link ResumeContactRecordingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class ResumeContactRecordingCommand extends $Command<ResumeContactRecordingCommandInput, ResumeContactRecordingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: ResumeContactRecordingCommandInput;
            constructor(input: ResumeContactRecordingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResumeContactRecordingCommandInput, ResumeContactRecordingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchAvailablePhoneNumbersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { SearchAvailablePhoneNumbersRequest, SearchAvailablePhoneNumbersResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface SearchAvailablePhoneNumbersCommandInput extends SearchAvailablePhoneNumbersRequest {
    }
    export interface SearchAvailablePhoneNumbersCommandOutput extends SearchAvailablePhoneNumbersResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for available phone numbers that you can claim to your Amazon Connect instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, SearchAvailablePhoneNumbersCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, SearchAvailablePhoneNumbersCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new SearchAvailablePhoneNumbersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchAvailablePhoneNumbersCommandInput} for command's `input` shape.
        * @see {@link SearchAvailablePhoneNumbersCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class SearchAvailablePhoneNumbersCommand extends $Command<SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput, ConnectClientResolvedConfig> {
            readonly input: SearchAvailablePhoneNumbersCommandInput;
            constructor(input: SearchAvailablePhoneNumbersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { SearchUsersRequest, SearchUsersResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface SearchUsersCommandInput extends SearchUsersRequest {
    }
    export interface SearchUsersCommandOutput extends SearchUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Searches users in an Amazon Connect instance, with optional filtering.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, SearchUsersCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, SearchUsersCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new SearchUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchUsersCommandInput} for command's `input` shape.
        * @see {@link SearchUsersCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class SearchUsersCommand extends $Command<SearchUsersCommandInput, SearchUsersCommandOutput, ConnectClientResolvedConfig> {
            readonly input: SearchUsersCommandInput;
            constructor(input: SearchUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchUsersCommandInput, SearchUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchVocabulariesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { SearchVocabulariesRequest, SearchVocabulariesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface SearchVocabulariesCommandInput extends SearchVocabulariesRequest {
    }
    export interface SearchVocabulariesCommandOutput extends SearchVocabulariesResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for vocabularies within a specific Amazon Connect instance using <code>State</code>,
        *     <code>NameStartsWith</code>, and <code>LanguageCode</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, SearchVocabulariesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, SearchVocabulariesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new SearchVocabulariesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchVocabulariesCommandInput} for command's `input` shape.
        * @see {@link SearchVocabulariesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class SearchVocabulariesCommand extends $Command<SearchVocabulariesCommandInput, SearchVocabulariesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: SearchVocabulariesCommandInput;
            constructor(input: SearchVocabulariesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchVocabulariesCommandInput, SearchVocabulariesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartChatContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StartChatContactRequest, StartChatContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StartChatContactCommandInput extends StartChatContactRequest {
    }
    export interface StartChatContactCommandOutput extends StartChatContactResponse, __MetadataBearer {
    }
    /**
        * <p>Initiates a contact flow to start a new chat for the customer. Response of this API provides
        *    a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p>
        *
        *          <p>When a new chat contact is successfully created, clients must subscribe to the participant’s
        *    connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p>
        *
        *          <p>A 429 error occurs in the following situations:</p>
        *          <ul>
        *             <li>
        *                <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code>
        *      exception.</p>
        *             </li>
        *             <li>
        *                <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active
        *       chats</a> is exceeded. Active chat throttling returns a
        *       <code>LimitExceededException</code>.</p>
        *             </li>
        *          </ul>
        *          <p>If you use the <code>ChatDurationInMinutes</code> parameter and receive a 400 error, your
        *    account may not support the ability to configure custom chat durations. For more information,
        *    contact Amazon Web Services Support. </p>
        *
        *          <p>For more information about chat, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat</a> in the <i>Amazon Connect Administrator
        *     Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StartChatContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StartChatContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StartChatContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartChatContactCommandInput} for command's `input` shape.
        * @see {@link StartChatContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StartChatContactCommand extends $Command<StartChatContactCommandInput, StartChatContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StartChatContactCommandInput;
            constructor(input: StartChatContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartChatContactCommandInput, StartChatContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactRecordingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StartContactRecordingRequest, StartContactRecordingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StartContactRecordingCommandInput extends StartContactRecordingRequest {
    }
    export interface StartContactRecordingCommandOutput extends StartContactRecordingResponse, __MetadataBearer {
    }
    /**
        * <p>Starts recording the contact: </p>
        *          <ul>
        *             <li>
        *                <p>If the API is called <i>before</i> the agent joins the call, recording
        *      starts when the agent joins the call.</p>
        *             </li>
        *             <li>
        *                <p>If the API is called <i>after</i> the agent joins the call, recording starts
        *      at the time of the API call.</p>
        *             </li>
        *          </ul>
        *
        *          <p>StartContactRecording is a one-time action. For example, if you use StopContactRecording to
        *    stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios
        *    where the recording has started and you want to suspend and resume it, such as when collecting
        *    sensitive information (for example, a credit card number), use SuspendContactRecording and
        *    ResumeContactRecording.</p>
        *          <p>You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording
        *     behavior</a> block.</p>
        *          <p>Only voice recordings are supported at this time.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StartContactRecordingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StartContactRecordingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StartContactRecordingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartContactRecordingCommandInput} for command's `input` shape.
        * @see {@link StartContactRecordingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StartContactRecordingCommand extends $Command<StartContactRecordingCommandInput, StartContactRecordingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StartContactRecordingCommandInput;
            constructor(input: StartContactRecordingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartContactRecordingCommandInput, StartContactRecordingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactStreamingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StartContactStreamingRequest, StartContactStreamingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StartContactStreamingCommandInput extends StartContactStreamingRequest {
    }
    export interface StartContactStreamingCommandOutput extends StartContactStreamingResponse, __MetadataBearer {
    }
    /**
        * <p> Initiates real-time message streaming for a new chat contact.</p>
        *          <p> For more information about message streaming, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html">Enable real-time chat message
        *     streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StartContactStreamingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StartContactStreamingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StartContactStreamingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartContactStreamingCommandInput} for command's `input` shape.
        * @see {@link StartContactStreamingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StartContactStreamingCommand extends $Command<StartContactStreamingCommandInput, StartContactStreamingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StartContactStreamingCommandInput;
            constructor(input: StartContactStreamingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartContactStreamingCommandInput, StartContactStreamingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartOutboundVoiceContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StartOutboundVoiceContactRequest, StartOutboundVoiceContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StartOutboundVoiceContactCommandInput extends StartOutboundVoiceContactRequest {
    }
    export interface StartOutboundVoiceContactCommandOutput extends StartOutboundVoiceContactResponse, __MetadataBearer {
    }
    /**
        * <p>Places an outbound call to a contact, and then initiates the contact flow. It performs the
        *    actions in the contact flow that's specified (in <code>ContactFlowId</code>).</p>
        *
        *          <p>Agents do not initiate the outbound API, which means that they do not dial the contact. If
        *    the contact flow places an outbound call to a contact, and then puts the contact in queue, the
        *    call is then routed to the agent, like any other inbound case.</p>
        *
        *          <p>There is a 60-second dialing timeout for this operation. If the call is not connected after
        *    60 seconds, it fails.</p>
        *          <note>
        *             <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK
        *     mobile numbers, you must submit a service quota increase request. For more information, see
        *      <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
        *          </note>
        *          <note>
        *             <p>Campaign calls are not allowed by default. Before you can make a call with
        *      <code>TrafficType</code> = <code>CAMPAIGN</code>, you must submit a service quota increase
        *     request. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a>
        *     in the <i>Amazon Connect Administrator Guide</i>. </p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StartOutboundVoiceContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StartOutboundVoiceContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StartOutboundVoiceContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartOutboundVoiceContactCommandInput} for command's `input` shape.
        * @see {@link StartOutboundVoiceContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StartOutboundVoiceContactCommand extends $Command<StartOutboundVoiceContactCommandInput, StartOutboundVoiceContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StartOutboundVoiceContactCommandInput;
            constructor(input: StartOutboundVoiceContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartOutboundVoiceContactCommandInput, StartOutboundVoiceContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartTaskContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StartTaskContactRequest, StartTaskContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StartTaskContactCommandInput extends StartTaskContactRequest {
    }
    export interface StartTaskContactCommandOutput extends StartTaskContactResponse, __MetadataBearer {
    }
    /**
        * <p>Initiates a contact flow to start a new task.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StartTaskContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StartTaskContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StartTaskContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartTaskContactCommandInput} for command's `input` shape.
        * @see {@link StartTaskContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StartTaskContactCommand extends $Command<StartTaskContactCommandInput, StartTaskContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StartTaskContactCommandInput;
            constructor(input: StartTaskContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartTaskContactCommandInput, StartTaskContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StopContactRequest, StopContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StopContactCommandInput extends StopContactRequest {
    }
    export interface StopContactCommandOutput extends StopContactResponse, __MetadataBearer {
    }
    /**
        * <p>Ends the specified contact. This call does not work for the following initiation
        *    methods:</p>
        *
        *          <ul>
        *             <li>
        *                <p>DISCONNECT</p>
        *             </li>
        *             <li>
        *                <p>TRANSFER</p>
        *             </li>
        *             <li>
        *                <p>QUEUE_TRANSFER</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StopContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StopContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StopContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopContactCommandInput} for command's `input` shape.
        * @see {@link StopContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StopContactCommand extends $Command<StopContactCommandInput, StopContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StopContactCommandInput;
            constructor(input: StopContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopContactCommandInput, StopContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactRecordingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StopContactRecordingRequest, StopContactRecordingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StopContactRecordingCommandInput extends StopContactRecordingRequest {
    }
    export interface StopContactRecordingCommandOutput extends StopContactRecordingResponse, __MetadataBearer {
    }
    /**
        * <p>Stops recording a call when a contact is being recorded. StopContactRecording is a one-time
        *    action. If you use StopContactRecording to stop recording an ongoing call, you can't use
        *    StartContactRecording to restart it. For scenarios where the recording has started and you want
        *    to suspend it for sensitive information (for example, to collect a credit card number), and then
        *    restart it, use SuspendContactRecording and ResumeContactRecording.</p>
        *
        *          <p>Only voice recordings are supported at this time.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StopContactRecordingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StopContactRecordingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StopContactRecordingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopContactRecordingCommandInput} for command's `input` shape.
        * @see {@link StopContactRecordingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StopContactRecordingCommand extends $Command<StopContactRecordingCommandInput, StopContactRecordingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StopContactRecordingCommandInput;
            constructor(input: StopContactRecordingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopContactRecordingCommandInput, StopContactRecordingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactStreamingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { StopContactStreamingRequest, StopContactStreamingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface StopContactStreamingCommandInput extends StopContactStreamingRequest {
    }
    export interface StopContactStreamingCommandOutput extends StopContactStreamingResponse, __MetadataBearer {
    }
    /**
        * <p> Ends message streaming on a specified contact. To restart message streaming on that
        *    contact, call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html">StartContactStreaming</a>
        *    API. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, StopContactStreamingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, StopContactStreamingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new StopContactStreamingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopContactStreamingCommandInput} for command's `input` shape.
        * @see {@link StopContactStreamingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class StopContactStreamingCommand extends $Command<StopContactStreamingCommandInput, StopContactStreamingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: StopContactStreamingCommandInput;
            constructor(input: StopContactStreamingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopContactStreamingCommandInput, StopContactStreamingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SuspendContactRecordingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { SuspendContactRecordingRequest, SuspendContactRecordingResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface SuspendContactRecordingCommandInput extends SuspendContactRecordingRequest {
    }
    export interface SuspendContactRecordingCommandOutput extends SuspendContactRecordingResponse, __MetadataBearer {
    }
    /**
        * <p>When a contact is being recorded, this API suspends recording the call. For example, you
        *    might suspend the call recording while collecting sensitive information, such as a credit card
        *    number. Then use ResumeContactRecording to restart recording. </p>
        *          <p>The period of time that the recording is suspended is filled with silence in the final
        *    recording. </p>
        *          <p>Only voice recordings are supported at this time.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, SuspendContactRecordingCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, SuspendContactRecordingCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new SuspendContactRecordingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SuspendContactRecordingCommandInput} for command's `input` shape.
        * @see {@link SuspendContactRecordingCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class SuspendContactRecordingCommand extends $Command<SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput, ConnectClientResolvedConfig> {
            readonly input: SuspendContactRecordingCommandInput;
            constructor(input: SuspendContactRecordingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { TagResourceRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Adds the specified tags to the specified resource.</p>
        *          <p>The supported resource types are users, routing profiles, queues, quick connects, contact
        *    flows, agent status, hours of operation, phone number, security profiles, and task
        *    templates.</p>
        *          <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
        *     Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, TagResourceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, TagResourceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TransferContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { TransferContactRequest, TransferContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface TransferContactCommandInput extends TransferContactRequest {
    }
    export interface TransferContactCommandOutput extends TransferContactResponse, __MetadataBearer {
    }
    /**
        * <p>Transfers contacts from one agent or queue to another agent or queue at any point after a
        *    contact is created. You can transfer a contact to another queue by providing the contact flow
        *    which orchestrates the contact to the destination queue. This gives you more control over contact
        *    handling and helps you adhere to the service level agreement (SLA) guaranteed to your
        *    customers.</p>
        *          <p>Note the following requirements:</p>
        *          <ul>
        *             <li>
        *                <p>Transfer is supported for only <code>TASK</code> contacts.</p>
        *             </li>
        *             <li>
        *                <p>Do not use both <code>QueueId</code> and <code>UserId</code> in the same call.</p>
        *             </li>
        *             <li>
        *                <p>The following contact flow types are supported: Inbound contact flow, Transfer to agent
        *      flow, and Transfer to queue flow.</p>
        *             </li>
        *             <li>
        *                <p>The <code>TransferContact</code> API can be called only on active contacts.</p>
        *             </li>
        *             <li>
        *                <p>A contact cannot be transferred more than 11 times.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, TransferContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, TransferContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new TransferContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TransferContactCommandInput} for command's `input` shape.
        * @see {@link TransferContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class TransferContactCommand extends $Command<TransferContactCommandInput, TransferContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: TransferContactCommandInput;
            constructor(input: TransferContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TransferContactCommandInput, TransferContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UntagResourceRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the specified tags from the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UntagResourceCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UntagResourceCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateAgentStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateAgentStatusRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateAgentStatusCommandInput extends UpdateAgentStatusRequest {
    }
    export interface UpdateAgentStatusCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates agent status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateAgentStatusCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateAgentStatusCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateAgentStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAgentStatusCommandInput} for command's `input` shape.
        * @see {@link UpdateAgentStatusCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateAgentStatusCommand extends $Command<UpdateAgentStatusCommandInput, UpdateAgentStatusCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateAgentStatusCommandInput;
            constructor(input: UpdateAgentStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAgentStatusCommandInput, UpdateAgentStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactAttributesRequest, UpdateContactAttributesResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactAttributesCommandInput extends UpdateContactAttributesRequest {
    }
    export interface UpdateContactAttributesCommandOutput extends UpdateContactAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Creates or updates
        *    user-defined contact attributes
        *    associated with the specified contact.</p>
        *          <p>You can create or update user-defined attributes for both ongoing and completed contacts.
        *    For example, while the call is active, you can update the customer's name or the reason the
        *    customer called. You can add notes about steps that the agent took during the call that display
        *    to the next agent that takes the call. You can also update attributes for a contact using data
        *    from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls
        *    for additional analysis, such as legal review or to identify abusive callers.</p>
        *          <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For
        *    information about CTR retention and the maximum size of the CTR attributes section, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
        *     specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
        *
        *          <p>
        *             <b>Important:</b> You cannot use the operation to update
        *    attributes for contacts that occurred prior to the release of the API, which was September 12,
        *    2018. You can update attributes only for contacts that started after the release of the API. If
        *    you attempt to update attributes for a contact that occurred prior to the release of the API, a
        *    400 error is returned. This applies also to queued callbacks that were initiated prior to the
        *    release of the API but are still active in your instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactAttributesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactAttributesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactAttributesCommandInput} for command's `input` shape.
        * @see {@link UpdateContactAttributesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactAttributesCommand extends $Command<UpdateContactAttributesCommandInput, UpdateContactAttributesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactAttributesCommandInput;
            constructor(input: UpdateContactAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactAttributesCommandInput, UpdateContactAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactRequest, UpdateContactResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactCommandInput extends UpdateContactRequest {
    }
    export interface UpdateContactCommandOutput extends UpdateContactResponse, __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Adds or updates user-defined contact information associated with the specified contact. At
        *    least one field to be updated must be present in the request.</p>
        *          <important>
        *             <p>You can add or update user-defined contact information for both ongoing and completed
        *     contacts.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactCommandInput} for command's `input` shape.
        * @see {@link UpdateContactCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactCommand extends $Command<UpdateContactCommandInput, UpdateContactCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactCommandInput;
            constructor(input: UpdateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactCommandInput, UpdateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowContentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactFlowContentRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactFlowContentCommandInput extends UpdateContactFlowContentRequest {
    }
    export interface UpdateContactFlowContentCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the specified contact flow.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactFlowContentCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactFlowContentCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactFlowContentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactFlowContentCommandInput} for command's `input` shape.
        * @see {@link UpdateContactFlowContentCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactFlowContentCommand extends $Command<UpdateContactFlowContentCommandInput, UpdateContactFlowContentCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactFlowContentCommandInput;
            constructor(input: UpdateContactFlowContentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactFlowContentCommandInput, UpdateContactFlowContentCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactFlowMetadataRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactFlowMetadataCommandInput extends UpdateContactFlowMetadataRequest {
    }
    export interface UpdateContactFlowMetadataCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates metadata about specified contact flow.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactFlowMetadataCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactFlowMetadataCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactFlowMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactFlowMetadataCommandInput} for command's `input` shape.
        * @see {@link UpdateContactFlowMetadataCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactFlowMetadataCommand extends $Command<UpdateContactFlowMetadataCommandInput, UpdateContactFlowMetadataCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactFlowMetadataCommandInput;
            constructor(input: UpdateContactFlowMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactFlowMetadataCommandInput, UpdateContactFlowMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleContentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactFlowModuleContentRequest, UpdateContactFlowModuleContentResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactFlowModuleContentCommandInput extends UpdateContactFlowModuleContentRequest {
    }
    export interface UpdateContactFlowModuleContentCommandOutput extends UpdateContactFlowModuleContentResponse, __MetadataBearer {
    }
    /**
        * <p>Updates specified contact flow module for the specified Amazon Connect instance. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactFlowModuleContentCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactFlowModuleContentCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactFlowModuleContentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactFlowModuleContentCommandInput} for command's `input` shape.
        * @see {@link UpdateContactFlowModuleContentCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactFlowModuleContentCommand extends $Command<UpdateContactFlowModuleContentCommandInput, UpdateContactFlowModuleContentCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactFlowModuleContentCommandInput;
            constructor(input: UpdateContactFlowModuleContentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactFlowModuleContentCommandInput, UpdateContactFlowModuleContentCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactFlowModuleMetadataRequest, UpdateContactFlowModuleMetadataResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactFlowModuleMetadataCommandInput extends UpdateContactFlowModuleMetadataRequest {
    }
    export interface UpdateContactFlowModuleMetadataCommandOutput extends UpdateContactFlowModuleMetadataResponse, __MetadataBearer {
    }
    /**
        * <p>Updates metadata about specified contact flow module.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactFlowModuleMetadataCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactFlowModuleMetadataCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactFlowModuleMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactFlowModuleMetadataCommandInput} for command's `input` shape.
        * @see {@link UpdateContactFlowModuleMetadataCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactFlowModuleMetadataCommand extends $Command<UpdateContactFlowModuleMetadataCommandInput, UpdateContactFlowModuleMetadataCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactFlowModuleMetadataCommandInput;
            constructor(input: UpdateContactFlowModuleMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactFlowModuleMetadataCommandInput, UpdateContactFlowModuleMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowNameCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactFlowNameRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactFlowNameCommandInput extends UpdateContactFlowNameRequest {
    }
    export interface UpdateContactFlowNameCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>The name of the contact flow.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactFlowNameCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactFlowNameCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactFlowNameCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactFlowNameCommandInput} for command's `input` shape.
        * @see {@link UpdateContactFlowNameCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactFlowNameCommand extends $Command<UpdateContactFlowNameCommandInput, UpdateContactFlowNameCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactFlowNameCommandInput;
            constructor(input: UpdateContactFlowNameCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactFlowNameCommandInput, UpdateContactFlowNameCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactScheduleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateContactScheduleRequest, UpdateContactScheduleResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateContactScheduleCommandInput extends UpdateContactScheduleRequest {
    }
    export interface UpdateContactScheduleCommandOutput extends UpdateContactScheduleResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the scheduled time of a task contact that is already scheduled.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateContactScheduleCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateContactScheduleCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateContactScheduleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactScheduleCommandInput} for command's `input` shape.
        * @see {@link UpdateContactScheduleCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateContactScheduleCommand extends $Command<UpdateContactScheduleCommandInput, UpdateContactScheduleCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateContactScheduleCommandInput;
            constructor(input: UpdateContactScheduleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactScheduleCommandInput, UpdateContactScheduleCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateHoursOfOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateHoursOfOperationRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateHoursOfOperationCommandInput extends UpdateHoursOfOperationRequest {
    }
    export interface UpdateHoursOfOperationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the hours of operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateHoursOfOperationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateHoursOfOperationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateHoursOfOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateHoursOfOperationCommandInput} for command's `input` shape.
        * @see {@link UpdateHoursOfOperationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateHoursOfOperationCommand extends $Command<UpdateHoursOfOperationCommandInput, UpdateHoursOfOperationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateHoursOfOperationCommandInput;
            constructor(input: UpdateHoursOfOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateHoursOfOperationCommandInput, UpdateHoursOfOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceAttributeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateInstanceAttributeRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateInstanceAttributeCommandInput extends UpdateInstanceAttributeRequest {
    }
    export interface UpdateInstanceAttributeCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the value for the specified attribute type.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateInstanceAttributeCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateInstanceAttributeCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateInstanceAttributeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateInstanceAttributeCommandInput} for command's `input` shape.
        * @see {@link UpdateInstanceAttributeCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateInstanceAttributeCommand extends $Command<UpdateInstanceAttributeCommandInput, UpdateInstanceAttributeCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateInstanceAttributeCommandInput;
            constructor(input: UpdateInstanceAttributeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateInstanceAttributeCommandInput, UpdateInstanceAttributeCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceStorageConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateInstanceStorageConfigRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateInstanceStorageConfigCommandInput extends UpdateInstanceStorageConfigRequest {
    }
    export interface UpdateInstanceStorageConfigCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates an existing configuration for a resource type. This API is idempotent.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateInstanceStorageConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateInstanceStorageConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateInstanceStorageConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateInstanceStorageConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateInstanceStorageConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateInstanceStorageConfigCommand extends $Command<UpdateInstanceStorageConfigCommandInput, UpdateInstanceStorageConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateInstanceStorageConfigCommandInput;
            constructor(input: UpdateInstanceStorageConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateInstanceStorageConfigCommandInput, UpdateInstanceStorageConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdatePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdatePhoneNumberRequest, UpdatePhoneNumberResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdatePhoneNumberCommandInput extends UpdatePhoneNumberRequest {
    }
    export interface UpdatePhoneNumberCommandOutput extends UpdatePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Updates your claimed phone number from its current Amazon Connect instance to another Amazon Connect instance
        *    in the same Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdatePhoneNumberCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdatePhoneNumberCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdatePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link UpdatePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdatePhoneNumberCommand extends $Command<UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdatePhoneNumberCommandInput;
            constructor(input: UpdatePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueHoursOfOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQueueHoursOfOperationRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQueueHoursOfOperationCommandInput extends UpdateQueueHoursOfOperationRequest {
    }
    export interface UpdateQueueHoursOfOperationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the hours of operation for the specified queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQueueHoursOfOperationCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQueueHoursOfOperationCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQueueHoursOfOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQueueHoursOfOperationCommandInput} for command's `input` shape.
        * @see {@link UpdateQueueHoursOfOperationCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQueueHoursOfOperationCommand extends $Command<UpdateQueueHoursOfOperationCommandInput, UpdateQueueHoursOfOperationCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQueueHoursOfOperationCommandInput;
            constructor(input: UpdateQueueHoursOfOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQueueHoursOfOperationCommandInput, UpdateQueueHoursOfOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueMaxContactsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQueueMaxContactsRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQueueMaxContactsCommandInput extends UpdateQueueMaxContactsRequest {
    }
    export interface UpdateQueueMaxContactsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the maximum number of contacts allowed in a queue before it is considered
        *    full.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQueueMaxContactsCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQueueMaxContactsCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQueueMaxContactsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQueueMaxContactsCommandInput} for command's `input` shape.
        * @see {@link UpdateQueueMaxContactsCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQueueMaxContactsCommand extends $Command<UpdateQueueMaxContactsCommandInput, UpdateQueueMaxContactsCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQueueMaxContactsCommandInput;
            constructor(input: UpdateQueueMaxContactsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQueueMaxContactsCommandInput, UpdateQueueMaxContactsCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueNameCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQueueNameRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQueueNameCommandInput extends UpdateQueueNameRequest {
    }
    export interface UpdateQueueNameCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the name and description of a queue. At least <code>Name</code> or <code>Description</code> must be provided.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQueueNameCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQueueNameCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQueueNameCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQueueNameCommandInput} for command's `input` shape.
        * @see {@link UpdateQueueNameCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQueueNameCommand extends $Command<UpdateQueueNameCommandInput, UpdateQueueNameCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQueueNameCommandInput;
            constructor(input: UpdateQueueNameCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQueueNameCommandInput, UpdateQueueNameCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueOutboundCallerConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQueueOutboundCallerConfigRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQueueOutboundCallerConfigCommandInput extends UpdateQueueOutboundCallerConfigRequest {
    }
    export interface UpdateQueueOutboundCallerConfigCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the outbound caller ID name, number, and outbound whisper flow for a specified
        *    queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQueueOutboundCallerConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQueueOutboundCallerConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQueueOutboundCallerConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQueueOutboundCallerConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateQueueOutboundCallerConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQueueOutboundCallerConfigCommand extends $Command<UpdateQueueOutboundCallerConfigCommandInput, UpdateQueueOutboundCallerConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQueueOutboundCallerConfigCommandInput;
            constructor(input: UpdateQueueOutboundCallerConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQueueOutboundCallerConfigCommandInput, UpdateQueueOutboundCallerConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQueueStatusRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQueueStatusCommandInput extends UpdateQueueStatusRequest {
    }
    export interface UpdateQueueStatusCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates the status of the queue.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQueueStatusCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQueueStatusCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQueueStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQueueStatusCommandInput} for command's `input` shape.
        * @see {@link UpdateQueueStatusCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQueueStatusCommand extends $Command<UpdateQueueStatusCommandInput, UpdateQueueStatusCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQueueStatusCommandInput;
            constructor(input: UpdateQueueStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQueueStatusCommandInput, UpdateQueueStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQuickConnectConfigRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQuickConnectConfigCommandInput extends UpdateQuickConnectConfigRequest {
    }
    export interface UpdateQuickConnectConfigCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the configuration settings for the specified quick connect.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQuickConnectConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQuickConnectConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQuickConnectConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQuickConnectConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateQuickConnectConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQuickConnectConfigCommand extends $Command<UpdateQuickConnectConfigCommandInput, UpdateQuickConnectConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQuickConnectConfigCommandInput;
            constructor(input: UpdateQuickConnectConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQuickConnectConfigCommandInput, UpdateQuickConnectConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectNameCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateQuickConnectNameRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateQuickConnectNameCommandInput extends UpdateQuickConnectNameRequest {
    }
    export interface UpdateQuickConnectNameCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateQuickConnectNameCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateQuickConnectNameCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateQuickConnectNameCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateQuickConnectNameCommandInput} for command's `input` shape.
        * @see {@link UpdateQuickConnectNameCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateQuickConnectNameCommand extends $Command<UpdateQuickConnectNameCommandInput, UpdateQuickConnectNameCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateQuickConnectNameCommandInput;
            constructor(input: UpdateQuickConnectNameCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateQuickConnectNameCommandInput, UpdateQuickConnectNameCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileConcurrencyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateRoutingProfileConcurrencyRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateRoutingProfileConcurrencyCommandInput extends UpdateRoutingProfileConcurrencyRequest {
    }
    export interface UpdateRoutingProfileConcurrencyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing
        *    profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateRoutingProfileConcurrencyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateRoutingProfileConcurrencyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateRoutingProfileConcurrencyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoutingProfileConcurrencyCommandInput} for command's `input` shape.
        * @see {@link UpdateRoutingProfileConcurrencyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateRoutingProfileConcurrencyCommand extends $Command<UpdateRoutingProfileConcurrencyCommandInput, UpdateRoutingProfileConcurrencyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateRoutingProfileConcurrencyCommandInput;
            constructor(input: UpdateRoutingProfileConcurrencyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoutingProfileConcurrencyCommandInput, UpdateRoutingProfileConcurrencyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileDefaultOutboundQueueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateRoutingProfileDefaultOutboundQueueRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateRoutingProfileDefaultOutboundQueueCommandInput extends UpdateRoutingProfileDefaultOutboundQueueRequest {
    }
    export interface UpdateRoutingProfileDefaultOutboundQueueCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the default outbound queue of a routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateRoutingProfileDefaultOutboundQueueCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateRoutingProfileDefaultOutboundQueueCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateRoutingProfileDefaultOutboundQueueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoutingProfileDefaultOutboundQueueCommandInput} for command's `input` shape.
        * @see {@link UpdateRoutingProfileDefaultOutboundQueueCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateRoutingProfileDefaultOutboundQueueCommand extends $Command<UpdateRoutingProfileDefaultOutboundQueueCommandInput, UpdateRoutingProfileDefaultOutboundQueueCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateRoutingProfileDefaultOutboundQueueCommandInput;
            constructor(input: UpdateRoutingProfileDefaultOutboundQueueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoutingProfileDefaultOutboundQueueCommandInput, UpdateRoutingProfileDefaultOutboundQueueCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileNameCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateRoutingProfileNameRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateRoutingProfileNameCommandInput extends UpdateRoutingProfileNameRequest {
    }
    export interface UpdateRoutingProfileNameCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the name and description of a routing profile. The request accepts the following data in JSON format.
        *    At least <code>Name</code> or <code>Description</code> must be provided.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateRoutingProfileNameCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateRoutingProfileNameCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateRoutingProfileNameCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoutingProfileNameCommandInput} for command's `input` shape.
        * @see {@link UpdateRoutingProfileNameCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateRoutingProfileNameCommand extends $Command<UpdateRoutingProfileNameCommandInput, UpdateRoutingProfileNameCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateRoutingProfileNameCommandInput;
            constructor(input: UpdateRoutingProfileNameCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoutingProfileNameCommandInput, UpdateRoutingProfileNameCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileQueuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateRoutingProfileQueuesRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateRoutingProfileQueuesCommandInput extends UpdateRoutingProfileQueuesRequest {
    }
    export interface UpdateRoutingProfileQueuesCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the properties associated with a set of queues for a routing profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateRoutingProfileQueuesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateRoutingProfileQueuesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateRoutingProfileQueuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoutingProfileQueuesCommandInput} for command's `input` shape.
        * @see {@link UpdateRoutingProfileQueuesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateRoutingProfileQueuesCommand extends $Command<UpdateRoutingProfileQueuesCommandInput, UpdateRoutingProfileQueuesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateRoutingProfileQueuesCommandInput;
            constructor(input: UpdateRoutingProfileQueuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoutingProfileQueuesCommandInput, UpdateRoutingProfileQueuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateSecurityProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateSecurityProfileRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateSecurityProfileCommandInput extends UpdateSecurityProfileRequest {
    }
    export interface UpdateSecurityProfileCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>This API is in preview release for Amazon Connect and is subject to change.</p>
        *          <p>Updates a security profile.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateSecurityProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateSecurityProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateSecurityProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSecurityProfileCommandInput} for command's `input` shape.
        * @see {@link UpdateSecurityProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateSecurityProfileCommand extends $Command<UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateSecurityProfileCommandInput;
            constructor(input: UpdateSecurityProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateTaskTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateTaskTemplateRequest, UpdateTaskTemplateResponse } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateTaskTemplateCommandInput extends UpdateTaskTemplateRequest {
    }
    export interface UpdateTaskTemplateCommandOutput extends UpdateTaskTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates details about a specific task template in the specified Amazon Connect instance. This
        *    operation does not support partial updates. Instead it does a full update of template
        *    content.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateTaskTemplateCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateTaskTemplateCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateTaskTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateTaskTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateTaskTemplateCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateTaskTemplateCommand extends $Command<UpdateTaskTemplateCommandInput, UpdateTaskTemplateCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateTaskTemplateCommandInput;
            constructor(input: UpdateTaskTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateTaskTemplateCommandInput, UpdateTaskTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserHierarchyRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserHierarchyCommandInput extends UpdateUserHierarchyRequest {
    }
    export interface UpdateUserHierarchyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Assigns the specified hierarchy group to the specified user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserHierarchyCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserHierarchyCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserHierarchyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserHierarchyCommandInput} for command's `input` shape.
        * @see {@link UpdateUserHierarchyCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserHierarchyCommand extends $Command<UpdateUserHierarchyCommandInput, UpdateUserHierarchyCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserHierarchyCommandInput;
            constructor(input: UpdateUserHierarchyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserHierarchyCommandInput, UpdateUserHierarchyCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyGroupNameCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserHierarchyGroupNameRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserHierarchyGroupNameCommandInput extends UpdateUserHierarchyGroupNameRequest {
    }
    export interface UpdateUserHierarchyGroupNameCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the name of the user hierarchy group. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserHierarchyGroupNameCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserHierarchyGroupNameCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserHierarchyGroupNameCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserHierarchyGroupNameCommandInput} for command's `input` shape.
        * @see {@link UpdateUserHierarchyGroupNameCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserHierarchyGroupNameCommand extends $Command<UpdateUserHierarchyGroupNameCommandInput, UpdateUserHierarchyGroupNameCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserHierarchyGroupNameCommandInput;
            constructor(input: UpdateUserHierarchyGroupNameCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserHierarchyGroupNameCommandInput, UpdateUserHierarchyGroupNameCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyStructureCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserHierarchyStructureRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserHierarchyStructureCommandInput extends UpdateUserHierarchyStructureRequest {
    }
    export interface UpdateUserHierarchyStructureCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserHierarchyStructureCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserHierarchyStructureCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserHierarchyStructureCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserHierarchyStructureCommandInput} for command's `input` shape.
        * @see {@link UpdateUserHierarchyStructureCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserHierarchyStructureCommand extends $Command<UpdateUserHierarchyStructureCommandInput, UpdateUserHierarchyStructureCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserHierarchyStructureCommandInput;
            constructor(input: UpdateUserHierarchyStructureCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserHierarchyStructureCommandInput, UpdateUserHierarchyStructureCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserIdentityInfoCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserIdentityInfoRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserIdentityInfoCommandInput extends UpdateUserIdentityInfoRequest {
    }
    export interface UpdateUserIdentityInfoCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the identity information for the specified user.</p>
        *          <important>
        *             <p>We strongly recommend limiting who has the ability to invoke
        *      <code>UpdateUserIdentityInfo</code>. Someone with that ability can change the login credentials
        *     of other users by changing their email address. This poses a security risk to your organization.
        *     They can change the email address of a user to the attacker's email address, and then reset the
        *     password through email. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for
        *      Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserIdentityInfoCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserIdentityInfoCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserIdentityInfoCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserIdentityInfoCommandInput} for command's `input` shape.
        * @see {@link UpdateUserIdentityInfoCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserIdentityInfoCommand extends $Command<UpdateUserIdentityInfoCommandInput, UpdateUserIdentityInfoCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserIdentityInfoCommandInput;
            constructor(input: UpdateUserIdentityInfoCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserIdentityInfoCommandInput, UpdateUserIdentityInfoCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserPhoneConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserPhoneConfigRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserPhoneConfigCommandInput extends UpdateUserPhoneConfigRequest {
    }
    export interface UpdateUserPhoneConfigCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the phone configuration settings for the specified user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserPhoneConfigCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserPhoneConfigCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserPhoneConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserPhoneConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateUserPhoneConfigCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserPhoneConfigCommand extends $Command<UpdateUserPhoneConfigCommandInput, UpdateUserPhoneConfigCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserPhoneConfigCommandInput;
            constructor(input: UpdateUserPhoneConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserPhoneConfigCommandInput, UpdateUserPhoneConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserRoutingProfileCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserRoutingProfileRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserRoutingProfileCommandInput extends UpdateUserRoutingProfileRequest {
    }
    export interface UpdateUserRoutingProfileCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Assigns the specified routing profile to the specified user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserRoutingProfileCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserRoutingProfileCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserRoutingProfileCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserRoutingProfileCommandInput} for command's `input` shape.
        * @see {@link UpdateUserRoutingProfileCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserRoutingProfileCommand extends $Command<UpdateUserRoutingProfileCommandInput, UpdateUserRoutingProfileCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserRoutingProfileCommandInput;
            constructor(input: UpdateUserRoutingProfileCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserRoutingProfileCommandInput, UpdateUserRoutingProfileCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserSecurityProfilesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ConnectClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient";
    import { UpdateUserSecurityProfilesRequest } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1";
    export interface UpdateUserSecurityProfilesCommandInput extends UpdateUserSecurityProfilesRequest {
    }
    export interface UpdateUserSecurityProfilesCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Assigns the specified security profiles to the specified user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ConnectClient, UpdateUserSecurityProfilesCommand } from "@aws-sdk/client-connect"; // ES Modules import
        * // const { ConnectClient, UpdateUserSecurityProfilesCommand } = require("@aws-sdk/client-connect"); // CommonJS import
        * const client = new ConnectClient(config);
        * const command = new UpdateUserSecurityProfilesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserSecurityProfilesCommandInput} for command's `input` shape.
        * @see {@link UpdateUserSecurityProfilesCommandOutput} for command's `response` shape.
        * @see {@link ConnectClientResolvedConfig | config} for ConnectClient's `config` shape.
        *
        */
    export class UpdateUserSecurityProfilesCommand extends $Command<UpdateUserSecurityProfilesCommandInput, UpdateUserSecurityProfilesCommandOutput, ConnectClientResolvedConfig> {
            readonly input: UpdateUserSecurityProfilesCommandInput;
            constructor(input: UpdateUserSecurityProfilesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConnectClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserSecurityProfilesCommandInput, UpdateUserSecurityProfilesCommandOutput>;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/ConnectClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateApprovedOriginCommandInput, AssociateApprovedOriginCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateApprovedOriginCommand";
    import { AssociateBotCommandInput, AssociateBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateBotCommand";
    import { AssociateDefaultVocabularyCommandInput, AssociateDefaultVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateDefaultVocabularyCommand";
    import { AssociateInstanceStorageConfigCommandInput, AssociateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateInstanceStorageConfigCommand";
    import { AssociateLambdaFunctionCommandInput, AssociateLambdaFunctionCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLambdaFunctionCommand";
    import { AssociateLexBotCommandInput, AssociateLexBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateLexBotCommand";
    import { AssociatePhoneNumberContactFlowCommandInput, AssociatePhoneNumberContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociatePhoneNumberContactFlowCommand";
    import { AssociateQueueQuickConnectsCommandInput, AssociateQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateQueueQuickConnectsCommand";
    import { AssociateRoutingProfileQueuesCommandInput, AssociateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateRoutingProfileQueuesCommand";
    import { AssociateSecurityKeyCommandInput, AssociateSecurityKeyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/AssociateSecurityKeyCommand";
    import { ClaimPhoneNumberCommandInput, ClaimPhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ClaimPhoneNumberCommand";
    import { CreateAgentStatusCommandInput, CreateAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateAgentStatusCommand";
    import { CreateContactFlowCommandInput, CreateContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowCommand";
    import { CreateContactFlowModuleCommandInput, CreateContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateContactFlowModuleCommand";
    import { CreateHoursOfOperationCommandInput, CreateHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateHoursOfOperationCommand";
    import { CreateInstanceCommandInput, CreateInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateInstanceCommand";
    import { CreateIntegrationAssociationCommandInput, CreateIntegrationAssociationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateIntegrationAssociationCommand";
    import { CreateQueueCommandInput, CreateQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQueueCommand";
    import { CreateQuickConnectCommandInput, CreateQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateQuickConnectCommand";
    import { CreateRoutingProfileCommandInput, CreateRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateRoutingProfileCommand";
    import { CreateSecurityProfileCommandInput, CreateSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateSecurityProfileCommand";
    import { CreateTaskTemplateCommandInput, CreateTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateTaskTemplateCommand";
    import { CreateUseCaseCommandInput, CreateUseCaseCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUseCaseCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserCommand";
    import { CreateUserHierarchyGroupCommandInput, CreateUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateUserHierarchyGroupCommand";
    import { CreateVocabularyCommandInput, CreateVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/CreateVocabularyCommand";
    import { DeleteContactFlowCommandInput, DeleteContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowCommand";
    import { DeleteContactFlowModuleCommandInput, DeleteContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteContactFlowModuleCommand";
    import { DeleteHoursOfOperationCommandInput, DeleteHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteHoursOfOperationCommand";
    import { DeleteInstanceCommandInput, DeleteInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteInstanceCommand";
    import { DeleteIntegrationAssociationCommandInput, DeleteIntegrationAssociationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteIntegrationAssociationCommand";
    import { DeleteQuickConnectCommandInput, DeleteQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteQuickConnectCommand";
    import { DeleteSecurityProfileCommandInput, DeleteSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteSecurityProfileCommand";
    import { DeleteTaskTemplateCommandInput, DeleteTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteTaskTemplateCommand";
    import { DeleteUseCaseCommandInput, DeleteUseCaseCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUseCaseCommand";
    import { DeleteUserCommandInput, DeleteUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserCommand";
    import { DeleteUserHierarchyGroupCommandInput, DeleteUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteUserHierarchyGroupCommand";
    import { DeleteVocabularyCommandInput, DeleteVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DeleteVocabularyCommand";
    import { DescribeAgentStatusCommandInput, DescribeAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeAgentStatusCommand";
    import { DescribeContactCommandInput, DescribeContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactCommand";
    import { DescribeContactFlowCommandInput, DescribeContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowCommand";
    import { DescribeContactFlowModuleCommandInput, DescribeContactFlowModuleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeContactFlowModuleCommand";
    import { DescribeHoursOfOperationCommandInput, DescribeHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeHoursOfOperationCommand";
    import { DescribeInstanceAttributeCommandInput, DescribeInstanceAttributeCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceAttributeCommand";
    import { DescribeInstanceCommandInput, DescribeInstanceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceCommand";
    import { DescribeInstanceStorageConfigCommandInput, DescribeInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeInstanceStorageConfigCommand";
    import { DescribePhoneNumberCommandInput, DescribePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribePhoneNumberCommand";
    import { DescribeQueueCommandInput, DescribeQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQueueCommand";
    import { DescribeQuickConnectCommandInput, DescribeQuickConnectCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeQuickConnectCommand";
    import { DescribeRoutingProfileCommandInput, DescribeRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeRoutingProfileCommand";
    import { DescribeSecurityProfileCommandInput, DescribeSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeSecurityProfileCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserCommand";
    import { DescribeUserHierarchyGroupCommandInput, DescribeUserHierarchyGroupCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyGroupCommand";
    import { DescribeUserHierarchyStructureCommandInput, DescribeUserHierarchyStructureCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeUserHierarchyStructureCommand";
    import { DescribeVocabularyCommandInput, DescribeVocabularyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DescribeVocabularyCommand";
    import { DisassociateApprovedOriginCommandInput, DisassociateApprovedOriginCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateApprovedOriginCommand";
    import { DisassociateBotCommandInput, DisassociateBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateBotCommand";
    import { DisassociateInstanceStorageConfigCommandInput, DisassociateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateInstanceStorageConfigCommand";
    import { DisassociateLambdaFunctionCommandInput, DisassociateLambdaFunctionCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLambdaFunctionCommand";
    import { DisassociateLexBotCommandInput, DisassociateLexBotCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateLexBotCommand";
    import { DisassociatePhoneNumberContactFlowCommandInput, DisassociatePhoneNumberContactFlowCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociatePhoneNumberContactFlowCommand";
    import { DisassociateQueueQuickConnectsCommandInput, DisassociateQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateQueueQuickConnectsCommand";
    import { DisassociateRoutingProfileQueuesCommandInput, DisassociateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateRoutingProfileQueuesCommand";
    import { DisassociateSecurityKeyCommandInput, DisassociateSecurityKeyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/DisassociateSecurityKeyCommand";
    import { GetContactAttributesCommandInput, GetContactAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetContactAttributesCommand";
    import { GetCurrentMetricDataCommandInput, GetCurrentMetricDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentMetricDataCommand";
    import { GetCurrentUserDataCommandInput, GetCurrentUserDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetCurrentUserDataCommand";
    import { GetFederationTokenCommandInput, GetFederationTokenCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetFederationTokenCommand";
    import { GetMetricDataCommandInput, GetMetricDataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetMetricDataCommand";
    import { GetTaskTemplateCommandInput, GetTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/GetTaskTemplateCommand";
    import { ListAgentStatusesCommandInput, ListAgentStatusesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListAgentStatusesCommand";
    import { ListApprovedOriginsCommandInput, ListApprovedOriginsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListApprovedOriginsCommand";
    import { ListBotsCommandInput, ListBotsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListBotsCommand";
    import { ListContactFlowModulesCommandInput, ListContactFlowModulesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowModulesCommand";
    import { ListContactFlowsCommandInput, ListContactFlowsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactFlowsCommand";
    import { ListContactReferencesCommandInput, ListContactReferencesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListContactReferencesCommand";
    import { ListDefaultVocabulariesCommandInput, ListDefaultVocabulariesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListDefaultVocabulariesCommand";
    import { ListHoursOfOperationsCommandInput, ListHoursOfOperationsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListHoursOfOperationsCommand";
    import { ListInstanceAttributesCommandInput, ListInstanceAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceAttributesCommand";
    import { ListInstancesCommandInput, ListInstancesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstancesCommand";
    import { ListInstanceStorageConfigsCommandInput, ListInstanceStorageConfigsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListInstanceStorageConfigsCommand";
    import { ListIntegrationAssociationsCommandInput, ListIntegrationAssociationsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListIntegrationAssociationsCommand";
    import { ListLambdaFunctionsCommandInput, ListLambdaFunctionsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLambdaFunctionsCommand";
    import { ListLexBotsCommandInput, ListLexBotsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListLexBotsCommand";
    import { ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersCommand";
    import { ListPhoneNumbersV2CommandInput, ListPhoneNumbersV2CommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPhoneNumbersV2Command";
    import { ListPromptsCommandInput, ListPromptsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListPromptsCommand";
    import { ListQueueQuickConnectsCommandInput, ListQueueQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueueQuickConnectsCommand";
    import { ListQueuesCommandInput, ListQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQueuesCommand";
    import { ListQuickConnectsCommandInput, ListQuickConnectsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListQuickConnectsCommand";
    import { ListRoutingProfileQueuesCommandInput, ListRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfileQueuesCommand";
    import { ListRoutingProfilesCommandInput, ListRoutingProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListRoutingProfilesCommand";
    import { ListSecurityKeysCommandInput, ListSecurityKeysCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityKeysCommand";
    import { ListSecurityProfilePermissionsCommandInput, ListSecurityProfilePermissionsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilePermissionsCommand";
    import { ListSecurityProfilesCommandInput, ListSecurityProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListSecurityProfilesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTagsForResourceCommand";
    import { ListTaskTemplatesCommandInput, ListTaskTemplatesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListTaskTemplatesCommand";
    import { ListUseCasesCommandInput, ListUseCasesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUseCasesCommand";
    import { ListUserHierarchyGroupsCommandInput, ListUserHierarchyGroupsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUserHierarchyGroupsCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ListUsersCommand";
    import { PutUserStatusCommandInput, PutUserStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/PutUserStatusCommand";
    import { ReleasePhoneNumberCommandInput, ReleasePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ReleasePhoneNumberCommand";
    import { ResumeContactRecordingCommandInput, ResumeContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/ResumeContactRecordingCommand";
    import { SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchAvailablePhoneNumbersCommand";
    import { SearchUsersCommandInput, SearchUsersCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchUsersCommand";
    import { SearchVocabulariesCommandInput, SearchVocabulariesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SearchVocabulariesCommand";
    import { StartChatContactCommandInput, StartChatContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartChatContactCommand";
    import { StartContactRecordingCommandInput, StartContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactRecordingCommand";
    import { StartContactStreamingCommandInput, StartContactStreamingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartContactStreamingCommand";
    import { StartOutboundVoiceContactCommandInput, StartOutboundVoiceContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartOutboundVoiceContactCommand";
    import { StartTaskContactCommandInput, StartTaskContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StartTaskContactCommand";
    import { StopContactCommandInput, StopContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactCommand";
    import { StopContactRecordingCommandInput, StopContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactRecordingCommand";
    import { StopContactStreamingCommandInput, StopContactStreamingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/StopContactStreamingCommand";
    import { SuspendContactRecordingCommandInput, SuspendContactRecordingCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/SuspendContactRecordingCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TagResourceCommand";
    import { TransferContactCommandInput, TransferContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/TransferContactCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UntagResourceCommand";
    import { UpdateAgentStatusCommandInput, UpdateAgentStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateAgentStatusCommand";
    import { UpdateContactAttributesCommandInput, UpdateContactAttributesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactAttributesCommand";
    import { UpdateContactCommandInput, UpdateContactCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactCommand";
    import { UpdateContactFlowContentCommandInput, UpdateContactFlowContentCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowContentCommand";
    import { UpdateContactFlowMetadataCommandInput, UpdateContactFlowMetadataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowMetadataCommand";
    import { UpdateContactFlowModuleContentCommandInput, UpdateContactFlowModuleContentCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleContentCommand";
    import { UpdateContactFlowModuleMetadataCommandInput, UpdateContactFlowModuleMetadataCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowModuleMetadataCommand";
    import { UpdateContactFlowNameCommandInput, UpdateContactFlowNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactFlowNameCommand";
    import { UpdateContactScheduleCommandInput, UpdateContactScheduleCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateContactScheduleCommand";
    import { UpdateHoursOfOperationCommandInput, UpdateHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateHoursOfOperationCommand";
    import { UpdateInstanceAttributeCommandInput, UpdateInstanceAttributeCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceAttributeCommand";
    import { UpdateInstanceStorageConfigCommandInput, UpdateInstanceStorageConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateInstanceStorageConfigCommand";
    import { UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdatePhoneNumberCommand";
    import { UpdateQueueHoursOfOperationCommandInput, UpdateQueueHoursOfOperationCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueHoursOfOperationCommand";
    import { UpdateQueueMaxContactsCommandInput, UpdateQueueMaxContactsCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueMaxContactsCommand";
    import { UpdateQueueNameCommandInput, UpdateQueueNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueNameCommand";
    import { UpdateQueueOutboundCallerConfigCommandInput, UpdateQueueOutboundCallerConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueOutboundCallerConfigCommand";
    import { UpdateQueueStatusCommandInput, UpdateQueueStatusCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQueueStatusCommand";
    import { UpdateQuickConnectConfigCommandInput, UpdateQuickConnectConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectConfigCommand";
    import { UpdateQuickConnectNameCommandInput, UpdateQuickConnectNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateQuickConnectNameCommand";
    import { UpdateRoutingProfileConcurrencyCommandInput, UpdateRoutingProfileConcurrencyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileConcurrencyCommand";
    import { UpdateRoutingProfileDefaultOutboundQueueCommandInput, UpdateRoutingProfileDefaultOutboundQueueCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileDefaultOutboundQueueCommand";
    import { UpdateRoutingProfileNameCommandInput, UpdateRoutingProfileNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileNameCommand";
    import { UpdateRoutingProfileQueuesCommandInput, UpdateRoutingProfileQueuesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateRoutingProfileQueuesCommand";
    import { UpdateSecurityProfileCommandInput, UpdateSecurityProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateSecurityProfileCommand";
    import { UpdateTaskTemplateCommandInput, UpdateTaskTemplateCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateTaskTemplateCommand";
    import { UpdateUserHierarchyCommandInput, UpdateUserHierarchyCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyCommand";
    import { UpdateUserHierarchyGroupNameCommandInput, UpdateUserHierarchyGroupNameCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyGroupNameCommand";
    import { UpdateUserHierarchyStructureCommandInput, UpdateUserHierarchyStructureCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserHierarchyStructureCommand";
    import { UpdateUserIdentityInfoCommandInput, UpdateUserIdentityInfoCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserIdentityInfoCommand";
    import { UpdateUserPhoneConfigCommandInput, UpdateUserPhoneConfigCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserPhoneConfigCommand";
    import { UpdateUserRoutingProfileCommandInput, UpdateUserRoutingProfileCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserRoutingProfileCommand";
    import { UpdateUserSecurityProfilesCommandInput, UpdateUserSecurityProfilesCommandOutput } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/commands/UpdateUserSecurityProfilesCommand";
    export type ServiceInputTypes = AssociateApprovedOriginCommandInput | AssociateBotCommandInput | AssociateDefaultVocabularyCommandInput | AssociateInstanceStorageConfigCommandInput | AssociateLambdaFunctionCommandInput | AssociateLexBotCommandInput | AssociatePhoneNumberContactFlowCommandInput | AssociateQueueQuickConnectsCommandInput | AssociateRoutingProfileQueuesCommandInput | AssociateSecurityKeyCommandInput | ClaimPhoneNumberCommandInput | CreateAgentStatusCommandInput | CreateContactFlowCommandInput | CreateContactFlowModuleCommandInput | CreateHoursOfOperationCommandInput | CreateInstanceCommandInput | CreateIntegrationAssociationCommandInput | CreateQueueCommandInput | CreateQuickConnectCommandInput | CreateRoutingProfileCommandInput | CreateSecurityProfileCommandInput | CreateTaskTemplateCommandInput | CreateUseCaseCommandInput | CreateUserCommandInput | CreateUserHierarchyGroupCommandInput | CreateVocabularyCommandInput | DeleteContactFlowCommandInput | DeleteContactFlowModuleCommandInput | DeleteHoursOfOperationCommandInput | DeleteInstanceCommandInput | DeleteIntegrationAssociationCommandInput | DeleteQuickConnectCommandInput | DeleteSecurityProfileCommandInput | DeleteTaskTemplateCommandInput | DeleteUseCaseCommandInput | DeleteUserCommandInput | DeleteUserHierarchyGroupCommandInput | DeleteVocabularyCommandInput | DescribeAgentStatusCommandInput | DescribeContactCommandInput | DescribeContactFlowCommandInput | DescribeContactFlowModuleCommandInput | DescribeHoursOfOperationCommandInput | DescribeInstanceAttributeCommandInput | DescribeInstanceCommandInput | DescribeInstanceStorageConfigCommandInput | DescribePhoneNumberCommandInput | DescribeQueueCommandInput | DescribeQuickConnectCommandInput | DescribeRoutingProfileCommandInput | DescribeSecurityProfileCommandInput | DescribeUserCommandInput | DescribeUserHierarchyGroupCommandInput | DescribeUserHierarchyStructureCommandInput | DescribeVocabularyCommandInput | DisassociateApprovedOriginCommandInput | DisassociateBotCommandInput | DisassociateInstanceStorageConfigCommandInput | DisassociateLambdaFunctionCommandInput | DisassociateLexBotCommandInput | DisassociatePhoneNumberContactFlowCommandInput | DisassociateQueueQuickConnectsCommandInput | DisassociateRoutingProfileQueuesCommandInput | DisassociateSecurityKeyCommandInput | GetContactAttributesCommandInput | GetCurrentMetricDataCommandInput | GetCurrentUserDataCommandInput | GetFederationTokenCommandInput | GetMetricDataCommandInput | GetTaskTemplateCommandInput | ListAgentStatusesCommandInput | ListApprovedOriginsCommandInput | ListBotsCommandInput | ListContactFlowModulesCommandInput | ListContactFlowsCommandInput | ListContactReferencesCommandInput | ListDefaultVocabulariesCommandInput | ListHoursOfOperationsCommandInput | ListInstanceAttributesCommandInput | ListInstanceStorageConfigsCommandInput | ListInstancesCommandInput | ListIntegrationAssociationsCommandInput | ListLambdaFunctionsCommandInput | ListLexBotsCommandInput | ListPhoneNumbersCommandInput | ListPhoneNumbersV2CommandInput | ListPromptsCommandInput | ListQueueQuickConnectsCommandInput | ListQueuesCommandInput | ListQuickConnectsCommandInput | ListRoutingProfileQueuesCommandInput | ListRoutingProfilesCommandInput | ListSecurityKeysCommandInput | ListSecurityProfilePermissionsCommandInput | ListSecurityProfilesCommandInput | ListTagsForResourceCommandInput | ListTaskTemplatesCommandInput | ListUseCasesCommandInput | ListUserHierarchyGroupsCommandInput | ListUsersCommandInput | PutUserStatusCommandInput | ReleasePhoneNumberCommandInput | ResumeContactRecordingCommandInput | SearchAvailablePhoneNumbersCommandInput | SearchUsersCommandInput | SearchVocabulariesCommandInput | StartChatContactCommandInput | StartContactRecordingCommandInput | StartContactStreamingCommandInput | StartOutboundVoiceContactCommandInput | StartTaskContactCommandInput | StopContactCommandInput | StopContactRecordingCommandInput | StopContactStreamingCommandInput | SuspendContactRecordingCommandInput | TagResourceCommandInput | TransferContactCommandInput | UntagResourceCommandInput | UpdateAgentStatusCommandInput | UpdateContactAttributesCommandInput | UpdateContactCommandInput | UpdateContactFlowContentCommandInput | UpdateContactFlowMetadataCommandInput | UpdateContactFlowModuleContentCommandInput | UpdateContactFlowModuleMetadataCommandInput | UpdateContactFlowNameCommandInput | UpdateContactScheduleCommandInput | UpdateHoursOfOperationCommandInput | UpdateInstanceAttributeCommandInput | UpdateInstanceStorageConfigCommandInput | UpdatePhoneNumberCommandInput | UpdateQueueHoursOfOperationCommandInput | UpdateQueueMaxContactsCommandInput | UpdateQueueNameCommandInput | UpdateQueueOutboundCallerConfigCommandInput | UpdateQueueStatusCommandInput | UpdateQuickConnectConfigCommandInput | UpdateQuickConnectNameCommandInput | UpdateRoutingProfileConcurrencyCommandInput | UpdateRoutingProfileDefaultOutboundQueueCommandInput | UpdateRoutingProfileNameCommandInput | UpdateRoutingProfileQueuesCommandInput | UpdateSecurityProfileCommandInput | UpdateTaskTemplateCommandInput | UpdateUserHierarchyCommandInput | UpdateUserHierarchyGroupNameCommandInput | UpdateUserHierarchyStructureCommandInput | UpdateUserIdentityInfoCommandInput | UpdateUserPhoneConfigCommandInput | UpdateUserRoutingProfileCommandInput | UpdateUserSecurityProfilesCommandInput;
    export type ServiceOutputTypes = AssociateApprovedOriginCommandOutput | AssociateBotCommandOutput | AssociateDefaultVocabularyCommandOutput | AssociateInstanceStorageConfigCommandOutput | AssociateLambdaFunctionCommandOutput | AssociateLexBotCommandOutput | AssociatePhoneNumberContactFlowCommandOutput | AssociateQueueQuickConnectsCommandOutput | AssociateRoutingProfileQueuesCommandOutput | AssociateSecurityKeyCommandOutput | ClaimPhoneNumberCommandOutput | CreateAgentStatusCommandOutput | CreateContactFlowCommandOutput | CreateContactFlowModuleCommandOutput | CreateHoursOfOperationCommandOutput | CreateInstanceCommandOutput | CreateIntegrationAssociationCommandOutput | CreateQueueCommandOutput | CreateQuickConnectCommandOutput | CreateRoutingProfileCommandOutput | CreateSecurityProfileCommandOutput | CreateTaskTemplateCommandOutput | CreateUseCaseCommandOutput | CreateUserCommandOutput | CreateUserHierarchyGroupCommandOutput | CreateVocabularyCommandOutput | DeleteContactFlowCommandOutput | DeleteContactFlowModuleCommandOutput | DeleteHoursOfOperationCommandOutput | DeleteInstanceCommandOutput | DeleteIntegrationAssociationCommandOutput | DeleteQuickConnectCommandOutput | DeleteSecurityProfileCommandOutput | DeleteTaskTemplateCommandOutput | DeleteUseCaseCommandOutput | DeleteUserCommandOutput | DeleteUserHierarchyGroupCommandOutput | DeleteVocabularyCommandOutput | DescribeAgentStatusCommandOutput | DescribeContactCommandOutput | DescribeContactFlowCommandOutput | DescribeContactFlowModuleCommandOutput | DescribeHoursOfOperationCommandOutput | DescribeInstanceAttributeCommandOutput | DescribeInstanceCommandOutput | DescribeInstanceStorageConfigCommandOutput | DescribePhoneNumberCommandOutput | DescribeQueueCommandOutput | DescribeQuickConnectCommandOutput | DescribeRoutingProfileCommandOutput | DescribeSecurityProfileCommandOutput | DescribeUserCommandOutput | DescribeUserHierarchyGroupCommandOutput | DescribeUserHierarchyStructureCommandOutput | DescribeVocabularyCommandOutput | DisassociateApprovedOriginCommandOutput | DisassociateBotCommandOutput | DisassociateInstanceStorageConfigCommandOutput | DisassociateLambdaFunctionCommandOutput | DisassociateLexBotCommandOutput | DisassociatePhoneNumberContactFlowCommandOutput | DisassociateQueueQuickConnectsCommandOutput | DisassociateRoutingProfileQueuesCommandOutput | DisassociateSecurityKeyCommandOutput | GetContactAttributesCommandOutput | GetCurrentMetricDataCommandOutput | GetCurrentUserDataCommandOutput | GetFederationTokenCommandOutput | GetMetricDataCommandOutput | GetTaskTemplateCommandOutput | ListAgentStatusesCommandOutput | ListApprovedOriginsCommandOutput | ListBotsCommandOutput | ListContactFlowModulesCommandOutput | ListContactFlowsCommandOutput | ListContactReferencesCommandOutput | ListDefaultVocabulariesCommandOutput | ListHoursOfOperationsCommandOutput | ListInstanceAttributesCommandOutput | ListInstanceStorageConfigsCommandOutput | ListInstancesCommandOutput | ListIntegrationAssociationsCommandOutput | ListLambdaFunctionsCommandOutput | ListLexBotsCommandOutput | ListPhoneNumbersCommandOutput | ListPhoneNumbersV2CommandOutput | ListPromptsCommandOutput | ListQueueQuickConnectsCommandOutput | ListQueuesCommandOutput | ListQuickConnectsCommandOutput | ListRoutingProfileQueuesCommandOutput | ListRoutingProfilesCommandOutput | ListSecurityKeysCommandOutput | ListSecurityProfilePermissionsCommandOutput | ListSecurityProfilesCommandOutput | ListTagsForResourceCommandOutput | ListTaskTemplatesCommandOutput | ListUseCasesCommandOutput | ListUserHierarchyGroupsCommandOutput | ListUsersCommandOutput | PutUserStatusCommandOutput | ReleasePhoneNumberCommandOutput | ResumeContactRecordingCommandOutput | SearchAvailablePhoneNumbersCommandOutput | SearchUsersCommandOutput | SearchVocabulariesCommandOutput | StartChatContactCommandOutput | StartContactRecordingCommandOutput | StartContactStreamingCommandOutput | StartOutboundVoiceContactCommandOutput | StartTaskContactCommandOutput | StopContactCommandOutput | StopContactRecordingCommandOutput | StopContactStreamingCommandOutput | SuspendContactRecordingCommandOutput | TagResourceCommandOutput | TransferContactCommandOutput | UntagResourceCommandOutput | UpdateAgentStatusCommandOutput | UpdateContactAttributesCommandOutput | UpdateContactCommandOutput | UpdateContactFlowContentCommandOutput | UpdateContactFlowMetadataCommandOutput | UpdateContactFlowModuleContentCommandOutput | UpdateContactFlowModuleMetadataCommandOutput | UpdateContactFlowNameCommandOutput | UpdateContactScheduleCommandOutput | UpdateHoursOfOperationCommandOutput | UpdateInstanceAttributeCommandOutput | UpdateInstanceStorageConfigCommandOutput | UpdatePhoneNumberCommandOutput | UpdateQueueHoursOfOperationCommandOutput | UpdateQueueMaxContactsCommandOutput | UpdateQueueNameCommandOutput | UpdateQueueOutboundCallerConfigCommandOutput | UpdateQueueStatusCommandOutput | UpdateQuickConnectConfigCommandOutput | UpdateQuickConnectNameCommandOutput | UpdateRoutingProfileConcurrencyCommandOutput | UpdateRoutingProfileDefaultOutboundQueueCommandOutput | UpdateRoutingProfileNameCommandOutput | UpdateRoutingProfileQueuesCommandOutput | UpdateSecurityProfileCommandOutput | UpdateTaskTemplateCommandOutput | UpdateUserHierarchyCommandOutput | UpdateUserHierarchyGroupNameCommandOutput | UpdateUserHierarchyStructureCommandOutput | UpdateUserIdentityInfoCommandOutput | UpdateUserPhoneConfigCommandOutput | UpdateUserRoutingProfileCommandOutput | UpdateUserSecurityProfilesCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ConnectClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ConnectClient class constructor that set the region, credentials and other options.
        */
    export interface ConnectClientConfig extends ConnectClientConfigType {
    }
    type ConnectClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ConnectClient class. This is resolved and normalized from the {@link ConnectClientConfig | constructor configuration interface}.
        */
    export interface ConnectClientResolvedConfig extends ConnectClientResolvedConfigType {
    }
    /**
        * <p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer
        *    contact center and provide reliable customer engagement at any scale.</p>
        *          <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing.
        *    You can also resolve customer issues more efficiently by getting customers in touch with the
        *    appropriate agents.</p>
        *          <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits
        *    to the number of requests that you can make per second. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect
        *     Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
        *          <p>You can connect programmatically to an Amazon Web Services service by using an endpoint. For
        *    a list of Amazon Connect endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/connect_region.html">Amazon Connect Endpoints</a>.</p>
        *          <note>
        *             <p>Working with contact flows? Check out the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>
        *          </note>
        */
    export class ConnectClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ConnectClientResolvedConfig> {
            /**
                * The resolved configuration of ConnectClient class. This is resolved and normalized from the {@link ConnectClientConfig | constructor configuration interface}.
                */
            readonly config: ConnectClientResolvedConfig;
            constructor(configuration: ConnectClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ConnectServiceException as __BaseException } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/ConnectServiceException";
    /**
        * <p>You do not have sufficient permissions to perform this action.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum ContactState {
            CONNECTED = "CONNECTED",
            CONNECTED_ONHOLD = "CONNECTED_ONHOLD",
            CONNECTING = "CONNECTING",
            ENDED = "ENDED",
            ERROR = "ERROR",
            INCOMING = "INCOMING",
            MISSED = "MISSED",
            PENDING = "PENDING",
            REJECTED = "REJECTED"
    }
    export enum Channel {
            CHAT = "CHAT",
            TASK = "TASK",
            VOICE = "VOICE"
    }
    export enum ContactInitiationMethod {
            API = "API",
            CALLBACK = "CALLBACK",
            INBOUND = "INBOUND",
            OUTBOUND = "OUTBOUND",
            QUEUE_TRANSFER = "QUEUE_TRANSFER",
            TRANSFER = "TRANSFER"
    }
    /**
        * <p>Contains information about a queue resource for which metrics are returned.</p>
        */
    export interface QueueReference {
            /**
                * <p>The identifier of the queue.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the queue.</p>
                */
            Arn?: string;
    }
    export namespace QueueReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QueueReference) => any;
    }
    /**
        * <p>Information about the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_Contact.html">contact</a> associated to the
        *    user.</p>
        */
    export interface AgentContactReference {
            /**
                * <p>The identifier of the contact in this instance of Amazon Connect. </p>
                */
            ContactId?: string;
            /**
                * <p>The channel of the contact.</p>
                */
            Channel?: Channel | string;
            /**
                * <p>How the contact was initiated.</p>
                */
            InitiationMethod?: ContactInitiationMethod | string;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">state of the contact</a>.</p>
                */
            AgentContactState?: ContactState | string;
            /**
                * <p>The epoch timestamp when the contact state started.</p>
                */
            StateStartTimestamp?: Date;
            /**
                * <p>The time at which the contact was connected to an agent.</p>
                */
            ConnectedToAgentTimestamp?: Date;
            /**
                * <p>Contains information about a queue resource for which metrics are returned.</p>
                */
            Queue?: QueueReference;
    }
    export namespace AgentContactReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentContactReference) => any;
    }
    /**
        * <p>Information about the agent who accepted the contact.</p>
        */
    export interface AgentInfo {
            /**
                * <p>The identifier of the agent who accepted the contact.</p>
                */
            Id?: string;
            /**
                * <p>The timestamp when the contact was connected to the agent.</p>
                */
            ConnectedToAgentTimestamp?: Date;
    }
    export namespace AgentInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentInfo) => any;
    }
    export enum AgentStatusState {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    export enum AgentStatusType {
            CUSTOM = "CUSTOM",
            OFFLINE = "OFFLINE",
            ROUTABLE = "ROUTABLE"
    }
    /**
        * <p>Contains information about an agent status.</p>
        */
    export interface AgentStatus {
            /**
                * <p>The Amazon Resource Name (ARN) of the agent status.</p>
                */
            AgentStatusARN?: string;
            /**
                * <p>The identifier of the agent status.</p>
                */
            AgentStatusId?: string;
            /**
                * <p>The name of the agent status.</p>
                */
            Name?: string;
            /**
                * <p>The description of the agent status.</p>
                */
            Description?: string;
            /**
                * <p>The type of agent status.</p>
                */
            Type?: AgentStatusType | string;
            /**
                * <p>The display order of the agent status.</p>
                */
            DisplayOrder?: number;
            /**
                * <p>The state of the agent status.</p>
                */
            State?: AgentStatusState | string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace AgentStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentStatus) => any;
    }
    /**
        * <p>Information about the agent's status.</p>
        */
    export interface AgentStatusReference {
            /**
                * <p>The start timestamp of the agent's status.</p>
                */
            StatusStartTimestamp?: Date;
            /**
                * <p>The Amazon Resource Name (ARN) of the agent's status.</p>
                */
            StatusArn?: string;
    }
    export namespace AgentStatusReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentStatusReference) => any;
    }
    /**
        * <p>Summary information for an agent status.</p>
        */
    export interface AgentStatusSummary {
            /**
                * <p>The identifier for an agent status.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the agent status.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the agent status.</p>
                */
            Name?: string;
            /**
                * <p>The type of the agent status.</p>
                */
            Type?: AgentStatusType | string;
    }
    export namespace AgentStatusSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentStatusSummary) => any;
    }
    export interface AssociateApprovedOriginRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The domain to add to your allow list.</p>
                */
            Origin: string | undefined;
    }
    export namespace AssociateApprovedOriginRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateApprovedOriginRequest) => any;
    }
    /**
        * <p>Request processing failed because of an error or failure with the service.</p>
        */
    export class InternalServiceException extends __BaseException {
            readonly name: "InternalServiceException";
            readonly $fault: "server";
            /**
                * <p>The message.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServiceException, __BaseException>);
    }
    /**
        * <p>One or more of the specified parameters are not valid.</p>
        */
    export class InvalidParameterException extends __BaseException {
            readonly name: "InvalidParameterException";
            readonly $fault: "client";
            /**
                * <p>The message about the parameters.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
    }
    /**
        * <p>The request is not valid.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * <p>The message about the request.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>A resource already has that name.</p>
        */
    export class ResourceConflictException extends __BaseException {
            readonly name: "ResourceConflictException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceConflictException, __BaseException>);
    }
    /**
        * <p>The specified resource was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * <p>The message about the resource.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The service quota has been exceeded.</p>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    /**
        * <p>The throttling limit has been exceeded.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>Configuration information of an Amazon Lex bot.</p>
        */
    export interface LexBot {
            /**
                * <p>The name of the Amazon Lex bot.</p>
                */
            Name?: string;
            /**
                * <p>The Region that the Amazon Lex bot was created in.</p>
                */
            LexRegion?: string;
    }
    export namespace LexBot {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LexBot) => any;
    }
    /**
        * <p>Configuration information of an Amazon Lex V2 bot.</p>
        */
    export interface LexV2Bot {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon Lex V2 bot.</p>
                */
            AliasArn?: string;
    }
    export namespace LexV2Bot {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LexV2Bot) => any;
    }
    export interface AssociateBotRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>Configuration information of an Amazon Lex bot.</p>
                */
            LexBot?: LexBot;
            /**
                * <p>The Amazon Lex V2 bot to associate with the instance.</p>
                */
            LexV2Bot?: LexV2Bot;
    }
    export namespace AssociateBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateBotRequest) => any;
    }
    /**
        * <p>The allowed limit for the resource has been exceeded.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * <p>The message about the limit.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    export enum VocabularyLanguageCode {
            AR_AE = "ar-AE",
            DE_CH = "de-CH",
            DE_DE = "de-DE",
            EN_AB = "en-AB",
            EN_AU = "en-AU",
            EN_GB = "en-GB",
            EN_IE = "en-IE",
            EN_IN = "en-IN",
            EN_US = "en-US",
            EN_WL = "en-WL",
            ES_ES = "es-ES",
            ES_US = "es-US",
            FR_CA = "fr-CA",
            FR_FR = "fr-FR",
            HI_IN = "hi-IN",
            IT_IT = "it-IT",
            JA_JP = "ja-JP",
            KO_KR = "ko-KR",
            PT_BR = "pt-BR",
            PT_PT = "pt-PT",
            ZH_CN = "zh-CN"
    }
    export interface AssociateDefaultVocabularyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode: VocabularyLanguageCode | string | undefined;
            /**
                * <p>The identifier of the custom vocabulary. If this is empty, the default is set to none.</p>
                */
            VocabularyId?: string;
    }
    export namespace AssociateDefaultVocabularyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDefaultVocabularyRequest) => any;
    }
    export interface AssociateDefaultVocabularyResponse {
    }
    export namespace AssociateDefaultVocabularyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDefaultVocabularyResponse) => any;
    }
    export enum InstanceStorageResourceType {
            AGENT_EVENTS = "AGENT_EVENTS",
            CALL_RECORDINGS = "CALL_RECORDINGS",
            CHAT_TRANSCRIPTS = "CHAT_TRANSCRIPTS",
            CONTACT_TRACE_RECORDS = "CONTACT_TRACE_RECORDS",
            MEDIA_STREAMS = "MEDIA_STREAMS",
            REAL_TIME_CONTACT_ANALYSIS_SEGMENTS = "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS",
            SCHEDULED_REPORTS = "SCHEDULED_REPORTS"
    }
    /**
        * <p>Configuration information of a Kinesis Data Firehose delivery stream.</p>
        */
    export interface KinesisFirehoseConfig {
            /**
                * <p>The Amazon Resource Name (ARN) of the delivery stream.</p>
                */
            FirehoseArn: string | undefined;
    }
    export namespace KinesisFirehoseConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KinesisFirehoseConfig) => any;
    }
    /**
        * <p>Configuration information of a Kinesis data stream.</p>
        */
    export interface KinesisStreamConfig {
            /**
                * <p>The Amazon Resource Name (ARN) of the data stream.</p>
                */
            StreamArn: string | undefined;
    }
    export namespace KinesisStreamConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KinesisStreamConfig) => any;
    }
    export enum EncryptionType {
            KMS = "KMS"
    }
    /**
        * <p>The encryption configuration.</p>
        */
    export interface EncryptionConfig {
            /**
                * <p>The type of encryption.</p>
                */
            EncryptionType: EncryptionType | string | undefined;
            /**
                * <p>The full ARN of the encryption key. </p>
                *          <note>
                *             <p>Be sure to provide the full ARN of the encryption key, not just the ID.</p>
                *          </note>
                */
            KeyId: string | undefined;
    }
    export namespace EncryptionConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EncryptionConfig) => any;
    }
    /**
        * <p>Configuration information of a Kinesis video stream.</p>
        */
    export interface KinesisVideoStreamConfig {
            /**
                * <p>The prefix of the video stream.</p>
                */
            Prefix: string | undefined;
            /**
                * <p>The number of hours data is retained in the stream. Kinesis Video Streams retains the data
                *    in a data store that is associated with the stream.</p>
                *          <p>The default value is 0, indicating that the stream does not persist data.</p>
                */
            RetentionPeriodHours: number | undefined;
            /**
                * <p>The encryption configuration.</p>
                */
            EncryptionConfig: EncryptionConfig | undefined;
    }
    export namespace KinesisVideoStreamConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KinesisVideoStreamConfig) => any;
    }
    /**
        * <p>Information about the Amazon Simple Storage Service (Amazon S3) storage type.</p>
        */
    export interface S3Config {
            /**
                * <p>The S3 bucket name.</p>
                */
            BucketName: string | undefined;
            /**
                * <p>The S3 bucket prefix.</p>
                */
            BucketPrefix: string | undefined;
            /**
                * <p>The Amazon S3 encryption configuration.</p>
                */
            EncryptionConfig?: EncryptionConfig;
    }
    export namespace S3Config {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Config) => any;
    }
    export enum StorageType {
            KINESIS_FIREHOSE = "KINESIS_FIREHOSE",
            KINESIS_STREAM = "KINESIS_STREAM",
            KINESIS_VIDEO_STREAM = "KINESIS_VIDEO_STREAM",
            S3 = "S3"
    }
    /**
        * <p>The storage configuration for the instance.</p>
        */
    export interface InstanceStorageConfig {
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId?: string;
            /**
                * <p>A valid storage type.</p>
                */
            StorageType: StorageType | string | undefined;
            /**
                * <p>The S3 bucket
                *    configuration.</p>
                */
            S3Config?: S3Config;
            /**
                * <p>The configuration of the Kinesis video stream.</p>
                */
            KinesisVideoStreamConfig?: KinesisVideoStreamConfig;
            /**
                * <p>The configuration of the Kinesis data stream.</p>
                */
            KinesisStreamConfig?: KinesisStreamConfig;
            /**
                * <p>The configuration of the Kinesis Firehose delivery stream.</p>
                */
            KinesisFirehoseConfig?: KinesisFirehoseConfig;
    }
    export namespace InstanceStorageConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InstanceStorageConfig) => any;
    }
    export interface AssociateInstanceStorageConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A valid resource type.</p>
                */
            ResourceType: InstanceStorageResourceType | string | undefined;
            /**
                * <p>A valid storage type.</p>
                */
            StorageConfig: InstanceStorageConfig | undefined;
    }
    export namespace AssociateInstanceStorageConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateInstanceStorageConfigRequest) => any;
    }
    export interface AssociateInstanceStorageConfigResponse {
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId?: string;
    }
    export namespace AssociateInstanceStorageConfigResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateInstanceStorageConfigResponse) => any;
    }
    export interface AssociateLambdaFunctionRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is
                *    140.</p>
                */
            FunctionArn: string | undefined;
    }
    export namespace AssociateLambdaFunctionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateLambdaFunctionRequest) => any;
    }
    export interface AssociateLexBotRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The Amazon Lex bot to associate with the instance.</p>
                */
            LexBot: LexBot | undefined;
    }
    export namespace AssociateLexBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateLexBotRequest) => any;
    }
    export interface AssociatePhoneNumberContactFlowRequest {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
    }
    export namespace AssociatePhoneNumberContactFlowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumberContactFlowRequest) => any;
    }
    export interface AssociateQueueQuickConnectsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The quick connects to associate with this queue.</p>
                */
            QuickConnectIds: string[] | undefined;
    }
    export namespace AssociateQueueQuickConnectsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateQueueQuickConnectsRequest) => any;
    }
    /**
        * <p>Contains the channel and queue identifier for a routing profile.</p>
        */
    export interface RoutingProfileQueueReference {
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The channels agents can handle in the Contact Control Panel (CCP) for this routing
                *    profile.</p>
                */
            Channel: Channel | string | undefined;
    }
    export namespace RoutingProfileQueueReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfileQueueReference) => any;
    }
    /**
        * <p>Contains information about the queue and channel for which priority and delay can be
        *    set.</p>
        */
    export interface RoutingProfileQueueConfig {
            /**
                * <p>Contains information about a queue resource.</p>
                */
            QueueReference: RoutingProfileQueueReference | undefined;
            /**
                * <p>The order in which contacts are to be handled for the queue. For more information, see
                *     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and
                *     delay</a>.</p>
                */
            Priority: number | undefined;
            /**
                * <p>The delay, in seconds, a contact should be in the queue before they are routed to an
                *    available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and
                *     delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            Delay: number | undefined;
    }
    export namespace RoutingProfileQueueConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfileQueueConfig) => any;
    }
    export interface AssociateRoutingProfileQueuesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The queues to associate with this routing profile.</p>
                */
            QueueConfigs: RoutingProfileQueueConfig[] | undefined;
    }
    export namespace AssociateRoutingProfileQueuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateRoutingProfileQueuesRequest) => any;
    }
    export interface AssociateSecurityKeyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A valid security key in PEM format.</p>
                */
            Key: string | undefined;
    }
    export namespace AssociateSecurityKeyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateSecurityKeyRequest) => any;
    }
    export interface AssociateSecurityKeyResponse {
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId?: string;
    }
    export namespace AssociateSecurityKeyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateSecurityKeyResponse) => any;
    }
    export interface ClaimPhoneNumberRequest {
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.</p>
                */
            TargetArn: string | undefined;
            /**
                * <p>The phone number you want to claim. Phone numbers are formatted <code>[+] [country code]
                *     [subscriber number including area code]</code>.</p>
                */
            PhoneNumber: string | undefined;
            /**
                * <p>The description of the phone number.</p>
                */
            PhoneNumberDescription?: string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace ClaimPhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ClaimPhoneNumberRequest) => any;
    }
    export interface ClaimPhoneNumberResponse {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the phone number.</p>
                */
            PhoneNumberArn?: string;
    }
    export namespace ClaimPhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ClaimPhoneNumberResponse) => any;
    }
    /**
        * <p>An entity with the same name already exists.</p>
        */
    export class IdempotencyException extends __BaseException {
            readonly name: "IdempotencyException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<IdempotencyException, __BaseException>);
    }
    export interface CreateAgentStatusRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the status.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the status.</p>
                */
            Description?: string;
            /**
                * <p>The state of the status.</p>
                */
            State: AgentStatusState | string | undefined;
            /**
                * <p>The display order of the status.</p>
                */
            DisplayOrder?: number;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateAgentStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAgentStatusRequest) => any;
    }
    export interface CreateAgentStatusResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the agent status.</p>
                */
            AgentStatusARN?: string;
            /**
                * <p>The identifier of the agent status.</p>
                */
            AgentStatusId?: string;
    }
    export namespace CreateAgentStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAgentStatusResponse) => any;
    }
    /**
        * <p>A resource with the specified name already exists.</p>
        */
    export class DuplicateResourceException extends __BaseException {
            readonly name: "DuplicateResourceException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicateResourceException, __BaseException>);
    }
    export enum ContactFlowType {
            AGENT_HOLD = "AGENT_HOLD",
            AGENT_TRANSFER = "AGENT_TRANSFER",
            AGENT_WHISPER = "AGENT_WHISPER",
            CONTACT_FLOW = "CONTACT_FLOW",
            CUSTOMER_HOLD = "CUSTOMER_HOLD",
            CUSTOMER_QUEUE = "CUSTOMER_QUEUE",
            CUSTOMER_WHISPER = "CUSTOMER_WHISPER",
            OUTBOUND_WHISPER = "OUTBOUND_WHISPER",
            QUEUE_TRANSFER = "QUEUE_TRANSFER"
    }
    export interface CreateContactFlowRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the contact flow.</p>
                */
            Name: string | undefined;
            /**
                * <p>The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator
                *    Guide</i>.</p>
                */
            Type: ContactFlowType | string | undefined;
            /**
                * <p>The description of the contact flow. </p>
                */
            Description?: string;
            /**
                * <p>The content of the contact flow. </p>
                */
            Content: string | undefined;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateContactFlowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactFlowRequest) => any;
    }
    export interface CreateContactFlowResponse {
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the contact flow.</p>
                */
            ContactFlowArn?: string;
    }
    export namespace CreateContactFlowResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactFlowResponse) => any;
    }
    /**
        * <p>Information about a problem detail.</p>
        */
    export interface ProblemDetail {
            /**
                * <p>The problem detail's message.</p>
                */
            message?: string;
    }
    export namespace ProblemDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProblemDetail) => any;
    }
    /**
        * <p>The contact flow is not valid.</p>
        */
    export class InvalidContactFlowException extends __BaseException {
            readonly name: "InvalidContactFlowException";
            readonly $fault: "client";
            /**
                * <p>The problems with the contact flow. Please fix before trying again.</p>
                */
            problems?: ProblemDetail[];
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidContactFlowException, __BaseException>);
    }
    export interface CreateContactFlowModuleRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the contact flow module.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the contact flow module. </p>
                */
            Description?: string;
            /**
                * <p>The content of the contact flow module.</p>
                */
            Content: string | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace CreateContactFlowModuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactFlowModuleRequest) => any;
    }
    export interface CreateContactFlowModuleResponse {
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the contact flow module.</p>
                */
            Arn?: string;
    }
    export namespace CreateContactFlowModuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactFlowModuleResponse) => any;
    }
    /**
        * <p>The problems with the module. Please fix before trying again.</p>
        */
    export class InvalidContactFlowModuleException extends __BaseException {
            readonly name: "InvalidContactFlowModuleException";
            readonly $fault: "client";
            Problems?: ProblemDetail[];
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidContactFlowModuleException, __BaseException>);
    }
    export enum HoursOfOperationDays {
            FRIDAY = "FRIDAY",
            MONDAY = "MONDAY",
            SATURDAY = "SATURDAY",
            SUNDAY = "SUNDAY",
            THURSDAY = "THURSDAY",
            TUESDAY = "TUESDAY",
            WEDNESDAY = "WEDNESDAY"
    }
    /**
        * <p>The start time or end time for an hours of operation.</p>
        */
    export interface HoursOfOperationTimeSlice {
            /**
                * <p>The hours.</p>
                */
            Hours: number | undefined;
            /**
                * <p>The minutes.</p>
                */
            Minutes: number | undefined;
    }
    export namespace HoursOfOperationTimeSlice {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HoursOfOperationTimeSlice) => any;
    }
    /**
        * <p>Contains information about the hours of operation.</p>
        */
    export interface HoursOfOperationConfig {
            /**
                * <p>The day that the hours of operation applies to.</p>
                */
            Day: HoursOfOperationDays | string | undefined;
            /**
                * <p>The start time that your contact center opens.</p>
                */
            StartTime: HoursOfOperationTimeSlice | undefined;
            /**
                * <p>The end time that your contact center closes.</p>
                */
            EndTime: HoursOfOperationTimeSlice | undefined;
    }
    export namespace HoursOfOperationConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HoursOfOperationConfig) => any;
    }
    export interface CreateHoursOfOperationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the hours of operation.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the hours of operation.</p>
                */
            Description?: string;
            /**
                * <p>The time zone of the hours of operation.</p>
                */
            TimeZone: string | undefined;
            /**
                * <p>Configuration information for the hours of operation: day, start time, and end time.</p>
                */
            Config: HoursOfOperationConfig[] | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateHoursOfOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateHoursOfOperationRequest) => any;
    }
    export interface CreateHoursOfOperationResponse {
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the hours of operation.</p>
                */
            HoursOfOperationArn?: string;
    }
    export namespace CreateHoursOfOperationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateHoursOfOperationResponse) => any;
    }
    export enum DirectoryType {
            CONNECT_MANAGED = "CONNECT_MANAGED",
            EXISTING_DIRECTORY = "EXISTING_DIRECTORY",
            SAML = "SAML"
    }
    export interface CreateInstanceRequest {
            /**
                * <p>The idempotency token.</p>
                */
            ClientToken?: string;
            /**
                * <p>The type of identity management for your Amazon Connect users.</p>
                */
            IdentityManagementType: DirectoryType | string | undefined;
            /**
                * <p>The name for your instance.</p>
                */
            InstanceAlias?: string;
            /**
                * <p>The identifier for the directory.</p>
                */
            DirectoryId?: string;
            /**
                * <p>Your contact center handles incoming contacts.</p>
                */
            InboundCallsEnabled: boolean | undefined;
            /**
                * <p>Your contact center allows outbound calls.</p>
                */
            OutboundCallsEnabled: boolean | undefined;
    }
    export namespace CreateInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateInstanceRequest) => any;
    }
    export interface CreateInstanceResponse {
            /**
                * <p>The identifier for the instance.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the instance.</p>
                */
            Arn?: string;
    }
    export namespace CreateInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateInstanceResponse) => any;
    }
    export enum IntegrationType {
            EVENT = "EVENT",
            PINPOINT_APP = "PINPOINT_APP",
            VOICE_ID = "VOICE_ID",
            WISDOM_ASSISTANT = "WISDOM_ASSISTANT",
            WISDOM_KNOWLEDGE_BASE = "WISDOM_KNOWLEDGE_BASE"
    }
    export enum SourceType {
            SALESFORCE = "SALESFORCE",
            ZENDESK = "ZENDESK"
    }
    export interface CreateIntegrationAssociationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of information to be ingested.</p>
                */
            IntegrationType: IntegrationType | string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the integration.</p>
                */
            IntegrationArn: string | undefined;
            /**
                * <p>The URL for the external application. This field is only required for the EVENT integration type.</p>
                */
            SourceApplicationUrl?: string;
            /**
                * <p>The name of the external application. This field is only required for the EVENT integration type.</p>
                */
            SourceApplicationName?: string;
            /**
                * <p>The type of the data source. This field is only required for the EVENT integration type.</p>
                */
            SourceType?: SourceType | string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateIntegrationAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateIntegrationAssociationRequest) => any;
    }
    export interface CreateIntegrationAssociationResponse {
            /**
                * <p>The identifier for the integration association.</p>
                */
            IntegrationAssociationId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the association.</p>
                */
            IntegrationAssociationArn?: string;
    }
    export namespace CreateIntegrationAssociationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateIntegrationAssociationResponse) => any;
    }
    /**
        * <p>The outbound caller ID name, number, and outbound whisper flow.</p>
        */
    export interface OutboundCallerConfig {
            /**
                * <p>The caller ID name.</p>
                */
            OutboundCallerIdName?: string;
            /**
                * <p>The caller ID number.</p>
                */
            OutboundCallerIdNumberId?: string;
            /**
                * <p>The outbound whisper flow to be used during an outbound call.</p>
                */
            OutboundFlowId?: string;
    }
    export namespace OutboundCallerConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OutboundCallerConfig) => any;
    }
    export interface CreateQueueRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the queue.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the queue.</p>
                */
            Description?: string;
            /**
                * <p>The outbound caller ID name, number, and outbound whisper flow.</p>
                */
            OutboundCallerConfig?: OutboundCallerConfig;
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId: string | undefined;
            /**
                * <p>The maximum number of contacts that can be in the queue before it is considered full.</p>
                */
            MaxContacts?: number;
            /**
                * <p>The quick connects available to agents who are working the queue.</p>
                */
            QuickConnectIds?: string[];
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateQueueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateQueueRequest) => any;
    }
    export interface CreateQueueResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the queue.</p>
                */
            QueueArn?: string;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId?: string;
    }
    export namespace CreateQueueResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateQueueResponse) => any;
    }
    /**
        * <p>Contains information about a phone number for a quick connect.</p>
        */
    export interface PhoneNumberQuickConnectConfig {
            /**
                * <p>The phone number in E.164 format.</p>
                */
            PhoneNumber: string | undefined;
    }
    export namespace PhoneNumberQuickConnectConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberQuickConnectConfig) => any;
    }
    /**
        * <p>Contains information about a queue for a quick connect. The contact flow must be of type
        *    Transfer to Queue.</p>
        */
    export interface QueueQuickConnectConfig {
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
    }
    export namespace QueueQuickConnectConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QueueQuickConnectConfig) => any;
    }
    export enum QuickConnectType {
            PHONE_NUMBER = "PHONE_NUMBER",
            QUEUE = "QUEUE",
            USER = "USER"
    }
    /**
        * <p>Contains information about the quick connect configuration settings for a user. The contact
        *    flow must be of type Transfer to Agent.</p>
        */
    export interface UserQuickConnectConfig {
            /**
                * <p>The identifier of the user.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
    }
    export namespace UserQuickConnectConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserQuickConnectConfig) => any;
    }
    /**
        * <p>Contains configuration settings for a quick connect.</p>
        */
    export interface QuickConnectConfig {
            /**
                * <p>The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are
                *    prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE). </p>
                */
            QuickConnectType: QuickConnectType | string | undefined;
            /**
                * <p>The user configuration. This is required only if QuickConnectType is USER.</p>
                */
            UserConfig?: UserQuickConnectConfig;
            /**
                * <p>The queue configuration. This is required only if QuickConnectType is QUEUE.</p>
                */
            QueueConfig?: QueueQuickConnectConfig;
            /**
                * <p>The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.</p>
                */
            PhoneConfig?: PhoneNumberQuickConnectConfig;
    }
    export namespace QuickConnectConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QuickConnectConfig) => any;
    }
    export interface CreateQuickConnectRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the quick connect.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the quick connect.</p>
                */
            Description?: string;
            /**
                * <p>Configuration settings for the quick connect.</p>
                */
            QuickConnectConfig: QuickConnectConfig | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateQuickConnectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateQuickConnectRequest) => any;
    }
    export interface CreateQuickConnectResponse {
            /**
                * <p>The Amazon Resource Name (ARN) for the quick connect. </p>
                */
            QuickConnectARN?: string;
            /**
                * <p>The identifier for the quick connect. </p>
                */
            QuickConnectId?: string;
    }
    export namespace CreateQuickConnectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateQuickConnectResponse) => any;
    }
    /**
        * <p>Contains information about which channels are supported, and how many contacts an agent can
        *    have on a channel simultaneously.</p>
        */
    export interface MediaConcurrency {
            /**
                * <p>The channels that agents can handle in the Contact Control Panel (CCP).</p>
                */
            Channel: Channel | string | undefined;
            /**
                * <p>The number of contacts an agent can have on a channel simultaneously.</p>
                *          <p>Valid Range for <code>VOICE</code>: Minimum value of 1. Maximum value of 1.</p>
                *          <p>Valid Range for <code>CHAT</code>: Minimum value of 1. Maximum value of 10.</p>
                *          <p>Valid Range for <code>TASK</code>: Minimum value of 1. Maximum value of 10.</p>
                */
            Concurrency: number | undefined;
    }
    export namespace MediaConcurrency {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MediaConcurrency) => any;
    }
    export interface CreateRoutingProfileRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the routing profile. Must not be more than 127 characters.</p>
                */
            Name: string | undefined;
            /**
                * <p>Description of the routing profile. Must not be more than 250 characters.</p>
                */
            Description: string | undefined;
            /**
                * <p>The default outbound queue for the routing profile.</p>
                */
            DefaultOutboundQueueId: string | undefined;
            /**
                * <p>The inbound queues associated with the routing profile. If no queue is added, the agent can
                *    make only outbound calls.</p>
                */
            QueueConfigs?: RoutingProfileQueueConfig[];
            /**
                * <p>The channels that agents can handle in the Contact Control Panel (CCP) for this routing
                *    profile.</p>
                */
            MediaConcurrencies: MediaConcurrency[] | undefined;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateRoutingProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoutingProfileRequest) => any;
    }
    export interface CreateRoutingProfileResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the routing profile.</p>
                */
            RoutingProfileArn?: string;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId?: string;
    }
    export namespace CreateRoutingProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoutingProfileResponse) => any;
    }
    export interface CreateSecurityProfileRequest {
            /**
                * <p>The name of the security profile.</p>
                */
            SecurityProfileName: string | undefined;
            /**
                * <p>The description of the security profile.</p>
                */
            Description?: string;
            /**
                * <p>Permissions assigned to the security profile.</p>
                */
            Permissions?: string[];
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSecurityProfileRequest) => any;
    }
    export interface CreateSecurityProfileResponse {
            /**
                * <p>The identifier for the security profle.</p>
                */
            SecurityProfileId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the security profile.</p>
                */
            SecurityProfileArn?: string;
    }
    export namespace CreateSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSecurityProfileResponse) => any;
    }
    /**
        * <p>The identifier of the task template field.</p>
        */
    export interface TaskTemplateFieldIdentifier {
            /**
                * <p>The name of the task template field.</p>
                */
            Name?: string;
    }
    export namespace TaskTemplateFieldIdentifier {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateFieldIdentifier) => any;
    }
    /**
        * <p>A field that is invisible to an agent.</p>
        */
    export interface InvisibleFieldInfo {
            /**
                * <p>Identifier of the invisible field.</p>
                */
            Id?: TaskTemplateFieldIdentifier;
    }
    export namespace InvisibleFieldInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InvisibleFieldInfo) => any;
    }
    /**
        * <p>Indicates a field that is read-only to an agent.</p>
        */
    export interface ReadOnlyFieldInfo {
            /**
                * <p>Identifier of the read-only field.</p>
                */
            Id?: TaskTemplateFieldIdentifier;
    }
    export namespace ReadOnlyFieldInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReadOnlyFieldInfo) => any;
    }
    /**
        * <p>Information about a required field.</p>
        */
    export interface RequiredFieldInfo {
            /**
                * <p>The unique identifier for the field.</p>
                */
            Id?: TaskTemplateFieldIdentifier;
    }
    export namespace RequiredFieldInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RequiredFieldInfo) => any;
    }
    /**
        * <p>Describes constraints that apply to the template fields.</p>
        */
    export interface TaskTemplateConstraints {
            /**
                * <p>Lists the fields that are required to be filled by agents.</p>
                */
            RequiredFields?: RequiredFieldInfo[];
            /**
                * <p>Lists the fields that are read-only to agents, and cannot be edited.</p>
                */
            ReadOnlyFields?: ReadOnlyFieldInfo[];
            /**
                * <p>Lists the fields that are invisible to agents.</p>
                */
            InvisibleFields?: InvisibleFieldInfo[];
    }
    export namespace TaskTemplateConstraints {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateConstraints) => any;
    }
    /**
        * <p>Describes a default field and its corresponding value.</p>
        */
    export interface TaskTemplateDefaultFieldValue {
            /**
                * <p>Identifier of a field. </p>
                */
            Id?: TaskTemplateFieldIdentifier;
            /**
                * <p>Default value for the field.</p>
                */
            DefaultValue?: string;
    }
    export namespace TaskTemplateDefaultFieldValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateDefaultFieldValue) => any;
    }
    /**
        * <p>Describes default values for fields on a template.</p>
        */
    export interface TaskTemplateDefaults {
            /**
                * <p>Default value for the field.</p>
                */
            DefaultFieldValues?: TaskTemplateDefaultFieldValue[];
    }
    export namespace TaskTemplateDefaults {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateDefaults) => any;
    }
    export enum TaskTemplateFieldType {
            BOOLEAN = "BOOLEAN",
            DATE_TIME = "DATE_TIME",
            DESCRIPTION = "DESCRIPTION",
            EMAIL = "EMAIL",
            NAME = "NAME",
            NUMBER = "NUMBER",
            QUICK_CONNECT = "QUICK_CONNECT",
            SCHEDULED_TIME = "SCHEDULED_TIME",
            SINGLE_SELECT = "SINGLE_SELECT",
            TEXT = "TEXT",
            TEXT_AREA = "TEXT_AREA",
            URL = "URL"
    }
    /**
        * <p>Describes a single task template field.</p>
        */
    export interface TaskTemplateField {
            /**
                * <p>The unique identifier for the field.</p>
                */
            Id: TaskTemplateFieldIdentifier | undefined;
            /**
                * <p>The description of the field.</p>
                */
            Description?: string;
            /**
                * <p>Indicates the type of field.</p>
                */
            Type?: TaskTemplateFieldType | string;
            /**
                * <p>A list of options for a single select field.</p>
                */
            SingleSelectOptions?: string[];
    }
    export namespace TaskTemplateField {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateField) => any;
    }
    export enum TaskTemplateStatus {
            ACTIVE = "ACTIVE",
            INACTIVE = "INACTIVE"
    }
    export interface CreateTaskTemplateRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the task template.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the task template.</p>
                */
            Description?: string;
            /**
                * <p>The identifier of the flow that runs by default when a task is created by referencing this template.</p>
                */
            ContactFlowId?: string;
            /**
                * <p>Constraints that are applicable to the fields listed.</p>
                */
            Constraints?: TaskTemplateConstraints;
            /**
                * <p>The default values for fields when a task is created by referencing this template.</p>
                */
            Defaults?: TaskTemplateDefaults;
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created. </p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>Fields that are part of the template.</p>
                */
            Fields: TaskTemplateField[] | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace CreateTaskTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTaskTemplateRequest) => any;
    }
    export interface CreateTaskTemplateResponse {
            /**
                * <p>The identifier of the task template resource.</p>
                */
            Id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the task template resource.</p>
                */
            Arn: string | undefined;
    }
    export namespace CreateTaskTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTaskTemplateResponse) => any;
    }
    export enum PropertyValidationExceptionReason {
            INVALID_FORMAT = "INVALID_FORMAT",
            NOT_SUPPORTED = "NOT_SUPPORTED",
            REFERENCED_RESOURCE_NOT_FOUND = "REFERENCED_RESOURCE_NOT_FOUND",
            REQUIRED_PROPERTY_MISSING = "REQUIRED_PROPERTY_MISSING",
            RESOURCE_NAME_ALREADY_EXISTS = "RESOURCE_NAME_ALREADY_EXISTS",
            UNIQUE_CONSTRAINT_VIOLATED = "UNIQUE_CONSTRAINT_VIOLATED"
    }
    /**
        * <p>Contains information about why a property is not valid.</p>
        */
    export interface PropertyValidationExceptionProperty {
            /**
                * <p>The full property path.</p>
                */
            PropertyPath: string | undefined;
            /**
                * <p>Why the property is not valid.</p>
                */
            Reason: PropertyValidationExceptionReason | string | undefined;
            /**
                * <p>A message describing why the property is not valid.</p>
                */
            Message: string | undefined;
    }
    export namespace PropertyValidationExceptionProperty {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PropertyValidationExceptionProperty) => any;
    }
    /**
        * <p></p>
        */
    export class PropertyValidationException extends __BaseException {
            readonly name: "PropertyValidationException";
            readonly $fault: "client";
            Message: string | undefined;
            PropertyList?: PropertyValidationExceptionProperty[];
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PropertyValidationException, __BaseException>);
    }
    export enum UseCaseType {
            CONNECT_CAMPAIGNS = "CONNECT_CAMPAIGNS",
            RULES_EVALUATION = "RULES_EVALUATION"
    }
    export interface CreateUseCaseRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the integration association.</p>
                */
            IntegrationAssociationId: string | undefined;
            /**
                * <p>The type of use case to associate to the integration association. Each integration
                *    association can have only one of each use case type.</p>
                */
            UseCaseType: UseCaseType | string | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateUseCaseRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUseCaseRequest) => any;
    }
    export interface CreateUseCaseResponse {
            /**
                * <p>The identifier of the use case.</p>
                */
            UseCaseId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the use case.</p>
                */
            UseCaseArn?: string;
    }
    export namespace CreateUseCaseResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUseCaseResponse) => any;
    }
    /**
        * <p>Contains information about the identity of a user.</p>
        */
    export interface UserIdentityInfo {
            /**
                * <p>The first name. This is required if you are using Amazon Connect or SAML for identity
                *    management.</p>
                */
            FirstName?: string;
            /**
                * <p>The last name. This is required if you are using Amazon Connect or SAML for identity
                *    management.</p>
                */
            LastName?: string;
            /**
                * <p>The email address. If you are using SAML for identity management and include this parameter,
                *    an error is returned.</p>
                */
            Email?: string;
    }
    export namespace UserIdentityInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserIdentityInfo) => any;
    }
    export enum PhoneType {
            DESK_PHONE = "DESK_PHONE",
            SOFT_PHONE = "SOFT_PHONE"
    }
    /**
        * <p>Contains information about the phone configuration settings for a user.</p>
        */
    export interface UserPhoneConfig {
            /**
                * <p>The phone type.</p>
                */
            PhoneType: PhoneType | string | undefined;
            /**
                * <p>The Auto accept setting.</p>
                */
            AutoAccept?: boolean;
            /**
                * <p>The After Call Work (ACW) timeout setting, in seconds.</p>
                */
            AfterContactWorkTimeLimit?: number;
            /**
                * <p>The phone number for the user's desk phone.</p>
                */
            DeskPhoneNumber?: string;
    }
    export namespace UserPhoneConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserPhoneConfig) => any;
    }
    export interface CreateUserRequest {
            /**
                * <p>The user name for the account. For instances not using SAML for identity management, the
                *    user name can include up to 20 characters. If you are using SAML for identity management, the
                *    user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.</p>
                */
            Username: string | undefined;
            /**
                * <p>The password for the user account. A password is required if you are using Amazon Connect for
                *    identity management. Otherwise, it is an error to include a password.</p>
                */
            Password?: string;
            /**
                * <p>The information about the identity of the user.</p>
                */
            IdentityInfo?: UserIdentityInfo;
            /**
                * <p>The phone settings for the user.</p>
                */
            PhoneConfig: UserPhoneConfig | undefined;
            /**
                * <p>The identifier of the user account in the directory used for identity management. If Amazon Connect
                *    cannot access the directory, you can specify this identifier to authenticate users. If you
                *    include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity
                *    information is used to authenticate users from your directory.</p>
                *          <p>This parameter is required if you are using an existing directory for identity management in
                *    Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for
                *    identity management and include this parameter, an error is returned.</p>
                */
            DirectoryUserId?: string;
            /**
                * <p>The identifier of the security profile for the user.</p>
                */
            SecurityProfileIds: string[] | undefined;
            /**
                * <p>The identifier of the routing profile for the user.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The identifier of the hierarchy group for the user.</p>
                */
            HierarchyGroupId?: string;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserRequest) => any;
    }
    export interface CreateUserResponse {
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the user account.</p>
                */
            UserArn?: string;
    }
    export namespace CreateUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserResponse) => any;
    }
    export interface CreateUserHierarchyGroupRequest {
            /**
                * <p>The name of the user hierarchy group. Must not be more than 100 characters.</p>
                */
            Name: string | undefined;
            /**
                * <p>The identifier for the parent hierarchy group. The user hierarchy is created at level one if
                *    the parent group ID is null.</p>
                */
            ParentGroupId?: string;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateUserHierarchyGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserHierarchyGroupRequest) => any;
    }
    export interface CreateUserHierarchyGroupResponse {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            HierarchyGroupId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the hierarchy group. </p>
                */
            HierarchyGroupArn?: string;
    }
    export namespace CreateUserHierarchyGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserHierarchyGroupResponse) => any;
    }
    export interface CreateVocabularyRequest {
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request. If a create request is received more than once with same client token,
                *    subsequent requests return the previous response without creating a vocabulary again.</p>
                */
            ClientToken?: string;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A unique name of the custom vocabulary.</p>
                */
            VocabularyName: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode: VocabularyLanguageCode | string | undefined;
            /**
                * <p>The content of the custom vocabulary in plain-text format with a table of values. Each row
                *    in the table represents a word or a phrase, described with <code>Phrase</code>, <code>IPA</code>,
                *     <code>SoundsLike</code>, and <code>DisplayAs</code> fields. Separate the fields with TAB
                *    characters. The size limit is 50KB. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table">Create a custom
                *     vocabulary using a table</a>.</p>
                */
            Content: string | undefined;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateVocabularyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVocabularyRequest) => any;
    }
    export enum VocabularyState {
            ACTIVE = "ACTIVE",
            CREATION_FAILED = "CREATION_FAILED",
            CREATION_IN_PROGRESS = "CREATION_IN_PROGRESS",
            DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS"
    }
    export interface CreateVocabularyResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the custom vocabulary.</p>
                */
            VocabularyArn: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            VocabularyId: string | undefined;
            /**
                * <p>The current state of the custom vocabulary.</p>
                */
            State: VocabularyState | string | undefined;
    }
    export namespace CreateVocabularyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVocabularyResponse) => any;
    }
    export interface DeleteContactFlowRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
    }
    export namespace DeleteContactFlowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactFlowRequest) => any;
    }
    export interface DeleteContactFlowModuleRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            ContactFlowModuleId: string | undefined;
    }
    export namespace DeleteContactFlowModuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactFlowModuleRequest) => any;
    }
    export interface DeleteContactFlowModuleResponse {
    }
    export namespace DeleteContactFlowModuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactFlowModuleResponse) => any;
    }
    export interface DeleteHoursOfOperationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId: string | undefined;
    }
    export namespace DeleteHoursOfOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteHoursOfOperationRequest) => any;
    }
    export interface DeleteInstanceRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DeleteInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteInstanceRequest) => any;
    }
    export interface DeleteIntegrationAssociationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the integration association.</p>
                */
            IntegrationAssociationId: string | undefined;
    }
    export namespace DeleteIntegrationAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteIntegrationAssociationRequest) => any;
    }
    export interface DeleteQuickConnectRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId: string | undefined;
    }
    export namespace DeleteQuickConnectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteQuickConnectRequest) => any;
    }
    export interface DeleteSecurityProfileRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the security profle.</p>
                */
            SecurityProfileId: string | undefined;
    }
    export namespace DeleteSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSecurityProfileRequest) => any;
    }
    export enum ResourceType {
            CONTACT = "CONTACT",
            CONTACT_FLOW = "CONTACT_FLOW",
            HIERARCHY_GROUP = "HIERARCHY_GROUP",
            HIERARCHY_LEVEL = "HIERARCHY_LEVEL",
            INSTANCE = "INSTANCE",
            PARTICIPANT = "PARTICIPANT",
            USER = "USER"
    }
    /**
        * <p>That resource is already in use. Please try another.</p>
        */
    export class ResourceInUseException extends __BaseException {
            readonly name: "ResourceInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The type of resource.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>The identifier for the resource.</p>
                */
            ResourceId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceInUseException, __BaseException>);
    }
    export interface DeleteTaskTemplateRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A unique identifier for the task template.</p>
                */
            TaskTemplateId: string | undefined;
    }
    export namespace DeleteTaskTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTaskTemplateRequest) => any;
    }
    export interface DeleteTaskTemplateResponse {
    }
    export namespace DeleteTaskTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTaskTemplateResponse) => any;
    }
    export interface DeleteUseCaseRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the integration association.</p>
                */
            IntegrationAssociationId: string | undefined;
            /**
                * <p>The identifier for the use case.</p>
                */
            UseCaseId: string | undefined;
    }
    export namespace DeleteUseCaseRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteUseCaseRequest) => any;
    }
    export interface DeleteUserRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the user.</p>
                */
            UserId: string | undefined;
    }
    export namespace DeleteUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteUserRequest) => any;
    }
    export interface DeleteUserHierarchyGroupRequest {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            HierarchyGroupId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DeleteUserHierarchyGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteUserHierarchyGroupRequest) => any;
    }
    export interface DeleteVocabularyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            VocabularyId: string | undefined;
    }
    export namespace DeleteVocabularyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVocabularyRequest) => any;
    }
    export interface DeleteVocabularyResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the custom vocabulary.</p>
                */
            VocabularyArn: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            VocabularyId: string | undefined;
            /**
                * <p>The current state of the custom vocabulary.</p>
                */
            State: VocabularyState | string | undefined;
    }
    export namespace DeleteVocabularyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVocabularyResponse) => any;
    }
    export interface DescribeAgentStatusRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the agent status.</p>
                */
            AgentStatusId: string | undefined;
    }
    export namespace DescribeAgentStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAgentStatusRequest) => any;
    }
    export interface DescribeAgentStatusResponse {
            /**
                * <p>The agent status.</p>
                */
            AgentStatus?: AgentStatus;
    }
    export namespace DescribeAgentStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAgentStatusResponse) => any;
    }
    export interface DescribeContactRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
    }
    export namespace DescribeContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactRequest) => any;
    }
    /**
        * <p>If this contact was queued, this contains information about the queue. </p>
        */
    export interface QueueInfo {
            /**
                * <p>The identifier of the agent who accepted the contact.</p>
                */
            Id?: string;
            /**
                * <p>The timestamp when the contact was added to the queue.</p>
                */
            EnqueueTimestamp?: Date;
    }
    export namespace QueueInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QueueInfo) => any;
    }
    /**
        * <p>Contains information about a contact.</p>
        */
    export interface Contact {
            /**
                * <p>The Amazon Resource Name (ARN) for the contact.</p>
                */
            Arn?: string;
            /**
                * <p>The identifier for the contact.</p>
                */
            Id?: string;
            /**
                * <p>If this contact is related to other contacts, this is the ID of the initial contact.</p>
                */
            InitialContactId?: string;
            /**
                * <p>If this contact is not the first contact, this is the ID of the previous contact.</p>
                */
            PreviousContactId?: string;
            /**
                * <p>Indicates how the contact was initiated.</p>
                */
            InitiationMethod?: ContactInitiationMethod | string;
            /**
                * <p>The name of the contact.</p>
                */
            Name?: string;
            /**
                * <p>The description of the contact.</p>
                */
            Description?: string;
            /**
                * <p>How the contact reached your contact center.</p>
                */
            Channel?: Channel | string;
            /**
                * <p>If this contact was queued, this contains information about the queue. </p>
                */
            QueueInfo?: QueueInfo;
            /**
                * <p>Information about the agent who accepted the contact.</p>
                */
            AgentInfo?: AgentInfo;
            /**
                * <p>The date and time this contact was initiated, in UTC time. For <code>INBOUND</code>, this is
                *    when the contact arrived. For <code>OUTBOUND</code>, this is when the agent began dialing. For
                *     <code>CALLBACK</code>, this is when the callback contact was created. For <code>TRANSFER</code>
                *    and <code>QUEUE_TRANSFER</code>, this is when the transfer was initiated. For <code>API</code>,
                *    this is when the request arrived.</p>
                */
            InitiationTimestamp?: Date;
            /**
                * <p>The timestamp when the customer endpoint disconnected from Amazon Connect.</p>
                */
            DisconnectTimestamp?: Date;
            /**
                * <p>The timestamp when contact was last updated.</p>
                */
            LastUpdateTimestamp?: Date;
            /**
                * <p>The timestamp, in Unix epoch time format, at which to start running the inbound flow.
                *   </p>
                */
            ScheduledTimestamp?: Date;
    }
    export namespace Contact {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Contact) => any;
    }
    export interface DescribeContactResponse {
            /**
                * <p>Information about the contact.</p>
                */
            Contact?: Contact;
    }
    export namespace DescribeContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactResponse) => any;
    }
    /**
        * <p>The contact flow has not been published.</p>
        */
    export class ContactFlowNotPublishedException extends __BaseException {
            readonly name: "ContactFlowNotPublishedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ContactFlowNotPublishedException, __BaseException>);
    }
    export interface DescribeContactFlowRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
    }
    export namespace DescribeContactFlowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactFlowRequest) => any;
    }
    export enum ContactFlowState {
            ACTIVE = "ACTIVE",
            ARCHIVED = "ARCHIVED"
    }
    /**
        * <p>Contains information about a contact flow.</p>
        */
    export interface ContactFlow {
            /**
                * <p>The Amazon Resource Name (ARN) of the contact flow.</p>
                */
            Arn?: string;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            Id?: string;
            /**
                * <p>The name of the contact flow.</p>
                */
            Name?: string;
            /**
                * <p>The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator
                *    Guide</i>.</p>
                */
            Type?: ContactFlowType | string;
            /**
                * <p>The type of contact flow.</p>
                */
            State?: ContactFlowState | string;
            /**
                * <p>The description of the contact flow.</p>
                */
            Description?: string;
            /**
                * <p>The content of the contact flow.</p>
                */
            Content?: string;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ContactFlow {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactFlow) => any;
    }
    export interface DescribeContactFlowResponse {
            /**
                * <p>Information about the contact flow.</p>
                */
            ContactFlow?: ContactFlow;
    }
    export namespace DescribeContactFlowResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactFlowResponse) => any;
    }
    export interface DescribeContactFlowModuleRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            ContactFlowModuleId: string | undefined;
    }
    export namespace DescribeContactFlowModuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactFlowModuleRequest) => any;
    }
    export enum ContactFlowModuleState {
            ACTIVE = "ACTIVE",
            ARCHIVED = "ARCHIVED"
    }
    export enum ContactFlowModuleStatus {
            PUBLISHED = "PUBLISHED",
            SAVED = "SAVED"
    }
    /**
        * <p>Contains information about a contact flow module.</p>
        */
    export interface ContactFlowModule {
            /**
                * <p>The Amazon Resource Name (ARN).</p>
                */
            Arn?: string;
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            Id?: string;
            /**
                * <p>The name of the contact flow module.</p>
                */
            Name?: string;
            /**
                * <p>The content of the contact flow module.</p>
                */
            Content?: string;
            /**
                * <p>The description of the contact flow module.</p>
                */
            Description?: string;
            /**
                * <p>The type of contact flow module.</p>
                */
            State?: ContactFlowModuleState | string;
            /**
                * <p>The status of the contact flow module.</p>
                */
            Status?: ContactFlowModuleStatus | string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ContactFlowModule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactFlowModule) => any;
    }
    export interface DescribeContactFlowModuleResponse {
            /**
                * <p>Information about the contact flow module.</p>
                */
            ContactFlowModule?: ContactFlowModule;
    }
    export namespace DescribeContactFlowModuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeContactFlowModuleResponse) => any;
    }
    export interface DescribeHoursOfOperationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId: string | undefined;
    }
    export namespace DescribeHoursOfOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeHoursOfOperationRequest) => any;
    }
    /**
        * <p>Information about of the hours of operation.</p>
        */
    export interface HoursOfOperation {
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the hours of operation.</p>
                */
            HoursOfOperationArn?: string;
            /**
                * <p>The name for the hours of operation.</p>
                */
            Name?: string;
            /**
                * <p>The description for the hours of operation.</p>
                */
            Description?: string;
            /**
                * <p>The time zone for the hours of operation.</p>
                */
            TimeZone?: string;
            /**
                * <p>Configuration information for the hours of operation.</p>
                */
            Config?: HoursOfOperationConfig[];
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace HoursOfOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HoursOfOperation) => any;
    }
    export interface DescribeHoursOfOperationResponse {
            /**
                * <p>The hours of operation.</p>
                */
            HoursOfOperation?: HoursOfOperation;
    }
    export namespace DescribeHoursOfOperationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeHoursOfOperationResponse) => any;
    }
    export interface DescribeInstanceRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DescribeInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceRequest) => any;
    }
    export enum InstanceStatus {
            ACTIVE = "ACTIVE",
            CREATION_FAILED = "CREATION_FAILED",
            CREATION_IN_PROGRESS = "CREATION_IN_PROGRESS"
    }
    /**
        * <p>Relevant
        *    details why the instance was not successfully created.</p>
        */
    export interface InstanceStatusReason {
            /**
                * <p>The message.</p>
                */
            Message?: string;
    }
    export namespace InstanceStatusReason {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InstanceStatusReason) => any;
    }
    /**
        * <p>The Amazon Connect instance.</p>
        */
    export interface Instance {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the instance.</p>
                */
            Arn?: string;
            /**
                * <p>The identity management type.</p>
                */
            IdentityManagementType?: DirectoryType | string;
            /**
                * <p>The alias of instance.</p>
                */
            InstanceAlias?: string;
            /**
                * <p>When the instance was created.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The service role of the instance.</p>
                */
            ServiceRole?: string;
            /**
                * <p>The state of the instance.</p>
                */
            InstanceStatus?: InstanceStatus | string;
            /**
                * <p>Relevant
                *    details why the instance was not successfully created. </p>
                */
            StatusReason?: InstanceStatusReason;
            /**
                * <p>Whether inbound calls are enabled.</p>
                */
            InboundCallsEnabled?: boolean;
            /**
                * <p>Whether outbound calls are enabled.</p>
                */
            OutboundCallsEnabled?: boolean;
    }
    export namespace Instance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Instance) => any;
    }
    export interface DescribeInstanceResponse {
            /**
                * <p>The name of the instance.</p>
                */
            Instance?: Instance;
    }
    export namespace DescribeInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceResponse) => any;
    }
    export enum InstanceAttributeType {
            AUTO_RESOLVE_BEST_VOICES = "AUTO_RESOLVE_BEST_VOICES",
            CONTACTFLOW_LOGS = "CONTACTFLOW_LOGS",
            CONTACT_LENS = "CONTACT_LENS",
            EARLY_MEDIA = "EARLY_MEDIA",
            HIGH_VOLUME_OUTBOUND = "HIGH_VOLUME_OUTBOUND",
            INBOUND_CALLS = "INBOUND_CALLS",
            MULTI_PARTY_CONFERENCE = "MULTI_PARTY_CONFERENCE",
            OUTBOUND_CALLS = "OUTBOUND_CALLS",
            USE_CUSTOM_TTS_VOICES = "USE_CUSTOM_TTS_VOICES"
    }
    export interface DescribeInstanceAttributeRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of attribute.</p>
                */
            AttributeType: InstanceAttributeType | string | undefined;
    }
    export namespace DescribeInstanceAttributeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceAttributeRequest) => any;
    }
    /**
        * <p>A toggle for an individual feature at the instance level.</p>
        */
    export interface Attribute {
            /**
                * <p>The type of attribute.</p>
                */
            AttributeType?: InstanceAttributeType | string;
            /**
                * <p>The value of the attribute.</p>
                */
            Value?: string;
    }
    export namespace Attribute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attribute) => any;
    }
    export interface DescribeInstanceAttributeResponse {
            /**
                * <p>The
                *    type
                *    of attribute.</p>
                */
            Attribute?: Attribute;
    }
    export namespace DescribeInstanceAttributeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceAttributeResponse) => any;
    }
    export interface DescribeInstanceStorageConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId: string | undefined;
            /**
                * <p>A valid resource type.</p>
                */
            ResourceType: InstanceStorageResourceType | string | undefined;
    }
    export namespace DescribeInstanceStorageConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceStorageConfigRequest) => any;
    }
    export interface DescribeInstanceStorageConfigResponse {
            /**
                * <p>A valid storage type.</p>
                */
            StorageConfig?: InstanceStorageConfig;
    }
    export namespace DescribeInstanceStorageConfigResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInstanceStorageConfigResponse) => any;
    }
    export interface DescribePhoneNumberRequest {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId: string | undefined;
    }
    export namespace DescribePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePhoneNumberRequest) => any;
    }
    export enum PhoneNumberCountryCode {
            AD = "AD",
            AE = "AE",
            AF = "AF",
            AG = "AG",
            AI = "AI",
            AL = "AL",
            AM = "AM",
            AN = "AN",
            AO = "AO",
            AQ = "AQ",
            AR = "AR",
            AS = "AS",
            AT = "AT",
            AU = "AU",
            AW = "AW",
            AZ = "AZ",
            BA = "BA",
            BB = "BB",
            BD = "BD",
            BE = "BE",
            BF = "BF",
            BG = "BG",
            BH = "BH",
            BI = "BI",
            BJ = "BJ",
            BL = "BL",
            BM = "BM",
            BN = "BN",
            BO = "BO",
            BR = "BR",
            BS = "BS",
            BT = "BT",
            BW = "BW",
            BY = "BY",
            BZ = "BZ",
            CA = "CA",
            CC = "CC",
            CD = "CD",
            CF = "CF",
            CG = "CG",
            CH = "CH",
            CI = "CI",
            CK = "CK",
            CL = "CL",
            CM = "CM",
            CN = "CN",
            CO = "CO",
            CR = "CR",
            CU = "CU",
            CV = "CV",
            CW = "CW",
            CX = "CX",
            CY = "CY",
            CZ = "CZ",
            DE = "DE",
            DJ = "DJ",
            DK = "DK",
            DM = "DM",
            DO = "DO",
            DZ = "DZ",
            EC = "EC",
            EE = "EE",
            EG = "EG",
            EH = "EH",
            ER = "ER",
            ES = "ES",
            ET = "ET",
            FI = "FI",
            FJ = "FJ",
            FK = "FK",
            FM = "FM",
            FO = "FO",
            FR = "FR",
            GA = "GA",
            GB = "GB",
            GD = "GD",
            GE = "GE",
            GG = "GG",
            GH = "GH",
            GI = "GI",
            GL = "GL",
            GM = "GM",
            GN = "GN",
            GQ = "GQ",
            GR = "GR",
            GT = "GT",
            GU = "GU",
            GW = "GW",
            GY = "GY",
            HK = "HK",
            HN = "HN",
            HR = "HR",
            HT = "HT",
            HU = "HU",
            ID = "ID",
            IE = "IE",
            IL = "IL",
            IM = "IM",
            IN = "IN",
            IO = "IO",
            IQ = "IQ",
            IR = "IR",
            IS = "IS",
            IT = "IT",
            JE = "JE",
            JM = "JM",
            JO = "JO",
            JP = "JP",
            KE = "KE",
            KG = "KG",
            KH = "KH",
            KI = "KI",
            KM = "KM",
            KN = "KN",
            KP = "KP",
            KR = "KR",
            KW = "KW",
            KY = "KY",
            KZ = "KZ",
            LA = "LA",
            LB = "LB",
            LC = "LC",
            LI = "LI",
            LK = "LK",
            LR = "LR",
            LS = "LS",
            LT = "LT",
            LU = "LU",
            LV = "LV",
            LY = "LY",
            MA = "MA",
            MC = "MC",
            MD = "MD",
            ME = "ME",
            MF = "MF",
            MG = "MG",
            MH = "MH",
            MK = "MK",
            ML = "ML",
            MM = "MM",
            MN = "MN",
            MO = "MO",
            MP = "MP",
            MR = "MR",
            MS = "MS",
            MT = "MT",
            MU = "MU",
            MV = "MV",
            MW = "MW",
            MX = "MX",
            MY = "MY",
            MZ = "MZ",
            NA = "NA",
            NC = "NC",
            NE = "NE",
            NG = "NG",
            NI = "NI",
            NL = "NL",
            NO = "NO",
            NP = "NP",
            NR = "NR",
            NU = "NU",
            NZ = "NZ",
            OM = "OM",
            PA = "PA",
            PE = "PE",
            PF = "PF",
            PG = "PG",
            PH = "PH",
            PK = "PK",
            PL = "PL",
            PM = "PM",
            PN = "PN",
            PR = "PR",
            PT = "PT",
            PW = "PW",
            PY = "PY",
            QA = "QA",
            RE = "RE",
            RO = "RO",
            RS = "RS",
            RU = "RU",
            RW = "RW",
            SA = "SA",
            SB = "SB",
            SC = "SC",
            SD = "SD",
            SE = "SE",
            SG = "SG",
            SH = "SH",
            SI = "SI",
            SJ = "SJ",
            SK = "SK",
            SL = "SL",
            SM = "SM",
            SN = "SN",
            SO = "SO",
            SR = "SR",
            ST = "ST",
            SV = "SV",
            SX = "SX",
            SY = "SY",
            SZ = "SZ",
            TC = "TC",
            TD = "TD",
            TG = "TG",
            TH = "TH",
            TJ = "TJ",
            TK = "TK",
            TL = "TL",
            TM = "TM",
            TN = "TN",
            TO = "TO",
            TR = "TR",
            TT = "TT",
            TV = "TV",
            TW = "TW",
            TZ = "TZ",
            UA = "UA",
            UG = "UG",
            US = "US",
            UY = "UY",
            UZ = "UZ",
            VA = "VA",
            VC = "VC",
            VE = "VE",
            VG = "VG",
            VI = "VI",
            VN = "VN",
            VU = "VU",
            WF = "WF",
            WS = "WS",
            YE = "YE",
            YT = "YT",
            ZA = "ZA",
            ZM = "ZM",
            ZW = "ZW"
    }
    export enum PhoneNumberWorkflowStatus {
            Claimed = "CLAIMED",
            Failed = "FAILED",
            InProgress = "IN_PROGRESS"
    }
    /**
        * <p>The status of the phone number.</p>
        */
    export interface PhoneNumberStatus {
            /**
                * <p>The status.</p>
                */
            Status?: PhoneNumberWorkflowStatus | string;
            /**
                * <p>The status message.</p>
                */
            Message?: string;
    }
    export namespace PhoneNumberStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberStatus) => any;
    }
    export enum PhoneNumberType {
            DID = "DID",
            TOLL_FREE = "TOLL_FREE"
    }
    /**
        * <p>Information about a phone number that has been claimed to your Amazon Connect instance.</p>
        */
    export interface ClaimedPhoneNumberSummary {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the phone number.</p>
                */
            PhoneNumberArn?: string;
            /**
                * <p>The phone number. Phone numbers are formatted <code>[+] [country code] [subscriber number including area code]</code>.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCode?: PhoneNumberCountryCode | string;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberType?: PhoneNumberType | string;
            /**
                * <p>The description of the phone number.</p>
                */
            PhoneNumberDescription?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.</p>
                */
            TargetArn?: string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The status of the phone number.</p>
                */
            PhoneNumberStatus?: PhoneNumberStatus;
    }
    export namespace ClaimedPhoneNumberSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ClaimedPhoneNumberSummary) => any;
    }
    export interface DescribePhoneNumberResponse {
            /**
                * <p>Information about a phone number that's been claimed to your Amazon Connect instance.</p>
                */
            ClaimedPhoneNumberSummary?: ClaimedPhoneNumberSummary;
    }
    export namespace DescribePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePhoneNumberResponse) => any;
    }
    export interface DescribeQueueRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
    }
    export namespace DescribeQueueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeQueueRequest) => any;
    }
    export enum QueueStatus {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    /**
        * <p>Contains information about a queue.</p>
        */
    export interface Queue {
            /**
                * <p>The name of the queue.</p>
                */
            Name?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the queue.</p>
                */
            QueueArn?: string;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId?: string;
            /**
                * <p>The description of the queue.</p>
                */
            Description?: string;
            /**
                * <p>The outbound caller ID name, number, and outbound whisper flow.</p>
                */
            OutboundCallerConfig?: OutboundCallerConfig;
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId?: string;
            /**
                * <p>The maximum number of contacts that can be in the queue before it is considered full.</p>
                */
            MaxContacts?: number;
            /**
                * <p>The status of the queue.</p>
                */
            Status?: QueueStatus | string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace Queue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Queue) => any;
    }
    export interface DescribeQueueResponse {
            /**
                * <p>The name of the queue.</p>
                */
            Queue?: Queue;
    }
    export namespace DescribeQueueResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeQueueResponse) => any;
    }
    export interface DescribeQuickConnectRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId: string | undefined;
    }
    export namespace DescribeQuickConnectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeQuickConnectRequest) => any;
    }
    /**
        * <p>Contains information about a quick connect.</p>
        */
    export interface QuickConnect {
            /**
                * <p>The Amazon Resource Name (ARN) of the quick connect.</p>
                */
            QuickConnectARN?: string;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId?: string;
            /**
                * <p>The name of the quick connect.</p>
                */
            Name?: string;
            /**
                * <p>The description.</p>
                */
            Description?: string;
            /**
                * <p>Contains information about the quick connect.</p>
                */
            QuickConnectConfig?: QuickConnectConfig;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace QuickConnect {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QuickConnect) => any;
    }
    export interface DescribeQuickConnectResponse {
            /**
                * <p>Information about the quick connect.</p>
                */
            QuickConnect?: QuickConnect;
    }
    export namespace DescribeQuickConnectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeQuickConnectResponse) => any;
    }
    export interface DescribeRoutingProfileRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
    }
    export namespace DescribeRoutingProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRoutingProfileRequest) => any;
    }
    /**
        * <p>Contains information about a routing profile.</p>
        */
    export interface RoutingProfile {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId?: string;
            /**
                * <p>The name of the routing profile.</p>
                */
            Name?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the routing profile.</p>
                */
            RoutingProfileArn?: string;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId?: string;
            /**
                * <p>The description of the routing profile.</p>
                */
            Description?: string;
            /**
                * <p>The channels agents can handle in the Contact Control Panel (CCP) for this routing
                *    profile.</p>
                */
            MediaConcurrencies?: MediaConcurrency[];
            /**
                * <p>The identifier of the default outbound queue for this routing profile.</p>
                */
            DefaultOutboundQueueId?: string;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace RoutingProfile {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfile) => any;
    }
    export interface DescribeRoutingProfileResponse {
            /**
                * <p>The routing profile.</p>
                */
            RoutingProfile?: RoutingProfile;
    }
    export namespace DescribeRoutingProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRoutingProfileResponse) => any;
    }
    export interface DescribeSecurityProfileRequest {
            /**
                * <p>The identifier for the security profle.</p>
                */
            SecurityProfileId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DescribeSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSecurityProfileRequest) => any;
    }
    /**
        * <p>Contains information about a security profile.</p>
        */
    export interface SecurityProfile {
            /**
                * <p>The identifier for the security profile.</p>
                */
            Id?: string;
            /**
                * <p>The organization resource identifier for the security profile.</p>
                */
            OrganizationResourceId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the secruity profile.</p>
                */
            Arn?: string;
            /**
                * <p>The name for the security profile.</p>
                */
            SecurityProfileName?: string;
            /**
                * <p>The description of the security profile.</p>
                */
            Description?: string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace SecurityProfile {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityProfile) => any;
    }
    export interface DescribeSecurityProfileResponse {
            /**
                * <p>The security profile.</p>
                */
            SecurityProfile?: SecurityProfile;
    }
    export namespace DescribeSecurityProfileResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSecurityProfileResponse) => any;
    }
    export interface DescribeUserRequest {
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DescribeUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserRequest) => any;
    }
    /**
        * <p>Contains information about a user account for a Amazon Connect instance.</p>
        */
    export interface User {
            /**
                * <p>The identifier of the user account.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the user account.</p>
                */
            Arn?: string;
            /**
                * <p>The user name assigned to the user account.</p>
                */
            Username?: string;
            /**
                * <p>Information about the user identity.</p>
                */
            IdentityInfo?: UserIdentityInfo;
            /**
                * <p>Information about the phone configuration for the user.</p>
                */
            PhoneConfig?: UserPhoneConfig;
            /**
                * <p>The identifier of the user account in the directory used for identity management.</p>
                */
            DirectoryUserId?: string;
            /**
                * <p>The identifiers of the security profiles for the user.</p>
                */
            SecurityProfileIds?: string[];
            /**
                * <p>The identifier of the routing profile for the user.</p>
                */
            RoutingProfileId?: string;
            /**
                * <p>The identifier of the hierarchy group for the user.</p>
                */
            HierarchyGroupId?: string;
            /**
                * <p>The
                *    tags.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace User {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: User) => any;
    }
    export interface DescribeUserResponse {
            /**
                * <p>Information about the user account and configuration settings.</p>
                */
            User?: User;
    }
    export namespace DescribeUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserResponse) => any;
    }
    export interface DescribeUserHierarchyGroupRequest {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            HierarchyGroupId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DescribeUserHierarchyGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserHierarchyGroupRequest) => any;
    }
    /**
        * <p>Contains summary information about a hierarchy group.</p>
        */
    export interface HierarchyGroupSummary {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the hierarchy group.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the hierarchy group.</p>
                */
            Name?: string;
    }
    export namespace HierarchyGroupSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyGroupSummary) => any;
    }
    /**
        * <p>Contains information about the levels of a hierarchy group.</p>
        */
    export interface HierarchyPath {
            /**
                * <p>Information about level one.</p>
                */
            LevelOne?: HierarchyGroupSummary;
            /**
                * <p>Information about level two.</p>
                */
            LevelTwo?: HierarchyGroupSummary;
            /**
                * <p>Information about level three.</p>
                */
            LevelThree?: HierarchyGroupSummary;
            /**
                * <p>Information about level four.</p>
                */
            LevelFour?: HierarchyGroupSummary;
            /**
                * <p>Information about level five.</p>
                */
            LevelFive?: HierarchyGroupSummary;
    }
    export namespace HierarchyPath {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyPath) => any;
    }
    /**
        * <p>Contains information about a hierarchy group.</p>
        */
    export interface HierarchyGroup {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the hierarchy group.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the hierarchy group.</p>
                */
            Name?: string;
            /**
                * <p>The identifier of the level in the hierarchy group.</p>
                */
            LevelId?: string;
            /**
                * <p>Information about the levels in the hierarchy group.</p>
                */
            HierarchyPath?: HierarchyPath;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace HierarchyGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyGroup) => any;
    }
    export interface DescribeUserHierarchyGroupResponse {
            /**
                * <p>Information about the hierarchy group.</p>
                */
            HierarchyGroup?: HierarchyGroup;
    }
    export namespace DescribeUserHierarchyGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserHierarchyGroupResponse) => any;
    }
    export interface DescribeUserHierarchyStructureRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DescribeUserHierarchyStructureRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserHierarchyStructureRequest) => any;
    }
    /**
        * <p>Contains information about a hierarchy level.</p>
        */
    export interface HierarchyLevel {
            /**
                * <p>The identifier of the hierarchy level.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the hierarchy level.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the hierarchy level.</p>
                */
            Name?: string;
    }
    export namespace HierarchyLevel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyLevel) => any;
    }
    /**
        * <p>Contains information about a hierarchy structure.</p>
        */
    export interface HierarchyStructure {
            /**
                * <p>Information about level one.</p>
                */
            LevelOne?: HierarchyLevel;
            /**
                * <p>Information about level two.</p>
                */
            LevelTwo?: HierarchyLevel;
            /**
                * <p>Information about level three.</p>
                */
            LevelThree?: HierarchyLevel;
            /**
                * <p>Information about level four.</p>
                */
            LevelFour?: HierarchyLevel;
            /**
                * <p>Information about level five.</p>
                */
            LevelFive?: HierarchyLevel;
    }
    export namespace HierarchyStructure {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyStructure) => any;
    }
    export interface DescribeUserHierarchyStructureResponse {
            /**
                * <p>Information about the hierarchy structure.</p>
                */
            HierarchyStructure?: HierarchyStructure;
    }
    export namespace DescribeUserHierarchyStructureResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserHierarchyStructureResponse) => any;
    }
    export interface DescribeVocabularyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            VocabularyId: string | undefined;
    }
    export namespace DescribeVocabularyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVocabularyRequest) => any;
    }
    /**
        * <p>Contains information about a custom vocabulary.</p>
        */
    export interface Vocabulary {
            /**
                * <p>A unique name of the custom vocabulary.</p>
                */
            Name: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            Id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the custom vocabulary.</p>
                */
            Arn: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode: VocabularyLanguageCode | string | undefined;
            /**
                * <p>The current state of the custom vocabulary.</p>
                */
            State: VocabularyState | string | undefined;
            /**
                * <p>The timestamp when the custom vocabulary was last modified.</p>
                */
            LastModifiedTime: Date | undefined;
            /**
                * <p>The reason why the custom vocabulary was not created.</p>
                */
            FailureReason?: string;
            /**
                * <p>The content of the custom vocabulary in plain-text format with a table of values. Each row
                *    in the table represents a word or a phrase, described with <code>Phrase</code>, <code>IPA</code>,
                *     <code>SoundsLike</code>, and <code>DisplayAs</code> fields. Separate the fields with TAB
                *    characters. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table">Create a custom
                *     vocabulary using a table</a>.</p>
                */
            Content?: string;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace Vocabulary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Vocabulary) => any;
    }
    export interface DescribeVocabularyResponse {
            /**
                * <p>A list of specific words that you want Contact Lens for Amazon Connect to recognize in your audio input. They are
                *    generally domain-specific words and phrases, words that Contact Lens is not recognizing, or proper
                *    nouns.</p>
                */
            Vocabulary: Vocabulary | undefined;
    }
    export namespace DescribeVocabularyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeVocabularyResponse) => any;
    }
    export interface DisassociateApprovedOriginRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The domain URL of the integrated application.</p>
                */
            Origin: string | undefined;
    }
    export namespace DisassociateApprovedOriginRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateApprovedOriginRequest) => any;
    }
    export interface DisassociateBotRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>Configuration information of an Amazon Lex bot.</p>
                */
            LexBot?: LexBot;
            /**
                * <p>The Amazon Lex V2 bot to disassociate from the instance.</p>
                */
            LexV2Bot?: LexV2Bot;
    }
    export namespace DisassociateBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateBotRequest) => any;
    }
    export interface DisassociateInstanceStorageConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId: string | undefined;
            /**
                * <p>A valid resource type.</p>
                */
            ResourceType: InstanceStorageResourceType | string | undefined;
    }
    export namespace DisassociateInstanceStorageConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateInstanceStorageConfigRequest) => any;
    }
    export interface DisassociateLambdaFunctionRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance..</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the Lambda function being disassociated.</p>
                */
            FunctionArn: string | undefined;
    }
    export namespace DisassociateLambdaFunctionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateLambdaFunctionRequest) => any;
    }
    export interface DisassociateLexBotRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the Amazon Lex bot. Maximum character limit of 50.</p>
                */
            BotName: string | undefined;
            /**
                * <p>The Region in which the Amazon Lex bot has been created.</p>
                */
            LexRegion: string | undefined;
    }
    export namespace DisassociateLexBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateLexBotRequest) => any;
    }
    export interface DisassociatePhoneNumberContactFlowRequest {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace DisassociatePhoneNumberContactFlowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumberContactFlowRequest) => any;
    }
    export interface DisassociateQueueQuickConnectsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The quick connects to disassociate from the queue.</p>
                */
            QuickConnectIds: string[] | undefined;
    }
    export namespace DisassociateQueueQuickConnectsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateQueueQuickConnectsRequest) => any;
    }
    export interface DisassociateRoutingProfileQueuesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The queues to disassociate from this routing profile.</p>
                */
            QueueReferences: RoutingProfileQueueReference[] | undefined;
    }
    export namespace DisassociateRoutingProfileQueuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateRoutingProfileQueuesRequest) => any;
    }
    export interface DisassociateSecurityKeyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId: string | undefined;
    }
    export namespace DisassociateSecurityKeyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateSecurityKeyRequest) => any;
    }
    export interface GetContactAttributesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the initial contact.</p>
                */
            InitialContactId: string | undefined;
    }
    export namespace GetContactAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactAttributesRequest) => any;
    }
    export interface GetContactAttributesResponse {
            /**
                * <p>Information about the attributes.</p>
                */
            Attributes?: Record<string, string>;
    }
    export namespace GetContactAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactAttributesResponse) => any;
    }
    export enum CurrentMetricName {
            AGENTS_AFTER_CONTACT_WORK = "AGENTS_AFTER_CONTACT_WORK",
            AGENTS_AVAILABLE = "AGENTS_AVAILABLE",
            AGENTS_ERROR = "AGENTS_ERROR",
            AGENTS_NON_PRODUCTIVE = "AGENTS_NON_PRODUCTIVE",
            AGENTS_ONLINE = "AGENTS_ONLINE",
            AGENTS_ON_CALL = "AGENTS_ON_CALL",
            AGENTS_ON_CONTACT = "AGENTS_ON_CONTACT",
            AGENTS_STAFFED = "AGENTS_STAFFED",
            CONTACTS_IN_QUEUE = "CONTACTS_IN_QUEUE",
            CONTACTS_SCHEDULED = "CONTACTS_SCHEDULED",
            OLDEST_CONTACT_AGE = "OLDEST_CONTACT_AGE",
            SLOTS_ACTIVE = "SLOTS_ACTIVE",
            SLOTS_AVAILABLE = "SLOTS_AVAILABLE"
    }
    export enum Unit {
            COUNT = "COUNT",
            PERCENT = "PERCENT",
            SECONDS = "SECONDS"
    }
    /**
        * <p>Contains information about a real-time metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator
        *    Guide</i>.</p>
        */
    export interface CurrentMetric {
            /**
                * <p>The name of the metric.</p>
                */
            Name?: CurrentMetricName | string;
            /**
                * <p>The unit for the metric.</p>
                */
            Unit?: Unit | string;
    }
    export namespace CurrentMetric {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CurrentMetric) => any;
    }
    /**
        * <p>Contains the filter to apply when retrieving metrics.</p>
        */
    export interface Filters {
            /**
                * <p>The queues to use to filter the metrics. You should specify at least one queue, and can
                *    specify up to 100 queues per request. The <code>GetCurrentMetricsData</code> API in particular
                *    requires a queue when you include a <code>Filter</code> in your request. </p>
                */
            Queues?: string[];
            /**
                * <p>The channel to use to filter the metrics.</p>
                */
            Channels?: (Channel | string)[];
    }
    export namespace Filters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Filters) => any;
    }
    export enum Grouping {
            CHANNEL = "CHANNEL",
            QUEUE = "QUEUE"
    }
    export interface GetCurrentMetricDataRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is
                *    retrieved only for the resources associated with the queues or channels included in the filter.
                *    You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.</p>
                */
            Filters: Filters | undefined;
            /**
                * <p>The grouping applied to the metrics returned. For example, when grouped by
                *     <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all
                *    queues. If you group by <code>CHANNEL</code>, you should include a Channels filter.
                *    VOICE, CHAT, and TASK channels are supported.</p>
                *          <p>If no <code>Grouping</code> is included in the request, a summary of metrics is
                *    returned.</p>
                */
            Groupings?: (Grouping | string)[];
            /**
                * <p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics
                *    are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics
                *     Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                *          <dl>
                *             <dt>AGENTS_AFTER_CONTACT_WORK</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a>
                *                </p>
                *
                *             </dd>
                *             <dt>AGENTS_AVAILABLE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_ERROR</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_NON_PRODUCTIVE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_ON_CALL</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On
                *        contact</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_ON_CONTACT</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On
                *        contact</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_ONLINE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a>
                *                </p>
                *             </dd>
                *             <dt>AGENTS_STAFFED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a>
                *                </p>
                *             </dd>
                *             <dt>CONTACTS_IN_QUEUE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In
                *        queue</a>
                *                </p>
                *             </dd>
                *             <dt>CONTACTS_SCHEDULED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a>
                *                </p>
                *             </dd>
                *             <dt>OLDEST_CONTACT_AGE</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>When you use groupings, Unit says SECONDS and the Value is returned in SECONDS. </p>
                *                <p>When you do not use groupings, Unit says SECONDS but the Value is returned in
                *       MILLISECONDS. For example, if you get a response like this:</p>
                *                <p>
                *                   <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0
                *       </code>}</p>
                *                <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p>
                *
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a>
                *                </p>
                *             </dd>
                *             <dt>SLOTS_ACTIVE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a>
                *                </p>
                *             </dd>
                *             <dt>SLOTS_AVAILABLE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a>
                *                </p>
                *             </dd>
                *          </dl>
                */
            CurrentMetrics: CurrentMetric[] | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                *          <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use
                *    the token must use the same request parameters as the request that generated the token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace GetCurrentMetricDataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCurrentMetricDataRequest) => any;
    }
    /**
        * <p>Contains the data for a real-time metric.</p>
        */
    export interface CurrentMetricData {
            /**
                * <p>Information about the metric.</p>
                */
            Metric?: CurrentMetric;
            /**
                * <p>The value of the metric.</p>
                */
            Value?: number;
    }
    export namespace CurrentMetricData {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CurrentMetricData) => any;
    }
    /**
        * <p>Contains information about the dimensions for a set of metrics.</p>
        */
    export interface Dimensions {
            /**
                * <p>Information about the queue for which metrics are returned.</p>
                */
            Queue?: QueueReference;
            /**
                * <p>The channel used for grouping and filters.</p>
                */
            Channel?: Channel | string;
    }
    export namespace Dimensions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Dimensions) => any;
    }
    /**
        * <p>Contains information about a set of real-time metrics.</p>
        */
    export interface CurrentMetricResult {
            /**
                * <p>The dimensions for the metrics.</p>
                */
            Dimensions?: Dimensions;
            /**
                * <p>The set of metrics.</p>
                */
            Collections?: CurrentMetricData[];
    }
    export namespace CurrentMetricResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CurrentMetricResult) => any;
    }
    export interface GetCurrentMetricDataResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                *          <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use
                *    the token must use the same request parameters as the request that generated the token.</p>
                */
            NextToken?: string;
            /**
                * <p>Information about the real-time metrics.</p>
                */
            MetricResults?: CurrentMetricResult[];
            /**
                * <p>The time at which the metrics were retrieved and cached for pagination.</p>
                */
            DataSnapshotTime?: Date;
    }
    export namespace GetCurrentMetricDataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCurrentMetricDataResponse) => any;
    }
    /**
        * <p>Filters user data based on the contact information that is associated to
        *    the users. It contains a list of <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">contact states</a>.</p>
        */
    export interface ContactFilter {
            /**
                * <p>A list of up to 9 <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">contact states</a>.</p>
                */
            ContactStates?: (ContactState | string)[];
    }
    export namespace ContactFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactFilter) => any;
    }
    /**
        * <p>A filter for the user data.</p>
        */
    export interface UserDataFilters {
            /**
                * <p>Contains information about a queue resource for which metrics are returned.</p>
                */
            Queues?: string[];
            /**
                * <p>A filter for the user data based on the contact information that is associated to the user. It
                *    contains a list of contact states. </p>
                */
            ContactFilter?: ContactFilter;
    }
    export namespace UserDataFilters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserDataFilters) => any;
    }
    export interface GetCurrentUserDataRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>Filters up to 100 <code>Queues</code>, or up to 9 <code>ContactStates</code>. The user data is retrieved only for those users who are associated with
                *    the queues and have contacts that are in the specified <code>ContactState</code>. </p>
                */
            Filters: UserDataFilters | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace GetCurrentUserDataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCurrentUserDataRequest) => any;
    }
    /**
        * <p>Information about the hierarchy group.</p>
        */
    export interface HierarchyGroupSummaryReference {
            /**
                * <p>The unique identifier for the hierarchy group.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the hierarchy group. </p>
                */
            Arn?: string;
    }
    export namespace HierarchyGroupSummaryReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyGroupSummaryReference) => any;
    }
    /**
        * <p>Information about the levels in the hierarchy group.</p>
        */
    export interface HierarchyPathReference {
            /**
                * <p>Information about level one.</p>
                */
            LevelOne?: HierarchyGroupSummaryReference;
            /**
                * <p>Information about level two.</p>
                */
            LevelTwo?: HierarchyGroupSummaryReference;
            /**
                * <p>Information about level three.</p>
                */
            LevelThree?: HierarchyGroupSummaryReference;
            /**
                * <p>Information about level four.</p>
                */
            LevelFour?: HierarchyGroupSummaryReference;
            /**
                * <p>Information about level five.</p>
                */
            LevelFive?: HierarchyGroupSummaryReference;
    }
    export namespace HierarchyPathReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyPathReference) => any;
    }
    /**
        * <p>Information about the routing profile assigned to the user.</p>
        */
    export interface RoutingProfileReference {
            /**
                * <p>The identifier of the routing profile.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the routing profile.</p>
                */
            Arn?: string;
    }
    export namespace RoutingProfileReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfileReference) => any;
    }
    /**
        * <p>Information about the user.</p>
        */
    export interface UserReference {
            /**
                * <p>The unique identifier for the user.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the user.</p>
                */
            Arn?: string;
    }
    export namespace UserReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserReference) => any;
    }
    /**
        * <p>Data for a user.</p>
        */
    export interface UserData {
            /**
                * <p>Information about the user for the data that is returned. It contains resourceId and ARN of
                *    the user. </p>
                */
            User?: UserReference;
            /**
                * <p>Information about the routing profile that is assigned to the user.</p>
                */
            RoutingProfile?: RoutingProfileReference;
            /**
                * <p>Contains information about the levels of a hierarchy group assigned to a user.</p>
                */
            HierarchyPath?: HierarchyPathReference;
            /**
                * <p>The status of the agent that they manually set in their Contact Control Panel (CCP), or that
                *    the supervisor manually changes in the real-time metrics report.</p>
                */
            Status?: AgentStatusReference;
            /**
                * <p>A map of available slots by channel. The key is a channel name. The value is an integer: the
                *    available number of slots. </p>
                */
            AvailableSlotsByChannel?: Record<string, number>;
            /**
                * <p>A map of maximum slots by channel. The key is a channel name. The value is an integer: the
                *    maximum number of slots. This is calculated from <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_MediaConcurrency.html">MediaConcurrency</a> of the RoutingProfile assigned to the agent. </p>
                */
            MaxSlotsByChannel?: Record<string, number>;
            /**
                * <p> A map of active slots by channel. The key is a channel name. The value is an integer: the
                *    number of active slots.  </p>
                */
            ActiveSlotsByChannel?: Record<string, number>;
            /**
                * <p>A list of contact reference information.</p>
                */
            Contacts?: AgentContactReference[];
    }
    export namespace UserData {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserData) => any;
    }
    export interface GetCurrentUserDataResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>A list of the user data that is returned.</p>
                */
            UserDataList?: UserData[];
    }
    export namespace GetCurrentUserDataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCurrentUserDataResponse) => any;
    }
    export interface GetFederationTokenRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace GetFederationTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFederationTokenRequest) => any;
    }
    /**
        * <p>Contains credentials to use for federation.</p>
        */
    export interface Credentials {
            /**
                * <p>An access token generated for a federated user to access Amazon Connect.</p>
                */
            AccessToken?: string;
            /**
                * <p>A token generated with an expiration time for the session a user is logged in to
                *    Amazon Connect.</p>
                */
            AccessTokenExpiration?: Date;
            /**
                * <p>Renews a token generated for a user to access the Amazon Connect instance.</p>
                */
            RefreshToken?: string;
            /**
                * <p>Renews the expiration timer for a generated token.</p>
                */
            RefreshTokenExpiration?: Date;
    }
    export namespace Credentials {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Credentials) => any;
    }
    export interface GetFederationTokenResponse {
            /**
                * <p>The credentials to use for federation.</p>
                */
            Credentials?: Credentials;
    }
    export namespace GetFederationTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFederationTokenResponse) => any;
    }
    /**
        * <p>No user with the specified credentials was found in the Amazon Connect instance.</p>
        */
    export class UserNotFoundException extends __BaseException {
            readonly name: "UserNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UserNotFoundException, __BaseException>);
    }
    export enum HistoricalMetricName {
            ABANDON_TIME = "ABANDON_TIME",
            AFTER_CONTACT_WORK_TIME = "AFTER_CONTACT_WORK_TIME",
            API_CONTACTS_HANDLED = "API_CONTACTS_HANDLED",
            CALLBACK_CONTACTS_HANDLED = "CALLBACK_CONTACTS_HANDLED",
            CONTACTS_ABANDONED = "CONTACTS_ABANDONED",
            CONTACTS_AGENT_HUNG_UP_FIRST = "CONTACTS_AGENT_HUNG_UP_FIRST",
            CONTACTS_CONSULTED = "CONTACTS_CONSULTED",
            CONTACTS_HANDLED = "CONTACTS_HANDLED",
            CONTACTS_HANDLED_INCOMING = "CONTACTS_HANDLED_INCOMING",
            CONTACTS_HANDLED_OUTBOUND = "CONTACTS_HANDLED_OUTBOUND",
            CONTACTS_HOLD_ABANDONS = "CONTACTS_HOLD_ABANDONS",
            CONTACTS_MISSED = "CONTACTS_MISSED",
            CONTACTS_QUEUED = "CONTACTS_QUEUED",
            CONTACTS_TRANSFERRED_IN = "CONTACTS_TRANSFERRED_IN",
            CONTACTS_TRANSFERRED_IN_FROM_QUEUE = "CONTACTS_TRANSFERRED_IN_FROM_QUEUE",
            CONTACTS_TRANSFERRED_OUT = "CONTACTS_TRANSFERRED_OUT",
            CONTACTS_TRANSFERRED_OUT_FROM_QUEUE = "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE",
            HANDLE_TIME = "HANDLE_TIME",
            HOLD_TIME = "HOLD_TIME",
            INTERACTION_AND_HOLD_TIME = "INTERACTION_AND_HOLD_TIME",
            INTERACTION_TIME = "INTERACTION_TIME",
            OCCUPANCY = "OCCUPANCY",
            QUEUED_TIME = "QUEUED_TIME",
            QUEUE_ANSWER_TIME = "QUEUE_ANSWER_TIME",
            SERVICE_LEVEL = "SERVICE_LEVEL"
    }
    export enum Statistic {
            AVG = "AVG",
            MAX = "MAX",
            SUM = "SUM"
    }
    export enum Comparison {
            LT = "LT"
    }
    /**
        * <p>Contains information about the threshold for service level metrics.</p>
        */
    export interface Threshold {
            /**
                * <p>The type of comparison. Only "less than" (LT) comparisons are supported.</p>
                */
            Comparison?: Comparison | string;
            /**
                * <p>The threshold value to compare.</p>
                */
            ThresholdValue?: number;
    }
    export namespace Threshold {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Threshold) => any;
    }
    /**
        * <p>Contains information about a historical metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator
        *    Guide</i>.</p>
        */
    export interface HistoricalMetric {
            /**
                * <p>The name of the metric.</p>
                */
            Name?: HistoricalMetricName | string;
            /**
                * <p>The threshold for the metric, used with service level metrics.</p>
                */
            Threshold?: Threshold;
            /**
                * <p>The statistic for the metric.</p>
                */
            Statistic?: Statistic | string;
            /**
                * <p>The unit for the metric.</p>
                */
            Unit?: Unit | string;
    }
    export namespace HistoricalMetric {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HistoricalMetric) => any;
    }
    export interface GetMetricDataRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the
                *    retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes,
                *    such as 10:05, 10:10, 10:15.</p>
                *          <p>The start time cannot be earlier than 24 hours before the time of the request. Historical
                *    metrics are available only for 24 hours.</p>
                */
            StartTime: Date | undefined;
            /**
                * <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the
                *    retrieval of historical metrics data. The time must be specified using an interval of 5 minutes,
                *    such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p>
                *          <p>The time range between the start and end time must be less than 24 hours.</p>
                */
            EndTime: Date | undefined;
            /**
                * <p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is
                *    retrieved only for the resources associated with the queues or channels included in the filter.
                *    You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.</p>
                *          <note>
                *             <p>To filter by <code>Queues</code>, enter the queue
                *     ID/ARN, not the name of the queue.</p>
                *          </note>
                */
            Filters: Filters | undefined;
            /**
                * <p>The grouping applied to the metrics returned. For example, when results are grouped by
                *    queue, the metrics returned are grouped by queue. The values returned apply to the metrics for
                *    each queue rather than aggregated for all queues.</p>
                *
                *          <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>
                */
            Groupings?: (Grouping | string)[];
            /**
                * <p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The
                *    following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator
                *    Guide</i>.</p>
                *          <note>
                *             <p>This API does not support a contacts
                *     incoming metric (there's no CONTACTS_INCOMING metric missing from the documented list). </p>
                *          </note>
                *
                *          <dl>
                *             <dt>ABANDON_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>AFTER_CONTACT_WORK_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>API_CONTACTS_HANDLED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CALLBACK_CONTACTS_HANDLED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_ABANDONED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_CONSULTED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_HANDLED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_HANDLED_INCOMING</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_HANDLED_OUTBOUND</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_HOLD_ABANDONS</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_MISSED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_QUEUED</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_TRANSFERRED_IN</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_TRANSFERRED_OUT</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt>
                *             <dd>
                *                <p>Unit: COUNT</p>
                *                <p>Statistic: SUM</p>
                *             </dd>
                *             <dt>HANDLE_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>HOLD_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>INTERACTION_AND_HOLD_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>INTERACTION_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>OCCUPANCY</dt>
                *             <dd>
                *                <p>Unit: PERCENT</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>QUEUE_ANSWER_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: AVG</p>
                *             </dd>
                *             <dt>QUEUED_TIME</dt>
                *             <dd>
                *                <p>Unit: SECONDS</p>
                *                <p>Statistic: MAX</p>
                *             </dd>
                *             <dt>SERVICE_LEVEL</dt>
                *             <dd>
                *                <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
                *                <p>Unit: PERCENT</p>
                *                <p>Statistic: AVG</p>
                *                <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800
                *       (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for
                *       "Less than"). </p>
                *             </dd>
                *          </dl>
                */
            HistoricalMetrics: HistoricalMetric[] | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace GetMetricDataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMetricDataRequest) => any;
    }
    /**
        * <p>Contains the data for a historical metric.</p>
        */
    export interface HistoricalMetricData {
            /**
                * <p>Information about the metric.</p>
                */
            Metric?: HistoricalMetric;
            /**
                * <p>The value of the metric.</p>
                */
            Value?: number;
    }
    export namespace HistoricalMetricData {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HistoricalMetricData) => any;
    }
    /**
        * <p>Contains information about the historical metrics retrieved.</p>
        */
    export interface HistoricalMetricResult {
            /**
                * <p>The dimension for the metrics.</p>
                */
            Dimensions?: Dimensions;
            /**
                * <p>The set of metrics.</p>
                */
            Collections?: HistoricalMetricData[];
    }
    export namespace HistoricalMetricResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HistoricalMetricResult) => any;
    }
    export interface GetMetricDataResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                *          <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use
                *    the token must use the same request parameters as the request that generated the token.</p>
                */
            NextToken?: string;
            /**
                * <p>Information about the historical metrics.</p>
                *          <p>If no grouping is specified, a summary of metric data is returned.</p>
                */
            MetricResults?: HistoricalMetricResult[];
    }
    export namespace GetMetricDataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMetricDataResponse) => any;
    }
    export interface GetTaskTemplateRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A unique identifier for the task template.</p>
                */
            TaskTemplateId: string | undefined;
            /**
                * <p>The system generated version of a task template that is associated with a task, when the
                *    task is created.</p>
                */
            SnapshotVersion?: string;
    }
    export namespace GetTaskTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTaskTemplateRequest) => any;
    }
    export interface GetTaskTemplateResponse {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId?: string;
            /**
                * <p>A unique identifier for the task template.</p>
                */
            Id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN).</p>
                */
            Arn: string | undefined;
            /**
                * <p>The name of the task template.</p>
                */
            Name: string | undefined;
            /**
                * <p>The description of the task template.</p>
                */
            Description?: string;
            /**
                * <p>The identifier of the flow that runs by default when a task is created by referencing this template.</p>
                */
            ContactFlowId?: string;
            /**
                * <p>Constraints that are applicable to the fields listed.</p>
                */
            Constraints?: TaskTemplateConstraints;
            /**
                * <p>The default values for fields when a task is created by referencing this template.</p>
                */
            Defaults?: TaskTemplateDefaults;
            /**
                * <p>Fields that are part of the template.</p>
                */
            Fields?: TaskTemplateField[];
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>The timestamp when the task template was last modified.</p>
                */
            LastModifiedTime?: Date;
            /**
                * <p>The timestamp when the task template was created.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace GetTaskTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTaskTemplateResponse) => any;
    }
    export interface ListAgentStatusRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>Available agent status types.</p>
                */
            AgentStatusTypes?: (AgentStatusType | string)[];
    }
    export namespace ListAgentStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAgentStatusRequest) => any;
    }
    export interface ListAgentStatusResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>A summary of agent statuses.</p>
                */
            AgentStatusSummaryList?: AgentStatusSummary[];
    }
    export namespace ListAgentStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAgentStatusResponse) => any;
    }
    export interface ListApprovedOriginsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListApprovedOriginsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListApprovedOriginsRequest) => any;
    }
    export interface ListApprovedOriginsResponse {
            /**
                * <p>The approved origins.</p>
                */
            Origins?: string[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListApprovedOriginsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListApprovedOriginsResponse) => any;
    }
    export enum LexVersion {
            V1 = "V1",
            V2 = "V2"
    }
    export interface ListBotsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The version of Amazon Lex or Amazon Lex V2.</p>
                */
            LexVersion: LexVersion | string | undefined;
    }
    export namespace ListBotsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBotsRequest) => any;
    }
    /**
        * <p>Configuration information of an Amazon Lex or Amazon Lex V2 bot.</p>
        */
    export interface LexBotConfig {
            /**
                * <p>Configuration information of an Amazon Lex bot.</p>
                */
            LexBot?: LexBot;
            /**
                * <p>Configuration information of an Amazon Lex V2 bot.</p>
                */
            LexV2Bot?: LexV2Bot;
    }
    export namespace LexBotConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LexBotConfig) => any;
    }
    export interface ListBotsResponse {
            /**
                * <p>The names and Regions of the Amazon Lex or Amazon Lex V2 bots associated with the specified
                *    instance.</p>
                */
            LexBots?: LexBotConfig[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListBotsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBotsResponse) => any;
    }
    export interface ListContactFlowModulesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The state of the contact flow module.</p>
                */
            ContactFlowModuleState?: ContactFlowModuleState | string;
    }
    export namespace ListContactFlowModulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactFlowModulesRequest) => any;
    }
    /**
        * <p>Contains summary information about a contact flow.</p>
        */
    export interface ContactFlowModuleSummary {
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the contact flow module.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the contact flow module.</p>
                */
            Name?: string;
            /**
                * <p>The type of contact flow module.</p>
                */
            State?: ContactFlowModuleState | string;
    }
    export namespace ContactFlowModuleSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactFlowModuleSummary) => any;
    }
    export interface ListContactFlowModulesResponse {
            /**
                * <p>Information about the contact flow module.</p>
                */
            ContactFlowModulesSummaryList?: ContactFlowModuleSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactFlowModulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactFlowModulesResponse) => any;
    }
    export interface ListContactFlowsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of contact flow.</p>
                */
            ContactFlowTypes?: (ContactFlowType | string)[];
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListContactFlowsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactFlowsRequest) => any;
    }
    /**
        * <p>Contains summary information about a contact flow.</p>
        *          <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
        *    Flow language</a>.</p>
        */
    export interface ContactFlowSummary {
            /**
                * <p>The identifier of the contact flow.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the contact flow.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the contact flow.</p>
                */
            Name?: string;
            /**
                * <p>The type of contact flow.</p>
                */
            ContactFlowType?: ContactFlowType | string;
            /**
                * <p>The type of contact flow.</p>
                */
            ContactFlowState?: ContactFlowState | string;
    }
    export namespace ContactFlowSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactFlowSummary) => any;
    }
    export interface ListContactFlowsResponse {
            /**
                * <p>Information about the contact flows.</p>
                */
            ContactFlowSummaryList?: ContactFlowSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactFlowsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactFlowsResponse) => any;
    }
    export enum ReferenceType {
            ATTACHMENT = "ATTACHMENT",
            DATE = "DATE",
            EMAIL = "EMAIL",
            NUMBER = "NUMBER",
            STRING = "STRING",
            URL = "URL"
    }
    export interface ListContactReferencesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the initial contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The type of reference.</p>
                */
            ReferenceTypes: (ReferenceType | string)[] | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                *          <important>
                *             <p>This is not expected to be set, because the value returned in the previous response is
                *     always null.</p>
                *          </important>
                */
            NextToken?: string;
    }
    export namespace ListContactReferencesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactReferencesRequest) => any;
    }
    export enum ReferenceStatus {
            APPROVED = "APPROVED",
            REJECTED = "REJECTED"
    }
    /**
        * <p>Information about a reference when the <code>referenceType</code> is
        *    <code>ATTACHMENT</code>. Otherwise, null.</p>
        */
    export interface AttachmentReference {
            /**
                * <p>Identifier of the attachment reference.</p>
                */
            Name?: string;
            /**
                * <p>The location path of the attachment reference.</p>
                */
            Value?: string;
            /**
                * <p>Status of the attachment reference type.</p>
                */
            Status?: ReferenceStatus | string;
    }
    export namespace AttachmentReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachmentReference) => any;
    }
    /**
        * <p>Information about a reference when the <code>referenceType</code> is <code>DATE</code>.
        *    Otherwise, null.</p>
        */
    export interface DateReference {
            /**
                * <p>Identifier of the date reference.</p>
                */
            Name?: string;
            /**
                * <p>A valid date.</p>
                */
            Value?: string;
    }
    export namespace DateReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DateReference) => any;
    }
    /**
        * <p>Information about a reference when the <code>referenceType</code> is <code>EMAIL</code>.
        *    Otherwise, null.</p>
        */
    export interface EmailReference {
            /**
                * <p>Identifier of the email reference.</p>
                */
            Name?: string;
            /**
                * <p>A valid email address.</p>
                */
            Value?: string;
    }
    export namespace EmailReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmailReference) => any;
    }
    /**
        * <p>Information about a reference when the <code>referenceType</code> is <code>NUMBER</code>.
        *    Otherwise, null.</p>
        */
    export interface NumberReference {
            /**
                * <p>Identifier of the number reference.</p>
                */
            Name?: string;
            /**
                * <p>A valid number.</p>
                */
            Value?: string;
    }
    export namespace NumberReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NumberReference) => any;
    }
    /**
        * <p>Information about a reference when the <code>referenceType</code> is <code>STRING</code>.
        *    Otherwise, null.</p>
        */
    export interface StringReference {
            /**
                * <p>Identifier of the string reference.</p>
                */
            Name?: string;
            /**
                * <p>A valid string.</p>
                */
            Value?: string;
    }
    export namespace StringReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StringReference) => any;
    }
    /**
        * <p>The URL reference.</p>
        */
    export interface UrlReference {
            /**
                * <p>Identifier of the URL reference.</p>
                */
            Name?: string;
            /**
                * <p>A valid URL.</p>
                */
            Value?: string;
    }
    export namespace UrlReference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UrlReference) => any;
    }
    /**
        * <p>Contains summary information about a reference. <code>ReferenceSummary</code> contains only
        *    one non null field between the URL and attachment based on the reference type.</p>
        */
    export type ReferenceSummary = ReferenceSummary.AttachmentMember | ReferenceSummary.DateMember | ReferenceSummary.EmailMember | ReferenceSummary.NumberMember | ReferenceSummary.StringMember | ReferenceSummary.UrlMember | ReferenceSummary.$UnknownMember;
    export namespace ReferenceSummary {
            /**
                * <p>Information about the reference when the <code>referenceType</code> is <code>URL</code>.
                *    Otherwise, null.</p>
                */
            interface UrlMember {
                    Url: UrlReference;
                    Attachment?: never;
                    String?: never;
                    Number?: never;
                    Date?: never;
                    Email?: never;
                    $unknown?: never;
            }
            /**
                * <p>Information about the reference when the <code>referenceType</code> is
                *     <code>ATTACHMENT</code>. Otherwise, null.</p>
                */
            interface AttachmentMember {
                    Url?: never;
                    Attachment: AttachmentReference;
                    String?: never;
                    Number?: never;
                    Date?: never;
                    Email?: never;
                    $unknown?: never;
            }
            /**
                * <p>Information about a reference when the <code>referenceType</code> is <code>STRING</code>.
                *    Otherwise, null.</p>
                */
            interface StringMember {
                    Url?: never;
                    Attachment?: never;
                    String: StringReference;
                    Number?: never;
                    Date?: never;
                    Email?: never;
                    $unknown?: never;
            }
            /**
                * <p>Information about a reference when the <code>referenceType</code> is <code>NUMBER</code>.
                *    Otherwise, null.</p>
                */
            interface NumberMember {
                    Url?: never;
                    Attachment?: never;
                    String?: never;
                    Number: NumberReference;
                    Date?: never;
                    Email?: never;
                    $unknown?: never;
            }
            /**
                * <p>Information about a reference when the <code>referenceType</code> is <code>DATE</code>.
                *    Otherwise, null.</p>
                */
            interface DateMember {
                    Url?: never;
                    Attachment?: never;
                    String?: never;
                    Number?: never;
                    Date: DateReference;
                    Email?: never;
                    $unknown?: never;
            }
            /**
                * <p>Information about a reference when the <code>referenceType</code> is <code>EMAIL</code>.
                *    Otherwise, null.</p>
                */
            interface EmailMember {
                    Url?: never;
                    Attachment?: never;
                    String?: never;
                    Number?: never;
                    Date?: never;
                    Email: EmailReference;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    Url?: never;
                    Attachment?: never;
                    String?: never;
                    Number?: never;
                    Date?: never;
                    Email?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    Url: (value: UrlReference) => T;
                    Attachment: (value: AttachmentReference) => T;
                    String: (value: StringReference) => T;
                    Number: (value: NumberReference) => T;
                    Date: (value: DateReference) => T;
                    Email: (value: EmailReference) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: ReferenceSummary, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReferenceSummary) => any;
    }
    export interface ListContactReferencesResponse {
            /**
                * <p>Information about the contact flows.</p>
                */
            ReferenceSummaryList?: ReferenceSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                *          <important>
                *             <p>This is always returned as null in the response.</p>
                *          </important>
                */
            NextToken?: string;
    }
    export namespace ListContactReferencesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactReferencesResponse) => any;
    }
    export interface ListDefaultVocabulariesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode?: VocabularyLanguageCode | string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListDefaultVocabulariesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDefaultVocabulariesRequest) => any;
    }
    /**
        * <p>Contains information about a default vocabulary.</p>
        */
    export interface DefaultVocabulary {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode: VocabularyLanguageCode | string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            VocabularyId: string | undefined;
            /**
                * <p>A unique name of the custom vocabulary.</p>
                */
            VocabularyName: string | undefined;
    }
    export namespace DefaultVocabulary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DefaultVocabulary) => any;
    }
    export interface ListDefaultVocabulariesResponse {
            /**
                * <p>A list of default vocabularies.</p>
                */
            DefaultVocabularyList: DefaultVocabulary[] | undefined;
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListDefaultVocabulariesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDefaultVocabulariesResponse) => any;
    }
    export interface ListHoursOfOperationsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListHoursOfOperationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHoursOfOperationsRequest) => any;
    }
    /**
        * <p>Contains summary information about hours of operation for a contact center.</p>
        */
    export interface HoursOfOperationSummary {
            /**
                * <p>The identifier of the hours of operation.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the hours of operation.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the hours of operation.</p>
                */
            Name?: string;
    }
    export namespace HoursOfOperationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HoursOfOperationSummary) => any;
    }
    export interface ListHoursOfOperationsResponse {
            /**
                * <p>Information about the hours of operation.</p>
                */
            HoursOfOperationSummaryList?: HoursOfOperationSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListHoursOfOperationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHoursOfOperationsResponse) => any;
    }
    export interface ListInstanceAttributesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListInstanceAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstanceAttributesRequest) => any;
    }
    export interface ListInstanceAttributesResponse {
            /**
                * <p>The attribute types.</p>
                */
            Attributes?: Attribute[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListInstanceAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstanceAttributesResponse) => any;
    }
    export interface ListInstancesRequest {
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListInstancesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstancesRequest) => any;
    }
    /**
        * <p>Information about the instance.</p>
        */
    export interface InstanceSummary {
            /**
                * <p>The identifier of the instance.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the instance.</p>
                */
            Arn?: string;
            /**
                * <p>The identity management type of the instance.</p>
                */
            IdentityManagementType?: DirectoryType | string;
            /**
                * <p>The alias of the instance.</p>
                */
            InstanceAlias?: string;
            /**
                * <p>When the instance was created.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The service role of the instance.</p>
                */
            ServiceRole?: string;
            /**
                * <p>The state of the instance.</p>
                */
            InstanceStatus?: InstanceStatus | string;
            /**
                * <p>Whether inbound calls are enabled.</p>
                */
            InboundCallsEnabled?: boolean;
            /**
                * <p>Whether outbound calls are enabled.</p>
                */
            OutboundCallsEnabled?: boolean;
    }
    export namespace InstanceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InstanceSummary) => any;
    }
    export interface ListInstancesResponse {
            /**
                * <p>Information about the instances.</p>
                */
            InstanceSummaryList?: InstanceSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListInstancesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstancesResponse) => any;
    }
    export interface ListInstanceStorageConfigsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A valid resource type.</p>
                */
            ResourceType: InstanceStorageResourceType | string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListInstanceStorageConfigsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstanceStorageConfigsRequest) => any;
    }
    export interface ListInstanceStorageConfigsResponse {
            /**
                * <p>A valid storage type.</p>
                */
            StorageConfigs?: InstanceStorageConfig[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListInstanceStorageConfigsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInstanceStorageConfigsResponse) => any;
    }
    export interface ListIntegrationAssociationsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The integration type.</p>
                */
            IntegrationType?: IntegrationType | string;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListIntegrationAssociationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIntegrationAssociationsRequest) => any;
    }
    /**
        * <p>Contains summary information about the associated AppIntegrations.</p>
        */
    export interface IntegrationAssociationSummary {
            /**
                * <p>The identifier for the AppIntegration association.</p>
                */
            IntegrationAssociationId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the AppIntegration association.</p>
                */
            IntegrationAssociationArn?: string;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId?: string;
            /**
                * <p>The integration type.</p>
                */
            IntegrationType?: IntegrationType | string;
            /**
                * <p>The Amazon Resource Name (ARN) for the AppIntegration.</p>
                */
            IntegrationArn?: string;
            /**
                * <p>The URL for the external application.</p>
                */
            SourceApplicationUrl?: string;
            /**
                * <p>The user-provided, friendly name for the external application.</p>
                */
            SourceApplicationName?: string;
            /**
                * <p>The name of the source.</p>
                */
            SourceType?: SourceType | string;
    }
    export namespace IntegrationAssociationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IntegrationAssociationSummary) => any;
    }
    export interface ListIntegrationAssociationsResponse {
            /**
                * <p>The associations.</p>
                */
            IntegrationAssociationSummaryList?: IntegrationAssociationSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListIntegrationAssociationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIntegrationAssociationsResponse) => any;
    }
    export interface ListLambdaFunctionsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListLambdaFunctionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLambdaFunctionsRequest) => any;
    }
    export interface ListLambdaFunctionsResponse {
            /**
                * <p>The Lambdafunction ARNs associated with the specified instance.</p>
                */
            LambdaFunctions?: string[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListLambdaFunctionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLambdaFunctionsResponse) => any;
    }
    export interface ListLexBotsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page. If no value is specified, the default is 10.
                *    </p>
                */
            MaxResults?: number;
    }
    export namespace ListLexBotsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLexBotsRequest) => any;
    }
    export interface ListLexBotsResponse {
            /**
                * <p>The names and Regions of the Amazon Lex bots associated with the specified instance.</p>
                */
            LexBots?: LexBot[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListLexBotsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLexBotsResponse) => any;
    }
    export interface ListPhoneNumbersRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberTypes?: (PhoneNumberType | string)[];
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCodes?: (PhoneNumberCountryCode | string)[];
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListPhoneNumbersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersRequest) => any;
    }
    /**
        * <p>Contains summary information about a phone number for a contact center.</p>
        */
    export interface PhoneNumberSummary {
            /**
                * <p>The identifier of the phone number.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the phone number.</p>
                */
            Arn?: string;
            /**
                * <p>The phone number.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberType?: PhoneNumberType | string;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCode?: PhoneNumberCountryCode | string;
    }
    export namespace PhoneNumberSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberSummary) => any;
    }
    export interface ListPhoneNumbersResponse {
            /**
                * <p>Information about the phone numbers.</p>
                */
            PhoneNumberSummaryList?: PhoneNumberSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListPhoneNumbersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersResponse) => any;
    }
    export interface ListPhoneNumbersV2Request {
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to. If <code>TargetArn</code> input is not provided, this API lists numbers claimed
                *    to all the Amazon Connect instances belonging to your account.</p>
                */
            TargetArn?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCodes?: (PhoneNumberCountryCode | string)[];
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberTypes?: (PhoneNumberType | string)[];
            /**
                * <p>The prefix of the phone number. If provided, it must contain <code>+</code> as part of the country code.</p>
                */
            PhoneNumberPrefix?: string;
    }
    export namespace ListPhoneNumbersV2Request {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersV2Request) => any;
    }
    /**
        * <p>Information about phone numbers that have been claimed to your Amazon Connect instance.</p>
        */
    export interface ListPhoneNumbersSummary {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the phone number.</p>
                */
            PhoneNumberArn?: string;
            /**
                * <p>The phone number. Phone numbers are formatted <code>[+] [country code] [subscriber number including area code]</code>.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCode?: PhoneNumberCountryCode | string;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberType?: PhoneNumberType | string;
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.</p>
                */
            TargetArn?: string;
    }
    export namespace ListPhoneNumbersSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersSummary) => any;
    }
    export interface ListPhoneNumbersV2Response {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>Information about phone numbers that have been claimed to your Amazon Connect instances.</p>
                */
            ListPhoneNumbersSummaryList?: ListPhoneNumbersSummary[];
    }
    export namespace ListPhoneNumbersV2Response {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersV2Response) => any;
    }
    export interface ListPromptsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous response in
                *    the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListPromptsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPromptsRequest) => any;
    }
    /**
        * <p>Contains information about the prompt.</p>
        */
    export interface PromptSummary {
            /**
                * <p>The identifier of the prompt.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the prompt.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the prompt.</p>
                */
            Name?: string;
    }
    export namespace PromptSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PromptSummary) => any;
    }
    export interface ListPromptsResponse {
            /**
                * <p>Information about the prompts.</p>
                */
            PromptSummaryList?: PromptSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListPromptsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPromptsResponse) => any;
    }
    export interface ListQueueQuickConnectsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListQueueQuickConnectsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQueueQuickConnectsRequest) => any;
    }
    /**
        * <p>Contains summary information about a quick connect.</p>
        */
    export interface QuickConnectSummary {
            /**
                * <p>The identifier for the quick connect.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the quick connect.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the quick connect.</p>
                */
            Name?: string;
            /**
                * <p>The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are
                *    prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).</p>
                */
            QuickConnectType?: QuickConnectType | string;
    }
    export namespace QuickConnectSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QuickConnectSummary) => any;
    }
    export interface ListQueueQuickConnectsResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>Information about the quick connects.</p>
                */
            QuickConnectSummaryList?: QuickConnectSummary[];
    }
    export namespace ListQueueQuickConnectsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQueueQuickConnectsResponse) => any;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_1' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ConnectServiceException as __BaseException } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/ConnectServiceException";
    import { AgentStatusState, Channel, ContactFlowModuleState, ContactFlowState, HierarchyGroupSummary, HoursOfOperationConfig, InstanceAttributeType, InstanceStorageConfig, InstanceStorageResourceType, MediaConcurrency, OutboundCallerConfig, PhoneNumberCountryCode, PhoneNumberType, QueueStatus, QuickConnectConfig, QuickConnectSummary, QuickConnectType, ReferenceType, RoutingProfileQueueConfig, TaskTemplateConstraints, TaskTemplateDefaults, TaskTemplateField, TaskTemplateStatus, UseCaseType, UserIdentityInfo, UserPhoneConfig, VocabularyLanguageCode, VocabularyState } from "@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/models_0";
    export enum QueueType {
            AGENT = "AGENT",
            STANDARD = "STANDARD"
    }
    export interface ListQueuesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of queue.</p>
                */
            QueueTypes?: (QueueType | string)[];
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListQueuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQueuesRequest) => any;
    }
    /**
        * <p>Contains summary information about a queue.</p>
        */
    export interface QueueSummary {
            /**
                * <p>The identifier of the queue.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the queue.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the queue.</p>
                */
            Name?: string;
            /**
                * <p>The type of queue.</p>
                */
            QueueType?: QueueType | string;
    }
    export namespace QueueSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: QueueSummary) => any;
    }
    export interface ListQueuesResponse {
            /**
                * <p>Information about the queues.</p>
                */
            QueueSummaryList?: QueueSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListQueuesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQueuesResponse) => any;
    }
    export interface ListQuickConnectsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are
                *    prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).</p>
                */
            QuickConnectTypes?: (QuickConnectType | string)[];
    }
    export namespace ListQuickConnectsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQuickConnectsRequest) => any;
    }
    export interface ListQuickConnectsResponse {
            /**
                * <p>Information about the quick connects.</p>
                */
            QuickConnectSummaryList?: QuickConnectSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListQuickConnectsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListQuickConnectsResponse) => any;
    }
    export interface ListRoutingProfileQueuesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListRoutingProfileQueuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoutingProfileQueuesRequest) => any;
    }
    /**
        * <p>Contains summary information about a routing profile queue.</p>
        */
    export interface RoutingProfileQueueConfigSummary {
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the queue.</p>
                */
            QueueArn: string | undefined;
            /**
                * <p>The name of the queue.</p>
                */
            QueueName: string | undefined;
            /**
                * <p>The order in which contacts are to be handled for the queue. For more information, see
                *     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and
                *     delay</a>.</p>
                */
            Priority: number | undefined;
            /**
                * <p>The delay, in seconds, that a contact should be in the queue before they are routed to an
                *    available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and
                *     delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
                */
            Delay: number | undefined;
            /**
                * <p>The channels this queue supports.</p>
                */
            Channel: Channel | string | undefined;
    }
    export namespace RoutingProfileQueueConfigSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfileQueueConfigSummary) => any;
    }
    export interface ListRoutingProfileQueuesResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>Information about the routing profiles.</p>
                */
            RoutingProfileQueueConfigSummaryList?: RoutingProfileQueueConfigSummary[];
    }
    export namespace ListRoutingProfileQueuesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoutingProfileQueuesResponse) => any;
    }
    export interface ListRoutingProfilesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListRoutingProfilesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoutingProfilesRequest) => any;
    }
    /**
        * <p>Contains summary information about a routing profile.</p>
        */
    export interface RoutingProfileSummary {
            /**
                * <p>The identifier of the routing profile.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the routing profile.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the routing profile.</p>
                */
            Name?: string;
    }
    export namespace RoutingProfileSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoutingProfileSummary) => any;
    }
    export interface ListRoutingProfilesResponse {
            /**
                * <p>Information about the routing profiles.</p>
                */
            RoutingProfileSummaryList?: RoutingProfileSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRoutingProfilesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoutingProfilesResponse) => any;
    }
    export interface ListSecurityKeysRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListSecurityKeysRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityKeysRequest) => any;
    }
    /**
        * <p>Configuration information of the security key.</p>
        */
    export interface SecurityKey {
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId?: string;
            /**
                * <p>The key of the security key.</p>
                */
            Key?: string;
            /**
                * <p>When the security key was created.</p>
                */
            CreationTime?: Date;
    }
    export namespace SecurityKey {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityKey) => any;
    }
    export interface ListSecurityKeysResponse {
            /**
                * <p>The security keys.</p>
                */
            SecurityKeys?: SecurityKey[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSecurityKeysResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityKeysResponse) => any;
    }
    export interface ListSecurityProfilePermissionsRequest {
            /**
                * <p>The identifier for the security profle.</p>
                */
            SecurityProfileId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListSecurityProfilePermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilePermissionsRequest) => any;
    }
    export interface ListSecurityProfilePermissionsResponse {
            /**
                * <p>The permissions granted to the security profile.</p>
                */
            Permissions?: string[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSecurityProfilePermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilePermissionsResponse) => any;
    }
    export interface ListSecurityProfilesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListSecurityProfilesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesRequest) => any;
    }
    /**
        * <p>Contains information about a security profile.</p>
        */
    export interface SecurityProfileSummary {
            /**
                * <p>The identifier of the security profile.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the security profile.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the security profile.</p>
                */
            Name?: string;
    }
    export namespace SecurityProfileSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityProfileSummary) => any;
    }
    export interface ListSecurityProfilesResponse {
            /**
                * <p>Information about the security profiles.</p>
                */
            SecurityProfileSummaryList?: SecurityProfileSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSecurityProfilesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSecurityProfilesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource.</p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>Information about the tags.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListTaskTemplatesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                *          <important>
                *             <p>It is not expected that you set this because the value returned in the previous response is
                *     always null.</p>
                *          </important>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                *          <important>
                *             <p>It is not expected that you set this.</p>
                *          </important>
                */
            MaxResults?: number;
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>The name of the task template.</p>
                */
            Name?: string;
    }
    export namespace ListTaskTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTaskTemplatesRequest) => any;
    }
    /**
        * <p>Contains summary information about the task template.</p>
        */
    export interface TaskTemplateMetadata {
            /**
                * <p>A unique identifier for the task template.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the task template.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the task template.</p>
                */
            Name?: string;
            /**
                * <p>The description of the task template.</p>
                */
            Description?: string;
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>The timestamp when the task template was last modified.</p>
                */
            LastModifiedTime?: Date;
            /**
                * <p>The timestamp when the task template was created.</p>
                */
            CreatedTime?: Date;
    }
    export namespace TaskTemplateMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TaskTemplateMetadata) => any;
    }
    export interface ListTaskTemplatesResponse {
            /**
                * <p>Provides details about a list of task templates belonging to an instance.</p>
                */
            TaskTemplates?: TaskTemplateMetadata[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                *          <important>
                *             <p>This is always returned as a null in the response.</p>
                *          </important>
                */
            NextToken?: string;
    }
    export namespace ListTaskTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTaskTemplatesResponse) => any;
    }
    /**
        * <p>Provides summary information about the use cases for the specified integration
        *    association.</p>
        */
    export interface ListUseCasesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the integration association.</p>
                */
            IntegrationAssociationId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListUseCasesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUseCasesRequest) => any;
    }
    /**
        * <p>Contains the
        *    use
        *    case.</p>
        */
    export interface UseCase {
            /**
                * <p>The identifier for the use case.</p>
                */
            UseCaseId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the use case.</p>
                */
            UseCaseArn?: string;
            /**
                * <p>The type of use case to associate to the integration association. Each integration
                *    association can have only one of each use case type.</p>
                */
            UseCaseType?: UseCaseType | string;
    }
    export namespace UseCase {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UseCase) => any;
    }
    export interface ListUseCasesResponse {
            /**
                * <p>The use cases.</p>
                */
            UseCaseSummaryList?: UseCase[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListUseCasesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUseCasesResponse) => any;
    }
    export interface ListUserHierarchyGroupsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListUserHierarchyGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUserHierarchyGroupsRequest) => any;
    }
    export interface ListUserHierarchyGroupsResponse {
            /**
                * <p>Information about the hierarchy groups.</p>
                */
            UserHierarchyGroupSummaryList?: HierarchyGroupSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListUserHierarchyGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUserHierarchyGroupsResponse) => any;
    }
    export interface ListUsersRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersRequest) => any;
    }
    /**
        * <p>Contains summary information about a user.</p>
        */
    export interface UserSummary {
            /**
                * <p>The identifier of the user account.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the user account.</p>
                */
            Arn?: string;
            /**
                * <p>The Amazon Connect user name of the user account.</p>
                */
            Username?: string;
    }
    export namespace UserSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserSummary) => any;
    }
    export interface ListUsersResponse {
            /**
                * <p>Information about the users.</p>
                */
            UserSummaryList?: UserSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersResponse) => any;
    }
    export interface PutUserStatusRequest {
            /**
                * <p>The identifier of the user.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the agent status.</p>
                */
            AgentStatusId: string | undefined;
    }
    export namespace PutUserStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutUserStatusRequest) => any;
    }
    export interface PutUserStatusResponse {
    }
    export namespace PutUserStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutUserStatusResponse) => any;
    }
    export interface ReleasePhoneNumberRequest {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace ReleasePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReleasePhoneNumberRequest) => any;
    }
    export interface ResumeContactRecordingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            InitialContactId: string | undefined;
    }
    export namespace ResumeContactRecordingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResumeContactRecordingRequest) => any;
    }
    export interface ResumeContactRecordingResponse {
    }
    export namespace ResumeContactRecordingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResumeContactRecordingResponse) => any;
    }
    export interface SearchAvailablePhoneNumbersRequest {
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.</p>
                */
            TargetArn: string | undefined;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCode: PhoneNumberCountryCode | string | undefined;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberType: PhoneNumberType | string | undefined;
            /**
                * <p>The prefix of the phone number. If provided, it must contain <code>+</code> as part of the country code.</p>
                */
            PhoneNumberPrefix?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace SearchAvailablePhoneNumbersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchAvailablePhoneNumbersRequest) => any;
    }
    /**
        * <p>Information about available phone numbers.</p>
        */
    export interface AvailableNumberSummary {
            /**
                * <p>The phone number. Phone numbers are formatted <code>[+] [country code] [subscriber number including area code]</code>.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The ISO country code.</p>
                */
            PhoneNumberCountryCode?: PhoneNumberCountryCode | string;
            /**
                * <p>The type of phone number.</p>
                */
            PhoneNumberType?: PhoneNumberType | string;
    }
    export namespace AvailableNumberSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AvailableNumberSummary) => any;
    }
    export interface SearchAvailablePhoneNumbersResponse {
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>A list of available phone numbers that you can claim for your Amazon Connect instance.</p>
                */
            AvailableNumbersList?: AvailableNumberSummary[];
    }
    export namespace SearchAvailablePhoneNumbersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchAvailablePhoneNumbersResponse) => any;
    }
    export enum HierarchyGroupMatchType {
            EXACT = "EXACT",
            WITH_CHILD_GROUPS = "WITH_CHILD_GROUPS"
    }
    /**
        * <p>A leaf node condition which can be used to specify a hierarchy group condition.</p>
        */
    export interface HierarchyGroupCondition {
            /**
                * <p>The value in the hierarchy group condition.</p>
                */
            Value?: string;
            /**
                * <p>The type of hierarchy group match.</p>
                */
            HierarchyGroupMatchType?: HierarchyGroupMatchType | string;
    }
    export namespace HierarchyGroupCondition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyGroupCondition) => any;
    }
    export enum StringComparisonType {
            CONTAINS = "CONTAINS",
            EXACT = "EXACT",
            STARTS_WITH = "STARTS_WITH"
    }
    /**
        * <p>A leaf node condition which can be used to specify a string condition, for example,
        *     <code>username = 'abc'</code>. </p>
        */
    export interface StringCondition {
            /**
                * <p>The name of the field in the string condition.</p>
                */
            FieldName?: string;
            /**
                * <p>The value of the string.</p>
                */
            Value?: string;
            /**
                * <p>The type of comparison to be made when evaluating the string condition.</p>
                */
            ComparisonType?: StringComparisonType | string;
    }
    export namespace StringCondition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StringCondition) => any;
    }
    /**
        * <p>A leaf node condition which can be used to specify a tag condition, for example, <code>HAVE
        *     BPO = 123</code>. </p>
        */
    export interface TagCondition {
            /**
                * <p>The tag key in the tag condition.</p>
                */
            TagKey?: string;
            /**
                * <p>The tag value in the tag condition.</p>
                */
            TagValue?: string;
    }
    export namespace TagCondition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagCondition) => any;
    }
    /**
        * <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>.
        *    This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p>
        *          <ul>
        *             <li>
        *                <p>Top level list specifies conditions that need to be applied with <code>OR</code>
        *      operator</p>
        *             </li>
        *             <li>
        *                <p>Inner list specifies conditions that need to be applied with <code>AND</code>
        *      operator.</p>
        *             </li>
        *          </ul>
        */
    export interface ControlPlaneTagFilter {
            /**
                * <p>A list of conditions which would be applied together with an <code>OR</code> condition.
                *   </p>
                */
            OrConditions?: TagCondition[][];
            /**
                * <p>A list of conditions which would be applied together with an <code>AND</code>
                *    condition.</p>
                */
            AndConditions?: TagCondition[];
            /**
                * <p>A leaf node condition which can be used to specify a tag condition. </p>
                */
            TagCondition?: TagCondition;
    }
    export namespace ControlPlaneTagFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ControlPlaneTagFilter) => any;
    }
    /**
        * <p>Filters to be applied to search results.</p>
        */
    export interface UserSearchFilter {
            /**
                * <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>.
                *    This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p>
                *          <ul>
                *             <li>
                *                <p>Top level list specifies conditions that need to be applied with <code>OR</code>
                *      operator</p>
                *             </li>
                *             <li>
                *                <p>Inner list specifies conditions that need to be applied with <code>AND</code>
                *      operator.</p>
                *             </li>
                *          </ul>
                */
            TagFilter?: ControlPlaneTagFilter;
    }
    export namespace UserSearchFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserSearchFilter) => any;
    }
    /**
        * <p>The user's first name and last name.</p>
        */
    export interface UserIdentityInfoLite {
            /**
                * <p>The user's first name.</p>
                */
            FirstName?: string;
            /**
                * <p>The user's last name.</p>
                */
            LastName?: string;
    }
    export namespace UserIdentityInfoLite {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserIdentityInfoLite) => any;
    }
    /**
        * <p>Information about the returned users.</p>
        */
    export interface UserSearchSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of the user.</p>
                */
            Arn?: string;
            /**
                * <p>The directory identifier of the user.</p>
                */
            DirectoryUserId?: string;
            /**
                * <p>The identifier of the user's hierarchy group.</p>
                */
            HierarchyGroupId?: string;
            /**
                * <p>The identifier of the user's summary.</p>
                */
            Id?: string;
            /**
                * <p>The user's first name and last name.</p>
                */
            IdentityInfo?: UserIdentityInfoLite;
            /**
                * <p>Contains information about the phone configuration settings for a user.</p>
                */
            PhoneConfig?: UserPhoneConfig;
            /**
                * <p>The identifier of the user's routing profile.</p>
                */
            RoutingProfileId?: string;
            /**
                * <p>The identifiers of the user's security profiles.</p>
                */
            SecurityProfileIds?: string[];
            /**
                * <p>The tags used to organize, track, or control access for this resource.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The name of the user.</p>
                */
            Username?: string;
    }
    export namespace UserSearchSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserSearchSummary) => any;
    }
    export interface SearchUsersResponse {
            /**
                * <p>Information about the users.</p>
                */
            Users?: UserSearchSummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of users who matched your search query.</p>
                */
            ApproximateTotalCount?: number;
    }
    export namespace SearchUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchUsersResponse) => any;
    }
    export interface SearchVocabulariesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The current state of the custom vocabulary.</p>
                */
            State?: VocabularyState | string;
            /**
                * <p>The starting pattern of the name of the vocabulary.</p>
                */
            NameStartsWith?: string;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode?: VocabularyLanguageCode | string;
    }
    export namespace SearchVocabulariesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchVocabulariesRequest) => any;
    }
    /**
        * <p>Contains summary information about the custom vocabulary.</p>
        */
    export interface VocabularySummary {
            /**
                * <p>A unique name of the custom vocabulary.</p>
                */
            Name: string | undefined;
            /**
                * <p>The identifier of the custom vocabulary.</p>
                */
            Id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the custom vocabulary.</p>
                */
            Arn: string | undefined;
            /**
                * <p>The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see
                * <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a>
                *          </p>
                */
            LanguageCode: VocabularyLanguageCode | string | undefined;
            /**
                * <p>The current state of the custom vocabulary.</p>
                */
            State: VocabularyState | string | undefined;
            /**
                * <p>The timestamp when the custom vocabulary was last modified.</p>
                */
            LastModifiedTime: Date | undefined;
            /**
                * <p>The reason why the custom vocabulary was not created.</p>
                */
            FailureReason?: string;
    }
    export namespace VocabularySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VocabularySummary) => any;
    }
    export interface SearchVocabulariesResponse {
            /**
                * <p>The list of the available custom vocabularies.</p>
                */
            VocabularySummaryList?: VocabularySummary[];
            /**
                * <p>If there are additional results, this is the token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace SearchVocabulariesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchVocabulariesResponse) => any;
    }
    /**
        * <p>A chat message.</p>
        */
    export interface ChatMessage {
            /**
                * <p>The type of the content. Supported types are <code>text/plain</code>.</p>
                */
            ContentType: string | undefined;
            /**
                * <p>The content of the chat message.</p>
                */
            Content: string | undefined;
    }
    export namespace ChatMessage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChatMessage) => any;
    }
    /**
        * <p>The customer's details.</p>
        */
    export interface ParticipantDetails {
            /**
                * <p>Display name of the participant.</p>
                */
            DisplayName: string | undefined;
    }
    export namespace ParticipantDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ParticipantDetails) => any;
    }
    export interface StartChatContactRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow for initiating the chat.
                *    To
                *    see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the
                *    contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of
                *    the ARN, shown here in bold: </p>
                *          <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b>
                *          </p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect
                *    attributes. They can be accessed in contact flows just like any other contact attributes. </p>
                *          <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys
                *    can include only alphanumeric, dash, and underscore characters.</p>
                */
            Attributes?: Record<string, string>;
            /**
                * <p>Information identifying the participant.</p>
                */
            ParticipantDetails: ParticipantDetails | undefined;
            /**
                * <p>The initial message to be sent to the newly created chat.</p>
                */
            InitialMessage?: ChatMessage;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *    request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The total duration of the newly started chat session. If not specified, the chat session
                *    duration defaults to 25 hour. The minumum configurable time is 60 minutes. The maximum
                *    configurable time is 10,080 minutes (7 days).</p>
                */
            ChatDurationInMinutes?: number;
            /**
                * <p>The supported chat message content types. Content types can be text/plain or both text/plain
                *    and text/markdown.</p>
                */
            SupportedMessagingContentTypes?: string[];
    }
    export namespace StartChatContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartChatContactRequest) => any;
    }
    export interface StartChatContactResponse {
            /**
                * <p>The identifier of this contact within the Amazon Connect instance. </p>
                */
            ContactId?: string;
            /**
                * <p>The identifier for a chat participant. The participantId for a chat participant is the same
                *    throughout the chat lifecycle.</p>
                */
            ParticipantId?: string;
            /**
                * <p>The token used by the chat participant to call <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a>. The participant token is valid for the lifetime of a chat
                *    participant.</p>
                */
            ParticipantToken?: string;
    }
    export namespace StartChatContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartChatContactResponse) => any;
    }
    export enum VoiceRecordingTrack {
            ALL = "ALL",
            FROM_AGENT = "FROM_AGENT",
            TO_AGENT = "TO_AGENT"
    }
    /**
        * <p>Contains information about the recording configuration settings.</p>
        */
    export interface VoiceRecordingConfiguration {
            /**
                * <p>Identifies which track is being recorded.</p>
                */
            VoiceRecordingTrack?: VoiceRecordingTrack | string;
    }
    export namespace VoiceRecordingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VoiceRecordingConfiguration) => any;
    }
    export interface StartContactRecordingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            InitialContactId: string | undefined;
            /**
                * <p>The person being recorded.</p>
                */
            VoiceRecordingConfiguration: VoiceRecordingConfiguration | undefined;
    }
    export namespace StartContactRecordingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartContactRecordingRequest) => any;
    }
    export interface StartContactRecordingResponse {
    }
    export namespace StartContactRecordingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartContactRecordingResponse) => any;
    }
    /**
        * <p>The streaming configuration, such as the Amazon SNS streaming endpoint.</p>
        */
    export interface ChatStreamingConfiguration {
            /**
                * <p>The Amazon Resource Name (ARN) of the standard Amazon SNS topic. The Amazon Resource Name (ARN) of the streaming endpoint that is used
                *    to publish real-time message streaming for chat conversations.</p>
                */
            StreamingEndpointArn: string | undefined;
    }
    export namespace ChatStreamingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChatStreamingConfiguration) => any;
    }
    export interface StartContactStreamingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The streaming configuration, such as the Amazon SNS streaming endpoint.</p>
                */
            ChatStreamingConfiguration: ChatStreamingConfiguration | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace StartContactStreamingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartContactStreamingRequest) => any;
    }
    export interface StartContactStreamingResponse {
            /**
                * <p>The identifier of the streaming configuration enabled. </p>
                */
            StreamingId: string | undefined;
    }
    export namespace StartContactStreamingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartContactStreamingResponse) => any;
    }
    /**
        * <p>Outbound calls to the destination number are not allowed.</p>
        */
    export class DestinationNotAllowedException extends __BaseException {
            readonly name: "DestinationNotAllowedException";
            readonly $fault: "client";
            /**
                * <p>The message about the outbound calls.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DestinationNotAllowedException, __BaseException>);
    }
    /**
        * <p>The contact is not permitted.</p>
        */
    export class OutboundContactNotPermittedException extends __BaseException {
            readonly name: "OutboundContactNotPermittedException";
            readonly $fault: "client";
            /**
                * <p>The message about the contact.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OutboundContactNotPermittedException, __BaseException>);
    }
    /**
        * <p>Configuration of the answering machine detection.</p>
        */
    export interface AnswerMachineDetectionConfig {
            /**
                * <p>The flag to indicate if answer machine detection analysis needs to be performed for a voice
                *    call. If set to <code>true</code>, <code>TrafficType</code> must be set as <code>CAMPAIGN</code>.
                *   </p>
                */
            EnableAnswerMachineDetection?: boolean;
            /**
                * <p>Wait for the answering machine prompt.</p>
                */
            AwaitAnswerMachinePrompt?: boolean;
    }
    export namespace AnswerMachineDetectionConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AnswerMachineDetectionConfig) => any;
    }
    export enum TrafficType {
            CAMPAIGN = "CAMPAIGN",
            GENERAL = "GENERAL"
    }
    export interface StartOutboundVoiceContactRequest {
            /**
                * <p>The phone number of the customer, in E.164 format.</p>
                */
            DestinationPhoneNumber: string | undefined;
            /**
                * <p>The
                *    identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect
                *    console user interface, on the navigation menu go to <b>Routing</b>,
                *     <b>Contact Flows</b>. Choose the contact flow. On the contact flow
                *    page, under the name of the contact flow, choose <b>Show additional flow
                *     information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p>
                *          <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b>
                *          </p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *    request. The token is valid for 7 days after creation. If a contact is already started, the
                *    contact ID is returned.
                *    </p>
                */
            ClientToken?: string;
            /**
                * <p>The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify
                *    a source phone number, you must specify a queue.</p>
                */
            SourcePhoneNumber?: string;
            /**
                * <p>The queue for the call. If you specify a queue, the phone displayed for caller ID is the
                *    phone number specified in the queue. If you do not specify a queue, the queue defined in the
                *    contact flow is used. If you do not specify a queue, you must specify a source phone
                *    number.</p>
                */
            QueueId?: string;
            /**
                * <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect
                *    attributes, and can be accessed in contact flows just like any other contact attributes.</p>
                *          <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys
                *    can include only alphanumeric, dash, and underscore characters.</p>
                */
            Attributes?: Record<string, string>;
            /**
                * <p>Configuration of the answering machine detection for this outbound call. </p>
                */
            AnswerMachineDetectionConfig?: AnswerMachineDetectionConfig;
            /**
                * <p>The campaign identifier of the outbound communication.</p>
                */
            CampaignId?: string;
            /**
                * <p>Denotes the class of traffic. Calls with different traffic types are handled differently by
                *    Amazon Connect. The default value is <code>GENERAL</code>. Use <code>CAMPAIGN</code> if
                *     <code>EnableAnswerMachineDetection</code> is set to <code>true</code>. For all other cases, use
                *     <code>GENERAL</code>. </p>
                */
            TrafficType?: TrafficType | string;
    }
    export namespace StartOutboundVoiceContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartOutboundVoiceContactRequest) => any;
    }
    export interface StartOutboundVoiceContactResponse {
            /**
                * <p>The identifier of this contact within the Amazon Connect instance.</p>
                */
            ContactId?: string;
    }
    export namespace StartOutboundVoiceContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartOutboundVoiceContactResponse) => any;
    }
    /**
        * <p>Well-formed data on a contact, used by agents to complete a contact request. You can have up
        *    to 4,096 UTF-8 bytes across all references for a contact.</p>
        */
    export interface Reference {
            /**
                * <p>A valid value for the reference. For example, for a URL reference, a formatted URL that is
                *    displayed to an agent in the Contact Control Panel (CCP).</p>
                */
            Value: string | undefined;
            /**
                * <p>The type of the reference.</p>
                */
            Type: ReferenceType | string | undefined;
    }
    export namespace Reference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Reference) => any;
    }
    export interface StartTaskContactRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the previous chat, voice, or task contact. </p>
                */
            PreviousContactId?: string;
            /**
                * <p>The identifier of the contact flow for initiating the tasks. To see the ContactFlowId in the
                *    Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On
                *    the contact flow page, under the name of the contact flow, choose <b>Show
                *     additional flow information</b>. The ContactFlowId is the last part of the ARN, shown
                *    here in bold: </p>
                *          <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b>
                *          </p>
                */
            ContactFlowId?: string;
            /**
                * <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect
                *    attributes, and can be accessed in contact flows just like any other contact attributes.</p>
                *          <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys
                *    can include only alphanumeric, dash, and underscore characters.</p>
                */
            Attributes?: Record<string, string>;
            /**
                * <p>The name of a task that is shown to an agent in the Contact Control Panel (CCP).</p>
                */
            Name: string | undefined;
            /**
                * <p>A formatted URL that is shown to an agent in the Contact Control Panel (CCP).</p>
                */
            References?: Record<string, Reference>;
            /**
                * <p>A description of the task that is shown to an agent in the Contact Control Panel
                *    (CCP).</p>
                */
            Description?: string;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *    request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The timestamp, in Unix Epoch seconds format, at which to start running the inbound contact flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. </p>
                */
            ScheduledTime?: Date;
            /**
                * <p>A unique identifier for the task template.</p>
                */
            TaskTemplateId?: string;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId?: string;
    }
    export namespace StartTaskContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartTaskContactRequest) => any;
    }
    export interface StartTaskContactResponse {
            /**
                * <p>The identifier of this contact within the Amazon Connect instance.</p>
                */
            ContactId?: string;
    }
    export namespace StartTaskContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartTaskContactResponse) => any;
    }
    /**
        * <p>The contact with the specified ID is not active or does not exist.</p>
        */
    export class ContactNotFoundException extends __BaseException {
            readonly name: "ContactNotFoundException";
            readonly $fault: "client";
            /**
                * <p>The message.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ContactNotFoundException, __BaseException>);
    }
    export interface StopContactRequest {
            /**
                * <p>The ID of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace StopContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactRequest) => any;
    }
    export interface StopContactResponse {
    }
    export namespace StopContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactResponse) => any;
    }
    export interface StopContactRecordingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            InitialContactId: string | undefined;
    }
    export namespace StopContactRecordingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactRecordingRequest) => any;
    }
    export interface StopContactRecordingResponse {
    }
    export namespace StopContactRecordingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactRecordingResponse) => any;
    }
    export interface StopContactStreamingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact that is associated with
                *    the first interaction with the contact center.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the streaming configuration enabled. </p>
                */
            StreamingId: string | undefined;
    }
    export namespace StopContactStreamingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactStreamingRequest) => any;
    }
    export interface StopContactStreamingResponse {
    }
    export namespace StopContactStreamingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopContactStreamingResponse) => any;
    }
    export interface SuspendContactRecordingRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            InitialContactId: string | undefined;
    }
    export namespace SuspendContactRecordingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuspendContactRecordingRequest) => any;
    }
    export interface SuspendContactRecordingResponse {
    }
    export namespace SuspendContactRecordingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuspendContactRecordingResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p>
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TransferContactRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact in this instance of Amazon Connect. </p>
                */
            ContactId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId?: string;
            /**
                * <p>The identifier for the user.</p>
                */
            UserId?: string;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace TransferContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransferContactRequest) => any;
    }
    export interface TransferContactResponse {
            /**
                * <p>The identifier of the contact in this instance of Amazon Connect. </p>
                */
            ContactId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the contact.</p>
                */
            ContactArn?: string;
    }
    export namespace TransferContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransferContactResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The tag keys.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UpdateAgentStatusRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the agent status.</p>
                */
            AgentStatusId: string | undefined;
            /**
                * <p>The name of the agent status.</p>
                */
            Name?: string;
            /**
                * <p>The description of the agent status.</p>
                */
            Description?: string;
            /**
                * <p>The state of the agent status.</p>
                */
            State?: AgentStatusState | string;
            /**
                * <p>The display order of the agent status.</p>
                */
            DisplayOrder?: number;
            /**
                * <p>A number indicating the reset order of the agent status.</p>
                */
            ResetOrderNumber?: boolean;
    }
    export namespace UpdateAgentStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAgentStatusRequest) => any;
    }
    export interface UpdateContactRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with your contact center.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The name of the contact.</p>
                */
            Name?: string;
            /**
                * <p>The description of the contact.</p>
                */
            Description?: string;
            /**
                * <p>Well-formed data on contact, shown to agents on Contact Control Panel (CCP).</p>
                */
            References?: Record<string, Reference>;
    }
    export namespace UpdateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactRequest) => any;
    }
    export interface UpdateContactResponse {
    }
    export namespace UpdateContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactResponse) => any;
    }
    export interface UpdateContactAttributesRequest {
            /**
                * <p>The identifier of the contact. This is the identifier of the contact associated with the
                *    first interaction with the contact center.</p>
                */
            InitialContactId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other
                *    contact attributes.</p>
                *          <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys
                *    can include only alphanumeric, dash, and underscore characters.</p>
                */
            Attributes: Record<string, string> | undefined;
    }
    export namespace UpdateContactAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactAttributesRequest) => any;
    }
    export interface UpdateContactAttributesResponse {
    }
    export namespace UpdateContactAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactAttributesResponse) => any;
    }
    export interface UpdateContactFlowContentRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>The JSON string that represents contact flow’s content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html">Example contact
                *     flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>.
                *   </p>
                */
            Content: string | undefined;
    }
    export namespace UpdateContactFlowContentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowContentRequest) => any;
    }
    export interface UpdateContactFlowMetadataRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>TThe name of the contact flow.</p>
                */
            Name?: string;
            /**
                * <p>The description of the contact flow.</p>
                */
            Description?: string;
            /**
                * <p>The state of contact flow.</p>
                */
            ContactFlowState?: ContactFlowState | string;
    }
    export namespace UpdateContactFlowMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowMetadataRequest) => any;
    }
    export interface UpdateContactFlowModuleContentRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            ContactFlowModuleId: string | undefined;
            /**
                * <p>The content of the contact flow module.</p>
                */
            Content: string | undefined;
    }
    export namespace UpdateContactFlowModuleContentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowModuleContentRequest) => any;
    }
    export interface UpdateContactFlowModuleContentResponse {
    }
    export namespace UpdateContactFlowModuleContentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowModuleContentResponse) => any;
    }
    export interface UpdateContactFlowModuleMetadataRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow module.</p>
                */
            ContactFlowModuleId: string | undefined;
            /**
                * <p>The name of the contact flow module.</p>
                */
            Name?: string;
            /**
                * <p>The description of the contact flow module.</p>
                */
            Description?: string;
            /**
                * <p>The state of contact flow module.</p>
                */
            State?: ContactFlowModuleState | string;
    }
    export namespace UpdateContactFlowModuleMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowModuleMetadataRequest) => any;
    }
    export interface UpdateContactFlowModuleMetadataResponse {
    }
    export namespace UpdateContactFlowModuleMetadataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowModuleMetadataResponse) => any;
    }
    export interface UpdateContactFlowNameRequest {
            /**
                * <p>The identifier of the Amazon Connect instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact flow.</p>
                */
            ContactFlowId: string | undefined;
            /**
                * <p>The name of the contact flow.</p>
                */
            Name?: string;
            /**
                * <p>The description of the contact flow.</p>
                */
            Description?: string;
    }
    export namespace UpdateContactFlowNameRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactFlowNameRequest) => any;
    }
    export interface UpdateContactScheduleRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the contact.</p>
                */
            ContactId: string | undefined;
            /**
                * <p>The timestamp, in Unix Epoch seconds format, at which to start running the inbound contact flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. </p>
                */
            ScheduledTime: Date | undefined;
    }
    export namespace UpdateContactScheduleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactScheduleRequest) => any;
    }
    export interface UpdateContactScheduleResponse {
    }
    export namespace UpdateContactScheduleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactScheduleResponse) => any;
    }
    export interface UpdateHoursOfOperationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the hours of operation.</p>
                */
            HoursOfOperationId: string | undefined;
            /**
                * <p>The name of the hours of operation.</p>
                */
            Name?: string;
            /**
                * <p>The description of the hours of operation.</p>
                */
            Description?: string;
            /**
                * <p>The time zone of the hours of operation.</p>
                */
            TimeZone?: string;
            /**
                * <p>Configuration information of the hours of operation.</p>
                */
            Config?: HoursOfOperationConfig[];
    }
    export namespace UpdateHoursOfOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateHoursOfOperationRequest) => any;
    }
    export interface UpdateInstanceAttributeRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The type of attribute.</p>
                *          <note>
                *             <p>Only allowlisted customers can consume USE_CUSTOM_TTS_VOICES. To access this feature,
                *     contact Amazon Web Services Support for allowlisting.</p>
                *          </note>
                */
            AttributeType: InstanceAttributeType | string | undefined;
            /**
                * <p>The value for the attribute. Maximum character limit is 100. </p>
                */
            Value: string | undefined;
    }
    export namespace UpdateInstanceAttributeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateInstanceAttributeRequest) => any;
    }
    export interface UpdateInstanceStorageConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
                */
            AssociationId: string | undefined;
            /**
                * <p>A valid resource type.</p>
                */
            ResourceType: InstanceStorageResourceType | string | undefined;
            /**
                * <p>The storage configuration for the instance.</p>
                */
            StorageConfig: InstanceStorageConfig | undefined;
    }
    export namespace UpdateInstanceStorageConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateInstanceStorageConfigRequest) => any;
    }
    export interface UpdatePhoneNumberRequest {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.</p>
                */
            TargetArn: string | undefined;
            /**
                * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
                *             request.</p>
                */
            ClientToken?: string;
    }
    export namespace UpdatePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberRequest) => any;
    }
    export interface UpdatePhoneNumberResponse {
            /**
                * <p>A unique identifier for the phone number.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the phone number.</p>
                */
            PhoneNumberArn?: string;
    }
    export namespace UpdatePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberResponse) => any;
    }
    export interface UpdateQueueHoursOfOperationRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The identifier for the hours of operation.</p>
                */
            HoursOfOperationId: string | undefined;
    }
    export namespace UpdateQueueHoursOfOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQueueHoursOfOperationRequest) => any;
    }
    export interface UpdateQueueMaxContactsRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The maximum number of contacts that can be in the queue before it is considered full.</p>
                */
            MaxContacts?: number;
    }
    export namespace UpdateQueueMaxContactsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQueueMaxContactsRequest) => any;
    }
    export interface UpdateQueueNameRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The name of the queue.</p>
                */
            Name?: string;
            /**
                * <p>The description of the queue.</p>
                */
            Description?: string;
    }
    export namespace UpdateQueueNameRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQueueNameRequest) => any;
    }
    export interface UpdateQueueOutboundCallerConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The outbound caller ID name, number, and outbound whisper flow.</p>
                */
            OutboundCallerConfig: OutboundCallerConfig | undefined;
    }
    export namespace UpdateQueueOutboundCallerConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQueueOutboundCallerConfigRequest) => any;
    }
    export interface UpdateQueueStatusRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the queue.</p>
                */
            QueueId: string | undefined;
            /**
                * <p>The status of the queue.</p>
                */
            Status: QueueStatus | string | undefined;
    }
    export namespace UpdateQueueStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQueueStatusRequest) => any;
    }
    export interface UpdateQuickConnectConfigRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId: string | undefined;
            /**
                * <p>Information about the configuration settings for the quick connect.</p>
                */
            QuickConnectConfig: QuickConnectConfig | undefined;
    }
    export namespace UpdateQuickConnectConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQuickConnectConfigRequest) => any;
    }
    export interface UpdateQuickConnectNameRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier for the quick connect.</p>
                */
            QuickConnectId: string | undefined;
            /**
                * <p>The name of the quick connect.</p>
                */
            Name?: string;
            /**
                * <p>The description of the quick connect.</p>
                */
            Description?: string;
    }
    export namespace UpdateQuickConnectNameRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateQuickConnectNameRequest) => any;
    }
    export interface UpdateRoutingProfileConcurrencyRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The channels that agents can handle in the Contact Control Panel (CCP).</p>
                */
            MediaConcurrencies: MediaConcurrency[] | undefined;
    }
    export namespace UpdateRoutingProfileConcurrencyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoutingProfileConcurrencyRequest) => any;
    }
    export interface UpdateRoutingProfileDefaultOutboundQueueRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The identifier for the default outbound queue.</p>
                */
            DefaultOutboundQueueId: string | undefined;
    }
    export namespace UpdateRoutingProfileDefaultOutboundQueueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoutingProfileDefaultOutboundQueueRequest) => any;
    }
    export interface UpdateRoutingProfileNameRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The name of the routing profile. Must not be more than 127 characters.</p>
                */
            Name?: string;
            /**
                * <p>The description of the routing profile. Must not be more than 250 characters.</p>
                */
            Description?: string;
    }
    export namespace UpdateRoutingProfileNameRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoutingProfileNameRequest) => any;
    }
    export interface UpdateRoutingProfileQueuesRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The identifier of the routing profile.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The queues to be updated for this routing profile.
                *    Queues must first be associated to the routing
                *    profile. You can do this using AssociateRoutingProfileQueues.</p>
                */
            QueueConfigs: RoutingProfileQueueConfig[] | undefined;
    }
    export namespace UpdateRoutingProfileQueuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoutingProfileQueuesRequest) => any;
    }
    export interface UpdateSecurityProfileRequest {
            /**
                * <p>The description of the security profile.</p>
                */
            Description?: string;
            /**
                * <p>The permissions granted to a security profile.</p>
                */
            Permissions?: string[];
            /**
                * <p>The identifier for the security profle.</p>
                */
            SecurityProfileId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateSecurityProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSecurityProfileRequest) => any;
    }
    export interface UpdateTaskTemplateRequest {
            /**
                * <p>A unique identifier for the task template.</p>
                */
            TaskTemplateId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
            /**
                * <p>The name of the task template.</p>
                */
            Name?: string;
            /**
                * <p>The description of the task template.</p>
                */
            Description?: string;
            /**
                * <p>The identifier of the flow that runs by default when a task is created by referencing this template.</p>
                */
            ContactFlowId?: string;
            /**
                * <p>Constraints that are applicable to the fields listed.</p>
                */
            Constraints?: TaskTemplateConstraints;
            /**
                * <p>The default values for fields when a task is created by referencing this template.</p>
                */
            Defaults?: TaskTemplateDefaults;
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>Fields that are part of the template.</p>
                */
            Fields?: TaskTemplateField[];
    }
    export namespace UpdateTaskTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTaskTemplateRequest) => any;
    }
    export interface UpdateTaskTemplateResponse {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId?: string;
            /**
                * <p>The identifier of the task template resource.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the task template resource.</p>
                */
            Arn?: string;
            /**
                * <p>The name of the task template.</p>
                */
            Name?: string;
            /**
                * <p>The description of the task template.</p>
                */
            Description?: string;
            /**
                * <p>The identifier of the flow that runs by default when a task is created by referencing this template.</p>
                */
            ContactFlowId?: string;
            /**
                * <p>Constraints that are applicable to the fields listed.</p>
                */
            Constraints?: TaskTemplateConstraints;
            /**
                * <p>The default values for fields when a task is created by referencing this template.</p>
                */
            Defaults?: TaskTemplateDefaults;
            /**
                * <p>Fields that are part of the template.</p>
                */
            Fields?: TaskTemplateField[];
            /**
                * <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it.
                * Tasks can only be created from <code>ACTIVE</code> templates.
                * If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</p>
                */
            Status?: TaskTemplateStatus | string;
            /**
                * <p>The timestamp when the task template was last modified.</p>
                */
            LastModifiedTime?: Date;
            /**
                * <p>The timestamp when the task template was created.</p>
                */
            CreatedTime?: Date;
    }
    export namespace UpdateTaskTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTaskTemplateResponse) => any;
    }
    export interface UpdateUserHierarchyRequest {
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            HierarchyGroupId?: string;
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserHierarchyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserHierarchyRequest) => any;
    }
    export interface UpdateUserHierarchyGroupNameRequest {
            /**
                * <p>The name of the hierarchy group. Must not be more than 100 characters.</p>
                */
            Name: string | undefined;
            /**
                * <p>The identifier of the hierarchy group.</p>
                */
            HierarchyGroupId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserHierarchyGroupNameRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserHierarchyGroupNameRequest) => any;
    }
    /**
        * <p>Contains information about the hierarchy level to update.</p>
        */
    export interface HierarchyLevelUpdate {
            /**
                * <p>The name of the user hierarchy level. Must not be more than 50 characters.</p>
                */
            Name: string | undefined;
    }
    export namespace HierarchyLevelUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyLevelUpdate) => any;
    }
    /**
        * <p>Contains information about the level hierarchy to update.</p>
        */
    export interface HierarchyStructureUpdate {
            /**
                * <p>The
                *    update
                *    for level one.</p>
                */
            LevelOne?: HierarchyLevelUpdate;
            /**
                * <p>The update for level two.</p>
                */
            LevelTwo?: HierarchyLevelUpdate;
            /**
                * <p>The update for level three.</p>
                */
            LevelThree?: HierarchyLevelUpdate;
            /**
                * <p>The update for level four.</p>
                */
            LevelFour?: HierarchyLevelUpdate;
            /**
                * <p>The update for level five.</p>
                */
            LevelFive?: HierarchyLevelUpdate;
    }
    export namespace HierarchyStructureUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HierarchyStructureUpdate) => any;
    }
    export interface UpdateUserHierarchyStructureRequest {
            /**
                * <p>The hierarchy levels to update.</p>
                */
            HierarchyStructure: HierarchyStructureUpdate | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserHierarchyStructureRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserHierarchyStructureRequest) => any;
    }
    export interface UpdateUserIdentityInfoRequest {
            /**
                * <p>The identity information for the user.</p>
                */
            IdentityInfo: UserIdentityInfo | undefined;
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserIdentityInfoRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserIdentityInfoRequest) => any;
    }
    export interface UpdateUserPhoneConfigRequest {
            /**
                * <p>Information about phone configuration settings for the user.</p>
                */
            PhoneConfig: UserPhoneConfig | undefined;
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserPhoneConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserPhoneConfigRequest) => any;
    }
    export interface UpdateUserRoutingProfileRequest {
            /**
                * <p>The identifier of the routing profile for the user.</p>
                */
            RoutingProfileId: string | undefined;
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserRoutingProfileRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserRoutingProfileRequest) => any;
    }
    export interface UpdateUserSecurityProfilesRequest {
            /**
                * <p>The identifiers of the security profiles for the user.</p>
                */
            SecurityProfileIds: string[] | undefined;
            /**
                * <p>The identifier of the user account.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId: string | undefined;
    }
    export namespace UpdateUserSecurityProfilesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserSecurityProfilesRequest) => any;
    }
    /**
        * <p>The search criteria to be used to return users.</p>
        */
    export interface UserSearchCriteria {
            /**
                * <p>A list of conditions which would be applied together with an <code>OR</code>
                *    condition.</p>
                */
            OrConditions?: UserSearchCriteria[];
            /**
                * <p>A list of conditions which would be applied together with an <code>AND</code> condition.
                *   </p>
                */
            AndConditions?: UserSearchCriteria[];
            /**
                * <p>A leaf node condition which can be used to specify a string condition.</p>
                */
            StringCondition?: StringCondition;
            /**
                * <p>A leaf node condition which can be used to specify a hierarchy group condition.</p>
                */
            HierarchyGroupCondition?: HierarchyGroupCondition;
    }
    export namespace UserSearchCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserSearchCriteria) => any;
    }
    export interface SearchUsersRequest {
            /**
                * <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
                */
            InstanceId?: string;
            /**
                * <p>The token for the next set of results. Use the value returned in the previous
                * response in the next request to retrieve the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return per page.</p>
                */
            MaxResults?: number;
            /**
                * <p>Filters to be applied to search results.</p>
                */
            SearchFilter?: UserSearchFilter;
            /**
                * <p>The search criteria to be used to return users.</p>
                */
            SearchCriteria?: UserSearchCriteria;
    }
    export namespace SearchUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchUsersRequest) => any;
    }
}

declare module '@aws-sdk/client-connect/node_modules/@aws-sdk/client-connect/dist-types/models/ConnectServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Connect service.
        */
    export class ConnectServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

