// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-health' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { DescribeAffectedAccountsForOrganizationCommandInput, DescribeAffectedAccountsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedAccountsForOrganizationCommand";
    import { DescribeAffectedEntitiesCommandInput, DescribeAffectedEntitiesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesCommand";
    import { DescribeAffectedEntitiesForOrganizationCommandInput, DescribeAffectedEntitiesForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesForOrganizationCommand";
    import { DescribeEntityAggregatesCommandInput, DescribeEntityAggregatesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEntityAggregatesCommand";
    import { DescribeEventAggregatesCommandInput, DescribeEventAggregatesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventAggregatesCommand";
    import { DescribeEventDetailsCommandInput, DescribeEventDetailsCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsCommand";
    import { DescribeEventDetailsForOrganizationCommandInput, DescribeEventDetailsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsForOrganizationCommand";
    import { DescribeEventsCommandInput, DescribeEventsCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsCommand";
    import { DescribeEventsForOrganizationCommandInput, DescribeEventsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsForOrganizationCommand";
    import { DescribeEventTypesCommandInput, DescribeEventTypesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventTypesCommand";
    import { DescribeHealthServiceStatusForOrganizationCommandInput, DescribeHealthServiceStatusForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeHealthServiceStatusForOrganizationCommand";
    import { DisableHealthServiceAccessForOrganizationCommandInput, DisableHealthServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DisableHealthServiceAccessForOrganizationCommand";
    import { EnableHealthServiceAccessForOrganizationCommandInput, EnableHealthServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/EnableHealthServiceAccessForOrganizationCommand";
    import { HealthClient } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    /**
        * <fullname>Health</fullname>
        *
        *          <p>The Health API provides programmatic access to the Health information that
        *          appears in the <a href="https://phd.aws.amazon.com/phd/home#/">Personal Health Dashboard</a>. You
        *          can use the API operations to get information about events that might affect your Amazon Web Services services and resources.</p>
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a> to use the Health
        *                   API. If you call the Health API from an Amazon Web Services account that
        *                   doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a
        *                      <code>SubscriptionRequiredException</code> error.</p>
        *                </li>
        *                <li>
        *                   <p>You can use the Health endpoint health.us-east-1.amazonaws.com (HTTPS) to
        *                   call the Health API operations. Health supports a multi-Region
        *                   application architecture and has two regional endpoints in an active-passive
        *                   configuration. You can use the high availability endpoint example to determine
        *                   which Amazon Web Services Region is active, so that you can get the latest information from the
        *                   API. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/health-api.html">Accessing the Health API</a> in the
        *                      <i>Health User Guide</i>.</p>
        *                </li>
        *             </ul>
        *          </note>
        *          <p>For authentication of requests, Health uses the <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing
        *             Process</a>.</p>
        *          <p>If your Amazon Web Services account is part of Organizations, you can use the Health organizational
        *          view feature. This feature provides a centralized view of Health events across all
        *          accounts in your organization. You can aggregate Health events in real time to
        *          identify accounts in your organization that are affected by an operational event or get
        *          notified of security vulnerabilities. Use the organizational view API operations to enable
        *          this feature and return event information. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
        *             Health events</a> in the <i>Health User Guide</i>.</p>
        *          <note>
        *             <p>When you use the Health API operations to return Health events, see the
        *             following recommendations:</p>
        *             <ul>
        *                <li>
        *                   <p>Use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode">eventScopeCode</a> parameter to specify whether to return Health
        *                   events that are public or account-specific.</p>
        *                </li>
        *                <li>
        *                   <p>Use pagination to view all events from the response. For example, if you call
        *                   the <code>DescribeEventsForOrganization</code> operation to get all events in your
        *                   organization, you might receive several page results. Specify the
        *                      <code>nextToken</code> in the next request to return more results.</p>
        *                </li>
        *             </ul>
        *          </note>
        */
    export class Health extends HealthClient {
            /**
                * <p>Returns a list of accounts in the organization from Organizations that are affected by the
                *          provided event. For more information about the different types of Health events, see
                *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>. </p>
                *          <p>Before you can call this operation, you must first enable Health to work with
                *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
                *          management account.</p>
                *          <note>
                *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *          </note>
                */
            describeAffectedAccountsForOrganization(args: DescribeAffectedAccountsForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAffectedAccountsForOrganizationCommandOutput>;
            describeAffectedAccountsForOrganization(args: DescribeAffectedAccountsForOrganizationCommandInput, cb: (err: any, data?: DescribeAffectedAccountsForOrganizationCommandOutput) => void): void;
            describeAffectedAccountsForOrganization(args: DescribeAffectedAccountsForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAffectedAccountsForOrganizationCommandOutput) => void): void;
            /**
                * <p>Returns a list of entities that have been affected by the specified events, based on the
                *          specified filter criteria. Entities can refer to individual customer resources, groups of
                *          customer resources, or any other construct, depending on the Amazon Web Services service. Events that
                *          have impact beyond that of the affected entities, or where the extent of impact is unknown,
                *          include at least one entity indicating this.</p>
                *          <p>At least one event ARN is required.</p>
                *
                *          <note>
                *             <ul>
                *                <li>
                *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *                </li>
                *                <li>
                *                   <p>This operation supports resource-level permissions. You can use this operation to allow or deny access to specific Health events. For more
                *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
                *                </li>
                *             </ul>
                *          </note>
                */
            describeAffectedEntities(args: DescribeAffectedEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAffectedEntitiesCommandOutput>;
            describeAffectedEntities(args: DescribeAffectedEntitiesCommandInput, cb: (err: any, data?: DescribeAffectedEntitiesCommandOutput) => void): void;
            describeAffectedEntities(args: DescribeAffectedEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAffectedEntitiesCommandOutput) => void): void;
            /**
                * <p>Returns a list of entities that have been affected by one or more events for one or more
                *          accounts in your organization in Organizations, based on the filter criteria. Entities can refer
                *          to individual customer resources, groups of customer resources, or any other construct,
                *          depending on the Amazon Web Services service.</p>
                *          <p>At least one event Amazon Resource Name (ARN) and account ID are required.</p>
                *          <p>Before you can call this operation, you must first enable Health to work with
                *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
                *          management account.</p>
                *          <note>
                *             <ul>
                *                <li>
                *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *                </li>
                *                <li>
                *                   <p>This operation doesn't support resource-level permissions. You can't use this operation to allow or deny access to specific Health events. For more
                *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
                *                </li>
                *             </ul>
                *
                *          </note>
                */
            describeAffectedEntitiesForOrganization(args: DescribeAffectedEntitiesForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAffectedEntitiesForOrganizationCommandOutput>;
            describeAffectedEntitiesForOrganization(args: DescribeAffectedEntitiesForOrganizationCommandInput, cb: (err: any, data?: DescribeAffectedEntitiesForOrganizationCommandOutput) => void): void;
            describeAffectedEntitiesForOrganization(args: DescribeAffectedEntitiesForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAffectedEntitiesForOrganizationCommandOutput) => void): void;
            /**
                * <p>Returns the number of entities that are affected by each of the specified events.</p>
                */
            describeEntityAggregates(args: DescribeEntityAggregatesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEntityAggregatesCommandOutput>;
            describeEntityAggregates(args: DescribeEntityAggregatesCommandInput, cb: (err: any, data?: DescribeEntityAggregatesCommandOutput) => void): void;
            describeEntityAggregates(args: DescribeEntityAggregatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEntityAggregatesCommandOutput) => void): void;
            /**
                * <p>Returns the number of events of each event type (issue, scheduled change, and account
                *          notification). If no filter is specified, the counts of all events in each category are
                *          returned.</p>
                *          <note>
                *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *          </note>
                */
            describeEventAggregates(args: DescribeEventAggregatesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventAggregatesCommandOutput>;
            describeEventAggregates(args: DescribeEventAggregatesCommandInput, cb: (err: any, data?: DescribeEventAggregatesCommandOutput) => void): void;
            describeEventAggregates(args: DescribeEventAggregatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventAggregatesCommandOutput) => void): void;
            /**
                * <p>Returns detailed information about one or more specified events. Information includes
                *          standard event data (Amazon Web Services Region, service, and so on, as returned by <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a>), a detailed event description, and possible additional metadata
                *          that depends upon the nature of the event. Affected entities are not included. To retrieve
                *          the entities, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html">DescribeAffectedEntities</a> operation.</p>
                *          <p>If a specified event can't be retrieved, an error message is returned for that
                *          event.</p>
                *          <note>
                *             <p>This operation supports resource-level permissions. You can use this operation to allow or deny access to specific Health events. For more
                *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
                *          </note>
                */
            describeEventDetails(args: DescribeEventDetailsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventDetailsCommandOutput>;
            describeEventDetails(args: DescribeEventDetailsCommandInput, cb: (err: any, data?: DescribeEventDetailsCommandOutput) => void): void;
            describeEventDetails(args: DescribeEventDetailsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventDetailsCommandOutput) => void): void;
            /**
                * <p>Returns detailed information about one or more specified events for one or more
                *          Amazon Web Services accounts in your organization. This information includes standard event data (such as
                *          the Amazon Web Services Region and service), an event description, and (depending on the event) possible
                *          metadata. This operation doesn't return affected entities, such as the resources related to
                *          the event. To return affected entities, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operation.</p>
                *          <note>
                *             <p>Before you can call this operation, you must first enable Health to work with
                *             Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
                *             management account.</p>
                *          </note>
                *          <p>When you call the <code>DescribeEventDetailsForOrganization</code> operation, specify
                *          the <code>organizationEventDetailFilters</code> object in the request. Depending on the
                *          Health event type, note the following differences:</p>
                *          <ul>
                *             <li>
                *                <p>To return event details for a public event, you must specify a null value for the
                *                   <code>awsAccountId</code> parameter. If you specify an account ID for a public
                *                event, Health returns an error message because public events aren't specific to
                *                an account.</p>
                *             </li>
                *             <li>
                *                <p>To return event details for an event that is specific to an account in your
                *                organization, you must specify the <code>awsAccountId</code> parameter in the
                *                request. If you don't specify an account ID, Health returns an error message
                *                because the event is specific to an account in your organization. </p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
                *
                *          <note>
                *             <p>This operation doesn't support resource-level permissions. You can't use this operation to allow or deny access to specific Health events. For more
                *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
                *          </note>
                */
            describeEventDetailsForOrganization(args: DescribeEventDetailsForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventDetailsForOrganizationCommandOutput>;
            describeEventDetailsForOrganization(args: DescribeEventDetailsForOrganizationCommandInput, cb: (err: any, data?: DescribeEventDetailsForOrganizationCommandOutput) => void): void;
            describeEventDetailsForOrganization(args: DescribeEventDetailsForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventDetailsForOrganizationCommandOutput) => void): void;
            /**
                * <p> Returns information about events that meet the specified filter criteria. Events are
                *          returned in a summary form and do not include the detailed description, any additional
                *          metadata that depends on the event type, or any affected resources. To retrieve that
                *          information, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html">DescribeAffectedEntities</a> operations.</p>
                *          <p>If no filter criteria are specified, all events are returned. Results are sorted by
                *             <code>lastModifiedTime</code>, starting with the most recent event.</p>
                *          <note>
                *             <ul>
                *                <li>
                *                   <p>When you call the <code>DescribeEvents</code> operation and specify an entity
                *                   for the <code>entityValues</code> parameter, Health might return public
                *                   events that aren't specific to that resource. For example, if you call
                *                      <code>DescribeEvents</code> and specify an ID for an Amazon Elastic Compute Cloud (Amazon EC2)
                *                   instance, Health might return events that aren't specific to that resource or
                *                   service. To get events that are specific to a service, use the
                *                      <code>services</code> parameter in the <code>filter</code> object. For more
                *                   information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
                *                </li>
                *                <li>
                *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *                </li>
                *             </ul>
                *          </note>
                */
            describeEvents(args: DescribeEventsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventsCommandOutput>;
            describeEvents(args: DescribeEventsCommandInput, cb: (err: any, data?: DescribeEventsCommandOutput) => void): void;
            describeEvents(args: DescribeEventsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventsCommandOutput) => void): void;
            /**
                * <p>Returns information about events across your organization in Organizations. You can use
                *             the<code>filters</code> parameter to specify the events that you want to return. Events
                *          are returned in a summary form and don't include the affected accounts, detailed
                *          description, any additional metadata that depends on the event type, or any affected
                *          resources. To retrieve that information, use the following operations:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedAccountsForOrganization.html">DescribeAffectedAccountsForOrganization</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a>
                *                </p>
                *             </li>
                *          </ul>
                *          <p>If you don't specify a <code>filter</code>, the
                *             <code>DescribeEventsForOrganizations</code> returns all events across your organization.
                *          Results are sorted by <code>lastModifiedTime</code>, starting with the most recent event. </p>
                *          <p>For more information about the different types of Health events, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
                *          <p>Before you can call this operation, you must first enable Health to work with
                *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
                *          management account.</p>
                *          <note>
                *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *          </note>
                */
            describeEventsForOrganization(args: DescribeEventsForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventsForOrganizationCommandOutput>;
            describeEventsForOrganization(args: DescribeEventsForOrganizationCommandInput, cb: (err: any, data?: DescribeEventsForOrganizationCommandOutput) => void): void;
            describeEventsForOrganization(args: DescribeEventsForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventsForOrganizationCommandOutput) => void): void;
            /**
                * <p>Returns the event types that meet the specified filter criteria. You can use this API
                *          operation to find information about the Health event, such as the category, Amazon Web Services
                *          service, and event code. The metadata for each event appears in the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventType.html">EventType</a> object. </p>
                *          <p>If you don't specify a filter criteria, the API operation returns all event types, in no
                *          particular order. </p>
                *          <note>
                *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
                *          </note>
                */
            describeEventTypes(args: DescribeEventTypesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventTypesCommandOutput>;
            describeEventTypes(args: DescribeEventTypesCommandInput, cb: (err: any, data?: DescribeEventTypesCommandOutput) => void): void;
            describeEventTypes(args: DescribeEventTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventTypesCommandOutput) => void): void;
            /**
                * <p>This operation provides status information on enabling or disabling Health to work
                *          with your organization. To call this operation, you must sign in as an IAM user, assume
                *          an IAM role, or sign in as the root user (not recommended) in the organization's
                *          management account.</p>
                */
            describeHealthServiceStatusForOrganization(args: DescribeHealthServiceStatusForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHealthServiceStatusForOrganizationCommandOutput>;
            describeHealthServiceStatusForOrganization(args: DescribeHealthServiceStatusForOrganizationCommandInput, cb: (err: any, data?: DescribeHealthServiceStatusForOrganizationCommandOutput) => void): void;
            describeHealthServiceStatusForOrganization(args: DescribeHealthServiceStatusForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHealthServiceStatusForOrganizationCommandOutput) => void): void;
            /**
                * <p>Disables Health from working with Organizations. To call this operation, you must sign
                *          in as an Identity and Access Management (IAM) user, assume an IAM role, or sign in as the root user (not
                *          recommended) in the organization's management account. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
                *             Health events</a> in the <i>Health User Guide</i>.</p>
                *          <p>This operation doesn't remove the service-linked role from the management account in your
                *          organization. You must use the IAM console, API, or Command Line Interface (CLI) to remove the
                *          service-linked role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html#delete-service-linked-role">Deleting a Service-Linked Role</a> in the
                *          <i>IAM User Guide</i>.</p>
                *          <note>
                *             <p>You can also disable the organizational feature by using the Organizations <a href="https://docs.aws.amazon.com/organizations/latest/APIReference/API_DisableAWSServiceAccess.html">DisableAWSServiceAccess</a> API operation. After you call this operation,
                *             Health stops aggregating events for all other Amazon Web Services accounts in your organization.
                *             If you call the Health API operations for organizational view, Health returns
                *             an error. Health continues to aggregate health events for your
                *             Amazon Web Services account.</p>
                *          </note>
                */
            disableHealthServiceAccessForOrganization(args: DisableHealthServiceAccessForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DisableHealthServiceAccessForOrganizationCommandOutput>;
            disableHealthServiceAccessForOrganization(args: DisableHealthServiceAccessForOrganizationCommandInput, cb: (err: any, data?: DisableHealthServiceAccessForOrganizationCommandOutput) => void): void;
            disableHealthServiceAccessForOrganization(args: DisableHealthServiceAccessForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableHealthServiceAccessForOrganizationCommandOutput) => void): void;
            /**
                * <p>Enables Health to work with Organizations. You can use the organizational view feature
                *          to aggregate events from all Amazon Web Services accounts in your organization in a centralized location. </p>
                *          <p>This operation also creates a service-linked role for the management account in the
                *          organization. </p>
                *          <note>
                *             <p>To call this operation, you must meet the following requirements:</p>
                *             <ul>
                *                <li>
                *                   <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a> to use the Health
                *                   API. If you call the Health API from an Amazon Web Services account that doesn't have a
                *                   Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a
                *                      <code>SubscriptionRequiredException</code> error.</p>
                *                </li>
                *                <li>
                *                   <p>You must have permission to call this operation from the organization's
                *                   management account. For example IAM policies, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html">Health
                *                      identity-based policy examples</a>.</p>
                *                </li>
                *             </ul>
                *          </note>
                *          <p>If you don't have the required support plan, you can instead use the Health console
                *          to enable the organizational view feature. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
                *             Health events</a> in the <i>Health User Guide</i>.</p>
                */
            enableHealthServiceAccessForOrganization(args: EnableHealthServiceAccessForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<EnableHealthServiceAccessForOrganizationCommandOutput>;
            enableHealthServiceAccessForOrganization(args: EnableHealthServiceAccessForOrganizationCommandInput, cb: (err: any, data?: EnableHealthServiceAccessForOrganizationCommandOutput) => void): void;
            enableHealthServiceAccessForOrganization(args: EnableHealthServiceAccessForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableHealthServiceAccessForOrganizationCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedAccountsForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeAffectedAccountsForOrganizationRequest, DescribeAffectedAccountsForOrganizationResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeAffectedAccountsForOrganizationCommandInput extends DescribeAffectedAccountsForOrganizationRequest {
    }
    export interface DescribeAffectedAccountsForOrganizationCommandOutput extends DescribeAffectedAccountsForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of accounts in the organization from Organizations that are affected by the
        *          provided event. For more information about the different types of Health events, see
        *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>. </p>
        *          <p>Before you can call this operation, you must first enable Health to work with
        *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
        *          management account.</p>
        *          <note>
        *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeAffectedAccountsForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeAffectedAccountsForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeAffectedAccountsForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAffectedAccountsForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeAffectedAccountsForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeAffectedAccountsForOrganizationCommand extends $Command<DescribeAffectedAccountsForOrganizationCommandInput, DescribeAffectedAccountsForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeAffectedAccountsForOrganizationCommandInput;
            constructor(input: DescribeAffectedAccountsForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAffectedAccountsForOrganizationCommandInput, DescribeAffectedAccountsForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeAffectedEntitiesRequest, DescribeAffectedEntitiesResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeAffectedEntitiesCommandInput extends DescribeAffectedEntitiesRequest {
    }
    export interface DescribeAffectedEntitiesCommandOutput extends DescribeAffectedEntitiesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of entities that have been affected by the specified events, based on the
        *          specified filter criteria. Entities can refer to individual customer resources, groups of
        *          customer resources, or any other construct, depending on the Amazon Web Services service. Events that
        *          have impact beyond that of the affected entities, or where the extent of impact is unknown,
        *          include at least one entity indicating this.</p>
        *          <p>At least one event ARN is required.</p>
        *
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *                </li>
        *                <li>
        *                   <p>This operation supports resource-level permissions. You can use this operation to allow or deny access to specific Health events. For more
        *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
        *                </li>
        *             </ul>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeAffectedEntitiesCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeAffectedEntitiesCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeAffectedEntitiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAffectedEntitiesCommandInput} for command's `input` shape.
        * @see {@link DescribeAffectedEntitiesCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeAffectedEntitiesCommand extends $Command<DescribeAffectedEntitiesCommandInput, DescribeAffectedEntitiesCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeAffectedEntitiesCommandInput;
            constructor(input: DescribeAffectedEntitiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAffectedEntitiesCommandInput, DescribeAffectedEntitiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeAffectedEntitiesForOrganizationRequest, DescribeAffectedEntitiesForOrganizationResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeAffectedEntitiesForOrganizationCommandInput extends DescribeAffectedEntitiesForOrganizationRequest {
    }
    export interface DescribeAffectedEntitiesForOrganizationCommandOutput extends DescribeAffectedEntitiesForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of entities that have been affected by one or more events for one or more
        *          accounts in your organization in Organizations, based on the filter criteria. Entities can refer
        *          to individual customer resources, groups of customer resources, or any other construct,
        *          depending on the Amazon Web Services service.</p>
        *          <p>At least one event Amazon Resource Name (ARN) and account ID are required.</p>
        *          <p>Before you can call this operation, you must first enable Health to work with
        *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
        *          management account.</p>
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *                </li>
        *                <li>
        *                   <p>This operation doesn't support resource-level permissions. You can't use this operation to allow or deny access to specific Health events. For more
        *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
        *                </li>
        *             </ul>
        *
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeAffectedEntitiesForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeAffectedEntitiesForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeAffectedEntitiesForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAffectedEntitiesForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeAffectedEntitiesForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeAffectedEntitiesForOrganizationCommand extends $Command<DescribeAffectedEntitiesForOrganizationCommandInput, DescribeAffectedEntitiesForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeAffectedEntitiesForOrganizationCommandInput;
            constructor(input: DescribeAffectedEntitiesForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAffectedEntitiesForOrganizationCommandInput, DescribeAffectedEntitiesForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEntityAggregatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEntityAggregatesRequest, DescribeEntityAggregatesResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEntityAggregatesCommandInput extends DescribeEntityAggregatesRequest {
    }
    export interface DescribeEntityAggregatesCommandOutput extends DescribeEntityAggregatesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the number of entities that are affected by each of the specified events.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEntityAggregatesCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEntityAggregatesCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEntityAggregatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEntityAggregatesCommandInput} for command's `input` shape.
        * @see {@link DescribeEntityAggregatesCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEntityAggregatesCommand extends $Command<DescribeEntityAggregatesCommandInput, DescribeEntityAggregatesCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEntityAggregatesCommandInput;
            constructor(input: DescribeEntityAggregatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEntityAggregatesCommandInput, DescribeEntityAggregatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventAggregatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventAggregatesRequest, DescribeEventAggregatesResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventAggregatesCommandInput extends DescribeEventAggregatesRequest {
    }
    export interface DescribeEventAggregatesCommandOutput extends DescribeEventAggregatesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the number of events of each event type (issue, scheduled change, and account
        *          notification). If no filter is specified, the counts of all events in each category are
        *          returned.</p>
        *          <note>
        *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventAggregatesCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventAggregatesCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventAggregatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventAggregatesCommandInput} for command's `input` shape.
        * @see {@link DescribeEventAggregatesCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventAggregatesCommand extends $Command<DescribeEventAggregatesCommandInput, DescribeEventAggregatesCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventAggregatesCommandInput;
            constructor(input: DescribeEventAggregatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventAggregatesCommandInput, DescribeEventAggregatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventDetailsRequest, DescribeEventDetailsResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventDetailsCommandInput extends DescribeEventDetailsRequest {
    }
    export interface DescribeEventDetailsCommandOutput extends DescribeEventDetailsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns detailed information about one or more specified events. Information includes
        *          standard event data (Amazon Web Services Region, service, and so on, as returned by <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a>), a detailed event description, and possible additional metadata
        *          that depends upon the nature of the event. Affected entities are not included. To retrieve
        *          the entities, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html">DescribeAffectedEntities</a> operation.</p>
        *          <p>If a specified event can't be retrieved, an error message is returned for that
        *          event.</p>
        *          <note>
        *             <p>This operation supports resource-level permissions. You can use this operation to allow or deny access to specific Health events. For more
        *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventDetailsCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventDetailsCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventDetailsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventDetailsCommandInput} for command's `input` shape.
        * @see {@link DescribeEventDetailsCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventDetailsCommand extends $Command<DescribeEventDetailsCommandInput, DescribeEventDetailsCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventDetailsCommandInput;
            constructor(input: DescribeEventDetailsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventDetailsCommandInput, DescribeEventDetailsCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventDetailsForOrganizationRequest, DescribeEventDetailsForOrganizationResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventDetailsForOrganizationCommandInput extends DescribeEventDetailsForOrganizationRequest {
    }
    export interface DescribeEventDetailsForOrganizationCommandOutput extends DescribeEventDetailsForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns detailed information about one or more specified events for one or more
        *          Amazon Web Services accounts in your organization. This information includes standard event data (such as
        *          the Amazon Web Services Region and service), an event description, and (depending on the event) possible
        *          metadata. This operation doesn't return affected entities, such as the resources related to
        *          the event. To return affected entities, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operation.</p>
        *          <note>
        *             <p>Before you can call this operation, you must first enable Health to work with
        *             Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
        *             management account.</p>
        *          </note>
        *          <p>When you call the <code>DescribeEventDetailsForOrganization</code> operation, specify
        *          the <code>organizationEventDetailFilters</code> object in the request. Depending on the
        *          Health event type, note the following differences:</p>
        *          <ul>
        *             <li>
        *                <p>To return event details for a public event, you must specify a null value for the
        *                   <code>awsAccountId</code> parameter. If you specify an account ID for a public
        *                event, Health returns an error message because public events aren't specific to
        *                an account.</p>
        *             </li>
        *             <li>
        *                <p>To return event details for an event that is specific to an account in your
        *                organization, you must specify the <code>awsAccountId</code> parameter in the
        *                request. If you don't specify an account ID, Health returns an error message
        *                because the event is specific to an account in your organization. </p>
        *             </li>
        *          </ul>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
        *
        *          <note>
        *             <p>This operation doesn't support resource-level permissions. You can't use this operation to allow or deny access to specific Health events. For more
        *                   information, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventDetailsForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventDetailsForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventDetailsForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventDetailsForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeEventDetailsForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventDetailsForOrganizationCommand extends $Command<DescribeEventDetailsForOrganizationCommandInput, DescribeEventDetailsForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventDetailsForOrganizationCommandInput;
            constructor(input: DescribeEventDetailsForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventDetailsForOrganizationCommandInput, DescribeEventDetailsForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventsRequest, DescribeEventsResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventsCommandInput extends DescribeEventsRequest {
    }
    export interface DescribeEventsCommandOutput extends DescribeEventsResponse, __MetadataBearer {
    }
    /**
        * <p> Returns information about events that meet the specified filter criteria. Events are
        *          returned in a summary form and do not include the detailed description, any additional
        *          metadata that depends on the event type, or any affected resources. To retrieve that
        *          information, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html">DescribeAffectedEntities</a> operations.</p>
        *          <p>If no filter criteria are specified, all events are returned. Results are sorted by
        *             <code>lastModifiedTime</code>, starting with the most recent event.</p>
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>When you call the <code>DescribeEvents</code> operation and specify an entity
        *                   for the <code>entityValues</code> parameter, Health might return public
        *                   events that aren't specific to that resource. For example, if you call
        *                      <code>DescribeEvents</code> and specify an ID for an Amazon Elastic Compute Cloud (Amazon EC2)
        *                   instance, Health might return events that aren't specific to that resource or
        *                   service. To get events that are specific to a service, use the
        *                      <code>services</code> parameter in the <code>filter</code> object. For more
        *                   information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
        *                </li>
        *                <li>
        *                   <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *                </li>
        *             </ul>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventsCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventsCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventsCommandInput} for command's `input` shape.
        * @see {@link DescribeEventsCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventsCommand extends $Command<DescribeEventsCommandInput, DescribeEventsCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventsCommandInput;
            constructor(input: DescribeEventsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventsCommandInput, DescribeEventsCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventsForOrganizationRequest, DescribeEventsForOrganizationResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventsForOrganizationCommandInput extends DescribeEventsForOrganizationRequest {
    }
    export interface DescribeEventsForOrganizationCommandOutput extends DescribeEventsForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about events across your organization in Organizations. You can use
        *             the<code>filters</code> parameter to specify the events that you want to return. Events
        *          are returned in a summary form and don't include the affected accounts, detailed
        *          description, any additional metadata that depends on the event type, or any affected
        *          resources. To retrieve that information, use the following operations:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedAccountsForOrganization.html">DescribeAffectedAccountsForOrganization</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a>
        *                </p>
        *             </li>
        *          </ul>
        *          <p>If you don't specify a <code>filter</code>, the
        *             <code>DescribeEventsForOrganizations</code> returns all events across your organization.
        *          Results are sorted by <code>lastModifiedTime</code>, starting with the most recent event. </p>
        *          <p>For more information about the different types of Health events, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a>.</p>
        *          <p>Before you can call this operation, you must first enable Health to work with
        *          Organizations. To do this, call the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> operation from your organization's
        *          management account.</p>
        *          <note>
        *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventsForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventsForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventsForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventsForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeEventsForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventsForOrganizationCommand extends $Command<DescribeEventsForOrganizationCommandInput, DescribeEventsForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventsForOrganizationCommandInput;
            constructor(input: DescribeEventsForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventsForOrganizationCommandInput, DescribeEventsForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventTypesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeEventTypesRequest, DescribeEventTypesResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeEventTypesCommandInput extends DescribeEventTypesRequest {
    }
    export interface DescribeEventTypesCommandOutput extends DescribeEventTypesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the event types that meet the specified filter criteria. You can use this API
        *          operation to find information about the Health event, such as the category, Amazon Web Services
        *          service, and event code. The metadata for each event appears in the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventType.html">EventType</a> object. </p>
        *          <p>If you don't specify a filter criteria, the API operation returns all event types, in no
        *          particular order. </p>
        *          <note>
        *             <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeEventTypesCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeEventTypesCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeEventTypesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEventTypesCommandInput} for command's `input` shape.
        * @see {@link DescribeEventTypesCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeEventTypesCommand extends $Command<DescribeEventTypesCommandInput, DescribeEventTypesCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeEventTypesCommandInput;
            constructor(input: DescribeEventTypesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEventTypesCommandInput, DescribeEventTypesCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeHealthServiceStatusForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    import { DescribeHealthServiceStatusForOrganizationResponse } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0";
    export interface DescribeHealthServiceStatusForOrganizationCommandInput {
    }
    export interface DescribeHealthServiceStatusForOrganizationCommandOutput extends DescribeHealthServiceStatusForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>This operation provides status information on enabling or disabling Health to work
        *          with your organization. To call this operation, you must sign in as an IAM user, assume
        *          an IAM role, or sign in as the root user (not recommended) in the organization's
        *          management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DescribeHealthServiceStatusForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DescribeHealthServiceStatusForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DescribeHealthServiceStatusForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeHealthServiceStatusForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeHealthServiceStatusForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DescribeHealthServiceStatusForOrganizationCommand extends $Command<DescribeHealthServiceStatusForOrganizationCommandInput, DescribeHealthServiceStatusForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DescribeHealthServiceStatusForOrganizationCommandInput;
            constructor(input: DescribeHealthServiceStatusForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeHealthServiceStatusForOrganizationCommandInput, DescribeHealthServiceStatusForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DisableHealthServiceAccessForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    export interface DisableHealthServiceAccessForOrganizationCommandInput {
    }
    export interface DisableHealthServiceAccessForOrganizationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disables Health from working with Organizations. To call this operation, you must sign
        *          in as an Identity and Access Management (IAM) user, assume an IAM role, or sign in as the root user (not
        *          recommended) in the organization's management account. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
        *             Health events</a> in the <i>Health User Guide</i>.</p>
        *          <p>This operation doesn't remove the service-linked role from the management account in your
        *          organization. You must use the IAM console, API, or Command Line Interface (CLI) to remove the
        *          service-linked role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html#delete-service-linked-role">Deleting a Service-Linked Role</a> in the
        *          <i>IAM User Guide</i>.</p>
        *          <note>
        *             <p>You can also disable the organizational feature by using the Organizations <a href="https://docs.aws.amazon.com/organizations/latest/APIReference/API_DisableAWSServiceAccess.html">DisableAWSServiceAccess</a> API operation. After you call this operation,
        *             Health stops aggregating events for all other Amazon Web Services accounts in your organization.
        *             If you call the Health API operations for organizational view, Health returns
        *             an error. Health continues to aggregate health events for your
        *             Amazon Web Services account.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, DisableHealthServiceAccessForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, DisableHealthServiceAccessForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new DisableHealthServiceAccessForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisableHealthServiceAccessForOrganizationCommandInput} for command's `input` shape.
        * @see {@link DisableHealthServiceAccessForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class DisableHealthServiceAccessForOrganizationCommand extends $Command<DisableHealthServiceAccessForOrganizationCommandInput, DisableHealthServiceAccessForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: DisableHealthServiceAccessForOrganizationCommandInput;
            constructor(input: DisableHealthServiceAccessForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableHealthServiceAccessForOrganizationCommandInput, DisableHealthServiceAccessForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/EnableHealthServiceAccessForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient";
    export interface EnableHealthServiceAccessForOrganizationCommandInput {
    }
    export interface EnableHealthServiceAccessForOrganizationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Enables Health to work with Organizations. You can use the organizational view feature
        *          to aggregate events from all Amazon Web Services accounts in your organization in a centralized location. </p>
        *          <p>This operation also creates a service-linked role for the management account in the
        *          organization. </p>
        *          <note>
        *             <p>To call this operation, you must meet the following requirements:</p>
        *             <ul>
        *                <li>
        *                   <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a> to use the Health
        *                   API. If you call the Health API from an Amazon Web Services account that doesn't have a
        *                   Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a
        *                      <code>SubscriptionRequiredException</code> error.</p>
        *                </li>
        *                <li>
        *                   <p>You must have permission to call this operation from the organization's
        *                   management account. For example IAM policies, see <a href="https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html">Health
        *                      identity-based policy examples</a>.</p>
        *                </li>
        *             </ul>
        *          </note>
        *          <p>If you don't have the required support plan, you can instead use the Health console
        *          to enable the organizational view feature. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
        *             Health events</a> in the <i>Health User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthClient, EnableHealthServiceAccessForOrganizationCommand } from "@aws-sdk/client-health"; // ES Modules import
        * // const { HealthClient, EnableHealthServiceAccessForOrganizationCommand } = require("@aws-sdk/client-health"); // CommonJS import
        * const client = new HealthClient(config);
        * const command = new EnableHealthServiceAccessForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableHealthServiceAccessForOrganizationCommandInput} for command's `input` shape.
        * @see {@link EnableHealthServiceAccessForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link HealthClientResolvedConfig | config} for HealthClient's `config` shape.
        *
        */
    export class EnableHealthServiceAccessForOrganizationCommand extends $Command<EnableHealthServiceAccessForOrganizationCommandInput, EnableHealthServiceAccessForOrganizationCommandOutput, HealthClientResolvedConfig> {
            readonly input: EnableHealthServiceAccessForOrganizationCommandInput;
            constructor(input: EnableHealthServiceAccessForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableHealthServiceAccessForOrganizationCommandInput, EnableHealthServiceAccessForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/HealthClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DescribeAffectedAccountsForOrganizationCommandInput, DescribeAffectedAccountsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedAccountsForOrganizationCommand";
    import { DescribeAffectedEntitiesCommandInput, DescribeAffectedEntitiesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesCommand";
    import { DescribeAffectedEntitiesForOrganizationCommandInput, DescribeAffectedEntitiesForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeAffectedEntitiesForOrganizationCommand";
    import { DescribeEntityAggregatesCommandInput, DescribeEntityAggregatesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEntityAggregatesCommand";
    import { DescribeEventAggregatesCommandInput, DescribeEventAggregatesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventAggregatesCommand";
    import { DescribeEventDetailsCommandInput, DescribeEventDetailsCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsCommand";
    import { DescribeEventDetailsForOrganizationCommandInput, DescribeEventDetailsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventDetailsForOrganizationCommand";
    import { DescribeEventsCommandInput, DescribeEventsCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsCommand";
    import { DescribeEventsForOrganizationCommandInput, DescribeEventsForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventsForOrganizationCommand";
    import { DescribeEventTypesCommandInput, DescribeEventTypesCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeEventTypesCommand";
    import { DescribeHealthServiceStatusForOrganizationCommandInput, DescribeHealthServiceStatusForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DescribeHealthServiceStatusForOrganizationCommand";
    import { DisableHealthServiceAccessForOrganizationCommandInput, DisableHealthServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/DisableHealthServiceAccessForOrganizationCommand";
    import { EnableHealthServiceAccessForOrganizationCommandInput, EnableHealthServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/commands/EnableHealthServiceAccessForOrganizationCommand";
    export type ServiceInputTypes = DescribeAffectedAccountsForOrganizationCommandInput | DescribeAffectedEntitiesCommandInput | DescribeAffectedEntitiesForOrganizationCommandInput | DescribeEntityAggregatesCommandInput | DescribeEventAggregatesCommandInput | DescribeEventDetailsCommandInput | DescribeEventDetailsForOrganizationCommandInput | DescribeEventTypesCommandInput | DescribeEventsCommandInput | DescribeEventsForOrganizationCommandInput | DescribeHealthServiceStatusForOrganizationCommandInput | DisableHealthServiceAccessForOrganizationCommandInput | EnableHealthServiceAccessForOrganizationCommandInput;
    export type ServiceOutputTypes = DescribeAffectedAccountsForOrganizationCommandOutput | DescribeAffectedEntitiesCommandOutput | DescribeAffectedEntitiesForOrganizationCommandOutput | DescribeEntityAggregatesCommandOutput | DescribeEventAggregatesCommandOutput | DescribeEventDetailsCommandOutput | DescribeEventDetailsForOrganizationCommandOutput | DescribeEventTypesCommandOutput | DescribeEventsCommandOutput | DescribeEventsForOrganizationCommandOutput | DescribeHealthServiceStatusForOrganizationCommandOutput | DisableHealthServiceAccessForOrganizationCommandOutput | EnableHealthServiceAccessForOrganizationCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type HealthClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of HealthClient class constructor that set the region, credentials and other options.
        */
    export interface HealthClientConfig extends HealthClientConfigType {
    }
    type HealthClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of HealthClient class. This is resolved and normalized from the {@link HealthClientConfig | constructor configuration interface}.
        */
    export interface HealthClientResolvedConfig extends HealthClientResolvedConfigType {
    }
    /**
        * <fullname>Health</fullname>
        *
        *          <p>The Health API provides programmatic access to the Health information that
        *          appears in the <a href="https://phd.aws.amazon.com/phd/home#/">Personal Health Dashboard</a>. You
        *          can use the API operations to get information about events that might affect your Amazon Web Services services and resources.</p>
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a> to use the Health
        *                   API. If you call the Health API from an Amazon Web Services account that
        *                   doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a
        *                      <code>SubscriptionRequiredException</code> error.</p>
        *                </li>
        *                <li>
        *                   <p>You can use the Health endpoint health.us-east-1.amazonaws.com (HTTPS) to
        *                   call the Health API operations. Health supports a multi-Region
        *                   application architecture and has two regional endpoints in an active-passive
        *                   configuration. You can use the high availability endpoint example to determine
        *                   which Amazon Web Services Region is active, so that you can get the latest information from the
        *                   API. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/health-api.html">Accessing the Health API</a> in the
        *                      <i>Health User Guide</i>.</p>
        *                </li>
        *             </ul>
        *          </note>
        *          <p>For authentication of requests, Health uses the <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing
        *             Process</a>.</p>
        *          <p>If your Amazon Web Services account is part of Organizations, you can use the Health organizational
        *          view feature. This feature provides a centralized view of Health events across all
        *          accounts in your organization. You can aggregate Health events in real time to
        *          identify accounts in your organization that are affected by an operational event or get
        *          notified of security vulnerabilities. Use the organizational view API operations to enable
        *          this feature and return event information. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html">Aggregating
        *             Health events</a> in the <i>Health User Guide</i>.</p>
        *          <note>
        *             <p>When you use the Health API operations to return Health events, see the
        *             following recommendations:</p>
        *             <ul>
        *                <li>
        *                   <p>Use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode">eventScopeCode</a> parameter to specify whether to return Health
        *                   events that are public or account-specific.</p>
        *                </li>
        *                <li>
        *                   <p>Use pagination to view all events from the response. For example, if you call
        *                   the <code>DescribeEventsForOrganization</code> operation to get all events in your
        *                   organization, you might receive several page results. Specify the
        *                      <code>nextToken</code> in the next request to return more results.</p>
        *                </li>
        *             </ul>
        *          </note>
        */
    export class HealthClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, HealthClientResolvedConfig> {
            /**
                * The resolved configuration of HealthClient class. This is resolved and normalized from the {@link HealthClientConfig | constructor configuration interface}.
                */
            readonly config: HealthClientResolvedConfig;
            constructor(configuration: HealthClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { HealthServiceException as __BaseException } from "@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/HealthServiceException";
    export enum EntityStatusCode {
            IMPAIRED = "IMPAIRED",
            UNIMPAIRED = "UNIMPAIRED",
            UNKNOWN = "UNKNOWN"
    }
    /**
        * <p>Information about an entity that is affected by a Health event.</p>
        */
    export interface AffectedEntity {
            /**
                * <p>The unique identifier for the entity. Format: <code>arn:aws:health:<i>entity-region</i>:<i>aws-account</i>:entity/<i>entity-id</i>
                *             </code>. Example: <code>arn:aws:health:us-east-1:111222333444:entity/AVh5GGT7ul1arKr1sE1K</code>
                *          </p>
                */
            entityArn?: string;
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn?: string;
            /**
                * <p>The ID of the affected entity.</p>
                */
            entityValue?: string;
            /**
                * <p>The URL of the affected entity.</p>
                */
            entityUrl?: string;
            /**
                * <p>The 12-digit Amazon Web Services account number that contains the affected entity.</p>
                */
            awsAccountId?: string;
            /**
                * <p>The most recent time that the entity was updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>The most recent status of the entity affected by the event. The possible values are
                *             <code>IMPAIRED</code>, <code>UNIMPAIRED</code>, and <code>UNKNOWN</code>.</p>
                */
            statusCode?: EntityStatusCode | string;
            /**
                * <p>A map of entity tags attached to the affected entity.</p>
                *          <note>
                *             <p>Currently, the <code>tags</code> property isn't supported.</p>
                *          </note>
                */
            tags?: Record<string, string>;
    }
    export namespace AffectedEntity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AffectedEntity) => any;
    }
    export interface DescribeAffectedAccountsForOrganizationRequest {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn: string | undefined;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
    }
    export namespace DescribeAffectedAccountsForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedAccountsForOrganizationRequest) => any;
    }
    export enum EventScopeCode {
            ACCOUNT_SPECIFIC = "ACCOUNT_SPECIFIC",
            NONE = "NONE",
            PUBLIC = "PUBLIC"
    }
    export interface DescribeAffectedAccountsForOrganizationResponse {
            /**
                * <p>A JSON set of elements of the affected accounts.</p>
                */
            affectedAccounts?: string[];
            /**
                * <p>This parameter specifies if the Health event is a public Amazon Web Services service event or an account-specific event.</p>
                *          <ul>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the
                *                   <code>affectedAccounts</code> value is always empty.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then
                *                the <code>affectedAccounts</code> value lists the affected Amazon Web Services accounts in your
                *                organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you
                *                have Amazon Web Services accounts that use that service, those account IDs appear in the
                *                response.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the
                *                   <code>eventArn</code> that you specified in the request is invalid or doesn't
                *                exist.</p>
                *             </li>
                *          </ul>
                */
            eventScopeCode?: EventScopeCode | string;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeAffectedAccountsForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedAccountsForOrganizationResponse) => any;
    }
    /**
        * <p>The specified pagination token (<code>nextToken</code>) is not valid.</p>
        */
    export class InvalidPaginationToken extends __BaseException {
            readonly name: "InvalidPaginationToken";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidPaginationToken, __BaseException>);
    }
    /**
        * <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
        *          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
        *             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
        *          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
        *          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
        *          and <code>to</code> is set: match items where the timestamp value is equal to or before
        *             <code>to</code>.</p>
        */
    export interface DateTimeRange {
            /**
                * <p>The starting date and time of a time range.</p>
                */
            from?: Date;
            /**
                * <p>The ending date and time of a time range.</p>
                */
            to?: Date;
    }
    export namespace DateTimeRange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DateTimeRange) => any;
    }
    /**
        * <p>The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html">DescribeAffectedEntities</a> operation.</p>
        */
    export interface EntityFilter {
            /**
                * <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code>
                *          </p>
                */
            eventArns: string[] | undefined;
            /**
                * <p>A list of entity ARNs (unique identifiers).</p>
                */
            entityArns?: string[];
            /**
                * <p>A list of IDs for affected entities.</p>
                */
            entityValues?: string[];
            /**
                * <p>A list of the most recent dates and times that the entity was updated.</p>
                */
            lastUpdatedTimes?: DateTimeRange[];
            /**
                * <p>A map of entity tags attached to the affected entity.</p>
                *          <note>
                *             <p>Currently, the <code>tags</code> property isn't supported.</p>
                *          </note>
                */
            tags?: Record<string, string>[];
            /**
                * <p>A list of entity status codes (<code>IMPAIRED</code>, <code>UNIMPAIRED</code>, or
                *             <code>UNKNOWN</code>).</p>
                */
            statusCodes?: (EntityStatusCode | string)[];
    }
    export namespace EntityFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EntityFilter) => any;
    }
    export interface DescribeAffectedEntitiesRequest {
            /**
                * <p>Values to narrow the results returned. At least one event ARN is required.</p>
                */
            filter: EntityFilter | undefined;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
    }
    export namespace DescribeAffectedEntitiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedEntitiesRequest) => any;
    }
    export interface DescribeAffectedEntitiesResponse {
            /**
                * <p>The entities that match the filter criteria.</p>
                */
            entities?: AffectedEntity[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeAffectedEntitiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedEntitiesResponse) => any;
    }
    /**
        * <p>The specified locale is not supported.</p>
        */
    export class UnsupportedLocale extends __BaseException {
            readonly name: "UnsupportedLocale";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnsupportedLocale, __BaseException>);
    }
    /**
        * <p>The values used to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operations.</p>
        */
    export interface EventAccountFilter {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn: string | undefined;
            /**
                * <p>The 12-digit Amazon Web Services account numbers that contains the affected entities.</p>
                */
            awsAccountId?: string;
    }
    export namespace EventAccountFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventAccountFilter) => any;
    }
    export interface DescribeAffectedEntitiesForOrganizationRequest {
            /**
                * <p>A JSON set of elements including the <code>awsAccountId</code> and the
                *             <code>eventArn</code>.</p>
                */
            organizationEntityFilters: EventAccountFilter[] | undefined;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
    }
    export namespace DescribeAffectedEntitiesForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedEntitiesForOrganizationRequest) => any;
    }
    /**
        * <p>Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operation can't find or process a
        *          specific entity.</p>
        */
    export interface OrganizationAffectedEntitiesErrorItem {
            /**
                * <p>The 12-digit Amazon Web Services account numbers that contains the affected entities.</p>
                */
            awsAccountId?: string;
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn?: string;
            /**
                * <p>The name of the error.</p>
                */
            errorName?: string;
            /**
                * <p>The unique identifier for the event type. The format is
                *             <code>AWS_SERVICE_DESCRIPTION</code>. For example,
                *             <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.</p>
                */
            errorMessage?: string;
    }
    export namespace OrganizationAffectedEntitiesErrorItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationAffectedEntitiesErrorItem) => any;
    }
    export interface DescribeAffectedEntitiesForOrganizationResponse {
            /**
                * <p>A JSON set of elements including the <code>awsAccountId</code> and its
                *             <code>entityArn</code>, <code>entityValue</code> and its <code>entityArn</code>,
                *             <code>lastUpdatedTime</code>, and <code>statusCode</code>.</p>
                */
            entities?: AffectedEntity[];
            /**
                * <p>A JSON set of elements of the failed response, including the <code>awsAccountId</code>,
                *             <code>errorMessage</code>, <code>errorName</code>, and <code>eventArn</code>.</p>
                */
            failedSet?: OrganizationAffectedEntitiesErrorItem[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeAffectedEntitiesForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAffectedEntitiesForOrganizationResponse) => any;
    }
    export interface DescribeEntityAggregatesRequest {
            /**
                * <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code>
                *          </p>
                */
            eventArns?: string[];
    }
    export namespace DescribeEntityAggregatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEntityAggregatesRequest) => any;
    }
    /**
        * <p>The number of entities that are affected by one or more events. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEntityAggregates.html">DescribeEntityAggregates</a> operation.</p>
        */
    export interface EntityAggregate {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn?: string;
            /**
                * <p>The number of entities that match the criteria for the specified events.</p>
                */
            count?: number;
    }
    export namespace EntityAggregate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EntityAggregate) => any;
    }
    export interface DescribeEntityAggregatesResponse {
            /**
                * <p>The number of entities that are affected by each of the specified events.</p>
                */
            entityAggregates?: EntityAggregate[];
    }
    export namespace DescribeEntityAggregatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEntityAggregatesResponse) => any;
    }
    export enum EventAggregateField {
            EventTypeCategory = "eventTypeCategory"
    }
    export enum EventStatusCode {
            CLOSED = "closed",
            OPEN = "open",
            UPCOMING = "upcoming"
    }
    export enum EventTypeCategory {
            ACCOUNT_NOTIFICATION = "accountNotification",
            INVESTIGATION = "investigation",
            ISSUE = "issue",
            SCHEDULED_CHANGE = "scheduledChange"
    }
    /**
        * <p>The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> and
        *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventAggregates.html">DescribeEventAggregates</a> operations.</p>
        */
    export interface EventFilter {
            /**
                * <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code>
                *          </p>
                */
            eventArns?: string[];
            /**
                * <p>A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED".</code>
                *          </p>
                */
            eventTypeCodes?: string[];
            /**
                * <p>The Amazon Web Services services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
                */
            services?: string[];
            /**
                * <p>A list of Amazon Web Services Regions.</p>
                */
            regions?: string[];
            /**
                * <p>A list of Amazon Web Services Availability Zones.</p>
                */
            availabilityZones?: string[];
            /**
                * <p>A list of dates and times that the event began.</p>
                */
            startTimes?: DateTimeRange[];
            /**
                * <p>A list of dates and times that the event ended.</p>
                */
            endTimes?: DateTimeRange[];
            /**
                * <p>A list of dates and times that the event was last updated.</p>
                */
            lastUpdatedTimes?: DateTimeRange[];
            /**
                * <p>A list of entity ARNs (unique identifiers).</p>
                */
            entityArns?: string[];
            /**
                * <p>A list of entity identifiers, such as EC2 instance IDs (<code>i-34ab692e</code>) or EBS
                *          volumes (<code>vol-426ab23e</code>).</p>
                */
            entityValues?: string[];
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            eventTypeCategories?: (EventTypeCategory | string)[];
            /**
                * <p>A map of entity tags attached to the affected entity.</p>
                *          <note>
                *             <p>Currently, the <code>tags</code> property isn't supported.</p>
                *          </note>
                */
            tags?: Record<string, string>[];
            /**
                * <p>A list of event status codes.</p>
                */
            eventStatusCodes?: (EventStatusCode | string)[];
    }
    export namespace EventFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventFilter) => any;
    }
    export interface DescribeEventAggregatesRequest {
            /**
                * <p>Values to narrow the results returned.</p>
                */
            filter?: EventFilter;
            /**
                * <p>The only currently supported value is <code>eventTypeCategory</code>.</p>
                */
            aggregateField: EventAggregateField | string | undefined;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeEventAggregatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventAggregatesRequest) => any;
    }
    /**
        * <p>The number of events of each issue type. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventAggregates.html">DescribeEventAggregates</a> operation.</p>
        */
    export interface EventAggregate {
            /**
                * <p>The issue type for the associated count.</p>
                */
            aggregateValue?: string;
            /**
                * <p>The number of events of the associated issue type.</p>
                */
            count?: number;
    }
    export namespace EventAggregate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventAggregate) => any;
    }
    export interface DescribeEventAggregatesResponse {
            /**
                * <p>The number of events in each category that meet the optional filter criteria.</p>
                */
            eventAggregates?: EventAggregate[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeEventAggregatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventAggregatesResponse) => any;
    }
    export interface DescribeEventDetailsRequest {
            /**
                * <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code>
                *          </p>
                */
            eventArns: string[] | undefined;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
    }
    export namespace DescribeEventDetailsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventDetailsRequest) => any;
    }
    /**
        * <p>Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation can't find a specified event.</p>
        */
    export interface EventDetailsErrorItem {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn?: string;
            /**
                * <p>The name of the error.</p>
                */
            errorName?: string;
            /**
                * <p>A message that describes the error.</p>
                */
            errorMessage?: string;
    }
    export namespace EventDetailsErrorItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventDetailsErrorItem) => any;
    }
    /**
        * <p>Summary information about an Health event.</p>
        *          <p>Health events can be public or account-specific:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <i>Public events</i> might be service events that are not specific
        *                to an Amazon Web Services account. For example, if there is an issue with an Amazon Web Services Region,
        *                Health provides information about the event, even if you don't use services or
        *                resources in that Region.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <i>Account-specific</i> events are specific to either your
        *                Amazon Web Services account or an account in your organization. For example, if there's an issue
        *                with Amazon Elastic Compute Cloud in a Region that you use, Health provides information about the
        *                event and the affected resources in the account.</p>
        *             </li>
        *          </ul>
        *          <p>You can determine if an event is public or account-specific by using the
        *             <code>eventScopeCode</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode">eventScopeCode</a>.</p>
        */
    export interface Event {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            arn?: string;
            /**
                * <p>The Amazon Web Services service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
                */
            service?: string;
            /**
                * <p>The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i>
                *             </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.</p>
                */
            eventTypeCode?: string;
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            eventTypeCategory?: EventTypeCategory | string;
            /**
                * <p>The Amazon Web Services Region name of the event.</p>
                */
            region?: string;
            /**
                * <p>The Amazon Web Services Availability Zone of the event. For example, us-east-1a.</p>
                */
            availabilityZone?: string;
            /**
                * <p>The date and time that the event began.</p>
                */
            startTime?: Date;
            /**
                * <p>The date and time that the event ended.</p>
                */
            endTime?: Date;
            /**
                * <p>The most recent date and time that the event was updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>The most recent status of the event. Possible values are <code>open</code>,
                *             <code>closed</code>, and <code>upcoming</code>.</p>
                */
            statusCode?: EventStatusCode | string;
            /**
                * <p>This parameter specifies if the Health event is a public Amazon Web Services service event or an account-specific event.</p>
                *          <ul>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the
                *                   <code>affectedAccounts</code> value is always empty.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then
                *                the <code>affectedAccounts</code> value lists the affected Amazon Web Services accounts in your
                *                organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you
                *                have Amazon Web Services accounts that use that service, those account IDs appear in the
                *                response.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the
                *                   <code>eventArn</code> that you specified in the request is invalid or doesn't
                *                exist.</p>
                *             </li>
                *          </ul>
                */
            eventScopeCode?: EventScopeCode | string;
    }
    export namespace Event {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Event) => any;
    }
    /**
        * <p>The detailed description of the event. Included in the information returned by the
        *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation.</p>
        */
    export interface EventDescription {
            /**
                * <p>The most recent description of the event.</p>
                */
            latestDescription?: string;
    }
    export namespace EventDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventDescription) => any;
    }
    /**
        * <p>Detailed information about an event. A combination of an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a> object, an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventDescription.html">EventDescription</a> object, and additional metadata about the event. Returned by
        *          the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation.</p>
        */
    export interface EventDetails {
            /**
                * <p>Summary information about the event.</p>
                */
            event?: Event;
            /**
                * <p>The most recent description of the event.</p>
                */
            eventDescription?: EventDescription;
            /**
                * <p>Additional metadata about the event.</p>
                */
            eventMetadata?: Record<string, string>;
    }
    export namespace EventDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventDetails) => any;
    }
    export interface DescribeEventDetailsResponse {
            /**
                * <p>Information about the events that could be retrieved.</p>
                */
            successfulSet?: EventDetails[];
            /**
                * <p>Error messages for any events that could not be retrieved.</p>
                */
            failedSet?: EventDetailsErrorItem[];
    }
    export namespace DescribeEventDetailsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventDetailsResponse) => any;
    }
    export interface DescribeEventDetailsForOrganizationRequest {
            /**
                * <p>A set of JSON elements that includes the <code>awsAccountId</code> and the
                *             <code>eventArn</code>.</p>
                */
            organizationEventDetailFilters: EventAccountFilter[] | undefined;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
    }
    export namespace DescribeEventDetailsForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventDetailsForOrganizationRequest) => any;
    }
    /**
        * <p>Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> operation can't find a specified
        *          event.</p>
        */
    export interface OrganizationEventDetailsErrorItem {
            /**
                * <p>Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> operation can't find a specified
                *          event.</p>
                */
            awsAccountId?: string;
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            eventArn?: string;
            /**
                * <p>The name of the error.</p>
                */
            errorName?: string;
            /**
                * <p>A message that describes the error.</p>
                *          <p>If you call the <code>DescribeEventDetailsForOrganization</code> operation and receive one of the following errors, follow the recommendations in the message:</p>
                *          <ul>
                *             <li>
                *                <p>We couldn't find a public event that matches your request. To find an event that is account specific, you must enter an Amazon Web Services account ID in the request.</p>
                *             </li>
                *             <li>
                *                <p>We couldn't find an account specific event for the specified Amazon Web Services account. To find an event that is public, you must enter a null value for the Amazon Web Services account ID in the request.</p>
                *             </li>
                *             <li>
                *                <p>Your Amazon Web Services account doesn't include the Amazon Web Services Support plan required to use the
                * Health API. You must have either a Business, Enterprise On-Ramp, or Enterprise Support plan.</p>
                *             </li>
                *          </ul>
                */
            errorMessage?: string;
    }
    export namespace OrganizationEventDetailsErrorItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationEventDetailsErrorItem) => any;
    }
    /**
        * <p>Detailed information about an event. A combination of an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a> object, an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventDescription.html">EventDescription</a> object, and additional metadata about the event. Returned by
        *          the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> operation.</p>
        */
    export interface OrganizationEventDetails {
            /**
                * <p>The 12-digit Amazon Web Services account numbers that contains the affected entities.</p>
                */
            awsAccountId?: string;
            /**
                * <p>Summary information about an Health event.</p>
                *          <p>Health events can be public or account-specific:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <i>Public events</i> might be service events that are not specific
                *                to an Amazon Web Services account. For example, if there is an issue with an Amazon Web Services Region,
                *                Health provides information about the event, even if you don't use services or
                *                resources in that Region.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <i>Account-specific</i> events are specific to either your
                *                Amazon Web Services account or an account in your organization. For example, if there's an issue
                *                with Amazon Elastic Compute Cloud in a Region that you use, Health provides information about the
                *                event and the affected resources in the account.</p>
                *             </li>
                *          </ul>
                *          <p>You can determine if an event is public or account-specific by using the
                *             <code>eventScopeCode</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode">eventScopeCode</a>.</p>
                */
            event?: Event;
            /**
                * <p>The detailed description of the event. Included in the information returned by the
                *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation.</p>
                */
            eventDescription?: EventDescription;
            /**
                * <p>Additional metadata about the event.</p>
                */
            eventMetadata?: Record<string, string>;
    }
    export namespace OrganizationEventDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationEventDetails) => any;
    }
    export interface DescribeEventDetailsForOrganizationResponse {
            /**
                * <p>Information about the events that could be retrieved.</p>
                */
            successfulSet?: OrganizationEventDetails[];
            /**
                * <p>Error messages for any events that could not be retrieved.</p>
                */
            failedSet?: OrganizationEventDetailsErrorItem[];
    }
    export namespace DescribeEventDetailsForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventDetailsForOrganizationResponse) => any;
    }
    export interface DescribeEventsRequest {
            /**
                * <p>Values to narrow the results returned.</p>
                */
            filter?: EventFilter;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
    }
    export namespace DescribeEventsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventsRequest) => any;
    }
    export interface DescribeEventsResponse {
            /**
                * <p>The events that match the specified filter criteria.</p>
                */
            events?: Event[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeEventsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventsResponse) => any;
    }
    /**
        * <p>The values to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.</p>
        */
    export interface OrganizationEventFilter {
            /**
                * <p>A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED".</code>
                *          </p>
                */
            eventTypeCodes?: string[];
            /**
                * <p>A list of 12-digit Amazon Web Services account numbers that contains the affected entities.</p>
                */
            awsAccountIds?: string[];
            /**
                * <p>The Amazon Web Services services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
                */
            services?: string[];
            /**
                * <p>A list of Amazon Web Services Regions.</p>
                */
            regions?: string[];
            /**
                * <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
                *          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
                *             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
                *          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
                *          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
                *          and <code>to</code> is set: match items where the timestamp value is equal to or before
                *             <code>to</code>.</p>
                */
            startTime?: DateTimeRange;
            /**
                * <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
                *          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
                *             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
                *          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
                *          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
                *          and <code>to</code> is set: match items where the timestamp value is equal to or before
                *             <code>to</code>.</p>
                */
            endTime?: DateTimeRange;
            /**
                * <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
                *          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
                *             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
                *          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
                *          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
                *          and <code>to</code> is set: match items where the timestamp value is equal to or before
                *             <code>to</code>.</p>
                */
            lastUpdatedTime?: DateTimeRange;
            /**
                * <p>A list of entity ARNs (unique identifiers).</p>
                */
            entityArns?: string[];
            /**
                * <p>A list of entity identifiers, such as EC2 instance IDs (i-34ab692e) or EBS volumes (vol-426ab23e).</p>
                */
            entityValues?: string[];
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            eventTypeCategories?: (EventTypeCategory | string)[];
            /**
                * <p>A list of event status codes.</p>
                */
            eventStatusCodes?: (EventStatusCode | string)[];
    }
    export namespace OrganizationEventFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationEventFilter) => any;
    }
    export interface DescribeEventsForOrganizationRequest {
            /**
                * <p>Values to narrow the results returned.</p>
                */
            filter?: OrganizationEventFilter;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
    }
    export namespace DescribeEventsForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventsForOrganizationRequest) => any;
    }
    /**
        * <p>Summary information about an event, returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.</p>
        */
    export interface OrganizationEvent {
            /**
                * <p>The unique identifier for the event. The event ARN has the
                * <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
                *             </code>
                * format.</p>
                *          <p>For example, an event ARN might look like the following:</p>
                *          <p>
                *             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
                *          </p>
                */
            arn?: string;
            /**
                * <p>The Amazon Web Services service that is affected by the event, such as EC2 and RDS.</p>
                */
            service?: string;
            /**
                * <p>The unique identifier for the event type. The format is
                *             <code>AWS_SERVICE_DESCRIPTION</code>. For example,
                *             <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.</p>
                */
            eventTypeCode?: string;
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            eventTypeCategory?: EventTypeCategory | string;
            /**
                * <p>This parameter specifies if the Health event is a public Amazon Web Services service event or an account-specific event.</p>
                *          <ul>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the
                *                   <code>affectedAccounts</code> value is always empty.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then
                *                the <code>affectedAccounts</code> value lists the affected Amazon Web Services accounts in your
                *                organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you
                *                have Amazon Web Services accounts that use that service, those account IDs appear in the
                *                response.</p>
                *             </li>
                *             <li>
                *                <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the
                *                   <code>eventArn</code> that you specified in the request is invalid or doesn't
                *                exist.</p>
                *             </li>
                *          </ul>
                */
            eventScopeCode?: EventScopeCode | string;
            /**
                * <p>The Amazon Web Services Region name of the event.</p>
                */
            region?: string;
            /**
                * <p>The date and time that the event began.</p>
                */
            startTime?: Date;
            /**
                * <p>The date and time that the event ended.</p>
                */
            endTime?: Date;
            /**
                * <p>The most recent date and time that the event was updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>The most recent status of the event. Possible values are <code>open</code>,
                *             <code>closed</code>, and <code>upcoming</code>.</p>
                */
            statusCode?: EventStatusCode | string;
    }
    export namespace OrganizationEvent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationEvent) => any;
    }
    export interface DescribeEventsForOrganizationResponse {
            /**
                * <p>The events that match the specified filter criteria.</p>
                */
            events?: OrganizationEvent[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeEventsForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventsForOrganizationResponse) => any;
    }
    /**
        * <p>The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventTypes.html">DescribeEventTypes</a>
        *          operation.</p>
        */
    export interface EventTypeFilter {
            /**
                * <p>A list of event type codes.</p>
                */
            eventTypeCodes?: string[];
            /**
                * <p>The Amazon Web Services services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
                */
            services?: string[];
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            eventTypeCategories?: (EventTypeCategory | string)[];
    }
    export namespace EventTypeFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventTypeFilter) => any;
    }
    export interface DescribeEventTypesRequest {
            /**
                * <p>Values to narrow the results returned.</p>
                */
            filter?: EventTypeFilter;
            /**
                * <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
                */
            locale?: string;
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
                */
            maxResults?: number;
    }
    export namespace DescribeEventTypesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventTypesRequest) => any;
    }
    /**
        * <p>Contains the metadata about a type of event that is reported by Health. The
        *             <code>EventType</code> shows the category, service, and the event type code of the
        *          event. For example, an <code>issue</code> might be the category, <code>EC2</code> the
        *          service, and <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code> the event type code.</p>
        *          <p>You can use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventTypes.html">DescribeEventTypes</a> API operation to return this information
        *          about an event.</p>
        *          <p>You can also use the Amazon CloudWatch Events console to create a rule so that you can get notified or
        *          take action when Health delivers a specific event to your Amazon Web Services account. For more
        *          information, see <a href="https://docs.aws.amazon.com/health/latest/ug/cloudwatch-events-health.html">Monitor for Health events with Amazon CloudWatch Events</a> in the
        *             <i>Health User Guide</i>.</p>
        */
    export interface EventType {
            /**
                * <p>The Amazon Web Services service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
                */
            service?: string;
            /**
                * <p>The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i>
                *             </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.</p>
                */
            code?: string;
            /**
                * <p>A list of event type category codes. Possible values are
                * <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently,
                * the <code>investigation</code> value isn't supported at this time.</p>
                */
            category?: EventTypeCategory | string;
    }
    export namespace EventType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventType) => any;
    }
    export interface DescribeEventTypesResponse {
            /**
                * <p>A list of event types that match the filter criteria. Event types have a category
                *             (<code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>),
                *          a service (for example, <code>EC2</code>, <code>RDS</code>, <code>DATAPIPELINE</code>,
                *             <code>BILLING</code>), and a code (in the format
                *                <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i>
                *             </code>; for
                *          example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).</p>
                */
            eventTypes?: EventType[];
            /**
                * <p>If the results of a search are large, only a portion of the
                * results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
                * retrieve the next batch of results, reissue the search request and include the returned token.
                * When all results have been returned, the response does not contain a pagination token value.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeEventTypesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEventTypesResponse) => any;
    }
    export interface DescribeHealthServiceStatusForOrganizationResponse {
            /**
                * <p>Information about the status of enabling or disabling the Health organizational
                *          view feature in your organization.</p>
                *          <p>Valid values are <code>ENABLED | DISABLED | PENDING</code>. </p>
                */
            healthServiceAccessStatusForOrganization?: string;
    }
    export namespace DescribeHealthServiceStatusForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeHealthServiceStatusForOrganizationResponse) => any;
    }
    /**
        * <p>
        *             <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html">EnableHealthServiceAccessForOrganization</a> is already in progress. Wait for the
        *          action to complete before trying again. To get the current status, use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeHealthServiceStatusForOrganization.html">DescribeHealthServiceStatusForOrganization</a> operation.</p>
        */
    export class ConcurrentModificationException extends __BaseException {
            readonly name: "ConcurrentModificationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
    }
}

declare module '@aws-sdk/client-health/node_modules/@aws-sdk/client-health/dist-types/models/HealthServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Health service.
        */
    export class HealthServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

