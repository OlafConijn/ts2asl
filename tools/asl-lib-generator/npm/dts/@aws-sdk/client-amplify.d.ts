// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-amplify' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AmplifyClient } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateAppCommandInput, CreateAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateAppCommand";
    import { CreateBackendEnvironmentCommandInput, CreateBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBackendEnvironmentCommand";
    import { CreateBranchCommandInput, CreateBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBranchCommand";
    import { CreateDeploymentCommandInput, CreateDeploymentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDeploymentCommand";
    import { CreateDomainAssociationCommandInput, CreateDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDomainAssociationCommand";
    import { CreateWebhookCommandInput, CreateWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateWebhookCommand";
    import { DeleteAppCommandInput, DeleteAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteAppCommand";
    import { DeleteBackendEnvironmentCommandInput, DeleteBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBackendEnvironmentCommand";
    import { DeleteBranchCommandInput, DeleteBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBranchCommand";
    import { DeleteDomainAssociationCommandInput, DeleteDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteDomainAssociationCommand";
    import { DeleteJobCommandInput, DeleteJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteJobCommand";
    import { DeleteWebhookCommandInput, DeleteWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteWebhookCommand";
    import { GenerateAccessLogsCommandInput, GenerateAccessLogsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GenerateAccessLogsCommand";
    import { GetAppCommandInput, GetAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetAppCommand";
    import { GetArtifactUrlCommandInput, GetArtifactUrlCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetArtifactUrlCommand";
    import { GetBackendEnvironmentCommandInput, GetBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBackendEnvironmentCommand";
    import { GetBranchCommandInput, GetBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBranchCommand";
    import { GetDomainAssociationCommandInput, GetDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetDomainAssociationCommand";
    import { GetJobCommandInput, GetJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetJobCommand";
    import { GetWebhookCommandInput, GetWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetWebhookCommand";
    import { ListAppsCommandInput, ListAppsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListAppsCommand";
    import { ListArtifactsCommandInput, ListArtifactsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListArtifactsCommand";
    import { ListBackendEnvironmentsCommandInput, ListBackendEnvironmentsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBackendEnvironmentsCommand";
    import { ListBranchesCommandInput, ListBranchesCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBranchesCommand";
    import { ListDomainAssociationsCommandInput, ListDomainAssociationsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListDomainAssociationsCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListJobsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebhooksCommandInput, ListWebhooksCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListWebhooksCommand";
    import { StartDeploymentCommandInput, StartDeploymentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartDeploymentCommand";
    import { StartJobCommandInput, StartJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartJobCommand";
    import { StopJobCommandInput, StopJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StopJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UntagResourceCommand";
    import { UpdateAppCommandInput, UpdateAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateAppCommand";
    import { UpdateBranchCommandInput, UpdateBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateBranchCommand";
    import { UpdateDomainAssociationCommandInput, UpdateDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateDomainAssociationCommand";
    import { UpdateWebhookCommandInput, UpdateWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateWebhookCommand";
    /**
        * <p>Amplify enables developers to develop and deploy cloud-powered mobile and web apps.
        *             The Amplify Console provides a continuous delivery and hosting service for web
        *             applications. For more information, see the <a href="https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html">Amplify Console User Guide</a>. The
        *             Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation
        *             for client app development. For more information, see the <a href="https://docs.amplify.aws/">Amplify Framework.</a>
        *          </p>
        */
    export class Amplify extends AmplifyClient {
            /**
                * <p> Creates a new Amplify app. </p>
                */
            createApp(args: CreateAppCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppCommandOutput>;
            createApp(args: CreateAppCommandInput, cb: (err: any, data?: CreateAppCommandOutput) => void): void;
            createApp(args: CreateAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppCommandOutput) => void): void;
            /**
                * <p> Creates a new backend environment for an Amplify app. </p>
                */
            createBackendEnvironment(args: CreateBackendEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendEnvironmentCommandOutput>;
            createBackendEnvironment(args: CreateBackendEnvironmentCommandInput, cb: (err: any, data?: CreateBackendEnvironmentCommandOutput) => void): void;
            createBackendEnvironment(args: CreateBackendEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendEnvironmentCommandOutput) => void): void;
            /**
                * <p> Creates a new branch for an Amplify app. </p>
                */
            createBranch(args: CreateBranchCommandInput, options?: __HttpHandlerOptions): Promise<CreateBranchCommandOutput>;
            createBranch(args: CreateBranchCommandInput, cb: (err: any, data?: CreateBranchCommandOutput) => void): void;
            createBranch(args: CreateBranchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBranchCommandOutput) => void): void;
            /**
                * <p> Creates a deployment for a manually deployed Amplify app. Manually deployed apps are
                *             not connected to a repository. </p>
                */
            createDeployment(args: CreateDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<CreateDeploymentCommandOutput>;
            createDeployment(args: CreateDeploymentCommandInput, cb: (err: any, data?: CreateDeploymentCommandOutput) => void): void;
            createDeployment(args: CreateDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDeploymentCommandOutput) => void): void;
            /**
                * <p> Creates a new domain association for an Amplify app. This action associates a custom
                *             domain with the Amplify app </p>
                */
            createDomainAssociation(args: CreateDomainAssociationCommandInput, options?: __HttpHandlerOptions): Promise<CreateDomainAssociationCommandOutput>;
            createDomainAssociation(args: CreateDomainAssociationCommandInput, cb: (err: any, data?: CreateDomainAssociationCommandOutput) => void): void;
            createDomainAssociation(args: CreateDomainAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDomainAssociationCommandOutput) => void): void;
            /**
                * <p> Creates a new webhook on an Amplify app. </p>
                */
            createWebhook(args: CreateWebhookCommandInput, options?: __HttpHandlerOptions): Promise<CreateWebhookCommandOutput>;
            createWebhook(args: CreateWebhookCommandInput, cb: (err: any, data?: CreateWebhookCommandOutput) => void): void;
            createWebhook(args: CreateWebhookCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWebhookCommandOutput) => void): void;
            /**
                * <p> Deletes an existing Amplify app specified by an app ID. </p>
                */
            deleteApp(args: DeleteAppCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppCommandOutput>;
            deleteApp(args: DeleteAppCommandInput, cb: (err: any, data?: DeleteAppCommandOutput) => void): void;
            deleteApp(args: DeleteAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppCommandOutput) => void): void;
            /**
                * <p> Deletes a backend environment for an Amplify app. </p>
                */
            deleteBackendEnvironment(args: DeleteBackendEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBackendEnvironmentCommandOutput>;
            deleteBackendEnvironment(args: DeleteBackendEnvironmentCommandInput, cb: (err: any, data?: DeleteBackendEnvironmentCommandOutput) => void): void;
            deleteBackendEnvironment(args: DeleteBackendEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBackendEnvironmentCommandOutput) => void): void;
            /**
                * <p> Deletes a branch for an Amplify app. </p>
                */
            deleteBranch(args: DeleteBranchCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBranchCommandOutput>;
            deleteBranch(args: DeleteBranchCommandInput, cb: (err: any, data?: DeleteBranchCommandOutput) => void): void;
            deleteBranch(args: DeleteBranchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBranchCommandOutput) => void): void;
            /**
                * <p> Deletes a domain association for an Amplify app. </p>
                */
            deleteDomainAssociation(args: DeleteDomainAssociationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDomainAssociationCommandOutput>;
            deleteDomainAssociation(args: DeleteDomainAssociationCommandInput, cb: (err: any, data?: DeleteDomainAssociationCommandOutput) => void): void;
            deleteDomainAssociation(args: DeleteDomainAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDomainAssociationCommandOutput) => void): void;
            /**
                * <p> Deletes a job for a branch of an Amplify app. </p>
                */
            deleteJob(args: DeleteJobCommandInput, options?: __HttpHandlerOptions): Promise<DeleteJobCommandOutput>;
            deleteJob(args: DeleteJobCommandInput, cb: (err: any, data?: DeleteJobCommandOutput) => void): void;
            deleteJob(args: DeleteJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteJobCommandOutput) => void): void;
            /**
                * <p> Deletes a webhook. </p>
                */
            deleteWebhook(args: DeleteWebhookCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWebhookCommandOutput>;
            deleteWebhook(args: DeleteWebhookCommandInput, cb: (err: any, data?: DeleteWebhookCommandOutput) => void): void;
            deleteWebhook(args: DeleteWebhookCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWebhookCommandOutput) => void): void;
            /**
                * <p> Returns the website access logs for a specific time range using a presigned URL.
                *         </p>
                */
            generateAccessLogs(args: GenerateAccessLogsCommandInput, options?: __HttpHandlerOptions): Promise<GenerateAccessLogsCommandOutput>;
            generateAccessLogs(args: GenerateAccessLogsCommandInput, cb: (err: any, data?: GenerateAccessLogsCommandOutput) => void): void;
            generateAccessLogs(args: GenerateAccessLogsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GenerateAccessLogsCommandOutput) => void): void;
            /**
                * <p> Returns an existing Amplify app by appID. </p>
                */
            getApp(args: GetAppCommandInput, options?: __HttpHandlerOptions): Promise<GetAppCommandOutput>;
            getApp(args: GetAppCommandInput, cb: (err: any, data?: GetAppCommandOutput) => void): void;
            getApp(args: GetAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAppCommandOutput) => void): void;
            /**
                * <p> Returns the artifact info that corresponds to an artifact id. </p>
                */
            getArtifactUrl(args: GetArtifactUrlCommandInput, options?: __HttpHandlerOptions): Promise<GetArtifactUrlCommandOutput>;
            getArtifactUrl(args: GetArtifactUrlCommandInput, cb: (err: any, data?: GetArtifactUrlCommandOutput) => void): void;
            getArtifactUrl(args: GetArtifactUrlCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetArtifactUrlCommandOutput) => void): void;
            /**
                * <p> Returns a backend environment for an Amplify app. </p>
                */
            getBackendEnvironment(args: GetBackendEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendEnvironmentCommandOutput>;
            getBackendEnvironment(args: GetBackendEnvironmentCommandInput, cb: (err: any, data?: GetBackendEnvironmentCommandOutput) => void): void;
            getBackendEnvironment(args: GetBackendEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendEnvironmentCommandOutput) => void): void;
            /**
                * <p> Returns a branch for an Amplify app. </p>
                */
            getBranch(args: GetBranchCommandInput, options?: __HttpHandlerOptions): Promise<GetBranchCommandOutput>;
            getBranch(args: GetBranchCommandInput, cb: (err: any, data?: GetBranchCommandOutput) => void): void;
            getBranch(args: GetBranchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBranchCommandOutput) => void): void;
            /**
                * <p> Returns the domain information for an Amplify app. </p>
                */
            getDomainAssociation(args: GetDomainAssociationCommandInput, options?: __HttpHandlerOptions): Promise<GetDomainAssociationCommandOutput>;
            getDomainAssociation(args: GetDomainAssociationCommandInput, cb: (err: any, data?: GetDomainAssociationCommandOutput) => void): void;
            getDomainAssociation(args: GetDomainAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDomainAssociationCommandOutput) => void): void;
            /**
                * <p> Returns a job for a branch of an Amplify app. </p>
                */
            getJob(args: GetJobCommandInput, options?: __HttpHandlerOptions): Promise<GetJobCommandOutput>;
            getJob(args: GetJobCommandInput, cb: (err: any, data?: GetJobCommandOutput) => void): void;
            getJob(args: GetJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetJobCommandOutput) => void): void;
            /**
                * <p> Returns the webhook information that corresponds to a specified webhook ID. </p>
                */
            getWebhook(args: GetWebhookCommandInput, options?: __HttpHandlerOptions): Promise<GetWebhookCommandOutput>;
            getWebhook(args: GetWebhookCommandInput, cb: (err: any, data?: GetWebhookCommandOutput) => void): void;
            getWebhook(args: GetWebhookCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetWebhookCommandOutput) => void): void;
            /**
                * <p> Returns a list of the existing Amplify apps. </p>
                */
            listApps(args: ListAppsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppsCommandOutput>;
            listApps(args: ListAppsCommandInput, cb: (err: any, data?: ListAppsCommandOutput) => void): void;
            listApps(args: ListAppsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppsCommandOutput) => void): void;
            /**
                * <p> Returns a list of artifacts for a specified app, branch, and job. </p>
                */
            listArtifacts(args: ListArtifactsCommandInput, options?: __HttpHandlerOptions): Promise<ListArtifactsCommandOutput>;
            listArtifacts(args: ListArtifactsCommandInput, cb: (err: any, data?: ListArtifactsCommandOutput) => void): void;
            listArtifacts(args: ListArtifactsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListArtifactsCommandOutput) => void): void;
            /**
                * <p> Lists the backend environments for an Amplify app. </p>
                */
            listBackendEnvironments(args: ListBackendEnvironmentsCommandInput, options?: __HttpHandlerOptions): Promise<ListBackendEnvironmentsCommandOutput>;
            listBackendEnvironments(args: ListBackendEnvironmentsCommandInput, cb: (err: any, data?: ListBackendEnvironmentsCommandOutput) => void): void;
            listBackendEnvironments(args: ListBackendEnvironmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBackendEnvironmentsCommandOutput) => void): void;
            /**
                * <p> Lists the branches of an Amplify app. </p>
                */
            listBranches(args: ListBranchesCommandInput, options?: __HttpHandlerOptions): Promise<ListBranchesCommandOutput>;
            listBranches(args: ListBranchesCommandInput, cb: (err: any, data?: ListBranchesCommandOutput) => void): void;
            listBranches(args: ListBranchesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBranchesCommandOutput) => void): void;
            /**
                * <p> Returns the domain associations for an Amplify app. </p>
                */
            listDomainAssociations(args: ListDomainAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainAssociationsCommandOutput>;
            listDomainAssociations(args: ListDomainAssociationsCommandInput, cb: (err: any, data?: ListDomainAssociationsCommandOutput) => void): void;
            listDomainAssociations(args: ListDomainAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainAssociationsCommandOutput) => void): void;
            /**
                * <p> Lists the jobs for a branch of an Amplify app. </p>
                */
            listJobs(args: ListJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListJobsCommandOutput>;
            listJobs(args: ListJobsCommandInput, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            listJobs(args: ListJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            /**
                * <p> Returns a list of tags for a specified Amazon Resource Name (ARN). </p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p> Returns a list of webhooks for an Amplify app. </p>
                */
            listWebhooks(args: ListWebhooksCommandInput, options?: __HttpHandlerOptions): Promise<ListWebhooksCommandOutput>;
            listWebhooks(args: ListWebhooksCommandInput, cb: (err: any, data?: ListWebhooksCommandOutput) => void): void;
            listWebhooks(args: ListWebhooksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWebhooksCommandOutput) => void): void;
            /**
                * <p> Starts a deployment for a manually deployed app. Manually deployed apps are not
                *             connected to a repository. </p>
                */
            startDeployment(args: StartDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<StartDeploymentCommandOutput>;
            startDeployment(args: StartDeploymentCommandInput, cb: (err: any, data?: StartDeploymentCommandOutput) => void): void;
            startDeployment(args: StartDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartDeploymentCommandOutput) => void): void;
            /**
                * <p> Starts a new job for a branch of an Amplify app. </p>
                */
            startJob(args: StartJobCommandInput, options?: __HttpHandlerOptions): Promise<StartJobCommandOutput>;
            startJob(args: StartJobCommandInput, cb: (err: any, data?: StartJobCommandOutput) => void): void;
            startJob(args: StartJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartJobCommandOutput) => void): void;
            /**
                * <p> Stops a job that is in progress for a branch of an Amplify app. </p>
                */
            stopJob(args: StopJobCommandInput, options?: __HttpHandlerOptions): Promise<StopJobCommandOutput>;
            stopJob(args: StopJobCommandInput, cb: (err: any, data?: StopJobCommandOutput) => void): void;
            stopJob(args: StopJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopJobCommandOutput) => void): void;
            /**
                * <p> Tags the resource with a tag key and value. </p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p> Untags a resource with a specified Amazon Resource Name (ARN). </p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p> Updates an existing Amplify app. </p>
                */
            updateApp(args: UpdateAppCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAppCommandOutput>;
            updateApp(args: UpdateAppCommandInput, cb: (err: any, data?: UpdateAppCommandOutput) => void): void;
            updateApp(args: UpdateAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAppCommandOutput) => void): void;
            /**
                * <p> Updates a branch for an Amplify app. </p>
                */
            updateBranch(args: UpdateBranchCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBranchCommandOutput>;
            updateBranch(args: UpdateBranchCommandInput, cb: (err: any, data?: UpdateBranchCommandOutput) => void): void;
            updateBranch(args: UpdateBranchCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBranchCommandOutput) => void): void;
            /**
                * <p> Creates a new domain association for an Amplify app.</p>
                */
            updateDomainAssociation(args: UpdateDomainAssociationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDomainAssociationCommandOutput>;
            updateDomainAssociation(args: UpdateDomainAssociationCommandInput, cb: (err: any, data?: UpdateDomainAssociationCommandOutput) => void): void;
            updateDomainAssociation(args: UpdateDomainAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDomainAssociationCommandOutput) => void): void;
            /**
                * <p> Updates a webhook. </p>
                */
            updateWebhook(args: UpdateWebhookCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWebhookCommandOutput>;
            updateWebhook(args: UpdateWebhookCommandInput, cb: (err: any, data?: UpdateWebhookCommandOutput) => void): void;
            updateWebhook(args: UpdateWebhookCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWebhookCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateAppCommandInput, CreateAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateAppCommand";
    import { CreateBackendEnvironmentCommandInput, CreateBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBackendEnvironmentCommand";
    import { CreateBranchCommandInput, CreateBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBranchCommand";
    import { CreateDeploymentCommandInput, CreateDeploymentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDeploymentCommand";
    import { CreateDomainAssociationCommandInput, CreateDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDomainAssociationCommand";
    import { CreateWebhookCommandInput, CreateWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateWebhookCommand";
    import { DeleteAppCommandInput, DeleteAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteAppCommand";
    import { DeleteBackendEnvironmentCommandInput, DeleteBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBackendEnvironmentCommand";
    import { DeleteBranchCommandInput, DeleteBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBranchCommand";
    import { DeleteDomainAssociationCommandInput, DeleteDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteDomainAssociationCommand";
    import { DeleteJobCommandInput, DeleteJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteJobCommand";
    import { DeleteWebhookCommandInput, DeleteWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteWebhookCommand";
    import { GenerateAccessLogsCommandInput, GenerateAccessLogsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GenerateAccessLogsCommand";
    import { GetAppCommandInput, GetAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetAppCommand";
    import { GetArtifactUrlCommandInput, GetArtifactUrlCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetArtifactUrlCommand";
    import { GetBackendEnvironmentCommandInput, GetBackendEnvironmentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBackendEnvironmentCommand";
    import { GetBranchCommandInput, GetBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBranchCommand";
    import { GetDomainAssociationCommandInput, GetDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetDomainAssociationCommand";
    import { GetJobCommandInput, GetJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetJobCommand";
    import { GetWebhookCommandInput, GetWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetWebhookCommand";
    import { ListAppsCommandInput, ListAppsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListAppsCommand";
    import { ListArtifactsCommandInput, ListArtifactsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListArtifactsCommand";
    import { ListBackendEnvironmentsCommandInput, ListBackendEnvironmentsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBackendEnvironmentsCommand";
    import { ListBranchesCommandInput, ListBranchesCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBranchesCommand";
    import { ListDomainAssociationsCommandInput, ListDomainAssociationsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListDomainAssociationsCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListJobsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebhooksCommandInput, ListWebhooksCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListWebhooksCommand";
    import { StartDeploymentCommandInput, StartDeploymentCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartDeploymentCommand";
    import { StartJobCommandInput, StartJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartJobCommand";
    import { StopJobCommandInput, StopJobCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StopJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UntagResourceCommand";
    import { UpdateAppCommandInput, UpdateAppCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateAppCommand";
    import { UpdateBranchCommandInput, UpdateBranchCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateBranchCommand";
    import { UpdateDomainAssociationCommandInput, UpdateDomainAssociationCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateDomainAssociationCommand";
    import { UpdateWebhookCommandInput, UpdateWebhookCommandOutput } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateWebhookCommand";
    export type ServiceInputTypes = CreateAppCommandInput | CreateBackendEnvironmentCommandInput | CreateBranchCommandInput | CreateDeploymentCommandInput | CreateDomainAssociationCommandInput | CreateWebhookCommandInput | DeleteAppCommandInput | DeleteBackendEnvironmentCommandInput | DeleteBranchCommandInput | DeleteDomainAssociationCommandInput | DeleteJobCommandInput | DeleteWebhookCommandInput | GenerateAccessLogsCommandInput | GetAppCommandInput | GetArtifactUrlCommandInput | GetBackendEnvironmentCommandInput | GetBranchCommandInput | GetDomainAssociationCommandInput | GetJobCommandInput | GetWebhookCommandInput | ListAppsCommandInput | ListArtifactsCommandInput | ListBackendEnvironmentsCommandInput | ListBranchesCommandInput | ListDomainAssociationsCommandInput | ListJobsCommandInput | ListTagsForResourceCommandInput | ListWebhooksCommandInput | StartDeploymentCommandInput | StartJobCommandInput | StopJobCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAppCommandInput | UpdateBranchCommandInput | UpdateDomainAssociationCommandInput | UpdateWebhookCommandInput;
    export type ServiceOutputTypes = CreateAppCommandOutput | CreateBackendEnvironmentCommandOutput | CreateBranchCommandOutput | CreateDeploymentCommandOutput | CreateDomainAssociationCommandOutput | CreateWebhookCommandOutput | DeleteAppCommandOutput | DeleteBackendEnvironmentCommandOutput | DeleteBranchCommandOutput | DeleteDomainAssociationCommandOutput | DeleteJobCommandOutput | DeleteWebhookCommandOutput | GenerateAccessLogsCommandOutput | GetAppCommandOutput | GetArtifactUrlCommandOutput | GetBackendEnvironmentCommandOutput | GetBranchCommandOutput | GetDomainAssociationCommandOutput | GetJobCommandOutput | GetWebhookCommandOutput | ListAppsCommandOutput | ListArtifactsCommandOutput | ListBackendEnvironmentsCommandOutput | ListBranchesCommandOutput | ListDomainAssociationsCommandOutput | ListJobsCommandOutput | ListTagsForResourceCommandOutput | ListWebhooksCommandOutput | StartDeploymentCommandOutput | StartJobCommandOutput | StopJobCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAppCommandOutput | UpdateBranchCommandOutput | UpdateDomainAssociationCommandOutput | UpdateWebhookCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type AmplifyClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of AmplifyClient class constructor that set the region, credentials and other options.
        */
    export interface AmplifyClientConfig extends AmplifyClientConfigType {
    }
    type AmplifyClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of AmplifyClient class. This is resolved and normalized from the {@link AmplifyClientConfig | constructor configuration interface}.
        */
    export interface AmplifyClientResolvedConfig extends AmplifyClientResolvedConfigType {
    }
    /**
        * <p>Amplify enables developers to develop and deploy cloud-powered mobile and web apps.
        *             The Amplify Console provides a continuous delivery and hosting service for web
        *             applications. For more information, see the <a href="https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html">Amplify Console User Guide</a>. The
        *             Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation
        *             for client app development. For more information, see the <a href="https://docs.amplify.aws/">Amplify Framework.</a>
        *          </p>
        */
    export class AmplifyClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AmplifyClientResolvedConfig> {
            /**
                * The resolved configuration of AmplifyClient class. This is resolved and normalized from the {@link AmplifyClientConfig | constructor configuration interface}.
                */
            readonly config: AmplifyClientResolvedConfig;
            constructor(configuration: AmplifyClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateAppRequest, CreateAppResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateAppCommandInput extends CreateAppRequest {
    }
    export interface CreateAppCommandOutput extends CreateAppResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateAppCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateAppCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAppCommandInput} for command's `input` shape.
        * @see {@link CreateAppCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateAppCommand extends $Command<CreateAppCommandInput, CreateAppCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateAppCommandInput;
            constructor(input: CreateAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAppCommandInput, CreateAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBackendEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateBackendEnvironmentRequest, CreateBackendEnvironmentResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateBackendEnvironmentCommandInput extends CreateBackendEnvironmentRequest {
    }
    export interface CreateBackendEnvironmentCommandOutput extends CreateBackendEnvironmentResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new backend environment for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateBackendEnvironmentCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateBackendEnvironmentCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateBackendEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendEnvironmentCommandInput} for command's `input` shape.
        * @see {@link CreateBackendEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateBackendEnvironmentCommand extends $Command<CreateBackendEnvironmentCommandInput, CreateBackendEnvironmentCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateBackendEnvironmentCommandInput;
            constructor(input: CreateBackendEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendEnvironmentCommandInput, CreateBackendEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateBranchCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateBranchRequest, CreateBranchResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateBranchCommandInput extends CreateBranchRequest {
    }
    export interface CreateBranchCommandOutput extends CreateBranchResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new branch for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateBranchCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateBranchCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateBranchCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBranchCommandInput} for command's `input` shape.
        * @see {@link CreateBranchCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateBranchCommand extends $Command<CreateBranchCommandInput, CreateBranchCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateBranchCommandInput;
            constructor(input: CreateBranchCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBranchCommandInput, CreateBranchCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateDeploymentRequest, CreateDeploymentResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateDeploymentCommandInput extends CreateDeploymentRequest {
    }
    export interface CreateDeploymentCommandOutput extends CreateDeploymentResult, __MetadataBearer {
    }
    /**
        * <p> Creates a deployment for a manually deployed Amplify app. Manually deployed apps are
        *             not connected to a repository. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateDeploymentCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateDeploymentCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDeploymentCommandInput} for command's `input` shape.
        * @see {@link CreateDeploymentCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateDeploymentCommand extends $Command<CreateDeploymentCommandInput, CreateDeploymentCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateDeploymentCommandInput;
            constructor(input: CreateDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDeploymentCommandInput, CreateDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateDomainAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateDomainAssociationRequest, CreateDomainAssociationResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateDomainAssociationCommandInput extends CreateDomainAssociationRequest {
    }
    export interface CreateDomainAssociationCommandOutput extends CreateDomainAssociationResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new domain association for an Amplify app. This action associates a custom
        *             domain with the Amplify app </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateDomainAssociationCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateDomainAssociationCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateDomainAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDomainAssociationCommandInput} for command's `input` shape.
        * @see {@link CreateDomainAssociationCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateDomainAssociationCommand extends $Command<CreateDomainAssociationCommandInput, CreateDomainAssociationCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateDomainAssociationCommandInput;
            constructor(input: CreateDomainAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDomainAssociationCommandInput, CreateDomainAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/CreateWebhookCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { CreateWebhookRequest, CreateWebhookResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface CreateWebhookCommandInput extends CreateWebhookRequest {
    }
    export interface CreateWebhookCommandOutput extends CreateWebhookResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new webhook on an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, CreateWebhookCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, CreateWebhookCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new CreateWebhookCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateWebhookCommandInput} for command's `input` shape.
        * @see {@link CreateWebhookCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class CreateWebhookCommand extends $Command<CreateWebhookCommandInput, CreateWebhookCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: CreateWebhookCommandInput;
            constructor(input: CreateWebhookCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWebhookCommandInput, CreateWebhookCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteAppRequest, DeleteAppResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteAppCommandInput extends DeleteAppRequest {
    }
    export interface DeleteAppCommandOutput extends DeleteAppResult, __MetadataBearer {
    }
    /**
        * <p> Deletes an existing Amplify app specified by an app ID. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteAppCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteAppCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppCommandInput} for command's `input` shape.
        * @see {@link DeleteAppCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteAppCommand extends $Command<DeleteAppCommandInput, DeleteAppCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteAppCommandInput;
            constructor(input: DeleteAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppCommandInput, DeleteAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBackendEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteBackendEnvironmentRequest, DeleteBackendEnvironmentResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteBackendEnvironmentCommandInput extends DeleteBackendEnvironmentRequest {
    }
    export interface DeleteBackendEnvironmentCommandOutput extends DeleteBackendEnvironmentResult, __MetadataBearer {
    }
    /**
        * <p> Deletes a backend environment for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteBackendEnvironmentCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteBackendEnvironmentCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteBackendEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBackendEnvironmentCommandInput} for command's `input` shape.
        * @see {@link DeleteBackendEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteBackendEnvironmentCommand extends $Command<DeleteBackendEnvironmentCommandInput, DeleteBackendEnvironmentCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteBackendEnvironmentCommandInput;
            constructor(input: DeleteBackendEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBackendEnvironmentCommandInput, DeleteBackendEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteBranchCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteBranchRequest, DeleteBranchResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteBranchCommandInput extends DeleteBranchRequest {
    }
    export interface DeleteBranchCommandOutput extends DeleteBranchResult, __MetadataBearer {
    }
    /**
        * <p> Deletes a branch for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteBranchCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteBranchCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteBranchCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBranchCommandInput} for command's `input` shape.
        * @see {@link DeleteBranchCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteBranchCommand extends $Command<DeleteBranchCommandInput, DeleteBranchCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteBranchCommandInput;
            constructor(input: DeleteBranchCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBranchCommandInput, DeleteBranchCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteDomainAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteDomainAssociationRequest, DeleteDomainAssociationResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteDomainAssociationCommandInput extends DeleteDomainAssociationRequest {
    }
    export interface DeleteDomainAssociationCommandOutput extends DeleteDomainAssociationResult, __MetadataBearer {
    }
    /**
        * <p> Deletes a domain association for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteDomainAssociationCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteDomainAssociationCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteDomainAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDomainAssociationCommandInput} for command's `input` shape.
        * @see {@link DeleteDomainAssociationCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteDomainAssociationCommand extends $Command<DeleteDomainAssociationCommandInput, DeleteDomainAssociationCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteDomainAssociationCommandInput;
            constructor(input: DeleteDomainAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDomainAssociationCommandInput, DeleteDomainAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteJobRequest, DeleteJobResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteJobCommandInput extends DeleteJobRequest {
    }
    export interface DeleteJobCommandOutput extends DeleteJobResult, __MetadataBearer {
    }
    /**
        * <p> Deletes a job for a branch of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteJobCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteJobCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteJobCommandInput} for command's `input` shape.
        * @see {@link DeleteJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteJobCommand extends $Command<DeleteJobCommandInput, DeleteJobCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteJobCommandInput;
            constructor(input: DeleteJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteJobCommandInput, DeleteJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/DeleteWebhookCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { DeleteWebhookRequest, DeleteWebhookResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface DeleteWebhookCommandInput extends DeleteWebhookRequest {
    }
    export interface DeleteWebhookCommandOutput extends DeleteWebhookResult, __MetadataBearer {
    }
    /**
        * <p> Deletes a webhook. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, DeleteWebhookCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, DeleteWebhookCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new DeleteWebhookCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteWebhookCommandInput} for command's `input` shape.
        * @see {@link DeleteWebhookCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class DeleteWebhookCommand extends $Command<DeleteWebhookCommandInput, DeleteWebhookCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: DeleteWebhookCommandInput;
            constructor(input: DeleteWebhookCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteWebhookCommandInput, DeleteWebhookCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GenerateAccessLogsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GenerateAccessLogsRequest, GenerateAccessLogsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GenerateAccessLogsCommandInput extends GenerateAccessLogsRequest {
    }
    export interface GenerateAccessLogsCommandOutput extends GenerateAccessLogsResult, __MetadataBearer {
    }
    /**
        * <p> Returns the website access logs for a specific time range using a presigned URL.
        *         </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GenerateAccessLogsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GenerateAccessLogsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GenerateAccessLogsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GenerateAccessLogsCommandInput} for command's `input` shape.
        * @see {@link GenerateAccessLogsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GenerateAccessLogsCommand extends $Command<GenerateAccessLogsCommandInput, GenerateAccessLogsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GenerateAccessLogsCommandInput;
            constructor(input: GenerateAccessLogsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GenerateAccessLogsCommandInput, GenerateAccessLogsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetAppRequest, GetAppResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetAppCommandInput extends GetAppRequest {
    }
    export interface GetAppCommandOutput extends GetAppResult, __MetadataBearer {
    }
    /**
        * <p> Returns an existing Amplify app by appID. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetAppCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetAppCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAppCommandInput} for command's `input` shape.
        * @see {@link GetAppCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetAppCommand extends $Command<GetAppCommandInput, GetAppCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetAppCommandInput;
            constructor(input: GetAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAppCommandInput, GetAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetArtifactUrlCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetArtifactUrlRequest, GetArtifactUrlResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetArtifactUrlCommandInput extends GetArtifactUrlRequest {
    }
    export interface GetArtifactUrlCommandOutput extends GetArtifactUrlResult, __MetadataBearer {
    }
    /**
        * <p> Returns the artifact info that corresponds to an artifact id. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetArtifactUrlCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetArtifactUrlCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetArtifactUrlCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetArtifactUrlCommandInput} for command's `input` shape.
        * @see {@link GetArtifactUrlCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetArtifactUrlCommand extends $Command<GetArtifactUrlCommandInput, GetArtifactUrlCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetArtifactUrlCommandInput;
            constructor(input: GetArtifactUrlCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetArtifactUrlCommandInput, GetArtifactUrlCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBackendEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetBackendEnvironmentRequest, GetBackendEnvironmentResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetBackendEnvironmentCommandInput extends GetBackendEnvironmentRequest {
    }
    export interface GetBackendEnvironmentCommandOutput extends GetBackendEnvironmentResult, __MetadataBearer {
    }
    /**
        * <p> Returns a backend environment for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetBackendEnvironmentCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetBackendEnvironmentCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetBackendEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendEnvironmentCommandInput} for command's `input` shape.
        * @see {@link GetBackendEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetBackendEnvironmentCommand extends $Command<GetBackendEnvironmentCommandInput, GetBackendEnvironmentCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetBackendEnvironmentCommandInput;
            constructor(input: GetBackendEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendEnvironmentCommandInput, GetBackendEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetBranchCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetBranchRequest, GetBranchResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetBranchCommandInput extends GetBranchRequest {
    }
    export interface GetBranchCommandOutput extends GetBranchResult, __MetadataBearer {
    }
    /**
        * <p> Returns a branch for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetBranchCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetBranchCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetBranchCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBranchCommandInput} for command's `input` shape.
        * @see {@link GetBranchCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetBranchCommand extends $Command<GetBranchCommandInput, GetBranchCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetBranchCommandInput;
            constructor(input: GetBranchCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBranchCommandInput, GetBranchCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetDomainAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetDomainAssociationRequest, GetDomainAssociationResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetDomainAssociationCommandInput extends GetDomainAssociationRequest {
    }
    export interface GetDomainAssociationCommandOutput extends GetDomainAssociationResult, __MetadataBearer {
    }
    /**
        * <p> Returns the domain information for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetDomainAssociationCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetDomainAssociationCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetDomainAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDomainAssociationCommandInput} for command's `input` shape.
        * @see {@link GetDomainAssociationCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetDomainAssociationCommand extends $Command<GetDomainAssociationCommandInput, GetDomainAssociationCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetDomainAssociationCommandInput;
            constructor(input: GetDomainAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDomainAssociationCommandInput, GetDomainAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetJobRequest, GetJobResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetJobCommandInput extends GetJobRequest {
    }
    export interface GetJobCommandOutput extends GetJobResult, __MetadataBearer {
    }
    /**
        * <p> Returns a job for a branch of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetJobCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetJobCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetJobCommandInput} for command's `input` shape.
        * @see {@link GetJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetJobCommand extends $Command<GetJobCommandInput, GetJobCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetJobCommandInput;
            constructor(input: GetJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetJobCommandInput, GetJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/GetWebhookCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { GetWebhookRequest, GetWebhookResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface GetWebhookCommandInput extends GetWebhookRequest {
    }
    export interface GetWebhookCommandOutput extends GetWebhookResult, __MetadataBearer {
    }
    /**
        * <p> Returns the webhook information that corresponds to a specified webhook ID. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, GetWebhookCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, GetWebhookCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new GetWebhookCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetWebhookCommandInput} for command's `input` shape.
        * @see {@link GetWebhookCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class GetWebhookCommand extends $Command<GetWebhookCommandInput, GetWebhookCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: GetWebhookCommandInput;
            constructor(input: GetWebhookCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetWebhookCommandInput, GetWebhookCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListAppsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListAppsRequest, ListAppsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListAppsCommandInput extends ListAppsRequest {
    }
    export interface ListAppsCommandOutput extends ListAppsResult, __MetadataBearer {
    }
    /**
        * <p> Returns a list of the existing Amplify apps. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListAppsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListAppsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListAppsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppsCommandInput} for command's `input` shape.
        * @see {@link ListAppsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListAppsCommand extends $Command<ListAppsCommandInput, ListAppsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListAppsCommandInput;
            constructor(input: ListAppsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppsCommandInput, ListAppsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListArtifactsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListArtifactsRequest, ListArtifactsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListArtifactsCommandInput extends ListArtifactsRequest {
    }
    export interface ListArtifactsCommandOutput extends ListArtifactsResult, __MetadataBearer {
    }
    /**
        * <p> Returns a list of artifacts for a specified app, branch, and job. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListArtifactsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListArtifactsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListArtifactsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListArtifactsCommandInput} for command's `input` shape.
        * @see {@link ListArtifactsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListArtifactsCommand extends $Command<ListArtifactsCommandInput, ListArtifactsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListArtifactsCommandInput;
            constructor(input: ListArtifactsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListArtifactsCommandInput, ListArtifactsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBackendEnvironmentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListBackendEnvironmentsRequest, ListBackendEnvironmentsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListBackendEnvironmentsCommandInput extends ListBackendEnvironmentsRequest {
    }
    export interface ListBackendEnvironmentsCommandOutput extends ListBackendEnvironmentsResult, __MetadataBearer {
    }
    /**
        * <p> Lists the backend environments for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListBackendEnvironmentsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListBackendEnvironmentsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListBackendEnvironmentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBackendEnvironmentsCommandInput} for command's `input` shape.
        * @see {@link ListBackendEnvironmentsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListBackendEnvironmentsCommand extends $Command<ListBackendEnvironmentsCommandInput, ListBackendEnvironmentsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListBackendEnvironmentsCommandInput;
            constructor(input: ListBackendEnvironmentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBackendEnvironmentsCommandInput, ListBackendEnvironmentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListBranchesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListBranchesRequest, ListBranchesResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListBranchesCommandInput extends ListBranchesRequest {
    }
    export interface ListBranchesCommandOutput extends ListBranchesResult, __MetadataBearer {
    }
    /**
        * <p> Lists the branches of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListBranchesCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListBranchesCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListBranchesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBranchesCommandInput} for command's `input` shape.
        * @see {@link ListBranchesCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListBranchesCommand extends $Command<ListBranchesCommandInput, ListBranchesCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListBranchesCommandInput;
            constructor(input: ListBranchesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBranchesCommandInput, ListBranchesCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListDomainAssociationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListDomainAssociationsRequest, ListDomainAssociationsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListDomainAssociationsCommandInput extends ListDomainAssociationsRequest {
    }
    export interface ListDomainAssociationsCommandOutput extends ListDomainAssociationsResult, __MetadataBearer {
    }
    /**
        * <p> Returns the domain associations for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListDomainAssociationsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListDomainAssociationsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListDomainAssociationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDomainAssociationsCommandInput} for command's `input` shape.
        * @see {@link ListDomainAssociationsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListDomainAssociationsCommand extends $Command<ListDomainAssociationsCommandInput, ListDomainAssociationsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListDomainAssociationsCommandInput;
            constructor(input: ListDomainAssociationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDomainAssociationsCommandInput, ListDomainAssociationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListJobsRequest, ListJobsResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListJobsCommandInput extends ListJobsRequest {
    }
    export interface ListJobsCommandOutput extends ListJobsResult, __MetadataBearer {
    }
    /**
        * <p> Lists the jobs for a branch of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListJobsCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListJobsCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobsCommandInput} for command's `input` shape.
        * @see {@link ListJobsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListJobsCommand extends $Command<ListJobsCommandInput, ListJobsCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListJobsCommandInput;
            constructor(input: ListJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobsCommandInput, ListJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p> Returns a list of tags for a specified Amazon Resource Name (ARN). </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListTagsForResourceCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListTagsForResourceCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/ListWebhooksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { ListWebhooksRequest, ListWebhooksResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface ListWebhooksCommandInput extends ListWebhooksRequest {
    }
    export interface ListWebhooksCommandOutput extends ListWebhooksResult, __MetadataBearer {
    }
    /**
        * <p> Returns a list of webhooks for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, ListWebhooksCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, ListWebhooksCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new ListWebhooksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListWebhooksCommandInput} for command's `input` shape.
        * @see {@link ListWebhooksCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class ListWebhooksCommand extends $Command<ListWebhooksCommandInput, ListWebhooksCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: ListWebhooksCommandInput;
            constructor(input: ListWebhooksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListWebhooksCommandInput, ListWebhooksCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { StartDeploymentRequest, StartDeploymentResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface StartDeploymentCommandInput extends StartDeploymentRequest {
    }
    export interface StartDeploymentCommandOutput extends StartDeploymentResult, __MetadataBearer {
    }
    /**
        * <p> Starts a deployment for a manually deployed app. Manually deployed apps are not
        *             connected to a repository. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, StartDeploymentCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, StartDeploymentCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new StartDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartDeploymentCommandInput} for command's `input` shape.
        * @see {@link StartDeploymentCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class StartDeploymentCommand extends $Command<StartDeploymentCommandInput, StartDeploymentCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: StartDeploymentCommandInput;
            constructor(input: StartDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartDeploymentCommandInput, StartDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StartJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { StartJobRequest, StartJobResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface StartJobCommandInput extends StartJobRequest {
    }
    export interface StartJobCommandOutput extends StartJobResult, __MetadataBearer {
    }
    /**
        * <p> Starts a new job for a branch of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, StartJobCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, StartJobCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new StartJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartJobCommandInput} for command's `input` shape.
        * @see {@link StartJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class StartJobCommand extends $Command<StartJobCommandInput, StartJobCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: StartJobCommandInput;
            constructor(input: StartJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartJobCommandInput, StartJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/StopJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { StopJobRequest, StopJobResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface StopJobCommandInput extends StopJobRequest {
    }
    export interface StopJobCommandOutput extends StopJobResult, __MetadataBearer {
    }
    /**
        * <p> Stops a job that is in progress for a branch of an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, StopJobCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, StopJobCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new StopJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopJobCommandInput} for command's `input` shape.
        * @see {@link StopJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class StopJobCommand extends $Command<StopJobCommandInput, StopJobCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: StopJobCommandInput;
            constructor(input: StopJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopJobCommandInput, StopJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p> Tags the resource with a tag key and value. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, TagResourceCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, TagResourceCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p> Untags a resource with a specified Amazon Resource Name (ARN). </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, UntagResourceCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, UntagResourceCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { UpdateAppRequest, UpdateAppResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface UpdateAppCommandInput extends UpdateAppRequest {
    }
    export interface UpdateAppCommandOutput extends UpdateAppResult, __MetadataBearer {
    }
    /**
        * <p> Updates an existing Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, UpdateAppCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, UpdateAppCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new UpdateAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAppCommandInput} for command's `input` shape.
        * @see {@link UpdateAppCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class UpdateAppCommand extends $Command<UpdateAppCommandInput, UpdateAppCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: UpdateAppCommandInput;
            constructor(input: UpdateAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAppCommandInput, UpdateAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateBranchCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { UpdateBranchRequest, UpdateBranchResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface UpdateBranchCommandInput extends UpdateBranchRequest {
    }
    export interface UpdateBranchCommandOutput extends UpdateBranchResult, __MetadataBearer {
    }
    /**
        * <p> Updates a branch for an Amplify app. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, UpdateBranchCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, UpdateBranchCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new UpdateBranchCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBranchCommandInput} for command's `input` shape.
        * @see {@link UpdateBranchCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class UpdateBranchCommand extends $Command<UpdateBranchCommandInput, UpdateBranchCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: UpdateBranchCommandInput;
            constructor(input: UpdateBranchCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBranchCommandInput, UpdateBranchCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateDomainAssociationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { UpdateDomainAssociationRequest, UpdateDomainAssociationResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface UpdateDomainAssociationCommandInput extends UpdateDomainAssociationRequest {
    }
    export interface UpdateDomainAssociationCommandOutput extends UpdateDomainAssociationResult, __MetadataBearer {
    }
    /**
        * <p> Creates a new domain association for an Amplify app.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, UpdateDomainAssociationCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, UpdateDomainAssociationCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new UpdateDomainAssociationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDomainAssociationCommandInput} for command's `input` shape.
        * @see {@link UpdateDomainAssociationCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class UpdateDomainAssociationCommand extends $Command<UpdateDomainAssociationCommandInput, UpdateDomainAssociationCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: UpdateDomainAssociationCommandInput;
            constructor(input: UpdateDomainAssociationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDomainAssociationCommandInput, UpdateDomainAssociationCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/commands/UpdateWebhookCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/AmplifyClient";
    import { UpdateWebhookRequest, UpdateWebhookResult } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0";
    export interface UpdateWebhookCommandInput extends UpdateWebhookRequest {
    }
    export interface UpdateWebhookCommandOutput extends UpdateWebhookResult, __MetadataBearer {
    }
    /**
        * <p> Updates a webhook. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyClient, UpdateWebhookCommand } from "@aws-sdk/client-amplify"; // ES Modules import
        * // const { AmplifyClient, UpdateWebhookCommand } = require("@aws-sdk/client-amplify"); // CommonJS import
        * const client = new AmplifyClient(config);
        * const command = new UpdateWebhookCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateWebhookCommandInput} for command's `input` shape.
        * @see {@link UpdateWebhookCommandOutput} for command's `response` shape.
        * @see {@link AmplifyClientResolvedConfig | config} for AmplifyClient's `config` shape.
        *
        */
    export class UpdateWebhookCommand extends $Command<UpdateWebhookCommandInput, UpdateWebhookCommandOutput, AmplifyClientResolvedConfig> {
            readonly input: UpdateWebhookCommandInput;
            constructor(input: UpdateWebhookCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateWebhookCommandInput, UpdateWebhookCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { AmplifyServiceException as __BaseException } from "@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/AmplifyServiceException";
    /**
        * <p> A request contains unexpected data. </p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    export enum Stage {
            BETA = "BETA",
            DEVELOPMENT = "DEVELOPMENT",
            EXPERIMENTAL = "EXPERIMENTAL",
            PRODUCTION = "PRODUCTION",
            PULL_REQUEST = "PULL_REQUEST"
    }
    /**
        * <p> Describes the automated branch creation configuration. </p>
        */
    export interface AutoBranchCreationConfig {
            /**
                * <p> Describes the current stage for the autocreated branch. </p>
                */
            stage?: Stage | string;
            /**
                * <p> The framework for the autocreated branch. </p>
                */
            framework?: string;
            /**
                * <p> Enables auto building for the autocreated branch. </p>
                */
            enableAutoBuild?: boolean;
            /**
                * <p> The environment variables for the autocreated branch. </p>
                */
            environmentVariables?: Record<string, string>;
            /**
                * <p> The basic authorization credentials for the autocreated branch. You must
                *             base64-encode the authorization credentials and provide them in the format
                *                 <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> Enables basic authorization for the autocreated branch. </p>
                */
            enableBasicAuth?: boolean;
            /**
                * <p>Enables performance mode for the branch.</p>
                *         <p>Performance mode optimizes for faster hosting performance by keeping content cached at
                *             the edge for a longer interval. When performance mode is enabled, hosting configuration
                *             or code changes can take up to 10 minutes to roll out. </p>
                */
            enablePerformanceMode?: boolean;
            /**
                * <p> The build specification (build spec) for the autocreated branch. </p>
                */
            buildSpec?: string;
            /**
                * <p> Enables pull request previews for the autocreated branch. </p>
                */
            enablePullRequestPreview?: boolean;
            /**
                * <p> The Amplify environment name for the pull request. </p>
                */
            pullRequestEnvironmentName?: string;
    }
    export namespace AutoBranchCreationConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AutoBranchCreationConfig) => any;
    }
    /**
        * <p> Describes a custom rewrite or redirect rule. </p>
        */
    export interface CustomRule {
            /**
                * <p> The source pattern for a URL rewrite or redirect rule. </p>
                */
            source: string | undefined;
            /**
                * <p> The target pattern for a URL rewrite or redirect rule. </p>
                */
            target: string | undefined;
            /**
                * <p> The status code for a URL rewrite or redirect rule. </p>
                *
                *         <dl>
                *             <dt>200</dt>
                *             <dd>
                *                     <p>Represents a 200 rewrite rule.</p>
                *                 </dd>
                *             <dt>301</dt>
                *             <dd>
                *                     <p>Represents a 301 (moved pemanently) redirect rule. This and all future
                *                         requests should be directed to the target URL. </p>
                *                 </dd>
                *             <dt>302</dt>
                *             <dd>
                *                     <p>Represents a 302 temporary redirect rule.</p>
                *                 </dd>
                *             <dt>404</dt>
                *             <dd>
                *                     <p>Represents a 404 redirect rule.</p>
                *                 </dd>
                *             <dt>404-200</dt>
                *             <dd>
                *                     <p>Represents a 404 rewrite rule.</p>
                *                 </dd>
                *          </dl>
                */
            status?: string;
            /**
                * <p> The condition for a URL rewrite or redirect rule, such as a country code. </p>
                */
            condition?: string;
    }
    export namespace CustomRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CustomRule) => any;
    }
    export enum Platform {
            WEB = "WEB",
            WEB_DYNAMIC = "WEB_DYNAMIC"
    }
    /**
        * <p> The request structure used to create apps in Amplify. </p>
        */
    export interface CreateAppRequest {
            /**
                * <p> The name for an Amplify app. </p>
                */
            name: string | undefined;
            /**
                * <p> The description for an Amplify app. </p>
                */
            description?: string;
            /**
                * <p> The repository for an Amplify app. </p>
                */
            repository?: string;
            /**
                * <p> The platform or framework for an Amplify app. </p>
                */
            platform?: Platform | string;
            /**
                * <p> The AWS Identity and Access Management (IAM) service role for an Amplify app. </p>
                */
            iamServiceRoleArn?: string;
            /**
                * <p>The OAuth token for a third-party source control system for an Amplify app. The OAuth
                *             token is used to create a webhook and a read-only deploy key using SSH cloning. The
                *             OAuth token is not stored.</p>
                *         <p>Use <code>oauthToken</code> for repository providers other than GitHub, such as
                *             Bitbucket or CodeCommit. To authorize access to GitHub as your repository provider, use
                *                 <code>accessToken</code>.</p>
                *         <p>You must specify either <code>oauthToken</code> or <code>accessToken</code> when you
                *             create a new app.</p>
                *         <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work
                *             with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub
                *             App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the
                *                 <i>Amplify User Guide</i> .</p>
                */
            oauthToken?: string;
            /**
                * <p>The personal access token for a GitHub repository for an Amplify app. The personal
                *             access token is used to authorize access to a GitHub repository using the Amplify GitHub
                *             App. The token is not stored.</p>
                *         <p>Use <code>accessToken</code> for GitHub repositories only. To authorize access to a
                *             repository provider such as Bitbucket or CodeCommit, use <code>oauthToken</code>.</p>
                *         <p>You must specify either <code>accessToken</code> or <code>oauthToken</code> when you
                *             create a new app.</p>
                *         <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work
                *             with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub
                *             App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the
                *                 <i>Amplify User Guide</i> .</p>
                */
            accessToken?: string;
            /**
                * <p> The environment variables map for an Amplify app. </p>
                */
            environmentVariables?: Record<string, string>;
            /**
                * <p> Enables the auto building of branches for an Amplify app. </p>
                */
            enableBranchAutoBuild?: boolean;
            /**
                * <p> Automatically disconnects a branch in the Amplify Console when you delete a branch
                *             from your Git repository. </p>
                */
            enableBranchAutoDeletion?: boolean;
            /**
                * <p> Enables basic authorization for an Amplify app. This will apply to all branches that
                *             are part of this app. </p>
                */
            enableBasicAuth?: boolean;
            /**
                * <p> The credentials for basic authorization for an Amplify app. You must base64-encode
                *             the authorization credentials and provide them in the format
                *             <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> The custom rewrite and redirect rules for an Amplify app. </p>
                */
            customRules?: CustomRule[];
            /**
                * <p> The tag for an Amplify app. </p>
                */
            tags?: Record<string, string>;
            /**
                * <p> The build specification (build spec) for an Amplify app. </p>
                */
            buildSpec?: string;
            /**
                * <p>The custom HTTP headers for an Amplify app.</p>
                */
            customHeaders?: string;
            /**
                * <p> Enables automated branch creation for an Amplify app. </p>
                */
            enableAutoBranchCreation?: boolean;
            /**
                * <p> The automated branch creation glob patterns for an Amplify app. </p>
                */
            autoBranchCreationPatterns?: string[];
            /**
                * <p> The automated branch creation configuration for an Amplify app. </p>
                */
            autoBranchCreationConfig?: AutoBranchCreationConfig;
    }
    export namespace CreateAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppRequest) => any;
    }
    /**
        * <p> Describes the information about a production branch for an Amplify app. </p>
        */
    export interface ProductionBranch {
            /**
                * <p> The last deploy time of the production branch. </p>
                */
            lastDeployTime?: Date;
            /**
                * <p> The status of the production branch. </p>
                */
            status?: string;
            /**
                * <p> The thumbnail URL for the production branch. </p>
                */
            thumbnailUrl?: string;
            /**
                * <p> The branch name for the production branch. </p>
                */
            branchName?: string;
    }
    export namespace ProductionBranch {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProductionBranch) => any;
    }
    export enum RepositoryCloneMethod {
            SIGV4 = "SIGV4",
            SSH = "SSH",
            TOKEN = "TOKEN"
    }
    /**
        * <p> Represents the different branches of a repository for building, deploying, and
        *             hosting an Amplify app. </p>
        */
    export interface App {
            /**
                * <p> The unique ID of the Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The Amazon Resource Name (ARN) of the Amplify app. </p>
                */
            appArn: string | undefined;
            /**
                * <p> The name for the Amplify app. </p>
                */
            name: string | undefined;
            /**
                * <p> The tag for the Amplify app. </p>
                */
            tags?: Record<string, string>;
            /**
                * <p> The description for the Amplify app. </p>
                */
            description: string | undefined;
            /**
                * <p> The Git repository for the Amplify app. </p>
                */
            repository: string | undefined;
            /**
                * <p> The platform for the Amplify app. </p>
                */
            platform: Platform | string | undefined;
            /**
                * <p> Creates a date and time for the Amplify app. </p>
                */
            createTime: Date | undefined;
            /**
                * <p> Updates the date and time for the Amplify app. </p>
                */
            updateTime: Date | undefined;
            /**
                * <p> The AWS Identity and Access Management (IAM) service role for the Amazon Resource
                *             Name (ARN) of the Amplify app. </p>
                */
            iamServiceRoleArn?: string;
            /**
                * <p> The environment variables for the Amplify app. </p>
                */
            environmentVariables: Record<string, string> | undefined;
            /**
                * <p> The default domain for the Amplify app. </p>
                */
            defaultDomain: string | undefined;
            /**
                * <p> Enables the auto-building of branches for the Amplify app. </p>
                */
            enableBranchAutoBuild: boolean | undefined;
            /**
                * <p> Automatically disconnect a branch in the Amplify Console when you delete a branch
                *             from your Git repository. </p>
                */
            enableBranchAutoDeletion?: boolean;
            /**
                * <p> Enables basic authorization for the Amplify app's branches. </p>
                */
            enableBasicAuth: boolean | undefined;
            /**
                * <p> The basic authorization credentials for branches for the Amplify app. You must
                *             base64-encode the authorization credentials and provide them in the format
                *                 <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> Describes the custom redirect and rewrite rules for the Amplify app. </p>
                */
            customRules?: CustomRule[];
            /**
                * <p> Describes the information about a production branch of the Amplify app. </p>
                */
            productionBranch?: ProductionBranch;
            /**
                * <p> Describes the content of the build specification (build spec) for the Amplify app.
                *         </p>
                */
            buildSpec?: string;
            /**
                * <p>Describes the custom HTTP headers for the Amplify app.</p>
                */
            customHeaders?: string;
            /**
                * <p> Enables automated branch creation for the Amplify app. </p>
                */
            enableAutoBranchCreation?: boolean;
            /**
                * <p> Describes the automated branch creation glob patterns for the Amplify app. </p>
                */
            autoBranchCreationPatterns?: string[];
            /**
                * <p> Describes the automated branch creation configuration for the Amplify app. </p>
                */
            autoBranchCreationConfig?: AutoBranchCreationConfig;
            /**
                * <note>
                *             <p>This is for internal use.</p>
                *         </note>
                *         <p>The Amplify service uses this parameter to specify the authentication protocol to use to access
                *             the Git repository for an Amplify app. Amplify specifies <code>TOKEN</code> for a GitHub
                *             repository, <code>SIGV4</code> for an Amazon Web Services CodeCommit repository, and
                *                 <code>SSH</code> for GitLab and Bitbucket repositories.</p>
                */
            repositoryCloneMethod?: RepositoryCloneMethod | string;
    }
    export namespace App {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: App) => any;
    }
    export interface CreateAppResult {
            /**
                * <p> Represents the different branches of a repository for building, deploying, and
                *             hosting an Amplify app. </p>
                */
            app: App | undefined;
    }
    export namespace CreateAppResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppResult) => any;
    }
    /**
        * <p> An operation failed because a dependent service threw an exception. </p>
        */
    export class DependentServiceFailureException extends __BaseException {
            readonly name: "DependentServiceFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DependentServiceFailureException, __BaseException>);
    }
    /**
        * <p> The service failed to perform an operation due to an internal issue. </p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p> A resource could not be created because service quotas were exceeded. </p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p> An operation failed due to a lack of access. </p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    /**
        * <p> The request structure for the backend environment create request. </p>
        */
    export interface CreateBackendEnvironmentRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the backend environment. </p>
                */
            environmentName: string | undefined;
            /**
                * <p> The AWS CloudFormation stack name of a backend environment. </p>
                */
            stackName?: string;
            /**
                * <p> The name of deployment artifacts. </p>
                */
            deploymentArtifacts?: string;
    }
    export namespace CreateBackendEnvironmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendEnvironmentRequest) => any;
    }
    /**
        * <p> Describes the backend environment for an Amplify app. </p>
        */
    export interface BackendEnvironment {
            /**
                * <p> The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify
                *             app. </p>
                */
            backendEnvironmentArn: string | undefined;
            /**
                * <p> The name for a backend environment that is part of an Amplify app. </p>
                */
            environmentName: string | undefined;
            /**
                * <p> The AWS CloudFormation stack name of a backend environment. </p>
                */
            stackName?: string;
            /**
                * <p> The name of deployment artifacts. </p>
                */
            deploymentArtifacts?: string;
            /**
                * <p> The creation date and time for a backend environment that is part of an Amplify app.
                *         </p>
                */
            createTime: Date | undefined;
            /**
                * <p> The last updated date and time for a backend environment that is part of an Amplify
                *             app. </p>
                */
            updateTime: Date | undefined;
    }
    export namespace BackendEnvironment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendEnvironment) => any;
    }
    /**
        * <p> The result structure for the create backend environment request. </p>
        */
    export interface CreateBackendEnvironmentResult {
            /**
                * <p> Describes the backend environment for an Amplify app. </p>
                */
            backendEnvironment: BackendEnvironment | undefined;
    }
    export namespace CreateBackendEnvironmentResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendEnvironmentResult) => any;
    }
    /**
        * <p> An entity was not found during an operation. </p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    /**
        * <p> The request structure for the create branch request. </p>
        */
    export interface CreateBranchRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The description for the branch. </p>
                */
            description?: string;
            /**
                * <p> Describes the current stage for the branch. </p>
                */
            stage?: Stage | string;
            /**
                * <p> The framework for the branch. </p>
                */
            framework?: string;
            /**
                * <p> Enables notifications for the branch. </p>
                */
            enableNotification?: boolean;
            /**
                * <p> Enables auto building for the branch. </p>
                */
            enableAutoBuild?: boolean;
            /**
                * <p> The environment variables for the branch. </p>
                */
            environmentVariables?: Record<string, string>;
            /**
                * <p> The basic authorization credentials for the branch. You must base64-encode the
                *             authorization credentials and provide them in the format
                *             <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> Enables basic authorization for the branch. </p>
                */
            enableBasicAuth?: boolean;
            /**
                * <p>Enables performance mode for the branch.</p>
                *         <p>Performance mode optimizes for faster hosting performance by keeping content cached at
                *             the edge for a longer interval. When performance mode is enabled, hosting configuration
                *             or code changes can take up to 10 minutes to roll out. </p>
                */
            enablePerformanceMode?: boolean;
            /**
                * <p> The tag for the branch. </p>
                */
            tags?: Record<string, string>;
            /**
                * <p> The build specification (build spec) for the branch. </p>
                */
            buildSpec?: string;
            /**
                * <p> The content Time To Live (TTL) for the website in seconds. </p>
                */
            ttl?: string;
            /**
                * <p> The display name for a branch. This is used as the default domain prefix. </p>
                */
            displayName?: string;
            /**
                * <p> Enables pull request previews for this branch. </p>
                */
            enablePullRequestPreview?: boolean;
            /**
                * <p> The Amplify environment name for the pull request. </p>
                */
            pullRequestEnvironmentName?: string;
            /**
                * <p> The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify
                *             app. </p>
                */
            backendEnvironmentArn?: string;
    }
    export namespace CreateBranchRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBranchRequest) => any;
    }
    /**
        * <p> The branch for an Amplify app, which maps to a third-party repository branch. </p>
        */
    export interface Branch {
            /**
                * <p> The Amazon Resource Name (ARN) for a branch that is part of an Amplify app. </p>
                */
            branchArn: string | undefined;
            /**
                * <p> The name for the branch that is part of an Amplify app. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The description for the branch that is part of an Amplify app. </p>
                */
            description: string | undefined;
            /**
                * <p> The tag for the branch of an Amplify app. </p>
                */
            tags?: Record<string, string>;
            /**
                * <p> The current stage for the branch that is part of an Amplify app. </p>
                */
            stage: Stage | string | undefined;
            /**
                * <p> The display name for the branch. This is used as the default domain prefix. </p>
                */
            displayName: string | undefined;
            /**
                * <p> Enables notifications for a branch that is part of an Amplify app. </p>
                */
            enableNotification: boolean | undefined;
            /**
                * <p> The creation date and time for a branch that is part of an Amplify app. </p>
                */
            createTime: Date | undefined;
            /**
                * <p> The last updated date and time for a branch that is part of an Amplify app. </p>
                */
            updateTime: Date | undefined;
            /**
                * <p> The environment variables specific to a branch of an Amplify app. </p>
                */
            environmentVariables: Record<string, string> | undefined;
            /**
                * <p> Enables auto-building on push for a branch of an Amplify app. </p>
                */
            enableAutoBuild: boolean | undefined;
            /**
                * <p> The custom domains for a branch of an Amplify app. </p>
                */
            customDomains: string[] | undefined;
            /**
                * <p> The framework for a branch of an Amplify app. </p>
                */
            framework: string | undefined;
            /**
                * <p> The ID of the active job for a branch of an Amplify app. </p>
                */
            activeJobId: string | undefined;
            /**
                * <p> The total number of jobs that are part of an Amplify app. </p>
                */
            totalNumberOfJobs: string | undefined;
            /**
                * <p> Enables basic authorization for a branch of an Amplify app. </p>
                */
            enableBasicAuth: boolean | undefined;
            /**
                * <p>Enables performance mode for the branch.</p>
                *         <p>Performance mode optimizes for faster hosting performance by keeping content cached at
                *             the edge for a longer interval. When performance mode is enabled, hosting configuration
                *             or code changes can take up to 10 minutes to roll out. </p>
                */
            enablePerformanceMode?: boolean;
            /**
                * <p> The thumbnail URL for the branch of an Amplify app. </p>
                */
            thumbnailUrl?: string;
            /**
                * <p> The basic authorization credentials for a branch of an Amplify app. You must
                *             base64-encode the authorization credentials and provide them in the format
                *                 <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> The build specification (build spec) content for the branch of an Amplify app.
                *         </p>
                */
            buildSpec?: string;
            /**
                * <p> The content Time to Live (TTL) for the website in seconds. </p>
                */
            ttl: string | undefined;
            /**
                * <p> A list of custom resources that are linked to this branch. </p>
                */
            associatedResources?: string[];
            /**
                * <p> Enables pull request previews for the branch. </p>
                */
            enablePullRequestPreview: boolean | undefined;
            /**
                * <p> The Amplify environment name for the pull request. </p>
                */
            pullRequestEnvironmentName?: string;
            /**
                * <p> The destination branch if the branch is a pull request branch. </p>
                */
            destinationBranch?: string;
            /**
                * <p> The source branch if the branch is a pull request branch. </p>
                */
            sourceBranch?: string;
            /**
                * <p> The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify
                *             app. </p>
                */
            backendEnvironmentArn?: string;
    }
    export namespace Branch {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Branch) => any;
    }
    /**
        * <p> The result structure for create branch request. </p>
        */
    export interface CreateBranchResult {
            /**
                * <p> Describes the branch for an Amplify app, which maps to a third-party repository
                *             branch. </p>
                */
            branch: Branch | undefined;
    }
    export namespace CreateBranchResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBranchResult) => any;
    }
    /**
        * <p> The request structure for the create a new deployment request. </p>
        */
    export interface CreateDeploymentRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch, for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> An optional file map that contains the file name as the key and the file content md5
                *             hash as the value. If this argument is provided, the service will generate a unique
                *             upload URL per file. Otherwise, the service will only generate a single upload URL for
                *             the zipped files. </p>
                */
            fileMap?: Record<string, string>;
    }
    export namespace CreateDeploymentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDeploymentRequest) => any;
    }
    /**
        * <p> The result structure for the create a new deployment request. </p>
        */
    export interface CreateDeploymentResult {
            /**
                * <p> The job ID for this deployment. will supply to start deployment api. </p>
                */
            jobId?: string;
            /**
                * <p> When the <code>fileMap</code> argument is provided in the request,
                *                 <code>fileUploadUrls</code> will contain a map of file names to upload URLs. </p>
                */
            fileUploadUrls: Record<string, string> | undefined;
            /**
                * <p> When the <code>fileMap</code> argument is not provided in the request, this
                *                 <code>zipUploadUrl</code> is returned. </p>
                */
            zipUploadUrl: string | undefined;
    }
    export namespace CreateDeploymentResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDeploymentResult) => any;
    }
    /**
        * <p> Describes the settings for the subdomain. </p>
        */
    export interface SubDomainSetting {
            /**
                * <p> The prefix setting for the subdomain. </p>
                */
            prefix: string | undefined;
            /**
                * <p> The branch name setting for the subdomain. </p>
                */
            branchName: string | undefined;
    }
    export namespace SubDomainSetting {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SubDomainSetting) => any;
    }
    /**
        * <p> The request structure for the create domain association request. </p>
        */
    export interface CreateDomainAssociationRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The domain name for the domain association. </p>
                */
            domainName: string | undefined;
            /**
                * <p> Enables the automated creation of subdomains for branches. </p>
                */
            enableAutoSubDomain?: boolean;
            /**
                * <p> The setting for the subdomain. </p>
                */
            subDomainSettings: SubDomainSetting[] | undefined;
            /**
                * <p> Sets the branch patterns for automatic subdomain creation. </p>
                */
            autoSubDomainCreationPatterns?: string[];
            /**
                * <p> The required AWS Identity and Access Management (IAM) service role for the Amazon
                *             Resource Name (ARN) for automatically creating subdomains. </p>
                */
            autoSubDomainIAMRole?: string;
    }
    export namespace CreateDomainAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDomainAssociationRequest) => any;
    }
    export enum DomainStatus {
            AVAILABLE = "AVAILABLE",
            CREATING = "CREATING",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            PENDING_DEPLOYMENT = "PENDING_DEPLOYMENT",
            PENDING_VERIFICATION = "PENDING_VERIFICATION",
            REQUESTING_CERTIFICATE = "REQUESTING_CERTIFICATE",
            UPDATING = "UPDATING"
    }
    /**
        * <p> The subdomain for the domain association. </p>
        */
    export interface SubDomain {
            /**
                * <p> Describes the settings for the subdomain. </p>
                */
            subDomainSetting: SubDomainSetting | undefined;
            /**
                * <p> The verified status of the subdomain </p>
                */
            verified: boolean | undefined;
            /**
                * <p> The DNS record for the subdomain. </p>
                */
            dnsRecord: string | undefined;
    }
    export namespace SubDomain {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SubDomain) => any;
    }
    /**
        * <p> Describes a domain association that associates a custom domain with an Amplify app.
        *         </p>
        */
    export interface DomainAssociation {
            /**
                * <p> The Amazon Resource Name (ARN) for the domain association. </p>
                */
            domainAssociationArn: string | undefined;
            /**
                * <p> The name of the domain. </p>
                */
            domainName: string | undefined;
            /**
                * <p> Enables the automated creation of subdomains for branches. </p>
                */
            enableAutoSubDomain: boolean | undefined;
            /**
                * <p> Sets branch patterns for automatic subdomain creation. </p>
                */
            autoSubDomainCreationPatterns?: string[];
            /**
                * <p> The required AWS Identity and Access Management (IAM) service role for the Amazon
                *             Resource Name (ARN) for automatically creating subdomains. </p>
                */
            autoSubDomainIAMRole?: string;
            /**
                * <p> The current status of the domain association. </p>
                */
            domainStatus: DomainStatus | string | undefined;
            /**
                * <p> The reason for the current status of the domain association. </p>
                */
            statusReason: string | undefined;
            /**
                * <p> The DNS record for certificate verification. </p>
                */
            certificateVerificationDNSRecord?: string;
            /**
                * <p> The subdomains for the domain association. </p>
                */
            subDomains: SubDomain[] | undefined;
    }
    export namespace DomainAssociation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainAssociation) => any;
    }
    /**
        * <p> The result structure for the create domain association request. </p>
        */
    export interface CreateDomainAssociationResult {
            /**
                * <p> Describes the structure of a domain association, which associates a custom domain
                *             with an Amplify app. </p>
                */
            domainAssociation: DomainAssociation | undefined;
    }
    export namespace CreateDomainAssociationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDomainAssociationResult) => any;
    }
    /**
        * <p> The request structure for the create webhook request. </p>
        */
    export interface CreateWebhookRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for a branch that is part of an Amplify app. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The description for a webhook. </p>
                */
            description?: string;
    }
    export namespace CreateWebhookRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebhookRequest) => any;
    }
    /**
        * <p> Describes a webhook that connects repository events to an Amplify app. </p>
        */
    export interface Webhook {
            /**
                * <p> The Amazon Resource Name (ARN) for the webhook. </p>
                */
            webhookArn: string | undefined;
            /**
                * <p> The ID of the webhook. </p>
                */
            webhookId: string | undefined;
            /**
                * <p> The URL of the webhook. </p>
                */
            webhookUrl: string | undefined;
            /**
                * <p> The name for a branch that is part of an Amplify app. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The description for a webhook. </p>
                */
            description: string | undefined;
            /**
                * <p> The create date and time for a webhook. </p>
                */
            createTime: Date | undefined;
            /**
                * <p> Updates the date and time for a webhook. </p>
                */
            updateTime: Date | undefined;
    }
    export namespace Webhook {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Webhook) => any;
    }
    /**
        * <p> The result structure for the create webhook request. </p>
        */
    export interface CreateWebhookResult {
            /**
                * <p> Describes a webhook that connects repository events to an Amplify app. </p>
                */
            webhook: Webhook | undefined;
    }
    export namespace CreateWebhookResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebhookResult) => any;
    }
    /**
        * <p> Describes the request structure for the delete app request. </p>
        */
    export interface DeleteAppRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
    }
    export namespace DeleteAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppRequest) => any;
    }
    /**
        * <p> The result structure for the delete app request. </p>
        */
    export interface DeleteAppResult {
            /**
                * <p> Represents the different branches of a repository for building, deploying, and
                *             hosting an Amplify app. </p>
                */
            app: App | undefined;
    }
    export namespace DeleteAppResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppResult) => any;
    }
    /**
        * <p> The request structure for the delete backend environment request. </p>
        */
    export interface DeleteBackendEnvironmentRequest {
            /**
                * <p> The unique ID of an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of a backend environment of an Amplify app. </p>
                */
            environmentName: string | undefined;
    }
    export namespace DeleteBackendEnvironmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendEnvironmentRequest) => any;
    }
    /**
        * <p> The result structure of the delete backend environment result. </p>
        */
    export interface DeleteBackendEnvironmentResult {
            /**
                * <p> Describes the backend environment for an Amplify app. </p>
                */
            backendEnvironment: BackendEnvironment | undefined;
    }
    export namespace DeleteBackendEnvironmentResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendEnvironmentResult) => any;
    }
    /**
        * <p> The request structure for the delete branch request. </p>
        */
    export interface DeleteBranchRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch. </p>
                */
            branchName: string | undefined;
    }
    export namespace DeleteBranchRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBranchRequest) => any;
    }
    /**
        * <p> The result structure for the delete branch request. </p>
        */
    export interface DeleteBranchResult {
            /**
                * <p> The branch for an Amplify app, which maps to a third-party repository branch. </p>
                */
            branch: Branch | undefined;
    }
    export namespace DeleteBranchResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBranchResult) => any;
    }
    /**
        * <p> The request structure for the delete domain association request. </p>
        */
    export interface DeleteDomainAssociationRequest {
            /**
                * <p> The unique id for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of the domain. </p>
                */
            domainName: string | undefined;
    }
    export namespace DeleteDomainAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDomainAssociationRequest) => any;
    }
    export interface DeleteDomainAssociationResult {
            /**
                * <p> Describes a domain association that associates a custom domain with an Amplify app.
                *         </p>
                */
            domainAssociation: DomainAssociation | undefined;
    }
    export namespace DeleteDomainAssociationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDomainAssociationResult) => any;
    }
    /**
        * <p> The request structure for the delete job request. </p>
        */
    export interface DeleteJobRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch, for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The unique ID for the job. </p>
                */
            jobId: string | undefined;
    }
    export namespace DeleteJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobRequest) => any;
    }
    export enum JobType {
            MANUAL = "MANUAL",
            RELEASE = "RELEASE",
            RETRY = "RETRY",
            WEB_HOOK = "WEB_HOOK"
    }
    export enum JobStatus {
            CANCELLED = "CANCELLED",
            CANCELLING = "CANCELLING",
            FAILED = "FAILED",
            PENDING = "PENDING",
            PROVISIONING = "PROVISIONING",
            RUNNING = "RUNNING",
            SUCCEED = "SUCCEED"
    }
    /**
        * <p> Describes the summary for an execution job for an Amplify app. </p>
        */
    export interface JobSummary {
            /**
                * <p> The Amazon Resource Name (ARN) for the job. </p>
                */
            jobArn: string | undefined;
            /**
                * <p> The unique ID for the job. </p>
                */
            jobId: string | undefined;
            /**
                * <p> The commit ID from a third-party repository provider for the job. </p>
                */
            commitId: string | undefined;
            /**
                * <p> The commit message from a third-party repository provider for the job. </p>
                */
            commitMessage: string | undefined;
            /**
                * <p> The commit date and time for the job. </p>
                */
            commitTime: Date | undefined;
            /**
                * <p> The start date and time for the job. </p>
                */
            startTime: Date | undefined;
            /**
                * <p> The current status for the job. </p>
                */
            status: JobStatus | string | undefined;
            /**
                * <p> The end date and time for the job. </p>
                */
            endTime?: Date;
            /**
                * <p> The type for the job. If the value is <code>RELEASE</code>, the job was manually
                *             released from its source by using the <code>StartJob</code> API. If the value is
                *                 <code>RETRY</code>, the job was manually retried using the <code>StartJob</code>
                *             API. If the value is <code>WEB_HOOK</code>, the job was automatically triggered by
                *             webhooks. </p>
                */
            jobType: JobType | string | undefined;
    }
    export namespace JobSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobSummary) => any;
    }
    /**
        * <p> The result structure for the delete job request. </p>
        */
    export interface DeleteJobResult {
            /**
                * <p> Describes the summary for an execution job for an Amplify app. </p>
                */
            jobSummary: JobSummary | undefined;
    }
    export namespace DeleteJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobResult) => any;
    }
    /**
        * <p> The request structure for the delete webhook request. </p>
        */
    export interface DeleteWebhookRequest {
            /**
                * <p> The unique ID for a webhook. </p>
                */
            webhookId: string | undefined;
    }
    export namespace DeleteWebhookRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteWebhookRequest) => any;
    }
    /**
        * <p> The result structure for the delete webhook request. </p>
        */
    export interface DeleteWebhookResult {
            /**
                * <p> Describes a webhook that connects repository events to an Amplify app. </p>
                */
            webhook: Webhook | undefined;
    }
    export namespace DeleteWebhookResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteWebhookResult) => any;
    }
    /**
        * <p> The request structure for the generate access logs request. </p>
        */
    export interface GenerateAccessLogsRequest {
            /**
                * <p> The time at which the logs should start. The time range specified is inclusive of the
                *             start time. </p>
                */
            startTime?: Date;
            /**
                * <p> The time at which the logs should end. The time range specified is inclusive of the
                *             end time. </p>
                */
            endTime?: Date;
            /**
                * <p> The name of the domain. </p>
                */
            domainName: string | undefined;
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
    }
    export namespace GenerateAccessLogsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GenerateAccessLogsRequest) => any;
    }
    /**
        * <p> The result structure for the generate access logs request. </p>
        */
    export interface GenerateAccessLogsResult {
            /**
                * <p> The pre-signed URL for the requested access logs. </p>
                */
            logUrl?: string;
    }
    export namespace GenerateAccessLogsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GenerateAccessLogsResult) => any;
    }
    /**
        * <p> The request structure for the get app request. </p>
        */
    export interface GetAppRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
    }
    export namespace GetAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppRequest) => any;
    }
    export interface GetAppResult {
            /**
                * <p> Represents the different branches of a repository for building, deploying, and
                *             hosting an Amplify app. </p>
                */
            app: App | undefined;
    }
    export namespace GetAppResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppResult) => any;
    }
    /**
        * <p> Returns the request structure for the get artifact request. </p>
        */
    export interface GetArtifactUrlRequest {
            /**
                * <p> The unique ID for an artifact. </p>
                */
            artifactId: string | undefined;
    }
    export namespace GetArtifactUrlRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetArtifactUrlRequest) => any;
    }
    /**
        * <p> Returns the result structure for the get artifact request. </p>
        */
    export interface GetArtifactUrlResult {
            /**
                * <p> The unique ID for an artifact. </p>
                */
            artifactId: string | undefined;
            /**
                * <p> The presigned URL for the artifact. </p>
                */
            artifactUrl: string | undefined;
    }
    export namespace GetArtifactUrlResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetArtifactUrlResult) => any;
    }
    /**
        * <p> The request structure for the get backend environment request. </p>
        */
    export interface GetBackendEnvironmentRequest {
            /**
                * <p> The unique id for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the backend environment. </p>
                */
            environmentName: string | undefined;
    }
    export namespace GetBackendEnvironmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendEnvironmentRequest) => any;
    }
    /**
        * <p> The result structure for the get backend environment result. </p>
        */
    export interface GetBackendEnvironmentResult {
            /**
                * <p> Describes the backend environment for an Amplify app. </p>
                */
            backendEnvironment: BackendEnvironment | undefined;
    }
    export namespace GetBackendEnvironmentResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendEnvironmentResult) => any;
    }
    /**
        * <p> The request structure for the get branch request. </p>
        */
    export interface GetBranchRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch. </p>
                */
            branchName: string | undefined;
    }
    export namespace GetBranchRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBranchRequest) => any;
    }
    export interface GetBranchResult {
            /**
                * <p> The branch for an Amplify app, which maps to a third-party repository branch. </p>
                */
            branch: Branch | undefined;
    }
    export namespace GetBranchResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBranchResult) => any;
    }
    /**
        * <p> The request structure for the get domain association request. </p>
        */
    export interface GetDomainAssociationRequest {
            /**
                * <p> The unique id for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of the domain. </p>
                */
            domainName: string | undefined;
    }
    export namespace GetDomainAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainAssociationRequest) => any;
    }
    /**
        * <p> The result structure for the get domain association request. </p>
        */
    export interface GetDomainAssociationResult {
            /**
                * <p> Describes the structure of a domain association, which associates a custom domain
                *             with an Amplify app. </p>
                */
            domainAssociation: DomainAssociation | undefined;
    }
    export namespace GetDomainAssociationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainAssociationResult) => any;
    }
    /**
        * <p> The request structure for the get job request. </p>
        */
    export interface GetJobRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The branch name for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The unique ID for the job. </p>
                */
            jobId: string | undefined;
    }
    export namespace GetJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobRequest) => any;
    }
    /**
        * <p> Describes an execution step, for an execution job, for an Amplify app. </p>
        */
    export interface Step {
            /**
                * <p> The name of the execution step. </p>
                */
            stepName: string | undefined;
            /**
                * <p> The start date and time of the execution step. </p>
                */
            startTime: Date | undefined;
            /**
                * <p> The status of the execution step. </p>
                */
            status: JobStatus | string | undefined;
            /**
                * <p> The end date and time of the execution step. </p>
                */
            endTime: Date | undefined;
            /**
                * <p> The URL to the logs for the execution step. </p>
                */
            logUrl?: string;
            /**
                * <p> The URL to the artifact for the execution step. </p>
                */
            artifactsUrl?: string;
            /**
                * <p> The URL to the test artifact for the execution step. </p>
                */
            testArtifactsUrl?: string;
            /**
                * <p> The URL to the test configuration for the execution step. </p>
                */
            testConfigUrl?: string;
            /**
                * <p> The list of screenshot URLs for the execution step, if relevant. </p>
                */
            screenshots?: Record<string, string>;
            /**
                * <p> The reason for the current step status. </p>
                */
            statusReason?: string;
            /**
                * <p> The context for the current step. Includes a build image if the step is build.
                *         </p>
                */
            context?: string;
    }
    export namespace Step {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Step) => any;
    }
    /**
        * <p> Describes an execution job for an Amplify app. </p>
        */
    export interface Job {
            /**
                * <p> Describes the summary for an execution job for an Amplify app. </p>
                */
            summary: JobSummary | undefined;
            /**
                * <p> The execution steps for an execution job, for an Amplify app. </p>
                */
            steps: Step[] | undefined;
    }
    export namespace Job {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Job) => any;
    }
    export interface GetJobResult {
            /**
                * <p> Describes an execution job for an Amplify app. </p>
                */
            job: Job | undefined;
    }
    export namespace GetJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobResult) => any;
    }
    /**
        * <p> The request structure for the get webhook request. </p>
        */
    export interface GetWebhookRequest {
            /**
                * <p> The unique ID for a webhook. </p>
                */
            webhookId: string | undefined;
    }
    export namespace GetWebhookRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetWebhookRequest) => any;
    }
    /**
        * <p> The result structure for the get webhook request. </p>
        */
    export interface GetWebhookResult {
            /**
                * <p> Describes the structure of a webhook. </p>
                */
            webhook: Webhook | undefined;
    }
    export namespace GetWebhookResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetWebhookResult) => any;
    }
    /**
        * <p> The request structure for the list apps request. </p>
        */
    export interface ListAppsRequest {
            /**
                * <p> A pagination token. If non-null, the pagination token is returned in a result. Pass
                *             its value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListAppsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppsRequest) => any;
    }
    /**
        * <p> The result structure for an Amplify app list request. </p>
        */
    export interface ListAppsResult {
            /**
                * <p> A list of Amplify apps. </p>
                */
            apps: App[] | undefined;
            /**
                * <p> A pagination token. Set to null to start listing apps from start. If non-null, the
                *             pagination token is returned in a result. Pass its value in here to list more projects.
                *         </p>
                */
            nextToken?: string;
    }
    export namespace ListAppsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppsResult) => any;
    }
    /**
        * <p> Describes the request structure for the list artifacts request. </p>
        */
    export interface ListArtifactsRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of a branch that is part of an Amplify app. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The unique ID for a job. </p>
                */
            jobId: string | undefined;
            /**
                * <p> A pagination token. Set to null to start listing artifacts from start. If a non-null
                *             pagination token is returned in a result, pass its value in here to list more artifacts.
                *         </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListArtifactsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListArtifactsRequest) => any;
    }
    /**
        * <p> Describes an artifact. </p>
        */
    export interface Artifact {
            /**
                * <p> The file name for the artifact. </p>
                */
            artifactFileName: string | undefined;
            /**
                * <p> The unique ID for the artifact. </p>
                */
            artifactId: string | undefined;
    }
    export namespace Artifact {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Artifact) => any;
    }
    /**
        * <p> The result structure for the list artifacts request. </p>
        */
    export interface ListArtifactsResult {
            /**
                * <p> A list of artifacts. </p>
                */
            artifacts: Artifact[] | undefined;
            /**
                * <p> A pagination token. If a non-null pagination token is returned in a result, pass its
                *             value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListArtifactsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListArtifactsResult) => any;
    }
    /**
        * <p> The request structure for the list backend environments request. </p>
        */
    export interface ListBackendEnvironmentsRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of the backend environment </p>
                */
            environmentName?: string;
            /**
                * <p> A pagination token. Set to null to start listing backend environments from the start.
                *             If a non-null pagination token is returned in a result, pass its value in here to list
                *             more backend environments. </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListBackendEnvironmentsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBackendEnvironmentsRequest) => any;
    }
    /**
        * <p> The result structure for the list backend environments result. </p>
        */
    export interface ListBackendEnvironmentsResult {
            /**
                * <p> The list of backend environments for an Amplify app. </p>
                */
            backendEnvironments: BackendEnvironment[] | undefined;
            /**
                * <p> A pagination token. If a non-null pagination token is returned in a result, pass its
                *             value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListBackendEnvironmentsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBackendEnvironmentsResult) => any;
    }
    /**
        * <p> The request structure for the list branches request. </p>
        */
    export interface ListBranchesRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> A pagination token. Set to null to start listing branches from the start. If a
                *             non-null pagination token is returned in a result, pass its value in here to list more
                *             branches. </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListBranchesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBranchesRequest) => any;
    }
    /**
        * <p> The result structure for the list branches request. </p>
        */
    export interface ListBranchesResult {
            /**
                * <p> A list of branches for an Amplify app. </p>
                */
            branches: Branch[] | undefined;
            /**
                * <p> A pagination token. If a non-null pagination token is returned in a result, pass its
                *             value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListBranchesResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBranchesResult) => any;
    }
    /**
        * <p> The request structure for the list domain associations request. </p>
        */
    export interface ListDomainAssociationsRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> A pagination token. Set to null to start listing apps from the start. If non-null, a
                *             pagination token is returned in a result. Pass its value in here to list more projects.
                *         </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListDomainAssociationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainAssociationsRequest) => any;
    }
    /**
        * <p> The result structure for the list domain association request. </p>
        */
    export interface ListDomainAssociationsResult {
            /**
                * <p> A list of domain associations. </p>
                */
            domainAssociations: DomainAssociation[] | undefined;
            /**
                * <p> A pagination token. If non-null, a pagination token is returned in a result. Pass its
                *             value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListDomainAssociationsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainAssociationsResult) => any;
    }
    /**
        * <p> The request structure for the list jobs request. </p>
        */
    export interface ListJobsRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for a branch. </p>
                */
            branchName: string | undefined;
            /**
                * <p> A pagination token. Set to null to start listing steps from the start. If a non-null
                *             pagination token is returned in a result, pass its value in here to list more steps.
                *         </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsRequest) => any;
    }
    /**
        * <p> The maximum number of records to list in a single response. </p>
        */
    export interface ListJobsResult {
            /**
                * <p> The result structure for the list job result request. </p>
                */
            jobSummaries: JobSummary[] | undefined;
            /**
                * <p> A pagination token. If non-null the pagination token is returned in a result. Pass
                *             its value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListJobsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsResult) => any;
    }
    /**
        * <p> The request structure to use to list tags for a resource. </p>
        */
    export interface ListTagsForResourceRequest {
            /**
                * <p> The Amazon Resource Name (ARN) to use to list tags. </p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    /**
        * <p> The response for the list tags for resource request. </p>
        */
    export interface ListTagsForResourceResponse {
            /**
                * <p> A list of tags for the specified The Amazon Resource Name (ARN). </p>
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    /**
        * <p> An operation failed due to a non-existent resource. </p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            code: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p> The request structure for the list webhooks request. </p>
        */
    export interface ListWebhooksRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> A pagination token. Set to null to start listing webhooks from the start. If
                *             non-null,the pagination token is returned in a result. Pass its value in here to list
                *             more webhooks. </p>
                */
            nextToken?: string;
            /**
                * <p> The maximum number of records to list in a single response. </p>
                */
            maxResults?: number;
    }
    export namespace ListWebhooksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebhooksRequest) => any;
    }
    /**
        * <p> The result structure for the list webhooks request. </p>
        */
    export interface ListWebhooksResult {
            /**
                * <p> A list of webhooks. </p>
                */
            webhooks: Webhook[] | undefined;
            /**
                * <p> A pagination token. If non-null, the pagination token is returned in a result. Pass
                *             its value in another request to retrieve more entries. </p>
                */
            nextToken?: string;
    }
    export namespace ListWebhooksResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebhooksResult) => any;
    }
    /**
        * <p> The request structure for the start a deployment request. </p>
        */
    export interface StartDeploymentRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch, for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The job ID for this deployment, generated by the create deployment request. </p>
                */
            jobId?: string;
            /**
                * <p> The source URL for this deployment, used when calling start deployment without create
                *             deployment. The source URL can be any HTTP GET URL that is publicly accessible and
                *             downloads a single .zip file. </p>
                */
            sourceUrl?: string;
    }
    export namespace StartDeploymentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDeploymentRequest) => any;
    }
    /**
        * <p> The result structure for the start a deployment request. </p>
        */
    export interface StartDeploymentResult {
            /**
                * <p> The summary for the job. </p>
                */
            jobSummary: JobSummary | undefined;
    }
    export namespace StartDeploymentResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartDeploymentResult) => any;
    }
    /**
        * <p> The request structure for the start job request. </p>
        */
    export interface StartJobRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The branch name for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The unique ID for an existing job. This is required if the value of
                *                 <code>jobType</code> is <code>RETRY</code>. </p>
                */
            jobId?: string;
            /**
                * <p> Describes the type for the job. The job type <code>RELEASE</code> starts a new job
                *             with the latest change from the specified branch. This value is available only for apps
                *             that are connected to a repository. The job type <code>RETRY</code> retries an existing
                *             job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also
                *             required. </p>
                */
            jobType: JobType | string | undefined;
            /**
                * <p> A descriptive reason for starting this job. </p>
                */
            jobReason?: string;
            /**
                * <p> The commit ID from a third-party repository provider for the job. </p>
                */
            commitId?: string;
            /**
                * <p> The commit message from a third-party repository provider for the job. </p>
                */
            commitMessage?: string;
            /**
                * <p> The commit date and time for the job. </p>
                */
            commitTime?: Date;
    }
    export namespace StartJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartJobRequest) => any;
    }
    /**
        * <p> The result structure for the run job request. </p>
        */
    export interface StartJobResult {
            /**
                * <p> The summary for the job. </p>
                */
            jobSummary: JobSummary | undefined;
    }
    export namespace StartJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartJobResult) => any;
    }
    /**
        * <p> The request structure for the stop job request. </p>
        */
    export interface StopJobRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch, for the job. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The unique id for the job. </p>
                */
            jobId: string | undefined;
    }
    export namespace StopJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopJobRequest) => any;
    }
    /**
        * <p> The result structure for the stop job request. </p>
        */
    export interface StopJobResult {
            /**
                * <p> The summary for the job. </p>
                */
            jobSummary: JobSummary | undefined;
    }
    export namespace StopJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopJobResult) => any;
    }
    /**
        * <p> The request structure to tag a resource with a tag key and value. </p>
        */
    export interface TagResourceRequest {
            /**
                * <p> The Amazon Resource Name (ARN) to use to tag a resource. </p>
                */
            resourceArn: string | undefined;
            /**
                * <p> The tags used to tag the resource. </p>
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    /**
        * <p> The response for the tag resource request. </p>
        */
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    /**
        * <p> The request structure for the untag resource request. </p>
        */
    export interface UntagResourceRequest {
            /**
                * <p> The Amazon Resource Name (ARN) to use to untag a resource. </p>
                */
            resourceArn: string | undefined;
            /**
                * <p> The tag keys to use to untag a resource. </p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    /**
        * <p> The response for the untag resource request. </p>
        */
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    /**
        * <p> The request structure for the update app request. </p>
        */
    export interface UpdateAppRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for an Amplify app. </p>
                */
            name?: string;
            /**
                * <p> The description for an Amplify app. </p>
                */
            description?: string;
            /**
                * <p> The platform for an Amplify app. </p>
                */
            platform?: Platform | string;
            /**
                * <p> The AWS Identity and Access Management (IAM) service role for an Amplify app. </p>
                */
            iamServiceRoleArn?: string;
            /**
                * <p> The environment variables for an Amplify app. </p>
                */
            environmentVariables?: Record<string, string>;
            /**
                * <p> Enables branch auto-building for an Amplify app. </p>
                */
            enableBranchAutoBuild?: boolean;
            /**
                * <p> Automatically disconnects a branch in the Amplify Console when you delete a branch
                *             from your Git repository. </p>
                */
            enableBranchAutoDeletion?: boolean;
            /**
                * <p> Enables basic authorization for an Amplify app. </p>
                */
            enableBasicAuth?: boolean;
            /**
                * <p> The basic authorization credentials for an Amplify app. You must base64-encode the
                *             authorization credentials and provide them in the format
                *             <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> The custom redirect and rewrite rules for an Amplify app. </p>
                */
            customRules?: CustomRule[];
            /**
                * <p> The build specification (build spec) for an Amplify app. </p>
                */
            buildSpec?: string;
            /**
                * <p>The custom HTTP headers for an Amplify app.</p>
                */
            customHeaders?: string;
            /**
                * <p> Enables automated branch creation for an Amplify app. </p>
                */
            enableAutoBranchCreation?: boolean;
            /**
                * <p> Describes the automated branch creation glob patterns for an Amplify app. </p>
                */
            autoBranchCreationPatterns?: string[];
            /**
                * <p> The automated branch creation configuration for an Amplify app. </p>
                */
            autoBranchCreationConfig?: AutoBranchCreationConfig;
            /**
                * <p> The name of the repository for an Amplify app </p>
                */
            repository?: string;
            /**
                * <p>The OAuth token for a third-party source control system for an Amplify app. The OAuth
                *             token is used to create a webhook and a read-only deploy key using SSH cloning. The
                *             OAuth token is not stored.</p>
                *         <p>Use <code>oauthToken</code> for repository providers other than GitHub, such as
                *             Bitbucket or CodeCommit.</p>
                *         <p>To authorize access to GitHub as your repository provider, use
                *                 <code>accessToken</code>.</p>
                *         <p>You must specify either <code>oauthToken</code> or <code>accessToken</code> when you
                *             update an app.</p>
                *         <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work
                *             with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub
                *             App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the
                *                 <i>Amplify User Guide</i> .</p>
                */
            oauthToken?: string;
            /**
                * <p>The personal access token for a GitHub repository for an Amplify app. The personal
                *             access token is used to authorize access to a GitHub repository using the Amplify GitHub
                *             App. The token is not stored.</p>
                *         <p>Use <code>accessToken</code> for GitHub repositories only. To authorize access to a
                *             repository provider such as Bitbucket or CodeCommit, use <code>oauthToken</code>.</p>
                *         <p>You must specify either <code>accessToken</code> or <code>oauthToken</code> when you
                *             update an app.</p>
                *         <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work
                *             with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub
                *             App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the
                *                 <i>Amplify User Guide</i> .</p>
                */
            accessToken?: string;
    }
    export namespace UpdateAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppRequest) => any;
    }
    /**
        * <p> The result structure for an Amplify app update request. </p>
        */
    export interface UpdateAppResult {
            /**
                * <p> Represents the updated Amplify app. </p>
                */
            app: App | undefined;
    }
    export namespace UpdateAppResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppResult) => any;
    }
    /**
        * <p> The request structure for the update branch request. </p>
        */
    export interface UpdateBranchRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name for the branch. </p>
                */
            branchName: string | undefined;
            /**
                * <p> The description for the branch. </p>
                */
            description?: string;
            /**
                * <p> The framework for the branch. </p>
                */
            framework?: string;
            /**
                * <p> Describes the current stage for the branch. </p>
                */
            stage?: Stage | string;
            /**
                * <p> Enables notifications for the branch. </p>
                */
            enableNotification?: boolean;
            /**
                * <p> Enables auto building for the branch. </p>
                */
            enableAutoBuild?: boolean;
            /**
                * <p> The environment variables for the branch. </p>
                */
            environmentVariables?: Record<string, string>;
            /**
                * <p> The basic authorization credentials for the branch. You must base64-encode the
                *             authorization credentials and provide them in the format
                *             <code>user:password</code>.</p>
                */
            basicAuthCredentials?: string;
            /**
                * <p> Enables basic authorization for the branch. </p>
                */
            enableBasicAuth?: boolean;
            /**
                * <p>Enables performance mode for the branch.</p>
                *         <p>Performance mode optimizes for faster hosting performance by keeping content cached at
                *             the edge for a longer interval. When performance mode is enabled, hosting configuration
                *             or code changes can take up to 10 minutes to roll out. </p>
                */
            enablePerformanceMode?: boolean;
            /**
                * <p> The build specification (build spec) for the branch. </p>
                */
            buildSpec?: string;
            /**
                * <p> The content Time to Live (TTL) for the website in seconds. </p>
                */
            ttl?: string;
            /**
                * <p> The display name for a branch. This is used as the default domain prefix. </p>
                */
            displayName?: string;
            /**
                * <p> Enables pull request previews for this branch. </p>
                */
            enablePullRequestPreview?: boolean;
            /**
                * <p> The Amplify environment name for the pull request. </p>
                */
            pullRequestEnvironmentName?: string;
            /**
                * <p> The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify
                *             app. </p>
                */
            backendEnvironmentArn?: string;
    }
    export namespace UpdateBranchRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBranchRequest) => any;
    }
    /**
        * <p> The result structure for the update branch request. </p>
        */
    export interface UpdateBranchResult {
            /**
                * <p> The branch for an Amplify app, which maps to a third-party repository branch. </p>
                */
            branch: Branch | undefined;
    }
    export namespace UpdateBranchResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBranchResult) => any;
    }
    /**
        * <p> The request structure for the update domain association request. </p>
        */
    export interface UpdateDomainAssociationRequest {
            /**
                * <p> The unique ID for an Amplify app. </p>
                */
            appId: string | undefined;
            /**
                * <p> The name of the domain. </p>
                */
            domainName: string | undefined;
            /**
                * <p> Enables the automated creation of subdomains for branches. </p>
                */
            enableAutoSubDomain?: boolean;
            /**
                * <p> Describes the settings for the subdomain. </p>
                */
            subDomainSettings?: SubDomainSetting[];
            /**
                * <p> Sets the branch patterns for automatic subdomain creation. </p>
                */
            autoSubDomainCreationPatterns?: string[];
            /**
                * <p> The required AWS Identity and Access Management (IAM) service role for the Amazon
                *             Resource Name (ARN) for automatically creating subdomains. </p>
                */
            autoSubDomainIAMRole?: string;
    }
    export namespace UpdateDomainAssociationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainAssociationRequest) => any;
    }
    /**
        * <p> The result structure for the update domain association request. </p>
        */
    export interface UpdateDomainAssociationResult {
            /**
                * <p> Describes a domain association, which associates a custom domain with an Amplify app.
                *         </p>
                */
            domainAssociation: DomainAssociation | undefined;
    }
    export namespace UpdateDomainAssociationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainAssociationResult) => any;
    }
    /**
        * <p> The request structure for the update webhook request. </p>
        */
    export interface UpdateWebhookRequest {
            /**
                * <p> The unique ID for a webhook. </p>
                */
            webhookId: string | undefined;
            /**
                * <p> The name for a branch that is part of an Amplify app. </p>
                */
            branchName?: string;
            /**
                * <p> The description for a webhook. </p>
                */
            description?: string;
    }
    export namespace UpdateWebhookRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateWebhookRequest) => any;
    }
    /**
        * <p> The result structure for the update webhook request. </p>
        */
    export interface UpdateWebhookResult {
            /**
                * <p> Describes a webhook that connects repository events to an Amplify app. </p>
                */
            webhook: Webhook | undefined;
    }
    export namespace UpdateWebhookResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateWebhookResult) => any;
    }
}

declare module '@aws-sdk/client-amplify/node_modules/@aws-sdk/client-amplify/dist-types/models/AmplifyServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Amplify service.
        */
    export class AmplifyServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

