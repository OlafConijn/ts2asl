// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-detective' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptInvitationCommandInput, AcceptInvitationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/AcceptInvitationCommand";
    import { CreateGraphCommandInput, CreateGraphCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateGraphCommand";
    import { CreateMembersCommandInput, CreateMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateMembersCommand";
    import { DeleteGraphCommandInput, DeleteGraphCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteGraphCommand";
    import { DeleteMembersCommandInput, DeleteMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteMembersCommand";
    import { DescribeOrganizationConfigurationCommandInput, DescribeOrganizationConfigurationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DescribeOrganizationConfigurationCommand";
    import { DisableOrganizationAdminAccountCommandInput, DisableOrganizationAdminAccountCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisableOrganizationAdminAccountCommand";
    import { DisassociateMembershipCommandInput, DisassociateMembershipCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisassociateMembershipCommand";
    import { EnableOrganizationAdminAccountCommandInput, EnableOrganizationAdminAccountCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/EnableOrganizationAdminAccountCommand";
    import { GetMembersCommandInput, GetMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/GetMembersCommand";
    import { ListGraphsCommandInput, ListGraphsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListGraphsCommand";
    import { ListInvitationsCommandInput, ListInvitationsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListInvitationsCommand";
    import { ListMembersCommandInput, ListMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListMembersCommand";
    import { ListOrganizationAdminAccountsCommandInput, ListOrganizationAdminAccountsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListOrganizationAdminAccountsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListTagsForResourceCommand";
    import { RejectInvitationCommandInput, RejectInvitationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/RejectInvitationCommand";
    import { StartMonitoringMemberCommandInput, StartMonitoringMemberCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/StartMonitoringMemberCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UntagResourceCommand";
    import { UpdateOrganizationConfigurationCommandInput, UpdateOrganizationConfigurationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UpdateOrganizationConfigurationCommand";
    import { DetectiveClient } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    /**
        * <p>Detective uses machine learning and purpose-built visualizations to help you to
        *          analyze and investigate security issues across your Amazon Web Services (Amazon Web Services) workloads. Detective automatically extracts time-based events such
        *          as login attempts, API calls, and network traffic from CloudTrail and Amazon Virtual Private Cloud (Amazon VPC) flow logs. It also extracts findings detected by
        *             Amazon GuardDuty.</p>
        *          <p>The Detective API primarily supports the creation and management of behavior
        *          graphs. A behavior graph contains the extracted data from a set of member accounts, and is
        *          created and managed by an administrator account.</p>
        *          <p>To add a member account to the behavior graph, the administrator account sends an
        *          invitation to the account. When the account accepts the invitation, it becomes a member
        *          account in the behavior graph.</p>
        *          <p>Detective is also integrated with Organizations. The organization
        *          management account designates the Detective administrator account for the
        *          organization. That account becomes the administrator account for the organization behavior
        *          graph. The Detective administrator account can enable any organization account as
        *          a member account in the organization behavior graph. The organization accounts do not
        *          receive invitations. The Detective administrator account can also invite other
        *          accounts to the organization behavior graph.</p>
        *          <p>Every behavior graph is specific to a Region. You can only use the API to manage
        *          behavior graphs that belong to the Region that is associated with the currently selected
        *          endpoint.</p>
        *          <p>The administrator account for a behavior graph can use the Detective API to do
        *          the following:</p>
        *          <ul>
        *             <li>
        *                <p>Enable and disable Detective. Enabling Detective creates a new
        *                behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>View the list of member accounts in a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Add member accounts to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Remove member accounts from a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Apply tags to a behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>The organization management account can use the Detective API to select the
        *          delegated administrator for Detective.</p>
        *          <p>The Detective administrator account for an organization can use the Detective API to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>Perform all of the functions of an administrator account.</p>
        *             </li>
        *             <li>
        *                <p>Determine whether to automatically enable new organization accounts as member
        *                accounts in the organization behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>An invited member account can use the Detective API to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>View the list of behavior graphs that they are invited to.</p>
        *             </li>
        *             <li>
        *                <p>Accept an invitation to contribute to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Decline an invitation to contribute to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Remove their account from a behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>All API actions are logged as CloudTrail events. See <a href="https://docs.aws.amazon.com/detective/latest/adminguide/logging-using-cloudtrail.html">Logging Detective API Calls with CloudTrail</a>.</p>
        *          <note>
        *             <p>We replaced the term "master account" with the term "administrator account." An
        *             administrator account is used to centrally manage multiple accounts. In the case of
        *                Detective, the administrator account manages the accounts in their behavior
        *             graph.</p>
        *          </note>
        */
    export class Detective extends DetectiveClient {
            /**
                * <p>Accepts an invitation for the member account to contribute data to a behavior graph.
                *          This operation can only be called by an invited member account. </p>
                *          <p>The request provides the ARN of behavior graph.</p>
                *          <p>The member account status in the graph must be <code>INVITED</code>.</p>
                */
            acceptInvitation(args: AcceptInvitationCommandInput, options?: __HttpHandlerOptions): Promise<AcceptInvitationCommandOutput>;
            acceptInvitation(args: AcceptInvitationCommandInput, cb: (err: any, data?: AcceptInvitationCommandOutput) => void): void;
            acceptInvitation(args: AcceptInvitationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptInvitationCommandOutput) => void): void;
            /**
                * <p>Creates a new behavior graph for the calling account, and sets that account as the
                *          administrator account. This operation is called by the account that is enabling Detective.</p>
                *          <p>Before you try to enable Detective, make sure that your account has been
                *          enrolled in Amazon GuardDuty for at least 48 hours. If you do not meet this
                *          requirement, you cannot enable Detective. If you do meet the GuardDuty
                *          prerequisite, then when you make the request to enable Detective, it checks
                *          whether your data volume is within the Detective quota. If it exceeds the quota,
                *          then you cannot enable Detective. </p>
                *          <p>The operation also enables Detective for the calling account in the currently
                *          selected Region. It returns the ARN of the new behavior graph.</p>
                *          <p>
                *             <code>CreateGraph</code> triggers a process to create the corresponding data tables for
                *          the new behavior graph.</p>
                *          <p>An account can only be the administrator account for one behavior graph within a Region.
                *          If the same account calls <code>CreateGraph</code> with the same administrator account, it
                *          always returns the same behavior graph ARN. It does not create a new behavior graph.</p>
                */
            createGraph(args: CreateGraphCommandInput, options?: __HttpHandlerOptions): Promise<CreateGraphCommandOutput>;
            createGraph(args: CreateGraphCommandInput, cb: (err: any, data?: CreateGraphCommandOutput) => void): void;
            createGraph(args: CreateGraphCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateGraphCommandOutput) => void): void;
            /**
                * <p>
                *             <code>CreateMembers</code> is used to send invitations to accounts. For the organization
                *          behavior graph, the Detective administrator account uses
                *             <code>CreateMembers</code> to enable organization accounts as member accounts.</p>
                *          <p>For invited accounts, <code>CreateMembers</code> sends a request to invite the specified
                *             Amazon Web Services accounts to be member accounts in the behavior graph. This operation
                *          can only be called by the administrator account for a behavior graph. </p>
                *          <p>
                *             <code>CreateMembers</code> verifies the accounts and then invites the verified accounts.
                *          The administrator can optionally specify to not send invitation emails to the member
                *          accounts. This would be used when the administrator manages their member accounts
                *          centrally.</p>
                *          <p>For organization accounts in the organization behavior graph, <code>CreateMembers</code>
                *          attempts to enable the accounts. The organization accounts do not receive
                *          invitations.</p>
                *          <p>The request provides the behavior graph ARN and the list of accounts to invite or to
                *          enable.</p>
                *          <p>The response separates the requested accounts into two lists:</p>
                *          <ul>
                *             <li>
                *                <p>The accounts that <code>CreateMembers</code> was able to process. For invited
                *                accounts, includes member accounts that are being verified, that have passed
                *                verification and are to be invited, and that have failed verification. For
                *                organization accounts in the organization behavior graph, includes accounts that can
                *                be enabled and that cannot be enabled.</p>
                *             </li>
                *             <li>
                *                <p>The accounts that <code>CreateMembers</code> was unable to process. This list
                *                includes accounts that were already invited to be member accounts in the behavior
                *                graph.</p>
                *             </li>
                *          </ul>
                */
            createMembers(args: CreateMembersCommandInput, options?: __HttpHandlerOptions): Promise<CreateMembersCommandOutput>;
            createMembers(args: CreateMembersCommandInput, cb: (err: any, data?: CreateMembersCommandOutput) => void): void;
            createMembers(args: CreateMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMembersCommandOutput) => void): void;
            /**
                * <p>Disables the specified behavior graph and queues it to be deleted. This operation
                *          removes the behavior graph from each member account's list of behavior graphs.</p>
                *          <p>
                *             <code>DeleteGraph</code> can only be called by the administrator account for a behavior
                *          graph.</p>
                */
            deleteGraph(args: DeleteGraphCommandInput, options?: __HttpHandlerOptions): Promise<DeleteGraphCommandOutput>;
            deleteGraph(args: DeleteGraphCommandInput, cb: (err: any, data?: DeleteGraphCommandOutput) => void): void;
            deleteGraph(args: DeleteGraphCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteGraphCommandOutput) => void): void;
            /**
                * <p>Removes the specified member accounts from the behavior graph. The removed accounts no
                *          longer contribute data to the behavior graph. This operation can only be called by the
                *          administrator account for the behavior graph.</p>
                *          <p>For invited accounts, the removed accounts are deleted from the list of accounts in the
                *          behavior graph. To restore the account, the administrator account must send another
                *          invitation.</p>
                *          <p>For organization accounts in the organization behavior graph, the Detective
                *          administrator account can always enable the organization account again. Organization
                *          accounts that are not enabled as member accounts are not included in the
                *             <code>ListMembers</code> results for the organization behavior graph.</p>
                *          <p>An administrator account cannot use <code>DeleteMembers</code> to remove their own
                *          account from the behavior graph. To disable a behavior graph, the administrator account
                *          uses the <code>DeleteGraph</code> API method.</p>
                */
            deleteMembers(args: DeleteMembersCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMembersCommandOutput>;
            deleteMembers(args: DeleteMembersCommandInput, cb: (err: any, data?: DeleteMembersCommandOutput) => void): void;
            deleteMembers(args: DeleteMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMembersCommandOutput) => void): void;
            /**
                * <p>Returns information about the configuration for the organization behavior graph.
                *          Currently indicates whether to automatically enable new organization accounts as member
                *          accounts.</p>
                *          <p>Can only be called by the Detective administrator account for the organization. </p>
                */
            describeOrganizationConfiguration(args: DescribeOrganizationConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeOrganizationConfigurationCommandOutput>;
            describeOrganizationConfiguration(args: DescribeOrganizationConfigurationCommandInput, cb: (err: any, data?: DescribeOrganizationConfigurationCommandOutput) => void): void;
            describeOrganizationConfiguration(args: DescribeOrganizationConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeOrganizationConfigurationCommandOutput) => void): void;
            /**
                * <p>Removes the Detective administrator account for the organization in the current
                *          Region. Deletes the behavior graph for that account.</p>
                *          <p>Can only be called by the organization management account. Before you can select a
                *          different Detective administrator account, you must remove the Detective
                *          administrator account in all Regions.</p>
                */
            disableOrganizationAdminAccount(args: DisableOrganizationAdminAccountCommandInput, options?: __HttpHandlerOptions): Promise<DisableOrganizationAdminAccountCommandOutput>;
            disableOrganizationAdminAccount(args: DisableOrganizationAdminAccountCommandInput, cb: (err: any, data?: DisableOrganizationAdminAccountCommandOutput) => void): void;
            disableOrganizationAdminAccount(args: DisableOrganizationAdminAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableOrganizationAdminAccountCommandOutput) => void): void;
            /**
                * <p>Removes the member account from the specified behavior graph. This operation can only be
                *          called by an invited member account that has the <code>ENABLED</code> status.</p>
                *          <p>
                *             <code>DisassociateMembership</code> cannot be called by an organization account in the
                *          organization behavior graph. For the organization behavior graph, the Detective
                *          administrator account determines which organization accounts to enable or disable as member
                *          accounts.</p>
                */
            disassociateMembership(args: DisassociateMembershipCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateMembershipCommandOutput>;
            disassociateMembership(args: DisassociateMembershipCommandInput, cb: (err: any, data?: DisassociateMembershipCommandOutput) => void): void;
            disassociateMembership(args: DisassociateMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateMembershipCommandOutput) => void): void;
            /**
                * <p>Designates the Detective administrator account for the organization in the
                *          current Region.</p>
                *          <p>If the account does not have Detective enabled, then enables Detective
                *          for that account and creates a new behavior graph.</p>
                *          <p>Can only be called by the organization management account.</p>
                *          <p>The Detective administrator account for an organization must be the same in all
                *          Regions. If you already designated a Detective administrator account in another
                *          Region, then you must designate the same account.</p>
                */
            enableOrganizationAdminAccount(args: EnableOrganizationAdminAccountCommandInput, options?: __HttpHandlerOptions): Promise<EnableOrganizationAdminAccountCommandOutput>;
            enableOrganizationAdminAccount(args: EnableOrganizationAdminAccountCommandInput, cb: (err: any, data?: EnableOrganizationAdminAccountCommandOutput) => void): void;
            enableOrganizationAdminAccount(args: EnableOrganizationAdminAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableOrganizationAdminAccountCommandOutput) => void): void;
            /**
                * <p>Returns the membership details for specified member accounts for a behavior
                *          graph.</p>
                */
            getMembers(args: GetMembersCommandInput, options?: __HttpHandlerOptions): Promise<GetMembersCommandOutput>;
            getMembers(args: GetMembersCommandInput, cb: (err: any, data?: GetMembersCommandOutput) => void): void;
            getMembers(args: GetMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMembersCommandOutput) => void): void;
            /**
                * <p>Returns the list of behavior graphs that the calling account is an administrator account
                *          of. This operation can only be called by an administrator account.</p>
                *          <p>Because an account can currently only be the administrator of one behavior graph within
                *          a Region, the results always contain a single behavior graph.</p>
                */
            listGraphs(args: ListGraphsCommandInput, options?: __HttpHandlerOptions): Promise<ListGraphsCommandOutput>;
            listGraphs(args: ListGraphsCommandInput, cb: (err: any, data?: ListGraphsCommandOutput) => void): void;
            listGraphs(args: ListGraphsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGraphsCommandOutput) => void): void;
            /**
                * <p>Retrieves the list of open and accepted behavior graph invitations for the member
                *          account. This operation can only be called by an invited member account.</p>
                *          <p>Open invitations are invitations that the member account has not responded to.</p>
                *          <p>The results do not include behavior graphs for which the member account declined the
                *          invitation. The results also do not include behavior graphs that the member account
                *          resigned from or was removed from.</p>
                */
            listInvitations(args: ListInvitationsCommandInput, options?: __HttpHandlerOptions): Promise<ListInvitationsCommandOutput>;
            listInvitations(args: ListInvitationsCommandInput, cb: (err: any, data?: ListInvitationsCommandOutput) => void): void;
            listInvitations(args: ListInvitationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInvitationsCommandOutput) => void): void;
            /**
                * <p>Retrieves the list of member accounts for a behavior graph.</p>
                *          <p>For invited accounts, the results do not include member accounts that were removed from
                *          the behavior graph.</p>
                *          <p>For the organization behavior graph, the results do not include organization accounts
                *          that the Detective administrator account has not enabled as member
                *          accounts.</p>
                */
            listMembers(args: ListMembersCommandInput, options?: __HttpHandlerOptions): Promise<ListMembersCommandOutput>;
            listMembers(args: ListMembersCommandInput, cb: (err: any, data?: ListMembersCommandOutput) => void): void;
            listMembers(args: ListMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMembersCommandOutput) => void): void;
            /**
                * <p>Returns information about the Detective administrator account for an
                *          organization. Can only be called by the organization management account.</p>
                */
            listOrganizationAdminAccounts(args: ListOrganizationAdminAccountsCommandInput, options?: __HttpHandlerOptions): Promise<ListOrganizationAdminAccountsCommandOutput>;
            listOrganizationAdminAccounts(args: ListOrganizationAdminAccountsCommandInput, cb: (err: any, data?: ListOrganizationAdminAccountsCommandOutput) => void): void;
            listOrganizationAdminAccounts(args: ListOrganizationAdminAccountsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOrganizationAdminAccountsCommandOutput) => void): void;
            /**
                * <p>Returns the tag values that are assigned to a behavior graph.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Rejects an invitation to contribute the account data to a behavior graph. This operation
                *          must be called by an invited member account that has the <code>INVITED</code>
                *          status.</p>
                *          <p>
                *             <code>RejectInvitation</code> cannot be called by an organization account in the
                *          organization behavior graph. In the organization behavior graph, organization accounts do
                *          not receive an invitation.</p>
                */
            rejectInvitation(args: RejectInvitationCommandInput, options?: __HttpHandlerOptions): Promise<RejectInvitationCommandOutput>;
            rejectInvitation(args: RejectInvitationCommandInput, cb: (err: any, data?: RejectInvitationCommandOutput) => void): void;
            rejectInvitation(args: RejectInvitationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectInvitationCommandOutput) => void): void;
            /**
                * <p>Sends a request to enable data ingest for a member account that has a status of
                *             <code>ACCEPTED_BUT_DISABLED</code>.</p>
                *          <p>For valid member accounts, the status is updated as follows.</p>
                *          <ul>
                *             <li>
                *                <p>If Detective enabled the member account, then the new status is
                *                   <code>ENABLED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If Detective cannot enable the member account, the status remains
                *                   <code>ACCEPTED_BUT_DISABLED</code>. </p>
                *             </li>
                *          </ul>
                */
            startMonitoringMember(args: StartMonitoringMemberCommandInput, options?: __HttpHandlerOptions): Promise<StartMonitoringMemberCommandOutput>;
            startMonitoringMember(args: StartMonitoringMemberCommandInput, cb: (err: any, data?: StartMonitoringMemberCommandOutput) => void): void;
            startMonitoringMember(args: StartMonitoringMemberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartMonitoringMemberCommandOutput) => void): void;
            /**
                * <p>Applies tag values to a behavior graph.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes tags from a behavior graph.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates the configuration for the Organizations integration in the current Region.
                *          Can only be called by the Detective administrator account for the
                *          organization.</p>
                */
            updateOrganizationConfiguration(args: UpdateOrganizationConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateOrganizationConfigurationCommandOutput>;
            updateOrganizationConfiguration(args: UpdateOrganizationConfigurationCommandInput, cb: (err: any, data?: UpdateOrganizationConfigurationCommandOutput) => void): void;
            updateOrganizationConfiguration(args: UpdateOrganizationConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateOrganizationConfigurationCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/AcceptInvitationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { AcceptInvitationRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface AcceptInvitationCommandInput extends AcceptInvitationRequest {
    }
    export interface AcceptInvitationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Accepts an invitation for the member account to contribute data to a behavior graph.
        *          This operation can only be called by an invited member account. </p>
        *          <p>The request provides the ARN of behavior graph.</p>
        *          <p>The member account status in the graph must be <code>INVITED</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, AcceptInvitationCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, AcceptInvitationCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new AcceptInvitationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptInvitationCommandInput} for command's `input` shape.
        * @see {@link AcceptInvitationCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class AcceptInvitationCommand extends $Command<AcceptInvitationCommandInput, AcceptInvitationCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: AcceptInvitationCommandInput;
            constructor(input: AcceptInvitationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptInvitationCommandInput, AcceptInvitationCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateGraphCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { CreateGraphRequest, CreateGraphResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface CreateGraphCommandInput extends CreateGraphRequest {
    }
    export interface CreateGraphCommandOutput extends CreateGraphResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new behavior graph for the calling account, and sets that account as the
        *          administrator account. This operation is called by the account that is enabling Detective.</p>
        *          <p>Before you try to enable Detective, make sure that your account has been
        *          enrolled in Amazon GuardDuty for at least 48 hours. If you do not meet this
        *          requirement, you cannot enable Detective. If you do meet the GuardDuty
        *          prerequisite, then when you make the request to enable Detective, it checks
        *          whether your data volume is within the Detective quota. If it exceeds the quota,
        *          then you cannot enable Detective. </p>
        *          <p>The operation also enables Detective for the calling account in the currently
        *          selected Region. It returns the ARN of the new behavior graph.</p>
        *          <p>
        *             <code>CreateGraph</code> triggers a process to create the corresponding data tables for
        *          the new behavior graph.</p>
        *          <p>An account can only be the administrator account for one behavior graph within a Region.
        *          If the same account calls <code>CreateGraph</code> with the same administrator account, it
        *          always returns the same behavior graph ARN. It does not create a new behavior graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, CreateGraphCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, CreateGraphCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new CreateGraphCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateGraphCommandInput} for command's `input` shape.
        * @see {@link CreateGraphCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class CreateGraphCommand extends $Command<CreateGraphCommandInput, CreateGraphCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: CreateGraphCommandInput;
            constructor(input: CreateGraphCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateGraphCommandInput, CreateGraphCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateMembersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { CreateMembersRequest, CreateMembersResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface CreateMembersCommandInput extends CreateMembersRequest {
    }
    export interface CreateMembersCommandOutput extends CreateMembersResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             <code>CreateMembers</code> is used to send invitations to accounts. For the organization
        *          behavior graph, the Detective administrator account uses
        *             <code>CreateMembers</code> to enable organization accounts as member accounts.</p>
        *          <p>For invited accounts, <code>CreateMembers</code> sends a request to invite the specified
        *             Amazon Web Services accounts to be member accounts in the behavior graph. This operation
        *          can only be called by the administrator account for a behavior graph. </p>
        *          <p>
        *             <code>CreateMembers</code> verifies the accounts and then invites the verified accounts.
        *          The administrator can optionally specify to not send invitation emails to the member
        *          accounts. This would be used when the administrator manages their member accounts
        *          centrally.</p>
        *          <p>For organization accounts in the organization behavior graph, <code>CreateMembers</code>
        *          attempts to enable the accounts. The organization accounts do not receive
        *          invitations.</p>
        *          <p>The request provides the behavior graph ARN and the list of accounts to invite or to
        *          enable.</p>
        *          <p>The response separates the requested accounts into two lists:</p>
        *          <ul>
        *             <li>
        *                <p>The accounts that <code>CreateMembers</code> was able to process. For invited
        *                accounts, includes member accounts that are being verified, that have passed
        *                verification and are to be invited, and that have failed verification. For
        *                organization accounts in the organization behavior graph, includes accounts that can
        *                be enabled and that cannot be enabled.</p>
        *             </li>
        *             <li>
        *                <p>The accounts that <code>CreateMembers</code> was unable to process. This list
        *                includes accounts that were already invited to be member accounts in the behavior
        *                graph.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, CreateMembersCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, CreateMembersCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new CreateMembersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMembersCommandInput} for command's `input` shape.
        * @see {@link CreateMembersCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class CreateMembersCommand extends $Command<CreateMembersCommandInput, CreateMembersCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: CreateMembersCommandInput;
            constructor(input: CreateMembersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMembersCommandInput, CreateMembersCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteGraphCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { DeleteGraphRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface DeleteGraphCommandInput extends DeleteGraphRequest {
    }
    export interface DeleteGraphCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disables the specified behavior graph and queues it to be deleted. This operation
        *          removes the behavior graph from each member account's list of behavior graphs.</p>
        *          <p>
        *             <code>DeleteGraph</code> can only be called by the administrator account for a behavior
        *          graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, DeleteGraphCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, DeleteGraphCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new DeleteGraphCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteGraphCommandInput} for command's `input` shape.
        * @see {@link DeleteGraphCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class DeleteGraphCommand extends $Command<DeleteGraphCommandInput, DeleteGraphCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: DeleteGraphCommandInput;
            constructor(input: DeleteGraphCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteGraphCommandInput, DeleteGraphCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteMembersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { DeleteMembersRequest, DeleteMembersResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface DeleteMembersCommandInput extends DeleteMembersRequest {
    }
    export interface DeleteMembersCommandOutput extends DeleteMembersResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the specified member accounts from the behavior graph. The removed accounts no
        *          longer contribute data to the behavior graph. This operation can only be called by the
        *          administrator account for the behavior graph.</p>
        *          <p>For invited accounts, the removed accounts are deleted from the list of accounts in the
        *          behavior graph. To restore the account, the administrator account must send another
        *          invitation.</p>
        *          <p>For organization accounts in the organization behavior graph, the Detective
        *          administrator account can always enable the organization account again. Organization
        *          accounts that are not enabled as member accounts are not included in the
        *             <code>ListMembers</code> results for the organization behavior graph.</p>
        *          <p>An administrator account cannot use <code>DeleteMembers</code> to remove their own
        *          account from the behavior graph. To disable a behavior graph, the administrator account
        *          uses the <code>DeleteGraph</code> API method.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, DeleteMembersCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, DeleteMembersCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new DeleteMembersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMembersCommandInput} for command's `input` shape.
        * @see {@link DeleteMembersCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class DeleteMembersCommand extends $Command<DeleteMembersCommandInput, DeleteMembersCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: DeleteMembersCommandInput;
            constructor(input: DeleteMembersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMembersCommandInput, DeleteMembersCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DescribeOrganizationConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { DescribeOrganizationConfigurationRequest, DescribeOrganizationConfigurationResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface DescribeOrganizationConfigurationCommandInput extends DescribeOrganizationConfigurationRequest {
    }
    export interface DescribeOrganizationConfigurationCommandOutput extends DescribeOrganizationConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about the configuration for the organization behavior graph.
        *          Currently indicates whether to automatically enable new organization accounts as member
        *          accounts.</p>
        *          <p>Can only be called by the Detective administrator account for the organization. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, DescribeOrganizationConfigurationCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, DescribeOrganizationConfigurationCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new DescribeOrganizationConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeOrganizationConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeOrganizationConfigurationCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class DescribeOrganizationConfigurationCommand extends $Command<DescribeOrganizationConfigurationCommandInput, DescribeOrganizationConfigurationCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: DescribeOrganizationConfigurationCommandInput;
            constructor(input: DescribeOrganizationConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeOrganizationConfigurationCommandInput, DescribeOrganizationConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisableOrganizationAdminAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    export interface DisableOrganizationAdminAccountCommandInput {
    }
    export interface DisableOrganizationAdminAccountCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the Detective administrator account for the organization in the current
        *          Region. Deletes the behavior graph for that account.</p>
        *          <p>Can only be called by the organization management account. Before you can select a
        *          different Detective administrator account, you must remove the Detective
        *          administrator account in all Regions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, DisableOrganizationAdminAccountCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, DisableOrganizationAdminAccountCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new DisableOrganizationAdminAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisableOrganizationAdminAccountCommandInput} for command's `input` shape.
        * @see {@link DisableOrganizationAdminAccountCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class DisableOrganizationAdminAccountCommand extends $Command<DisableOrganizationAdminAccountCommandInput, DisableOrganizationAdminAccountCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: DisableOrganizationAdminAccountCommandInput;
            constructor(input: DisableOrganizationAdminAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableOrganizationAdminAccountCommandInput, DisableOrganizationAdminAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisassociateMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { DisassociateMembershipRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface DisassociateMembershipCommandInput extends DisassociateMembershipRequest {
    }
    export interface DisassociateMembershipCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the member account from the specified behavior graph. This operation can only be
        *          called by an invited member account that has the <code>ENABLED</code> status.</p>
        *          <p>
        *             <code>DisassociateMembership</code> cannot be called by an organization account in the
        *          organization behavior graph. For the organization behavior graph, the Detective
        *          administrator account determines which organization accounts to enable or disable as member
        *          accounts.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, DisassociateMembershipCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, DisassociateMembershipCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new DisassociateMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateMembershipCommandInput} for command's `input` shape.
        * @see {@link DisassociateMembershipCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class DisassociateMembershipCommand extends $Command<DisassociateMembershipCommandInput, DisassociateMembershipCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: DisassociateMembershipCommandInput;
            constructor(input: DisassociateMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateMembershipCommandInput, DisassociateMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/EnableOrganizationAdminAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { EnableOrganizationAdminAccountRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface EnableOrganizationAdminAccountCommandInput extends EnableOrganizationAdminAccountRequest {
    }
    export interface EnableOrganizationAdminAccountCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Designates the Detective administrator account for the organization in the
        *          current Region.</p>
        *          <p>If the account does not have Detective enabled, then enables Detective
        *          for that account and creates a new behavior graph.</p>
        *          <p>Can only be called by the organization management account.</p>
        *          <p>The Detective administrator account for an organization must be the same in all
        *          Regions. If you already designated a Detective administrator account in another
        *          Region, then you must designate the same account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, EnableOrganizationAdminAccountCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, EnableOrganizationAdminAccountCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new EnableOrganizationAdminAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableOrganizationAdminAccountCommandInput} for command's `input` shape.
        * @see {@link EnableOrganizationAdminAccountCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class EnableOrganizationAdminAccountCommand extends $Command<EnableOrganizationAdminAccountCommandInput, EnableOrganizationAdminAccountCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: EnableOrganizationAdminAccountCommandInput;
            constructor(input: EnableOrganizationAdminAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableOrganizationAdminAccountCommandInput, EnableOrganizationAdminAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/GetMembersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { GetMembersRequest, GetMembersResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface GetMembersCommandInput extends GetMembersRequest {
    }
    export interface GetMembersCommandOutput extends GetMembersResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the membership details for specified member accounts for a behavior
        *          graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, GetMembersCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, GetMembersCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new GetMembersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMembersCommandInput} for command's `input` shape.
        * @see {@link GetMembersCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class GetMembersCommand extends $Command<GetMembersCommandInput, GetMembersCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: GetMembersCommandInput;
            constructor(input: GetMembersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMembersCommandInput, GetMembersCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListGraphsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { ListGraphsRequest, ListGraphsResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface ListGraphsCommandInput extends ListGraphsRequest {
    }
    export interface ListGraphsCommandOutput extends ListGraphsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the list of behavior graphs that the calling account is an administrator account
        *          of. This operation can only be called by an administrator account.</p>
        *          <p>Because an account can currently only be the administrator of one behavior graph within
        *          a Region, the results always contain a single behavior graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, ListGraphsCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, ListGraphsCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new ListGraphsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGraphsCommandInput} for command's `input` shape.
        * @see {@link ListGraphsCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class ListGraphsCommand extends $Command<ListGraphsCommandInput, ListGraphsCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: ListGraphsCommandInput;
            constructor(input: ListGraphsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGraphsCommandInput, ListGraphsCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListInvitationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { ListInvitationsRequest, ListInvitationsResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface ListInvitationsCommandInput extends ListInvitationsRequest {
    }
    export interface ListInvitationsCommandOutput extends ListInvitationsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the list of open and accepted behavior graph invitations for the member
        *          account. This operation can only be called by an invited member account.</p>
        *          <p>Open invitations are invitations that the member account has not responded to.</p>
        *          <p>The results do not include behavior graphs for which the member account declined the
        *          invitation. The results also do not include behavior graphs that the member account
        *          resigned from or was removed from.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, ListInvitationsCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, ListInvitationsCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new ListInvitationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListInvitationsCommandInput} for command's `input` shape.
        * @see {@link ListInvitationsCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class ListInvitationsCommand extends $Command<ListInvitationsCommandInput, ListInvitationsCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: ListInvitationsCommandInput;
            constructor(input: ListInvitationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListInvitationsCommandInput, ListInvitationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListMembersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { ListMembersRequest, ListMembersResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface ListMembersCommandInput extends ListMembersRequest {
    }
    export interface ListMembersCommandOutput extends ListMembersResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the list of member accounts for a behavior graph.</p>
        *          <p>For invited accounts, the results do not include member accounts that were removed from
        *          the behavior graph.</p>
        *          <p>For the organization behavior graph, the results do not include organization accounts
        *          that the Detective administrator account has not enabled as member
        *          accounts.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, ListMembersCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, ListMembersCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new ListMembersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMembersCommandInput} for command's `input` shape.
        * @see {@link ListMembersCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class ListMembersCommand extends $Command<ListMembersCommandInput, ListMembersCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: ListMembersCommandInput;
            constructor(input: ListMembersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMembersCommandInput, ListMembersCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListOrganizationAdminAccountsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { ListOrganizationAdminAccountsRequest, ListOrganizationAdminAccountsResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface ListOrganizationAdminAccountsCommandInput extends ListOrganizationAdminAccountsRequest {
    }
    export interface ListOrganizationAdminAccountsCommandOutput extends ListOrganizationAdminAccountsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about the Detective administrator account for an
        *          organization. Can only be called by the organization management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, ListOrganizationAdminAccountsCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, ListOrganizationAdminAccountsCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new ListOrganizationAdminAccountsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOrganizationAdminAccountsCommandInput} for command's `input` shape.
        * @see {@link ListOrganizationAdminAccountsCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class ListOrganizationAdminAccountsCommand extends $Command<ListOrganizationAdminAccountsCommandInput, ListOrganizationAdminAccountsCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: ListOrganizationAdminAccountsCommandInput;
            constructor(input: ListOrganizationAdminAccountsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOrganizationAdminAccountsCommandInput, ListOrganizationAdminAccountsCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the tag values that are assigned to a behavior graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, ListTagsForResourceCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, ListTagsForResourceCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/RejectInvitationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { RejectInvitationRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface RejectInvitationCommandInput extends RejectInvitationRequest {
    }
    export interface RejectInvitationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Rejects an invitation to contribute the account data to a behavior graph. This operation
        *          must be called by an invited member account that has the <code>INVITED</code>
        *          status.</p>
        *          <p>
        *             <code>RejectInvitation</code> cannot be called by an organization account in the
        *          organization behavior graph. In the organization behavior graph, organization accounts do
        *          not receive an invitation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, RejectInvitationCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, RejectInvitationCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new RejectInvitationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RejectInvitationCommandInput} for command's `input` shape.
        * @see {@link RejectInvitationCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class RejectInvitationCommand extends $Command<RejectInvitationCommandInput, RejectInvitationCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: RejectInvitationCommandInput;
            constructor(input: RejectInvitationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectInvitationCommandInput, RejectInvitationCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/StartMonitoringMemberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { StartMonitoringMemberRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface StartMonitoringMemberCommandInput extends StartMonitoringMemberRequest {
    }
    export interface StartMonitoringMemberCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sends a request to enable data ingest for a member account that has a status of
        *             <code>ACCEPTED_BUT_DISABLED</code>.</p>
        *          <p>For valid member accounts, the status is updated as follows.</p>
        *          <ul>
        *             <li>
        *                <p>If Detective enabled the member account, then the new status is
        *                   <code>ENABLED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If Detective cannot enable the member account, the status remains
        *                   <code>ACCEPTED_BUT_DISABLED</code>. </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, StartMonitoringMemberCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, StartMonitoringMemberCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new StartMonitoringMemberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartMonitoringMemberCommandInput} for command's `input` shape.
        * @see {@link StartMonitoringMemberCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class StartMonitoringMemberCommand extends $Command<StartMonitoringMemberCommandInput, StartMonitoringMemberCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: StartMonitoringMemberCommandInput;
            constructor(input: StartMonitoringMemberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartMonitoringMemberCommandInput, StartMonitoringMemberCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Applies tag values to a behavior graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, TagResourceCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, TagResourceCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes tags from a behavior graph.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, UntagResourceCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, UntagResourceCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UpdateOrganizationConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetectiveClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient";
    import { UpdateOrganizationConfigurationRequest } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0";
    export interface UpdateOrganizationConfigurationCommandInput extends UpdateOrganizationConfigurationRequest {
    }
    export interface UpdateOrganizationConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the configuration for the Organizations integration in the current Region.
        *          Can only be called by the Detective administrator account for the
        *          organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { DetectiveClient, UpdateOrganizationConfigurationCommand } from "@aws-sdk/client-detective"; // ES Modules import
        * // const { DetectiveClient, UpdateOrganizationConfigurationCommand } = require("@aws-sdk/client-detective"); // CommonJS import
        * const client = new DetectiveClient(config);
        * const command = new UpdateOrganizationConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateOrganizationConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateOrganizationConfigurationCommandOutput} for command's `response` shape.
        * @see {@link DetectiveClientResolvedConfig | config} for DetectiveClient's `config` shape.
        *
        */
    export class UpdateOrganizationConfigurationCommand extends $Command<UpdateOrganizationConfigurationCommandInput, UpdateOrganizationConfigurationCommandOutput, DetectiveClientResolvedConfig> {
            readonly input: UpdateOrganizationConfigurationCommandInput;
            constructor(input: UpdateOrganizationConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DetectiveClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateOrganizationConfigurationCommandInput, UpdateOrganizationConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/DetectiveClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptInvitationCommandInput, AcceptInvitationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/AcceptInvitationCommand";
    import { CreateGraphCommandInput, CreateGraphCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateGraphCommand";
    import { CreateMembersCommandInput, CreateMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/CreateMembersCommand";
    import { DeleteGraphCommandInput, DeleteGraphCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteGraphCommand";
    import { DeleteMembersCommandInput, DeleteMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DeleteMembersCommand";
    import { DescribeOrganizationConfigurationCommandInput, DescribeOrganizationConfigurationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DescribeOrganizationConfigurationCommand";
    import { DisableOrganizationAdminAccountCommandInput, DisableOrganizationAdminAccountCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisableOrganizationAdminAccountCommand";
    import { DisassociateMembershipCommandInput, DisassociateMembershipCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/DisassociateMembershipCommand";
    import { EnableOrganizationAdminAccountCommandInput, EnableOrganizationAdminAccountCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/EnableOrganizationAdminAccountCommand";
    import { GetMembersCommandInput, GetMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/GetMembersCommand";
    import { ListGraphsCommandInput, ListGraphsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListGraphsCommand";
    import { ListInvitationsCommandInput, ListInvitationsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListInvitationsCommand";
    import { ListMembersCommandInput, ListMembersCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListMembersCommand";
    import { ListOrganizationAdminAccountsCommandInput, ListOrganizationAdminAccountsCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListOrganizationAdminAccountsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/ListTagsForResourceCommand";
    import { RejectInvitationCommandInput, RejectInvitationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/RejectInvitationCommand";
    import { StartMonitoringMemberCommandInput, StartMonitoringMemberCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/StartMonitoringMemberCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UntagResourceCommand";
    import { UpdateOrganizationConfigurationCommandInput, UpdateOrganizationConfigurationCommandOutput } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/commands/UpdateOrganizationConfigurationCommand";
    export type ServiceInputTypes = AcceptInvitationCommandInput | CreateGraphCommandInput | CreateMembersCommandInput | DeleteGraphCommandInput | DeleteMembersCommandInput | DescribeOrganizationConfigurationCommandInput | DisableOrganizationAdminAccountCommandInput | DisassociateMembershipCommandInput | EnableOrganizationAdminAccountCommandInput | GetMembersCommandInput | ListGraphsCommandInput | ListInvitationsCommandInput | ListMembersCommandInput | ListOrganizationAdminAccountsCommandInput | ListTagsForResourceCommandInput | RejectInvitationCommandInput | StartMonitoringMemberCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateOrganizationConfigurationCommandInput;
    export type ServiceOutputTypes = AcceptInvitationCommandOutput | CreateGraphCommandOutput | CreateMembersCommandOutput | DeleteGraphCommandOutput | DeleteMembersCommandOutput | DescribeOrganizationConfigurationCommandOutput | DisableOrganizationAdminAccountCommandOutput | DisassociateMembershipCommandOutput | EnableOrganizationAdminAccountCommandOutput | GetMembersCommandOutput | ListGraphsCommandOutput | ListInvitationsCommandOutput | ListMembersCommandOutput | ListOrganizationAdminAccountsCommandOutput | ListTagsForResourceCommandOutput | RejectInvitationCommandOutput | StartMonitoringMemberCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateOrganizationConfigurationCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type DetectiveClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of DetectiveClient class constructor that set the region, credentials and other options.
        */
    export interface DetectiveClientConfig extends DetectiveClientConfigType {
    }
    type DetectiveClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of DetectiveClient class. This is resolved and normalized from the {@link DetectiveClientConfig | constructor configuration interface}.
        */
    export interface DetectiveClientResolvedConfig extends DetectiveClientResolvedConfigType {
    }
    /**
        * <p>Detective uses machine learning and purpose-built visualizations to help you to
        *          analyze and investigate security issues across your Amazon Web Services (Amazon Web Services) workloads. Detective automatically extracts time-based events such
        *          as login attempts, API calls, and network traffic from CloudTrail and Amazon Virtual Private Cloud (Amazon VPC) flow logs. It also extracts findings detected by
        *             Amazon GuardDuty.</p>
        *          <p>The Detective API primarily supports the creation and management of behavior
        *          graphs. A behavior graph contains the extracted data from a set of member accounts, and is
        *          created and managed by an administrator account.</p>
        *          <p>To add a member account to the behavior graph, the administrator account sends an
        *          invitation to the account. When the account accepts the invitation, it becomes a member
        *          account in the behavior graph.</p>
        *          <p>Detective is also integrated with Organizations. The organization
        *          management account designates the Detective administrator account for the
        *          organization. That account becomes the administrator account for the organization behavior
        *          graph. The Detective administrator account can enable any organization account as
        *          a member account in the organization behavior graph. The organization accounts do not
        *          receive invitations. The Detective administrator account can also invite other
        *          accounts to the organization behavior graph.</p>
        *          <p>Every behavior graph is specific to a Region. You can only use the API to manage
        *          behavior graphs that belong to the Region that is associated with the currently selected
        *          endpoint.</p>
        *          <p>The administrator account for a behavior graph can use the Detective API to do
        *          the following:</p>
        *          <ul>
        *             <li>
        *                <p>Enable and disable Detective. Enabling Detective creates a new
        *                behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>View the list of member accounts in a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Add member accounts to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Remove member accounts from a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Apply tags to a behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>The organization management account can use the Detective API to select the
        *          delegated administrator for Detective.</p>
        *          <p>The Detective administrator account for an organization can use the Detective API to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>Perform all of the functions of an administrator account.</p>
        *             </li>
        *             <li>
        *                <p>Determine whether to automatically enable new organization accounts as member
        *                accounts in the organization behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>An invited member account can use the Detective API to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>View the list of behavior graphs that they are invited to.</p>
        *             </li>
        *             <li>
        *                <p>Accept an invitation to contribute to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Decline an invitation to contribute to a behavior graph.</p>
        *             </li>
        *             <li>
        *                <p>Remove their account from a behavior graph.</p>
        *             </li>
        *          </ul>
        *          <p>All API actions are logged as CloudTrail events. See <a href="https://docs.aws.amazon.com/detective/latest/adminguide/logging-using-cloudtrail.html">Logging Detective API Calls with CloudTrail</a>.</p>
        *          <note>
        *             <p>We replaced the term "master account" with the term "administrator account." An
        *             administrator account is used to centrally manage multiple accounts. In the case of
        *                Detective, the administrator account manages the accounts in their behavior
        *             graph.</p>
        *          </note>
        */
    export class DetectiveClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, DetectiveClientResolvedConfig> {
            /**
                * The resolved configuration of DetectiveClient class. This is resolved and normalized from the {@link DetectiveClientConfig | constructor configuration interface}.
                */
            readonly config: DetectiveClientResolvedConfig;
            constructor(configuration: DetectiveClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { DetectiveServiceException as __BaseException } from "@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/DetectiveServiceException";
    export interface AcceptInvitationRequest {
            /**
                * <p>The ARN of the behavior graph that the member account is accepting the invitation
                *          for.</p>
                *          <p>The member account status in the behavior graph must be <code>INVITED</code>.</p>
                */
            GraphArn: string | undefined;
    }
    export namespace AcceptInvitationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptInvitationRequest) => any;
    }
    /**
        * <p>The request attempted an invalid action.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * <p>The request was valid but failed because of a problem with the service.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The request refers to a nonexistent resource.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The request parameters are invalid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    /**
        * <p>An Amazon Web Services account that is the administrator account of or a member of a
        *          behavior graph.</p>
        */
    export interface Account {
            /**
                * <p>The account identifier of the Amazon Web Services account.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The Amazon Web Services account root user email address for the Amazon Web Services
                *          account.</p>
                */
            EmailAddress: string | undefined;
    }
    export namespace Account {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Account) => any;
    }
    /**
        * <p>Information about the Detective administrator account for an
        *          organization.</p>
        */
    export interface Administrator {
            /**
                * <p>The Amazon Web Services account identifier of the Detective administrator
                *          account for the organization.</p>
                */
            AccountId?: string;
            /**
                * <p>The ARN of the organization behavior graph.</p>
                */
            GraphArn?: string;
            /**
                * <p>The date and time when the Detective administrator account was enabled. The
                *          value is an ISO8601 formatted string. For example,
                *          <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            DelegationTime?: Date;
    }
    export namespace Administrator {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Administrator) => any;
    }
    export interface CreateGraphRequest {
            /**
                * <p>The tags to assign to the new behavior graph. You can add up to 50 tags. For each tag,
                *          you provide the tag key and the tag value. Each tag key can contain up to 128 characters.
                *          Each tag value can contain up to 256 characters.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateGraphRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGraphRequest) => any;
    }
    export interface CreateGraphResponse {
            /**
                * <p>The ARN of the new behavior graph.</p>
                */
            GraphArn?: string;
    }
    export namespace CreateGraphResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGraphResponse) => any;
    }
    /**
        * <p>This request cannot be completed for one of the following reasons.</p>
        *          <ul>
        *             <li>
        *                <p>The request would cause the number of member accounts in the behavior graph to
        *                exceed the maximum allowed. A behavior graph cannot have more than 1200 member
        *                accounts.</p>
        *             </li>
        *             <li>
        *                <p>The request would cause the data rate for the behavior graph to exceed the maximum
        *                allowed.</p>
        *             </li>
        *             <li>
        *                <p>Detective is unable to verify the data rate for the member account. This
        *                is usually because the member account is not enrolled in Amazon GuardDuty.</p>
        *             </li>
        *          </ul>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    export interface CreateMembersRequest {
            /**
                * <p>The ARN of the behavior graph.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>Customized message text to include in the invitation email message to the invited member
                *          accounts.</p>
                */
            Message?: string;
            /**
                * <p>if set to <code>true</code>, then the invited accounts do not receive email
                *          notifications. By default, this is set to <code>false</code>, and the invited accounts
                *          receive email notifications.</p>
                *          <p>Organization accounts in the organization behavior graph do not receive email
                *          notifications.</p>
                */
            DisableEmailNotification?: boolean;
            /**
                * <p>The list of Amazon Web Services accounts to invite or to enable. You can invite or enable
                *          up to 50 accounts at a time. For each invited account, the account list contains the
                *          account identifier and the Amazon Web Services account root user email address. For
                *          organization accounts in the organization behavior graph, the email address is not
                *          required.</p>
                */
            Accounts: Account[] | undefined;
    }
    export namespace CreateMembersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMembersRequest) => any;
    }
    export enum MemberDisabledReason {
            VOLUME_TOO_HIGH = "VOLUME_TOO_HIGH",
            VOLUME_UNKNOWN = "VOLUME_UNKNOWN"
    }
    export enum InvitationType {
            INVITATION = "INVITATION",
            ORGANIZATION = "ORGANIZATION"
    }
    export enum MemberStatus {
            ACCEPTED_BUT_DISABLED = "ACCEPTED_BUT_DISABLED",
            ENABLED = "ENABLED",
            INVITED = "INVITED",
            VERIFICATION_FAILED = "VERIFICATION_FAILED",
            VERIFICATION_IN_PROGRESS = "VERIFICATION_IN_PROGRESS"
    }
    /**
        * <p>Details about a member account in a behavior graph.</p>
        */
    export interface MemberDetail {
            /**
                * <p>The Amazon Web Services account identifier for the member account.</p>
                */
            AccountId?: string;
            /**
                * <p>The Amazon Web Services account root user email address for the member account.</p>
                */
            EmailAddress?: string;
            /**
                * <p>The ARN of the behavior graph.</p>
                */
            GraphArn?: string;
            /**
                * @deprecated
                *
                * <p>The Amazon Web Services account identifier of the administrator account for the behavior
                *          graph.</p>
                */
            MasterId?: string;
            /**
                * <p>The Amazon Web Services account identifier of the administrator account for the behavior
                *          graph.</p>
                */
            AdministratorId?: string;
            /**
                * <p>The current membership status of the member account. The status can have one of the
                *          following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>INVITED</code> - For invited accounts only. Indicates that the member was
                *                sent an invitation but has not yet responded.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>VERIFICATION_IN_PROGRESS</code> - For invited accounts only, indicates that
                *                   Detective is verifying that the account identifier and email address
                *                provided for the member account match. If they do match, then Detective
                *                sends the invitation. If the email address and account identifier don't match, then
                *                the member cannot be added to the behavior graph.</p>
                *                <p>For organization accounts in the organization behavior graph, indicates that
                *                   Detective is verifying that the account belongs to the
                *                organization.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>VERIFICATION_FAILED</code> - For invited accounts only. Indicates that the
                *                account and email address provided for the member account do not match, and Detective did not send an invitation to the account.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ENABLED</code> - Indicates that the member account currently contributes
                *                data to the behavior graph. For invited accounts, the member account accepted the
                *                invitation. For organization accounts in the organization behavior graph, the Detective administrator account enabled the organization account as a member
                *                account.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ACCEPTED_BUT_DISABLED</code> - The account accepted the invitation, or was
                *                enabled by the Detective administrator account, but is prevented from
                *                contributing data to the behavior graph. <code>DisabledReason</code> provides the
                *                reason why the member account is not enabled.</p>
                *             </li>
                *          </ul>
                *          <p>Invited accounts that declined an invitation or that were removed from the behavior
                *          graph are not included. In the organization behavior graph, organization accounts that the
                *             Detective administrator account did not enable are not included.</p>
                */
            Status?: MemberStatus | string;
            /**
                * <p>For member accounts with a status of <code>ACCEPTED_BUT_DISABLED</code>, the reason that
                *          the member account is not enabled.</p>
                *          <p>The reason can have one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>VOLUME_TOO_HIGH</code> - Indicates that adding the member account would
                *                cause the data volume for the behavior graph to be too high.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>VOLUME_UNKNOWN</code> - Indicates that Detective is unable to
                *                verify the data volume for the member account. This is usually because the member
                *                account is not enrolled in Amazon GuardDuty. </p>
                *             </li>
                *          </ul>
                */
            DisabledReason?: MemberDisabledReason | string;
            /**
                * <p>For invited accounts, the date and time that Detective sent the invitation to
                *          the account. The value is an ISO8601 formatted string. For example,
                *             <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            InvitedTime?: Date;
            /**
                * <p>The date and time that the member account was last updated. The value is an ISO8601
                *          formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            UpdatedTime?: Date;
            /**
                * <p>The data volume in bytes per day for the member account.</p>
                */
            VolumeUsageInBytes?: number;
            /**
                * <p>The data and time when the member account data volume was last updated. The value is an
                *          ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            VolumeUsageUpdatedTime?: Date;
            /**
                * @deprecated
                *
                * <p>The member account data volume as a percentage of the maximum allowed data volume. 0
                *          indicates 0 percent, and 100 indicates 100 percent.</p>
                *          <p>Note that this is not the percentage of the behavior graph data volume.</p>
                *          <p>For example, the data volume for the behavior graph is 80 GB per day. The maximum data
                *          volume is 160 GB per day. If the data volume for the member account is 40 GB per day, then
                *             <code>PercentOfGraphUtilization</code> is 25. It represents 25% of the maximum allowed
                *          data volume. </p>
                */
            PercentOfGraphUtilization?: number;
            /**
                * @deprecated
                *
                * <p>The date and time when the graph utilization percentage was last updated. The value is
                *          an ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            PercentOfGraphUtilizationUpdatedTime?: Date;
            /**
                * <p>The type of behavior graph membership.</p>
                *          <p>For an organization account in the organization behavior graph, the type is
                *             <code>ORGANIZATION</code>.</p>
                *          <p>For an account that was invited to a behavior graph, the type is
                *          <code>INVITATION</code>. </p>
                */
            InvitationType?: InvitationType | string;
    }
    export namespace MemberDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MemberDetail) => any;
    }
    /**
        * <p>A member account that was included in a request but for which the request could not be
        *          processed.</p>
        */
    export interface UnprocessedAccount {
            /**
                * <p>The Amazon Web Services account identifier of the member account that was not
                *          processed.</p>
                */
            AccountId?: string;
            /**
                * <p>The reason that the member account request could not be processed.</p>
                */
            Reason?: string;
    }
    export namespace UnprocessedAccount {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UnprocessedAccount) => any;
    }
    export interface CreateMembersResponse {
            /**
                * <p>The set of member account invitation or enablement requests that Detective was
                *          able to process. This includes accounts that are being verified, that failed verification,
                *          and that passed verification and are being sent an invitation or are being enabled.</p>
                */
            Members?: MemberDetail[];
            /**
                * <p>The list of accounts for which Detective was unable to process the invitation
                *          or enablement request. For each account, the list provides the reason why the request could
                *          not be processed. The list includes accounts that are already member accounts in the
                *          behavior graph.</p>
                */
            UnprocessedAccounts?: UnprocessedAccount[];
    }
    export namespace CreateMembersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMembersResponse) => any;
    }
    export interface DeleteGraphRequest {
            /**
                * <p>The ARN of the behavior graph to disable.</p>
                */
            GraphArn: string | undefined;
    }
    export namespace DeleteGraphRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGraphRequest) => any;
    }
    export interface DeleteMembersRequest {
            /**
                * <p>The ARN of the behavior graph to remove members from.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>The list of Amazon Web Services account identifiers for the member accounts to remove
                *          from the behavior graph. You can remove up to 50 member accounts at a time.</p>
                */
            AccountIds: string[] | undefined;
    }
    export namespace DeleteMembersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMembersRequest) => any;
    }
    export interface DeleteMembersResponse {
            /**
                * <p>The list of Amazon Web Services account identifiers for the member accounts that Detective successfully removed from the behavior graph.</p>
                */
            AccountIds?: string[];
            /**
                * <p>The list of member accounts that Detective was not able to remove from the
                *          behavior graph. For each member account, provides the reason that the deletion could not be
                *          processed.</p>
                */
            UnprocessedAccounts?: UnprocessedAccount[];
    }
    export namespace DeleteMembersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMembersResponse) => any;
    }
    export interface DescribeOrganizationConfigurationRequest {
            /**
                * <p>The ARN of the organization behavior graph.</p>
                */
            GraphArn: string | undefined;
    }
    export namespace DescribeOrganizationConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationConfigurationRequest) => any;
    }
    export interface DescribeOrganizationConfigurationResponse {
            /**
                * <p>Indicates whether to automatically enable new organization accounts as member accounts
                *          in the organization behavior graph.</p>
                */
            AutoEnable?: boolean;
    }
    export namespace DescribeOrganizationConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationConfigurationResponse) => any;
    }
    /**
        * <p>The request cannot be completed because too many other requests are occurring at the
        *          same time.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    export interface DisassociateMembershipRequest {
            /**
                * <p>The ARN of the behavior graph to remove the member account from.</p>
                *          <p>The member account's member status in the behavior graph must be
                *          <code>ENABLED</code>.</p>
                */
            GraphArn: string | undefined;
    }
    export namespace DisassociateMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateMembershipRequest) => any;
    }
    export interface EnableOrganizationAdminAccountRequest {
            /**
                * <p>The Amazon Web Services account identifier of the account to designate as the Detective administrator account for the organization.</p>
                */
            AccountId: string | undefined;
    }
    export namespace EnableOrganizationAdminAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableOrganizationAdminAccountRequest) => any;
    }
    export interface GetMembersRequest {
            /**
                * <p>The ARN of the behavior graph for which to request the member details.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>The list of Amazon Web Services account identifiers for the member account for which to
                *          return member details. You can request details for up to 50 member accounts at a
                *          time.</p>
                *          <p>You cannot use <code>GetMembers</code> to retrieve information about member accounts
                *          that were removed from the behavior graph.</p>
                */
            AccountIds: string[] | undefined;
    }
    export namespace GetMembersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMembersRequest) => any;
    }
    export interface GetMembersResponse {
            /**
                * <p>The member account details that Detective is returning in response to the
                *          request.</p>
                */
            MemberDetails?: MemberDetail[];
            /**
                * <p>The requested member accounts for which Detective was unable to return member
                *          details.</p>
                *          <p>For each account, provides the reason why the request could not be processed.</p>
                */
            UnprocessedAccounts?: UnprocessedAccount[];
    }
    export namespace GetMembersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMembersResponse) => any;
    }
    export interface ListGraphsRequest {
            /**
                * <p>For requests to get the next page of results, the pagination token that was returned
                *          with the previous set of results. The initial request does not include a pagination
                *          token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of graphs to return at a time. The total must be less than the
                *          overall limit on the number of results to return, which is currently 200.</p>
                */
            MaxResults?: number;
    }
    export namespace ListGraphsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGraphsRequest) => any;
    }
    /**
        * <p>A behavior graph in Detective.</p>
        */
    export interface Graph {
            /**
                * <p>The ARN of the behavior graph.</p>
                */
            Arn?: string;
            /**
                * <p>The date and time that the behavior graph was created. The value is an ISO8601 formatted
                *          string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
                */
            CreatedTime?: Date;
    }
    export namespace Graph {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Graph) => any;
    }
    export interface ListGraphsResponse {
            /**
                * <p>A list of behavior graphs that the account is an administrator account for.</p>
                */
            GraphList?: Graph[];
            /**
                * <p>If there are more behavior graphs remaining in the results, then this is the pagination
                *          token to use to request the next page of behavior graphs.</p>
                */
            NextToken?: string;
    }
    export namespace ListGraphsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGraphsResponse) => any;
    }
    export interface ListInvitationsRequest {
            /**
                * <p>For requests to retrieve the next page of results, the pagination token that was
                *          returned with the previous page of results. The initial request does not include a
                *          pagination token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of behavior graph invitations to return in the response. The total
                *          must be less than the overall limit on the number of results to return, which is currently
                *          200.</p>
                */
            MaxResults?: number;
    }
    export namespace ListInvitationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInvitationsRequest) => any;
    }
    export interface ListInvitationsResponse {
            /**
                * <p>The list of behavior graphs for which the member account has open or accepted
                *          invitations.</p>
                */
            Invitations?: MemberDetail[];
            /**
                * <p>If there are more behavior graphs remaining in the results, then this is the pagination
                *          token to use to request the next page of behavior graphs.</p>
                */
            NextToken?: string;
    }
    export namespace ListInvitationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListInvitationsResponse) => any;
    }
    export interface ListMembersRequest {
            /**
                * <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>For requests to retrieve the next page of member account results, the pagination token
                *          that was returned with the previous page of results. The initial request does not include a
                *          pagination token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of member accounts to include in the response. The total must be less
                *          than the overall limit on the number of results to return, which is currently 200.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMembersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMembersRequest) => any;
    }
    export interface ListMembersResponse {
            /**
                * <p>The list of member accounts in the behavior graph.</p>
                *          <p>For invited accounts, the results include member accounts that did not pass verification
                *          and member accounts that have not yet accepted the invitation to the behavior graph. The
                *          results do not include member accounts that were removed from the behavior graph.</p>
                *          <p>For the organization behavior graph, the results do not include organization accounts
                *          that the Detective administrator account has not enabled as member
                *          accounts.</p>
                */
            MemberDetails?: MemberDetail[];
            /**
                * <p>If there are more member accounts remaining in the results, then use this pagination
                *          token to request the next page of member accounts.</p>
                */
            NextToken?: string;
    }
    export namespace ListMembersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMembersResponse) => any;
    }
    export interface ListOrganizationAdminAccountsRequest {
            /**
                * <p>For requests to get the next page of results, the pagination token that was returned
                *          with the previous set of results. The initial request does not include a pagination
                *          token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return.</p>
                */
            MaxResults?: number;
    }
    export namespace ListOrganizationAdminAccountsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationAdminAccountsRequest) => any;
    }
    export interface ListOrganizationAdminAccountsResponse {
            /**
                * <p>The list of delegated administrator accounts.</p>
                */
            Administrators?: Administrator[];
            /**
                * <p>If there are more accounts remaining in the results, then this is the pagination token
                *          to use to request the next page of accounts.</p>
                */
            NextToken?: string;
    }
    export namespace ListOrganizationAdminAccountsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationAdminAccountsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The ARN of the behavior graph for which to retrieve the tag values.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The tag values that are assigned to the behavior graph. The request returns up to 50 tag
                *          values.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface RejectInvitationRequest {
            /**
                * <p>The ARN of the behavior graph to reject the invitation to.</p>
                *          <p>The member account's current member status in the behavior graph must be
                *             <code>INVITED</code>.</p>
                */
            GraphArn: string | undefined;
    }
    export namespace RejectInvitationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectInvitationRequest) => any;
    }
    export interface StartMonitoringMemberRequest {
            /**
                * <p>The ARN of the behavior graph.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>The account ID of the member account to try to enable.</p>
                *          <p>The account must be an invited member account with a status of
                *             <code>ACCEPTED_BUT_DISABLED</code>. </p>
                */
            AccountId: string | undefined;
    }
    export namespace StartMonitoringMemberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMonitoringMemberRequest) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The ARN of the behavior graph to assign the tags to.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The tags to assign to the behavior graph. You can add up to 50 tags. For each tag, you
                *          provide the tag key and the tag value. Each tag key can contain up to 128 characters. Each
                *          tag value can contain up to 256 characters.</p>
                */
            Tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The ARN of the behavior graph to remove the tags from.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The tag keys of the tags to remove from the behavior graph. You can remove up to 50 tags
                *          at a time.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateOrganizationConfigurationRequest {
            /**
                * <p>The ARN of the organization behavior graph.</p>
                */
            GraphArn: string | undefined;
            /**
                * <p>Indicates whether to automatically enable new organization accounts as member accounts
                *          in the organization behavior graph.</p>
                */
            AutoEnable?: boolean;
    }
    export namespace UpdateOrganizationConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateOrganizationConfigurationRequest) => any;
    }
}

declare module '@aws-sdk/client-detective/node_modules/@aws-sdk/client-detective/dist-types/models/DetectiveServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Detective service.
        */
    export class DetectiveServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

