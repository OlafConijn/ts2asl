// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-inspector' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AddAttributesToFindingsCommandInput, AddAttributesToFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/AddAttributesToFindingsCommand";
    import { CreateAssessmentTargetCommandInput, CreateAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTargetCommand";
    import { CreateAssessmentTemplateCommandInput, CreateAssessmentTemplateCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTemplateCommand";
    import { CreateExclusionsPreviewCommandInput, CreateExclusionsPreviewCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateExclusionsPreviewCommand";
    import { CreateResourceGroupCommandInput, CreateResourceGroupCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateResourceGroupCommand";
    import { DeleteAssessmentRunCommandInput, DeleteAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentRunCommand";
    import { DeleteAssessmentTargetCommandInput, DeleteAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTargetCommand";
    import { DeleteAssessmentTemplateCommandInput, DeleteAssessmentTemplateCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTemplateCommand";
    import { DescribeAssessmentRunsCommandInput, DescribeAssessmentRunsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentRunsCommand";
    import { DescribeAssessmentTargetsCommandInput, DescribeAssessmentTargetsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTargetsCommand";
    import { DescribeAssessmentTemplatesCommandInput, DescribeAssessmentTemplatesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTemplatesCommand";
    import { DescribeCrossAccountAccessRoleCommandInput, DescribeCrossAccountAccessRoleCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeCrossAccountAccessRoleCommand";
    import { DescribeExclusionsCommandInput, DescribeExclusionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeExclusionsCommand";
    import { DescribeFindingsCommandInput, DescribeFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeFindingsCommand";
    import { DescribeResourceGroupsCommandInput, DescribeResourceGroupsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeResourceGroupsCommand";
    import { DescribeRulesPackagesCommandInput, DescribeRulesPackagesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeRulesPackagesCommand";
    import { GetAssessmentReportCommandInput, GetAssessmentReportCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetAssessmentReportCommand";
    import { GetExclusionsPreviewCommandInput, GetExclusionsPreviewCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetExclusionsPreviewCommand";
    import { GetTelemetryMetadataCommandInput, GetTelemetryMetadataCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetTelemetryMetadataCommand";
    import { ListAssessmentRunAgentsCommandInput, ListAssessmentRunAgentsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunAgentsCommand";
    import { ListAssessmentRunsCommandInput, ListAssessmentRunsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunsCommand";
    import { ListAssessmentTargetsCommandInput, ListAssessmentTargetsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTargetsCommand";
    import { ListAssessmentTemplatesCommandInput, ListAssessmentTemplatesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTemplatesCommand";
    import { ListEventSubscriptionsCommandInput, ListEventSubscriptionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListEventSubscriptionsCommand";
    import { ListExclusionsCommandInput, ListExclusionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListExclusionsCommand";
    import { ListFindingsCommandInput, ListFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListFindingsCommand";
    import { ListRulesPackagesCommandInput, ListRulesPackagesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListRulesPackagesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListTagsForResourceCommand";
    import { PreviewAgentsCommandInput, PreviewAgentsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/PreviewAgentsCommand";
    import { RegisterCrossAccountAccessRoleCommandInput, RegisterCrossAccountAccessRoleCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RegisterCrossAccountAccessRoleCommand";
    import { RemoveAttributesFromFindingsCommandInput, RemoveAttributesFromFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RemoveAttributesFromFindingsCommand";
    import { SetTagsForResourceCommandInput, SetTagsForResourceCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SetTagsForResourceCommand";
    import { StartAssessmentRunCommandInput, StartAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StartAssessmentRunCommand";
    import { StopAssessmentRunCommandInput, StopAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StopAssessmentRunCommand";
    import { SubscribeToEventCommandInput, SubscribeToEventCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SubscribeToEventCommand";
    import { UnsubscribeFromEventCommandInput, UnsubscribeFromEventCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UnsubscribeFromEventCommand";
    import { UpdateAssessmentTargetCommandInput, UpdateAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UpdateAssessmentTargetCommand";
    import { InspectorClient } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    /**
        * <fullname>Amazon Inspector</fullname>
        *          <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to
        *          identify potential security issues. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html"> Amazon Inspector User
        *             Guide</a>.</p>
        */
    export class Inspector extends InspectorClient {
            /**
                * <p>Assigns attributes (key and value pairs) to the findings that are specified by the
                *          ARNs of the findings.</p>
                */
            addAttributesToFindings(args: AddAttributesToFindingsCommandInput, options?: __HttpHandlerOptions): Promise<AddAttributesToFindingsCommandOutput>;
            addAttributesToFindings(args: AddAttributesToFindingsCommandInput, cb: (err: any, data?: AddAttributesToFindingsCommandOutput) => void): void;
            addAttributesToFindings(args: AddAttributesToFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddAttributesToFindingsCommandOutput) => void): void;
            /**
                * <p>Creates a new assessment target using the ARN of the resource group that is generated
                *          by <a>CreateResourceGroup</a>. If resourceGroupArn is not specified, all EC2
                *          instances in the current AWS account and region are included in the assessment target. If
                *          the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isnâ€™t already registered, this action also creates and
                *          registers a service-linked role to grant Amazon Inspector access to AWS Services needed to
                *          perform security assessments. You can create up to 50 assessment targets per AWS account.
                *          You can run up to 500 concurrent agents per AWS account. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">
                *             Amazon Inspector Assessment Targets</a>.</p>
                */
            createAssessmentTarget(args: CreateAssessmentTargetCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssessmentTargetCommandOutput>;
            createAssessmentTarget(args: CreateAssessmentTargetCommandInput, cb: (err: any, data?: CreateAssessmentTargetCommandOutput) => void): void;
            createAssessmentTarget(args: CreateAssessmentTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssessmentTargetCommandOutput) => void): void;
            /**
                * <p>Creates an assessment template for the assessment target that is specified by the ARN
                *          of the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isnâ€™t already registered, this action also creates and
                *          registers a service-linked role to grant Amazon Inspector access to AWS Services needed to
                *          perform security assessments.</p>
                */
            createAssessmentTemplate(args: CreateAssessmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssessmentTemplateCommandOutput>;
            createAssessmentTemplate(args: CreateAssessmentTemplateCommandInput, cb: (err: any, data?: CreateAssessmentTemplateCommandOutput) => void): void;
            createAssessmentTemplate(args: CreateAssessmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssessmentTemplateCommandOutput) => void): void;
            /**
                * <p>Starts the generation of an exclusions preview for the specified assessment template.
                *          The exclusions preview lists the potential exclusions (ExclusionPreview) that Inspector can
                *          detect before it runs the assessment. </p>
                */
            createExclusionsPreview(args: CreateExclusionsPreviewCommandInput, options?: __HttpHandlerOptions): Promise<CreateExclusionsPreviewCommandOutput>;
            createExclusionsPreview(args: CreateExclusionsPreviewCommandInput, cb: (err: any, data?: CreateExclusionsPreviewCommandOutput) => void): void;
            createExclusionsPreview(args: CreateExclusionsPreviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateExclusionsPreviewCommandOutput) => void): void;
            /**
                * <p>Creates a resource group using the specified set of tags (key and value pairs) that
                *          are used to select the EC2 instances to be included in an Amazon Inspector assessment
                *          target. The created resource group is then used to create an Amazon Inspector assessment
                *          target. For more information, see <a>CreateAssessmentTarget</a>.</p>
                */
            createResourceGroup(args: CreateResourceGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateResourceGroupCommandOutput>;
            createResourceGroup(args: CreateResourceGroupCommandInput, cb: (err: any, data?: CreateResourceGroupCommandOutput) => void): void;
            createResourceGroup(args: CreateResourceGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateResourceGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the assessment run that is specified by the ARN of the assessment
                *          run.</p>
                */
            deleteAssessmentRun(args: DeleteAssessmentRunCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssessmentRunCommandOutput>;
            deleteAssessmentRun(args: DeleteAssessmentRunCommandInput, cb: (err: any, data?: DeleteAssessmentRunCommandOutput) => void): void;
            deleteAssessmentRun(args: DeleteAssessmentRunCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssessmentRunCommandOutput) => void): void;
            /**
                * <p>Deletes the assessment target that is specified by the ARN of the assessment
                *          target.</p>
                */
            deleteAssessmentTarget(args: DeleteAssessmentTargetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssessmentTargetCommandOutput>;
            deleteAssessmentTarget(args: DeleteAssessmentTargetCommandInput, cb: (err: any, data?: DeleteAssessmentTargetCommandOutput) => void): void;
            deleteAssessmentTarget(args: DeleteAssessmentTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssessmentTargetCommandOutput) => void): void;
            /**
                * <p>Deletes the assessment template that is specified by the ARN of the assessment
                *          template.</p>
                */
            deleteAssessmentTemplate(args: DeleteAssessmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssessmentTemplateCommandOutput>;
            deleteAssessmentTemplate(args: DeleteAssessmentTemplateCommandInput, cb: (err: any, data?: DeleteAssessmentTemplateCommandOutput) => void): void;
            deleteAssessmentTemplate(args: DeleteAssessmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssessmentTemplateCommandOutput) => void): void;
            /**
                * <p>Describes the assessment runs that are specified by the ARNs of the assessment
                *          runs.</p>
                */
            describeAssessmentRuns(args: DescribeAssessmentRunsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssessmentRunsCommandOutput>;
            describeAssessmentRuns(args: DescribeAssessmentRunsCommandInput, cb: (err: any, data?: DescribeAssessmentRunsCommandOutput) => void): void;
            describeAssessmentRuns(args: DescribeAssessmentRunsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssessmentRunsCommandOutput) => void): void;
            /**
                * <p>Describes the assessment targets that are specified by the ARNs of the assessment
                *          targets.</p>
                */
            describeAssessmentTargets(args: DescribeAssessmentTargetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssessmentTargetsCommandOutput>;
            describeAssessmentTargets(args: DescribeAssessmentTargetsCommandInput, cb: (err: any, data?: DescribeAssessmentTargetsCommandOutput) => void): void;
            describeAssessmentTargets(args: DescribeAssessmentTargetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssessmentTargetsCommandOutput) => void): void;
            /**
                * <p>Describes the assessment templates that are specified by the ARNs of the assessment
                *          templates.</p>
                */
            describeAssessmentTemplates(args: DescribeAssessmentTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssessmentTemplatesCommandOutput>;
            describeAssessmentTemplates(args: DescribeAssessmentTemplatesCommandInput, cb: (err: any, data?: DescribeAssessmentTemplatesCommandOutput) => void): void;
            describeAssessmentTemplates(args: DescribeAssessmentTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssessmentTemplatesCommandOutput) => void): void;
            /**
                * <p>Describes the IAM role that enables Amazon Inspector to access your AWS
                *          account.</p>
                */
            describeCrossAccountAccessRole(args: DescribeCrossAccountAccessRoleCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCrossAccountAccessRoleCommandOutput>;
            describeCrossAccountAccessRole(args: DescribeCrossAccountAccessRoleCommandInput, cb: (err: any, data?: DescribeCrossAccountAccessRoleCommandOutput) => void): void;
            describeCrossAccountAccessRole(args: DescribeCrossAccountAccessRoleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCrossAccountAccessRoleCommandOutput) => void): void;
            /**
                * <p>Describes the exclusions that are specified by the exclusions' ARNs.</p>
                */
            describeExclusions(args: DescribeExclusionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeExclusionsCommandOutput>;
            describeExclusions(args: DescribeExclusionsCommandInput, cb: (err: any, data?: DescribeExclusionsCommandOutput) => void): void;
            describeExclusions(args: DescribeExclusionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeExclusionsCommandOutput) => void): void;
            /**
                * <p>Describes the findings that are specified by the ARNs of the findings.</p>
                */
            describeFindings(args: DescribeFindingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFindingsCommandOutput>;
            describeFindings(args: DescribeFindingsCommandInput, cb: (err: any, data?: DescribeFindingsCommandOutput) => void): void;
            describeFindings(args: DescribeFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFindingsCommandOutput) => void): void;
            /**
                * <p>Describes the resource groups that are specified by the ARNs of the resource
                *          groups.</p>
                */
            describeResourceGroups(args: DescribeResourceGroupsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeResourceGroupsCommandOutput>;
            describeResourceGroups(args: DescribeResourceGroupsCommandInput, cb: (err: any, data?: DescribeResourceGroupsCommandOutput) => void): void;
            describeResourceGroups(args: DescribeResourceGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeResourceGroupsCommandOutput) => void): void;
            /**
                * <p>Describes the rules packages that are specified by the ARNs of the rules
                *          packages.</p>
                */
            describeRulesPackages(args: DescribeRulesPackagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRulesPackagesCommandOutput>;
            describeRulesPackages(args: DescribeRulesPackagesCommandInput, cb: (err: any, data?: DescribeRulesPackagesCommandOutput) => void): void;
            describeRulesPackages(args: DescribeRulesPackagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRulesPackagesCommandOutput) => void): void;
            /**
                * <p>Produces an assessment report that includes detailed and comprehensive results of a
                *          specified assessment run. </p>
                */
            getAssessmentReport(args: GetAssessmentReportCommandInput, options?: __HttpHandlerOptions): Promise<GetAssessmentReportCommandOutput>;
            getAssessmentReport(args: GetAssessmentReportCommandInput, cb: (err: any, data?: GetAssessmentReportCommandOutput) => void): void;
            getAssessmentReport(args: GetAssessmentReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssessmentReportCommandOutput) => void): void;
            /**
                * <p>Retrieves the exclusions preview (a list of ExclusionPreview objects) specified by
                *          the preview token. You can obtain the preview token by running the CreateExclusionsPreview
                *          API.</p>
                */
            getExclusionsPreview(args: GetExclusionsPreviewCommandInput, options?: __HttpHandlerOptions): Promise<GetExclusionsPreviewCommandOutput>;
            getExclusionsPreview(args: GetExclusionsPreviewCommandInput, cb: (err: any, data?: GetExclusionsPreviewCommandOutput) => void): void;
            getExclusionsPreview(args: GetExclusionsPreviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetExclusionsPreviewCommandOutput) => void): void;
            /**
                * <p>Information about the data that is collected for the specified assessment
                *          run.</p>
                */
            getTelemetryMetadata(args: GetTelemetryMetadataCommandInput, options?: __HttpHandlerOptions): Promise<GetTelemetryMetadataCommandOutput>;
            getTelemetryMetadata(args: GetTelemetryMetadataCommandInput, cb: (err: any, data?: GetTelemetryMetadataCommandOutput) => void): void;
            getTelemetryMetadata(args: GetTelemetryMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTelemetryMetadataCommandOutput) => void): void;
            /**
                * <p>Lists the agents of the assessment runs that are specified by the ARNs of the
                *          assessment runs.</p>
                */
            listAssessmentRunAgents(args: ListAssessmentRunAgentsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssessmentRunAgentsCommandOutput>;
            listAssessmentRunAgents(args: ListAssessmentRunAgentsCommandInput, cb: (err: any, data?: ListAssessmentRunAgentsCommandOutput) => void): void;
            listAssessmentRunAgents(args: ListAssessmentRunAgentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssessmentRunAgentsCommandOutput) => void): void;
            /**
                * <p>Lists the assessment runs that correspond to the assessment templates that are
                *          specified by the ARNs of the assessment templates.</p>
                */
            listAssessmentRuns(args: ListAssessmentRunsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssessmentRunsCommandOutput>;
            listAssessmentRuns(args: ListAssessmentRunsCommandInput, cb: (err: any, data?: ListAssessmentRunsCommandOutput) => void): void;
            listAssessmentRuns(args: ListAssessmentRunsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssessmentRunsCommandOutput) => void): void;
            /**
                * <p>Lists the ARNs of the assessment targets within this AWS account. For more
                *          information about assessment targets, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment
                *             Targets</a>.</p>
                */
            listAssessmentTargets(args: ListAssessmentTargetsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssessmentTargetsCommandOutput>;
            listAssessmentTargets(args: ListAssessmentTargetsCommandInput, cb: (err: any, data?: ListAssessmentTargetsCommandOutput) => void): void;
            listAssessmentTargets(args: ListAssessmentTargetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssessmentTargetsCommandOutput) => void): void;
            /**
                * <p>Lists the assessment templates that correspond to the assessment targets that are
                *          specified by the ARNs of the assessment targets.</p>
                */
            listAssessmentTemplates(args: ListAssessmentTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListAssessmentTemplatesCommandOutput>;
            listAssessmentTemplates(args: ListAssessmentTemplatesCommandInput, cb: (err: any, data?: ListAssessmentTemplatesCommandOutput) => void): void;
            listAssessmentTemplates(args: ListAssessmentTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssessmentTemplatesCommandOutput) => void): void;
            /**
                * <p>Lists all the event subscriptions for the assessment template that is specified by
                *          the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.</p>
                */
            listEventSubscriptions(args: ListEventSubscriptionsCommandInput, options?: __HttpHandlerOptions): Promise<ListEventSubscriptionsCommandOutput>;
            listEventSubscriptions(args: ListEventSubscriptionsCommandInput, cb: (err: any, data?: ListEventSubscriptionsCommandOutput) => void): void;
            listEventSubscriptions(args: ListEventSubscriptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEventSubscriptionsCommandOutput) => void): void;
            /**
                * <p>List exclusions that are generated by the assessment run.</p>
                */
            listExclusions(args: ListExclusionsCommandInput, options?: __HttpHandlerOptions): Promise<ListExclusionsCommandOutput>;
            listExclusions(args: ListExclusionsCommandInput, cb: (err: any, data?: ListExclusionsCommandOutput) => void): void;
            listExclusions(args: ListExclusionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExclusionsCommandOutput) => void): void;
            /**
                * <p>Lists findings that are generated by the assessment runs that are specified by the
                *          ARNs of the assessment runs.</p>
                */
            listFindings(args: ListFindingsCommandInput, options?: __HttpHandlerOptions): Promise<ListFindingsCommandOutput>;
            listFindings(args: ListFindingsCommandInput, cb: (err: any, data?: ListFindingsCommandOutput) => void): void;
            listFindings(args: ListFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFindingsCommandOutput) => void): void;
            /**
                * <p>Lists all available Amazon Inspector rules packages.</p>
                */
            listRulesPackages(args: ListRulesPackagesCommandInput, options?: __HttpHandlerOptions): Promise<ListRulesPackagesCommandOutput>;
            listRulesPackages(args: ListRulesPackagesCommandInput, cb: (err: any, data?: ListRulesPackagesCommandOutput) => void): void;
            listRulesPackages(args: ListRulesPackagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRulesPackagesCommandOutput) => void): void;
            /**
                * <p>Lists all tags associated with an assessment template.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Previews the agents installed on the EC2 instances that are part of the specified
                *          assessment target.</p>
                */
            previewAgents(args: PreviewAgentsCommandInput, options?: __HttpHandlerOptions): Promise<PreviewAgentsCommandOutput>;
            previewAgents(args: PreviewAgentsCommandInput, cb: (err: any, data?: PreviewAgentsCommandOutput) => void): void;
            previewAgents(args: PreviewAgentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PreviewAgentsCommandOutput) => void): void;
            /**
                * <p>Registers the IAM role that grants Amazon Inspector access to AWS Services needed to
                *          perform security assessments.</p>
                */
            registerCrossAccountAccessRole(args: RegisterCrossAccountAccessRoleCommandInput, options?: __HttpHandlerOptions): Promise<RegisterCrossAccountAccessRoleCommandOutput>;
            registerCrossAccountAccessRole(args: RegisterCrossAccountAccessRoleCommandInput, cb: (err: any, data?: RegisterCrossAccountAccessRoleCommandOutput) => void): void;
            registerCrossAccountAccessRole(args: RegisterCrossAccountAccessRoleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterCrossAccountAccessRoleCommandOutput) => void): void;
            /**
                * <p>Removes entire attributes (key and value pairs) from the findings that are specified
                *          by the ARNs of the findings where an attribute with the specified key exists.</p>
                */
            removeAttributesFromFindings(args: RemoveAttributesFromFindingsCommandInput, options?: __HttpHandlerOptions): Promise<RemoveAttributesFromFindingsCommandOutput>;
            removeAttributesFromFindings(args: RemoveAttributesFromFindingsCommandInput, cb: (err: any, data?: RemoveAttributesFromFindingsCommandOutput) => void): void;
            removeAttributesFromFindings(args: RemoveAttributesFromFindingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveAttributesFromFindingsCommandOutput) => void): void;
            /**
                * <p>Sets tags (key and value pairs) to the assessment template that is specified by the
                *          ARN of the assessment template.</p>
                */
            setTagsForResource(args: SetTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<SetTagsForResourceCommandOutput>;
            setTagsForResource(args: SetTagsForResourceCommandInput, cb: (err: any, data?: SetTagsForResourceCommandOutput) => void): void;
            setTagsForResource(args: SetTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Starts the assessment run specified by the ARN of the assessment template. For this
                *          API to function properly, you must not exceed the limit of running up to 500 concurrent
                *          agents per AWS account.</p>
                */
            startAssessmentRun(args: StartAssessmentRunCommandInput, options?: __HttpHandlerOptions): Promise<StartAssessmentRunCommandOutput>;
            startAssessmentRun(args: StartAssessmentRunCommandInput, cb: (err: any, data?: StartAssessmentRunCommandOutput) => void): void;
            startAssessmentRun(args: StartAssessmentRunCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartAssessmentRunCommandOutput) => void): void;
            /**
                * <p>Stops the assessment run that is specified by the ARN of the assessment
                *          run.</p>
                */
            stopAssessmentRun(args: StopAssessmentRunCommandInput, options?: __HttpHandlerOptions): Promise<StopAssessmentRunCommandOutput>;
            stopAssessmentRun(args: StopAssessmentRunCommandInput, cb: (err: any, data?: StopAssessmentRunCommandOutput) => void): void;
            stopAssessmentRun(args: StopAssessmentRunCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopAssessmentRunCommandOutput) => void): void;
            /**
                * <p>Enables the process of sending Amazon Simple Notification Service (SNS) notifications
                *          about a specified event to a specified SNS topic.</p>
                */
            subscribeToEvent(args: SubscribeToEventCommandInput, options?: __HttpHandlerOptions): Promise<SubscribeToEventCommandOutput>;
            subscribeToEvent(args: SubscribeToEventCommandInput, cb: (err: any, data?: SubscribeToEventCommandOutput) => void): void;
            subscribeToEvent(args: SubscribeToEventCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SubscribeToEventCommandOutput) => void): void;
            /**
                * <p>Disables the process of sending Amazon Simple Notification Service (SNS)
                *          notifications about a specified event to a specified SNS topic.</p>
                */
            unsubscribeFromEvent(args: UnsubscribeFromEventCommandInput, options?: __HttpHandlerOptions): Promise<UnsubscribeFromEventCommandOutput>;
            unsubscribeFromEvent(args: UnsubscribeFromEventCommandInput, cb: (err: any, data?: UnsubscribeFromEventCommandOutput) => void): void;
            unsubscribeFromEvent(args: UnsubscribeFromEventCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UnsubscribeFromEventCommandOutput) => void): void;
            /**
                * <p>Updates the assessment target that is specified by the ARN of the assessment
                *          target.</p>
                *          <p>If resourceGroupArn is not specified, all EC2 instances in the current AWS account
                *          and region are included in the assessment target.</p>
                */
            updateAssessmentTarget(args: UpdateAssessmentTargetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAssessmentTargetCommandOutput>;
            updateAssessmentTarget(args: UpdateAssessmentTargetCommandInput, cb: (err: any, data?: UpdateAssessmentTargetCommandOutput) => void): void;
            updateAssessmentTarget(args: UpdateAssessmentTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAssessmentTargetCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/AddAttributesToFindingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { AddAttributesToFindingsRequest, AddAttributesToFindingsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface AddAttributesToFindingsCommandInput extends AddAttributesToFindingsRequest {
    }
    export interface AddAttributesToFindingsCommandOutput extends AddAttributesToFindingsResponse, __MetadataBearer {
    }
    /**
        * <p>Assigns attributes (key and value pairs) to the findings that are specified by the
        *          ARNs of the findings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, AddAttributesToFindingsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, AddAttributesToFindingsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new AddAttributesToFindingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddAttributesToFindingsCommandInput} for command's `input` shape.
        * @see {@link AddAttributesToFindingsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class AddAttributesToFindingsCommand extends $Command<AddAttributesToFindingsCommandInput, AddAttributesToFindingsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: AddAttributesToFindingsCommandInput;
            constructor(input: AddAttributesToFindingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddAttributesToFindingsCommandInput, AddAttributesToFindingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTargetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { CreateAssessmentTargetRequest, CreateAssessmentTargetResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface CreateAssessmentTargetCommandInput extends CreateAssessmentTargetRequest {
    }
    export interface CreateAssessmentTargetCommandOutput extends CreateAssessmentTargetResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new assessment target using the ARN of the resource group that is generated
        *          by <a>CreateResourceGroup</a>. If resourceGroupArn is not specified, all EC2
        *          instances in the current AWS account and region are included in the assessment target. If
        *          the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isnâ€™t already registered, this action also creates and
        *          registers a service-linked role to grant Amazon Inspector access to AWS Services needed to
        *          perform security assessments. You can create up to 50 assessment targets per AWS account.
        *          You can run up to 500 concurrent agents per AWS account. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">
        *             Amazon Inspector Assessment Targets</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, CreateAssessmentTargetCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, CreateAssessmentTargetCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new CreateAssessmentTargetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAssessmentTargetCommandInput} for command's `input` shape.
        * @see {@link CreateAssessmentTargetCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class CreateAssessmentTargetCommand extends $Command<CreateAssessmentTargetCommandInput, CreateAssessmentTargetCommandOutput, InspectorClientResolvedConfig> {
            readonly input: CreateAssessmentTargetCommandInput;
            constructor(input: CreateAssessmentTargetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAssessmentTargetCommandInput, CreateAssessmentTargetCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { CreateAssessmentTemplateRequest, CreateAssessmentTemplateResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface CreateAssessmentTemplateCommandInput extends CreateAssessmentTemplateRequest {
    }
    export interface CreateAssessmentTemplateCommandOutput extends CreateAssessmentTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an assessment template for the assessment target that is specified by the ARN
        *          of the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isnâ€™t already registered, this action also creates and
        *          registers a service-linked role to grant Amazon Inspector access to AWS Services needed to
        *          perform security assessments.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, CreateAssessmentTemplateCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, CreateAssessmentTemplateCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new CreateAssessmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAssessmentTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateAssessmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class CreateAssessmentTemplateCommand extends $Command<CreateAssessmentTemplateCommandInput, CreateAssessmentTemplateCommandOutput, InspectorClientResolvedConfig> {
            readonly input: CreateAssessmentTemplateCommandInput;
            constructor(input: CreateAssessmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAssessmentTemplateCommandInput, CreateAssessmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateExclusionsPreviewCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { CreateExclusionsPreviewRequest, CreateExclusionsPreviewResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface CreateExclusionsPreviewCommandInput extends CreateExclusionsPreviewRequest {
    }
    export interface CreateExclusionsPreviewCommandOutput extends CreateExclusionsPreviewResponse, __MetadataBearer {
    }
    /**
        * <p>Starts the generation of an exclusions preview for the specified assessment template.
        *          The exclusions preview lists the potential exclusions (ExclusionPreview) that Inspector can
        *          detect before it runs the assessment. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, CreateExclusionsPreviewCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, CreateExclusionsPreviewCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new CreateExclusionsPreviewCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateExclusionsPreviewCommandInput} for command's `input` shape.
        * @see {@link CreateExclusionsPreviewCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class CreateExclusionsPreviewCommand extends $Command<CreateExclusionsPreviewCommandInput, CreateExclusionsPreviewCommandOutput, InspectorClientResolvedConfig> {
            readonly input: CreateExclusionsPreviewCommandInput;
            constructor(input: CreateExclusionsPreviewCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateExclusionsPreviewCommandInput, CreateExclusionsPreviewCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateResourceGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { CreateResourceGroupRequest, CreateResourceGroupResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface CreateResourceGroupCommandInput extends CreateResourceGroupRequest {
    }
    export interface CreateResourceGroupCommandOutput extends CreateResourceGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a resource group using the specified set of tags (key and value pairs) that
        *          are used to select the EC2 instances to be included in an Amazon Inspector assessment
        *          target. The created resource group is then used to create an Amazon Inspector assessment
        *          target. For more information, see <a>CreateAssessmentTarget</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, CreateResourceGroupCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, CreateResourceGroupCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new CreateResourceGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateResourceGroupCommandInput} for command's `input` shape.
        * @see {@link CreateResourceGroupCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class CreateResourceGroupCommand extends $Command<CreateResourceGroupCommandInput, CreateResourceGroupCommandOutput, InspectorClientResolvedConfig> {
            readonly input: CreateResourceGroupCommandInput;
            constructor(input: CreateResourceGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateResourceGroupCommandInput, CreateResourceGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentRunCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DeleteAssessmentRunRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DeleteAssessmentRunCommandInput extends DeleteAssessmentRunRequest {
    }
    export interface DeleteAssessmentRunCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the assessment run that is specified by the ARN of the assessment
        *          run.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DeleteAssessmentRunCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DeleteAssessmentRunCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DeleteAssessmentRunCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssessmentRunCommandInput} for command's `input` shape.
        * @see {@link DeleteAssessmentRunCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DeleteAssessmentRunCommand extends $Command<DeleteAssessmentRunCommandInput, DeleteAssessmentRunCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DeleteAssessmentRunCommandInput;
            constructor(input: DeleteAssessmentRunCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssessmentRunCommandInput, DeleteAssessmentRunCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTargetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DeleteAssessmentTargetRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DeleteAssessmentTargetCommandInput extends DeleteAssessmentTargetRequest {
    }
    export interface DeleteAssessmentTargetCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the assessment target that is specified by the ARN of the assessment
        *          target.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DeleteAssessmentTargetCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DeleteAssessmentTargetCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DeleteAssessmentTargetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssessmentTargetCommandInput} for command's `input` shape.
        * @see {@link DeleteAssessmentTargetCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DeleteAssessmentTargetCommand extends $Command<DeleteAssessmentTargetCommandInput, DeleteAssessmentTargetCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DeleteAssessmentTargetCommandInput;
            constructor(input: DeleteAssessmentTargetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssessmentTargetCommandInput, DeleteAssessmentTargetCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DeleteAssessmentTemplateRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DeleteAssessmentTemplateCommandInput extends DeleteAssessmentTemplateRequest {
    }
    export interface DeleteAssessmentTemplateCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the assessment template that is specified by the ARN of the assessment
        *          template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DeleteAssessmentTemplateCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DeleteAssessmentTemplateCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DeleteAssessmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssessmentTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteAssessmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DeleteAssessmentTemplateCommand extends $Command<DeleteAssessmentTemplateCommandInput, DeleteAssessmentTemplateCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DeleteAssessmentTemplateCommandInput;
            constructor(input: DeleteAssessmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssessmentTemplateCommandInput, DeleteAssessmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentRunsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeAssessmentRunsRequest, DescribeAssessmentRunsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeAssessmentRunsCommandInput extends DescribeAssessmentRunsRequest {
    }
    export interface DescribeAssessmentRunsCommandOutput extends DescribeAssessmentRunsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the assessment runs that are specified by the ARNs of the assessment
        *          runs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeAssessmentRunsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeAssessmentRunsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeAssessmentRunsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssessmentRunsCommandInput} for command's `input` shape.
        * @see {@link DescribeAssessmentRunsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeAssessmentRunsCommand extends $Command<DescribeAssessmentRunsCommandInput, DescribeAssessmentRunsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeAssessmentRunsCommandInput;
            constructor(input: DescribeAssessmentRunsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssessmentRunsCommandInput, DescribeAssessmentRunsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTargetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeAssessmentTargetsRequest, DescribeAssessmentTargetsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeAssessmentTargetsCommandInput extends DescribeAssessmentTargetsRequest {
    }
    export interface DescribeAssessmentTargetsCommandOutput extends DescribeAssessmentTargetsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the assessment targets that are specified by the ARNs of the assessment
        *          targets.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeAssessmentTargetsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeAssessmentTargetsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeAssessmentTargetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssessmentTargetsCommandInput} for command's `input` shape.
        * @see {@link DescribeAssessmentTargetsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeAssessmentTargetsCommand extends $Command<DescribeAssessmentTargetsCommandInput, DescribeAssessmentTargetsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeAssessmentTargetsCommandInput;
            constructor(input: DescribeAssessmentTargetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssessmentTargetsCommandInput, DescribeAssessmentTargetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeAssessmentTemplatesRequest, DescribeAssessmentTemplatesResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeAssessmentTemplatesCommandInput extends DescribeAssessmentTemplatesRequest {
    }
    export interface DescribeAssessmentTemplatesCommandOutput extends DescribeAssessmentTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the assessment templates that are specified by the ARNs of the assessment
        *          templates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeAssessmentTemplatesCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeAssessmentTemplatesCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeAssessmentTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssessmentTemplatesCommandInput} for command's `input` shape.
        * @see {@link DescribeAssessmentTemplatesCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeAssessmentTemplatesCommand extends $Command<DescribeAssessmentTemplatesCommandInput, DescribeAssessmentTemplatesCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeAssessmentTemplatesCommandInput;
            constructor(input: DescribeAssessmentTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssessmentTemplatesCommandInput, DescribeAssessmentTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeCrossAccountAccessRoleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeCrossAccountAccessRoleResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeCrossAccountAccessRoleCommandInput {
    }
    export interface DescribeCrossAccountAccessRoleCommandOutput extends DescribeCrossAccountAccessRoleResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the IAM role that enables Amazon Inspector to access your AWS
        *          account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeCrossAccountAccessRoleCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeCrossAccountAccessRoleCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeCrossAccountAccessRoleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCrossAccountAccessRoleCommandInput} for command's `input` shape.
        * @see {@link DescribeCrossAccountAccessRoleCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeCrossAccountAccessRoleCommand extends $Command<DescribeCrossAccountAccessRoleCommandInput, DescribeCrossAccountAccessRoleCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeCrossAccountAccessRoleCommandInput;
            constructor(input: DescribeCrossAccountAccessRoleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCrossAccountAccessRoleCommandInput, DescribeCrossAccountAccessRoleCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeExclusionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeExclusionsRequest, DescribeExclusionsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeExclusionsCommandInput extends DescribeExclusionsRequest {
    }
    export interface DescribeExclusionsCommandOutput extends DescribeExclusionsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the exclusions that are specified by the exclusions' ARNs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeExclusionsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeExclusionsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeExclusionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeExclusionsCommandInput} for command's `input` shape.
        * @see {@link DescribeExclusionsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeExclusionsCommand extends $Command<DescribeExclusionsCommandInput, DescribeExclusionsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeExclusionsCommandInput;
            constructor(input: DescribeExclusionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeExclusionsCommandInput, DescribeExclusionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeFindingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeFindingsRequest, DescribeFindingsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeFindingsCommandInput extends DescribeFindingsRequest {
    }
    export interface DescribeFindingsCommandOutput extends DescribeFindingsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the findings that are specified by the ARNs of the findings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeFindingsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeFindingsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeFindingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFindingsCommandInput} for command's `input` shape.
        * @see {@link DescribeFindingsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeFindingsCommand extends $Command<DescribeFindingsCommandInput, DescribeFindingsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeFindingsCommandInput;
            constructor(input: DescribeFindingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFindingsCommandInput, DescribeFindingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeResourceGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeResourceGroupsRequest, DescribeResourceGroupsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeResourceGroupsCommandInput extends DescribeResourceGroupsRequest {
    }
    export interface DescribeResourceGroupsCommandOutput extends DescribeResourceGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the resource groups that are specified by the ARNs of the resource
        *          groups.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeResourceGroupsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeResourceGroupsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeResourceGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeResourceGroupsCommandInput} for command's `input` shape.
        * @see {@link DescribeResourceGroupsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeResourceGroupsCommand extends $Command<DescribeResourceGroupsCommandInput, DescribeResourceGroupsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeResourceGroupsCommandInput;
            constructor(input: DescribeResourceGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeResourceGroupsCommandInput, DescribeResourceGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeRulesPackagesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { DescribeRulesPackagesRequest, DescribeRulesPackagesResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface DescribeRulesPackagesCommandInput extends DescribeRulesPackagesRequest {
    }
    export interface DescribeRulesPackagesCommandOutput extends DescribeRulesPackagesResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the rules packages that are specified by the ARNs of the rules
        *          packages.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, DescribeRulesPackagesCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, DescribeRulesPackagesCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new DescribeRulesPackagesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeRulesPackagesCommandInput} for command's `input` shape.
        * @see {@link DescribeRulesPackagesCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class DescribeRulesPackagesCommand extends $Command<DescribeRulesPackagesCommandInput, DescribeRulesPackagesCommandOutput, InspectorClientResolvedConfig> {
            readonly input: DescribeRulesPackagesCommandInput;
            constructor(input: DescribeRulesPackagesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeRulesPackagesCommandInput, DescribeRulesPackagesCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetAssessmentReportCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { GetAssessmentReportRequest, GetAssessmentReportResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface GetAssessmentReportCommandInput extends GetAssessmentReportRequest {
    }
    export interface GetAssessmentReportCommandOutput extends GetAssessmentReportResponse, __MetadataBearer {
    }
    /**
        * <p>Produces an assessment report that includes detailed and comprehensive results of a
        *          specified assessment run. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, GetAssessmentReportCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, GetAssessmentReportCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new GetAssessmentReportCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAssessmentReportCommandInput} for command's `input` shape.
        * @see {@link GetAssessmentReportCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class GetAssessmentReportCommand extends $Command<GetAssessmentReportCommandInput, GetAssessmentReportCommandOutput, InspectorClientResolvedConfig> {
            readonly input: GetAssessmentReportCommandInput;
            constructor(input: GetAssessmentReportCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAssessmentReportCommandInput, GetAssessmentReportCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetExclusionsPreviewCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { GetExclusionsPreviewRequest, GetExclusionsPreviewResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface GetExclusionsPreviewCommandInput extends GetExclusionsPreviewRequest {
    }
    export interface GetExclusionsPreviewCommandOutput extends GetExclusionsPreviewResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the exclusions preview (a list of ExclusionPreview objects) specified by
        *          the preview token. You can obtain the preview token by running the CreateExclusionsPreview
        *          API.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, GetExclusionsPreviewCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, GetExclusionsPreviewCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new GetExclusionsPreviewCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetExclusionsPreviewCommandInput} for command's `input` shape.
        * @see {@link GetExclusionsPreviewCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class GetExclusionsPreviewCommand extends $Command<GetExclusionsPreviewCommandInput, GetExclusionsPreviewCommandOutput, InspectorClientResolvedConfig> {
            readonly input: GetExclusionsPreviewCommandInput;
            constructor(input: GetExclusionsPreviewCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetExclusionsPreviewCommandInput, GetExclusionsPreviewCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetTelemetryMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { GetTelemetryMetadataRequest, GetTelemetryMetadataResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface GetTelemetryMetadataCommandInput extends GetTelemetryMetadataRequest {
    }
    export interface GetTelemetryMetadataCommandOutput extends GetTelemetryMetadataResponse, __MetadataBearer {
    }
    /**
        * <p>Information about the data that is collected for the specified assessment
        *          run.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, GetTelemetryMetadataCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, GetTelemetryMetadataCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new GetTelemetryMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTelemetryMetadataCommandInput} for command's `input` shape.
        * @see {@link GetTelemetryMetadataCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class GetTelemetryMetadataCommand extends $Command<GetTelemetryMetadataCommandInput, GetTelemetryMetadataCommandOutput, InspectorClientResolvedConfig> {
            readonly input: GetTelemetryMetadataCommandInput;
            constructor(input: GetTelemetryMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTelemetryMetadataCommandInput, GetTelemetryMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunAgentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListAssessmentRunAgentsRequest, ListAssessmentRunAgentsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListAssessmentRunAgentsCommandInput extends ListAssessmentRunAgentsRequest {
    }
    export interface ListAssessmentRunAgentsCommandOutput extends ListAssessmentRunAgentsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the agents of the assessment runs that are specified by the ARNs of the
        *          assessment runs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListAssessmentRunAgentsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListAssessmentRunAgentsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListAssessmentRunAgentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssessmentRunAgentsCommandInput} for command's `input` shape.
        * @see {@link ListAssessmentRunAgentsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListAssessmentRunAgentsCommand extends $Command<ListAssessmentRunAgentsCommandInput, ListAssessmentRunAgentsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListAssessmentRunAgentsCommandInput;
            constructor(input: ListAssessmentRunAgentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssessmentRunAgentsCommandInput, ListAssessmentRunAgentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListAssessmentRunsRequest, ListAssessmentRunsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListAssessmentRunsCommandInput extends ListAssessmentRunsRequest {
    }
    export interface ListAssessmentRunsCommandOutput extends ListAssessmentRunsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the assessment runs that correspond to the assessment templates that are
        *          specified by the ARNs of the assessment templates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListAssessmentRunsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListAssessmentRunsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListAssessmentRunsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssessmentRunsCommandInput} for command's `input` shape.
        * @see {@link ListAssessmentRunsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListAssessmentRunsCommand extends $Command<ListAssessmentRunsCommandInput, ListAssessmentRunsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListAssessmentRunsCommandInput;
            constructor(input: ListAssessmentRunsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssessmentRunsCommandInput, ListAssessmentRunsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTargetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListAssessmentTargetsRequest, ListAssessmentTargetsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListAssessmentTargetsCommandInput extends ListAssessmentTargetsRequest {
    }
    export interface ListAssessmentTargetsCommandOutput extends ListAssessmentTargetsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the ARNs of the assessment targets within this AWS account. For more
        *          information about assessment targets, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment
        *             Targets</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListAssessmentTargetsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListAssessmentTargetsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListAssessmentTargetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssessmentTargetsCommandInput} for command's `input` shape.
        * @see {@link ListAssessmentTargetsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListAssessmentTargetsCommand extends $Command<ListAssessmentTargetsCommandInput, ListAssessmentTargetsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListAssessmentTargetsCommandInput;
            constructor(input: ListAssessmentTargetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssessmentTargetsCommandInput, ListAssessmentTargetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListAssessmentTemplatesRequest, ListAssessmentTemplatesResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListAssessmentTemplatesCommandInput extends ListAssessmentTemplatesRequest {
    }
    export interface ListAssessmentTemplatesCommandOutput extends ListAssessmentTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the assessment templates that correspond to the assessment targets that are
        *          specified by the ARNs of the assessment targets.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListAssessmentTemplatesCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListAssessmentTemplatesCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListAssessmentTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssessmentTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListAssessmentTemplatesCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListAssessmentTemplatesCommand extends $Command<ListAssessmentTemplatesCommandInput, ListAssessmentTemplatesCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListAssessmentTemplatesCommandInput;
            constructor(input: ListAssessmentTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssessmentTemplatesCommandInput, ListAssessmentTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListEventSubscriptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListEventSubscriptionsRequest, ListEventSubscriptionsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListEventSubscriptionsCommandInput extends ListEventSubscriptionsRequest {
    }
    export interface ListEventSubscriptionsCommandOutput extends ListEventSubscriptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the event subscriptions for the assessment template that is specified by
        *          the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListEventSubscriptionsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListEventSubscriptionsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListEventSubscriptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEventSubscriptionsCommandInput} for command's `input` shape.
        * @see {@link ListEventSubscriptionsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListEventSubscriptionsCommand extends $Command<ListEventSubscriptionsCommandInput, ListEventSubscriptionsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListEventSubscriptionsCommandInput;
            constructor(input: ListEventSubscriptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEventSubscriptionsCommandInput, ListEventSubscriptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListExclusionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListExclusionsRequest, ListExclusionsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListExclusionsCommandInput extends ListExclusionsRequest {
    }
    export interface ListExclusionsCommandOutput extends ListExclusionsResponse, __MetadataBearer {
    }
    /**
        * <p>List exclusions that are generated by the assessment run.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListExclusionsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListExclusionsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListExclusionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListExclusionsCommandInput} for command's `input` shape.
        * @see {@link ListExclusionsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListExclusionsCommand extends $Command<ListExclusionsCommandInput, ListExclusionsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListExclusionsCommandInput;
            constructor(input: ListExclusionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListExclusionsCommandInput, ListExclusionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListFindingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListFindingsRequest, ListFindingsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListFindingsCommandInput extends ListFindingsRequest {
    }
    export interface ListFindingsCommandOutput extends ListFindingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists findings that are generated by the assessment runs that are specified by the
        *          ARNs of the assessment runs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListFindingsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListFindingsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListFindingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFindingsCommandInput} for command's `input` shape.
        * @see {@link ListFindingsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListFindingsCommand extends $Command<ListFindingsCommandInput, ListFindingsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListFindingsCommandInput;
            constructor(input: ListFindingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFindingsCommandInput, ListFindingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListRulesPackagesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListRulesPackagesRequest, ListRulesPackagesResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListRulesPackagesCommandInput extends ListRulesPackagesRequest {
    }
    export interface ListRulesPackagesCommandOutput extends ListRulesPackagesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all available Amazon Inspector rules packages.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListRulesPackagesCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListRulesPackagesCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListRulesPackagesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRulesPackagesCommandInput} for command's `input` shape.
        * @see {@link ListRulesPackagesCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListRulesPackagesCommand extends $Command<ListRulesPackagesCommandInput, ListRulesPackagesCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListRulesPackagesCommandInput;
            constructor(input: ListRulesPackagesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRulesPackagesCommandInput, ListRulesPackagesCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all tags associated with an assessment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, ListTagsForResourceCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, ListTagsForResourceCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, InspectorClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/PreviewAgentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { PreviewAgentsRequest, PreviewAgentsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface PreviewAgentsCommandInput extends PreviewAgentsRequest {
    }
    export interface PreviewAgentsCommandOutput extends PreviewAgentsResponse, __MetadataBearer {
    }
    /**
        * <p>Previews the agents installed on the EC2 instances that are part of the specified
        *          assessment target.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, PreviewAgentsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, PreviewAgentsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new PreviewAgentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PreviewAgentsCommandInput} for command's `input` shape.
        * @see {@link PreviewAgentsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class PreviewAgentsCommand extends $Command<PreviewAgentsCommandInput, PreviewAgentsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: PreviewAgentsCommandInput;
            constructor(input: PreviewAgentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PreviewAgentsCommandInput, PreviewAgentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RegisterCrossAccountAccessRoleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { RegisterCrossAccountAccessRoleRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface RegisterCrossAccountAccessRoleCommandInput extends RegisterCrossAccountAccessRoleRequest {
    }
    export interface RegisterCrossAccountAccessRoleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Registers the IAM role that grants Amazon Inspector access to AWS Services needed to
        *          perform security assessments.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, RegisterCrossAccountAccessRoleCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, RegisterCrossAccountAccessRoleCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new RegisterCrossAccountAccessRoleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterCrossAccountAccessRoleCommandInput} for command's `input` shape.
        * @see {@link RegisterCrossAccountAccessRoleCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class RegisterCrossAccountAccessRoleCommand extends $Command<RegisterCrossAccountAccessRoleCommandInput, RegisterCrossAccountAccessRoleCommandOutput, InspectorClientResolvedConfig> {
            readonly input: RegisterCrossAccountAccessRoleCommandInput;
            constructor(input: RegisterCrossAccountAccessRoleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterCrossAccountAccessRoleCommandInput, RegisterCrossAccountAccessRoleCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RemoveAttributesFromFindingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { RemoveAttributesFromFindingsRequest, RemoveAttributesFromFindingsResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface RemoveAttributesFromFindingsCommandInput extends RemoveAttributesFromFindingsRequest {
    }
    export interface RemoveAttributesFromFindingsCommandOutput extends RemoveAttributesFromFindingsResponse, __MetadataBearer {
    }
    /**
        * <p>Removes entire attributes (key and value pairs) from the findings that are specified
        *          by the ARNs of the findings where an attribute with the specified key exists.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, RemoveAttributesFromFindingsCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, RemoveAttributesFromFindingsCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new RemoveAttributesFromFindingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveAttributesFromFindingsCommandInput} for command's `input` shape.
        * @see {@link RemoveAttributesFromFindingsCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class RemoveAttributesFromFindingsCommand extends $Command<RemoveAttributesFromFindingsCommandInput, RemoveAttributesFromFindingsCommandOutput, InspectorClientResolvedConfig> {
            readonly input: RemoveAttributesFromFindingsCommandInput;
            constructor(input: RemoveAttributesFromFindingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveAttributesFromFindingsCommandInput, RemoveAttributesFromFindingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SetTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { SetTagsForResourceRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface SetTagsForResourceCommandInput extends SetTagsForResourceRequest {
    }
    export interface SetTagsForResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Sets tags (key and value pairs) to the assessment template that is specified by the
        *          ARN of the assessment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, SetTagsForResourceCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, SetTagsForResourceCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new SetTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SetTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link SetTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class SetTagsForResourceCommand extends $Command<SetTagsForResourceCommandInput, SetTagsForResourceCommandOutput, InspectorClientResolvedConfig> {
            readonly input: SetTagsForResourceCommandInput;
            constructor(input: SetTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetTagsForResourceCommandInput, SetTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StartAssessmentRunCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { StartAssessmentRunRequest, StartAssessmentRunResponse } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface StartAssessmentRunCommandInput extends StartAssessmentRunRequest {
    }
    export interface StartAssessmentRunCommandOutput extends StartAssessmentRunResponse, __MetadataBearer {
    }
    /**
        * <p>Starts the assessment run specified by the ARN of the assessment template. For this
        *          API to function properly, you must not exceed the limit of running up to 500 concurrent
        *          agents per AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, StartAssessmentRunCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, StartAssessmentRunCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new StartAssessmentRunCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartAssessmentRunCommandInput} for command's `input` shape.
        * @see {@link StartAssessmentRunCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class StartAssessmentRunCommand extends $Command<StartAssessmentRunCommandInput, StartAssessmentRunCommandOutput, InspectorClientResolvedConfig> {
            readonly input: StartAssessmentRunCommandInput;
            constructor(input: StartAssessmentRunCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartAssessmentRunCommandInput, StartAssessmentRunCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StopAssessmentRunCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { StopAssessmentRunRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface StopAssessmentRunCommandInput extends StopAssessmentRunRequest {
    }
    export interface StopAssessmentRunCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Stops the assessment run that is specified by the ARN of the assessment
        *          run.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, StopAssessmentRunCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, StopAssessmentRunCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new StopAssessmentRunCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopAssessmentRunCommandInput} for command's `input` shape.
        * @see {@link StopAssessmentRunCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class StopAssessmentRunCommand extends $Command<StopAssessmentRunCommandInput, StopAssessmentRunCommandOutput, InspectorClientResolvedConfig> {
            readonly input: StopAssessmentRunCommandInput;
            constructor(input: StopAssessmentRunCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopAssessmentRunCommandInput, StopAssessmentRunCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SubscribeToEventCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { SubscribeToEventRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface SubscribeToEventCommandInput extends SubscribeToEventRequest {
    }
    export interface SubscribeToEventCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Enables the process of sending Amazon Simple Notification Service (SNS) notifications
        *          about a specified event to a specified SNS topic.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, SubscribeToEventCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, SubscribeToEventCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new SubscribeToEventCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SubscribeToEventCommandInput} for command's `input` shape.
        * @see {@link SubscribeToEventCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class SubscribeToEventCommand extends $Command<SubscribeToEventCommandInput, SubscribeToEventCommandOutput, InspectorClientResolvedConfig> {
            readonly input: SubscribeToEventCommandInput;
            constructor(input: SubscribeToEventCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SubscribeToEventCommandInput, SubscribeToEventCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UnsubscribeFromEventCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { UnsubscribeFromEventRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface UnsubscribeFromEventCommandInput extends UnsubscribeFromEventRequest {
    }
    export interface UnsubscribeFromEventCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disables the process of sending Amazon Simple Notification Service (SNS)
        *          notifications about a specified event to a specified SNS topic.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, UnsubscribeFromEventCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, UnsubscribeFromEventCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new UnsubscribeFromEventCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UnsubscribeFromEventCommandInput} for command's `input` shape.
        * @see {@link UnsubscribeFromEventCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class UnsubscribeFromEventCommand extends $Command<UnsubscribeFromEventCommandInput, UnsubscribeFromEventCommandOutput, InspectorClientResolvedConfig> {
            readonly input: UnsubscribeFromEventCommandInput;
            constructor(input: UnsubscribeFromEventCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UnsubscribeFromEventCommandInput, UnsubscribeFromEventCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UpdateAssessmentTargetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InspectorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient";
    import { UpdateAssessmentTargetRequest } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0";
    export interface UpdateAssessmentTargetCommandInput extends UpdateAssessmentTargetRequest {
    }
    export interface UpdateAssessmentTargetCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the assessment target that is specified by the ARN of the assessment
        *          target.</p>
        *          <p>If resourceGroupArn is not specified, all EC2 instances in the current AWS account
        *          and region are included in the assessment target.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { InspectorClient, UpdateAssessmentTargetCommand } from "@aws-sdk/client-inspector"; // ES Modules import
        * // const { InspectorClient, UpdateAssessmentTargetCommand } = require("@aws-sdk/client-inspector"); // CommonJS import
        * const client = new InspectorClient(config);
        * const command = new UpdateAssessmentTargetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAssessmentTargetCommandInput} for command's `input` shape.
        * @see {@link UpdateAssessmentTargetCommandOutput} for command's `response` shape.
        * @see {@link InspectorClientResolvedConfig | config} for InspectorClient's `config` shape.
        *
        */
    export class UpdateAssessmentTargetCommand extends $Command<UpdateAssessmentTargetCommandInput, UpdateAssessmentTargetCommandOutput, InspectorClientResolvedConfig> {
            readonly input: UpdateAssessmentTargetCommandInput;
            constructor(input: UpdateAssessmentTargetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: InspectorClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAssessmentTargetCommandInput, UpdateAssessmentTargetCommandOutput>;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/InspectorClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AddAttributesToFindingsCommandInput, AddAttributesToFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/AddAttributesToFindingsCommand";
    import { CreateAssessmentTargetCommandInput, CreateAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTargetCommand";
    import { CreateAssessmentTemplateCommandInput, CreateAssessmentTemplateCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateAssessmentTemplateCommand";
    import { CreateExclusionsPreviewCommandInput, CreateExclusionsPreviewCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateExclusionsPreviewCommand";
    import { CreateResourceGroupCommandInput, CreateResourceGroupCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/CreateResourceGroupCommand";
    import { DeleteAssessmentRunCommandInput, DeleteAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentRunCommand";
    import { DeleteAssessmentTargetCommandInput, DeleteAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTargetCommand";
    import { DeleteAssessmentTemplateCommandInput, DeleteAssessmentTemplateCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DeleteAssessmentTemplateCommand";
    import { DescribeAssessmentRunsCommandInput, DescribeAssessmentRunsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentRunsCommand";
    import { DescribeAssessmentTargetsCommandInput, DescribeAssessmentTargetsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTargetsCommand";
    import { DescribeAssessmentTemplatesCommandInput, DescribeAssessmentTemplatesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeAssessmentTemplatesCommand";
    import { DescribeCrossAccountAccessRoleCommandInput, DescribeCrossAccountAccessRoleCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeCrossAccountAccessRoleCommand";
    import { DescribeExclusionsCommandInput, DescribeExclusionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeExclusionsCommand";
    import { DescribeFindingsCommandInput, DescribeFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeFindingsCommand";
    import { DescribeResourceGroupsCommandInput, DescribeResourceGroupsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeResourceGroupsCommand";
    import { DescribeRulesPackagesCommandInput, DescribeRulesPackagesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/DescribeRulesPackagesCommand";
    import { GetAssessmentReportCommandInput, GetAssessmentReportCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetAssessmentReportCommand";
    import { GetExclusionsPreviewCommandInput, GetExclusionsPreviewCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetExclusionsPreviewCommand";
    import { GetTelemetryMetadataCommandInput, GetTelemetryMetadataCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/GetTelemetryMetadataCommand";
    import { ListAssessmentRunAgentsCommandInput, ListAssessmentRunAgentsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunAgentsCommand";
    import { ListAssessmentRunsCommandInput, ListAssessmentRunsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentRunsCommand";
    import { ListAssessmentTargetsCommandInput, ListAssessmentTargetsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTargetsCommand";
    import { ListAssessmentTemplatesCommandInput, ListAssessmentTemplatesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListAssessmentTemplatesCommand";
    import { ListEventSubscriptionsCommandInput, ListEventSubscriptionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListEventSubscriptionsCommand";
    import { ListExclusionsCommandInput, ListExclusionsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListExclusionsCommand";
    import { ListFindingsCommandInput, ListFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListFindingsCommand";
    import { ListRulesPackagesCommandInput, ListRulesPackagesCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListRulesPackagesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/ListTagsForResourceCommand";
    import { PreviewAgentsCommandInput, PreviewAgentsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/PreviewAgentsCommand";
    import { RegisterCrossAccountAccessRoleCommandInput, RegisterCrossAccountAccessRoleCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RegisterCrossAccountAccessRoleCommand";
    import { RemoveAttributesFromFindingsCommandInput, RemoveAttributesFromFindingsCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/RemoveAttributesFromFindingsCommand";
    import { SetTagsForResourceCommandInput, SetTagsForResourceCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SetTagsForResourceCommand";
    import { StartAssessmentRunCommandInput, StartAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StartAssessmentRunCommand";
    import { StopAssessmentRunCommandInput, StopAssessmentRunCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/StopAssessmentRunCommand";
    import { SubscribeToEventCommandInput, SubscribeToEventCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/SubscribeToEventCommand";
    import { UnsubscribeFromEventCommandInput, UnsubscribeFromEventCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UnsubscribeFromEventCommand";
    import { UpdateAssessmentTargetCommandInput, UpdateAssessmentTargetCommandOutput } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/commands/UpdateAssessmentTargetCommand";
    export type ServiceInputTypes = AddAttributesToFindingsCommandInput | CreateAssessmentTargetCommandInput | CreateAssessmentTemplateCommandInput | CreateExclusionsPreviewCommandInput | CreateResourceGroupCommandInput | DeleteAssessmentRunCommandInput | DeleteAssessmentTargetCommandInput | DeleteAssessmentTemplateCommandInput | DescribeAssessmentRunsCommandInput | DescribeAssessmentTargetsCommandInput | DescribeAssessmentTemplatesCommandInput | DescribeCrossAccountAccessRoleCommandInput | DescribeExclusionsCommandInput | DescribeFindingsCommandInput | DescribeResourceGroupsCommandInput | DescribeRulesPackagesCommandInput | GetAssessmentReportCommandInput | GetExclusionsPreviewCommandInput | GetTelemetryMetadataCommandInput | ListAssessmentRunAgentsCommandInput | ListAssessmentRunsCommandInput | ListAssessmentTargetsCommandInput | ListAssessmentTemplatesCommandInput | ListEventSubscriptionsCommandInput | ListExclusionsCommandInput | ListFindingsCommandInput | ListRulesPackagesCommandInput | ListTagsForResourceCommandInput | PreviewAgentsCommandInput | RegisterCrossAccountAccessRoleCommandInput | RemoveAttributesFromFindingsCommandInput | SetTagsForResourceCommandInput | StartAssessmentRunCommandInput | StopAssessmentRunCommandInput | SubscribeToEventCommandInput | UnsubscribeFromEventCommandInput | UpdateAssessmentTargetCommandInput;
    export type ServiceOutputTypes = AddAttributesToFindingsCommandOutput | CreateAssessmentTargetCommandOutput | CreateAssessmentTemplateCommandOutput | CreateExclusionsPreviewCommandOutput | CreateResourceGroupCommandOutput | DeleteAssessmentRunCommandOutput | DeleteAssessmentTargetCommandOutput | DeleteAssessmentTemplateCommandOutput | DescribeAssessmentRunsCommandOutput | DescribeAssessmentTargetsCommandOutput | DescribeAssessmentTemplatesCommandOutput | DescribeCrossAccountAccessRoleCommandOutput | DescribeExclusionsCommandOutput | DescribeFindingsCommandOutput | DescribeResourceGroupsCommandOutput | DescribeRulesPackagesCommandOutput | GetAssessmentReportCommandOutput | GetExclusionsPreviewCommandOutput | GetTelemetryMetadataCommandOutput | ListAssessmentRunAgentsCommandOutput | ListAssessmentRunsCommandOutput | ListAssessmentTargetsCommandOutput | ListAssessmentTemplatesCommandOutput | ListEventSubscriptionsCommandOutput | ListExclusionsCommandOutput | ListFindingsCommandOutput | ListRulesPackagesCommandOutput | ListTagsForResourceCommandOutput | PreviewAgentsCommandOutput | RegisterCrossAccountAccessRoleCommandOutput | RemoveAttributesFromFindingsCommandOutput | SetTagsForResourceCommandOutput | StartAssessmentRunCommandOutput | StopAssessmentRunCommandOutput | SubscribeToEventCommandOutput | UnsubscribeFromEventCommandOutput | UpdateAssessmentTargetCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type InspectorClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of InspectorClient class constructor that set the region, credentials and other options.
        */
    export interface InspectorClientConfig extends InspectorClientConfigType {
    }
    type InspectorClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of InspectorClient class. This is resolved and normalized from the {@link InspectorClientConfig | constructor configuration interface}.
        */
    export interface InspectorClientResolvedConfig extends InspectorClientResolvedConfigType {
    }
    /**
        * <fullname>Amazon Inspector</fullname>
        *          <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to
        *          identify potential security issues. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html"> Amazon Inspector User
        *             Guide</a>.</p>
        */
    export class InspectorClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, InspectorClientResolvedConfig> {
            /**
                * The resolved configuration of InspectorClient class. This is resolved and normalized from the {@link InspectorClientConfig | constructor configuration interface}.
                */
            readonly config: InspectorClientResolvedConfig;
            constructor(configuration: InspectorClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { InspectorServiceException as __BaseException } from "@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/InspectorServiceException";
    export enum AccessDeniedErrorCode {
            ACCESS_DENIED_TO_ASSESSMENT_RUN = "ACCESS_DENIED_TO_ASSESSMENT_RUN",
            ACCESS_DENIED_TO_ASSESSMENT_TARGET = "ACCESS_DENIED_TO_ASSESSMENT_TARGET",
            ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE = "ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE",
            ACCESS_DENIED_TO_FINDING = "ACCESS_DENIED_TO_FINDING",
            ACCESS_DENIED_TO_IAM_ROLE = "ACCESS_DENIED_TO_IAM_ROLE",
            ACCESS_DENIED_TO_RESOURCE_GROUP = "ACCESS_DENIED_TO_RESOURCE_GROUP",
            ACCESS_DENIED_TO_RULES_PACKAGE = "ACCESS_DENIED_TO_RULES_PACKAGE",
            ACCESS_DENIED_TO_SNS_TOPIC = "ACCESS_DENIED_TO_SNS_TOPIC"
    }
    /**
        * <p>You do not have required permissions to access the requested resource.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * <p>Code that indicates the type of error that is generated.</p>
                */
            errorCode: AccessDeniedErrorCode | string | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    /**
        * <p>This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a>
        *          actions.</p>
        */
    export interface Attribute {
            /**
                * <p>The attribute key.</p>
                */
            key: string | undefined;
            /**
                * <p>The value assigned to the attribute key.</p>
                */
            value?: string;
    }
    export namespace Attribute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attribute) => any;
    }
    export interface AddAttributesToFindingsRequest {
            /**
                * <p>The ARNs that specify the findings that you want to assign attributes to.</p>
                */
            findingArns: string[] | undefined;
            /**
                * <p>The array of attributes that you want to assign to specified findings.</p>
                */
            attributes: Attribute[] | undefined;
    }
    export namespace AddAttributesToFindingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddAttributesToFindingsRequest) => any;
    }
    export enum FailedItemErrorCode {
            ACCESS_DENIED = "ACCESS_DENIED",
            DUPLICATE_ARN = "DUPLICATE_ARN",
            INTERNAL_ERROR = "INTERNAL_ERROR",
            INVALID_ARN = "INVALID_ARN",
            ITEM_DOES_NOT_EXIST = "ITEM_DOES_NOT_EXIST",
            LIMIT_EXCEEDED = "LIMIT_EXCEEDED"
    }
    /**
        * <p>Includes details about the failed items.</p>
        */
    export interface FailedItemDetails {
            /**
                * <p>The status code of a failed item.</p>
                */
            failureCode: FailedItemErrorCode | string | undefined;
            /**
                * <p>Indicates whether you can immediately retry a request for this item for a specified
                *          resource.</p>
                */
            retryable: boolean | undefined;
    }
    export namespace FailedItemDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FailedItemDetails) => any;
    }
    export interface AddAttributesToFindingsResponse {
            /**
                * <p>Attribute details that cannot be described. An error code is provided for each failed
                *          item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace AddAttributesToFindingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddAttributesToFindingsResponse) => any;
    }
    /**
        * <p>Internal server error.</p>
        */
    export class InternalException extends __BaseException {
            readonly name: "InternalException";
            readonly $fault: "server";
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalException, __BaseException>);
    }
    export enum InvalidInputErrorCode {
            ASSESSMENT_TARGET_NAME_ALREADY_TAKEN = "ASSESSMENT_TARGET_NAME_ALREADY_TAKEN",
            ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN = "ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN",
            INVALID_AGENT_ID = "INVALID_AGENT_ID",
            INVALID_ASSESSMENT_RUN_ARN = "INVALID_ASSESSMENT_RUN_ARN",
            INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE = "INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE",
            INVALID_ASSESSMENT_RUN_DURATION_RANGE = "INVALID_ASSESSMENT_RUN_DURATION_RANGE",
            INVALID_ASSESSMENT_RUN_START_TIME_RANGE = "INVALID_ASSESSMENT_RUN_START_TIME_RANGE",
            INVALID_ASSESSMENT_RUN_STATE = "INVALID_ASSESSMENT_RUN_STATE",
            INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE = "INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE",
            INVALID_ASSESSMENT_TARGET_ARN = "INVALID_ASSESSMENT_TARGET_ARN",
            INVALID_ASSESSMENT_TARGET_NAME = "INVALID_ASSESSMENT_TARGET_NAME",
            INVALID_ASSESSMENT_TARGET_NAME_PATTERN = "INVALID_ASSESSMENT_TARGET_NAME_PATTERN",
            INVALID_ASSESSMENT_TEMPLATE_ARN = "INVALID_ASSESSMENT_TEMPLATE_ARN",
            INVALID_ASSESSMENT_TEMPLATE_DURATION = "INVALID_ASSESSMENT_TEMPLATE_DURATION",
            INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE = "INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE",
            INVALID_ASSESSMENT_TEMPLATE_NAME = "INVALID_ASSESSMENT_TEMPLATE_NAME",
            INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN = "INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN",
            INVALID_ATTRIBUTE = "INVALID_ATTRIBUTE",
            INVALID_AUTO_SCALING_GROUP = "INVALID_AUTO_SCALING_GROUP",
            INVALID_EVENT = "INVALID_EVENT",
            INVALID_FINDING_ARN = "INVALID_FINDING_ARN",
            INVALID_IAM_ROLE_ARN = "INVALID_IAM_ROLE_ARN",
            INVALID_LOCALE = "INVALID_LOCALE",
            INVALID_MAX_RESULTS = "INVALID_MAX_RESULTS",
            INVALID_NUMBER_OF_AGENT_IDS = "INVALID_NUMBER_OF_AGENT_IDS",
            INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS = "INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS",
            INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES = "INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES",
            INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS = "INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS",
            INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS = "INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS",
            INVALID_NUMBER_OF_ATTRIBUTES = "INVALID_NUMBER_OF_ATTRIBUTES",
            INVALID_NUMBER_OF_AUTO_SCALING_GROUPS = "INVALID_NUMBER_OF_AUTO_SCALING_GROUPS",
            INVALID_NUMBER_OF_FINDING_ARNS = "INVALID_NUMBER_OF_FINDING_ARNS",
            INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS = "INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS",
            INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS = "INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS",
            INVALID_NUMBER_OF_RULES_PACKAGE_ARNS = "INVALID_NUMBER_OF_RULES_PACKAGE_ARNS",
            INVALID_NUMBER_OF_RULE_NAMES = "INVALID_NUMBER_OF_RULE_NAMES",
            INVALID_NUMBER_OF_SEVERITIES = "INVALID_NUMBER_OF_SEVERITIES",
            INVALID_NUMBER_OF_TAGS = "INVALID_NUMBER_OF_TAGS",
            INVALID_NUMBER_OF_USER_ATTRIBUTES = "INVALID_NUMBER_OF_USER_ATTRIBUTES",
            INVALID_PAGINATION_TOKEN = "INVALID_PAGINATION_TOKEN",
            INVALID_RESOURCE_ARN = "INVALID_RESOURCE_ARN",
            INVALID_RESOURCE_GROUP_ARN = "INVALID_RESOURCE_GROUP_ARN",
            INVALID_RESOURCE_GROUP_TAG_KEY = "INVALID_RESOURCE_GROUP_TAG_KEY",
            INVALID_RESOURCE_GROUP_TAG_VALUE = "INVALID_RESOURCE_GROUP_TAG_VALUE",
            INVALID_RULES_PACKAGE_ARN = "INVALID_RULES_PACKAGE_ARN",
            INVALID_RULE_NAME = "INVALID_RULE_NAME",
            INVALID_SEVERITY = "INVALID_SEVERITY",
            INVALID_SNS_TOPIC_ARN = "INVALID_SNS_TOPIC_ARN",
            INVALID_TAG = "INVALID_TAG",
            INVALID_TAG_KEY = "INVALID_TAG_KEY",
            INVALID_TAG_VALUE = "INVALID_TAG_VALUE",
            INVALID_USER_ATTRIBUTE = "INVALID_USER_ATTRIBUTE",
            INVALID_USER_ATTRIBUTE_KEY = "INVALID_USER_ATTRIBUTE_KEY",
            INVALID_USER_ATTRIBUTE_VALUE = "INVALID_USER_ATTRIBUTE_VALUE"
    }
    /**
        * <p>The request was rejected because an invalid or out-of-range value was supplied for an
        *          input parameter.</p>
        */
    export class InvalidInputException extends __BaseException {
            readonly name: "InvalidInputException";
            readonly $fault: "client";
            /**
                * <p>Code that indicates the type of error that is generated.</p>
                */
            errorCode: InvalidInputErrorCode | string | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidInputException, __BaseException>);
    }
    export enum NoSuchEntityErrorCode {
            ASSESSMENT_RUN_DOES_NOT_EXIST = "ASSESSMENT_RUN_DOES_NOT_EXIST",
            ASSESSMENT_TARGET_DOES_NOT_EXIST = "ASSESSMENT_TARGET_DOES_NOT_EXIST",
            ASSESSMENT_TEMPLATE_DOES_NOT_EXIST = "ASSESSMENT_TEMPLATE_DOES_NOT_EXIST",
            FINDING_DOES_NOT_EXIST = "FINDING_DOES_NOT_EXIST",
            IAM_ROLE_DOES_NOT_EXIST = "IAM_ROLE_DOES_NOT_EXIST",
            RESOURCE_GROUP_DOES_NOT_EXIST = "RESOURCE_GROUP_DOES_NOT_EXIST",
            RULES_PACKAGE_DOES_NOT_EXIST = "RULES_PACKAGE_DOES_NOT_EXIST",
            SNS_TOPIC_DOES_NOT_EXIST = "SNS_TOPIC_DOES_NOT_EXIST"
    }
    /**
        * <p>The request was rejected because it referenced an entity that does not exist. The
        *          error code describes the entity.</p>
        */
    export class NoSuchEntityException extends __BaseException {
            readonly name: "NoSuchEntityException";
            readonly $fault: "client";
            /**
                * <p>Code that indicates the type of error that is generated.</p>
                */
            errorCode: NoSuchEntityErrorCode | string | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NoSuchEntityException, __BaseException>);
    }
    /**
        * <p>The serice is temporary unavailable.</p>
        */
    export class ServiceTemporarilyUnavailableException extends __BaseException {
            readonly name: "ServiceTemporarilyUnavailableException";
            readonly $fault: "server";
            /**
                * <p>You can wait and then retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceTemporarilyUnavailableException, __BaseException>);
    }
    /**
        * <p>Used in the exception error that is thrown if you start an assessment run for an
        *          assessment target that includes an EC2 instance that is already participating in another
        *          started assessment run.</p>
        */
    export interface AgentAlreadyRunningAssessment {
            /**
                * <p>ID of the agent that is running on an EC2 instance that is already participating in
                *          another started assessment run.</p>
                */
            agentId: string | undefined;
            /**
                * <p>The ARN of the assessment run that has already been started.</p>
                */
            assessmentRunArn: string | undefined;
    }
    export namespace AgentAlreadyRunningAssessment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentAlreadyRunningAssessment) => any;
    }
    export enum AgentHealthCode {
            IDLE = "IDLE",
            RUNNING = "RUNNING",
            SHUTDOWN = "SHUTDOWN",
            THROTTLED = "THROTTLED",
            UNHEALTHY = "UNHEALTHY",
            UNKNOWN = "UNKNOWN"
    }
    export enum AgentHealth {
            HEALTHY = "HEALTHY",
            UNHEALTHY = "UNHEALTHY",
            UNKNOWN = "UNKNOWN"
    }
    /**
        * <p>Contains information about an Amazon Inspector agent. This data type is used as a
        *          request parameter in the <a>ListAssessmentRunAgents</a> action.</p>
        */
    export interface AgentFilter {
            /**
                * <p>The current health state of the agent. Values can be set to <b>HEALTHY</b> or <b>UNHEALTHY</b>.</p>
                */
            agentHealths: (AgentHealth | string)[] | undefined;
            /**
                * <p>The detailed health state of the agent. Values can be set to <b>IDLE</b>, <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and <b>UNKNOWN</b>. </p>
                */
            agentHealthCodes: (AgentHealthCode | string)[] | undefined;
    }
    export namespace AgentFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentFilter) => any;
    }
    /**
        * <p>Used as a response element in the <a>PreviewAgents</a> action.</p>
        */
    export interface AgentPreview {
            /**
                * <p>The hostname of the EC2 instance on which the Amazon Inspector Agent is
                *          installed.</p>
                */
            hostname?: string;
            /**
                * <p>The ID of the EC2 instance where the agent is installed.</p>
                */
            agentId: string | undefined;
            /**
                * <p>The Auto Scaling group for the EC2 instance where the agent is installed.</p>
                */
            autoScalingGroup?: string;
            /**
                * <p>The health status of the Amazon Inspector Agent.</p>
                */
            agentHealth?: AgentHealth | string;
            /**
                * <p>The version of the Amazon Inspector Agent.</p>
                */
            agentVersion?: string;
            /**
                * <p>The operating system running on the EC2 instance on which the Amazon Inspector Agent
                *          is installed.</p>
                */
            operatingSystem?: string;
            /**
                * <p>The kernel version of the operating system running on the EC2 instance on which the
                *          Amazon Inspector Agent is installed.</p>
                */
            kernelVersion?: string;
            /**
                * <p>The IP address of the EC2 instance on which the Amazon Inspector Agent is
                *          installed.</p>
                */
            ipv4Address?: string;
    }
    export namespace AgentPreview {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AgentPreview) => any;
    }
    /**
        * <p>You started an assessment run, but one of the instances is already participating in
        *          another assessment run.</p>
        */
    export class AgentsAlreadyRunningAssessmentException extends __BaseException {
            readonly name: "AgentsAlreadyRunningAssessmentException";
            readonly $fault: "client";
            /**
                * <p></p>
                */
            agents: AgentAlreadyRunningAssessment[] | undefined;
            /**
                * <p></p>
                */
            agentsTruncated: boolean | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AgentsAlreadyRunningAssessmentException, __BaseException>);
    }
    export enum Severity {
            HIGH = "High",
            INFORMATIONAL = "Informational",
            LOW = "Low",
            MEDIUM = "Medium",
            UNDEFINED = "Undefined"
    }
    export enum InspectorEvent {
            ASSESSMENT_RUN_COMPLETED = "ASSESSMENT_RUN_COMPLETED",
            ASSESSMENT_RUN_STARTED = "ASSESSMENT_RUN_STARTED",
            ASSESSMENT_RUN_STATE_CHANGED = "ASSESSMENT_RUN_STATE_CHANGED",
            FINDING_REPORTED = "FINDING_REPORTED",
            OTHER = "OTHER"
    }
    export enum AssessmentRunNotificationSnsStatusCode {
            ACCESS_DENIED = "ACCESS_DENIED",
            INTERNAL_ERROR = "INTERNAL_ERROR",
            SUCCESS = "SUCCESS",
            TOPIC_DOES_NOT_EXIST = "TOPIC_DOES_NOT_EXIST"
    }
    /**
        * <p>Used as one of the elements of the <a>AssessmentRun</a> data
        *          type.</p>
        */
    export interface AssessmentRunNotification {
            /**
                * <p>The date of the notification.</p>
                */
            date: Date | undefined;
            /**
                * <p>The event for which a notification is sent.</p>
                */
            event: InspectorEvent | string | undefined;
            /**
                * <p>The message included in the notification.</p>
                */
            message?: string;
            /**
                * <p>The Boolean value that specifies whether the notification represents an
                *          error.</p>
                */
            error: boolean | undefined;
            /**
                * <p>The SNS topic to which the SNS notification is sent.</p>
                */
            snsTopicArn?: string;
            /**
                * <p>The status code of the SNS notification.</p>
                */
            snsPublishStatusCode?: AssessmentRunNotificationSnsStatusCode | string;
    }
    export namespace AssessmentRunNotification {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentRunNotification) => any;
    }
    export enum AssessmentRunState {
            CANCELED = "CANCELED",
            COLLECTING_DATA = "COLLECTING_DATA",
            COMPLETED = "COMPLETED",
            COMPLETED_WITH_ERRORS = "COMPLETED_WITH_ERRORS",
            CREATED = "CREATED",
            DATA_COLLECTED = "DATA_COLLECTED",
            ERROR = "ERROR",
            EVALUATING_RULES = "EVALUATING_RULES",
            FAILED = "FAILED",
            START_DATA_COLLECTION_IN_PROGRESS = "START_DATA_COLLECTION_IN_PROGRESS",
            START_DATA_COLLECTION_PENDING = "START_DATA_COLLECTION_PENDING",
            START_EVALUATING_RULES_PENDING = "START_EVALUATING_RULES_PENDING",
            STOP_DATA_COLLECTION_PENDING = "STOP_DATA_COLLECTION_PENDING"
    }
    /**
        * <p>Used as one of the elements of the <a>AssessmentRun</a> data
        *          type.</p>
        */
    export interface AssessmentRunStateChange {
            /**
                * <p>The last time the assessment run state changed.</p>
                */
            stateChangedAt: Date | undefined;
            /**
                * <p>The assessment run state.</p>
                */
            state: AssessmentRunState | string | undefined;
    }
    export namespace AssessmentRunStateChange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentRunStateChange) => any;
    }
    /**
        * <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the
        *          assessment run .</p>
        *          <p>Used as the response element in the <a>DescribeAssessmentRuns</a>
        *          action.</p>
        */
    export interface AssessmentRun {
            /**
                * <p>The ARN of the assessment run.</p>
                */
            arn: string | undefined;
            /**
                * <p>The auto-generated name for the assessment run.</p>
                */
            name: string | undefined;
            /**
                * <p>The ARN of the assessment template that is associated with the assessment
                *          run.</p>
                */
            assessmentTemplateArn: string | undefined;
            /**
                * <p>The state of the assessment run.</p>
                */
            state: AssessmentRunState | string | undefined;
            /**
                * <p>The duration of the assessment run.</p>
                */
            durationInSeconds: number | undefined;
            /**
                * <p>The rules packages selected for the assessment run.</p>
                */
            rulesPackageArns: string[] | undefined;
            /**
                * <p>The user-defined attributes that are assigned to every generated finding.</p>
                */
            userAttributesForFindings: Attribute[] | undefined;
            /**
                * <p>The time when <a>StartAssessmentRun</a> was called.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when <a>StartAssessmentRun</a> was called.</p>
                */
            startedAt?: Date;
            /**
                * <p>The assessment run completion time that corresponds to the rules packages evaluation
                *          completion time or failure.</p>
                */
            completedAt?: Date;
            /**
                * <p>The last time when the assessment run's state changed.</p>
                */
            stateChangedAt: Date | undefined;
            /**
                * <p>A Boolean value (true or false) that specifies whether the process of collecting data
                *          from the agents is completed.</p>
                */
            dataCollected: boolean | undefined;
            /**
                * <p>A list of the assessment run state changes.</p>
                */
            stateChanges: AssessmentRunStateChange[] | undefined;
            /**
                * <p>A list of notifications for the event subscriptions. A notification about a
                *          particular generated finding is added to this list only once.</p>
                */
            notifications: AssessmentRunNotification[] | undefined;
            /**
                * <p>Provides a total count of generated findings per severity.</p>
                */
            findingCounts: Record<string, number> | undefined;
    }
    export namespace AssessmentRun {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentRun) => any;
    }
    /**
        * <p>The metadata about the Amazon Inspector application data metrics collected by the
        *          agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action.</p>
        */
    export interface TelemetryMetadata {
            /**
                * <p>A specific type of behavioral data that is collected by the agent.</p>
                */
            messageType: string | undefined;
            /**
                * <p>The count of messages that the agent sends to the Amazon Inspector service.</p>
                */
            count: number | undefined;
            /**
                * <p>The data size of messages that the agent sends to the Amazon Inspector
                *          service.</p>
                */
            dataSize?: number;
    }
    export namespace TelemetryMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TelemetryMetadata) => any;
    }
    /**
        * <p>Contains information about an Amazon Inspector agent. This data type is used as a
        *          response element in the <a>ListAssessmentRunAgents</a> action.</p>
        */
    export interface AssessmentRunAgent {
            /**
                * <p>The AWS account of the EC2 instance where the agent is installed.</p>
                */
            agentId: string | undefined;
            /**
                * <p>The ARN of the assessment run that is associated with the agent.</p>
                */
            assessmentRunArn: string | undefined;
            /**
                * <p>The current health state of the agent.</p>
                */
            agentHealth: AgentHealth | string | undefined;
            /**
                * <p>The detailed health state of the agent.</p>
                */
            agentHealthCode: AgentHealthCode | string | undefined;
            /**
                * <p>The description for the agent health code.</p>
                */
            agentHealthDetails?: string;
            /**
                * <p>The Auto Scaling group of the EC2 instance that is specified by the agent
                *          ID.</p>
                */
            autoScalingGroup?: string;
            /**
                * <p>The Amazon Inspector application data metrics that are collected by the
                *          agent.</p>
                */
            telemetryMetadata: TelemetryMetadata[] | undefined;
    }
    export namespace AssessmentRunAgent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentRunAgent) => any;
    }
    /**
        * <p>This data type is used in the <a>AssessmentRunFilter</a> data
        *          type.</p>
        */
    export interface TimestampRange {
            /**
                * <p>The minimum value of the timestamp range.</p>
                */
            beginDate?: Date;
            /**
                * <p>The maximum value of the timestamp range.</p>
                */
            endDate?: Date;
    }
    export namespace TimestampRange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimestampRange) => any;
    }
    /**
        * <p>This data type is used in the <a>AssessmentTemplateFilter</a> data
        *          type.</p>
        */
    export interface DurationRange {
            /**
                * <p>The minimum value of the duration range. Must be greater than zero.</p>
                */
            minSeconds?: number;
            /**
                * <p>The maximum value of the duration range. Must be less than or equal to 604800 seconds
                *          (1 week).</p>
                */
            maxSeconds?: number;
    }
    export namespace DurationRange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DurationRange) => any;
    }
    /**
        * <p>Used as the request parameter in the <a>ListAssessmentRuns</a>
        *          action.</p>
        */
    export interface AssessmentRunFilter {
            /**
                * <p>For a record to match a filter, an explicit value or a string containing a wildcard
                *          that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a>
                *          data type.</p>
                */
            namePattern?: string;
            /**
                * <p>For a record to match a filter, one of the values specified for this data type
                *          property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data
                *          type.</p>
                */
            states?: (AssessmentRunState | string)[];
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must inclusively match any value between the specified minimum and maximum values
                *          of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type.</p>
                */
            durationRange?: DurationRange;
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data
                *          type.</p>
                */
            rulesPackageArns?: string[];
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must inclusively match any value between the specified minimum and maximum values
                *          of the <b>startTime</b> property of the <a>AssessmentRun</a> data type.</p>
                */
            startTimeRange?: TimestampRange;
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must inclusively match any value between the specified minimum and maximum values
                *          of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type.</p>
                */
            completionTimeRange?: TimestampRange;
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must match the <b>stateChangedAt</b> property of the
                *             <a>AssessmentRun</a> data type.</p>
                */
            stateChangeTimeRange?: TimestampRange;
    }
    export namespace AssessmentRunFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentRunFilter) => any;
    }
    /**
        * <p>You cannot perform a specified action if an assessment run is currently in
        *          progress.</p>
        */
    export class AssessmentRunInProgressException extends __BaseException {
            readonly name: "AssessmentRunInProgressException";
            readonly $fault: "client";
            /**
                * <p>The ARNs of the assessment runs that are currently in progress.</p>
                */
            assessmentRunArns: string[] | undefined;
            /**
                * <p>Boolean value that indicates whether the ARN list of the assessment runs is
                *          truncated.</p>
                */
            assessmentRunArnsTruncated: boolean | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AssessmentRunInProgressException, __BaseException>);
    }
    /**
        * <p>Contains information about an Amazon Inspector application. This data type is used as
        *          the response element in the <a>DescribeAssessmentTargets</a> action.</p>
        */
    export interface AssessmentTarget {
            /**
                * <p>The ARN that specifies the Amazon Inspector assessment target.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the Amazon Inspector assessment target.</p>
                */
            name: string | undefined;
            /**
                * <p>The ARN that specifies the resource group that is associated with the assessment
                *          target.</p>
                */
            resourceGroupArn?: string;
            /**
                * <p>The time at which the assessment target is created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time at which <a>UpdateAssessmentTarget</a> is called.</p>
                */
            updatedAt: Date | undefined;
    }
    export namespace AssessmentTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentTarget) => any;
    }
    /**
        * <p>Used as the request parameter in the <a>ListAssessmentTargets</a>
        *          action.</p>
        */
    export interface AssessmentTargetFilter {
            /**
                * <p>For a record to match a filter, an explicit value or a string that contains a
                *          wildcard that is specified for this data type property must match the value of the
                *             <b>assessmentTargetName</b> property of the <a>AssessmentTarget</a> data type.</p>
                */
            assessmentTargetNamePattern?: string;
    }
    export namespace AssessmentTargetFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentTargetFilter) => any;
    }
    /**
        * <p>Contains information about an Amazon Inspector assessment template. This data type is
        *          used as the response element in the <a>DescribeAssessmentTemplates</a>
        *          action.</p>
        */
    export interface AssessmentTemplate {
            /**
                * <p>The ARN of the assessment template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the assessment template.</p>
                */
            name: string | undefined;
            /**
                * <p>The ARN of the assessment target that corresponds to this assessment
                *          template.</p>
                */
            assessmentTargetArn: string | undefined;
            /**
                * <p>The duration in seconds specified for this assessment template. The default value is
                *          3600 seconds (one hour). The maximum value is 86400 seconds (one day).</p>
                */
            durationInSeconds: number | undefined;
            /**
                * <p>The rules packages that are specified for this assessment template.</p>
                */
            rulesPackageArns: string[] | undefined;
            /**
                * <p>The user-defined attributes that are assigned to every generated finding from the
                *          assessment run that uses this assessment template.</p>
                */
            userAttributesForFindings: Attribute[] | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the most recent assessment run associated with this
                *          assessment template. This value exists only when the value of assessmentRunCount is
                *          greaterpa than zero.</p>
                */
            lastAssessmentRunArn?: string;
            /**
                * <p>The number of existing assessment runs associated with this assessment template. This
                *          value can be zero or a positive integer.</p>
                */
            assessmentRunCount: number | undefined;
            /**
                * <p>The time at which the assessment template is created.</p>
                */
            createdAt: Date | undefined;
    }
    export namespace AssessmentTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentTemplate) => any;
    }
    /**
        * <p>Used as the request parameter in the <a>ListAssessmentTemplates</a>
        *          action.</p>
        */
    export interface AssessmentTemplateFilter {
            /**
                * <p>For a record to match a filter, an explicit value or a string that contains a
                *          wildcard that is specified for this data type property must match the value of the
                *             <b>assessmentTemplateName</b> property of the <a>AssessmentTemplate</a> data type.</p>
                */
            namePattern?: string;
            /**
                * <p>For a record to match a filter, the value specified for this data type property must
                *          inclusively match any value between the specified minimum and maximum values of the
                *             <b>durationInSeconds</b> property of the <a>AssessmentTemplate</a> data type.</p>
                */
            durationRange?: DurationRange;
            /**
                * <p>For a record to match a filter, the values that are specified for this data type
                *          property must be contained in the list of values of the <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data
                *          type.</p>
                */
            rulesPackageArns?: string[];
    }
    export namespace AssessmentTemplateFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssessmentTemplateFilter) => any;
    }
    /**
        * <p>Contains information about a private IP address associated with a network interface. This
        *          data type is used as a response element in the <a>DescribeFindings</a>
        *          action.</p>
        */
    export interface PrivateIp {
            /**
                * <p>The DNS name of the private IP address.</p>
                */
            privateDnsName?: string;
            /**
                * <p>The full IP address of the network inteface.</p>
                */
            privateIpAddress?: string;
    }
    export namespace PrivateIp {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PrivateIp) => any;
    }
    /**
        * <p>Contains information about a security group associated with a network interface. This
        *          data type is used as one of the elements of the <a>NetworkInterface</a> data
        *          type.</p>
        */
    export interface SecurityGroup {
            /**
                * <p>The name of the security group.</p>
                */
            groupName?: string;
            /**
                * <p>The ID of the security group.</p>
                */
            groupId?: string;
    }
    export namespace SecurityGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SecurityGroup) => any;
    }
    /**
        * <p>Contains information about the network interfaces interacting with an EC2 instance.
        *          This data type is used as one of the elements of the <a>AssetAttributes</a> data
        *          type.</p>
        */
    export interface NetworkInterface {
            /**
                * <p>The ID of the network interface.</p>
                */
            networkInterfaceId?: string;
            /**
                * <p>The ID of a subnet associated with the network interface.</p>
                */
            subnetId?: string;
            /**
                * <p>The ID of a VPC associated with the network interface.</p>
                */
            vpcId?: string;
            /**
                * <p>The name of a private DNS associated with the network interface.</p>
                */
            privateDnsName?: string;
            /**
                * <p>The private IP address associated with the network interface.</p>
                */
            privateIpAddress?: string;
            /**
                * <p>A list of the private IP addresses associated with the network interface. Includes
                *          the privateDnsName and privateIpAddress.</p>
                */
            privateIpAddresses?: PrivateIp[];
            /**
                * <p>The name of a public DNS associated with the network interface.</p>
                */
            publicDnsName?: string;
            /**
                * <p>The public IP address from which the network interface is reachable.</p>
                */
            publicIp?: string;
            /**
                * <p>The IP addresses associated with the network interface.</p>
                */
            ipv6Addresses?: string[];
            /**
                * <p>A list of the security groups associated with the network interface. Includes the
                *          groupId and groupName.</p>
                */
            securityGroups?: SecurityGroup[];
    }
    export namespace NetworkInterface {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NetworkInterface) => any;
    }
    /**
        * <p>A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action.</p>
        */
    export interface Tag {
            /**
                * <p>A tag key.</p>
                */
            key: string | undefined;
            /**
                * <p>A value assigned to a tag key.</p>
                */
            value?: string;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    /**
        * <p>A collection of attributes of the host from which the finding is generated.</p>
        */
    export interface AssetAttributes {
            /**
                * <p>The schema version of this data type.</p>
                */
            schemaVersion: number | undefined;
            /**
                * <p>The ID of the agent that is installed on the EC2 instance where the finding is
                *          generated.</p>
                */
            agentId?: string;
            /**
                * <p>The Auto Scaling group of the EC2 instance where the finding is generated.</p>
                */
            autoScalingGroup?: string;
            /**
                * <p>The ID of the Amazon Machine Image (AMI) that is installed on the EC2 instance where
                *          the finding is generated.</p>
                */
            amiId?: string;
            /**
                * <p>The hostname of the EC2 instance where the finding is generated.</p>
                */
            hostname?: string;
            /**
                * <p>The list of IP v4 addresses of the EC2 instance where the finding is
                *          generated.</p>
                */
            ipv4Addresses?: string[];
            /**
                * <p>The tags related to the EC2 instance where the finding is generated.</p>
                */
            tags?: Tag[];
            /**
                * <p>An array of the network interfaces interacting with the EC2 instance where the
                *          finding is generated.</p>
                */
            networkInterfaces?: NetworkInterface[];
    }
    export namespace AssetAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetAttributes) => any;
    }
    export enum AssetType {
            EC2_INSTANCE = "ec2-instance"
    }
    export interface CreateAssessmentTargetRequest {
            /**
                * <p>The user-defined name that identifies the assessment target that you want to create.
                *          The name must be unique within the AWS account.</p>
                */
            assessmentTargetName: string | undefined;
            /**
                * <p>The ARN that specifies the resource group that is used to create the assessment
                *          target. If resourceGroupArn is not specified, all EC2 instances in the current AWS account
                *          and region are included in the assessment target.</p>
                */
            resourceGroupArn?: string;
    }
    export namespace CreateAssessmentTargetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssessmentTargetRequest) => any;
    }
    export interface CreateAssessmentTargetResponse {
            /**
                * <p>The ARN that specifies the assessment target that is created.</p>
                */
            assessmentTargetArn: string | undefined;
    }
    export namespace CreateAssessmentTargetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssessmentTargetResponse) => any;
    }
    export enum InvalidCrossAccountRoleErrorCode {
            ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP = "ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP",
            ROLE_DOES_NOT_HAVE_CORRECT_POLICY = "ROLE_DOES_NOT_HAVE_CORRECT_POLICY"
    }
    /**
        * <p>Amazon Inspector cannot assume the cross-account role that it needs to list your EC2
        *          instances during the assessment run.</p>
        */
    export class InvalidCrossAccountRoleException extends __BaseException {
            readonly name: "InvalidCrossAccountRoleException";
            readonly $fault: "client";
            /**
                * <p>Code that indicates the type of error that is generated.</p>
                */
            errorCode: InvalidCrossAccountRoleErrorCode | string | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidCrossAccountRoleException, __BaseException>);
    }
    export enum LimitExceededErrorCode {
            ASSESSMENT_RUN_LIMIT_EXCEEDED = "ASSESSMENT_RUN_LIMIT_EXCEEDED",
            ASSESSMENT_TARGET_LIMIT_EXCEEDED = "ASSESSMENT_TARGET_LIMIT_EXCEEDED",
            ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED = "ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED",
            EVENT_SUBSCRIPTION_LIMIT_EXCEEDED = "EVENT_SUBSCRIPTION_LIMIT_EXCEEDED",
            RESOURCE_GROUP_LIMIT_EXCEEDED = "RESOURCE_GROUP_LIMIT_EXCEEDED"
    }
    /**
        * <p>The request was rejected because it attempted to create resources beyond the current
        *          AWS account limits. The error code describes the limit exceeded.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * <p>Code that indicates the type of error that is generated.</p>
                */
            errorCode: LimitExceededErrorCode | string | undefined;
            /**
                * <p>You can immediately retry your request.</p>
                */
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    export interface CreateAssessmentTemplateRequest {
            /**
                * <p>The ARN that specifies the assessment target for which you want to create the
                *          assessment template.</p>
                */
            assessmentTargetArn: string | undefined;
            /**
                * <p>The user-defined name that identifies the assessment template that you want to
                *          create. You can create several assessment templates for an assessment target. The names of
                *          the assessment templates that correspond to a particular assessment target must be
                *          unique.</p>
                */
            assessmentTemplateName: string | undefined;
            /**
                * <p>The duration of the assessment run in seconds.</p>
                */
            durationInSeconds: number | undefined;
            /**
                * <p>The ARNs that specify the rules packages that you want to attach to the assessment
                *          template.</p>
                */
            rulesPackageArns: string[] | undefined;
            /**
                * <p>The user-defined attributes that are assigned to every finding that is generated by
                *          the assessment run that uses this assessment template. An attribute is a key and value pair
                *          (an <a>Attribute</a> object). Within an assessment template, each key must be
                *          unique.</p>
                */
            userAttributesForFindings?: Attribute[];
    }
    export namespace CreateAssessmentTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssessmentTemplateRequest) => any;
    }
    export interface CreateAssessmentTemplateResponse {
            /**
                * <p>The ARN that specifies the assessment template that is created.</p>
                */
            assessmentTemplateArn: string | undefined;
    }
    export namespace CreateAssessmentTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssessmentTemplateResponse) => any;
    }
    export interface CreateExclusionsPreviewRequest {
            /**
                * <p>The ARN that specifies the assessment template for which you want to create an
                *          exclusions preview.</p>
                */
            assessmentTemplateArn: string | undefined;
    }
    export namespace CreateExclusionsPreviewRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateExclusionsPreviewRequest) => any;
    }
    export interface CreateExclusionsPreviewResponse {
            /**
                * <p>Specifies the unique identifier of the requested exclusions preview. You can use the
                *          unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview
                *          API.</p>
                */
            previewToken: string | undefined;
    }
    export namespace CreateExclusionsPreviewResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateExclusionsPreviewResponse) => any;
    }
    /**
        * <p>The request is rejected. The specified assessment template is currently generating an
        *          exclusions preview.</p>
        */
    export class PreviewGenerationInProgressException extends __BaseException {
            readonly name: "PreviewGenerationInProgressException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PreviewGenerationInProgressException, __BaseException>);
    }
    /**
        * <p>This data type is used as one of the elements of the <a>ResourceGroup</a>
        *          data type.</p>
        */
    export interface ResourceGroupTag {
            /**
                * <p>A tag key.</p>
                */
            key: string | undefined;
            /**
                * <p>The value assigned to a tag key.</p>
                */
            value?: string;
    }
    export namespace ResourceGroupTag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceGroupTag) => any;
    }
    export interface CreateResourceGroupRequest {
            /**
                * <p>A collection of keys and an array of possible values,
                *          '[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]'.</p>
                *          <p>For example,'[{"key":"Name","values":["TestEC2Instance"]}]'.</p>
                */
            resourceGroupTags: ResourceGroupTag[] | undefined;
    }
    export namespace CreateResourceGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceGroupRequest) => any;
    }
    export interface CreateResourceGroupResponse {
            /**
                * <p>The ARN that specifies the resource group that is created.</p>
                */
            resourceGroupArn: string | undefined;
    }
    export namespace CreateResourceGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceGroupResponse) => any;
    }
    export interface DeleteAssessmentRunRequest {
            /**
                * <p>The ARN that specifies the assessment run that you want to delete.</p>
                */
            assessmentRunArn: string | undefined;
    }
    export namespace DeleteAssessmentRunRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssessmentRunRequest) => any;
    }
    export interface DeleteAssessmentTargetRequest {
            /**
                * <p>The ARN that specifies the assessment target that you want to delete.</p>
                */
            assessmentTargetArn: string | undefined;
    }
    export namespace DeleteAssessmentTargetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssessmentTargetRequest) => any;
    }
    export interface DeleteAssessmentTemplateRequest {
            /**
                * <p>The ARN that specifies the assessment template that you want to delete.</p>
                */
            assessmentTemplateArn: string | undefined;
    }
    export namespace DeleteAssessmentTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssessmentTemplateRequest) => any;
    }
    export interface DescribeAssessmentRunsRequest {
            /**
                * <p>The ARN that specifies the assessment run that you want to describe.</p>
                */
            assessmentRunArns: string[] | undefined;
    }
    export namespace DescribeAssessmentRunsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentRunsRequest) => any;
    }
    export interface DescribeAssessmentRunsResponse {
            /**
                * <p>Information about the assessment run.</p>
                */
            assessmentRuns: AssessmentRun[] | undefined;
            /**
                * <p>Assessment run details that cannot be described. An error code is provided for each
                *          failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeAssessmentRunsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentRunsResponse) => any;
    }
    export interface DescribeAssessmentTargetsRequest {
            /**
                * <p>The ARNs that specifies the assessment targets that you want to describe.</p>
                */
            assessmentTargetArns: string[] | undefined;
    }
    export namespace DescribeAssessmentTargetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentTargetsRequest) => any;
    }
    export interface DescribeAssessmentTargetsResponse {
            /**
                * <p>Information about the assessment targets.</p>
                */
            assessmentTargets: AssessmentTarget[] | undefined;
            /**
                * <p>Assessment target details that cannot be described. An error code is provided for
                *          each failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeAssessmentTargetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentTargetsResponse) => any;
    }
    export interface DescribeAssessmentTemplatesRequest {
            assessmentTemplateArns: string[] | undefined;
    }
    export namespace DescribeAssessmentTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentTemplatesRequest) => any;
    }
    export interface DescribeAssessmentTemplatesResponse {
            /**
                * <p>Information about the assessment templates.</p>
                */
            assessmentTemplates: AssessmentTemplate[] | undefined;
            /**
                * <p>Assessment template details that cannot be described. An error code is provided for
                *          each failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeAssessmentTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssessmentTemplatesResponse) => any;
    }
    export interface DescribeCrossAccountAccessRoleResponse {
            /**
                * <p>The ARN that specifies the IAM role that Amazon Inspector uses to access your AWS
                *          account.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>A Boolean value that specifies whether the IAM role has the necessary policies
                *          attached to enable Amazon Inspector to access your AWS account.</p>
                */
            valid: boolean | undefined;
            /**
                * <p>The date when the cross-account access role was registered.</p>
                */
            registeredAt: Date | undefined;
    }
    export namespace DescribeCrossAccountAccessRoleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCrossAccountAccessRoleResponse) => any;
    }
    export enum Locale {
            EN_US = "EN_US"
    }
    export interface DescribeExclusionsRequest {
            /**
                * <p>The list of ARNs that specify the exclusions that you want to describe.</p>
                */
            exclusionArns: string[] | undefined;
            /**
                * <p>The locale into which you want to translate the exclusion's title, description, and
                *          recommendation.</p>
                */
            locale?: Locale | string;
    }
    export namespace DescribeExclusionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeExclusionsRequest) => any;
    }
    export enum ScopeType {
            INSTANCE_ID = "INSTANCE_ID",
            RULES_PACKAGE_ARN = "RULES_PACKAGE_ARN"
    }
    /**
        * <p>This data type contains key-value pairs that identify various Amazon
        *          resources.</p>
        */
    export interface Scope {
            /**
                * <p>The type of the scope.</p>
                */
            key?: ScopeType | string;
            /**
                * <p>The resource identifier for the specified scope type.</p>
                */
            value?: string;
    }
    export namespace Scope {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Scope) => any;
    }
    /**
        * <p>Contains information about what was excluded from an assessment run.</p>
        */
    export interface Exclusion {
            /**
                * <p>The ARN that specifies the exclusion.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the exclusion.</p>
                */
            title: string | undefined;
            /**
                * <p>The description of the exclusion.</p>
                */
            description: string | undefined;
            /**
                * <p>The recommendation for the exclusion.</p>
                */
            recommendation: string | undefined;
            /**
                * <p>The AWS resources for which the exclusion pertains.</p>
                */
            scopes: Scope[] | undefined;
            /**
                * <p>The system-defined attributes for the exclusion.</p>
                */
            attributes?: Attribute[];
    }
    export namespace Exclusion {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Exclusion) => any;
    }
    export interface DescribeExclusionsResponse {
            /**
                * <p>Information about the exclusions.</p>
                */
            exclusions: Record<string, Exclusion> | undefined;
            /**
                * <p>Exclusion details that cannot be described. An error code is provided for each failed
                *          item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeExclusionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeExclusionsResponse) => any;
    }
    export interface DescribeFindingsRequest {
            /**
                * <p>The ARN that specifies the finding that you want to describe.</p>
                */
            findingArns: string[] | undefined;
            /**
                * <p>The locale into which you want to translate a finding description, recommendation,
                *          and the short description that identifies the finding.</p>
                */
            locale?: Locale | string;
    }
    export namespace DescribeFindingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFindingsRequest) => any;
    }
    /**
        * <p>This data type is used in the <a>Finding</a> data type.</p>
        */
    export interface InspectorServiceAttributes {
            /**
                * <p>The schema version of this data type.</p>
                */
            schemaVersion: number | undefined;
            /**
                * <p>The ARN of the assessment run during which the finding is generated.</p>
                */
            assessmentRunArn?: string;
            /**
                * <p>The ARN of the rules package that is used to generate the finding.</p>
                */
            rulesPackageArn?: string;
    }
    export namespace InspectorServiceAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InspectorServiceAttributes) => any;
    }
    /**
        * <p>Contains information about an Amazon Inspector finding. This data type is used as the
        *          response element in the <a>DescribeFindings</a> action.</p>
        */
    export interface Finding {
            /**
                * <p>The ARN that specifies the finding.</p>
                */
            arn: string | undefined;
            /**
                * <p>The schema version of this data type.</p>
                */
            schemaVersion?: number;
            /**
                * <p>The data element is set to "Inspector".</p>
                */
            service?: string;
            /**
                * <p>This data type is used in the <a>Finding</a> data type.</p>
                */
            serviceAttributes?: InspectorServiceAttributes;
            /**
                * <p>The type of the host from which the finding is generated.</p>
                */
            assetType?: AssetType | string;
            /**
                * <p>A collection of attributes of the host from which the finding is generated.</p>
                */
            assetAttributes?: AssetAttributes;
            /**
                * <p>The ID of the finding.</p>
                */
            id?: string;
            /**
                * <p>The name of the finding.</p>
                */
            title?: string;
            /**
                * <p>The description of the finding.</p>
                */
            description?: string;
            /**
                * <p>The recommendation for the finding.</p>
                */
            recommendation?: string;
            /**
                * <p>The finding severity. Values can be set to High, Medium, Low, and
                *          Informational.</p>
                */
            severity?: Severity | string;
            /**
                * <p>The numeric value of the finding severity.</p>
                */
            numericSeverity?: number;
            /**
                * <p>This data element is currently not used.</p>
                */
            confidence?: number;
            /**
                * <p>This data element is currently not used.</p>
                */
            indicatorOfCompromise?: boolean;
            /**
                * <p>The system-defined attributes for the finding.</p>
                */
            attributes: Attribute[] | undefined;
            /**
                * <p>The user-defined attributes that are assigned to the finding.</p>
                */
            userAttributes: Attribute[] | undefined;
            /**
                * <p>The time when the finding was generated.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when <a>AddAttributesToFindings</a> is called.</p>
                */
            updatedAt: Date | undefined;
    }
    export namespace Finding {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Finding) => any;
    }
    export interface DescribeFindingsResponse {
            /**
                * <p>Information about the finding.</p>
                */
            findings: Finding[] | undefined;
            /**
                * <p>Finding details that cannot be described. An error code is provided for each failed
                *          item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeFindingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFindingsResponse) => any;
    }
    export interface DescribeResourceGroupsRequest {
            /**
                * <p>The ARN that specifies the resource group that you want to describe.</p>
                */
            resourceGroupArns: string[] | undefined;
    }
    export namespace DescribeResourceGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResourceGroupsRequest) => any;
    }
    /**
        * <p>Contains information about a resource group. The resource group defines a set of tags
        *          that, when queried, identify the AWS resources that make up the assessment target. This
        *          data type is used as the response element in the <a>DescribeResourceGroups</a>
        *          action.</p>
        */
    export interface ResourceGroup {
            /**
                * <p>The ARN of the resource group.</p>
                */
            arn: string | undefined;
            /**
                * <p>The tags (key and value pairs) of the resource group. This data type property is used
                *          in the <a>CreateResourceGroup</a> action.</p>
                */
            tags: ResourceGroupTag[] | undefined;
            /**
                * <p>The time at which resource group is created.</p>
                */
            createdAt: Date | undefined;
    }
    export namespace ResourceGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceGroup) => any;
    }
    export interface DescribeResourceGroupsResponse {
            /**
                * <p>Information about a resource group.</p>
                */
            resourceGroups: ResourceGroup[] | undefined;
            /**
                * <p>Resource group details that cannot be described. An error code is provided for each
                *          failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeResourceGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResourceGroupsResponse) => any;
    }
    export interface DescribeRulesPackagesRequest {
            /**
                * <p>The ARN that specifies the rules package that you want to describe.</p>
                */
            rulesPackageArns: string[] | undefined;
            /**
                * <p>The locale that you want to translate a rules package description into.</p>
                */
            locale?: Locale | string;
    }
    export namespace DescribeRulesPackagesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRulesPackagesRequest) => any;
    }
    /**
        * <p>Contains information about an Amazon Inspector rules package. This data type is used
        *          as the response element in the <a>DescribeRulesPackages</a> action.</p>
        */
    export interface RulesPackage {
            /**
                * <p>The ARN of the rules package.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the rules package.</p>
                */
            name: string | undefined;
            /**
                * <p>The version ID of the rules package.</p>
                */
            version: string | undefined;
            /**
                * <p>The provider of the rules package.</p>
                */
            provider: string | undefined;
            /**
                * <p>The description of the rules package.</p>
                */
            description?: string;
    }
    export namespace RulesPackage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RulesPackage) => any;
    }
    export interface DescribeRulesPackagesResponse {
            /**
                * <p>Information about the rules package.</p>
                */
            rulesPackages: RulesPackage[] | undefined;
            /**
                * <p>Rules package details that cannot be described. An error code is provided for each
                *          failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace DescribeRulesPackagesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRulesPackagesResponse) => any;
    }
    /**
        * <p>This data type is used in the <a>Subscription</a> data type.</p>
        */
    export interface EventSubscription {
            /**
                * <p>The event for which Amazon Simple Notification Service (SNS) notifications are
                *          sent.</p>
                */
            event: InspectorEvent | string | undefined;
            /**
                * <p>The time at which <a>SubscribeToEvent</a> is called.</p>
                */
            subscribedAt: Date | undefined;
    }
    export namespace EventSubscription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventSubscription) => any;
    }
    /**
        * <p>Contains information about what is excluded from an assessment run given the current
        *          state of the assessment template.</p>
        */
    export interface ExclusionPreview {
            /**
                * <p>The name of the exclusion preview.</p>
                */
            title: string | undefined;
            /**
                * <p>The description of the exclusion preview.</p>
                */
            description: string | undefined;
            /**
                * <p>The recommendation for the exclusion preview.</p>
                */
            recommendation: string | undefined;
            /**
                * <p>The AWS resources for which the exclusion preview pertains.</p>
                */
            scopes: Scope[] | undefined;
            /**
                * <p>The system-defined attributes for the exclusion preview.</p>
                */
            attributes?: Attribute[];
    }
    export namespace ExclusionPreview {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExclusionPreview) => any;
    }
    /**
        * <p>This data type is used as a request parameter in the <a>ListFindings</a>
        *          action.</p>
        */
    export interface FindingFilter {
            /**
                * <p>For a record to match a filter, one of the values that is specified for this data
                *          type property must be the exact match of the value of the <b>agentId</b> property of the <a>Finding</a> data type.</p>
                */
            agentIds?: string[];
            /**
                * <p>For a record to match a filter, one of the values that is specified for this data
                *          type property must be the exact match of the value of the <b>autoScalingGroup</b> property of the <a>Finding</a> data
                *          type.</p>
                */
            autoScalingGroups?: string[];
            /**
                * <p>For a record to match a filter, one of the values that is specified for this data
                *          type property must be the exact match of the value of the <b>ruleName</b> property of the <a>Finding</a> data type.</p>
                */
            ruleNames?: string[];
            /**
                * <p>For a record to match a filter, one of the values that is specified for this data
                *          type property must be the exact match of the value of the <b>severity</b> property of the <a>Finding</a> data type.</p>
                */
            severities?: (Severity | string)[];
            /**
                * <p>For a record to match a filter, one of the values that is specified for this data
                *          type property must be the exact match of the value of the <b>rulesPackageArn</b> property of the <a>Finding</a> data
                *          type.</p>
                */
            rulesPackageArns?: string[];
            /**
                * <p>For a record to match a filter, the list of values that are specified for this data
                *          type property must be contained in the list of values of the <b>attributes</b> property of the <a>Finding</a> data type.</p>
                */
            attributes?: Attribute[];
            /**
                * <p>For a record to match a filter, the value that is specified for this data type
                *          property must be contained in the list of values of the <b>userAttributes</b> property of the <a>Finding</a> data
                *          type.</p>
                */
            userAttributes?: Attribute[];
            /**
                * <p>The time range during which the finding is generated.</p>
                */
            creationTimeRange?: TimestampRange;
    }
    export namespace FindingFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FindingFilter) => any;
    }
    export enum ReportFileFormat {
            HTML = "HTML",
            PDF = "PDF"
    }
    export enum ReportType {
            FINDING = "FINDING",
            FULL = "FULL"
    }
    export interface GetAssessmentReportRequest {
            /**
                * <p>The ARN that specifies the assessment run for which you want to generate a
                *          report.</p>
                */
            assessmentRunArn: string | undefined;
            /**
                * <p>Specifies the file format (html or pdf) of the assessment report that you want to
                *          generate.</p>
                */
            reportFileFormat: ReportFileFormat | string | undefined;
            /**
                * <p>Specifies the type of the assessment report that you want to generate. There are two
                *          types of assessment reports: a finding report and a full report. For more information, see
                *             <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_reports.html">Assessment Reports</a>. </p>
                */
            reportType: ReportType | string | undefined;
    }
    export namespace GetAssessmentReportRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssessmentReportRequest) => any;
    }
    export enum ReportStatus {
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            WORK_IN_PROGRESS = "WORK_IN_PROGRESS"
    }
    export interface GetAssessmentReportResponse {
            /**
                * <p>Specifies the status of the request to generate an assessment report. </p>
                */
            status: ReportStatus | string | undefined;
            /**
                * <p>Specifies the URL where you can find the generated assessment report. This parameter
                *          is only returned if the report is successfully generated.</p>
                */
            url?: string;
    }
    export namespace GetAssessmentReportResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssessmentReportResponse) => any;
    }
    /**
        * <p>Used by the <a>GetAssessmentReport</a> API. The request was rejected
        *          because you tried to generate a report for an assessment run that existed before reporting
        *          was supported in Amazon Inspector. You can only generate reports for assessment runs that
        *          took place or will take place after generating reports in Amazon Inspector became
        *          available.</p>
        */
    export class UnsupportedFeatureException extends __BaseException {
            readonly name: "UnsupportedFeatureException";
            readonly $fault: "client";
            canRetry: boolean | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnsupportedFeatureException, __BaseException>);
    }
    export interface GetExclusionsPreviewRequest {
            /**
                * <p>The ARN that specifies the assessment template for which the exclusions preview was
                *          requested.</p>
                */
            assessmentTemplateArn: string | undefined;
            /**
                * <p>The unique identifier associated of the exclusions preview.</p>
                */
            previewToken: string | undefined;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the GetExclusionsPreviewRequest action. Subsequent calls to
                *          the action fill nextToken in the request with the value of nextToken from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 100. The maximum value is 500.</p>
                */
            maxResults?: number;
            /**
                * <p>The locale into which you want to translate the exclusion's title, description, and
                *          recommendation.</p>
                */
            locale?: Locale | string;
    }
    export namespace GetExclusionsPreviewRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetExclusionsPreviewRequest) => any;
    }
    export enum PreviewStatus {
            COMPLETED = "COMPLETED",
            WORK_IN_PROGRESS = "WORK_IN_PROGRESS"
    }
    export interface GetExclusionsPreviewResponse {
            /**
                * <p>Specifies the status of the request to generate an exclusions preview.</p>
                */
            previewStatus: PreviewStatus | string | undefined;
            /**
                * <p>Information about the exclusions included in the preview.</p>
                */
            exclusionPreviews?: ExclusionPreview[];
            /**
                * <p>When a response is generated, if there is more data to be listed, this parameters is
                *          present in the response and contains the value to use for the nextToken parameter in a
                *          subsequent pagination request. If there is no more data to be listed, this parameter is set
                *          to null.</p>
                */
            nextToken?: string;
    }
    export namespace GetExclusionsPreviewResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetExclusionsPreviewResponse) => any;
    }
    export interface GetTelemetryMetadataRequest {
            /**
                * <p>The ARN that specifies the assessment run that has the telemetry data that you want
                *          to obtain.</p>
                */
            assessmentRunArn: string | undefined;
    }
    export namespace GetTelemetryMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTelemetryMetadataRequest) => any;
    }
    export interface GetTelemetryMetadataResponse {
            /**
                * <p>Telemetry details.</p>
                */
            telemetryMetadata: TelemetryMetadata[] | undefined;
    }
    export namespace GetTelemetryMetadataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTelemetryMetadataResponse) => any;
    }
    export interface ListAssessmentRunAgentsRequest {
            /**
                * <p>The ARN that specifies the assessment run whose agents you want to list.</p>
                */
            assessmentRunArn: string | undefined;
            /**
                * <p>You can use this parameter to specify a subset of data to be included in the action's
                *          response.</p>
                *          <p>For a record to match a filter, all specified filter attributes must match. When
                *          multiple values are specified for a filter attribute, any of the values can
                *          match.</p>
                */
            filter?: AgentFilter;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListAssessmentRunAgents</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items that you want in
                *          the response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListAssessmentRunAgentsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentRunAgentsRequest) => any;
    }
    export interface ListAssessmentRunAgentsResponse {
            /**
                * <p>A list of ARNs that specifies the agents returned by the action.</p>
                */
            assessmentRunAgents: AssessmentRunAgent[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssessmentRunAgentsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentRunAgentsResponse) => any;
    }
    export interface ListAssessmentRunsRequest {
            /**
                * <p>The ARNs that specify the assessment templates whose assessment runs you want to
                *          list.</p>
                */
            assessmentTemplateArns?: string[];
            /**
                * <p>You can use this parameter to specify a subset of data to be included in the action's
                *          response.</p>
                *          <p>For a record to match a filter, all specified filter attributes must match. When
                *          multiple values are specified for a filter attribute, any of the values can
                *          match.</p>
                */
            filter?: AssessmentRunFilter;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListAssessmentRuns</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items that you want in
                *          the response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListAssessmentRunsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentRunsRequest) => any;
    }
    export interface ListAssessmentRunsResponse {
            /**
                * <p>A list of ARNs that specifies the assessment runs that are returned by the
                *          action.</p>
                */
            assessmentRunArns: string[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssessmentRunsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentRunsResponse) => any;
    }
    export interface ListAssessmentTargetsRequest {
            /**
                * <p>You can use this parameter to specify a subset of data to be included in the action's
                *          response.</p>
                *          <p>For a record to match a filter, all specified filter attributes must match. When
                *          multiple values are specified for a filter attribute, any of the values can
                *          match.</p>
                */
            filter?: AssessmentTargetFilter;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListAssessmentTargets</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListAssessmentTargetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentTargetsRequest) => any;
    }
    export interface ListAssessmentTargetsResponse {
            /**
                * <p>A list of ARNs that specifies the assessment targets that are returned by the
                *          action.</p>
                */
            assessmentTargetArns: string[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssessmentTargetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentTargetsResponse) => any;
    }
    export interface ListAssessmentTemplatesRequest {
            /**
                * <p>A list of ARNs that specifies the assessment targets whose assessment templates you
                *          want to list.</p>
                */
            assessmentTargetArns?: string[];
            /**
                * <p>You can use this parameter to specify a subset of data to be included in the action's
                *          response.</p>
                *          <p>For a record to match a filter, all specified filter attributes must match. When
                *          multiple values are specified for a filter attribute, any of the values can
                *          match.</p>
                */
            filter?: AssessmentTemplateFilter;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListAssessmentTemplates</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListAssessmentTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentTemplatesRequest) => any;
    }
    export interface ListAssessmentTemplatesResponse {
            /**
                * <p>A list of ARNs that specifies the assessment templates returned by the
                *          action.</p>
                */
            assessmentTemplateArns: string[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssessmentTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssessmentTemplatesResponse) => any;
    }
    export interface ListEventSubscriptionsRequest {
            /**
                * <p>The ARN of the assessment template for which you want to list the existing event
                *          subscriptions.</p>
                */
            resourceArn?: string;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListEventSubscriptions</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListEventSubscriptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEventSubscriptionsRequest) => any;
    }
    /**
        * <p>This data type is used as a response element in the <a>ListEventSubscriptions</a> action.</p>
        */
    export interface Subscription {
            /**
                * <p>The ARN of the assessment template that is used during the event for which the SNS
                *          notification is sent.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The ARN of the Amazon Simple Notification Service (SNS) topic to which the SNS
                *          notifications are sent.</p>
                */
            topicArn: string | undefined;
            /**
                * <p>The list of existing event subscriptions.</p>
                */
            eventSubscriptions: EventSubscription[] | undefined;
    }
    export namespace Subscription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Subscription) => any;
    }
    export interface ListEventSubscriptionsResponse {
            /**
                * <p>Details of the returned event subscriptions.</p>
                */
            subscriptions: Subscription[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListEventSubscriptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEventSubscriptionsResponse) => any;
    }
    export interface ListExclusionsRequest {
            /**
                * <p>The ARN of the assessment run that generated the exclusions that you want to
                *          list.</p>
                */
            assessmentRunArn: string | undefined;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the ListExclusionsRequest action. Subsequent calls to the
                *          action fill nextToken in the request with the value of nextToken from the previous response
                *          to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 100. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListExclusionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListExclusionsRequest) => any;
    }
    export interface ListExclusionsResponse {
            /**
                * <p>A list of exclusions' ARNs returned by the action.</p>
                */
            exclusionArns: string[] | undefined;
            /**
                * <p>When a response is generated, if there is more data to be listed, this parameters is
                *          present in the response and contains the value to use for the nextToken parameter in a
                *          subsequent pagination request. If there is no more data to be listed, this parameter is set
                *          to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListExclusionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListExclusionsResponse) => any;
    }
    export interface ListFindingsRequest {
            /**
                * <p>The ARNs of the assessment runs that generate the findings that you want to
                *          list.</p>
                */
            assessmentRunArns?: string[];
            /**
                * <p>You can use this parameter to specify a subset of data to be included in the action's
                *          response.</p>
                *          <p>For a record to match a filter, all specified filter attributes must match. When
                *          multiple values are specified for a filter attribute, any of the values can
                *          match.</p>
                */
            filter?: FindingFilter;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListFindings</b> action.
                *          Subsequent calls to the action fill <b>nextToken</b> in the
                *          request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListFindingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFindingsRequest) => any;
    }
    export interface ListFindingsResponse {
            /**
                * <p>A list of ARNs that specifies the findings returned by the action.</p>
                */
            findingArns: string[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListFindingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFindingsResponse) => any;
    }
    export interface ListRulesPackagesRequest {
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>ListRulesPackages</b>
                *          action. Subsequent calls to the action fill <b>nextToken</b> in
                *          the request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace ListRulesPackagesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesPackagesRequest) => any;
    }
    export interface ListRulesPackagesResponse {
            /**
                * <p>The list of ARNs that specifies the rules packages returned by the action.</p>
                */
            rulesPackageArns: string[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace ListRulesPackagesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesPackagesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The ARN that specifies the assessment template whose tags you want to list.</p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>A collection of key and value pairs.</p>
                */
            tags: Tag[] | undefined;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface PreviewAgentsRequest {
            /**
                * <p>The ARN of the assessment target whose agents you want to preview.</p>
                */
            previewAgentsArn: string | undefined;
            /**
                * <p>You can use this parameter when paginating results. Set the value of this parameter
                *          to null on your first call to the <b>PreviewAgents</b> action.
                *          Subsequent calls to the action fill <b>nextToken</b> in the
                *          request with the value of <b>NextToken</b> from the previous
                *          response to continue listing data.</p>
                */
            nextToken?: string;
            /**
                * <p>You can use this parameter to indicate the maximum number of items you want in the
                *          response. The default value is 10. The maximum value is 500.</p>
                */
            maxResults?: number;
    }
    export namespace PreviewAgentsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PreviewAgentsRequest) => any;
    }
    export interface PreviewAgentsResponse {
            /**
                * <p>The resulting list of agents.</p>
                */
            agentPreviews: AgentPreview[] | undefined;
            /**
                * <p> When a response is generated, if there is more data to be listed, this parameter is
                *          present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more
                *          data to be listed, this parameter is set to null.</p>
                */
            nextToken?: string;
    }
    export namespace PreviewAgentsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PreviewAgentsResponse) => any;
    }
    export interface RegisterCrossAccountAccessRoleRequest {
            /**
                * <p>The ARN of the IAM role that grants Amazon Inspector access to AWS Services needed to
                *          perform security assessments. </p>
                */
            roleArn: string | undefined;
    }
    export namespace RegisterCrossAccountAccessRoleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterCrossAccountAccessRoleRequest) => any;
    }
    export interface RemoveAttributesFromFindingsRequest {
            /**
                * <p>The ARNs that specify the findings that you want to remove attributes from.</p>
                */
            findingArns: string[] | undefined;
            /**
                * <p>The array of attribute keys that you want to remove from specified
                *          findings.</p>
                */
            attributeKeys: string[] | undefined;
    }
    export namespace RemoveAttributesFromFindingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveAttributesFromFindingsRequest) => any;
    }
    export interface RemoveAttributesFromFindingsResponse {
            /**
                * <p>Attributes details that cannot be described. An error code is provided for each
                *          failed item.</p>
                */
            failedItems: Record<string, FailedItemDetails> | undefined;
    }
    export namespace RemoveAttributesFromFindingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveAttributesFromFindingsResponse) => any;
    }
    export interface SetTagsForResourceRequest {
            /**
                * <p>The ARN of the assessment template that you want to set tags to.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A collection of key and value pairs that you want to set to the assessment
                *          template.</p>
                */
            tags?: Tag[];
    }
    export namespace SetTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SetTagsForResourceRequest) => any;
    }
    export interface StartAssessmentRunRequest {
            /**
                * <p>The ARN of the assessment template of the assessment run that you want to
                *          start.</p>
                */
            assessmentTemplateArn: string | undefined;
            /**
                * <p>You can specify the name for the assessment run. The name must be unique for the
                *          assessment template whose ARN is used to start the assessment run.</p>
                */
            assessmentRunName?: string;
    }
    export namespace StartAssessmentRunRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAssessmentRunRequest) => any;
    }
    export interface StartAssessmentRunResponse {
            /**
                * <p>The ARN of the assessment run that has been started.</p>
                */
            assessmentRunArn: string | undefined;
    }
    export namespace StartAssessmentRunResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAssessmentRunResponse) => any;
    }
    export enum StopAction {
            SKIP_EVALUATION = "SKIP_EVALUATION",
            START_EVALUATION = "START_EVALUATION"
    }
    export interface StopAssessmentRunRequest {
            /**
                * <p>The ARN of the assessment run that you want to stop.</p>
                */
            assessmentRunArn: string | undefined;
            /**
                * <p>An input option that can be set to either START_EVALUATION or SKIP_EVALUATION.
                *          START_EVALUATION (the default value), stops the AWS agent from collecting data and begins
                *          the results evaluation and the findings generation process. SKIP_EVALUATION cancels the
                *          assessment run immediately, after which no findings are generated.</p>
                */
            stopAction?: StopAction | string;
    }
    export namespace StopAssessmentRunRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopAssessmentRunRequest) => any;
    }
    export interface SubscribeToEventRequest {
            /**
                * <p>The ARN of the assessment template that is used during the event for which you want
                *          to receive SNS notifications.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The event for which you want to receive SNS notifications.</p>
                */
            event: InspectorEvent | string | undefined;
            /**
                * <p>The ARN of the SNS topic to which the SNS notifications are sent.</p>
                */
            topicArn: string | undefined;
    }
    export namespace SubscribeToEventRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SubscribeToEventRequest) => any;
    }
    export interface UnsubscribeFromEventRequest {
            /**
                * <p>The ARN of the assessment template that is used during the event for which you want
                *          to stop receiving SNS notifications.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The event for which you want to stop receiving SNS notifications.</p>
                */
            event: InspectorEvent | string | undefined;
            /**
                * <p>The ARN of the SNS topic to which SNS notifications are sent.</p>
                */
            topicArn: string | undefined;
    }
    export namespace UnsubscribeFromEventRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UnsubscribeFromEventRequest) => any;
    }
    export interface UpdateAssessmentTargetRequest {
            /**
                * <p>The ARN of the assessment target that you want to update.</p>
                */
            assessmentTargetArn: string | undefined;
            /**
                * <p>The name of the assessment target that you want to update.</p>
                */
            assessmentTargetName: string | undefined;
            /**
                * <p>The ARN of the resource group that is used to specify the new resource group to
                *          associate with the assessment target.</p>
                */
            resourceGroupArn?: string;
    }
    export namespace UpdateAssessmentTargetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssessmentTargetRequest) => any;
    }
}

declare module '@aws-sdk/client-inspector/node_modules/@aws-sdk/client-inspector/dist-types/models/InspectorServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Inspector service.
        */
    export class InspectorServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

