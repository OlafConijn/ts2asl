// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-iot-data-plane' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { DeleteThingShadowCommandInput, DeleteThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/DeleteThingShadowCommand";
    import { GetRetainedMessageCommandInput, GetRetainedMessageCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetRetainedMessageCommand";
    import { GetThingShadowCommandInput, GetThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetThingShadowCommand";
    import { ListNamedShadowsForThingCommandInput, ListNamedShadowsForThingCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListNamedShadowsForThingCommand";
    import { ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListRetainedMessagesCommand";
    import { PublishCommandInput, PublishCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/PublishCommand";
    import { UpdateThingShadowCommandInput, UpdateThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/UpdateThingShadowCommand";
    import { IoTDataPlaneClient } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    /**
        * <fullname>IoT data</fullname>
        *          <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors,
        *       actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and
        *       things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a
        *       persistent representation of your things and their state in the Amazon Web Services cloud.</p>
        *          <p>Find the endpoint address for actions in IoT data by running this CLI command:</p>
        *          <p>
        *             <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code>
        *          </p>
        *          <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Amazon Web ServicesSignature Version 4</a>
        *       to sign requests is: <i>iotdevicegateway</i>.</p>
        */
    export class IoTDataPlane extends IoTDataPlaneClient {
            /**
                * <p>Deletes the shadow for the specified thing.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingShadow</a> action.</p>
                *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html">DeleteThingShadow</a> in the IoT Developer Guide.</p>
                */
            deleteThingShadow(args: DeleteThingShadowCommandInput, options?: __HttpHandlerOptions): Promise<DeleteThingShadowCommandOutput>;
            deleteThingShadow(args: DeleteThingShadowCommandInput, cb: (err: any, data?: DeleteThingShadowCommandOutput) => void): void;
            deleteThingShadow(args: DeleteThingShadowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteThingShadowCommandOutput) => void): void;
            /**
                * <p>Gets the details of a single retained message for the specified topic.</p>
                *          <p>This action returns the message payload of the retained message, which can
                *       incur messaging costs. To list only the topic names of the retained messages, call
                *       <a href="/iot/latest/developerguide/API_iotdata_ListRetainedMessages.html">ListRetainedMessages</a>.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">GetRetainedMessage</a> action.</p>
                *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
                *       pricing - Messaging</a>.</p>
                */
            getRetainedMessage(args: GetRetainedMessageCommandInput, options?: __HttpHandlerOptions): Promise<GetRetainedMessageCommandOutput>;
            getRetainedMessage(args: GetRetainedMessageCommandInput, cb: (err: any, data?: GetRetainedMessageCommandOutput) => void): void;
            getRetainedMessage(args: GetRetainedMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRetainedMessageCommandOutput) => void): void;
            /**
                * <p>Gets the shadow for the specified thing.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetThingShadow</a> action.</p>
                *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html">GetThingShadow</a> in the
                *         IoT Developer Guide.</p>
                */
            getThingShadow(args: GetThingShadowCommandInput, options?: __HttpHandlerOptions): Promise<GetThingShadowCommandOutput>;
            getThingShadow(args: GetThingShadowCommandInput, cb: (err: any, data?: GetThingShadowCommandOutput) => void): void;
            getThingShadow(args: GetThingShadowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetThingShadowCommandOutput) => void): void;
            /**
                * <p>Lists the shadows for the specified thing.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListNamedShadowsForThing</a> action.</p>
                */
            listNamedShadowsForThing(args: ListNamedShadowsForThingCommandInput, options?: __HttpHandlerOptions): Promise<ListNamedShadowsForThingCommandOutput>;
            listNamedShadowsForThing(args: ListNamedShadowsForThingCommandInput, cb: (err: any, data?: ListNamedShadowsForThingCommandOutput) => void): void;
            listNamedShadowsForThing(args: ListNamedShadowsForThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListNamedShadowsForThingCommandOutput) => void): void;
            /**
                * <p>Lists summary information about the retained messages stored for the account.</p>
                *          <p>This action returns only the topic names of the retained messages. It doesn't
                *       return any message payloads. Although this action doesn't return a message payload,
                *       it can still incur messaging costs.</p>
                *          <p>To get the message payload of a retained message, call
                *       <a href="https://docs.aws.amazon.com/iot/latest/developerguide/API_iotdata_GetRetainedMessage.html">GetRetainedMessage</a>
                *       with the topic name of the retained message.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">ListRetainedMessages</a> action.</p>
                *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
                *       pricing - Messaging</a>.</p>
                */
            listRetainedMessages(args: ListRetainedMessagesCommandInput, options?: __HttpHandlerOptions): Promise<ListRetainedMessagesCommandOutput>;
            listRetainedMessages(args: ListRetainedMessagesCommandInput, cb: (err: any, data?: ListRetainedMessagesCommandOutput) => void): void;
            listRetainedMessages(args: ListRetainedMessagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRetainedMessagesCommandOutput) => void): void;
            /**
                * <p>Publishes an MQTT message.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">Publish</a> action.</p>
                *          <p>For more information about MQTT messages, see
                *       <a href="http://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html">MQTT Protocol</a> in the
                *        IoT Developer Guide.</p>
                *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
                *       pricing - Messaging</a>.</p>
                */
            publish(args: PublishCommandInput, options?: __HttpHandlerOptions): Promise<PublishCommandOutput>;
            publish(args: PublishCommandInput, cb: (err: any, data?: PublishCommandOutput) => void): void;
            publish(args: PublishCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PublishCommandOutput) => void): void;
            /**
                * <p>Updates the shadow for the specified thing.</p>
                *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingShadow</a> action.</p>
                *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html">UpdateThingShadow</a> in the
                *         IoT Developer Guide.</p>
                */
            updateThingShadow(args: UpdateThingShadowCommandInput, options?: __HttpHandlerOptions): Promise<UpdateThingShadowCommandOutput>;
            updateThingShadow(args: UpdateThingShadowCommandInput, cb: (err: any, data?: UpdateThingShadowCommandOutput) => void): void;
            updateThingShadow(args: UpdateThingShadowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateThingShadowCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/DeleteThingShadowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { DeleteThingShadowRequest, DeleteThingShadowResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface DeleteThingShadowCommandInput extends DeleteThingShadowRequest {
    }
    export interface DeleteThingShadowCommandOutput extends DeleteThingShadowResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the shadow for the specified thing.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingShadow</a> action.</p>
        *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html">DeleteThingShadow</a> in the IoT Developer Guide.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, DeleteThingShadowCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, DeleteThingShadowCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new DeleteThingShadowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteThingShadowCommandInput} for command's `input` shape.
        * @see {@link DeleteThingShadowCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class DeleteThingShadowCommand extends $Command<DeleteThingShadowCommandInput, DeleteThingShadowCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: DeleteThingShadowCommandInput;
            constructor(input: DeleteThingShadowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteThingShadowCommandInput, DeleteThingShadowCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetRetainedMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { GetRetainedMessageRequest, GetRetainedMessageResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface GetRetainedMessageCommandInput extends GetRetainedMessageRequest {
    }
    export interface GetRetainedMessageCommandOutput extends GetRetainedMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the details of a single retained message for the specified topic.</p>
        *          <p>This action returns the message payload of the retained message, which can
        *       incur messaging costs. To list only the topic names of the retained messages, call
        *       <a href="/iot/latest/developerguide/API_iotdata_ListRetainedMessages.html">ListRetainedMessages</a>.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">GetRetainedMessage</a> action.</p>
        *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
        *       pricing - Messaging</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, GetRetainedMessageCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, GetRetainedMessageCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new GetRetainedMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRetainedMessageCommandInput} for command's `input` shape.
        * @see {@link GetRetainedMessageCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class GetRetainedMessageCommand extends $Command<GetRetainedMessageCommandInput, GetRetainedMessageCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: GetRetainedMessageCommandInput;
            constructor(input: GetRetainedMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRetainedMessageCommandInput, GetRetainedMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetThingShadowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { GetThingShadowRequest, GetThingShadowResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface GetThingShadowCommandInput extends GetThingShadowRequest {
    }
    export interface GetThingShadowCommandOutput extends GetThingShadowResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the shadow for the specified thing.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetThingShadow</a> action.</p>
        *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html">GetThingShadow</a> in the
        *         IoT Developer Guide.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, GetThingShadowCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, GetThingShadowCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new GetThingShadowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetThingShadowCommandInput} for command's `input` shape.
        * @see {@link GetThingShadowCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class GetThingShadowCommand extends $Command<GetThingShadowCommandInput, GetThingShadowCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: GetThingShadowCommandInput;
            constructor(input: GetThingShadowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetThingShadowCommandInput, GetThingShadowCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListNamedShadowsForThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { ListNamedShadowsForThingRequest, ListNamedShadowsForThingResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface ListNamedShadowsForThingCommandInput extends ListNamedShadowsForThingRequest {
    }
    export interface ListNamedShadowsForThingCommandOutput extends ListNamedShadowsForThingResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the shadows for the specified thing.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListNamedShadowsForThing</a> action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, ListNamedShadowsForThingCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, ListNamedShadowsForThingCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new ListNamedShadowsForThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListNamedShadowsForThingCommandInput} for command's `input` shape.
        * @see {@link ListNamedShadowsForThingCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class ListNamedShadowsForThingCommand extends $Command<ListNamedShadowsForThingCommandInput, ListNamedShadowsForThingCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: ListNamedShadowsForThingCommandInput;
            constructor(input: ListNamedShadowsForThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListNamedShadowsForThingCommandInput, ListNamedShadowsForThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListRetainedMessagesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { ListRetainedMessagesRequest, ListRetainedMessagesResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface ListRetainedMessagesCommandInput extends ListRetainedMessagesRequest {
    }
    export interface ListRetainedMessagesCommandOutput extends ListRetainedMessagesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists summary information about the retained messages stored for the account.</p>
        *          <p>This action returns only the topic names of the retained messages. It doesn't
        *       return any message payloads. Although this action doesn't return a message payload,
        *       it can still incur messaging costs.</p>
        *          <p>To get the message payload of a retained message, call
        *       <a href="https://docs.aws.amazon.com/iot/latest/developerguide/API_iotdata_GetRetainedMessage.html">GetRetainedMessage</a>
        *       with the topic name of the retained message.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">ListRetainedMessages</a> action.</p>
        *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
        *       pricing - Messaging</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, ListRetainedMessagesCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, ListRetainedMessagesCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new ListRetainedMessagesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRetainedMessagesCommandInput} for command's `input` shape.
        * @see {@link ListRetainedMessagesCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class ListRetainedMessagesCommand extends $Command<ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: ListRetainedMessagesCommandInput;
            constructor(input: ListRetainedMessagesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/PublishCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { PublishRequest } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface PublishCommandInput extends PublishRequest {
    }
    export interface PublishCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Publishes an MQTT message.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">Publish</a> action.</p>
        *          <p>For more information about MQTT messages, see
        *       <a href="http://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html">MQTT Protocol</a> in the
        *        IoT Developer Guide.</p>
        *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
        *       pricing - Messaging</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, PublishCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, PublishCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new PublishCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PublishCommandInput} for command's `input` shape.
        * @see {@link PublishCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class PublishCommand extends $Command<PublishCommandInput, PublishCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: PublishCommandInput;
            constructor(input: PublishCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PublishCommandInput, PublishCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/UpdateThingShadowCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient";
    import { UpdateThingShadowRequest, UpdateThingShadowResponse } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0";
    export interface UpdateThingShadowCommandInput extends UpdateThingShadowRequest {
    }
    export interface UpdateThingShadowCommandOutput extends UpdateThingShadowResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the shadow for the specified thing.</p>
        *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingShadow</a> action.</p>
        *          <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html">UpdateThingShadow</a> in the
        *         IoT Developer Guide.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTDataPlaneClient, UpdateThingShadowCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
        * // const { IoTDataPlaneClient, UpdateThingShadowCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
        * const client = new IoTDataPlaneClient(config);
        * const command = new UpdateThingShadowCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateThingShadowCommandInput} for command's `input` shape.
        * @see {@link UpdateThingShadowCommandOutput} for command's `response` shape.
        * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
        *
        */
    export class UpdateThingShadowCommand extends $Command<UpdateThingShadowCommandInput, UpdateThingShadowCommandOutput, IoTDataPlaneClientResolvedConfig> {
            readonly input: UpdateThingShadowCommandInput;
            constructor(input: UpdateThingShadowCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateThingShadowCommandInput, UpdateThingShadowCommandOutput>;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/IoTDataPlaneClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DeleteThingShadowCommandInput, DeleteThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/DeleteThingShadowCommand";
    import { GetRetainedMessageCommandInput, GetRetainedMessageCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetRetainedMessageCommand";
    import { GetThingShadowCommandInput, GetThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/GetThingShadowCommand";
    import { ListNamedShadowsForThingCommandInput, ListNamedShadowsForThingCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListNamedShadowsForThingCommand";
    import { ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/ListRetainedMessagesCommand";
    import { PublishCommandInput, PublishCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/PublishCommand";
    import { UpdateThingShadowCommandInput, UpdateThingShadowCommandOutput } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/commands/UpdateThingShadowCommand";
    export type ServiceInputTypes = DeleteThingShadowCommandInput | GetRetainedMessageCommandInput | GetThingShadowCommandInput | ListNamedShadowsForThingCommandInput | ListRetainedMessagesCommandInput | PublishCommandInput | UpdateThingShadowCommandInput;
    export type ServiceOutputTypes = DeleteThingShadowCommandOutput | GetRetainedMessageCommandOutput | GetThingShadowCommandOutput | ListNamedShadowsForThingCommandOutput | ListRetainedMessagesCommandOutput | PublishCommandOutput | UpdateThingShadowCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IoTDataPlaneClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IoTDataPlaneClient class constructor that set the region, credentials and other options.
        */
    export interface IoTDataPlaneClientConfig extends IoTDataPlaneClientConfigType {
    }
    type IoTDataPlaneClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IoTDataPlaneClient class. This is resolved and normalized from the {@link IoTDataPlaneClientConfig | constructor configuration interface}.
        */
    export interface IoTDataPlaneClientResolvedConfig extends IoTDataPlaneClientResolvedConfigType {
    }
    /**
        * <fullname>IoT data</fullname>
        *          <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors,
        *       actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and
        *       things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a
        *       persistent representation of your things and their state in the Amazon Web Services cloud.</p>
        *          <p>Find the endpoint address for actions in IoT data by running this CLI command:</p>
        *          <p>
        *             <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code>
        *          </p>
        *          <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Amazon Web ServicesSignature Version 4</a>
        *       to sign requests is: <i>iotdevicegateway</i>.</p>
        */
    export class IoTDataPlaneClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IoTDataPlaneClientResolvedConfig> {
            /**
                * The resolved configuration of IoTDataPlaneClient class. This is resolved and normalized from the {@link IoTDataPlaneClientConfig | constructor configuration interface}.
                */
            readonly config: IoTDataPlaneClientResolvedConfig;
            constructor(configuration: IoTDataPlaneClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTDataPlaneServiceException as __BaseException } from "@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/IoTDataPlaneServiceException";
    /**
        * <p>The specified version does not match the version of the document.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * <p>The input for the DeleteThingShadow operation.</p>
        */
    export interface DeleteThingShadowRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the shadow.</p>
                */
            shadowName?: string;
    }
    export namespace DeleteThingShadowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingShadowRequest) => any;
    }
    /**
        * <p>The output from the DeleteThingShadow operation.</p>
        */
    export interface DeleteThingShadowResponse {
            /**
                * <p>The state information, in JSON format.</p>
                */
            payload: Uint8Array | undefined;
    }
    export namespace DeleteThingShadowResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteThingShadowResponse) => any;
    }
    /**
        * <p>An unexpected error has occurred.</p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p>The request is not valid.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>The specified combination of HTTP verb and URI is not supported.</p>
        */
    export class MethodNotAllowedException extends __BaseException {
            readonly name: "MethodNotAllowedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MethodNotAllowedException, __BaseException>);
    }
    /**
        * <p>The specified resource does not exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The service is temporarily unavailable.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>The rate exceeds the limit.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>You are not authorized to perform this operation.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    /**
        * <p>The document encoding is not supported.</p>
        */
    export class UnsupportedDocumentEncodingException extends __BaseException {
            readonly name: "UnsupportedDocumentEncodingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnsupportedDocumentEncodingException, __BaseException>);
    }
    /**
        * <p>The input for the GetRetainedMessage operation.</p>
        */
    export interface GetRetainedMessageRequest {
            /**
                * <p>The topic name of the retained message to retrieve.</p>
                */
            topic: string | undefined;
    }
    export namespace GetRetainedMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRetainedMessageRequest) => any;
    }
    /**
        * <p>The output from the GetRetainedMessage operation.</p>
        */
    export interface GetRetainedMessageResponse {
            /**
                * <p>The topic name to which the retained message was published.</p>
                */
            topic?: string;
            /**
                * <p>The Base64-encoded message payload of the retained message body.</p>
                */
            payload?: Uint8Array;
            /**
                * <p>The quality of service (QoS) level used to publish the retained message.</p>
                */
            qos?: number;
            /**
                * <p>The Epoch date and time, in milliseconds, when the retained message was stored by IoT.</p>
                */
            lastModifiedTime?: number;
    }
    export namespace GetRetainedMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRetainedMessageResponse) => any;
    }
    /**
        * <p>The input for the GetThingShadow operation.</p>
        */
    export interface GetThingShadowRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the shadow.</p>
                */
            shadowName?: string;
    }
    export namespace GetThingShadowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetThingShadowRequest) => any;
    }
    /**
        * <p>The output from the GetThingShadow operation.</p>
        */
    export interface GetThingShadowResponse {
            /**
                * <p>The state information, in JSON format.</p>
                */
            payload?: Uint8Array;
    }
    export namespace GetThingShadowResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetThingShadowResponse) => any;
    }
    export interface ListNamedShadowsForThingRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The token to retrieve the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The result page size.</p>
                */
            pageSize?: number;
    }
    export namespace ListNamedShadowsForThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListNamedShadowsForThingRequest) => any;
    }
    export interface ListNamedShadowsForThingResponse {
            /**
                * <p>The list of shadows for the specified thing.</p>
                */
            results?: string[];
            /**
                * <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
                */
            nextToken?: string;
            /**
                * <p>The Epoch date and time the response was generated by IoT.</p>
                */
            timestamp?: number;
    }
    export namespace ListNamedShadowsForThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListNamedShadowsForThingResponse) => any;
    }
    export interface ListRetainedMessagesRequest {
            /**
                * <p>To retrieve the next set of results, the <code>nextToken</code>
                *       value from a previous response; otherwise <b>null</b> to receive
                *       the first set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return at one time.</p>
                */
            maxResults?: number;
    }
    export namespace ListRetainedMessagesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRetainedMessagesRequest) => any;
    }
    /**
        * <p>Information about a single retained message.</p>
        */
    export interface RetainedMessageSummary {
            /**
                * <p>The topic name to which the retained message was published.</p>
                */
            topic?: string;
            /**
                * <p>The size of the retained message's payload in bytes.</p>
                */
            payloadSize?: number;
            /**
                * <p>The quality of service (QoS) level used to publish the retained message.</p>
                */
            qos?: number;
            /**
                * <p>The Epoch date and time, in milliseconds, when the retained message was stored by IoT.</p>
                */
            lastModifiedTime?: number;
    }
    export namespace RetainedMessageSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RetainedMessageSummary) => any;
    }
    export interface ListRetainedMessagesResponse {
            /**
                * <p>A summary list the account's retained messages. The information returned doesn't include
                *       the message payloads of the retained messages.</p>
                */
            retainedTopics?: RetainedMessageSummary[];
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListRetainedMessagesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRetainedMessagesResponse) => any;
    }
    /**
        * <p>The input for the Publish operation.</p>
        */
    export interface PublishRequest {
            /**
                * <p>The name of the MQTT topic.</p>
                */
            topic: string | undefined;
            /**
                * <p>The Quality of Service (QoS) level.</p>
                */
            qos?: number;
            /**
                * <p>A Boolean value that determines whether to set the RETAIN flag when the message is published.</p>
                *          <p>Setting the RETAIN flag causes the message to be retained and sent to new subscribers to the topic.</p>
                *          <p>Valid values: <code>true</code> | <code>false</code>
                *          </p>
                *          <p>Default value: <code>false</code>
                *          </p>
                */
            retain?: boolean;
            /**
                * <p>The message body. MQTT accepts text, binary, and empty (null) message payloads.</p>
                *          <p>Publishing an empty (null) payload with <b>retain</b> =
                *         <code>true</code> deletes the retained message identified by <b>topic</b> from Amazon Web Services IoT Core.</p>
                */
            payload?: Uint8Array;
    }
    export namespace PublishRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishRequest) => any;
    }
    /**
        * <p>The payload exceeds the maximum size allowed.</p>
        */
    export class RequestEntityTooLargeException extends __BaseException {
            readonly name: "RequestEntityTooLargeException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<RequestEntityTooLargeException, __BaseException>);
    }
    /**
        * <p>The input for the UpdateThingShadow operation.</p>
        */
    export interface UpdateThingShadowRequest {
            /**
                * <p>The name of the thing.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The name of the shadow.</p>
                */
            shadowName?: string;
            /**
                * <p>The state information, in JSON format.</p>
                */
            payload: Uint8Array | undefined;
    }
    export namespace UpdateThingShadowRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingShadowRequest) => any;
    }
    /**
        * <p>The output from the UpdateThingShadow operation.</p>
        */
    export interface UpdateThingShadowResponse {
            /**
                * <p>The state information, in JSON format.</p>
                */
            payload?: Uint8Array;
    }
    export namespace UpdateThingShadowResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateThingShadowResponse) => any;
    }
}

declare module '@aws-sdk/client-iot-data-plane/node_modules/@aws-sdk/client-iot-data-plane/dist-types/models/IoTDataPlaneServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from IoTDataPlane service.
        */
    export class IoTDataPlaneServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

