// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-worklink' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AssociateDomainCommandInput, AssociateDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateDomainCommand";
    import { AssociateWebsiteAuthorizationProviderCommandInput, AssociateWebsiteAuthorizationProviderCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteAuthorizationProviderCommand";
    import { AssociateWebsiteCertificateAuthorityCommandInput, AssociateWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteCertificateAuthorityCommand";
    import { CreateFleetCommandInput, CreateFleetCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/CreateFleetCommand";
    import { DeleteFleetCommandInput, DeleteFleetCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DeleteFleetCommand";
    import { DescribeAuditStreamConfigurationCommandInput, DescribeAuditStreamConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeAuditStreamConfigurationCommand";
    import { DescribeCompanyNetworkConfigurationCommandInput, DescribeCompanyNetworkConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeCompanyNetworkConfigurationCommand";
    import { DescribeDeviceCommandInput, DescribeDeviceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDeviceCommand";
    import { DescribeDevicePolicyConfigurationCommandInput, DescribeDevicePolicyConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDevicePolicyConfigurationCommand";
    import { DescribeDomainCommandInput, DescribeDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDomainCommand";
    import { DescribeFleetMetadataCommandInput, DescribeFleetMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeFleetMetadataCommand";
    import { DescribeIdentityProviderConfigurationCommandInput, DescribeIdentityProviderConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeIdentityProviderConfigurationCommand";
    import { DescribeWebsiteCertificateAuthorityCommandInput, DescribeWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeWebsiteCertificateAuthorityCommand";
    import { DisassociateDomainCommandInput, DisassociateDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateDomainCommand";
    import { DisassociateWebsiteAuthorizationProviderCommandInput, DisassociateWebsiteAuthorizationProviderCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteAuthorizationProviderCommand";
    import { DisassociateWebsiteCertificateAuthorityCommandInput, DisassociateWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteCertificateAuthorityCommand";
    import { ListDevicesCommandInput, ListDevicesCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDevicesCommand";
    import { ListDomainsCommandInput, ListDomainsCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDomainsCommand";
    import { ListFleetsCommandInput, ListFleetsCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListFleetsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebsiteAuthorizationProvidersCommandInput, ListWebsiteAuthorizationProvidersCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteAuthorizationProvidersCommand";
    import { ListWebsiteCertificateAuthoritiesCommandInput, ListWebsiteCertificateAuthoritiesCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteCertificateAuthoritiesCommand";
    import { RestoreDomainAccessCommandInput, RestoreDomainAccessCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RestoreDomainAccessCommand";
    import { RevokeDomainAccessCommandInput, RevokeDomainAccessCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RevokeDomainAccessCommand";
    import { SignOutUserCommandInput, SignOutUserCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/SignOutUserCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UntagResourceCommand";
    import { UpdateAuditStreamConfigurationCommandInput, UpdateAuditStreamConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateAuditStreamConfigurationCommand";
    import { UpdateCompanyNetworkConfigurationCommandInput, UpdateCompanyNetworkConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateCompanyNetworkConfigurationCommand";
    import { UpdateDevicePolicyConfigurationCommandInput, UpdateDevicePolicyConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDevicePolicyConfigurationCommand";
    import { UpdateDomainMetadataCommandInput, UpdateDomainMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDomainMetadataCommand";
    import { UpdateFleetMetadataCommandInput, UpdateFleetMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateFleetMetadataCommand";
    import { UpdateIdentityProviderConfigurationCommandInput, UpdateIdentityProviderConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateIdentityProviderConfigurationCommand";
    import { WorkLinkClient } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    /**
        * <p>Amazon WorkLink is a cloud-based service that provides secure access
        *             to internal websites and web apps from iOS and Android phones. In a single step, your users, such as
        *             employees, can access internal websites as efficiently as they access any other public website.
        *             They enter a URL in their web browser, or choose a link to an internal website in an email. Amazon WorkLink
        *             authenticates the user's access and securely renders authorized internal web content in a secure
        *             rendering service in the AWS cloud. Amazon WorkLink doesn't download or store any internal web content on
        *             mobile devices.</p>
        */
    export class WorkLink extends WorkLinkClient {
            /**
                * @deprecated
                *
                * <p>Specifies a domain to be associated to Amazon WorkLink.</p>
                */
            associateDomain(args: AssociateDomainCommandInput, options?: __HttpHandlerOptions): Promise<AssociateDomainCommandOutput>;
            associateDomain(args: AssociateDomainCommandInput, cb: (err: any, data?: AssociateDomainCommandOutput) => void): void;
            associateDomain(args: AssociateDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateDomainCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Associates a website authorization provider with a specified fleet. This is used to authorize users against associated websites in the company network.</p>
                */
            associateWebsiteAuthorizationProvider(args: AssociateWebsiteAuthorizationProviderCommandInput, options?: __HttpHandlerOptions): Promise<AssociateWebsiteAuthorizationProviderCommandOutput>;
            associateWebsiteAuthorizationProvider(args: AssociateWebsiteAuthorizationProviderCommandInput, cb: (err: any, data?: AssociateWebsiteAuthorizationProviderCommandOutput) => void): void;
            associateWebsiteAuthorizationProvider(args: AssociateWebsiteAuthorizationProviderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateWebsiteAuthorizationProviderCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Imports the root certificate of a certificate authority (CA) used to obtain TLS
                *             certificates used by associated websites within the company network.</p>
                */
            associateWebsiteCertificateAuthority(args: AssociateWebsiteCertificateAuthorityCommandInput, options?: __HttpHandlerOptions): Promise<AssociateWebsiteCertificateAuthorityCommandOutput>;
            associateWebsiteCertificateAuthority(args: AssociateWebsiteCertificateAuthorityCommandInput, cb: (err: any, data?: AssociateWebsiteCertificateAuthorityCommandOutput) => void): void;
            associateWebsiteCertificateAuthority(args: AssociateWebsiteCertificateAuthorityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateWebsiteCertificateAuthorityCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Creates a fleet. A fleet consists of resources and the configuration that delivers
                *             associated websites to authorized users who download and set up the Amazon WorkLink app.</p>
                */
            createFleet(args: CreateFleetCommandInput, options?: __HttpHandlerOptions): Promise<CreateFleetCommandOutput>;
            createFleet(args: CreateFleetCommandInput, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
            createFleet(args: CreateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Deletes a fleet. Prevents users from accessing previously associated websites. </p>
                */
            deleteFleet(args: DeleteFleetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFleetCommandOutput>;
            deleteFleet(args: DeleteFleetCommandInput, cb: (err: any, data?: DeleteFleetCommandOutput) => void): void;
            deleteFleet(args: DeleteFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFleetCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Describes the configuration for delivering audit streams to the customer account.</p>
                */
            describeAuditStreamConfiguration(args: DescribeAuditStreamConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAuditStreamConfigurationCommandOutput>;
            describeAuditStreamConfiguration(args: DescribeAuditStreamConfigurationCommandInput, cb: (err: any, data?: DescribeAuditStreamConfigurationCommandOutput) => void): void;
            describeAuditStreamConfiguration(args: DescribeAuditStreamConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAuditStreamConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Describes the networking configuration to access the internal websites associated with
                *             the specified fleet.</p>
                */
            describeCompanyNetworkConfiguration(args: DescribeCompanyNetworkConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCompanyNetworkConfigurationCommandOutput>;
            describeCompanyNetworkConfiguration(args: DescribeCompanyNetworkConfigurationCommandInput, cb: (err: any, data?: DescribeCompanyNetworkConfigurationCommandOutput) => void): void;
            describeCompanyNetworkConfiguration(args: DescribeCompanyNetworkConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCompanyNetworkConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Provides information about a user's device.</p>
                */
            describeDevice(args: DescribeDeviceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDeviceCommandOutput>;
            describeDevice(args: DescribeDeviceCommandInput, cb: (err: any, data?: DescribeDeviceCommandOutput) => void): void;
            describeDevice(args: DescribeDeviceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDeviceCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Describes the device policy configuration for the specified fleet.</p>
                */
            describeDevicePolicyConfiguration(args: DescribeDevicePolicyConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDevicePolicyConfigurationCommandOutput>;
            describeDevicePolicyConfiguration(args: DescribeDevicePolicyConfigurationCommandInput, cb: (err: any, data?: DescribeDevicePolicyConfigurationCommandOutput) => void): void;
            describeDevicePolicyConfiguration(args: DescribeDevicePolicyConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDevicePolicyConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Provides information about the domain.</p>
                */
            describeDomain(args: DescribeDomainCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDomainCommandOutput>;
            describeDomain(args: DescribeDomainCommandInput, cb: (err: any, data?: DescribeDomainCommandOutput) => void): void;
            describeDomain(args: DescribeDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDomainCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Provides basic information for the specified fleet, excluding identity provider,
                *             networking, and device configuration details.</p>
                */
            describeFleetMetadata(args: DescribeFleetMetadataCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetMetadataCommandOutput>;
            describeFleetMetadata(args: DescribeFleetMetadataCommandInput, cb: (err: any, data?: DescribeFleetMetadataCommandOutput) => void): void;
            describeFleetMetadata(args: DescribeFleetMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetMetadataCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Describes the identity provider configuration of the specified fleet.</p>
                */
            describeIdentityProviderConfiguration(args: DescribeIdentityProviderConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeIdentityProviderConfigurationCommandOutput>;
            describeIdentityProviderConfiguration(args: DescribeIdentityProviderConfigurationCommandInput, cb: (err: any, data?: DescribeIdentityProviderConfigurationCommandOutput) => void): void;
            describeIdentityProviderConfiguration(args: DescribeIdentityProviderConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeIdentityProviderConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Provides information about the certificate authority.</p>
                */
            describeWebsiteCertificateAuthority(args: DescribeWebsiteCertificateAuthorityCommandInput, options?: __HttpHandlerOptions): Promise<DescribeWebsiteCertificateAuthorityCommandOutput>;
            describeWebsiteCertificateAuthority(args: DescribeWebsiteCertificateAuthorityCommandInput, cb: (err: any, data?: DescribeWebsiteCertificateAuthorityCommandOutput) => void): void;
            describeWebsiteCertificateAuthority(args: DescribeWebsiteCertificateAuthorityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeWebsiteCertificateAuthorityCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Disassociates a domain from Amazon WorkLink. End users lose the ability to access the domain with Amazon WorkLink. </p>
                */
            disassociateDomain(args: DisassociateDomainCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateDomainCommandOutput>;
            disassociateDomain(args: DisassociateDomainCommandInput, cb: (err: any, data?: DisassociateDomainCommandOutput) => void): void;
            disassociateDomain(args: DisassociateDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateDomainCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Disassociates a website authorization provider from a specified fleet. After the
                *             disassociation, users can't load any associated websites that require this authorization
                *             provider.</p>
                */
            disassociateWebsiteAuthorizationProvider(args: DisassociateWebsiteAuthorizationProviderCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateWebsiteAuthorizationProviderCommandOutput>;
            disassociateWebsiteAuthorizationProvider(args: DisassociateWebsiteAuthorizationProviderCommandInput, cb: (err: any, data?: DisassociateWebsiteAuthorizationProviderCommandOutput) => void): void;
            disassociateWebsiteAuthorizationProvider(args: DisassociateWebsiteAuthorizationProviderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateWebsiteAuthorizationProviderCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Removes a certificate authority (CA).</p>
                */
            disassociateWebsiteCertificateAuthority(args: DisassociateWebsiteCertificateAuthorityCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateWebsiteCertificateAuthorityCommandOutput>;
            disassociateWebsiteCertificateAuthority(args: DisassociateWebsiteCertificateAuthorityCommandInput, cb: (err: any, data?: DisassociateWebsiteCertificateAuthorityCommandOutput) => void): void;
            disassociateWebsiteCertificateAuthority(args: DisassociateWebsiteCertificateAuthorityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateWebsiteCertificateAuthorityCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of devices registered with the specified fleet.</p>
                */
            listDevices(args: ListDevicesCommandInput, options?: __HttpHandlerOptions): Promise<ListDevicesCommandOutput>;
            listDevices(args: ListDevicesCommandInput, cb: (err: any, data?: ListDevicesCommandOutput) => void): void;
            listDevices(args: ListDevicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDevicesCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of domains associated to a specified fleet.</p>
                */
            listDomains(args: ListDomainsCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainsCommandOutput>;
            listDomains(args: ListDomainsCommandInput, cb: (err: any, data?: ListDomainsCommandOutput) => void): void;
            listDomains(args: ListDomainsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainsCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of fleets for the current account and Region.</p>
                */
            listFleets(args: ListFleetsCommandInput, options?: __HttpHandlerOptions): Promise<ListFleetsCommandOutput>;
            listFleets(args: ListFleetsCommandInput, cb: (err: any, data?: ListFleetsCommandOutput) => void): void;
            listFleets(args: ListFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFleetsCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of tags for the specified resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of website authorization providers associated with a specified fleet.</p>
                */
            listWebsiteAuthorizationProviders(args: ListWebsiteAuthorizationProvidersCommandInput, options?: __HttpHandlerOptions): Promise<ListWebsiteAuthorizationProvidersCommandOutput>;
            listWebsiteAuthorizationProviders(args: ListWebsiteAuthorizationProvidersCommandInput, cb: (err: any, data?: ListWebsiteAuthorizationProvidersCommandOutput) => void): void;
            listWebsiteAuthorizationProviders(args: ListWebsiteAuthorizationProvidersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWebsiteAuthorizationProvidersCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Retrieves a list of certificate authorities added for the current account and
                *             Region.</p>
                */
            listWebsiteCertificateAuthorities(args: ListWebsiteCertificateAuthoritiesCommandInput, options?: __HttpHandlerOptions): Promise<ListWebsiteCertificateAuthoritiesCommandOutput>;
            listWebsiteCertificateAuthorities(args: ListWebsiteCertificateAuthoritiesCommandInput, cb: (err: any, data?: ListWebsiteCertificateAuthoritiesCommandOutput) => void): void;
            listWebsiteCertificateAuthorities(args: ListWebsiteCertificateAuthoritiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWebsiteCertificateAuthoritiesCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Moves a domain to ACTIVE status if it was in the INACTIVE status.</p>
                */
            restoreDomainAccess(args: RestoreDomainAccessCommandInput, options?: __HttpHandlerOptions): Promise<RestoreDomainAccessCommandOutput>;
            restoreDomainAccess(args: RestoreDomainAccessCommandInput, cb: (err: any, data?: RestoreDomainAccessCommandOutput) => void): void;
            restoreDomainAccess(args: RestoreDomainAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestoreDomainAccessCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Moves a domain to INACTIVE status if it was in the ACTIVE status.</p>
                */
            revokeDomainAccess(args: RevokeDomainAccessCommandInput, options?: __HttpHandlerOptions): Promise<RevokeDomainAccessCommandOutput>;
            revokeDomainAccess(args: RevokeDomainAccessCommandInput, cb: (err: any, data?: RevokeDomainAccessCommandOutput) => void): void;
            revokeDomainAccess(args: RevokeDomainAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RevokeDomainAccessCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Signs the user out from all of their devices. The user can sign in again if they have
                *             valid credentials.</p>
                */
            signOutUser(args: SignOutUserCommandInput, options?: __HttpHandlerOptions): Promise<SignOutUserCommandOutput>;
            signOutUser(args: SignOutUserCommandInput, cb: (err: any, data?: SignOutUserCommandOutput) => void): void;
            signOutUser(args: SignOutUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SignOutUserCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Adds or overwrites one or more tags for the specified resource, such as a fleet. Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Removes one or more tags from the specified resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates the audit stream configuration for the fleet.</p>
                */
            updateAuditStreamConfiguration(args: UpdateAuditStreamConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAuditStreamConfigurationCommandOutput>;
            updateAuditStreamConfiguration(args: UpdateAuditStreamConfigurationCommandInput, cb: (err: any, data?: UpdateAuditStreamConfigurationCommandOutput) => void): void;
            updateAuditStreamConfiguration(args: UpdateAuditStreamConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAuditStreamConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates the company network configuration for the fleet.</p>
                */
            updateCompanyNetworkConfiguration(args: UpdateCompanyNetworkConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateCompanyNetworkConfigurationCommandOutput>;
            updateCompanyNetworkConfiguration(args: UpdateCompanyNetworkConfigurationCommandInput, cb: (err: any, data?: UpdateCompanyNetworkConfigurationCommandOutput) => void): void;
            updateCompanyNetworkConfiguration(args: UpdateCompanyNetworkConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateCompanyNetworkConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates the device policy configuration for the fleet.</p>
                */
            updateDevicePolicyConfiguration(args: UpdateDevicePolicyConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDevicePolicyConfigurationCommandOutput>;
            updateDevicePolicyConfiguration(args: UpdateDevicePolicyConfigurationCommandInput, cb: (err: any, data?: UpdateDevicePolicyConfigurationCommandOutput) => void): void;
            updateDevicePolicyConfiguration(args: UpdateDevicePolicyConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDevicePolicyConfigurationCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates domain metadata, such as DisplayName.</p>
                */
            updateDomainMetadata(args: UpdateDomainMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDomainMetadataCommandOutput>;
            updateDomainMetadata(args: UpdateDomainMetadataCommandInput, cb: (err: any, data?: UpdateDomainMetadataCommandOutput) => void): void;
            updateDomainMetadata(args: UpdateDomainMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDomainMetadataCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates fleet metadata, such as DisplayName.</p>
                */
            updateFleetMetadata(args: UpdateFleetMetadataCommandInput, options?: __HttpHandlerOptions): Promise<UpdateFleetMetadataCommandOutput>;
            updateFleetMetadata(args: UpdateFleetMetadataCommandInput, cb: (err: any, data?: UpdateFleetMetadataCommandOutput) => void): void;
            updateFleetMetadata(args: UpdateFleetMetadataCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateFleetMetadataCommandOutput) => void): void;
            /**
                * @deprecated
                *
                * <p>Updates the identity provider configuration for the fleet.</p>
                */
            updateIdentityProviderConfiguration(args: UpdateIdentityProviderConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateIdentityProviderConfigurationCommandOutput>;
            updateIdentityProviderConfiguration(args: UpdateIdentityProviderConfigurationCommandInput, cb: (err: any, data?: UpdateIdentityProviderConfigurationCommandOutput) => void): void;
            updateIdentityProviderConfiguration(args: UpdateIdentityProviderConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateIdentityProviderConfigurationCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateDomainRequest, AssociateDomainResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface AssociateDomainCommandInput extends AssociateDomainRequest {
    }
    export interface AssociateDomainCommandOutput extends AssociateDomainResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Specifies a domain to be associated to Amazon WorkLink.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, AssociateDomainCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, AssociateDomainCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new AssociateDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateDomainCommandInput} for command's `input` shape.
        * @see {@link AssociateDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class AssociateDomainCommand extends $Command<AssociateDomainCommandInput, AssociateDomainCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: AssociateDomainCommandInput;
            constructor(input: AssociateDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateDomainCommandInput, AssociateDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteAuthorizationProviderCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateWebsiteAuthorizationProviderRequest, AssociateWebsiteAuthorizationProviderResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface AssociateWebsiteAuthorizationProviderCommandInput extends AssociateWebsiteAuthorizationProviderRequest {
    }
    export interface AssociateWebsiteAuthorizationProviderCommandOutput extends AssociateWebsiteAuthorizationProviderResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Associates a website authorization provider with a specified fleet. This is used to authorize users against associated websites in the company network.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, AssociateWebsiteAuthorizationProviderCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, AssociateWebsiteAuthorizationProviderCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new AssociateWebsiteAuthorizationProviderCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateWebsiteAuthorizationProviderCommandInput} for command's `input` shape.
        * @see {@link AssociateWebsiteAuthorizationProviderCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class AssociateWebsiteAuthorizationProviderCommand extends $Command<AssociateWebsiteAuthorizationProviderCommandInput, AssociateWebsiteAuthorizationProviderCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: AssociateWebsiteAuthorizationProviderCommandInput;
            constructor(input: AssociateWebsiteAuthorizationProviderCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateWebsiteAuthorizationProviderCommandInput, AssociateWebsiteAuthorizationProviderCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteCertificateAuthorityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateWebsiteCertificateAuthorityRequest, AssociateWebsiteCertificateAuthorityResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface AssociateWebsiteCertificateAuthorityCommandInput extends AssociateWebsiteCertificateAuthorityRequest {
    }
    export interface AssociateWebsiteCertificateAuthorityCommandOutput extends AssociateWebsiteCertificateAuthorityResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Imports the root certificate of a certificate authority (CA) used to obtain TLS
        *             certificates used by associated websites within the company network.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, AssociateWebsiteCertificateAuthorityCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, AssociateWebsiteCertificateAuthorityCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new AssociateWebsiteCertificateAuthorityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateWebsiteCertificateAuthorityCommandInput} for command's `input` shape.
        * @see {@link AssociateWebsiteCertificateAuthorityCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class AssociateWebsiteCertificateAuthorityCommand extends $Command<AssociateWebsiteCertificateAuthorityCommandInput, AssociateWebsiteCertificateAuthorityCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: AssociateWebsiteCertificateAuthorityCommandInput;
            constructor(input: AssociateWebsiteCertificateAuthorityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateWebsiteCertificateAuthorityCommandInput, AssociateWebsiteCertificateAuthorityCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/CreateFleetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateFleetRequest, CreateFleetResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface CreateFleetCommandInput extends CreateFleetRequest {
    }
    export interface CreateFleetCommandOutput extends CreateFleetResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Creates a fleet. A fleet consists of resources and the configuration that delivers
        *             associated websites to authorized users who download and set up the Amazon WorkLink app.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, CreateFleetCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, CreateFleetCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new CreateFleetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateFleetCommandInput} for command's `input` shape.
        * @see {@link CreateFleetCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class CreateFleetCommand extends $Command<CreateFleetCommandInput, CreateFleetCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: CreateFleetCommandInput;
            constructor(input: CreateFleetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateFleetCommandInput, CreateFleetCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DeleteFleetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteFleetRequest, DeleteFleetResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DeleteFleetCommandInput extends DeleteFleetRequest {
    }
    export interface DeleteFleetCommandOutput extends DeleteFleetResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Deletes a fleet. Prevents users from accessing previously associated websites. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DeleteFleetCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DeleteFleetCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DeleteFleetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteFleetCommandInput} for command's `input` shape.
        * @see {@link DeleteFleetCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DeleteFleetCommand extends $Command<DeleteFleetCommandInput, DeleteFleetCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DeleteFleetCommandInput;
            constructor(input: DeleteFleetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteFleetCommandInput, DeleteFleetCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeAuditStreamConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAuditStreamConfigurationRequest, DescribeAuditStreamConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeAuditStreamConfigurationCommandInput extends DescribeAuditStreamConfigurationRequest {
    }
    export interface DescribeAuditStreamConfigurationCommandOutput extends DescribeAuditStreamConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Describes the configuration for delivering audit streams to the customer account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeAuditStreamConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeAuditStreamConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeAuditStreamConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAuditStreamConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeAuditStreamConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeAuditStreamConfigurationCommand extends $Command<DescribeAuditStreamConfigurationCommandInput, DescribeAuditStreamConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeAuditStreamConfigurationCommandInput;
            constructor(input: DescribeAuditStreamConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditStreamConfigurationCommandInput, DescribeAuditStreamConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeCompanyNetworkConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeCompanyNetworkConfigurationRequest, DescribeCompanyNetworkConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeCompanyNetworkConfigurationCommandInput extends DescribeCompanyNetworkConfigurationRequest {
    }
    export interface DescribeCompanyNetworkConfigurationCommandOutput extends DescribeCompanyNetworkConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Describes the networking configuration to access the internal websites associated with
        *             the specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeCompanyNetworkConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeCompanyNetworkConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeCompanyNetworkConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCompanyNetworkConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeCompanyNetworkConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeCompanyNetworkConfigurationCommand extends $Command<DescribeCompanyNetworkConfigurationCommandInput, DescribeCompanyNetworkConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeCompanyNetworkConfigurationCommandInput;
            constructor(input: DescribeCompanyNetworkConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCompanyNetworkConfigurationCommandInput, DescribeCompanyNetworkConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDeviceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeDeviceRequest, DescribeDeviceResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeDeviceCommandInput extends DescribeDeviceRequest {
    }
    export interface DescribeDeviceCommandOutput extends DescribeDeviceResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Provides information about a user's device.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeDeviceCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeDeviceCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeDeviceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDeviceCommandInput} for command's `input` shape.
        * @see {@link DescribeDeviceCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeDeviceCommand extends $Command<DescribeDeviceCommandInput, DescribeDeviceCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeDeviceCommandInput;
            constructor(input: DescribeDeviceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDeviceCommandInput, DescribeDeviceCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDevicePolicyConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeDevicePolicyConfigurationRequest, DescribeDevicePolicyConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeDevicePolicyConfigurationCommandInput extends DescribeDevicePolicyConfigurationRequest {
    }
    export interface DescribeDevicePolicyConfigurationCommandOutput extends DescribeDevicePolicyConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Describes the device policy configuration for the specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeDevicePolicyConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeDevicePolicyConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeDevicePolicyConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDevicePolicyConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeDevicePolicyConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeDevicePolicyConfigurationCommand extends $Command<DescribeDevicePolicyConfigurationCommandInput, DescribeDevicePolicyConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeDevicePolicyConfigurationCommandInput;
            constructor(input: DescribeDevicePolicyConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDevicePolicyConfigurationCommandInput, DescribeDevicePolicyConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeDomainRequest, DescribeDomainResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeDomainCommandInput extends DescribeDomainRequest {
    }
    export interface DescribeDomainCommandOutput extends DescribeDomainResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Provides information about the domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeDomainCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeDomainCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDomainCommandInput} for command's `input` shape.
        * @see {@link DescribeDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeDomainCommand extends $Command<DescribeDomainCommandInput, DescribeDomainCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeDomainCommandInput;
            constructor(input: DescribeDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDomainCommandInput, DescribeDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeFleetMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeFleetMetadataRequest, DescribeFleetMetadataResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeFleetMetadataCommandInput extends DescribeFleetMetadataRequest {
    }
    export interface DescribeFleetMetadataCommandOutput extends DescribeFleetMetadataResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Provides basic information for the specified fleet, excluding identity provider,
        *             networking, and device configuration details.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeFleetMetadataCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeFleetMetadataCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeFleetMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFleetMetadataCommandInput} for command's `input` shape.
        * @see {@link DescribeFleetMetadataCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeFleetMetadataCommand extends $Command<DescribeFleetMetadataCommandInput, DescribeFleetMetadataCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeFleetMetadataCommandInput;
            constructor(input: DescribeFleetMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFleetMetadataCommandInput, DescribeFleetMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeIdentityProviderConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeIdentityProviderConfigurationRequest, DescribeIdentityProviderConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeIdentityProviderConfigurationCommandInput extends DescribeIdentityProviderConfigurationRequest {
    }
    export interface DescribeIdentityProviderConfigurationCommandOutput extends DescribeIdentityProviderConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Describes the identity provider configuration of the specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeIdentityProviderConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeIdentityProviderConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeIdentityProviderConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeIdentityProviderConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeIdentityProviderConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeIdentityProviderConfigurationCommand extends $Command<DescribeIdentityProviderConfigurationCommandInput, DescribeIdentityProviderConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeIdentityProviderConfigurationCommandInput;
            constructor(input: DescribeIdentityProviderConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeIdentityProviderConfigurationCommandInput, DescribeIdentityProviderConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeWebsiteCertificateAuthorityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeWebsiteCertificateAuthorityRequest, DescribeWebsiteCertificateAuthorityResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DescribeWebsiteCertificateAuthorityCommandInput extends DescribeWebsiteCertificateAuthorityRequest {
    }
    export interface DescribeWebsiteCertificateAuthorityCommandOutput extends DescribeWebsiteCertificateAuthorityResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Provides information about the certificate authority.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DescribeWebsiteCertificateAuthorityCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DescribeWebsiteCertificateAuthorityCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DescribeWebsiteCertificateAuthorityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeWebsiteCertificateAuthorityCommandInput} for command's `input` shape.
        * @see {@link DescribeWebsiteCertificateAuthorityCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DescribeWebsiteCertificateAuthorityCommand extends $Command<DescribeWebsiteCertificateAuthorityCommandInput, DescribeWebsiteCertificateAuthorityCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DescribeWebsiteCertificateAuthorityCommandInput;
            constructor(input: DescribeWebsiteCertificateAuthorityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeWebsiteCertificateAuthorityCommandInput, DescribeWebsiteCertificateAuthorityCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateDomainRequest, DisassociateDomainResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DisassociateDomainCommandInput extends DisassociateDomainRequest {
    }
    export interface DisassociateDomainCommandOutput extends DisassociateDomainResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Disassociates a domain from Amazon WorkLink. End users lose the ability to access the domain with Amazon WorkLink. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DisassociateDomainCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DisassociateDomainCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DisassociateDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateDomainCommandInput} for command's `input` shape.
        * @see {@link DisassociateDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DisassociateDomainCommand extends $Command<DisassociateDomainCommandInput, DisassociateDomainCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DisassociateDomainCommandInput;
            constructor(input: DisassociateDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateDomainCommandInput, DisassociateDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteAuthorizationProviderCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateWebsiteAuthorizationProviderRequest, DisassociateWebsiteAuthorizationProviderResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DisassociateWebsiteAuthorizationProviderCommandInput extends DisassociateWebsiteAuthorizationProviderRequest {
    }
    export interface DisassociateWebsiteAuthorizationProviderCommandOutput extends DisassociateWebsiteAuthorizationProviderResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Disassociates a website authorization provider from a specified fleet. After the
        *             disassociation, users can't load any associated websites that require this authorization
        *             provider.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DisassociateWebsiteAuthorizationProviderCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DisassociateWebsiteAuthorizationProviderCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DisassociateWebsiteAuthorizationProviderCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateWebsiteAuthorizationProviderCommandInput} for command's `input` shape.
        * @see {@link DisassociateWebsiteAuthorizationProviderCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DisassociateWebsiteAuthorizationProviderCommand extends $Command<DisassociateWebsiteAuthorizationProviderCommandInput, DisassociateWebsiteAuthorizationProviderCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DisassociateWebsiteAuthorizationProviderCommandInput;
            constructor(input: DisassociateWebsiteAuthorizationProviderCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateWebsiteAuthorizationProviderCommandInput, DisassociateWebsiteAuthorizationProviderCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteCertificateAuthorityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateWebsiteCertificateAuthorityRequest, DisassociateWebsiteCertificateAuthorityResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface DisassociateWebsiteCertificateAuthorityCommandInput extends DisassociateWebsiteCertificateAuthorityRequest {
    }
    export interface DisassociateWebsiteCertificateAuthorityCommandOutput extends DisassociateWebsiteCertificateAuthorityResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Removes a certificate authority (CA).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, DisassociateWebsiteCertificateAuthorityCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, DisassociateWebsiteCertificateAuthorityCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new DisassociateWebsiteCertificateAuthorityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateWebsiteCertificateAuthorityCommandInput} for command's `input` shape.
        * @see {@link DisassociateWebsiteCertificateAuthorityCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class DisassociateWebsiteCertificateAuthorityCommand extends $Command<DisassociateWebsiteCertificateAuthorityCommandInput, DisassociateWebsiteCertificateAuthorityCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: DisassociateWebsiteCertificateAuthorityCommandInput;
            constructor(input: DisassociateWebsiteCertificateAuthorityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateWebsiteCertificateAuthorityCommandInput, DisassociateWebsiteCertificateAuthorityCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDevicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDevicesRequest, ListDevicesResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListDevicesCommandInput extends ListDevicesRequest {
    }
    export interface ListDevicesCommandOutput extends ListDevicesResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of devices registered with the specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListDevicesCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListDevicesCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListDevicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDevicesCommandInput} for command's `input` shape.
        * @see {@link ListDevicesCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListDevicesCommand extends $Command<ListDevicesCommandInput, ListDevicesCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListDevicesCommandInput;
            constructor(input: ListDevicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDevicesCommandInput, ListDevicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDomainsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDomainsRequest, ListDomainsResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListDomainsCommandInput extends ListDomainsRequest {
    }
    export interface ListDomainsCommandOutput extends ListDomainsResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of domains associated to a specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListDomainsCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListDomainsCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListDomainsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDomainsCommandInput} for command's `input` shape.
        * @see {@link ListDomainsCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListDomainsCommand extends $Command<ListDomainsCommandInput, ListDomainsCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListDomainsCommandInput;
            constructor(input: ListDomainsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDomainsCommandInput, ListDomainsCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListFleetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListFleetsRequest, ListFleetsResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListFleetsCommandInput extends ListFleetsRequest {
    }
    export interface ListFleetsCommandOutput extends ListFleetsResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of fleets for the current account and Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListFleetsCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListFleetsCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListFleetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFleetsCommandInput} for command's `input` shape.
        * @see {@link ListFleetsCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListFleetsCommand extends $Command<ListFleetsCommandInput, ListFleetsCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListFleetsCommandInput;
            constructor(input: ListFleetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFleetsCommandInput, ListFleetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of tags for the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListTagsForResourceCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListTagsForResourceCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteAuthorizationProvidersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListWebsiteAuthorizationProvidersRequest, ListWebsiteAuthorizationProvidersResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListWebsiteAuthorizationProvidersCommandInput extends ListWebsiteAuthorizationProvidersRequest {
    }
    export interface ListWebsiteAuthorizationProvidersCommandOutput extends ListWebsiteAuthorizationProvidersResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of website authorization providers associated with a specified fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListWebsiteAuthorizationProvidersCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListWebsiteAuthorizationProvidersCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListWebsiteAuthorizationProvidersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListWebsiteAuthorizationProvidersCommandInput} for command's `input` shape.
        * @see {@link ListWebsiteAuthorizationProvidersCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListWebsiteAuthorizationProvidersCommand extends $Command<ListWebsiteAuthorizationProvidersCommandInput, ListWebsiteAuthorizationProvidersCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListWebsiteAuthorizationProvidersCommandInput;
            constructor(input: ListWebsiteAuthorizationProvidersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListWebsiteAuthorizationProvidersCommandInput, ListWebsiteAuthorizationProvidersCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteCertificateAuthoritiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListWebsiteCertificateAuthoritiesRequest, ListWebsiteCertificateAuthoritiesResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface ListWebsiteCertificateAuthoritiesCommandInput extends ListWebsiteCertificateAuthoritiesRequest {
    }
    export interface ListWebsiteCertificateAuthoritiesCommandOutput extends ListWebsiteCertificateAuthoritiesResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Retrieves a list of certificate authorities added for the current account and
        *             Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, ListWebsiteCertificateAuthoritiesCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, ListWebsiteCertificateAuthoritiesCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new ListWebsiteCertificateAuthoritiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListWebsiteCertificateAuthoritiesCommandInput} for command's `input` shape.
        * @see {@link ListWebsiteCertificateAuthoritiesCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class ListWebsiteCertificateAuthoritiesCommand extends $Command<ListWebsiteCertificateAuthoritiesCommandInput, ListWebsiteCertificateAuthoritiesCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: ListWebsiteCertificateAuthoritiesCommandInput;
            constructor(input: ListWebsiteCertificateAuthoritiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListWebsiteCertificateAuthoritiesCommandInput, ListWebsiteCertificateAuthoritiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RestoreDomainAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RestoreDomainAccessRequest, RestoreDomainAccessResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface RestoreDomainAccessCommandInput extends RestoreDomainAccessRequest {
    }
    export interface RestoreDomainAccessCommandOutput extends RestoreDomainAccessResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Moves a domain to ACTIVE status if it was in the INACTIVE status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, RestoreDomainAccessCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, RestoreDomainAccessCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new RestoreDomainAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RestoreDomainAccessCommandInput} for command's `input` shape.
        * @see {@link RestoreDomainAccessCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class RestoreDomainAccessCommand extends $Command<RestoreDomainAccessCommandInput, RestoreDomainAccessCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: RestoreDomainAccessCommandInput;
            constructor(input: RestoreDomainAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RestoreDomainAccessCommandInput, RestoreDomainAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RevokeDomainAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RevokeDomainAccessRequest, RevokeDomainAccessResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface RevokeDomainAccessCommandInput extends RevokeDomainAccessRequest {
    }
    export interface RevokeDomainAccessCommandOutput extends RevokeDomainAccessResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Moves a domain to INACTIVE status if it was in the ACTIVE status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, RevokeDomainAccessCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, RevokeDomainAccessCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new RevokeDomainAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RevokeDomainAccessCommandInput} for command's `input` shape.
        * @see {@link RevokeDomainAccessCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class RevokeDomainAccessCommand extends $Command<RevokeDomainAccessCommandInput, RevokeDomainAccessCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: RevokeDomainAccessCommandInput;
            constructor(input: RevokeDomainAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RevokeDomainAccessCommandInput, RevokeDomainAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/SignOutUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SignOutUserRequest, SignOutUserResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface SignOutUserCommandInput extends SignOutUserRequest {
    }
    export interface SignOutUserCommandOutput extends SignOutUserResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Signs the user out from all of their devices. The user can sign in again if they have
        *             valid credentials.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, SignOutUserCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, SignOutUserCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new SignOutUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SignOutUserCommandInput} for command's `input` shape.
        * @see {@link SignOutUserCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class SignOutUserCommand extends $Command<SignOutUserCommandInput, SignOutUserCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: SignOutUserCommandInput;
            constructor(input: SignOutUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SignOutUserCommandInput, SignOutUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Adds or overwrites one or more tags for the specified resource, such as a fleet. Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, TagResourceCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, TagResourceCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Removes one or more tags from the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UntagResourceCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UntagResourceCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateAuditStreamConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateAuditStreamConfigurationRequest, UpdateAuditStreamConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateAuditStreamConfigurationCommandInput extends UpdateAuditStreamConfigurationRequest {
    }
    export interface UpdateAuditStreamConfigurationCommandOutput extends UpdateAuditStreamConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates the audit stream configuration for the fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateAuditStreamConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateAuditStreamConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateAuditStreamConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAuditStreamConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateAuditStreamConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateAuditStreamConfigurationCommand extends $Command<UpdateAuditStreamConfigurationCommandInput, UpdateAuditStreamConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateAuditStreamConfigurationCommandInput;
            constructor(input: UpdateAuditStreamConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAuditStreamConfigurationCommandInput, UpdateAuditStreamConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateCompanyNetworkConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateCompanyNetworkConfigurationRequest, UpdateCompanyNetworkConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateCompanyNetworkConfigurationCommandInput extends UpdateCompanyNetworkConfigurationRequest {
    }
    export interface UpdateCompanyNetworkConfigurationCommandOutput extends UpdateCompanyNetworkConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates the company network configuration for the fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateCompanyNetworkConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateCompanyNetworkConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateCompanyNetworkConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateCompanyNetworkConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateCompanyNetworkConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateCompanyNetworkConfigurationCommand extends $Command<UpdateCompanyNetworkConfigurationCommandInput, UpdateCompanyNetworkConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateCompanyNetworkConfigurationCommandInput;
            constructor(input: UpdateCompanyNetworkConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCompanyNetworkConfigurationCommandInput, UpdateCompanyNetworkConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDevicePolicyConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateDevicePolicyConfigurationRequest, UpdateDevicePolicyConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateDevicePolicyConfigurationCommandInput extends UpdateDevicePolicyConfigurationRequest {
    }
    export interface UpdateDevicePolicyConfigurationCommandOutput extends UpdateDevicePolicyConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates the device policy configuration for the fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateDevicePolicyConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateDevicePolicyConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateDevicePolicyConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDevicePolicyConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateDevicePolicyConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateDevicePolicyConfigurationCommand extends $Command<UpdateDevicePolicyConfigurationCommandInput, UpdateDevicePolicyConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateDevicePolicyConfigurationCommandInput;
            constructor(input: UpdateDevicePolicyConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDevicePolicyConfigurationCommandInput, UpdateDevicePolicyConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDomainMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateDomainMetadataRequest, UpdateDomainMetadataResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateDomainMetadataCommandInput extends UpdateDomainMetadataRequest {
    }
    export interface UpdateDomainMetadataCommandOutput extends UpdateDomainMetadataResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates domain metadata, such as DisplayName.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateDomainMetadataCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateDomainMetadataCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateDomainMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDomainMetadataCommandInput} for command's `input` shape.
        * @see {@link UpdateDomainMetadataCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateDomainMetadataCommand extends $Command<UpdateDomainMetadataCommandInput, UpdateDomainMetadataCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateDomainMetadataCommandInput;
            constructor(input: UpdateDomainMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDomainMetadataCommandInput, UpdateDomainMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateFleetMetadataCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateFleetMetadataRequest, UpdateFleetMetadataResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateFleetMetadataCommandInput extends UpdateFleetMetadataRequest {
    }
    export interface UpdateFleetMetadataCommandOutput extends UpdateFleetMetadataResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates fleet metadata, such as DisplayName.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateFleetMetadataCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateFleetMetadataCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateFleetMetadataCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateFleetMetadataCommandInput} for command's `input` shape.
        * @see {@link UpdateFleetMetadataCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateFleetMetadataCommand extends $Command<UpdateFleetMetadataCommandInput, UpdateFleetMetadataCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateFleetMetadataCommandInput;
            constructor(input: UpdateFleetMetadataCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateFleetMetadataCommandInput, UpdateFleetMetadataCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateIdentityProviderConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateIdentityProviderConfigurationRequest, UpdateIdentityProviderConfigurationResponse } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient";
    export interface UpdateIdentityProviderConfigurationCommandInput extends UpdateIdentityProviderConfigurationRequest {
    }
    export interface UpdateIdentityProviderConfigurationCommandOutput extends UpdateIdentityProviderConfigurationResponse, __MetadataBearer {
    }
    /**
        * @deprecated
        *
        * <p>Updates the identity provider configuration for the fleet.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkLinkClient, UpdateIdentityProviderConfigurationCommand } from "@aws-sdk/client-worklink"; // ES Modules import
        * // const { WorkLinkClient, UpdateIdentityProviderConfigurationCommand } = require("@aws-sdk/client-worklink"); // CommonJS import
        * const client = new WorkLinkClient(config);
        * const command = new UpdateIdentityProviderConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateIdentityProviderConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateIdentityProviderConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkLinkClientResolvedConfig | config} for WorkLinkClient's `config` shape.
        *
        */
    export class UpdateIdentityProviderConfigurationCommand extends $Command<UpdateIdentityProviderConfigurationCommandInput, UpdateIdentityProviderConfigurationCommandOutput, WorkLinkClientResolvedConfig> {
            readonly input: UpdateIdentityProviderConfigurationCommandInput;
            constructor(input: UpdateIdentityProviderConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkLinkClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateIdentityProviderConfigurationCommandInput, UpdateIdentityProviderConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/WorkLinkClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateDomainCommandInput, AssociateDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateDomainCommand";
    import { AssociateWebsiteAuthorizationProviderCommandInput, AssociateWebsiteAuthorizationProviderCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteAuthorizationProviderCommand";
    import { AssociateWebsiteCertificateAuthorityCommandInput, AssociateWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/AssociateWebsiteCertificateAuthorityCommand";
    import { CreateFleetCommandInput, CreateFleetCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/CreateFleetCommand";
    import { DeleteFleetCommandInput, DeleteFleetCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DeleteFleetCommand";
    import { DescribeAuditStreamConfigurationCommandInput, DescribeAuditStreamConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeAuditStreamConfigurationCommand";
    import { DescribeCompanyNetworkConfigurationCommandInput, DescribeCompanyNetworkConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeCompanyNetworkConfigurationCommand";
    import { DescribeDeviceCommandInput, DescribeDeviceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDeviceCommand";
    import { DescribeDevicePolicyConfigurationCommandInput, DescribeDevicePolicyConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDevicePolicyConfigurationCommand";
    import { DescribeDomainCommandInput, DescribeDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeDomainCommand";
    import { DescribeFleetMetadataCommandInput, DescribeFleetMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeFleetMetadataCommand";
    import { DescribeIdentityProviderConfigurationCommandInput, DescribeIdentityProviderConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeIdentityProviderConfigurationCommand";
    import { DescribeWebsiteCertificateAuthorityCommandInput, DescribeWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DescribeWebsiteCertificateAuthorityCommand";
    import { DisassociateDomainCommandInput, DisassociateDomainCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateDomainCommand";
    import { DisassociateWebsiteAuthorizationProviderCommandInput, DisassociateWebsiteAuthorizationProviderCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteAuthorizationProviderCommand";
    import { DisassociateWebsiteCertificateAuthorityCommandInput, DisassociateWebsiteCertificateAuthorityCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/DisassociateWebsiteCertificateAuthorityCommand";
    import { ListDevicesCommandInput, ListDevicesCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDevicesCommand";
    import { ListDomainsCommandInput, ListDomainsCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListDomainsCommand";
    import { ListFleetsCommandInput, ListFleetsCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListFleetsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebsiteAuthorizationProvidersCommandInput, ListWebsiteAuthorizationProvidersCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteAuthorizationProvidersCommand";
    import { ListWebsiteCertificateAuthoritiesCommandInput, ListWebsiteCertificateAuthoritiesCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/ListWebsiteCertificateAuthoritiesCommand";
    import { RestoreDomainAccessCommandInput, RestoreDomainAccessCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RestoreDomainAccessCommand";
    import { RevokeDomainAccessCommandInput, RevokeDomainAccessCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/RevokeDomainAccessCommand";
    import { SignOutUserCommandInput, SignOutUserCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/SignOutUserCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UntagResourceCommand";
    import { UpdateAuditStreamConfigurationCommandInput, UpdateAuditStreamConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateAuditStreamConfigurationCommand";
    import { UpdateCompanyNetworkConfigurationCommandInput, UpdateCompanyNetworkConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateCompanyNetworkConfigurationCommand";
    import { UpdateDevicePolicyConfigurationCommandInput, UpdateDevicePolicyConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDevicePolicyConfigurationCommand";
    import { UpdateDomainMetadataCommandInput, UpdateDomainMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateDomainMetadataCommand";
    import { UpdateFleetMetadataCommandInput, UpdateFleetMetadataCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateFleetMetadataCommand";
    import { UpdateIdentityProviderConfigurationCommandInput, UpdateIdentityProviderConfigurationCommandOutput } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/commands/UpdateIdentityProviderConfigurationCommand";
    export type ServiceInputTypes = AssociateDomainCommandInput | AssociateWebsiteAuthorizationProviderCommandInput | AssociateWebsiteCertificateAuthorityCommandInput | CreateFleetCommandInput | DeleteFleetCommandInput | DescribeAuditStreamConfigurationCommandInput | DescribeCompanyNetworkConfigurationCommandInput | DescribeDeviceCommandInput | DescribeDevicePolicyConfigurationCommandInput | DescribeDomainCommandInput | DescribeFleetMetadataCommandInput | DescribeIdentityProviderConfigurationCommandInput | DescribeWebsiteCertificateAuthorityCommandInput | DisassociateDomainCommandInput | DisassociateWebsiteAuthorizationProviderCommandInput | DisassociateWebsiteCertificateAuthorityCommandInput | ListDevicesCommandInput | ListDomainsCommandInput | ListFleetsCommandInput | ListTagsForResourceCommandInput | ListWebsiteAuthorizationProvidersCommandInput | ListWebsiteCertificateAuthoritiesCommandInput | RestoreDomainAccessCommandInput | RevokeDomainAccessCommandInput | SignOutUserCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAuditStreamConfigurationCommandInput | UpdateCompanyNetworkConfigurationCommandInput | UpdateDevicePolicyConfigurationCommandInput | UpdateDomainMetadataCommandInput | UpdateFleetMetadataCommandInput | UpdateIdentityProviderConfigurationCommandInput;
    export type ServiceOutputTypes = AssociateDomainCommandOutput | AssociateWebsiteAuthorizationProviderCommandOutput | AssociateWebsiteCertificateAuthorityCommandOutput | CreateFleetCommandOutput | DeleteFleetCommandOutput | DescribeAuditStreamConfigurationCommandOutput | DescribeCompanyNetworkConfigurationCommandOutput | DescribeDeviceCommandOutput | DescribeDevicePolicyConfigurationCommandOutput | DescribeDomainCommandOutput | DescribeFleetMetadataCommandOutput | DescribeIdentityProviderConfigurationCommandOutput | DescribeWebsiteCertificateAuthorityCommandOutput | DisassociateDomainCommandOutput | DisassociateWebsiteAuthorizationProviderCommandOutput | DisassociateWebsiteCertificateAuthorityCommandOutput | ListDevicesCommandOutput | ListDomainsCommandOutput | ListFleetsCommandOutput | ListTagsForResourceCommandOutput | ListWebsiteAuthorizationProvidersCommandOutput | ListWebsiteCertificateAuthoritiesCommandOutput | RestoreDomainAccessCommandOutput | RevokeDomainAccessCommandOutput | SignOutUserCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAuditStreamConfigurationCommandOutput | UpdateCompanyNetworkConfigurationCommandOutput | UpdateDevicePolicyConfigurationCommandOutput | UpdateDomainMetadataCommandOutput | UpdateFleetMetadataCommandOutput | UpdateIdentityProviderConfigurationCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type WorkLinkClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of WorkLinkClient class constructor that set the region, credentials and other options.
        */
    export interface WorkLinkClientConfig extends WorkLinkClientConfigType {
    }
    type WorkLinkClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of WorkLinkClient class. This is resolved and normalized from the {@link WorkLinkClientConfig | constructor configuration interface}.
        */
    export interface WorkLinkClientResolvedConfig extends WorkLinkClientResolvedConfigType {
    }
    /**
        * <p>Amazon WorkLink is a cloud-based service that provides secure access
        *             to internal websites and web apps from iOS and Android phones. In a single step, your users, such as
        *             employees, can access internal websites as efficiently as they access any other public website.
        *             They enter a URL in their web browser, or choose a link to an internal website in an email. Amazon WorkLink
        *             authenticates the user's access and securely renders authorized internal web content in a secure
        *             rendering service in the AWS cloud. Amazon WorkLink doesn't download or store any internal web content on
        *             mobile devices.</p>
        */
    export class WorkLinkClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, WorkLinkClientResolvedConfig> {
            /**
                * The resolved configuration of WorkLinkClient class. This is resolved and normalized from the {@link WorkLinkClientConfig | constructor configuration interface}.
                */
            readonly config: WorkLinkClientResolvedConfig;
            constructor(configuration: WorkLinkClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { WorkLinkServiceException as __BaseException } from "@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/WorkLinkServiceException";
    export interface AssociateDomainRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The fully qualified domain name (FQDN).</p>
                */
            DomainName: string | undefined;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The ARN of an issued ACM certificate that is valid for the domain being associated.</p>
                */
            AcmCertificateArn: string | undefined;
    }
    export namespace AssociateDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDomainRequest) => any;
    }
    export interface AssociateDomainResponse {
    }
    export namespace AssociateDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDomainResponse) => any;
    }
    /**
        * <p>The service is temporarily unavailable.</p>
        */
    export class InternalServerErrorException extends __BaseException {
            readonly name: "InternalServerErrorException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>);
    }
    /**
        * <p>The request is not valid.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>The resource already exists.</p>
        */
    export class ResourceAlreadyExistsException extends __BaseException {
            readonly name: "ResourceAlreadyExistsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>);
    }
    /**
        * <p>The requested resource was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The number of requests exceeds the limit.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    /**
        * <p>You are not authorized to perform this action.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    export enum AuthorizationProviderType {
            SAML = "SAML"
    }
    export interface AssociateWebsiteAuthorizationProviderRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The authorization provider type.</p>
                */
            AuthorizationProviderType: AuthorizationProviderType | string | undefined;
            /**
                * <p>The domain name of the authorization provider. This applies only to SAML-based
                *             authorization providers.</p>
                */
            DomainName?: string;
    }
    export namespace AssociateWebsiteAuthorizationProviderRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateWebsiteAuthorizationProviderRequest) => any;
    }
    export interface AssociateWebsiteAuthorizationProviderResponse {
            /**
                * <p>A unique identifier for the authorization provider.</p>
                */
            AuthorizationProviderId?: string;
    }
    export namespace AssociateWebsiteAuthorizationProviderResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateWebsiteAuthorizationProviderResponse) => any;
    }
    export interface AssociateWebsiteCertificateAuthorityRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The root certificate of the CA.</p>
                */
            Certificate: string | undefined;
            /**
                * <p>The certificate name to display.</p>
                */
            DisplayName?: string;
    }
    export namespace AssociateWebsiteCertificateAuthorityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateWebsiteCertificateAuthorityRequest) => any;
    }
    export interface AssociateWebsiteCertificateAuthorityResponse {
            /**
                * <p>A unique identifier for the CA.</p>
                */
            WebsiteCaId?: string;
    }
    export namespace AssociateWebsiteCertificateAuthorityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateWebsiteCertificateAuthorityResponse) => any;
    }
    export interface CreateFleetRequest {
            /**
                * <p>A unique name for the fleet.</p>
                */
            FleetName: string | undefined;
            /**
                * <p>The fleet name to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The option to optimize for better performance by routing traffic through the closest
                *             AWS Region to users, which may be outside of your home Region.</p>
                */
            OptimizeForEndUserLocation?: boolean;
            /**
                * <p> The tags to add to the resource. A tag is a key-value pair.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace CreateFleetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFleetRequest) => any;
    }
    export interface CreateFleetResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            FleetArn?: string;
    }
    export namespace CreateFleetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFleetResponse) => any;
    }
    export interface DeleteFleetRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DeleteFleetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFleetRequest) => any;
    }
    export interface DeleteFleetResponse {
    }
    export namespace DeleteFleetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFleetResponse) => any;
    }
    export interface DescribeAuditStreamConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DescribeAuditStreamConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditStreamConfigurationRequest) => any;
    }
    export interface DescribeAuditStreamConfigurationResponse {
            /**
                * <p>The ARN of the Amazon Kinesis data stream that will receive the audit events.</p>
                */
            AuditStreamArn?: string;
    }
    export namespace DescribeAuditStreamConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAuditStreamConfigurationResponse) => any;
    }
    export interface DescribeCompanyNetworkConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DescribeCompanyNetworkConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCompanyNetworkConfigurationRequest) => any;
    }
    export interface DescribeCompanyNetworkConfigurationResponse {
            /**
                * <p>The VPC with connectivity to associated websites.</p>
                */
            VpcId?: string;
            /**
                * <p>The subnets used for X-ENI connections from Amazon WorkLink rendering containers.</p>
                */
            SubnetIds?: string[];
            /**
                * <p>The security groups associated with access to the provided subnets.</p>
                */
            SecurityGroupIds?: string[];
    }
    export namespace DescribeCompanyNetworkConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCompanyNetworkConfigurationResponse) => any;
    }
    export interface DescribeDeviceRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>A unique identifier for a registered user's device.</p>
                */
            DeviceId: string | undefined;
    }
    export namespace DescribeDeviceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDeviceRequest) => any;
    }
    export enum DeviceStatus {
            ACTIVE = "ACTIVE",
            SIGNED_OUT = "SIGNED_OUT"
    }
    export interface DescribeDeviceResponse {
            /**
                * <p>The current state of the device.</p>
                */
            Status?: DeviceStatus | string;
            /**
                * <p>The model of the device.</p>
                */
            Model?: string;
            /**
                * <p>The manufacturer of the device.</p>
                */
            Manufacturer?: string;
            /**
                * <p>The operating system of the device.</p>
                */
            OperatingSystem?: string;
            /**
                * <p>The operating system version of the device.</p>
                */
            OperatingSystemVersion?: string;
            /**
                * <p>The operating system patch level of the device.</p>
                */
            PatchLevel?: string;
            /**
                * <p>The date that the device first signed in to Amazon WorkLink.</p>
                */
            FirstAccessedTime?: Date;
            /**
                * <p>The date that the device last accessed Amazon WorkLink.</p>
                */
            LastAccessedTime?: Date;
            /**
                * <p>The user name associated with the device.</p>
                */
            Username?: string;
    }
    export namespace DescribeDeviceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDeviceResponse) => any;
    }
    export interface DescribeDevicePolicyConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DescribeDevicePolicyConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDevicePolicyConfigurationRequest) => any;
    }
    export interface DescribeDevicePolicyConfigurationResponse {
            /**
                * <p>The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.</p>
                */
            DeviceCaCertificate?: string;
    }
    export namespace DescribeDevicePolicyConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDevicePolicyConfigurationResponse) => any;
    }
    export interface DescribeDomainRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
    }
    export namespace DescribeDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDomainRequest) => any;
    }
    export enum DomainStatus {
            ACTIVE = "ACTIVE",
            ASSOCIATING = "ASSOCIATING",
            DISASSOCIATED = "DISASSOCIATED",
            DISASSOCIATING = "DISASSOCIATING",
            FAILED_TO_ASSOCIATE = "FAILED_TO_ASSOCIATE",
            FAILED_TO_DISASSOCIATE = "FAILED_TO_DISASSOCIATE",
            INACTIVE = "INACTIVE",
            PENDING_VALIDATION = "PENDING_VALIDATION"
    }
    export interface DescribeDomainResponse {
            /**
                * <p>The name of the domain.</p>
                */
            DomainName?: string;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The time that the domain was added.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The current state for the domain.</p>
                */
            DomainStatus?: DomainStatus | string;
            /**
                * <p>The ARN of an issued ACM certificate that is valid for the domain being associated.</p>
                */
            AcmCertificateArn?: string;
    }
    export namespace DescribeDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDomainResponse) => any;
    }
    export interface DescribeFleetMetadataRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DescribeFleetMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFleetMetadataRequest) => any;
    }
    export enum FleetStatus {
            ACTIVE = "ACTIVE",
            CREATING = "CREATING",
            DELETED = "DELETED",
            DELETING = "DELETING",
            FAILED_TO_CREATE = "FAILED_TO_CREATE",
            FAILED_TO_DELETE = "FAILED_TO_DELETE"
    }
    export interface DescribeFleetMetadataResponse {
            /**
                * <p>The time that the fleet was created.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The time that the fleet was last updated.</p>
                */
            LastUpdatedTime?: Date;
            /**
                * <p>The name of the fleet.</p>
                */
            FleetName?: string;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The option to optimize for better performance by routing traffic through the closest
                *             AWS Region to users, which may be outside of your home Region.</p>
                */
            OptimizeForEndUserLocation?: boolean;
            /**
                * <p>The identifier used by users to sign in to the Amazon WorkLink app.</p>
                */
            CompanyCode?: string;
            /**
                * <p>The current state of the fleet.</p>
                */
            FleetStatus?: FleetStatus | string;
            /**
                * <p>The tags attached to the resource. A tag is a key-value pair.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace DescribeFleetMetadataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFleetMetadataResponse) => any;
    }
    export interface DescribeIdentityProviderConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
    }
    export namespace DescribeIdentityProviderConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeIdentityProviderConfigurationRequest) => any;
    }
    export enum IdentityProviderType {
            SAML = "SAML"
    }
    export interface DescribeIdentityProviderConfigurationResponse {
            /**
                * <p>The type of identity provider.</p>
                */
            IdentityProviderType?: IdentityProviderType | string;
            /**
                * <p>The SAML metadata document uploaded to the user’s identity provider.</p>
                */
            ServiceProviderSamlMetadata?: string;
            /**
                * <p>The SAML metadata document provided by the user’s identity provider.</p>
                */
            IdentityProviderSamlMetadata?: string;
    }
    export namespace DescribeIdentityProviderConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeIdentityProviderConfigurationResponse) => any;
    }
    export interface DescribeWebsiteCertificateAuthorityRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>A unique identifier for the certificate authority.</p>
                */
            WebsiteCaId: string | undefined;
    }
    export namespace DescribeWebsiteCertificateAuthorityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeWebsiteCertificateAuthorityRequest) => any;
    }
    export interface DescribeWebsiteCertificateAuthorityResponse {
            /**
                * <p>The root certificate of the certificate authority.</p>
                */
            Certificate?: string;
            /**
                * <p>The time that the certificate authority was added.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The certificate name to display.</p>
                */
            DisplayName?: string;
    }
    export namespace DescribeWebsiteCertificateAuthorityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeWebsiteCertificateAuthorityResponse) => any;
    }
    /**
        * <p>The summary of devices.</p>
        */
    export interface DeviceSummary {
            /**
                * <p>The ID of the device.</p>
                */
            DeviceId?: string;
            /**
                * <p>The status of the device.</p>
                */
            DeviceStatus?: DeviceStatus | string;
    }
    export namespace DeviceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeviceSummary) => any;
    }
    export interface DisassociateDomainRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
    }
    export namespace DisassociateDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateDomainRequest) => any;
    }
    export interface DisassociateDomainResponse {
    }
    export namespace DisassociateDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateDomainResponse) => any;
    }
    export interface DisassociateWebsiteAuthorizationProviderRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>A unique identifier for the authorization provider.</p>
                */
            AuthorizationProviderId: string | undefined;
    }
    export namespace DisassociateWebsiteAuthorizationProviderRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateWebsiteAuthorizationProviderRequest) => any;
    }
    export interface DisassociateWebsiteAuthorizationProviderResponse {
    }
    export namespace DisassociateWebsiteAuthorizationProviderResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateWebsiteAuthorizationProviderResponse) => any;
    }
    export interface DisassociateWebsiteCertificateAuthorityRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>A unique identifier for the CA.</p>
                */
            WebsiteCaId: string | undefined;
    }
    export namespace DisassociateWebsiteCertificateAuthorityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateWebsiteCertificateAuthorityRequest) => any;
    }
    export interface DisassociateWebsiteCertificateAuthorityResponse {
    }
    export namespace DisassociateWebsiteCertificateAuthorityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateWebsiteCertificateAuthorityResponse) => any;
    }
    /**
        * <p>The summary of the domain.</p>
        */
    export interface DomainSummary {
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The time that the domain was created.</p>
                */
            CreatedTime: Date | undefined;
            /**
                * <p>The status of the domain.</p>
                */
            DomainStatus: DomainStatus | string | undefined;
    }
    export namespace DomainSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainSummary) => any;
    }
    /**
        * <p>The summary of the fleet.</p>
        */
    export interface FleetSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            FleetArn?: string;
            /**
                * <p>The time when the fleet was created.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The time when the fleet was last updated.</p>
                */
            LastUpdatedTime?: Date;
            /**
                * <p>The name of the fleet.</p>
                */
            FleetName?: string;
            /**
                * <p>The name of the fleet to display.</p>
                */
            DisplayName?: string;
            /**
                * <p>The identifier used by users to sign into the Amazon WorkLink app.</p>
                */
            CompanyCode?: string;
            /**
                * <p>The status of the fleet.</p>
                */
            FleetStatus?: FleetStatus | string;
            /**
                * <p>The tags attached to the resource. A tag is a key-value pair.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace FleetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FleetSummary) => any;
    }
    export interface ListDevicesRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to be included in the next page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListDevicesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDevicesRequest) => any;
    }
    export interface ListDevicesResponse {
            /**
                * <p>Information about the devices.</p>
                */
            Devices?: DeviceSummary[];
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             there are no more pages, this value is null.</p>
                */
            NextToken?: string;
    }
    export namespace ListDevicesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDevicesResponse) => any;
    }
    export interface ListDomainsRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to be included in the next page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListDomainsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainsRequest) => any;
    }
    export interface ListDomainsResponse {
            /**
                * <p>Information about the domains.</p>
                */
            Domains?: DomainSummary[];
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             there are no more pages, this value is null.</p>
                */
            NextToken?: string;
    }
    export namespace ListDomainsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainsResponse) => any;
    }
    export interface ListFleetsRequest {
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to be included in the next page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListFleetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFleetsRequest) => any;
    }
    export interface ListFleetsResponse {
            /**
                * <p>The summary list of the fleets.</p>
                */
            FleetSummaryList?: FleetSummary[];
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             there are no more pages, this value is null.</p>
                */
            NextToken?: string;
    }
    export namespace ListFleetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFleetsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The tags attached to the resource. A tag is a key-value pair.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListWebsiteAuthorizationProvidersRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to be included in the next page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListWebsiteAuthorizationProvidersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebsiteAuthorizationProvidersRequest) => any;
    }
    /**
        * <p>The summary of the website authorization provider.</p>
        */
    export interface WebsiteAuthorizationProviderSummary {
            /**
                * <p>A unique identifier for the authorization provider.</p>
                */
            AuthorizationProviderId?: string;
            /**
                * <p>The authorization provider type.</p>
                */
            AuthorizationProviderType: AuthorizationProviderType | string | undefined;
            /**
                * <p>The domain name of the authorization provider. This applies only to SAML-based
                *             authorization providers.</p>
                */
            DomainName?: string;
            /**
                * <p>The time of creation.</p>
                */
            CreatedTime?: Date;
    }
    export namespace WebsiteAuthorizationProviderSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WebsiteAuthorizationProviderSummary) => any;
    }
    export interface ListWebsiteAuthorizationProvidersResponse {
            /**
                * <p>The website authorization providers.</p>
                */
            WebsiteAuthorizationProviders?: WebsiteAuthorizationProviderSummary[];
            /**
                * <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
    }
    export namespace ListWebsiteAuthorizationProvidersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebsiteAuthorizationProvidersResponse) => any;
    }
    export interface ListWebsiteCertificateAuthoritiesRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The maximum number of results to be included in the next page.</p>
                */
            MaxResults?: number;
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             this value is null, it retrieves the first page.</p>
                */
            NextToken?: string;
    }
    export namespace ListWebsiteCertificateAuthoritiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebsiteCertificateAuthoritiesRequest) => any;
    }
    /**
        * <p>The summary of the certificate authority (CA).</p>
        */
    export interface WebsiteCaSummary {
            /**
                * <p>A unique identifier for the CA.</p>
                */
            WebsiteCaId?: string;
            /**
                * <p>The time when the CA was added.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
    }
    export namespace WebsiteCaSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WebsiteCaSummary) => any;
    }
    export interface ListWebsiteCertificateAuthoritiesResponse {
            /**
                * <p>Information about the certificates.</p>
                */
            WebsiteCertificateAuthorities?: WebsiteCaSummary[];
            /**
                * <p>The pagination token used to retrieve the next page of results for this operation. If
                *             there are no more pages, this value is null.</p>
                */
            NextToken?: string;
    }
    export namespace ListWebsiteCertificateAuthoritiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebsiteCertificateAuthoritiesResponse) => any;
    }
    export interface RestoreDomainAccessRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
    }
    export namespace RestoreDomainAccessRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RestoreDomainAccessRequest) => any;
    }
    export interface RestoreDomainAccessResponse {
    }
    export namespace RestoreDomainAccessResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RestoreDomainAccessResponse) => any;
    }
    export interface RevokeDomainAccessRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
    }
    export namespace RevokeDomainAccessRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevokeDomainAccessRequest) => any;
    }
    export interface RevokeDomainAccessResponse {
    }
    export namespace RevokeDomainAccessResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RevokeDomainAccessResponse) => any;
    }
    export interface SignOutUserRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the user.</p>
                */
            Username: string | undefined;
    }
    export namespace SignOutUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SignOutUserRequest) => any;
    }
    export interface SignOutUserResponse {
    }
    export namespace SignOutUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SignOutUserResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The tags to add to the resource. A tag is a key-value pair.</p>
                */
            Tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the fleet.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The list of tag keys to remove from the resource.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateAuditStreamConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The ARN of the Amazon Kinesis data stream that receives the audit events.</p>
                */
            AuditStreamArn?: string;
    }
    export namespace UpdateAuditStreamConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuditStreamConfigurationRequest) => any;
    }
    export interface UpdateAuditStreamConfigurationResponse {
    }
    export namespace UpdateAuditStreamConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAuditStreamConfigurationResponse) => any;
    }
    export interface UpdateCompanyNetworkConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The VPC with connectivity to associated websites.</p>
                */
            VpcId: string | undefined;
            /**
                * <p>The subnets used for X-ENI connections from Amazon WorkLink rendering containers.</p>
                */
            SubnetIds: string[] | undefined;
            /**
                * <p>The security groups associated with access to the provided subnets.</p>
                */
            SecurityGroupIds: string[] | undefined;
    }
    export namespace UpdateCompanyNetworkConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCompanyNetworkConfigurationRequest) => any;
    }
    export interface UpdateCompanyNetworkConfigurationResponse {
    }
    export namespace UpdateCompanyNetworkConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCompanyNetworkConfigurationResponse) => any;
    }
    export interface UpdateDevicePolicyConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.</p>
                */
            DeviceCaCertificate?: string;
    }
    export namespace UpdateDevicePolicyConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDevicePolicyConfigurationRequest) => any;
    }
    export interface UpdateDevicePolicyConfigurationResponse {
    }
    export namespace UpdateDevicePolicyConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDevicePolicyConfigurationResponse) => any;
    }
    export interface UpdateDomainMetadataRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The name of the domain.</p>
                */
            DomainName: string | undefined;
            /**
                * <p>The name to display.</p>
                */
            DisplayName?: string;
    }
    export namespace UpdateDomainMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainMetadataRequest) => any;
    }
    export interface UpdateDomainMetadataResponse {
    }
    export namespace UpdateDomainMetadataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDomainMetadataResponse) => any;
    }
    export interface UpdateFleetMetadataRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The fleet name to display. The existing DisplayName is unset if null is passed.</p>
                */
            DisplayName?: string;
            /**
                * <p>The option to optimize for better performance by routing traffic through the closest
                *             AWS Region to users, which may be outside of your home Region.</p>
                */
            OptimizeForEndUserLocation?: boolean;
    }
    export namespace UpdateFleetMetadataRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateFleetMetadataRequest) => any;
    }
    export interface UpdateFleetMetadataResponse {
    }
    export namespace UpdateFleetMetadataResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateFleetMetadataResponse) => any;
    }
    export interface UpdateIdentityProviderConfigurationRequest {
            /**
                * <p>The ARN of the fleet.</p>
                */
            FleetArn: string | undefined;
            /**
                * <p>The type of identity provider.</p>
                */
            IdentityProviderType: IdentityProviderType | string | undefined;
            /**
                * <p>The SAML metadata document provided by the customer’s identity provider. The existing
                *             IdentityProviderSamlMetadata is unset if null is passed.</p>
                */
            IdentityProviderSamlMetadata?: string;
    }
    export namespace UpdateIdentityProviderConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIdentityProviderConfigurationRequest) => any;
    }
    export interface UpdateIdentityProviderConfigurationResponse {
    }
    export namespace UpdateIdentityProviderConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIdentityProviderConfigurationResponse) => any;
    }
}

declare module '@aws-sdk/client-worklink/node_modules/@aws-sdk/client-worklink/dist-types/models/WorkLinkServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from WorkLink service.
        */
    export class WorkLinkServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

