// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-organizations' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptHandshakeCommandInput, AcceptHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AcceptHandshakeCommand";
    import { AttachPolicyCommandInput, AttachPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AttachPolicyCommand";
    import { CancelHandshakeCommandInput, CancelHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CancelHandshakeCommand";
    import { CloseAccountCommandInput, CloseAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CloseAccountCommand";
    import { CreateAccountCommandInput, CreateAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateAccountCommand";
    import { CreateGovCloudAccountCommandInput, CreateGovCloudAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateGovCloudAccountCommand";
    import { CreateOrganizationalUnitCommandInput, CreateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationalUnitCommand";
    import { CreateOrganizationCommandInput, CreateOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationCommand";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreatePolicyCommand";
    import { DeclineHandshakeCommandInput, DeclineHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeclineHandshakeCommand";
    import { DeleteOrganizationalUnitCommandInput, DeleteOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationalUnitCommand";
    import { DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationCommand";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeletePolicyCommand";
    import { DeregisterDelegatedAdministratorCommandInput, DeregisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeregisterDelegatedAdministratorCommand";
    import { DescribeAccountCommandInput, DescribeAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeAccountCommand";
    import { DescribeCreateAccountStatusCommandInput, DescribeCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeCreateAccountStatusCommand";
    import { DescribeEffectivePolicyCommandInput, DescribeEffectivePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeEffectivePolicyCommand";
    import { DescribeHandshakeCommandInput, DescribeHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeHandshakeCommand";
    import { DescribeOrganizationalUnitCommandInput, DescribeOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationalUnitCommand";
    import { DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationCommand";
    import { DescribePolicyCommandInput, DescribePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribePolicyCommand";
    import { DetachPolicyCommandInput, DetachPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DetachPolicyCommand";
    import { DisableAWSServiceAccessCommandInput, DisableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisableAWSServiceAccessCommand";
    import { DisablePolicyTypeCommandInput, DisablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisablePolicyTypeCommand";
    import { EnableAllFeaturesCommandInput, EnableAllFeaturesCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAllFeaturesCommand";
    import { EnableAWSServiceAccessCommandInput, EnableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAWSServiceAccessCommand";
    import { EnablePolicyTypeCommandInput, EnablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnablePolicyTypeCommand";
    import { InviteAccountToOrganizationCommandInput, InviteAccountToOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/InviteAccountToOrganizationCommand";
    import { LeaveOrganizationCommandInput, LeaveOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/LeaveOrganizationCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsCommand";
    import { ListAccountsForParentCommandInput, ListAccountsForParentCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsForParentCommand";
    import { ListAWSServiceAccessForOrganizationCommandInput, ListAWSServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAWSServiceAccessForOrganizationCommand";
    import { ListChildrenCommandInput, ListChildrenCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListChildrenCommand";
    import { ListCreateAccountStatusCommandInput, ListCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListCreateAccountStatusCommand";
    import { ListDelegatedAdministratorsCommandInput, ListDelegatedAdministratorsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedAdministratorsCommand";
    import { ListDelegatedServicesForAccountCommandInput, ListDelegatedServicesForAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedServicesForAccountCommand";
    import { ListHandshakesForAccountCommandInput, ListHandshakesForAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForAccountCommand";
    import { ListHandshakesForOrganizationCommandInput, ListHandshakesForOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForOrganizationCommand";
    import { ListOrganizationalUnitsForParentCommandInput, ListOrganizationalUnitsForParentCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListOrganizationalUnitsForParentCommand";
    import { ListParentsCommandInput, ListParentsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListParentsCommand";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesCommand";
    import { ListPoliciesForTargetCommandInput, ListPoliciesForTargetCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesForTargetCommand";
    import { ListRootsCommandInput, ListRootsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListRootsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTagsForResourceCommand";
    import { ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTargetsForPolicyCommand";
    import { MoveAccountCommandInput, MoveAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/MoveAccountCommand";
    import { RegisterDelegatedAdministratorCommandInput, RegisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RegisterDelegatedAdministratorCommand";
    import { RemoveAccountFromOrganizationCommandInput, RemoveAccountFromOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RemoveAccountFromOrganizationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UntagResourceCommand";
    import { UpdateOrganizationalUnitCommandInput, UpdateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdateOrganizationalUnitCommand";
    import { UpdatePolicyCommandInput, UpdatePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdatePolicyCommand";
    import { OrganizationsClient } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    /**
        * <p>Organizations is a web service that enables you to consolidate your multiple
        *             Amazon Web Services accounts into an <i>organization</i> and centrally manage your
        *             accounts and their resources.</p>
        *         <p>This guide provides descriptions of the Organizations operations. For more
        *             information about using this service, see the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html">Organizations User Guide</a>.</p>
        *         <p>
        *             <b>Support and feedback for Organizations</b>
        *          </p>
        *         <p>We welcome your feedback. Send your comments to <a href="mailto:feedback-awsorganizations@amazon.com">feedback-awsorganizations@amazon.com</a> or post your feedback and questions in
        *             the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=219">Organizations support forum</a>. For
        *             more information about the Amazon Web Services support forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums Help</a>.</p>
        *         <p>
        *             <b>Endpoint to call When using the CLI or the Amazon Web Services
        *                 SDK</b>
        *          </p>
        *         <p>For the current release of Organizations, specify the <code>us-east-1</code> region
        *             for all Amazon Web Services API and CLI calls made from the commercial Amazon Web Services Regions outside of
        *             China. If calling from one of the Amazon Web Services Regions in China, then specify
        *                 <code>cn-northwest-1</code>. You can do this in the CLI by using these parameters
        *             and commands:</p>
        *         <ul>
        *             <li>
        *                 <p>Use the following parameter with each command to specify both the endpoint and
        *                     its region:</p>
        *                 <p>
        *                   <code>--endpoint-url https://organizations.us-east-1.amazonaws.com</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>--endpoint-url
        *                         https://organizations.cn-northwest-1.amazonaws.com.cn</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>Use the default endpoint, but configure your default region with this
        *                     command:</p>
        *                 <p>
        *                   <code>aws configure set default.region us-east-1</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>aws configure set default.region cn-northwest-1</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>Use the following parameter with each command to specify the endpoint:</p>
        *                 <p>
        *                   <code>--region us-east-1</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>--region cn-northwest-1</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>
        *             <b>Recording API Requests</b>
        *         </p>
        *         <p>Organizations supports CloudTrail, a service that records Amazon Web Services API calls for your
        *             Amazon Web Services account and delivers log files to an Amazon S3 bucket. By using information collected
        *             by CloudTrail, you can determine which requests the Organizations service received, who made the
        *             request and when, and so on. For more about Organizations and its support for CloudTrail, see
        *                 <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_incident-response.html#orgs_cloudtrail-integration">Logging
        *                 Organizations Events with CloudTrail</a> in the <i>Organizations User Guide</i>.
        *             To learn more about CloudTrail, including how to turn it on and find your log files, see the
        *                 <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">CloudTrail User Guide</a>.</p>
        */
    export class Organizations extends OrganizationsClient {
            /**
                * <p>Sends a response to the originator of a handshake agreeing to the action proposed by
                *             the handshake request.</p>
                *         <p>This operation can be called only by the following principals when they also have the
                *             relevant IAM permissions:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>Invitation to join</b> or <b>Approve all features request</b> handshakes: only a principal from
                *                     the member account.</p>
                *                 <p>The user who calls the API for an invitation to join must have the
                *                         <code>organizations:AcceptHandshake</code> permission. If you enabled all
                *                     features in the organization, the user must also have the
                *                         <code>iam:CreateServiceLinkedRole</code> permission so that Organizations can
                *                     create the required service-linked role named <code>AWSServiceRoleForOrganizations</code>. For
                *                     more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integration_services.html#orgs_integration_service-linked-roles">Organizations and Service-Linked Roles</a> in the
                *                         <i>Organizations User Guide</i>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>Enable all features final confirmation</b>
                *                     handshake: only a principal from the management account.</p>
                *                 <p>For more information about invitations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_invites.html">Inviting an
                *                         Amazon Web Services account to join your organization</a> in the
                *                         <i>Organizations User Guide.</i> For more information about requests to
                *                     enable all features in the organization, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling all features in your organization</a> in
                *                     the <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <p>After you accept a handshake, it continues to appear in the results of relevant APIs
                *             for only 30 days. After that, it's deleted.</p>
                */
            acceptHandshake(args: AcceptHandshakeCommandInput, options?: __HttpHandlerOptions): Promise<AcceptHandshakeCommandOutput>;
            acceptHandshake(args: AcceptHandshakeCommandInput, cb: (err: any, data?: AcceptHandshakeCommandOutput) => void): void;
            acceptHandshake(args: AcceptHandshakeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptHandshakeCommandOutput) => void): void;
            /**
                * <p>Attaches a policy to a root, an organizational unit (OU), or an individual account.
                *             How the policy affects accounts depends on the type of policy. Refer to the
                *                 <i>Organizations User Guide</i> for information about each policy type:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            attachPolicy(args: AttachPolicyCommandInput, options?: __HttpHandlerOptions): Promise<AttachPolicyCommandOutput>;
            attachPolicy(args: AttachPolicyCommandInput, cb: (err: any, data?: AttachPolicyCommandOutput) => void): void;
            attachPolicy(args: AttachPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AttachPolicyCommandOutput) => void): void;
            /**
                * <p>Cancels a handshake. Canceling a handshake sets the handshake state to
                *                 <code>CANCELED</code>.</p>
                *         <p>This operation can be called only from the account that originated the handshake. The recipient of the handshake can't cancel it, but can use <a>DeclineHandshake</a> instead. After a handshake is canceled, the recipient
                *             can no longer respond to that handshake.</p>
                *         <p>After you cancel a handshake, it continues to appear in the results of relevant APIs
                *             for only 30 days. After that, it's deleted.</p>
                */
            cancelHandshake(args: CancelHandshakeCommandInput, options?: __HttpHandlerOptions): Promise<CancelHandshakeCommandOutput>;
            cancelHandshake(args: CancelHandshakeCommandInput, cb: (err: any, data?: CancelHandshakeCommandOutput) => void): void;
            cancelHandshake(args: CancelHandshakeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelHandshakeCommandOutput) => void): void;
            /**
                * <p>Closes an Amazon Web Services member account within an organization. You can't close the management
                *             account with this API. This is an asynchronous request that Amazon Web Services performs in the
                *             background. Because <code>CloseAccount</code> operates asynchronously, it can return a
                *             successful completion message even though account closure might still be in progress.
                *             You need to wait a few minutes before the account is fully closed. To check the status
                *             of the request, do one of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Use the <code>AccountId</code> that you sent in the <code>CloseAccount</code>
                *                     request to provide as a parameter to the <a>DescribeAccount</a>
                *                     operation. </p>
                *                 <p>While the close account request is in progress, Account status will indicate
                *                     PENDING_CLOSURE. When the close account request completes, the status will
                *                     change to SUSPENDED. </p>
                *             </li>
                *             <li>
                *                 <p>Check the CloudTrail log for the <code>CloseAccountResult</code> event that gets
                *                     published after the account closes successfully. For information on using CloudTrail
                *                     with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging and monitoring in Organizations</a> in the
                *                         <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You can only close 10% of active member accounts within a rolling 30 day
                *                         period. This quota is not bound by a calendar month, but starts when you
                *                         close an account. Within 30 days of that initial account closure, you can't
                *                         exceed the 10% account closure limit.</p>
                *                 </li>
                *                <li>
                *                     <p>To reinstate a closed account, contact Amazon Web Services Support within the 90-day
                *                         grace period while the account is in SUSPENDED status. </p>
                *                 </li>
                *                <li>
                *                     <p>If the Amazon Web Services account you attempt to close is linked to an Amazon Web Services GovCloud (US)
                *                         account, the <code>CloseAccount</code> request will close both accounts. To
                *                         learn important pre-closure details, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/Closing-govcloud-account.html">
                *                             Closing an Amazon Web Services GovCloud (US) account</a> in the <i>
                *                             Amazon Web Services GovCloud User Guide</i>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                *         <p>For more information about closing accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
                *                 Amazon Web Services account</a> in the <i>Organizations User Guide.</i>
                *          </p>
                */
            closeAccount(args: CloseAccountCommandInput, options?: __HttpHandlerOptions): Promise<CloseAccountCommandOutput>;
            closeAccount(args: CloseAccountCommandInput, cb: (err: any, data?: CloseAccountCommandOutput) => void): void;
            closeAccount(args: CloseAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CloseAccountCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Web Services account that is automatically a member of the organization whose
                *             credentials made the request. This is an asynchronous request that Amazon Web Services performs in the
                *             background. Because <code>CreateAccount</code> operates asynchronously, it can return a
                *             successful completion message even though account initialization might still be in
                *             progress. You might need to wait a few minutes before you can successfully access the
                *             account. To check the status of the request, do one of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Use the <code>Id</code> member of the <code>CreateAccountStatus</code>
                *                     response element from this operation to provide as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p>
                *             </li>
                *             <li>
                *                 <p>Check the CloudTrail log for the <code>CreateAccountResult</code> event. For
                *                     information on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging and monitoring in Organizations</a> in the
                *                         <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <p>The user who calls the API to create an account must have the
                *                 <code>organizations:CreateAccount</code> permission. If you enabled all features in
                *             the organization, Organizations creates the required service-linked role named
                *                 <code>AWSServiceRoleForOrganizations</code>. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations and Service-Linked Roles</a> in the
                *                 <i>Organizations User Guide</i>.</p>
                *         <p>If the request includes tags, then the requester must have the
                *                 <code>organizations:TagResource</code> permission.</p>
                *         <p>Organizations preconfigures the new member account with a role (named
                *                 <code>OrganizationAccountAccessRole</code> by default) that grants users in the
                *             management account administrator permissions in the new member account. Principals in
                *             the management account can assume the role. Organizations clones the company name and address
                *             information for the new account from the organization's management account.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                *         <p>For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating an Amazon Web Services account in
                *                 Your Organization</a> in the <i>Organizations User Guide.</i>
                *          </p>
                *         <important>
                *             <ul>
                *                <li>
                *                     <p>When you create an account in an organization using the Organizations console,
                *                         API, or CLI commands, the information required for the account to operate
                *                         as a standalone account, such as a payment method and signing the end user
                *                         license agreement (EULA) is <i>not</i> automatically
                *                         collected. If you must remove an account from your organization later, you
                *                         can do so only after you provide the missing information. Follow the steps
                *                         at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization as a member account</a> in the
                *                             <i>Organizations User Guide</i>.</p>
                *                 </li>
                *                <li>
                *                     <p>If you get an exception that indicates that you exceeded your account
                *                         limits for the organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>If you get an exception that indicates that the operation failed because
                *                         your organization is still initializing, wait one hour and then try again.
                *                         If the error persists, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>Using <code>CreateAccount</code> to create multiple temporary accounts
                *                         isn't recommended. You can only close an account from the Billing and Cost Management console, and
                *                         you must be signed in as the root user. For information on the requirements
                *                         and process for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
                *                             Amazon Web Services account</a> in the
                *                         <i>Organizations User Guide</i>.</p>
                *                 </li>
                *             </ul>
                *         </important>
                *         <note>
                *             <p>When you create a member account with this operation, you can choose whether to
                *                 create the account with the <b>IAM User and Role Access to
                *                     Billing Information</b> switch enabled. If you enable it, IAM users and
                *                 roles that have appropriate permissions can view billing information for the
                *                 account. If you disable it, only the account root user can access billing
                *                 information. For information about how to disable this switch for an account, see
                *                     <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
                *                     Access to Your Billing Information and Tools</a>.</p>
                *         </note>
                */
            createAccount(args: CreateAccountCommandInput, options?: __HttpHandlerOptions): Promise<CreateAccountCommandOutput>;
            createAccount(args: CreateAccountCommandInput, cb: (err: any, data?: CreateAccountCommandOutput) => void): void;
            createAccount(args: CreateAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAccountCommandOutput) => void): void;
            /**
                * <p>This action is available if all of the following are true:</p>
                *         <ul>
                *             <li>
                *                 <p>You're authorized to create accounts in the Amazon Web Services GovCloud (US) Region. For
                *                     more information on the Amazon Web Services GovCloud (US) Region, see the <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.html">
                *                      <i>Amazon Web Services GovCloud User Guide</i>.</a>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>You already have an account in the Amazon Web Services GovCloud (US) Region that is paired
                *                     with a management account of an organization in the commercial Region.</p>
                *             </li>
                *             <li>
                *                 <p>You call this action from the management account of your organization in the
                *                     commercial Region.</p>
                *             </li>
                *             <li>
                *                 <p>You have the <code>organizations:CreateGovCloudAccount</code> permission.
                *                 </p>
                *             </li>
                *          </ul>
                *         <p>Organizations automatically creates the required service-linked role named
                *                 <code>AWSServiceRoleForOrganizations</code>. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations and Service-Linked Roles</a> in the
                *                 <i>Organizations User Guide.</i>
                *          </p>
                *         <p>Amazon Web Services automatically enables CloudTrail for Amazon Web Services GovCloud (US) accounts, but you should also
                *             do the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Verify that CloudTrail is enabled to store logs.</p>
                *             </li>
                *             <li>
                *                 <p>Create an Amazon S3 bucket for CloudTrail log storage.</p>
                *                 <p>For more information, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/verifying-cloudtrail.html">Verifying CloudTrail Is
                *                         Enabled</a> in the <i>Amazon Web Services GovCloud User Guide</i>.
                *                 </p>
                *             </li>
                *          </ul>
                *         <p>If the request includes tags, then the requester must have the
                *                 <code>organizations:TagResource</code> permission. The tags are attached to the
                *             commercial account associated with the GovCloud account, rather than the GovCloud
                *             account itself. To add tags to the GovCloud account, call the <a>TagResource</a> operation in the GovCloud Region after the new GovCloud
                *             account exists.</p>
                *         <p>You call this action from the management account of your organization in the
                *             commercial Region to create a standalone Amazon Web Services account in the Amazon Web Services GovCloud (US)
                *             Region. After the account is created, the management account of an organization in the
                *             Amazon Web Services GovCloud (US) Region can invite it to that organization. For more information on
                *             inviting standalone accounts in the Amazon Web Services GovCloud (US) to join an organization, see
                *                 <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a> in the
                *                 <i>Amazon Web Services GovCloud User Guide.</i>
                *          </p>
                *         <p>Calling <code>CreateGovCloudAccount</code> is an asynchronous request that Amazon Web Services
                *             performs in the background. Because <code>CreateGovCloudAccount</code> operates
                *             asynchronously, it can return a successful completion message even though account
                *             initialization might still be in progress. You might need to wait a few minutes before
                *             you can successfully access the account. To check the status of the request, do one of
                *             the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Use the <code>OperationId</code> response element from this operation to
                *                     provide as a parameter to the <a>DescribeCreateAccountStatus</a>
                *                     operation.</p>
                *             </li>
                *             <li>
                *                 <p>Check the CloudTrail log for the <code>CreateAccountResult</code> event. For
                *                     information on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html">Monitoring the Activity in Your
                *                         Organization</a> in the <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <p></p>
                *         <p>When you call the <code>CreateGovCloudAccount</code> action, you create two accounts:
                *             a standalone account in the Amazon Web Services GovCloud (US) Region and an associated account in the
                *             commercial Region for billing and support purposes. The account in the commercial Region
                *             is automatically a member of the organization whose credentials made the request. Both
                *             accounts are associated with the same email address.</p>
                *         <p>A role is created in the new account in the commercial Region that allows the
                *             management account in the organization in the commercial Region to assume it. An Amazon Web Services
                *             GovCloud (US) account is then created and associated with the commercial account that
                *             you just created. A role is also created in the new Amazon Web Services GovCloud (US) account that can
                *             be assumed by the Amazon Web Services GovCloud (US) account that is associated with the management
                *             account of the commercial organization. For more information and to view a diagram that
                *             explains how account access works, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a> in the
                *                 <i>Amazon Web Services GovCloud User Guide.</i>
                *          </p>
                *
                *
                *         <p>For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating
                *                 an Amazon Web Services account in Your Organization</a> in the
                *                 <i>Organizations User Guide.</i>
                *          </p>
                *         <important>
                *             <ul>
                *                <li>
                *                     <p>When you create an account in an organization using the Organizations console,
                *                         API, or CLI commands, the information required for the account to operate as
                *                         a standalone account is <i>not</i> automatically collected.
                *                         This includes a payment method and signing the end user license agreement
                *                         (EULA). If you must remove an account from your organization later, you can
                *                         do so only after you provide the missing information. Follow the steps at
                *                             <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization as a member account</a> in the
                *                             <i>Organizations User Guide.</i>
                *                   </p>
                *                 </li>
                *                <li>
                *                     <p>If you get an exception that indicates that you exceeded your account
                *                         limits for the organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>If you get an exception that indicates that the operation failed because
                *                         your organization is still initializing, wait one hour and then try again.
                *                         If the error persists, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>Using <code>CreateGovCloudAccount</code> to create multiple temporary
                *                         accounts isn't recommended. You can only close an account from the Amazon Web Services
                *                         Billing and Cost Management console, and you must be signed in as the root user. For information on
                *                         the requirements and process for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
                *                             Amazon Web Services account</a> in the
                *                         <i>Organizations User Guide</i>.</p>
                *                 </li>
                *             </ul>
                *         </important>
                *         <note>
                *             <p>When you create a member account with this operation, you can choose whether to
                *                 create the account with the <b>IAM User and Role Access to
                *                     Billing Information</b> switch enabled. If you enable it, IAM users and
                *                 roles that have appropriate permissions can view billing information for the
                *                 account. If you disable it, only the account root user can access billing
                *                 information. For information about how to disable this switch for an account, see
                *                     <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
                *                     Access to Your Billing Information and Tools</a>.</p>
                *         </note>
                */
            createGovCloudAccount(args: CreateGovCloudAccountCommandInput, options?: __HttpHandlerOptions): Promise<CreateGovCloudAccountCommandOutput>;
            createGovCloudAccount(args: CreateGovCloudAccountCommandInput, cb: (err: any, data?: CreateGovCloudAccountCommandOutput) => void): void;
            createGovCloudAccount(args: CreateGovCloudAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateGovCloudAccountCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Web Services organization. The account whose user is calling the
                *                 <code>CreateOrganization</code> operation automatically becomes the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">management account</a> of the new organization.</p>
                *         <p>This operation must be called using credentials from the account that is to become the
                *             new organization's management account. The principal must also have the relevant IAM
                *             permissions.</p>
                *         <p>By default (or if you set the <code>FeatureSet</code> parameter to <code>ALL</code>),
                *             the new organization is created with all features enabled and service control policies
                *             automatically enabled in the root. If you instead choose to create the organization
                *             supporting only the consolidated billing features by setting the <code>FeatureSet</code>
                *             parameter to <code>CONSOLIDATED_BILLING"</code>, no policy types are enabled by default,
                *             and you can't use organization policies</p>
                */
            createOrganization(args: CreateOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<CreateOrganizationCommandOutput>;
            createOrganization(args: CreateOrganizationCommandInput, cb: (err: any, data?: CreateOrganizationCommandOutput) => void): void;
            createOrganization(args: CreateOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateOrganizationCommandOutput) => void): void;
            /**
                * <p>Creates an organizational unit (OU) within a root or parent OU. An OU is a container
                *             for accounts that enables you to organize your accounts to apply policies according to
                *             your business requirements. The number of levels deep that you can nest OUs is dependent
                *             upon the policy types enabled for that root. For service control policies, the limit is
                *             five.</p>
                *         <p>For more information about OUs, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing Organizational Units</a> in the
                *                 <i>Organizations User Guide.</i>
                *          </p>
                *         <p>If the request includes tags, then the requester must have the
                *                 <code>organizations:TagResource</code> permission.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            createOrganizationalUnit(args: CreateOrganizationalUnitCommandInput, options?: __HttpHandlerOptions): Promise<CreateOrganizationalUnitCommandOutput>;
            createOrganizationalUnit(args: CreateOrganizationalUnitCommandInput, cb: (err: any, data?: CreateOrganizationalUnitCommandOutput) => void): void;
            createOrganizationalUnit(args: CreateOrganizationalUnitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateOrganizationalUnitCommandOutput) => void): void;
            /**
                * <p>Creates a policy of a specified type that you can attach to a root, an organizational
                *             unit (OU), or an individual Amazon Web Services account.</p>
                *         <p>For more information about policies and their use, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing
                *                 Organization Policies</a>.</p>
                *         <p>If the request includes tags, then the requester must have the
                *                 <code>organizations:TagResource</code> permission.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            createPolicy(args: CreatePolicyCommandInput, options?: __HttpHandlerOptions): Promise<CreatePolicyCommandOutput>;
            createPolicy(args: CreatePolicyCommandInput, cb: (err: any, data?: CreatePolicyCommandOutput) => void): void;
            createPolicy(args: CreatePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePolicyCommandOutput) => void): void;
            /**
                * <p>Declines a handshake request. This sets the handshake state to <code>DECLINED</code>
                *             and effectively deactivates the request.</p>
                *         <p>This operation can be called only from the account that received the handshake. The originator of the handshake can use <a>CancelHandshake</a>
                *             instead. The originator can't reactivate a declined request, but can reinitiate the
                *             process with a new handshake request.</p>
                *         <p>After you decline a handshake, it continues to appear in the results of relevant APIs
                *             for only 30 days. After that, it's deleted.</p>
                */
            declineHandshake(args: DeclineHandshakeCommandInput, options?: __HttpHandlerOptions): Promise<DeclineHandshakeCommandOutput>;
            declineHandshake(args: DeclineHandshakeCommandInput, cb: (err: any, data?: DeclineHandshakeCommandOutput) => void): void;
            declineHandshake(args: DeclineHandshakeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeclineHandshakeCommandOutput) => void): void;
            /**
                * <p>Deletes the organization. You can delete an organization only by using credentials
                *             from the management account. The organization must be empty of member accounts.</p>
                */
            deleteOrganization(args: DeleteOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteOrganizationCommandOutput>;
            deleteOrganization(args: DeleteOrganizationCommandInput, cb: (err: any, data?: DeleteOrganizationCommandOutput) => void): void;
            deleteOrganization(args: DeleteOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteOrganizationCommandOutput) => void): void;
            /**
                * <p>Deletes an organizational unit (OU) from a root or another OU. You must first remove
                *             all accounts and child OUs from the OU that you want to delete.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            deleteOrganizationalUnit(args: DeleteOrganizationalUnitCommandInput, options?: __HttpHandlerOptions): Promise<DeleteOrganizationalUnitCommandOutput>;
            deleteOrganizationalUnit(args: DeleteOrganizationalUnitCommandInput, cb: (err: any, data?: DeleteOrganizationalUnitCommandOutput) => void): void;
            deleteOrganizationalUnit(args: DeleteOrganizationalUnitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteOrganizationalUnitCommandOutput) => void): void;
            /**
                * <p>Deletes the specified policy from your organization. Before you perform this
                *             operation, you must first detach the policy from all organizational units (OUs), roots,
                *             and accounts.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            deletePolicy(args: DeletePolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeletePolicyCommandOutput>;
            deletePolicy(args: DeletePolicyCommandInput, cb: (err: any, data?: DeletePolicyCommandOutput) => void): void;
            deletePolicy(args: DeletePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePolicyCommandOutput) => void): void;
            /**
                * <p>Removes the specified member Amazon Web Services account as a delegated administrator for the
                *             specified Amazon Web Services service.</p>
                *         <important>
                *             <p>Deregistering a delegated administrator can have unintended impacts on the
                *                 functionality of the enabled Amazon Web Services service. See the documentation for the enabled
                *                 service before you deregister a delegated administrator so that you understand any
                *                 potential impacts.</p>
                *         </important>
                *         <p>You can run this action only for Amazon Web Services services that support this
                *     feature. For a current list of services that support it, see the column <i>Supports
                *     Delegated Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services Services that you can use with
                *     Organizations</a> in the <i>Organizations User Guide.</i>
                *          </p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            deregisterDelegatedAdministrator(args: DeregisterDelegatedAdministratorCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterDelegatedAdministratorCommandOutput>;
            deregisterDelegatedAdministrator(args: DeregisterDelegatedAdministratorCommandInput, cb: (err: any, data?: DeregisterDelegatedAdministratorCommandOutput) => void): void;
            deregisterDelegatedAdministrator(args: DeregisterDelegatedAdministratorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterDelegatedAdministratorCommandOutput) => void): void;
            /**
                * <p>Retrieves Organizations-related information about the specified account.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            describeAccount(args: DescribeAccountCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAccountCommandOutput>;
            describeAccount(args: DescribeAccountCommandInput, cb: (err: any, data?: DescribeAccountCommandOutput) => void): void;
            describeAccount(args: DescribeAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAccountCommandOutput) => void): void;
            /**
                * <p>Retrieves the current status of an asynchronous request to create an account.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            describeCreateAccountStatus(args: DescribeCreateAccountStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCreateAccountStatusCommandOutput>;
            describeCreateAccountStatus(args: DescribeCreateAccountStatusCommandInput, cb: (err: any, data?: DescribeCreateAccountStatusCommandOutput) => void): void;
            describeCreateAccountStatus(args: DescribeCreateAccountStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCreateAccountStatusCommandOutput) => void): void;
            /**
                * <p>Returns the contents of the effective policy for specified policy type and account.
                *             The effective policy is the aggregation of any policies of the specified type that the
                *             account inherits, plus any policy of that type that is directly attached to the
                *             account.</p>
                *         <p>This operation applies only to policy types <i>other</i> than service
                *             control policies (SCPs).</p>
                *         <p>For more information about policy inheritance, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies-inheritance.html">How Policy Inheritance
                *                 Works</a> in the <i>Organizations User Guide</i>.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            describeEffectivePolicy(args: DescribeEffectivePolicyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEffectivePolicyCommandOutput>;
            describeEffectivePolicy(args: DescribeEffectivePolicyCommandInput, cb: (err: any, data?: DescribeEffectivePolicyCommandOutput) => void): void;
            describeEffectivePolicy(args: DescribeEffectivePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEffectivePolicyCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a previously requested handshake. The handshake ID comes
                *             from the response to the original <a>InviteAccountToOrganization</a>
                *             operation that generated the handshake.</p>
                *         <p>You can access handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>, or
                *                 <code>CANCELED</code> for only 30 days after they change to that state. They're then
                *             deleted and no longer accessible.</p>
                *         <p>This operation can be called from any account in the organization.</p>
                */
            describeHandshake(args: DescribeHandshakeCommandInput, options?: __HttpHandlerOptions): Promise<DescribeHandshakeCommandOutput>;
            describeHandshake(args: DescribeHandshakeCommandInput, cb: (err: any, data?: DescribeHandshakeCommandOutput) => void): void;
            describeHandshake(args: DescribeHandshakeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeHandshakeCommandOutput) => void): void;
            /**
                * <p>Retrieves information about the organization that the user's account belongs
                *             to.</p>
                *         <p>This operation can be called from any account in the organization.</p>
                *         <note>
                *             <p>Even if a policy type is shown as available in the organization, you can disable
                *                 it separately at the root level with <a>DisablePolicyType</a>. Use <a>ListRoots</a> to see the status of policy types for a specified
                *                 root.</p>
                *         </note>
                */
            describeOrganization(args: DescribeOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeOrganizationCommandOutput>;
            describeOrganization(args: DescribeOrganizationCommandInput, cb: (err: any, data?: DescribeOrganizationCommandOutput) => void): void;
            describeOrganization(args: DescribeOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeOrganizationCommandOutput) => void): void;
            /**
                * <p>Retrieves information about an organizational unit (OU).</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            describeOrganizationalUnit(args: DescribeOrganizationalUnitCommandInput, options?: __HttpHandlerOptions): Promise<DescribeOrganizationalUnitCommandOutput>;
            describeOrganizationalUnit(args: DescribeOrganizationalUnitCommandInput, cb: (err: any, data?: DescribeOrganizationalUnitCommandOutput) => void): void;
            describeOrganizationalUnit(args: DescribeOrganizationalUnitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeOrganizationalUnitCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a policy.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            describePolicy(args: DescribePolicyCommandInput, options?: __HttpHandlerOptions): Promise<DescribePolicyCommandOutput>;
            describePolicy(args: DescribePolicyCommandInput, cb: (err: any, data?: DescribePolicyCommandOutput) => void): void;
            describePolicy(args: DescribePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePolicyCommandOutput) => void): void;
            /**
                * <p>Detaches a policy from a target root, organizational unit (OU), or account.</p>
                *         <important>
                *             <p>If the policy being detached is a service control policy (SCP), the changes to
                *                 permissions for Identity and Access Management (IAM) users and roles in affected accounts are
                *                 immediate.</p>
                *         </important>
                *         <p>Every root, OU, and account must have at least one SCP attached. If you want to
                *             replace the default <code>FullAWSAccess</code> policy with an SCP that limits the
                *             permissions that can be delegated, you must attach the replacement SCP before you can
                *             remove the default SCP. This is the authorization strategy of an "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_allowlist">allow list</a>". If you instead attach a second SCP and
                *             leave the <code>FullAWSAccess</code> SCP still attached, and specify <code>"Effect":
                *                 "Deny"</code> in the second SCP to override the <code>"Effect": "Allow"</code> in
                *             the <code>FullAWSAccess</code> policy (or any other attached SCP), you're using the
                *             authorization strategy of a "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_denylist">deny list</a>".</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            detachPolicy(args: DetachPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DetachPolicyCommandOutput>;
            detachPolicy(args: DetachPolicyCommandInput, cb: (err: any, data?: DetachPolicyCommandOutput) => void): void;
            detachPolicy(args: DetachPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetachPolicyCommandOutput) => void): void;
            /**
                * <p>Disables the integration of an Amazon Web Services service (the service that is specified by
                *                 <code>ServicePrincipal</code>) with Organizations. When you disable integration, the
                *             specified service no longer can create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked role</a> in
                *                 <i>new</i> accounts in your organization. This means the service can't
                *             perform operations on your behalf on any new accounts in your organization. The service
                *             can still perform operations in older accounts until the service completes its clean-up
                *             from Organizations.</p>
                *         <important>
                *             <p>We <b>
                *                   <i>strongly recommend</i>
                *                </b> that
                *                 you don't use this command to disable integration between Organizations and the specified
                *                 Amazon Web Services service. Instead, use the console or commands that are provided by the
                *                 specified service. This lets the trusted service perform any required initialization
                *                 when enabling trusted access, such as creating any required resources and any
                *                 required clean up of resources when disabling trusted access. </p>
                *             <p>For information about how to disable trusted service access to your organization
                *                 using the trusted service, see the <b>Learn more</b> link
                *                 under the <b>Supports Trusted Access</b> column at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services services that you can use with Organizations</a>. on this page.</p>
                *             <p>If you disable access by using this command, it causes the following actions to
                *                 occur:</p>
                *             <ul>
                *                <li>
                *                     <p>The service can no longer create a service-linked role in the accounts in
                *                         your organization. This means that the service can't perform operations on
                *                         your behalf on any new accounts in your organization. The service can still
                *                         perform operations in older accounts until the service completes its
                *                         clean-up from Organizations. </p>
                *                 </li>
                *                <li>
                *                     <p>The service can no longer perform tasks in the member accounts in the
                *                         organization, unless those operations are explicitly permitted by the IAM
                *                         policies that are attached to your roles. This includes any data aggregation
                *                         from the member accounts to the management account, or to a delegated
                *                         administrator account, where relevant.</p>
                *                 </li>
                *                <li>
                *                     <p>Some services detect this and clean up any remaining data or resources
                *                         related to the integration, while other services stop accessing the
                *                         organization but leave any historical data and configuration in place to
                *                         support a possible re-enabling of the integration.</p>
                *                 </li>
                *             </ul>
                *             <p>Using the other service's console or commands to disable the integration ensures
                *                 that the other service is aware that it can clean up any resources that are required
                *                 only for the integration. How the service cleans up its resources in the
                *                 organization's accounts depends on that service. For more information, see the
                *                 documentation for the other Amazon Web Services service. </p>
                *         </important>
                *         <p>After you perform the <code>DisableAWSServiceAccess</code> operation, the specified
                *             service can no longer perform operations in your organization's accounts </p>
                *         <p>For more information about integrating other services with Organizations, including the
                *             list of services that work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating Organizations with Other
                *                 Amazon Web Services Services</a> in the <i>Organizations User Guide.</i>
                *          </p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            disableAWSServiceAccess(args: DisableAWSServiceAccessCommandInput, options?: __HttpHandlerOptions): Promise<DisableAWSServiceAccessCommandOutput>;
            disableAWSServiceAccess(args: DisableAWSServiceAccessCommandInput, cb: (err: any, data?: DisableAWSServiceAccessCommandOutput) => void): void;
            disableAWSServiceAccess(args: DisableAWSServiceAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableAWSServiceAccessCommandOutput) => void): void;
            /**
                * <p>Disables an organizational policy type in a root. A policy of a certain type can be
                *             attached to entities in a root only if that type is enabled in the root. After you
                *             perform this operation, you no longer can attach policies of the specified type to that
                *             root or to any organizational unit (OU) or account in that root. You can undo this by
                *             using the <a>EnablePolicyType</a> operation.</p>
                *         <p>This is an asynchronous request that Amazon Web Services performs in the background. If you disable
                *             a policy type for a root, it still appears enabled for the organization if <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features</a> are enabled for the organization. Amazon Web Services recommends that you
                *             first use <a>ListRoots</a> to see the status of policy types for a specified
                *             root, and then use this operation.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                *         <p> To view the status of available policy types in the organization, use <a>DescribeOrganization</a>.</p>
                */
            disablePolicyType(args: DisablePolicyTypeCommandInput, options?: __HttpHandlerOptions): Promise<DisablePolicyTypeCommandOutput>;
            disablePolicyType(args: DisablePolicyTypeCommandInput, cb: (err: any, data?: DisablePolicyTypeCommandOutput) => void): void;
            disablePolicyType(args: DisablePolicyTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisablePolicyTypeCommandOutput) => void): void;
            /**
                * <p>Enables all features in an organization. This enables the use of organization policies
                *             that can restrict the services and actions that can be called in each account. Until you
                *             enable all features, you have access only to consolidated billing, and you can't use any
                *             of the advanced account administration features that Organizations supports. For more
                *             information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the
                *                 <i>Organizations User Guide.</i>
                *          </p>
                *         <important>
                *             <p>This operation is required only for organizations that were created explicitly
                *                 with only the consolidated billing features enabled. Calling this operation sends a
                *                 handshake to every invited account in the organization. The feature set change can
                *                 be finalized and the additional features enabled only after all administrators in
                *                 the invited accounts approve the change by accepting the handshake.</p>
                *         </important>
                *         <p>After you enable all features, you can separately enable or disable individual policy
                *             types in a root using <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. To see the status of policy types in a root, use
                *                 <a>ListRoots</a>.</p>
                *         <p>After all invited member accounts accept the handshake, you finalize the feature set
                *             change by accepting the handshake that contains <code>"Action":
                *                 "ENABLE_ALL_FEATURES"</code>. This completes the change.</p>
                *         <p>After you enable all features in your organization, the management account in the
                *             organization can apply policies on all member accounts. These policies can restrict what
                *             users and even administrators in those accounts can do. The management account can apply
                *             policies that prevent accounts from leaving the organization. Ensure that your account
                *             administrators are aware of this.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            enableAllFeatures(args: EnableAllFeaturesCommandInput, options?: __HttpHandlerOptions): Promise<EnableAllFeaturesCommandOutput>;
            enableAllFeatures(args: EnableAllFeaturesCommandInput, cb: (err: any, data?: EnableAllFeaturesCommandOutput) => void): void;
            enableAllFeatures(args: EnableAllFeaturesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableAllFeaturesCommandOutput) => void): void;
            /**
                * <p>Enables the integration of an Amazon Web Services service (the service that is specified by
                *                 <code>ServicePrincipal</code>) with Organizations. When you enable integration, you allow
                *             the specified service to create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked role</a> in
                *             all the accounts in your organization. This allows the service to perform operations on
                *             your behalf in your organization and its accounts.</p>
                *         <important>
                *             <p>We recommend that you enable integration between Organizations and the specified Amazon Web Services
                *                 service by using the console or commands that are provided by the specified service.
                *                 Doing so ensures that the service is aware that it can create the resources that are
                *                 required for the integration. How the service creates those resources in the
                *                 organization's accounts depends on that service. For more information, see the
                *                 documentation for the other Amazon Web Services service.</p>
                *         </important>
                *         <p>For more information about enabling services to integrate with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
                *                 Organizations with Other Amazon Web Services Services</a> in the
                *                 <i>Organizations User Guide.</i>
                *          </p>
                *         <p>This operation can be called only from the organization's management account and only
                *             if the organization has <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">enabled all
                *                 features</a>.</p>
                */
            enableAWSServiceAccess(args: EnableAWSServiceAccessCommandInput, options?: __HttpHandlerOptions): Promise<EnableAWSServiceAccessCommandOutput>;
            enableAWSServiceAccess(args: EnableAWSServiceAccessCommandInput, cb: (err: any, data?: EnableAWSServiceAccessCommandOutput) => void): void;
            enableAWSServiceAccess(args: EnableAWSServiceAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableAWSServiceAccessCommandOutput) => void): void;
            /**
                * <p>Enables a policy type in a root. After you enable a policy type in a root, you can
                *             attach policies of that type to the root, any organizational unit (OU), or account in
                *             that root. You can undo this by using the <a>DisablePolicyType</a>
                *             operation.</p>
                *         <p>This is an asynchronous request that Amazon Web Services performs in the background. Amazon Web Services
                *             recommends that you first use <a>ListRoots</a> to see the status of policy
                *             types for a specified root, and then use this operation.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                *         <p>You can enable a policy type in a root only if that policy type is available in the
                *             organization. To view the status of available policy types in the organization, use
                *                 <a>DescribeOrganization</a>.</p>
                */
            enablePolicyType(args: EnablePolicyTypeCommandInput, options?: __HttpHandlerOptions): Promise<EnablePolicyTypeCommandOutput>;
            enablePolicyType(args: EnablePolicyTypeCommandInput, cb: (err: any, data?: EnablePolicyTypeCommandOutput) => void): void;
            enablePolicyType(args: EnablePolicyTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnablePolicyTypeCommandOutput) => void): void;
            /**
                * <p>Sends an invitation to another account to join your organization as a member account.
                *             Organizations sends email on your behalf to the email address that is associated with the
                *             other account's owner. The invitation is implemented as a <a>Handshake</a>
                *             whose details are in the response.</p>
                *         <important>
                *             <ul>
                *                <li>
                *                     <p>You can invite Amazon Web Services accounts only from the same seller as the management
                *                         account. For example, if your organization's management account was created
                *                         by Amazon Internet Services Pvt. Ltd (AISPL), an Amazon Web Services seller in India, you
                *                         can invite only other AISPL accounts to your organization. You can't combine
                *                         accounts from AISPL and Amazon Web Services or from any other Amazon Web Services seller. For more
                *                         information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated
                *                             Billing in India</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>If you receive an exception that indicates that you exceeded your account
                *                         limits for the organization or that the operation failed because your
                *                         organization is still initializing, wait one hour and then try again. If the
                *                         error persists after an hour, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </important>
                *         <p>If the request includes tags, then the requester must have the
                *                 <code>organizations:TagResource</code> permission.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            inviteAccountToOrganization(args: InviteAccountToOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<InviteAccountToOrganizationCommandOutput>;
            inviteAccountToOrganization(args: InviteAccountToOrganizationCommandInput, cb: (err: any, data?: InviteAccountToOrganizationCommandOutput) => void): void;
            inviteAccountToOrganization(args: InviteAccountToOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InviteAccountToOrganizationCommandOutput) => void): void;
            /**
                * <p>Removes a member account from its parent organization. This version of the operation
                *             is performed by the account that wants to leave. To remove a member account as a user in
                *             the management account, use <a>RemoveAccountFromOrganization</a>
                *             instead.</p>
                *         <p>This operation can be called only from a member account in the organization.</p>
                *         <important>
                *             <ul>
                *                <li>
                *                     <p>The management account in an organization with all features enabled can
                *                         set service control policies (SCPs) that can restrict what administrators of
                *                         member accounts can do. This includes preventing them from successfully
                *                         calling <code>LeaveOrganization</code> and leaving the organization.</p>
                *                 </li>
                *                <li>
                *                     <p>You can leave an organization as a member account only if the account is
                *                         configured with the information required to operate as a standalone account.
                *                         When you create an account in an organization using the Organizations console,
                *                         API, or CLI commands, the information required of standalone accounts is
                *                             <i>not</i> automatically collected. For each account that
                *                         you want to make standalone, you must perform the following steps. If any of
                *                         the steps are already completed for this account, that step doesn't
                *                         appear.</p>
                *                     <ul>
                *                      <li>
                *                             <p>Choose a support plan</p>
                *                         </li>
                *                      <li>
                *                             <p>Provide and verify the required contact information</p>
                *                         </li>
                *                      <li>
                *                             <p>Provide a current payment method</p>
                *                         </li>
                *                   </ul>
                *                     <p>Amazon Web Services uses the payment method to charge for any billable (not free tier)
                *                         Amazon Web Services activity that occurs while the account isn't attached to an
                *                         organization. Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not
                *                             yet been provided</a> in the
                *                         <i>Organizations User Guide.</i>
                *                   </p>
                *                 </li>
                *                <li>
                *                     <p>The account that you want to leave must not be a delegated administrator
                *                         account for any Amazon Web Services service enabled for your organization. If the account
                *                         is a delegated administrator, you must first change the delegated
                *                         administrator account to another account that is remaining in the
                *                         organization.</p>
                *                 </li>
                *                <li>
                *                     <p>You can leave an organization only after you enable IAM user access to
                *                         billing in your account. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the
                *                             <i>Amazon Web Services Billing and Cost Management User Guide.</i>
                *                   </p>
                *                 </li>
                *                <li>
                *                     <p>After the account leaves the organization, all tags that were attached to
                *                         the account object in the organization are deleted. Amazon Web Services accounts outside
                *                         of an organization do not support tags.</p>
                *                 </li>
                *                <li>
                *                     <p>A newly created account has a waiting period before it can be removed from
                *                         its organization. If you get an error that indicates that a wait period is
                *                         required, then try again in a few days.</p>
                *                 </li>
                *             </ul>
                *         </important>
                */
            leaveOrganization(args: LeaveOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<LeaveOrganizationCommandOutput>;
            leaveOrganization(args: LeaveOrganizationCommandInput, cb: (err: any, data?: LeaveOrganizationCommandOutput) => void): void;
            leaveOrganization(args: LeaveOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: LeaveOrganizationCommandOutput) => void): void;
            /**
                * <p>Lists all the accounts in the organization. To request only the accounts in a
                *             specified root or organizational unit (OU), use the <a>ListAccountsForParent</a> operation instead.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listAccounts(args: ListAccountsCommandInput, options?: __HttpHandlerOptions): Promise<ListAccountsCommandOutput>;
            listAccounts(args: ListAccountsCommandInput, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            listAccounts(args: ListAccountsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            /**
                * <p>Lists the accounts in an organization that are contained by the specified target root
                *             or organizational unit (OU). If you specify the root, you get a list of all the accounts
                *             that aren't in any OU. If you specify an OU, you get a list of all the accounts in only
                *             that OU and not in any child OUs. To get a list of all accounts in the organization, use
                *             the <a>ListAccounts</a> operation.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listAccountsForParent(args: ListAccountsForParentCommandInput, options?: __HttpHandlerOptions): Promise<ListAccountsForParentCommandOutput>;
            listAccountsForParent(args: ListAccountsForParentCommandInput, cb: (err: any, data?: ListAccountsForParentCommandOutput) => void): void;
            listAccountsForParent(args: ListAccountsForParentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccountsForParentCommandOutput) => void): void;
            /**
                * <p>Returns a list of the Amazon Web Services services that you enabled to integrate with your
                *             organization. After a service on this list creates the resources that it requires for
                *             the integration, it can perform operations on your organization and its accounts.</p>
                *         <p>For more information about integrating other services with Organizations, including the
                *             list of services that currently work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating Organizations with Other
                *                 Amazon Web Services Services</a> in the <i>Organizations User Guide.</i>
                *          </p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listAWSServiceAccessForOrganization(args: ListAWSServiceAccessForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<ListAWSServiceAccessForOrganizationCommandOutput>;
            listAWSServiceAccessForOrganization(args: ListAWSServiceAccessForOrganizationCommandInput, cb: (err: any, data?: ListAWSServiceAccessForOrganizationCommandOutput) => void): void;
            listAWSServiceAccessForOrganization(args: ListAWSServiceAccessForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAWSServiceAccessForOrganizationCommandOutput) => void): void;
            /**
                * <p>Lists all of the organizational units (OUs) or accounts that are contained in the
                *             specified parent OU or root. This operation, along with <a>ListParents</a>
                *             enables you to traverse the tree structure that makes up this root.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listChildren(args: ListChildrenCommandInput, options?: __HttpHandlerOptions): Promise<ListChildrenCommandOutput>;
            listChildren(args: ListChildrenCommandInput, cb: (err: any, data?: ListChildrenCommandOutput) => void): void;
            listChildren(args: ListChildrenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChildrenCommandOutput) => void): void;
            /**
                * <p>Lists the account creation requests that match the specified status that is currently
                *             being tracked for the organization.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listCreateAccountStatus(args: ListCreateAccountStatusCommandInput, options?: __HttpHandlerOptions): Promise<ListCreateAccountStatusCommandOutput>;
            listCreateAccountStatus(args: ListCreateAccountStatusCommandInput, cb: (err: any, data?: ListCreateAccountStatusCommandOutput) => void): void;
            listCreateAccountStatus(args: ListCreateAccountStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCreateAccountStatusCommandOutput) => void): void;
            /**
                * <p>Lists the Amazon Web Services accounts that are designated as delegated administrators in this
                *             organization.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listDelegatedAdministrators(args: ListDelegatedAdministratorsCommandInput, options?: __HttpHandlerOptions): Promise<ListDelegatedAdministratorsCommandOutput>;
            listDelegatedAdministrators(args: ListDelegatedAdministratorsCommandInput, cb: (err: any, data?: ListDelegatedAdministratorsCommandOutput) => void): void;
            listDelegatedAdministrators(args: ListDelegatedAdministratorsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDelegatedAdministratorsCommandOutput) => void): void;
            /**
                * <p>List the Amazon Web Services services for which the specified account is a delegated
                *             administrator.</p>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listDelegatedServicesForAccount(args: ListDelegatedServicesForAccountCommandInput, options?: __HttpHandlerOptions): Promise<ListDelegatedServicesForAccountCommandOutput>;
            listDelegatedServicesForAccount(args: ListDelegatedServicesForAccountCommandInput, cb: (err: any, data?: ListDelegatedServicesForAccountCommandOutput) => void): void;
            listDelegatedServicesForAccount(args: ListDelegatedServicesForAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDelegatedServicesForAccountCommandOutput) => void): void;
            /**
                * <p>Lists the current handshakes that are associated with the account of the requesting
                *             user.</p>
                *         <p>Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>,
                *                 <code>CANCELED</code>, or <code>EXPIRED</code> appear in the results of this API for
                *             only 30 days after changing to that state. After that, they're deleted and no longer
                *             accessible.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called from any account in the organization.</p>
                */
            listHandshakesForAccount(args: ListHandshakesForAccountCommandInput, options?: __HttpHandlerOptions): Promise<ListHandshakesForAccountCommandOutput>;
            listHandshakesForAccount(args: ListHandshakesForAccountCommandInput, cb: (err: any, data?: ListHandshakesForAccountCommandOutput) => void): void;
            listHandshakesForAccount(args: ListHandshakesForAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListHandshakesForAccountCommandOutput) => void): void;
            /**
                * <p>Lists the handshakes that are associated with the organization that the requesting
                *             user is part of. The <code>ListHandshakesForOrganization</code> operation returns a list
                *             of handshake structures. Each structure contains details and status about a
                *             handshake.</p>
                *         <p>Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>,
                *                 <code>CANCELED</code>, or <code>EXPIRED</code> appear in the results of this API for
                *             only 30 days after changing to that state. After that, they're deleted and no longer
                *             accessible.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listHandshakesForOrganization(args: ListHandshakesForOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<ListHandshakesForOrganizationCommandOutput>;
            listHandshakesForOrganization(args: ListHandshakesForOrganizationCommandInput, cb: (err: any, data?: ListHandshakesForOrganizationCommandOutput) => void): void;
            listHandshakesForOrganization(args: ListHandshakesForOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListHandshakesForOrganizationCommandOutput) => void): void;
            /**
                * <p>Lists the organizational units (OUs) in a parent organizational unit or root.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listOrganizationalUnitsForParent(args: ListOrganizationalUnitsForParentCommandInput, options?: __HttpHandlerOptions): Promise<ListOrganizationalUnitsForParentCommandOutput>;
            listOrganizationalUnitsForParent(args: ListOrganizationalUnitsForParentCommandInput, cb: (err: any, data?: ListOrganizationalUnitsForParentCommandOutput) => void): void;
            listOrganizationalUnitsForParent(args: ListOrganizationalUnitsForParentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOrganizationalUnitsForParentCommandOutput) => void): void;
            /**
                * <p>Lists the root or organizational units (OUs) that serve as the immediate parent of the
                *             specified child OU or account. This operation, along with <a>ListChildren</a>
                *             enables you to traverse the tree structure that makes up this root.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                *         <note>
                *             <p>In the current release, a child can have only a single parent.</p>
                *         </note>
                */
            listParents(args: ListParentsCommandInput, options?: __HttpHandlerOptions): Promise<ListParentsCommandOutput>;
            listParents(args: ListParentsCommandInput, cb: (err: any, data?: ListParentsCommandOutput) => void): void;
            listParents(args: ListParentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListParentsCommandOutput) => void): void;
            /**
                * <p>Retrieves the list of all policies in an organization of a specified type.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listPolicies(args: ListPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListPoliciesCommandOutput>;
            listPolicies(args: ListPoliciesCommandInput, cb: (err: any, data?: ListPoliciesCommandOutput) => void): void;
            listPolicies(args: ListPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPoliciesCommandOutput) => void): void;
            /**
                * <p>Lists the policies that are directly attached to the specified target root,
                *             organizational unit (OU), or account. You must specify the policy type that you want
                *             included in the returned list.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listPoliciesForTarget(args: ListPoliciesForTargetCommandInput, options?: __HttpHandlerOptions): Promise<ListPoliciesForTargetCommandOutput>;
            listPoliciesForTarget(args: ListPoliciesForTargetCommandInput, cb: (err: any, data?: ListPoliciesForTargetCommandOutput) => void): void;
            listPoliciesForTarget(args: ListPoliciesForTargetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPoliciesForTargetCommandOutput) => void): void;
            /**
                * <p>Lists the roots that are defined in the current organization.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                *         <note>
                *             <p>Policy types can be enabled and disabled in roots. This is distinct from whether
                *                 they're available in the organization. When you enable all features, you make policy
                *                 types available for use in that organization. Individual policy types can then be
                *                 enabled and disabled in a root. To see the availability of a policy type in an
                *                 organization, use <a>DescribeOrganization</a>.</p>
                *         </note>
                */
            listRoots(args: ListRootsCommandInput, options?: __HttpHandlerOptions): Promise<ListRootsCommandOutput>;
            listRoots(args: ListRootsCommandInput, cb: (err: any, data?: ListRootsCommandOutput) => void): void;
            listRoots(args: ListRootsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRootsCommandOutput) => void): void;
            /**
                * <p>Lists tags that are attached to the specified resource.</p>
                *         <p>You can attach tags to the following resources in Organizations.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account</p>
                *             </li>
                *             <li>
                *                 <p>Organization root</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit (OU)</p>
                *             </li>
                *             <li>
                *                 <p>Policy (any type)</p>
                *             </li>
                *          </ul>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Lists all the roots, organizational units (OUs), and accounts that the specified
                *             policy is attached to.</p>
                *         <note>
                *             <p>Always check the <code>NextToken</code> response parameter
                * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
                * occasionally return an empty set of results even when there are more results available. The
                * <code>NextToken</code> response parameter value is <code>null</code>
                *                <i>only</i>
                * when there are no more results to display.</p>
                *          </note>
                *         <p>This operation can be called only from the organization's
                * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
                */
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, options?: __HttpHandlerOptions): Promise<ListTargetsForPolicyCommandOutput>;
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, cb: (err: any, data?: ListTargetsForPolicyCommandOutput) => void): void;
            listTargetsForPolicy(args: ListTargetsForPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTargetsForPolicyCommandOutput) => void): void;
            /**
                * <p>Moves an account from its current source parent root or organizational unit (OU) to
                *             the specified destination parent root or OU.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            moveAccount(args: MoveAccountCommandInput, options?: __HttpHandlerOptions): Promise<MoveAccountCommandOutput>;
            moveAccount(args: MoveAccountCommandInput, cb: (err: any, data?: MoveAccountCommandOutput) => void): void;
            moveAccount(args: MoveAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: MoveAccountCommandOutput) => void): void;
            /**
                * <p>Enables the specified member account to administer the Organizations features of the specified
                *             Amazon Web Services service. It grants read-only access to Organizations service data. The account still
                *             requires IAM permissions to access and administer the Amazon Web Services service.</p>
                *         <p>You can run this action only for Amazon Web Services services that support this
                *     feature. For a current list of services that support it, see the column <i>Supports
                *     Delegated Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services Services that you can use with
                *     Organizations</a> in the <i>Organizations User Guide.</i>
                *          </p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            registerDelegatedAdministrator(args: RegisterDelegatedAdministratorCommandInput, options?: __HttpHandlerOptions): Promise<RegisterDelegatedAdministratorCommandOutput>;
            registerDelegatedAdministrator(args: RegisterDelegatedAdministratorCommandInput, cb: (err: any, data?: RegisterDelegatedAdministratorCommandOutput) => void): void;
            registerDelegatedAdministrator(args: RegisterDelegatedAdministratorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterDelegatedAdministratorCommandOutput) => void): void;
            /**
                * <p>Removes the specified account from the organization.</p>
                *         <p>The removed account becomes a standalone account that isn't a member of any
                *             organization. It's no longer subject to any policies and is responsible for its own bill
                *             payments. The organization's management account is no longer charged for any expenses
                *             accrued by the member account after it's removed from the organization.</p>
                *         <p>This operation can be called only from the organization's management account. Member accounts can remove themselves with <a>LeaveOrganization</a> instead.</p>
                *         <important>
                *             <ul>
                *                <li>
                *                     <p>You can remove an account from your organization only if the account is
                *                         configured with the information required to operate as a standalone account.
                *                         When you create an account in an organization using the Organizations console,
                *                         API, or CLI commands, the information required of standalone accounts is
                *                             <i>not</i> automatically collected. For an account that
                *                         you want to make standalone, you must choose a support plan, provide and
                *                         verify the required contact information, and provide a current payment
                *                         method. Amazon Web Services uses the payment method to charge for any billable (not free
                *                         tier) Amazon Web Services activity that occurs while the account isn't attached to an
                *                         organization. To remove an account that doesn't yet have this information,
                *                         you must sign in as the member account and follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not
                *                             yet been provided</a> in the
                *                         <i>Organizations User Guide.</i>
                *                   </p>
                *                 </li>
                *                <li>
                *                     <p>The account that you want to leave must not be a delegated administrator
                *                         account for any Amazon Web Services service enabled for your organization. If the account
                *                         is a delegated administrator, you must first change the delegated
                *                         administrator account to another account that is remaining in the
                *                         organization.</p>
                *                 </li>
                *                <li>
                *                     <p>After the account leaves the organization, all tags that were attached to
                *                         the account object in the organization are deleted. Amazon Web Services accounts outside
                *                         of an organization do not support tags.</p>
                *                 </li>
                *             </ul>
                *         </important>
                */
            removeAccountFromOrganization(args: RemoveAccountFromOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<RemoveAccountFromOrganizationCommandOutput>;
            removeAccountFromOrganization(args: RemoveAccountFromOrganizationCommandInput, cb: (err: any, data?: RemoveAccountFromOrganizationCommandOutput) => void): void;
            removeAccountFromOrganization(args: RemoveAccountFromOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveAccountFromOrganizationCommandOutput) => void): void;
            /**
                * <p>Adds one or more tags to the specified resource.</p>
                *         <p>Currently, you can attach tags to the following resources in Organizations.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account</p>
                *             </li>
                *             <li>
                *                 <p>Organization root</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit (OU)</p>
                *             </li>
                *             <li>
                *                 <p>Policy (any type)</p>
                *             </li>
                *          </ul>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes any tags with the specified keys from the specified resource.</p>
                *         <p>You can attach tags to the following resources in Organizations.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account</p>
                *             </li>
                *             <li>
                *                 <p>Organization root</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit (OU)</p>
                *             </li>
                *             <li>
                *                 <p>Policy (any type)</p>
                *             </li>
                *          </ul>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Renames the specified organizational unit (OU). The ID and ARN don't change. The child
                *             OUs and accounts remain in place, and any attached policies of the OU remain
                *             attached.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            updateOrganizationalUnit(args: UpdateOrganizationalUnitCommandInput, options?: __HttpHandlerOptions): Promise<UpdateOrganizationalUnitCommandOutput>;
            updateOrganizationalUnit(args: UpdateOrganizationalUnitCommandInput, cb: (err: any, data?: UpdateOrganizationalUnitCommandOutput) => void): void;
            updateOrganizationalUnit(args: UpdateOrganizationalUnitCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateOrganizationalUnitCommandOutput) => void): void;
            /**
                * <p>Updates an existing policy with a new name, description, or content. If you don't
                *             supply any parameter, that value remains unchanged. You can't change a policy's
                *             type.</p>
                *         <p>This operation can be called only from the organization's management account.</p>
                */
            updatePolicy(args: UpdatePolicyCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePolicyCommandOutput>;
            updatePolicy(args: UpdatePolicyCommandInput, cb: (err: any, data?: UpdatePolicyCommandOutput) => void): void;
            updatePolicy(args: UpdatePolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePolicyCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AcceptHandshakeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AcceptHandshakeRequest, AcceptHandshakeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface AcceptHandshakeCommandInput extends AcceptHandshakeRequest {
    }
    export interface AcceptHandshakeCommandOutput extends AcceptHandshakeResponse, __MetadataBearer {
    }
    /**
        * <p>Sends a response to the originator of a handshake agreeing to the action proposed by
        *             the handshake request.</p>
        *         <p>This operation can be called only by the following principals when they also have the
        *             relevant IAM permissions:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <b>Invitation to join</b> or <b>Approve all features request</b> handshakes: only a principal from
        *                     the member account.</p>
        *                 <p>The user who calls the API for an invitation to join must have the
        *                         <code>organizations:AcceptHandshake</code> permission. If you enabled all
        *                     features in the organization, the user must also have the
        *                         <code>iam:CreateServiceLinkedRole</code> permission so that Organizations can
        *                     create the required service-linked role named <code>AWSServiceRoleForOrganizations</code>. For
        *                     more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integration_services.html#orgs_integration_service-linked-roles">Organizations and Service-Linked Roles</a> in the
        *                         <i>Organizations User Guide</i>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <b>Enable all features final confirmation</b>
        *                     handshake: only a principal from the management account.</p>
        *                 <p>For more information about invitations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_invites.html">Inviting an
        *                         Amazon Web Services account to join your organization</a> in the
        *                         <i>Organizations User Guide.</i> For more information about requests to
        *                     enable all features in the organization, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling all features in your organization</a> in
        *                     the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>After you accept a handshake, it continues to appear in the results of relevant APIs
        *             for only 30 days. After that, it's deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, AcceptHandshakeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, AcceptHandshakeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new AcceptHandshakeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptHandshakeCommandInput} for command's `input` shape.
        * @see {@link AcceptHandshakeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class AcceptHandshakeCommand extends $Command<AcceptHandshakeCommandInput, AcceptHandshakeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: AcceptHandshakeCommandInput;
            constructor(input: AcceptHandshakeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptHandshakeCommandInput, AcceptHandshakeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AttachPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AttachPolicyRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface AttachPolicyCommandInput extends AttachPolicyRequest {
    }
    export interface AttachPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Attaches a policy to a root, an organizational unit (OU), or an individual account.
        *             How the policy affects accounts depends on the type of policy. Refer to the
        *                 <i>Organizations User Guide</i> for information about each policy type:</p>
        *         <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, AttachPolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, AttachPolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new AttachPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AttachPolicyCommandInput} for command's `input` shape.
        * @see {@link AttachPolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class AttachPolicyCommand extends $Command<AttachPolicyCommandInput, AttachPolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: AttachPolicyCommandInput;
            constructor(input: AttachPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachPolicyCommandInput, AttachPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CancelHandshakeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelHandshakeRequest, CancelHandshakeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CancelHandshakeCommandInput extends CancelHandshakeRequest {
    }
    export interface CancelHandshakeCommandOutput extends CancelHandshakeResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels a handshake. Canceling a handshake sets the handshake state to
        *                 <code>CANCELED</code>.</p>
        *         <p>This operation can be called only from the account that originated the handshake. The recipient of the handshake can't cancel it, but can use <a>DeclineHandshake</a> instead. After a handshake is canceled, the recipient
        *             can no longer respond to that handshake.</p>
        *         <p>After you cancel a handshake, it continues to appear in the results of relevant APIs
        *             for only 30 days. After that, it's deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CancelHandshakeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CancelHandshakeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CancelHandshakeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelHandshakeCommandInput} for command's `input` shape.
        * @see {@link CancelHandshakeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CancelHandshakeCommand extends $Command<CancelHandshakeCommandInput, CancelHandshakeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CancelHandshakeCommandInput;
            constructor(input: CancelHandshakeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelHandshakeCommandInput, CancelHandshakeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CloseAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CloseAccountRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CloseAccountCommandInput extends CloseAccountRequest {
    }
    export interface CloseAccountCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Closes an Amazon Web Services member account within an organization. You can't close the management
        *             account with this API. This is an asynchronous request that Amazon Web Services performs in the
        *             background. Because <code>CloseAccount</code> operates asynchronously, it can return a
        *             successful completion message even though account closure might still be in progress.
        *             You need to wait a few minutes before the account is fully closed. To check the status
        *             of the request, do one of the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Use the <code>AccountId</code> that you sent in the <code>CloseAccount</code>
        *                     request to provide as a parameter to the <a>DescribeAccount</a>
        *                     operation. </p>
        *                 <p>While the close account request is in progress, Account status will indicate
        *                     PENDING_CLOSURE. When the close account request completes, the status will
        *                     change to SUSPENDED. </p>
        *             </li>
        *             <li>
        *                 <p>Check the CloudTrail log for the <code>CloseAccountResult</code> event that gets
        *                     published after the account closes successfully. For information on using CloudTrail
        *                     with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging and monitoring in Organizations</a> in the
        *                         <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You can only close 10% of active member accounts within a rolling 30 day
        *                         period. This quota is not bound by a calendar month, but starts when you
        *                         close an account. Within 30 days of that initial account closure, you can't
        *                         exceed the 10% account closure limit.</p>
        *                 </li>
        *                <li>
        *                     <p>To reinstate a closed account, contact Amazon Web Services Support within the 90-day
        *                         grace period while the account is in SUSPENDED status. </p>
        *                 </li>
        *                <li>
        *                     <p>If the Amazon Web Services account you attempt to close is linked to an Amazon Web Services GovCloud (US)
        *                         account, the <code>CloseAccount</code> request will close both accounts. To
        *                         learn important pre-closure details, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/Closing-govcloud-account.html">
        *                             Closing an Amazon Web Services GovCloud (US) account</a> in the <i>
        *                             Amazon Web Services GovCloud User Guide</i>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        *         <p>For more information about closing accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
        *                 Amazon Web Services account</a> in the <i>Organizations User Guide.</i>
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CloseAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CloseAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CloseAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CloseAccountCommandInput} for command's `input` shape.
        * @see {@link CloseAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CloseAccountCommand extends $Command<CloseAccountCommandInput, CloseAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CloseAccountCommandInput;
            constructor(input: CloseAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CloseAccountCommandInput, CloseAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAccountRequest, CreateAccountResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CreateAccountCommandInput extends CreateAccountRequest {
    }
    export interface CreateAccountCommandOutput extends CreateAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Web Services account that is automatically a member of the organization whose
        *             credentials made the request. This is an asynchronous request that Amazon Web Services performs in the
        *             background. Because <code>CreateAccount</code> operates asynchronously, it can return a
        *             successful completion message even though account initialization might still be in
        *             progress. You might need to wait a few minutes before you can successfully access the
        *             account. To check the status of the request, do one of the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Use the <code>Id</code> member of the <code>CreateAccountStatus</code>
        *                     response element from this operation to provide as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p>
        *             </li>
        *             <li>
        *                 <p>Check the CloudTrail log for the <code>CreateAccountResult</code> event. For
        *                     information on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging and monitoring in Organizations</a> in the
        *                         <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>The user who calls the API to create an account must have the
        *                 <code>organizations:CreateAccount</code> permission. If you enabled all features in
        *             the organization, Organizations creates the required service-linked role named
        *                 <code>AWSServiceRoleForOrganizations</code>. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations and Service-Linked Roles</a> in the
        *                 <i>Organizations User Guide</i>.</p>
        *         <p>If the request includes tags, then the requester must have the
        *                 <code>organizations:TagResource</code> permission.</p>
        *         <p>Organizations preconfigures the new member account with a role (named
        *                 <code>OrganizationAccountAccessRole</code> by default) that grants users in the
        *             management account administrator permissions in the new member account. Principals in
        *             the management account can assume the role. Organizations clones the company name and address
        *             information for the new account from the organization's management account.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        *         <p>For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating an Amazon Web Services account in
        *                 Your Organization</a> in the <i>Organizations User Guide.</i>
        *          </p>
        *         <important>
        *             <ul>
        *                <li>
        *                     <p>When you create an account in an organization using the Organizations console,
        *                         API, or CLI commands, the information required for the account to operate
        *                         as a standalone account, such as a payment method and signing the end user
        *                         license agreement (EULA) is <i>not</i> automatically
        *                         collected. If you must remove an account from your organization later, you
        *                         can do so only after you provide the missing information. Follow the steps
        *                         at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization as a member account</a> in the
        *                             <i>Organizations User Guide</i>.</p>
        *                 </li>
        *                <li>
        *                     <p>If you get an exception that indicates that you exceeded your account
        *                         limits for the organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>If you get an exception that indicates that the operation failed because
        *                         your organization is still initializing, wait one hour and then try again.
        *                         If the error persists, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>Using <code>CreateAccount</code> to create multiple temporary accounts
        *                         isn't recommended. You can only close an account from the Billing and Cost Management console, and
        *                         you must be signed in as the root user. For information on the requirements
        *                         and process for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
        *                             Amazon Web Services account</a> in the
        *                         <i>Organizations User Guide</i>.</p>
        *                 </li>
        *             </ul>
        *         </important>
        *         <note>
        *             <p>When you create a member account with this operation, you can choose whether to
        *                 create the account with the <b>IAM User and Role Access to
        *                     Billing Information</b> switch enabled. If you enable it, IAM users and
        *                 roles that have appropriate permissions can view billing information for the
        *                 account. If you disable it, only the account root user can access billing
        *                 information. For information about how to disable this switch for an account, see
        *                     <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
        *                     Access to Your Billing Information and Tools</a>.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CreateAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CreateAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CreateAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAccountCommandInput} for command's `input` shape.
        * @see {@link CreateAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CreateAccountCommand extends $Command<CreateAccountCommandInput, CreateAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CreateAccountCommandInput;
            constructor(input: CreateAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAccountCommandInput, CreateAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateGovCloudAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateGovCloudAccountRequest, CreateGovCloudAccountResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CreateGovCloudAccountCommandInput extends CreateGovCloudAccountRequest {
    }
    export interface CreateGovCloudAccountCommandOutput extends CreateGovCloudAccountResponse, __MetadataBearer {
    }
    /**
        * <p>This action is available if all of the following are true:</p>
        *         <ul>
        *             <li>
        *                 <p>You're authorized to create accounts in the Amazon Web Services GovCloud (US) Region. For
        *                     more information on the Amazon Web Services GovCloud (US) Region, see the <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.html">
        *                      <i>Amazon Web Services GovCloud User Guide</i>.</a>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>You already have an account in the Amazon Web Services GovCloud (US) Region that is paired
        *                     with a management account of an organization in the commercial Region.</p>
        *             </li>
        *             <li>
        *                 <p>You call this action from the management account of your organization in the
        *                     commercial Region.</p>
        *             </li>
        *             <li>
        *                 <p>You have the <code>organizations:CreateGovCloudAccount</code> permission.
        *                 </p>
        *             </li>
        *          </ul>
        *         <p>Organizations automatically creates the required service-linked role named
        *                 <code>AWSServiceRoleForOrganizations</code>. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations and Service-Linked Roles</a> in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        *         <p>Amazon Web Services automatically enables CloudTrail for Amazon Web Services GovCloud (US) accounts, but you should also
        *             do the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Verify that CloudTrail is enabled to store logs.</p>
        *             </li>
        *             <li>
        *                 <p>Create an Amazon S3 bucket for CloudTrail log storage.</p>
        *                 <p>For more information, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/verifying-cloudtrail.html">Verifying CloudTrail Is
        *                         Enabled</a> in the <i>Amazon Web Services GovCloud User Guide</i>.
        *                 </p>
        *             </li>
        *          </ul>
        *         <p>If the request includes tags, then the requester must have the
        *                 <code>organizations:TagResource</code> permission. The tags are attached to the
        *             commercial account associated with the GovCloud account, rather than the GovCloud
        *             account itself. To add tags to the GovCloud account, call the <a>TagResource</a> operation in the GovCloud Region after the new GovCloud
        *             account exists.</p>
        *         <p>You call this action from the management account of your organization in the
        *             commercial Region to create a standalone Amazon Web Services account in the Amazon Web Services GovCloud (US)
        *             Region. After the account is created, the management account of an organization in the
        *             Amazon Web Services GovCloud (US) Region can invite it to that organization. For more information on
        *             inviting standalone accounts in the Amazon Web Services GovCloud (US) to join an organization, see
        *                 <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a> in the
        *                 <i>Amazon Web Services GovCloud User Guide.</i>
        *          </p>
        *         <p>Calling <code>CreateGovCloudAccount</code> is an asynchronous request that Amazon Web Services
        *             performs in the background. Because <code>CreateGovCloudAccount</code> operates
        *             asynchronously, it can return a successful completion message even though account
        *             initialization might still be in progress. You might need to wait a few minutes before
        *             you can successfully access the account. To check the status of the request, do one of
        *             the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Use the <code>OperationId</code> response element from this operation to
        *                     provide as a parameter to the <a>DescribeCreateAccountStatus</a>
        *                     operation.</p>
        *             </li>
        *             <li>
        *                 <p>Check the CloudTrail log for the <code>CreateAccountResult</code> event. For
        *                     information on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html">Monitoring the Activity in Your
        *                         Organization</a> in the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p></p>
        *         <p>When you call the <code>CreateGovCloudAccount</code> action, you create two accounts:
        *             a standalone account in the Amazon Web Services GovCloud (US) Region and an associated account in the
        *             commercial Region for billing and support purposes. The account in the commercial Region
        *             is automatically a member of the organization whose credentials made the request. Both
        *             accounts are associated with the same email address.</p>
        *         <p>A role is created in the new account in the commercial Region that allows the
        *             management account in the organization in the commercial Region to assume it. An Amazon Web Services
        *             GovCloud (US) account is then created and associated with the commercial account that
        *             you just created. A role is also created in the new Amazon Web Services GovCloud (US) account that can
        *             be assumed by the Amazon Web Services GovCloud (US) account that is associated with the management
        *             account of the commercial organization. For more information and to view a diagram that
        *             explains how account access works, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a> in the
        *                 <i>Amazon Web Services GovCloud User Guide.</i>
        *          </p>
        *
        *
        *         <p>For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating
        *                 an Amazon Web Services account in Your Organization</a> in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        *         <important>
        *             <ul>
        *                <li>
        *                     <p>When you create an account in an organization using the Organizations console,
        *                         API, or CLI commands, the information required for the account to operate as
        *                         a standalone account is <i>not</i> automatically collected.
        *                         This includes a payment method and signing the end user license agreement
        *                         (EULA). If you must remove an account from your organization later, you can
        *                         do so only after you provide the missing information. Follow the steps at
        *                             <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization as a member account</a> in the
        *                             <i>Organizations User Guide.</i>
        *                   </p>
        *                 </li>
        *                <li>
        *                     <p>If you get an exception that indicates that you exceeded your account
        *                         limits for the organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>If you get an exception that indicates that the operation failed because
        *                         your organization is still initializing, wait one hour and then try again.
        *                         If the error persists, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>Using <code>CreateGovCloudAccount</code> to create multiple temporary
        *                         accounts isn't recommended. You can only close an account from the Amazon Web Services
        *                         Billing and Cost Management console, and you must be signed in as the root user. For information on
        *                         the requirements and process for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing an
        *                             Amazon Web Services account</a> in the
        *                         <i>Organizations User Guide</i>.</p>
        *                 </li>
        *             </ul>
        *         </important>
        *         <note>
        *             <p>When you create a member account with this operation, you can choose whether to
        *                 create the account with the <b>IAM User and Role Access to
        *                     Billing Information</b> switch enabled. If you enable it, IAM users and
        *                 roles that have appropriate permissions can view billing information for the
        *                 account. If you disable it, only the account root user can access billing
        *                 information. For information about how to disable this switch for an account, see
        *                     <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
        *                     Access to Your Billing Information and Tools</a>.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CreateGovCloudAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CreateGovCloudAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CreateGovCloudAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateGovCloudAccountCommandInput} for command's `input` shape.
        * @see {@link CreateGovCloudAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CreateGovCloudAccountCommand extends $Command<CreateGovCloudAccountCommandInput, CreateGovCloudAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CreateGovCloudAccountCommandInput;
            constructor(input: CreateGovCloudAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateGovCloudAccountCommandInput, CreateGovCloudAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationalUnitCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateOrganizationalUnitRequest, CreateOrganizationalUnitResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CreateOrganizationalUnitCommandInput extends CreateOrganizationalUnitRequest {
    }
    export interface CreateOrganizationalUnitCommandOutput extends CreateOrganizationalUnitResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an organizational unit (OU) within a root or parent OU. An OU is a container
        *             for accounts that enables you to organize your accounts to apply policies according to
        *             your business requirements. The number of levels deep that you can nest OUs is dependent
        *             upon the policy types enabled for that root. For service control policies, the limit is
        *             five.</p>
        *         <p>For more information about OUs, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing Organizational Units</a> in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        *         <p>If the request includes tags, then the requester must have the
        *                 <code>organizations:TagResource</code> permission.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CreateOrganizationalUnitCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CreateOrganizationalUnitCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CreateOrganizationalUnitCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateOrganizationalUnitCommandInput} for command's `input` shape.
        * @see {@link CreateOrganizationalUnitCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CreateOrganizationalUnitCommand extends $Command<CreateOrganizationalUnitCommandInput, CreateOrganizationalUnitCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CreateOrganizationalUnitCommandInput;
            constructor(input: CreateOrganizationalUnitCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateOrganizationalUnitCommandInput, CreateOrganizationalUnitCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateOrganizationRequest, CreateOrganizationResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CreateOrganizationCommandInput extends CreateOrganizationRequest {
    }
    export interface CreateOrganizationCommandOutput extends CreateOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Web Services organization. The account whose user is calling the
        *                 <code>CreateOrganization</code> operation automatically becomes the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">management account</a> of the new organization.</p>
        *         <p>This operation must be called using credentials from the account that is to become the
        *             new organization's management account. The principal must also have the relevant IAM
        *             permissions.</p>
        *         <p>By default (or if you set the <code>FeatureSet</code> parameter to <code>ALL</code>),
        *             the new organization is created with all features enabled and service control policies
        *             automatically enabled in the root. If you instead choose to create the organization
        *             supporting only the consolidated billing features by setting the <code>FeatureSet</code>
        *             parameter to <code>CONSOLIDATED_BILLING"</code>, no policy types are enabled by default,
        *             and you can't use organization policies</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CreateOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CreateOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CreateOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateOrganizationCommandInput} for command's `input` shape.
        * @see {@link CreateOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CreateOrganizationCommand extends $Command<CreateOrganizationCommandInput, CreateOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CreateOrganizationCommandInput;
            constructor(input: CreateOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateOrganizationCommandInput, CreateOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreatePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreatePolicyRequest, CreatePolicyResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface CreatePolicyCommandInput extends CreatePolicyRequest {
    }
    export interface CreatePolicyCommandOutput extends CreatePolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a policy of a specified type that you can attach to a root, an organizational
        *             unit (OU), or an individual Amazon Web Services account.</p>
        *         <p>For more information about policies and their use, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing
        *                 Organization Policies</a>.</p>
        *         <p>If the request includes tags, then the requester must have the
        *                 <code>organizations:TagResource</code> permission.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, CreatePolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, CreatePolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new CreatePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePolicyCommandInput} for command's `input` shape.
        * @see {@link CreatePolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class CreatePolicyCommand extends $Command<CreatePolicyCommandInput, CreatePolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: CreatePolicyCommandInput;
            constructor(input: CreatePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePolicyCommandInput, CreatePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeclineHandshakeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeclineHandshakeRequest, DeclineHandshakeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DeclineHandshakeCommandInput extends DeclineHandshakeRequest {
    }
    export interface DeclineHandshakeCommandOutput extends DeclineHandshakeResponse, __MetadataBearer {
    }
    /**
        * <p>Declines a handshake request. This sets the handshake state to <code>DECLINED</code>
        *             and effectively deactivates the request.</p>
        *         <p>This operation can be called only from the account that received the handshake. The originator of the handshake can use <a>CancelHandshake</a>
        *             instead. The originator can't reactivate a declined request, but can reinitiate the
        *             process with a new handshake request.</p>
        *         <p>After you decline a handshake, it continues to appear in the results of relevant APIs
        *             for only 30 days. After that, it's deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DeclineHandshakeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DeclineHandshakeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DeclineHandshakeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeclineHandshakeCommandInput} for command's `input` shape.
        * @see {@link DeclineHandshakeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DeclineHandshakeCommand extends $Command<DeclineHandshakeCommandInput, DeclineHandshakeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DeclineHandshakeCommandInput;
            constructor(input: DeclineHandshakeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeclineHandshakeCommandInput, DeclineHandshakeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationalUnitCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteOrganizationalUnitRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DeleteOrganizationalUnitCommandInput extends DeleteOrganizationalUnitRequest {
    }
    export interface DeleteOrganizationalUnitCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an organizational unit (OU) from a root or another OU. You must first remove
        *             all accounts and child OUs from the OU that you want to delete.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DeleteOrganizationalUnitCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DeleteOrganizationalUnitCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DeleteOrganizationalUnitCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteOrganizationalUnitCommandInput} for command's `input` shape.
        * @see {@link DeleteOrganizationalUnitCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DeleteOrganizationalUnitCommand extends $Command<DeleteOrganizationalUnitCommandInput, DeleteOrganizationalUnitCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DeleteOrganizationalUnitCommandInput;
            constructor(input: DeleteOrganizationalUnitCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteOrganizationalUnitCommandInput, DeleteOrganizationalUnitCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DeleteOrganizationCommandInput {
    }
    export interface DeleteOrganizationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the organization. You can delete an organization only by using credentials
        *             from the management account. The organization must be empty of member accounts.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DeleteOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DeleteOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DeleteOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteOrganizationCommandInput} for command's `input` shape.
        * @see {@link DeleteOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DeleteOrganizationCommand extends $Command<DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DeleteOrganizationCommandInput;
            constructor(input: DeleteOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeletePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeletePolicyRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DeletePolicyCommandInput extends DeletePolicyRequest {
    }
    export interface DeletePolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified policy from your organization. Before you perform this
        *             operation, you must first detach the policy from all organizational units (OUs), roots,
        *             and accounts.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DeletePolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DeletePolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DeletePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePolicyCommandInput} for command's `input` shape.
        * @see {@link DeletePolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DeletePolicyCommand extends $Command<DeletePolicyCommandInput, DeletePolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DeletePolicyCommandInput;
            constructor(input: DeletePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePolicyCommandInput, DeletePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeregisterDelegatedAdministratorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeregisterDelegatedAdministratorRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DeregisterDelegatedAdministratorCommandInput extends DeregisterDelegatedAdministratorRequest {
    }
    export interface DeregisterDelegatedAdministratorCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the specified member Amazon Web Services account as a delegated administrator for the
        *             specified Amazon Web Services service.</p>
        *         <important>
        *             <p>Deregistering a delegated administrator can have unintended impacts on the
        *                 functionality of the enabled Amazon Web Services service. See the documentation for the enabled
        *                 service before you deregister a delegated administrator so that you understand any
        *                 potential impacts.</p>
        *         </important>
        *         <p>You can run this action only for Amazon Web Services services that support this
        *     feature. For a current list of services that support it, see the column <i>Supports
        *     Delegated Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services Services that you can use with
        *     Organizations</a> in the <i>Organizations User Guide.</i>
        *          </p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DeregisterDelegatedAdministratorCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DeregisterDelegatedAdministratorCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DeregisterDelegatedAdministratorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeregisterDelegatedAdministratorCommandInput} for command's `input` shape.
        * @see {@link DeregisterDelegatedAdministratorCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DeregisterDelegatedAdministratorCommand extends $Command<DeregisterDelegatedAdministratorCommandInput, DeregisterDelegatedAdministratorCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DeregisterDelegatedAdministratorCommandInput;
            constructor(input: DeregisterDelegatedAdministratorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeregisterDelegatedAdministratorCommandInput, DeregisterDelegatedAdministratorCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAccountRequest, DescribeAccountResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeAccountCommandInput extends DescribeAccountRequest {
    }
    export interface DescribeAccountCommandOutput extends DescribeAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves Organizations-related information about the specified account.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAccountCommandInput} for command's `input` shape.
        * @see {@link DescribeAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeAccountCommand extends $Command<DescribeAccountCommandInput, DescribeAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeAccountCommandInput;
            constructor(input: DescribeAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAccountCommandInput, DescribeAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeCreateAccountStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeCreateAccountStatusRequest, DescribeCreateAccountStatusResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeCreateAccountStatusCommandInput extends DescribeCreateAccountStatusRequest {
    }
    export interface DescribeCreateAccountStatusCommandOutput extends DescribeCreateAccountStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the current status of an asynchronous request to create an account.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeCreateAccountStatusCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeCreateAccountStatusCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeCreateAccountStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCreateAccountStatusCommandInput} for command's `input` shape.
        * @see {@link DescribeCreateAccountStatusCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeCreateAccountStatusCommand extends $Command<DescribeCreateAccountStatusCommandInput, DescribeCreateAccountStatusCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeCreateAccountStatusCommandInput;
            constructor(input: DescribeCreateAccountStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCreateAccountStatusCommandInput, DescribeCreateAccountStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeEffectivePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeEffectivePolicyRequest, DescribeEffectivePolicyResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeEffectivePolicyCommandInput extends DescribeEffectivePolicyRequest {
    }
    export interface DescribeEffectivePolicyCommandOutput extends DescribeEffectivePolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the contents of the effective policy for specified policy type and account.
        *             The effective policy is the aggregation of any policies of the specified type that the
        *             account inherits, plus any policy of that type that is directly attached to the
        *             account.</p>
        *         <p>This operation applies only to policy types <i>other</i> than service
        *             control policies (SCPs).</p>
        *         <p>For more information about policy inheritance, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies-inheritance.html">How Policy Inheritance
        *                 Works</a> in the <i>Organizations User Guide</i>.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeEffectivePolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeEffectivePolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeEffectivePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEffectivePolicyCommandInput} for command's `input` shape.
        * @see {@link DescribeEffectivePolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeEffectivePolicyCommand extends $Command<DescribeEffectivePolicyCommandInput, DescribeEffectivePolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeEffectivePolicyCommandInput;
            constructor(input: DescribeEffectivePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEffectivePolicyCommandInput, DescribeEffectivePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeHandshakeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeHandshakeRequest, DescribeHandshakeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeHandshakeCommandInput extends DescribeHandshakeRequest {
    }
    export interface DescribeHandshakeCommandOutput extends DescribeHandshakeResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a previously requested handshake. The handshake ID comes
        *             from the response to the original <a>InviteAccountToOrganization</a>
        *             operation that generated the handshake.</p>
        *         <p>You can access handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>, or
        *                 <code>CANCELED</code> for only 30 days after they change to that state. They're then
        *             deleted and no longer accessible.</p>
        *         <p>This operation can be called from any account in the organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeHandshakeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeHandshakeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeHandshakeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeHandshakeCommandInput} for command's `input` shape.
        * @see {@link DescribeHandshakeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeHandshakeCommand extends $Command<DescribeHandshakeCommandInput, DescribeHandshakeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeHandshakeCommandInput;
            constructor(input: DescribeHandshakeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeHandshakeCommandInput, DescribeHandshakeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationalUnitCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeOrganizationalUnitRequest, DescribeOrganizationalUnitResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeOrganizationalUnitCommandInput extends DescribeOrganizationalUnitRequest {
    }
    export interface DescribeOrganizationalUnitCommandOutput extends DescribeOrganizationalUnitResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about an organizational unit (OU).</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeOrganizationalUnitCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeOrganizationalUnitCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeOrganizationalUnitCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeOrganizationalUnitCommandInput} for command's `input` shape.
        * @see {@link DescribeOrganizationalUnitCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeOrganizationalUnitCommand extends $Command<DescribeOrganizationalUnitCommandInput, DescribeOrganizationalUnitCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeOrganizationalUnitCommandInput;
            constructor(input: DescribeOrganizationalUnitCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeOrganizationalUnitCommandInput, DescribeOrganizationalUnitCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeOrganizationResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribeOrganizationCommandInput {
    }
    export interface DescribeOrganizationCommandOutput extends DescribeOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about the organization that the user's account belongs
        *             to.</p>
        *         <p>This operation can be called from any account in the organization.</p>
        *         <note>
        *             <p>Even if a policy type is shown as available in the organization, you can disable
        *                 it separately at the root level with <a>DisablePolicyType</a>. Use <a>ListRoots</a> to see the status of policy types for a specified
        *                 root.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribeOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribeOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribeOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribeOrganizationCommand extends $Command<DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribeOrganizationCommandInput;
            constructor(input: DescribeOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribePolicyRequest, DescribePolicyResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DescribePolicyCommandInput extends DescribePolicyRequest {
    }
    export interface DescribePolicyCommandOutput extends DescribePolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a policy.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DescribePolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DescribePolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DescribePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePolicyCommandInput} for command's `input` shape.
        * @see {@link DescribePolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DescribePolicyCommand extends $Command<DescribePolicyCommandInput, DescribePolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DescribePolicyCommandInput;
            constructor(input: DescribePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePolicyCommandInput, DescribePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DetachPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DetachPolicyRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DetachPolicyCommandInput extends DetachPolicyRequest {
    }
    export interface DetachPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Detaches a policy from a target root, organizational unit (OU), or account.</p>
        *         <important>
        *             <p>If the policy being detached is a service control policy (SCP), the changes to
        *                 permissions for Identity and Access Management (IAM) users and roles in affected accounts are
        *                 immediate.</p>
        *         </important>
        *         <p>Every root, OU, and account must have at least one SCP attached. If you want to
        *             replace the default <code>FullAWSAccess</code> policy with an SCP that limits the
        *             permissions that can be delegated, you must attach the replacement SCP before you can
        *             remove the default SCP. This is the authorization strategy of an "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_allowlist">allow list</a>". If you instead attach a second SCP and
        *             leave the <code>FullAWSAccess</code> SCP still attached, and specify <code>"Effect":
        *                 "Deny"</code> in the second SCP to override the <code>"Effect": "Allow"</code> in
        *             the <code>FullAWSAccess</code> policy (or any other attached SCP), you're using the
        *             authorization strategy of a "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_denylist">deny list</a>".</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DetachPolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DetachPolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DetachPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DetachPolicyCommandInput} for command's `input` shape.
        * @see {@link DetachPolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DetachPolicyCommand extends $Command<DetachPolicyCommandInput, DetachPolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DetachPolicyCommandInput;
            constructor(input: DetachPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetachPolicyCommandInput, DetachPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisableAWSServiceAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisableAWSServiceAccessRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DisableAWSServiceAccessCommandInput extends DisableAWSServiceAccessRequest {
    }
    export interface DisableAWSServiceAccessCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disables the integration of an Amazon Web Services service (the service that is specified by
        *                 <code>ServicePrincipal</code>) with Organizations. When you disable integration, the
        *             specified service no longer can create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked role</a> in
        *                 <i>new</i> accounts in your organization. This means the service can't
        *             perform operations on your behalf on any new accounts in your organization. The service
        *             can still perform operations in older accounts until the service completes its clean-up
        *             from Organizations.</p>
        *         <important>
        *             <p>We <b>
        *                   <i>strongly recommend</i>
        *                </b> that
        *                 you don't use this command to disable integration between Organizations and the specified
        *                 Amazon Web Services service. Instead, use the console or commands that are provided by the
        *                 specified service. This lets the trusted service perform any required initialization
        *                 when enabling trusted access, such as creating any required resources and any
        *                 required clean up of resources when disabling trusted access. </p>
        *             <p>For information about how to disable trusted service access to your organization
        *                 using the trusted service, see the <b>Learn more</b> link
        *                 under the <b>Supports Trusted Access</b> column at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services services that you can use with Organizations</a>. on this page.</p>
        *             <p>If you disable access by using this command, it causes the following actions to
        *                 occur:</p>
        *             <ul>
        *                <li>
        *                     <p>The service can no longer create a service-linked role in the accounts in
        *                         your organization. This means that the service can't perform operations on
        *                         your behalf on any new accounts in your organization. The service can still
        *                         perform operations in older accounts until the service completes its
        *                         clean-up from Organizations. </p>
        *                 </li>
        *                <li>
        *                     <p>The service can no longer perform tasks in the member accounts in the
        *                         organization, unless those operations are explicitly permitted by the IAM
        *                         policies that are attached to your roles. This includes any data aggregation
        *                         from the member accounts to the management account, or to a delegated
        *                         administrator account, where relevant.</p>
        *                 </li>
        *                <li>
        *                     <p>Some services detect this and clean up any remaining data or resources
        *                         related to the integration, while other services stop accessing the
        *                         organization but leave any historical data and configuration in place to
        *                         support a possible re-enabling of the integration.</p>
        *                 </li>
        *             </ul>
        *             <p>Using the other service's console or commands to disable the integration ensures
        *                 that the other service is aware that it can clean up any resources that are required
        *                 only for the integration. How the service cleans up its resources in the
        *                 organization's accounts depends on that service. For more information, see the
        *                 documentation for the other Amazon Web Services service. </p>
        *         </important>
        *         <p>After you perform the <code>DisableAWSServiceAccess</code> operation, the specified
        *             service can no longer perform operations in your organization's accounts </p>
        *         <p>For more information about integrating other services with Organizations, including the
        *             list of services that work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating Organizations with Other
        *                 Amazon Web Services Services</a> in the <i>Organizations User Guide.</i>
        *          </p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DisableAWSServiceAccessCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DisableAWSServiceAccessCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DisableAWSServiceAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisableAWSServiceAccessCommandInput} for command's `input` shape.
        * @see {@link DisableAWSServiceAccessCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DisableAWSServiceAccessCommand extends $Command<DisableAWSServiceAccessCommandInput, DisableAWSServiceAccessCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DisableAWSServiceAccessCommandInput;
            constructor(input: DisableAWSServiceAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableAWSServiceAccessCommandInput, DisableAWSServiceAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisablePolicyTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisablePolicyTypeRequest, DisablePolicyTypeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface DisablePolicyTypeCommandInput extends DisablePolicyTypeRequest {
    }
    export interface DisablePolicyTypeCommandOutput extends DisablePolicyTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Disables an organizational policy type in a root. A policy of a certain type can be
        *             attached to entities in a root only if that type is enabled in the root. After you
        *             perform this operation, you no longer can attach policies of the specified type to that
        *             root or to any organizational unit (OU) or account in that root. You can undo this by
        *             using the <a>EnablePolicyType</a> operation.</p>
        *         <p>This is an asynchronous request that Amazon Web Services performs in the background. If you disable
        *             a policy type for a root, it still appears enabled for the organization if <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features</a> are enabled for the organization. Amazon Web Services recommends that you
        *             first use <a>ListRoots</a> to see the status of policy types for a specified
        *             root, and then use this operation.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        *         <p> To view the status of available policy types in the organization, use <a>DescribeOrganization</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, DisablePolicyTypeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, DisablePolicyTypeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new DisablePolicyTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisablePolicyTypeCommandInput} for command's `input` shape.
        * @see {@link DisablePolicyTypeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class DisablePolicyTypeCommand extends $Command<DisablePolicyTypeCommandInput, DisablePolicyTypeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: DisablePolicyTypeCommandInput;
            constructor(input: DisablePolicyTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisablePolicyTypeCommandInput, DisablePolicyTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAllFeaturesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { EnableAllFeaturesRequest, EnableAllFeaturesResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface EnableAllFeaturesCommandInput extends EnableAllFeaturesRequest {
    }
    export interface EnableAllFeaturesCommandOutput extends EnableAllFeaturesResponse, __MetadataBearer {
    }
    /**
        * <p>Enables all features in an organization. This enables the use of organization policies
        *             that can restrict the services and actions that can be called in each account. Until you
        *             enable all features, you have access only to consolidated billing, and you can't use any
        *             of the advanced account administration features that Organizations supports. For more
        *             information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        *         <important>
        *             <p>This operation is required only for organizations that were created explicitly
        *                 with only the consolidated billing features enabled. Calling this operation sends a
        *                 handshake to every invited account in the organization. The feature set change can
        *                 be finalized and the additional features enabled only after all administrators in
        *                 the invited accounts approve the change by accepting the handshake.</p>
        *         </important>
        *         <p>After you enable all features, you can separately enable or disable individual policy
        *             types in a root using <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. To see the status of policy types in a root, use
        *                 <a>ListRoots</a>.</p>
        *         <p>After all invited member accounts accept the handshake, you finalize the feature set
        *             change by accepting the handshake that contains <code>"Action":
        *                 "ENABLE_ALL_FEATURES"</code>. This completes the change.</p>
        *         <p>After you enable all features in your organization, the management account in the
        *             organization can apply policies on all member accounts. These policies can restrict what
        *             users and even administrators in those accounts can do. The management account can apply
        *             policies that prevent accounts from leaving the organization. Ensure that your account
        *             administrators are aware of this.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, EnableAllFeaturesCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, EnableAllFeaturesCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new EnableAllFeaturesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableAllFeaturesCommandInput} for command's `input` shape.
        * @see {@link EnableAllFeaturesCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class EnableAllFeaturesCommand extends $Command<EnableAllFeaturesCommandInput, EnableAllFeaturesCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: EnableAllFeaturesCommandInput;
            constructor(input: EnableAllFeaturesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableAllFeaturesCommandInput, EnableAllFeaturesCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAWSServiceAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { EnableAWSServiceAccessRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface EnableAWSServiceAccessCommandInput extends EnableAWSServiceAccessRequest {
    }
    export interface EnableAWSServiceAccessCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Enables the integration of an Amazon Web Services service (the service that is specified by
        *                 <code>ServicePrincipal</code>) with Organizations. When you enable integration, you allow
        *             the specified service to create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked role</a> in
        *             all the accounts in your organization. This allows the service to perform operations on
        *             your behalf in your organization and its accounts.</p>
        *         <important>
        *             <p>We recommend that you enable integration between Organizations and the specified Amazon Web Services
        *                 service by using the console or commands that are provided by the specified service.
        *                 Doing so ensures that the service is aware that it can create the resources that are
        *                 required for the integration. How the service creates those resources in the
        *                 organization's accounts depends on that service. For more information, see the
        *                 documentation for the other Amazon Web Services service.</p>
        *         </important>
        *         <p>For more information about enabling services to integrate with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
        *                 Organizations with Other Amazon Web Services Services</a> in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        *         <p>This operation can be called only from the organization's management account and only
        *             if the organization has <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">enabled all
        *                 features</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, EnableAWSServiceAccessCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, EnableAWSServiceAccessCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new EnableAWSServiceAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableAWSServiceAccessCommandInput} for command's `input` shape.
        * @see {@link EnableAWSServiceAccessCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class EnableAWSServiceAccessCommand extends $Command<EnableAWSServiceAccessCommandInput, EnableAWSServiceAccessCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: EnableAWSServiceAccessCommandInput;
            constructor(input: EnableAWSServiceAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableAWSServiceAccessCommandInput, EnableAWSServiceAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnablePolicyTypeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { EnablePolicyTypeRequest, EnablePolicyTypeResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface EnablePolicyTypeCommandInput extends EnablePolicyTypeRequest {
    }
    export interface EnablePolicyTypeCommandOutput extends EnablePolicyTypeResponse, __MetadataBearer {
    }
    /**
        * <p>Enables a policy type in a root. After you enable a policy type in a root, you can
        *             attach policies of that type to the root, any organizational unit (OU), or account in
        *             that root. You can undo this by using the <a>DisablePolicyType</a>
        *             operation.</p>
        *         <p>This is an asynchronous request that Amazon Web Services performs in the background. Amazon Web Services
        *             recommends that you first use <a>ListRoots</a> to see the status of policy
        *             types for a specified root, and then use this operation.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        *         <p>You can enable a policy type in a root only if that policy type is available in the
        *             organization. To view the status of available policy types in the organization, use
        *                 <a>DescribeOrganization</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, EnablePolicyTypeCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, EnablePolicyTypeCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new EnablePolicyTypeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnablePolicyTypeCommandInput} for command's `input` shape.
        * @see {@link EnablePolicyTypeCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class EnablePolicyTypeCommand extends $Command<EnablePolicyTypeCommandInput, EnablePolicyTypeCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: EnablePolicyTypeCommandInput;
            constructor(input: EnablePolicyTypeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnablePolicyTypeCommandInput, EnablePolicyTypeCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/InviteAccountToOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { InviteAccountToOrganizationRequest, InviteAccountToOrganizationResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface InviteAccountToOrganizationCommandInput extends InviteAccountToOrganizationRequest {
    }
    export interface InviteAccountToOrganizationCommandOutput extends InviteAccountToOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Sends an invitation to another account to join your organization as a member account.
        *             Organizations sends email on your behalf to the email address that is associated with the
        *             other account's owner. The invitation is implemented as a <a>Handshake</a>
        *             whose details are in the response.</p>
        *         <important>
        *             <ul>
        *                <li>
        *                     <p>You can invite Amazon Web Services accounts only from the same seller as the management
        *                         account. For example, if your organization's management account was created
        *                         by Amazon Internet Services Pvt. Ltd (AISPL), an Amazon Web Services seller in India, you
        *                         can invite only other AISPL accounts to your organization. You can't combine
        *                         accounts from AISPL and Amazon Web Services or from any other Amazon Web Services seller. For more
        *                         information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated
        *                             Billing in India</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>If you receive an exception that indicates that you exceeded your account
        *                         limits for the organization or that the operation failed because your
        *                         organization is still initializing, wait one hour and then try again. If the
        *                         error persists after an hour, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </important>
        *         <p>If the request includes tags, then the requester must have the
        *                 <code>organizations:TagResource</code> permission.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, InviteAccountToOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, InviteAccountToOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new InviteAccountToOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link InviteAccountToOrganizationCommandInput} for command's `input` shape.
        * @see {@link InviteAccountToOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class InviteAccountToOrganizationCommand extends $Command<InviteAccountToOrganizationCommandInput, InviteAccountToOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: InviteAccountToOrganizationCommandInput;
            constructor(input: InviteAccountToOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InviteAccountToOrganizationCommandInput, InviteAccountToOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/LeaveOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface LeaveOrganizationCommandInput {
    }
    export interface LeaveOrganizationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes a member account from its parent organization. This version of the operation
        *             is performed by the account that wants to leave. To remove a member account as a user in
        *             the management account, use <a>RemoveAccountFromOrganization</a>
        *             instead.</p>
        *         <p>This operation can be called only from a member account in the organization.</p>
        *         <important>
        *             <ul>
        *                <li>
        *                     <p>The management account in an organization with all features enabled can
        *                         set service control policies (SCPs) that can restrict what administrators of
        *                         member accounts can do. This includes preventing them from successfully
        *                         calling <code>LeaveOrganization</code> and leaving the organization.</p>
        *                 </li>
        *                <li>
        *                     <p>You can leave an organization as a member account only if the account is
        *                         configured with the information required to operate as a standalone account.
        *                         When you create an account in an organization using the Organizations console,
        *                         API, or CLI commands, the information required of standalone accounts is
        *                             <i>not</i> automatically collected. For each account that
        *                         you want to make standalone, you must perform the following steps. If any of
        *                         the steps are already completed for this account, that step doesn't
        *                         appear.</p>
        *                     <ul>
        *                      <li>
        *                             <p>Choose a support plan</p>
        *                         </li>
        *                      <li>
        *                             <p>Provide and verify the required contact information</p>
        *                         </li>
        *                      <li>
        *                             <p>Provide a current payment method</p>
        *                         </li>
        *                   </ul>
        *                     <p>Amazon Web Services uses the payment method to charge for any billable (not free tier)
        *                         Amazon Web Services activity that occurs while the account isn't attached to an
        *                         organization. Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not
        *                             yet been provided</a> in the
        *                         <i>Organizations User Guide.</i>
        *                   </p>
        *                 </li>
        *                <li>
        *                     <p>The account that you want to leave must not be a delegated administrator
        *                         account for any Amazon Web Services service enabled for your organization. If the account
        *                         is a delegated administrator, you must first change the delegated
        *                         administrator account to another account that is remaining in the
        *                         organization.</p>
        *                 </li>
        *                <li>
        *                     <p>You can leave an organization only after you enable IAM user access to
        *                         billing in your account. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the
        *                             <i>Amazon Web Services Billing and Cost Management User Guide.</i>
        *                   </p>
        *                 </li>
        *                <li>
        *                     <p>After the account leaves the organization, all tags that were attached to
        *                         the account object in the organization are deleted. Amazon Web Services accounts outside
        *                         of an organization do not support tags.</p>
        *                 </li>
        *                <li>
        *                     <p>A newly created account has a waiting period before it can be removed from
        *                         its organization. If you get an error that indicates that a wait period is
        *                         required, then try again in a few days.</p>
        *                 </li>
        *             </ul>
        *         </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, LeaveOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, LeaveOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new LeaveOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link LeaveOrganizationCommandInput} for command's `input` shape.
        * @see {@link LeaveOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class LeaveOrganizationCommand extends $Command<LeaveOrganizationCommandInput, LeaveOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: LeaveOrganizationCommandInput;
            constructor(input: LeaveOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<LeaveOrganizationCommandInput, LeaveOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccountsRequest, ListAccountsResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListAccountsCommandInput extends ListAccountsRequest {
    }
    export interface ListAccountsCommandOutput extends ListAccountsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the accounts in the organization. To request only the accounts in a
        *             specified root or organizational unit (OU), use the <a>ListAccountsForParent</a> operation instead.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListAccountsCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListAccountsCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListAccountsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccountsCommandInput} for command's `input` shape.
        * @see {@link ListAccountsCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListAccountsCommand extends $Command<ListAccountsCommandInput, ListAccountsCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListAccountsCommandInput;
            constructor(input: ListAccountsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccountsCommandInput, ListAccountsCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsForParentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccountsForParentRequest, ListAccountsForParentResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListAccountsForParentCommandInput extends ListAccountsForParentRequest {
    }
    export interface ListAccountsForParentCommandOutput extends ListAccountsForParentResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the accounts in an organization that are contained by the specified target root
        *             or organizational unit (OU). If you specify the root, you get a list of all the accounts
        *             that aren't in any OU. If you specify an OU, you get a list of all the accounts in only
        *             that OU and not in any child OUs. To get a list of all accounts in the organization, use
        *             the <a>ListAccounts</a> operation.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListAccountsForParentCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListAccountsForParentCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListAccountsForParentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccountsForParentCommandInput} for command's `input` shape.
        * @see {@link ListAccountsForParentCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListAccountsForParentCommand extends $Command<ListAccountsForParentCommandInput, ListAccountsForParentCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListAccountsForParentCommandInput;
            constructor(input: ListAccountsForParentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccountsForParentCommandInput, ListAccountsForParentCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAWSServiceAccessForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAWSServiceAccessForOrganizationRequest, ListAWSServiceAccessForOrganizationResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListAWSServiceAccessForOrganizationCommandInput extends ListAWSServiceAccessForOrganizationRequest {
    }
    export interface ListAWSServiceAccessForOrganizationCommandOutput extends ListAWSServiceAccessForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of the Amazon Web Services services that you enabled to integrate with your
        *             organization. After a service on this list creates the resources that it requires for
        *             the integration, it can perform operations on your organization and its accounts.</p>
        *         <p>For more information about integrating other services with Organizations, including the
        *             list of services that currently work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating Organizations with Other
        *                 Amazon Web Services Services</a> in the <i>Organizations User Guide.</i>
        *          </p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListAWSServiceAccessForOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListAWSServiceAccessForOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListAWSServiceAccessForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAWSServiceAccessForOrganizationCommandInput} for command's `input` shape.
        * @see {@link ListAWSServiceAccessForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListAWSServiceAccessForOrganizationCommand extends $Command<ListAWSServiceAccessForOrganizationCommandInput, ListAWSServiceAccessForOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListAWSServiceAccessForOrganizationCommandInput;
            constructor(input: ListAWSServiceAccessForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAWSServiceAccessForOrganizationCommandInput, ListAWSServiceAccessForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListChildrenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListChildrenRequest, ListChildrenResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListChildrenCommandInput extends ListChildrenRequest {
    }
    export interface ListChildrenCommandOutput extends ListChildrenResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all of the organizational units (OUs) or accounts that are contained in the
        *             specified parent OU or root. This operation, along with <a>ListParents</a>
        *             enables you to traverse the tree structure that makes up this root.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListChildrenCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListChildrenCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListChildrenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChildrenCommandInput} for command's `input` shape.
        * @see {@link ListChildrenCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListChildrenCommand extends $Command<ListChildrenCommandInput, ListChildrenCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListChildrenCommandInput;
            constructor(input: ListChildrenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChildrenCommandInput, ListChildrenCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListCreateAccountStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListCreateAccountStatusRequest, ListCreateAccountStatusResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListCreateAccountStatusCommandInput extends ListCreateAccountStatusRequest {
    }
    export interface ListCreateAccountStatusCommandOutput extends ListCreateAccountStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the account creation requests that match the specified status that is currently
        *             being tracked for the organization.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListCreateAccountStatusCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListCreateAccountStatusCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListCreateAccountStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCreateAccountStatusCommandInput} for command's `input` shape.
        * @see {@link ListCreateAccountStatusCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListCreateAccountStatusCommand extends $Command<ListCreateAccountStatusCommandInput, ListCreateAccountStatusCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListCreateAccountStatusCommandInput;
            constructor(input: ListCreateAccountStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCreateAccountStatusCommandInput, ListCreateAccountStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedAdministratorsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDelegatedAdministratorsRequest, ListDelegatedAdministratorsResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListDelegatedAdministratorsCommandInput extends ListDelegatedAdministratorsRequest {
    }
    export interface ListDelegatedAdministratorsCommandOutput extends ListDelegatedAdministratorsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Amazon Web Services accounts that are designated as delegated administrators in this
        *             organization.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListDelegatedAdministratorsCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListDelegatedAdministratorsCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListDelegatedAdministratorsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDelegatedAdministratorsCommandInput} for command's `input` shape.
        * @see {@link ListDelegatedAdministratorsCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListDelegatedAdministratorsCommand extends $Command<ListDelegatedAdministratorsCommandInput, ListDelegatedAdministratorsCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListDelegatedAdministratorsCommandInput;
            constructor(input: ListDelegatedAdministratorsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDelegatedAdministratorsCommandInput, ListDelegatedAdministratorsCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedServicesForAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDelegatedServicesForAccountRequest, ListDelegatedServicesForAccountResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListDelegatedServicesForAccountCommandInput extends ListDelegatedServicesForAccountRequest {
    }
    export interface ListDelegatedServicesForAccountCommandOutput extends ListDelegatedServicesForAccountResponse, __MetadataBearer {
    }
    /**
        * <p>List the Amazon Web Services services for which the specified account is a delegated
        *             administrator.</p>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListDelegatedServicesForAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListDelegatedServicesForAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListDelegatedServicesForAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDelegatedServicesForAccountCommandInput} for command's `input` shape.
        * @see {@link ListDelegatedServicesForAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListDelegatedServicesForAccountCommand extends $Command<ListDelegatedServicesForAccountCommandInput, ListDelegatedServicesForAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListDelegatedServicesForAccountCommandInput;
            constructor(input: ListDelegatedServicesForAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDelegatedServicesForAccountCommandInput, ListDelegatedServicesForAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListHandshakesForAccountRequest, ListHandshakesForAccountResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListHandshakesForAccountCommandInput extends ListHandshakesForAccountRequest {
    }
    export interface ListHandshakesForAccountCommandOutput extends ListHandshakesForAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the current handshakes that are associated with the account of the requesting
        *             user.</p>
        *         <p>Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>,
        *                 <code>CANCELED</code>, or <code>EXPIRED</code> appear in the results of this API for
        *             only 30 days after changing to that state. After that, they're deleted and no longer
        *             accessible.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called from any account in the organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListHandshakesForAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListHandshakesForAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListHandshakesForAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListHandshakesForAccountCommandInput} for command's `input` shape.
        * @see {@link ListHandshakesForAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListHandshakesForAccountCommand extends $Command<ListHandshakesForAccountCommandInput, ListHandshakesForAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListHandshakesForAccountCommandInput;
            constructor(input: ListHandshakesForAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListHandshakesForAccountCommandInput, ListHandshakesForAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListHandshakesForOrganizationRequest, ListHandshakesForOrganizationResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListHandshakesForOrganizationCommandInput extends ListHandshakesForOrganizationRequest {
    }
    export interface ListHandshakesForOrganizationCommandOutput extends ListHandshakesForOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the handshakes that are associated with the organization that the requesting
        *             user is part of. The <code>ListHandshakesForOrganization</code> operation returns a list
        *             of handshake structures. Each structure contains details and status about a
        *             handshake.</p>
        *         <p>Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>,
        *                 <code>CANCELED</code>, or <code>EXPIRED</code> appear in the results of this API for
        *             only 30 days after changing to that state. After that, they're deleted and no longer
        *             accessible.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListHandshakesForOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListHandshakesForOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListHandshakesForOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListHandshakesForOrganizationCommandInput} for command's `input` shape.
        * @see {@link ListHandshakesForOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListHandshakesForOrganizationCommand extends $Command<ListHandshakesForOrganizationCommandInput, ListHandshakesForOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListHandshakesForOrganizationCommandInput;
            constructor(input: ListHandshakesForOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListHandshakesForOrganizationCommandInput, ListHandshakesForOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListOrganizationalUnitsForParentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListOrganizationalUnitsForParentRequest, ListOrganizationalUnitsForParentResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListOrganizationalUnitsForParentCommandInput extends ListOrganizationalUnitsForParentRequest {
    }
    export interface ListOrganizationalUnitsForParentCommandOutput extends ListOrganizationalUnitsForParentResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the organizational units (OUs) in a parent organizational unit or root.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListOrganizationalUnitsForParentCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListOrganizationalUnitsForParentCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListOrganizationalUnitsForParentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOrganizationalUnitsForParentCommandInput} for command's `input` shape.
        * @see {@link ListOrganizationalUnitsForParentCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListOrganizationalUnitsForParentCommand extends $Command<ListOrganizationalUnitsForParentCommandInput, ListOrganizationalUnitsForParentCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListOrganizationalUnitsForParentCommandInput;
            constructor(input: ListOrganizationalUnitsForParentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOrganizationalUnitsForParentCommandInput, ListOrganizationalUnitsForParentCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListParentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListParentsRequest, ListParentsResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListParentsCommandInput extends ListParentsRequest {
    }
    export interface ListParentsCommandOutput extends ListParentsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the root or organizational units (OUs) that serve as the immediate parent of the
        *             specified child OU or account. This operation, along with <a>ListChildren</a>
        *             enables you to traverse the tree structure that makes up this root.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        *         <note>
        *             <p>In the current release, a child can have only a single parent.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListParentsCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListParentsCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListParentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListParentsCommandInput} for command's `input` shape.
        * @see {@link ListParentsCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListParentsCommand extends $Command<ListParentsCommandInput, ListParentsCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListParentsCommandInput;
            constructor(input: ListParentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListParentsCommandInput, ListParentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPoliciesRequest, ListPoliciesResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListPoliciesCommandInput extends ListPoliciesRequest {
    }
    export interface ListPoliciesCommandOutput extends ListPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the list of all policies in an organization of a specified type.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListPoliciesCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListPoliciesCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListPoliciesCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListPoliciesCommand extends $Command<ListPoliciesCommandInput, ListPoliciesCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListPoliciesCommandInput;
            constructor(input: ListPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPoliciesCommandInput, ListPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesForTargetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPoliciesForTargetRequest, ListPoliciesForTargetResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListPoliciesForTargetCommandInput extends ListPoliciesForTargetRequest {
    }
    export interface ListPoliciesForTargetCommandOutput extends ListPoliciesForTargetResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the policies that are directly attached to the specified target root,
        *             organizational unit (OU), or account. You must specify the policy type that you want
        *             included in the returned list.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListPoliciesForTargetCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListPoliciesForTargetCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListPoliciesForTargetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPoliciesForTargetCommandInput} for command's `input` shape.
        * @see {@link ListPoliciesForTargetCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListPoliciesForTargetCommand extends $Command<ListPoliciesForTargetCommandInput, ListPoliciesForTargetCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListPoliciesForTargetCommandInput;
            constructor(input: ListPoliciesForTargetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPoliciesForTargetCommandInput, ListPoliciesForTargetCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListRootsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRootsRequest, ListRootsResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListRootsCommandInput extends ListRootsRequest {
    }
    export interface ListRootsCommandOutput extends ListRootsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the roots that are defined in the current organization.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        *         <note>
        *             <p>Policy types can be enabled and disabled in roots. This is distinct from whether
        *                 they're available in the organization. When you enable all features, you make policy
        *                 types available for use in that organization. Individual policy types can then be
        *                 enabled and disabled in a root. To see the availability of a policy type in an
        *                 organization, use <a>DescribeOrganization</a>.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListRootsCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListRootsCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListRootsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRootsCommandInput} for command's `input` shape.
        * @see {@link ListRootsCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListRootsCommand extends $Command<ListRootsCommandInput, ListRootsCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListRootsCommandInput;
            constructor(input: ListRootsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRootsCommandInput, ListRootsCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists tags that are attached to the specified resource.</p>
        *         <p>You can attach tags to the following resources in Organizations.</p>
        *         <ul>
        *             <li>
        *                 <p>Amazon Web Services account</p>
        *             </li>
        *             <li>
        *                 <p>Organization root</p>
        *             </li>
        *             <li>
        *                 <p>Organizational unit (OU)</p>
        *             </li>
        *             <li>
        *                 <p>Policy (any type)</p>
        *             </li>
        *          </ul>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListTagsForResourceCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListTagsForResourceCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTargetsForPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTargetsForPolicyRequest, ListTargetsForPolicyResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface ListTargetsForPolicyCommandInput extends ListTargetsForPolicyRequest {
    }
    export interface ListTargetsForPolicyCommandOutput extends ListTargetsForPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the roots, organizational units (OUs), and accounts that the specified
        *             policy is attached to.</p>
        *         <note>
        *             <p>Always check the <code>NextToken</code> response parameter
        * for a <code>null</code> value when calling a <code>List*</code> operation. These operations can
        * occasionally return an empty set of results even when there are more results available. The
        * <code>NextToken</code> response parameter value is <code>null</code>
        *                <i>only</i>
        * when there are no more results to display.</p>
        *          </note>
        *         <p>This operation can be called only from the organization's
        * management account or by a member account that is a delegated administrator for an Amazon Web Services service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, ListTargetsForPolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, ListTargetsForPolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new ListTargetsForPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTargetsForPolicyCommandInput} for command's `input` shape.
        * @see {@link ListTargetsForPolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class ListTargetsForPolicyCommand extends $Command<ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: ListTargetsForPolicyCommandInput;
            constructor(input: ListTargetsForPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/MoveAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { MoveAccountRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface MoveAccountCommandInput extends MoveAccountRequest {
    }
    export interface MoveAccountCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Moves an account from its current source parent root or organizational unit (OU) to
        *             the specified destination parent root or OU.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, MoveAccountCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, MoveAccountCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new MoveAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link MoveAccountCommandInput} for command's `input` shape.
        * @see {@link MoveAccountCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class MoveAccountCommand extends $Command<MoveAccountCommandInput, MoveAccountCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: MoveAccountCommandInput;
            constructor(input: MoveAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<MoveAccountCommandInput, MoveAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RegisterDelegatedAdministratorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RegisterDelegatedAdministratorRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface RegisterDelegatedAdministratorCommandInput extends RegisterDelegatedAdministratorRequest {
    }
    export interface RegisterDelegatedAdministratorCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Enables the specified member account to administer the Organizations features of the specified
        *             Amazon Web Services service. It grants read-only access to Organizations service data. The account still
        *             requires IAM permissions to access and administer the Amazon Web Services service.</p>
        *         <p>You can run this action only for Amazon Web Services services that support this
        *     feature. For a current list of services that support it, see the column <i>Supports
        *     Delegated Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon Web Services Services that you can use with
        *     Organizations</a> in the <i>Organizations User Guide.</i>
        *          </p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, RegisterDelegatedAdministratorCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, RegisterDelegatedAdministratorCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new RegisterDelegatedAdministratorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterDelegatedAdministratorCommandInput} for command's `input` shape.
        * @see {@link RegisterDelegatedAdministratorCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class RegisterDelegatedAdministratorCommand extends $Command<RegisterDelegatedAdministratorCommandInput, RegisterDelegatedAdministratorCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: RegisterDelegatedAdministratorCommandInput;
            constructor(input: RegisterDelegatedAdministratorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterDelegatedAdministratorCommandInput, RegisterDelegatedAdministratorCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RemoveAccountFromOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RemoveAccountFromOrganizationRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface RemoveAccountFromOrganizationCommandInput extends RemoveAccountFromOrganizationRequest {
    }
    export interface RemoveAccountFromOrganizationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the specified account from the organization.</p>
        *         <p>The removed account becomes a standalone account that isn't a member of any
        *             organization. It's no longer subject to any policies and is responsible for its own bill
        *             payments. The organization's management account is no longer charged for any expenses
        *             accrued by the member account after it's removed from the organization.</p>
        *         <p>This operation can be called only from the organization's management account. Member accounts can remove themselves with <a>LeaveOrganization</a> instead.</p>
        *         <important>
        *             <ul>
        *                <li>
        *                     <p>You can remove an account from your organization only if the account is
        *                         configured with the information required to operate as a standalone account.
        *                         When you create an account in an organization using the Organizations console,
        *                         API, or CLI commands, the information required of standalone accounts is
        *                             <i>not</i> automatically collected. For an account that
        *                         you want to make standalone, you must choose a support plan, provide and
        *                         verify the required contact information, and provide a current payment
        *                         method. Amazon Web Services uses the payment method to charge for any billable (not free
        *                         tier) Amazon Web Services activity that occurs while the account isn't attached to an
        *                         organization. To remove an account that doesn't yet have this information,
        *                         you must sign in as the member account and follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not
        *                             yet been provided</a> in the
        *                         <i>Organizations User Guide.</i>
        *                   </p>
        *                 </li>
        *                <li>
        *                     <p>The account that you want to leave must not be a delegated administrator
        *                         account for any Amazon Web Services service enabled for your organization. If the account
        *                         is a delegated administrator, you must first change the delegated
        *                         administrator account to another account that is remaining in the
        *                         organization.</p>
        *                 </li>
        *                <li>
        *                     <p>After the account leaves the organization, all tags that were attached to
        *                         the account object in the organization are deleted. Amazon Web Services accounts outside
        *                         of an organization do not support tags.</p>
        *                 </li>
        *             </ul>
        *         </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, RemoveAccountFromOrganizationCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, RemoveAccountFromOrganizationCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new RemoveAccountFromOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveAccountFromOrganizationCommandInput} for command's `input` shape.
        * @see {@link RemoveAccountFromOrganizationCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class RemoveAccountFromOrganizationCommand extends $Command<RemoveAccountFromOrganizationCommandInput, RemoveAccountFromOrganizationCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: RemoveAccountFromOrganizationCommandInput;
            constructor(input: RemoveAccountFromOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveAccountFromOrganizationCommandInput, RemoveAccountFromOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Adds one or more tags to the specified resource.</p>
        *         <p>Currently, you can attach tags to the following resources in Organizations.</p>
        *         <ul>
        *             <li>
        *                 <p>Amazon Web Services account</p>
        *             </li>
        *             <li>
        *                 <p>Organization root</p>
        *             </li>
        *             <li>
        *                 <p>Organizational unit (OU)</p>
        *             </li>
        *             <li>
        *                 <p>Policy (any type)</p>
        *             </li>
        *          </ul>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, TagResourceCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, TagResourceCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes any tags with the specified keys from the specified resource.</p>
        *         <p>You can attach tags to the following resources in Organizations.</p>
        *         <ul>
        *             <li>
        *                 <p>Amazon Web Services account</p>
        *             </li>
        *             <li>
        *                 <p>Organization root</p>
        *             </li>
        *             <li>
        *                 <p>Organizational unit (OU)</p>
        *             </li>
        *             <li>
        *                 <p>Policy (any type)</p>
        *             </li>
        *          </ul>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, UntagResourceCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, UntagResourceCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdateOrganizationalUnitCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateOrganizationalUnitRequest, UpdateOrganizationalUnitResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface UpdateOrganizationalUnitCommandInput extends UpdateOrganizationalUnitRequest {
    }
    export interface UpdateOrganizationalUnitCommandOutput extends UpdateOrganizationalUnitResponse, __MetadataBearer {
    }
    /**
        * <p>Renames the specified organizational unit (OU). The ID and ARN don't change. The child
        *             OUs and accounts remain in place, and any attached policies of the OU remain
        *             attached.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, UpdateOrganizationalUnitCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, UpdateOrganizationalUnitCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new UpdateOrganizationalUnitCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateOrganizationalUnitCommandInput} for command's `input` shape.
        * @see {@link UpdateOrganizationalUnitCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class UpdateOrganizationalUnitCommand extends $Command<UpdateOrganizationalUnitCommandInput, UpdateOrganizationalUnitCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: UpdateOrganizationalUnitCommandInput;
            constructor(input: UpdateOrganizationalUnitCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateOrganizationalUnitCommandInput, UpdateOrganizationalUnitCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdatePolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdatePolicyRequest, UpdatePolicyResponse } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0";
    import { OrganizationsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient";
    export interface UpdatePolicyCommandInput extends UpdatePolicyRequest {
    }
    export interface UpdatePolicyCommandOutput extends UpdatePolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing policy with a new name, description, or content. If you don't
        *             supply any parameter, that value remains unchanged. You can't change a policy's
        *             type.</p>
        *         <p>This operation can be called only from the organization's management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { OrganizationsClient, UpdatePolicyCommand } from "@aws-sdk/client-organizations"; // ES Modules import
        * // const { OrganizationsClient, UpdatePolicyCommand } = require("@aws-sdk/client-organizations"); // CommonJS import
        * const client = new OrganizationsClient(config);
        * const command = new UpdatePolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePolicyCommandInput} for command's `input` shape.
        * @see {@link UpdatePolicyCommandOutput} for command's `response` shape.
        * @see {@link OrganizationsClientResolvedConfig | config} for OrganizationsClient's `config` shape.
        *
        */
    export class UpdatePolicyCommand extends $Command<UpdatePolicyCommandInput, UpdatePolicyCommandOutput, OrganizationsClientResolvedConfig> {
            readonly input: UpdatePolicyCommandInput;
            constructor(input: UpdatePolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OrganizationsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePolicyCommandInput, UpdatePolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/OrganizationsClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptHandshakeCommandInput, AcceptHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AcceptHandshakeCommand";
    import { AttachPolicyCommandInput, AttachPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/AttachPolicyCommand";
    import { CancelHandshakeCommandInput, CancelHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CancelHandshakeCommand";
    import { CloseAccountCommandInput, CloseAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CloseAccountCommand";
    import { CreateAccountCommandInput, CreateAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateAccountCommand";
    import { CreateGovCloudAccountCommandInput, CreateGovCloudAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateGovCloudAccountCommand";
    import { CreateOrganizationalUnitCommandInput, CreateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationalUnitCommand";
    import { CreateOrganizationCommandInput, CreateOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreateOrganizationCommand";
    import { CreatePolicyCommandInput, CreatePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/CreatePolicyCommand";
    import { DeclineHandshakeCommandInput, DeclineHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeclineHandshakeCommand";
    import { DeleteOrganizationalUnitCommandInput, DeleteOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationalUnitCommand";
    import { DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeleteOrganizationCommand";
    import { DeletePolicyCommandInput, DeletePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeletePolicyCommand";
    import { DeregisterDelegatedAdministratorCommandInput, DeregisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DeregisterDelegatedAdministratorCommand";
    import { DescribeAccountCommandInput, DescribeAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeAccountCommand";
    import { DescribeCreateAccountStatusCommandInput, DescribeCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeCreateAccountStatusCommand";
    import { DescribeEffectivePolicyCommandInput, DescribeEffectivePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeEffectivePolicyCommand";
    import { DescribeHandshakeCommandInput, DescribeHandshakeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeHandshakeCommand";
    import { DescribeOrganizationalUnitCommandInput, DescribeOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationalUnitCommand";
    import { DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribeOrganizationCommand";
    import { DescribePolicyCommandInput, DescribePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DescribePolicyCommand";
    import { DetachPolicyCommandInput, DetachPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DetachPolicyCommand";
    import { DisableAWSServiceAccessCommandInput, DisableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisableAWSServiceAccessCommand";
    import { DisablePolicyTypeCommandInput, DisablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/DisablePolicyTypeCommand";
    import { EnableAllFeaturesCommandInput, EnableAllFeaturesCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAllFeaturesCommand";
    import { EnableAWSServiceAccessCommandInput, EnableAWSServiceAccessCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnableAWSServiceAccessCommand";
    import { EnablePolicyTypeCommandInput, EnablePolicyTypeCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/EnablePolicyTypeCommand";
    import { InviteAccountToOrganizationCommandInput, InviteAccountToOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/InviteAccountToOrganizationCommand";
    import { LeaveOrganizationCommandInput, LeaveOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/LeaveOrganizationCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsCommand";
    import { ListAccountsForParentCommandInput, ListAccountsForParentCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAccountsForParentCommand";
    import { ListAWSServiceAccessForOrganizationCommandInput, ListAWSServiceAccessForOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListAWSServiceAccessForOrganizationCommand";
    import { ListChildrenCommandInput, ListChildrenCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListChildrenCommand";
    import { ListCreateAccountStatusCommandInput, ListCreateAccountStatusCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListCreateAccountStatusCommand";
    import { ListDelegatedAdministratorsCommandInput, ListDelegatedAdministratorsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedAdministratorsCommand";
    import { ListDelegatedServicesForAccountCommandInput, ListDelegatedServicesForAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListDelegatedServicesForAccountCommand";
    import { ListHandshakesForAccountCommandInput, ListHandshakesForAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForAccountCommand";
    import { ListHandshakesForOrganizationCommandInput, ListHandshakesForOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListHandshakesForOrganizationCommand";
    import { ListOrganizationalUnitsForParentCommandInput, ListOrganizationalUnitsForParentCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListOrganizationalUnitsForParentCommand";
    import { ListParentsCommandInput, ListParentsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListParentsCommand";
    import { ListPoliciesCommandInput, ListPoliciesCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesCommand";
    import { ListPoliciesForTargetCommandInput, ListPoliciesForTargetCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListPoliciesForTargetCommand";
    import { ListRootsCommandInput, ListRootsCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListRootsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTagsForResourceCommand";
    import { ListTargetsForPolicyCommandInput, ListTargetsForPolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/ListTargetsForPolicyCommand";
    import { MoveAccountCommandInput, MoveAccountCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/MoveAccountCommand";
    import { RegisterDelegatedAdministratorCommandInput, RegisterDelegatedAdministratorCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RegisterDelegatedAdministratorCommand";
    import { RemoveAccountFromOrganizationCommandInput, RemoveAccountFromOrganizationCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/RemoveAccountFromOrganizationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UntagResourceCommand";
    import { UpdateOrganizationalUnitCommandInput, UpdateOrganizationalUnitCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdateOrganizationalUnitCommand";
    import { UpdatePolicyCommandInput, UpdatePolicyCommandOutput } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/commands/UpdatePolicyCommand";
    export type ServiceInputTypes = AcceptHandshakeCommandInput | AttachPolicyCommandInput | CancelHandshakeCommandInput | CloseAccountCommandInput | CreateAccountCommandInput | CreateGovCloudAccountCommandInput | CreateOrganizationCommandInput | CreateOrganizationalUnitCommandInput | CreatePolicyCommandInput | DeclineHandshakeCommandInput | DeleteOrganizationCommandInput | DeleteOrganizationalUnitCommandInput | DeletePolicyCommandInput | DeregisterDelegatedAdministratorCommandInput | DescribeAccountCommandInput | DescribeCreateAccountStatusCommandInput | DescribeEffectivePolicyCommandInput | DescribeHandshakeCommandInput | DescribeOrganizationCommandInput | DescribeOrganizationalUnitCommandInput | DescribePolicyCommandInput | DetachPolicyCommandInput | DisableAWSServiceAccessCommandInput | DisablePolicyTypeCommandInput | EnableAWSServiceAccessCommandInput | EnableAllFeaturesCommandInput | EnablePolicyTypeCommandInput | InviteAccountToOrganizationCommandInput | LeaveOrganizationCommandInput | ListAWSServiceAccessForOrganizationCommandInput | ListAccountsCommandInput | ListAccountsForParentCommandInput | ListChildrenCommandInput | ListCreateAccountStatusCommandInput | ListDelegatedAdministratorsCommandInput | ListDelegatedServicesForAccountCommandInput | ListHandshakesForAccountCommandInput | ListHandshakesForOrganizationCommandInput | ListOrganizationalUnitsForParentCommandInput | ListParentsCommandInput | ListPoliciesCommandInput | ListPoliciesForTargetCommandInput | ListRootsCommandInput | ListTagsForResourceCommandInput | ListTargetsForPolicyCommandInput | MoveAccountCommandInput | RegisterDelegatedAdministratorCommandInput | RemoveAccountFromOrganizationCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateOrganizationalUnitCommandInput | UpdatePolicyCommandInput;
    export type ServiceOutputTypes = AcceptHandshakeCommandOutput | AttachPolicyCommandOutput | CancelHandshakeCommandOutput | CloseAccountCommandOutput | CreateAccountCommandOutput | CreateGovCloudAccountCommandOutput | CreateOrganizationCommandOutput | CreateOrganizationalUnitCommandOutput | CreatePolicyCommandOutput | DeclineHandshakeCommandOutput | DeleteOrganizationCommandOutput | DeleteOrganizationalUnitCommandOutput | DeletePolicyCommandOutput | DeregisterDelegatedAdministratorCommandOutput | DescribeAccountCommandOutput | DescribeCreateAccountStatusCommandOutput | DescribeEffectivePolicyCommandOutput | DescribeHandshakeCommandOutput | DescribeOrganizationCommandOutput | DescribeOrganizationalUnitCommandOutput | DescribePolicyCommandOutput | DetachPolicyCommandOutput | DisableAWSServiceAccessCommandOutput | DisablePolicyTypeCommandOutput | EnableAWSServiceAccessCommandOutput | EnableAllFeaturesCommandOutput | EnablePolicyTypeCommandOutput | InviteAccountToOrganizationCommandOutput | LeaveOrganizationCommandOutput | ListAWSServiceAccessForOrganizationCommandOutput | ListAccountsCommandOutput | ListAccountsForParentCommandOutput | ListChildrenCommandOutput | ListCreateAccountStatusCommandOutput | ListDelegatedAdministratorsCommandOutput | ListDelegatedServicesForAccountCommandOutput | ListHandshakesForAccountCommandOutput | ListHandshakesForOrganizationCommandOutput | ListOrganizationalUnitsForParentCommandOutput | ListParentsCommandOutput | ListPoliciesCommandOutput | ListPoliciesForTargetCommandOutput | ListRootsCommandOutput | ListTagsForResourceCommandOutput | ListTargetsForPolicyCommandOutput | MoveAccountCommandOutput | RegisterDelegatedAdministratorCommandOutput | RemoveAccountFromOrganizationCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateOrganizationalUnitCommandOutput | UpdatePolicyCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type OrganizationsClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of OrganizationsClient class constructor that set the region, credentials and other options.
        */
    export interface OrganizationsClientConfig extends OrganizationsClientConfigType {
    }
    type OrganizationsClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of OrganizationsClient class. This is resolved and normalized from the {@link OrganizationsClientConfig | constructor configuration interface}.
        */
    export interface OrganizationsClientResolvedConfig extends OrganizationsClientResolvedConfigType {
    }
    /**
        * <p>Organizations is a web service that enables you to consolidate your multiple
        *             Amazon Web Services accounts into an <i>organization</i> and centrally manage your
        *             accounts and their resources.</p>
        *         <p>This guide provides descriptions of the Organizations operations. For more
        *             information about using this service, see the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html">Organizations User Guide</a>.</p>
        *         <p>
        *             <b>Support and feedback for Organizations</b>
        *          </p>
        *         <p>We welcome your feedback. Send your comments to <a href="mailto:feedback-awsorganizations@amazon.com">feedback-awsorganizations@amazon.com</a> or post your feedback and questions in
        *             the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=219">Organizations support forum</a>. For
        *             more information about the Amazon Web Services support forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums Help</a>.</p>
        *         <p>
        *             <b>Endpoint to call When using the CLI or the Amazon Web Services
        *                 SDK</b>
        *          </p>
        *         <p>For the current release of Organizations, specify the <code>us-east-1</code> region
        *             for all Amazon Web Services API and CLI calls made from the commercial Amazon Web Services Regions outside of
        *             China. If calling from one of the Amazon Web Services Regions in China, then specify
        *                 <code>cn-northwest-1</code>. You can do this in the CLI by using these parameters
        *             and commands:</p>
        *         <ul>
        *             <li>
        *                 <p>Use the following parameter with each command to specify both the endpoint and
        *                     its region:</p>
        *                 <p>
        *                   <code>--endpoint-url https://organizations.us-east-1.amazonaws.com</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>--endpoint-url
        *                         https://organizations.cn-northwest-1.amazonaws.com.cn</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>Use the default endpoint, but configure your default region with this
        *                     command:</p>
        *                 <p>
        *                   <code>aws configure set default.region us-east-1</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>aws configure set default.region cn-northwest-1</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>Use the following parameter with each command to specify the endpoint:</p>
        *                 <p>
        *                   <code>--region us-east-1</code>
        *                     <i>(from commercial Amazon Web Services Regions outside of China)</i>
        *                </p>
        *                 <p>or</p>
        *                 <p>
        *                   <code>--region cn-northwest-1</code>
        *                     <i>(from Amazon Web Services Regions in China)</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>
        *             <b>Recording API Requests</b>
        *         </p>
        *         <p>Organizations supports CloudTrail, a service that records Amazon Web Services API calls for your
        *             Amazon Web Services account and delivers log files to an Amazon S3 bucket. By using information collected
        *             by CloudTrail, you can determine which requests the Organizations service received, who made the
        *             request and when, and so on. For more about Organizations and its support for CloudTrail, see
        *                 <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_incident-response.html#orgs_cloudtrail-integration">Logging
        *                 Organizations Events with CloudTrail</a> in the <i>Organizations User Guide</i>.
        *             To learn more about CloudTrail, including how to turn it on and find your log files, see the
        *                 <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">CloudTrail User Guide</a>.</p>
        */
    export class OrganizationsClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, OrganizationsClientResolvedConfig> {
            /**
                * The resolved configuration of OrganizationsClient class. This is resolved and normalized from the {@link OrganizationsClientConfig | constructor configuration interface}.
                */
            readonly config: OrganizationsClientResolvedConfig;
            constructor(configuration: OrganizationsClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { OrganizationsServiceException as __BaseException } from "@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/OrganizationsServiceException";
    export interface AcceptHandshakeRequest {
            /**
                * <p>The unique identifier (ID) of the handshake that you want to accept.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            HandshakeId: string | undefined;
    }
    export namespace AcceptHandshakeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptHandshakeRequest) => any;
    }
    export enum ActionType {
            ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE = "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE",
            APPROVE_ALL_FEATURES = "APPROVE_ALL_FEATURES",
            ENABLE_ALL_FEATURES = "ENABLE_ALL_FEATURES",
            INVITE_ACCOUNT_TO_ORGANIZATION = "INVITE"
    }
    export enum HandshakePartyType {
            ACCOUNT = "ACCOUNT",
            EMAIL = "EMAIL",
            ORGANIZATION = "ORGANIZATION"
    }
    /**
        * <p>Identifies a participant in a handshake.</p>
        */
    export interface HandshakeParty {
            /**
                * <p>The unique identifier (ID) for the party.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            Id: string | undefined;
            /**
                * <p>The type of party.</p>
                */
            Type: HandshakePartyType | string | undefined;
    }
    export namespace HandshakeParty {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HandshakeParty) => any;
    }
    export enum HandshakeResourceType {
            ACCOUNT = "ACCOUNT",
            EMAIL = "EMAIL",
            MASTER_EMAIL = "MASTER_EMAIL",
            MASTER_NAME = "MASTER_NAME",
            NOTES = "NOTES",
            ORGANIZATION = "ORGANIZATION",
            ORGANIZATION_FEATURE_SET = "ORGANIZATION_FEATURE_SET",
            PARENT_HANDSHAKE = "PARENT_HANDSHAKE"
    }
    export enum HandshakeState {
            ACCEPTED = "ACCEPTED",
            CANCELED = "CANCELED",
            DECLINED = "DECLINED",
            EXPIRED = "EXPIRED",
            OPEN = "OPEN",
            REQUESTED = "REQUESTED"
    }
    /**
        * <p>You don't have permissions to perform the requested operation. The user or role that
        *             is making the request must have at least one IAM permissions policy attached that
        *             grants the required permissions. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access Management</a> in the
        *                 <i>IAM User Guide.</i>
        *          </p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum AccessDeniedForDependencyExceptionReason {
            ACCESS_DENIED_DURING_CREATE_SERVICE_LINKED_ROLE = "ACCESS_DENIED_DURING_CREATE_SERVICE_LINKED_ROLE"
    }
    /**
        * <p>The operation that you attempted requires you to have the
        *                 <code>iam:CreateServiceLinkedRole</code> for
        *                 <code>organizations.amazonaws.com</code> permission so that Organizations can create the
        *             required service-linked role. You don't have that permission.</p>
        */
    export class AccessDeniedForDependencyException extends __BaseException {
            readonly name: "AccessDeniedForDependencyException";
            readonly $fault: "client";
            Message?: string;
            Reason?: AccessDeniedForDependencyExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedForDependencyException, __BaseException>);
    }
    /**
        * <p>Your account isn't a member of an organization. To make this request, you must use the
        *             credentials of an account that belongs to an organization.</p>
        */
    export class AWSOrganizationsNotInUseException extends __BaseException {
            readonly name: "AWSOrganizationsNotInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AWSOrganizationsNotInUseException, __BaseException>);
    }
    /**
        * <p>The target of the operation is currently being modified by a different request. Try
        *             again later.</p>
        */
    export class ConcurrentModificationException extends __BaseException {
            readonly name: "ConcurrentModificationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
    }
    /**
        * <p>The specified handshake is already in the requested state. For example, you can't
        *             accept a handshake that was already accepted.</p>
        */
    export class HandshakeAlreadyInStateException extends __BaseException {
            readonly name: "HandshakeAlreadyInStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<HandshakeAlreadyInStateException, __BaseException>);
    }
    export enum HandshakeConstraintViolationExceptionReason {
            ACCOUNT_NUMBER_LIMIT_EXCEEDED = "ACCOUNT_NUMBER_LIMIT_EXCEEDED",
            ALREADY_IN_AN_ORGANIZATION = "ALREADY_IN_AN_ORGANIZATION",
            HANDSHAKE_RATE_LIMIT_EXCEEDED = "HANDSHAKE_RATE_LIMIT_EXCEEDED",
            INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES = "INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES",
            MANAGEMENT_ACCOUNT_EMAIL_NOT_VERIFIED = "MANAGEMENT_ACCOUNT_EMAIL_NOT_VERIFIED",
            ORGANIZATION_ALREADY_HAS_ALL_FEATURES = "ORGANIZATION_ALREADY_HAS_ALL_FEATURES",
            ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD = "ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD",
            ORGANIZATION_IS_ALREADY_PENDING_ALL_FEATURES_MIGRATION = "ORGANIZATION_IS_ALREADY_PENDING_ALL_FEATURES_MIGRATION",
            ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED = "ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED",
            PAYMENT_INSTRUMENT_REQUIRED = "PAYMENT_INSTRUMENT_REQUIRED"
    }
    /**
        * <p>The requested operation would violate the constraint identified in the reason
        *             code.</p>
        *         <note>
        *             <p>Some of the reasons in the following list might not be applicable to this specific
        *                 API or operation:</p>
        *         </note>
        *         <ul>
        *             <li>
        *                 <p>ACCOUNT_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the limit on the number
        *                     of accounts in an organization. Note that deleted and closed accounts still
        *                     count toward your limit.</p>
        *                 <important>
        *                     <p>If you get this exception immediately after creating the organization,
        *                         wait one hour and try again. If after an hour it continues to fail with this
        *                         error, contact <a href="https://docs.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        *                 </important>
        *             </li>
        *             <li>
        *                 <p>ALREADY_IN_AN_ORGANIZATION: The handshake request is invalid because the
        *                     invited account is already a member of an organization.</p>
        *             </li>
        *             <li>
        *                 <p>HANDSHAKE_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of
        *                     handshakes that you can send in one day.</p>
        *             </li>
        *             <li>
        *                 <p>INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES: You can't issue new invitations to
        *                     join an organization while it's in the process of enabling all features. You can
        *                     resume inviting accounts after you finalize the process when all accounts have
        *                     agreed to the change.</p>
        *             </li>
        *             <li>
        *                 <p>ORGANIZATION_ALREADY_HAS_ALL_FEATURES: The handshake request is invalid
        *                     because the organization has already enabled all features.</p>
        *             </li>
        *             <li>
        *                 <p>ORGANIZATION_IS_ALREADY_PENDING_ALL_FEATURES_MIGRATION: The handshake request
        *                     is invalid because the organization has already started the process to enable
        *                     all features.</p>
        *             </li>
        *             <li>
        *                 <p>ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD: The request failed because the
        *                     account is from a different marketplace than the accounts in the organization.
        *                     For example, accounts with India addresses must be associated with the AISPL
        *                     marketplace. All accounts in an organization must be from the same
        *                     marketplace.</p>
        *             </li>
        *             <li>
        *                 <p>ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED: You attempted to change
        *                     the membership of an account too quickly after its previous change.</p>
        *             </li>
        *             <li>
        *                 <p>PAYMENT_INSTRUMENT_REQUIRED: You can't complete the operation with an account
        *                     that doesn't have a payment instrument, such as a credit card, associated with
        *                     it.</p>
        *             </li>
        *          </ul>
        */
    export class HandshakeConstraintViolationException extends __BaseException {
            readonly name: "HandshakeConstraintViolationException";
            readonly $fault: "client";
            Message?: string;
            Reason?: HandshakeConstraintViolationExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<HandshakeConstraintViolationException, __BaseException>);
    }
    /**
        * <p>We can't find a handshake with the <code>HandshakeId</code> that you specified.</p>
        */
    export class HandshakeNotFoundException extends __BaseException {
            readonly name: "HandshakeNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<HandshakeNotFoundException, __BaseException>);
    }
    /**
        * <p>You can't perform the operation on the handshake in its current state. For example,
        *             you can't cancel a handshake that was already accepted or accept a handshake that was
        *             already declined.</p>
        */
    export class InvalidHandshakeTransitionException extends __BaseException {
            readonly name: "InvalidHandshakeTransitionException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidHandshakeTransitionException, __BaseException>);
    }
    export enum InvalidInputExceptionReason {
            DUPLICATE_TAG_KEY = "DUPLICATE_TAG_KEY",
            IMMUTABLE_POLICY = "IMMUTABLE_POLICY",
            INPUT_REQUIRED = "INPUT_REQUIRED",
            INVALID_EMAIL_ADDRESS_TARGET = "INVALID_EMAIL_ADDRESS_TARGET",
            INVALID_ENUM = "INVALID_ENUM",
            INVALID_ENUM_POLICY_TYPE = "INVALID_ENUM_POLICY_TYPE",
            INVALID_FULL_NAME_TARGET = "INVALID_FULL_NAME_TARGET",
            INVALID_LIST_MEMBER = "INVALID_LIST_MEMBER",
            INVALID_PAGINATION_TOKEN = "INVALID_NEXT_TOKEN",
            INVALID_PARTY_TYPE_TARGET = "INVALID_PARTY_TYPE_TARGET",
            INVALID_PATTERN = "INVALID_PATTERN",
            INVALID_PATTERN_TARGET_ID = "INVALID_PATTERN_TARGET_ID",
            INVALID_ROLE_NAME = "INVALID_ROLE_NAME",
            INVALID_SYNTAX_ORGANIZATION = "INVALID_SYNTAX_ORGANIZATION_ARN",
            INVALID_SYNTAX_POLICY = "INVALID_SYNTAX_POLICY_ID",
            INVALID_SYSTEM_TAGS_PARAMETER = "INVALID_SYSTEM_TAGS_PARAMETER",
            MAX_FILTER_LIMIT_EXCEEDED = "MAX_LIMIT_EXCEEDED_FILTER",
            MAX_LENGTH_EXCEEDED = "MAX_LENGTH_EXCEEDED",
            MAX_VALUE_EXCEEDED = "MAX_VALUE_EXCEEDED",
            MIN_LENGTH_EXCEEDED = "MIN_LENGTH_EXCEEDED",
            MIN_VALUE_EXCEEDED = "MIN_VALUE_EXCEEDED",
            MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS = "MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS",
            TARGET_NOT_SUPPORTED = "TARGET_NOT_SUPPORTED",
            UNRECOGNIZED_SERVICE_PRINCIPAL = "UNRECOGNIZED_SERVICE_PRINCIPAL"
    }
    /**
        * <p>The requested operation failed because you provided invalid values for one or more of
        *             the request parameters. This exception includes a reason that contains additional
        *             information about the violated limit:</p>
        *         <note>
        *             <p>Some of the reasons in the following list might not be applicable to this specific
        *                 API or operation.</p>
        *         </note>
        *         <ul>
        *             <li>
        *                 <p>DUPLICATE_TAG_KEY: Tag keys must be unique among the tags attached to the same
        *                     entity.</p>
        *             </li>
        *             <li>
        *                 <p>IMMUTABLE_POLICY: You specified a policy that is managed by Amazon Web Services and can't be
        *                     modified.</p>
        *             </li>
        *             <li>
        *                 <p>INPUT_REQUIRED: You must include a value for all required parameters.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_EMAIL_ADDRESS_TARGET: You specified an invalid email address for the
        *                     invited account owner.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_ENUM: You specified an invalid value.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_ENUM_POLICY_TYPE: You specified an invalid policy type string.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_FULL_NAME_TARGET: You specified a full name that contains invalid
        *                     characters.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_LIST_MEMBER: You provided a list to a parameter that contains at least
        *                     one invalid value.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_PAGINATION_TOKEN: Get the value for the <code>NextToken</code>
        *                     parameter from the response to a previous call of the operation.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_PARTY_TYPE_TARGET: You specified the wrong type of entity (account,
        *                     organization, or email) as a party.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_PATTERN: You provided a value that doesn't match the required
        *                     pattern.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_PATTERN_TARGET_ID: You specified a policy target ID that doesn't match
        *                     the required pattern.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_ROLE_NAME: You provided a role name that isn't valid. A role name
        *                     can't begin with the reserved prefix <code>AWSServiceRoleFor</code>.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_SYNTAX_ORGANIZATION_ARN: You specified an invalid Amazon Resource Name
        *                     (ARN) for the organization.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_SYNTAX_POLICY_ID: You specified an invalid policy ID. </p>
        *             </li>
        *             <li>
        *                 <p>INVALID_SYSTEM_TAGS_PARAMETER: You specified a tag key that is a system tag.
        *                     You can’t add, edit, or delete system tag keys because they're reserved for
        *                     Amazon Web Services use. System tags don’t count against your tags per resource limit.</p>
        *             </li>
        *             <li>
        *                 <p>MAX_FILTER_LIMIT_EXCEEDED: You can specify only one filter parameter for the
        *                     operation.</p>
        *             </li>
        *             <li>
        *                 <p>MAX_LENGTH_EXCEEDED: You provided a string parameter that is longer than
        *                     allowed.</p>
        *             </li>
        *             <li>
        *                 <p>MAX_VALUE_EXCEEDED: You provided a numeric parameter that has a larger value
        *                     than allowed.</p>
        *             </li>
        *             <li>
        *                 <p>MIN_LENGTH_EXCEEDED: You provided a string parameter that is shorter than
        *                     allowed.</p>
        *             </li>
        *             <li>
        *                 <p>MIN_VALUE_EXCEEDED: You provided a numeric parameter that has a smaller value
        *                     than allowed.</p>
        *             </li>
        *             <li>
        *                 <p>MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS: You can move an account only between
        *                     entities in the same root.</p>
        *             </li>
        *             <li>
        *                 <p>TARGET_NOT_SUPPORTED: You can't perform the specified operation on that target
        *                     entity.</p>
        *             </li>
        *             <li>
        *                 <p>UNRECOGNIZED_SERVICE_PRINCIPAL: You specified a service principal that isn't
        *                     recognized.</p>
        *             </li>
        *          </ul>
        */
    export class InvalidInputException extends __BaseException {
            readonly name: "InvalidInputException";
            readonly $fault: "client";
            Message?: string;
            Reason?: InvalidInputExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidInputException, __BaseException>);
    }
    /**
        * <p>Organizations can't complete your request because of an internal service error. Try again
        *             later.</p>
        */
    export class ServiceException extends __BaseException {
            readonly name: "ServiceException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceException, __BaseException>);
    }
    /**
        * <p>You have sent too many requests in too short a period of time. The quota helps protect
        *             against denial-of-service attacks. Try again later.</p>
        *         <p>For information about quotas that affect Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_limits.html">Quotas for Organizations</a>in the
        *                 <i>Organizations User Guide.</i>
        *          </p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            Type?: string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    export enum AccountJoinedMethod {
            CREATED = "CREATED",
            INVITED = "INVITED"
    }
    export enum AccountStatus {
            ACTIVE = "ACTIVE",
            PENDING_CLOSURE = "PENDING_CLOSURE",
            SUSPENDED = "SUSPENDED"
    }
    /**
        * <p>Contains information about an Amazon Web Services account that is a member of an
        *             organization.</p>
        */
    export interface Account {
            /**
                * <p>The unique identifier (ID) of the account.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the account.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>The email address associated with the Amazon Web Services account.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that represents a
                *             standard internet email address.</p>
                */
            Email?: string;
            /**
                * <p>The friendly name of the account.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
            /**
                * <p>The status of the account in the organization.</p>
                */
            Status?: AccountStatus | string;
            /**
                * <p>The method by which the account joined the organization.</p>
                */
            JoinedMethod?: AccountJoinedMethod | string;
            /**
                * <p>The date the account became a part of the organization.</p>
                */
            JoinedTimestamp?: Date;
    }
    export namespace Account {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Account) => any;
    }
    /**
        * <p>You attempted to close an account that is already closed.</p>
        */
    export class AccountAlreadyClosedException extends __BaseException {
            readonly name: "AccountAlreadyClosedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountAlreadyClosedException, __BaseException>);
    }
    /**
        * <p>The specified account is already a delegated administrator for this Amazon Web Services
        *             service.</p>
        */
    export class AccountAlreadyRegisteredException extends __BaseException {
            readonly name: "AccountAlreadyRegisteredException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountAlreadyRegisteredException, __BaseException>);
    }
    /**
        * <p> We can't find an Amazon Web Services account with the <code>AccountId</code> that you specified, or
        *             the account whose credentials you used to make this request isn't a member of an
        *             organization.</p>
        */
    export class AccountNotFoundException extends __BaseException {
            readonly name: "AccountNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountNotFoundException, __BaseException>);
    }
    /**
        * <p>The specified account is not a delegated administrator for this Amazon Web Services service. </p>
        */
    export class AccountNotRegisteredException extends __BaseException {
            readonly name: "AccountNotRegisteredException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountNotRegisteredException, __BaseException>);
    }
    /**
        * <p>You can't invite an existing account to your organization until you verify that you
        *             own the email address associated with the management account. For more information, see
        *                 <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_create.html#about-email-verification">Email Address
        *                 Verification</a> in the <i>Organizations User Guide.</i>
        *          </p>
        */
    export class AccountOwnerNotVerifiedException extends __BaseException {
            readonly name: "AccountOwnerNotVerifiedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountOwnerNotVerifiedException, __BaseException>);
    }
    /**
        * <p>This account is already a member of an organization. An account can belong to only one
        *             organization at a time.</p>
        */
    export class AlreadyInOrganizationException extends __BaseException {
            readonly name: "AlreadyInOrganizationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AlreadyInOrganizationException, __BaseException>);
    }
    export interface AttachPolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy that you want to attach to the target. You
                *             can get the ID for the policy by calling the <a>ListPolicies</a>
                *             operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
            /**
                * <p>The unique identifier (ID) of the root, OU, or account that you want to attach the
                *             policy to. You can get the ID by calling the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>, or <a>ListAccounts</a>
                *             operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            TargetId: string | undefined;
    }
    export namespace AttachPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachPolicyRequest) => any;
    }
    export enum ConstraintViolationExceptionReason {
            ACCOUNT_CANNOT_LEAVE_ORGANIZATION = "ACCOUNT_CANNOT_LEAVE_ORGANIZATION",
            ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA = "ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA",
            ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION = "ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION",
            ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED = "ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED",
            ACCOUNT_NUMBER_LIMIT_EXCEEDED = "ACCOUNT_NUMBER_LIMIT_EXCEEDED",
            CANNOT_CLOSE_MANAGEMENT_ACCOUNT = "CANNOT_CLOSE_MANAGEMENT_ACCOUNT",
            CANNOT_REGISTER_MASTER_AS_DELEGATED_ADMINISTRATOR = "CANNOT_REGISTER_MASTER_AS_DELEGATED_ADMINISTRATOR",
            CANNOT_REMOVE_DELEGATED_ADMINISTRATOR_FROM_ORG = "CANNOT_REMOVE_DELEGATED_ADMINISTRATOR_FROM_ORG",
            CLOSE_ACCOUNT_QUOTA_EXCEEDED = "CLOSE_ACCOUNT_QUOTA_EXCEEDED",
            CLOSE_ACCOUNT_REQUESTS_LIMIT_EXCEEDED = "CLOSE_ACCOUNT_REQUESTS_LIMIT_EXCEEDED",
            CREATE_ORGANIZATION_IN_BILLING_MODE_UNSUPPORTED_REGION = "CREATE_ORGANIZATION_IN_BILLING_MODE_UNSUPPORTED_REGION",
            DELEGATED_ADMINISTRATOR_EXISTS_FOR_THIS_SERVICE = "DELEGATED_ADMINISTRATOR_EXISTS_FOR_THIS_SERVICE",
            EMAIL_VERIFICATION_CODE_EXPIRED = "EMAIL_VERIFICATION_CODE_EXPIRED",
            HANDSHAKE_RATE_LIMIT_EXCEEDED = "HANDSHAKE_RATE_LIMIT_EXCEEDED",
            INVALID_PAYMENT_INSTRUMENT = "INVALID_PAYMENT_INSTRUMENT",
            MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE = "MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE",
            MASTER_ACCOUNT_MISSING_BUSINESS_LICENSE = "MASTER_ACCOUNT_MISSING_BUSINESS_LICENSE",
            MASTER_ACCOUNT_MISSING_CONTACT_INFO = "MASTER_ACCOUNT_MISSING_CONTACT_INFO",
            MASTER_ACCOUNT_NOT_GOVCLOUD_ENABLED = "MASTER_ACCOUNT_NOT_GOVCLOUD_ENABLED",
            MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED = "MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED",
            MAX_DELEGATED_ADMINISTRATORS_FOR_SERVICE_LIMIT_EXCEEDED = "MAX_DELEGATED_ADMINISTRATORS_FOR_SERVICE_LIMIT_EXCEEDED",
            MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED = "MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED",
            MAX_TAG_LIMIT_EXCEEDED = "MAX_TAG_LIMIT_EXCEEDED",
            MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED = "MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED",
            MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED = "MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED",
            ORGANIZATION_NOT_IN_ALL_FEATURES_MODE = "ORGANIZATION_NOT_IN_ALL_FEATURES_MODE",
            OU_DEPTH_LIMIT_EXCEEDED = "OU_DEPTH_LIMIT_EXCEEDED",
            OU_NUMBER_LIMIT_EXCEEDED = "OU_NUMBER_LIMIT_EXCEEDED",
            POLICY_CONTENT_LIMIT_EXCEEDED = "POLICY_CONTENT_LIMIT_EXCEEDED",
            POLICY_NUMBER_LIMIT_EXCEEDED = "POLICY_NUMBER_LIMIT_EXCEEDED",
            SERVICE_ACCESS_NOT_ENABLED = "SERVICE_ACCESS_NOT_ENABLED",
            TAG_POLICY_VIOLATION = "TAG_POLICY_VIOLATION",
            WAIT_PERIOD_ACTIVE = "WAIT_PERIOD_ACTIVE"
    }
    /**
        * <p>Performing this operation violates a minimum or maximum value limit. For example,
        *             attempting to remove the last service control policy (SCP) from an OU or root, inviting
        *             or creating too many accounts to the organization, or attaching too many policies to an
        *             account, OU, or root. This exception includes a reason that contains additional
        *             information about the violated limit:</p>
        *         <note>
        *             <p>Some of the reasons in the following list might not be applicable to this specific
        *                 API or operation.</p>
        *         </note>
        *         <ul>
        *             <li>
        *                 <p>ACCOUNT_CANNOT_LEAVE_ORGANIZATION: You attempted to remove the management
        *                     account from the organization. You can't remove the management account. Instead,
        *                     after you remove all member accounts, delete the organization itself.</p>
        *             </li>
        *             <li>
        *                 <p>ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION: You attempted to remove an
        *                     account from the organization that doesn't yet have enough information to exist
        *                     as a standalone account. This account requires you to first complete phone
        *                     verification. Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#orgs_manage_accounts_remove-from-master">Removing a member account from your organization</a> in the
        *                         <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of
        *                     accounts that you can create in one day.</p>
        *             </li>
        *             <li>
        *                 <p>ACCOUNT_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the limit on the number
        *                     of accounts in an organization. If you need more accounts, contact <a href="https://docs.aws.amazon.com/support/home#/">Amazon Web Services Support</a> to
        *                     request an increase in your limit. </p>
        *                 <p>Or the number of invitations that you tried to send would cause you to exceed
        *                     the limit of accounts in your organization. Send fewer invitations or contact
        *                     Amazon Web Services Support to request an increase in the number of accounts.</p>
        *                 <note>
        *                     <p>Deleted and closed accounts still count toward your limit.</p>
        *                 </note>
        *                 <important>
        *                     <p>If you get this exception when running a command immediately after
        *                         creating the organization, wait one hour and try again. After an hour, if
        *                         the command continues to fail with this error, contact <a href="https://docs.aws.amazon.com/support/home#/">Amazon Web Services
        *                         Support</a>.</p>
        *                 </important>
        *             </li>
        *             <li>
        *                 <p>CANNOT_REGISTER_MASTER_AS_DELEGATED_ADMINISTRATOR: You attempted to register
        *                     the management account of the organization as a delegated administrator for an
        *                     Amazon Web Services service integrated with Organizations. You can designate only a member account as a
        *                     delegated administrator.</p>
        *             </li>
        *             <li>
        *                 <p>CANNOT_CLOSE_MANAGEMENT_ACCOUNT: You attempted to close the management
        *                     account. To close the management account for the organization, you must first
        *                     either remove or close all member accounts in the organization. Follow standard
        *                     account closure process using root credentials.​ </p>
        *             </li>
        *             <li>
        *                 <p>CANNOT_REMOVE_DELEGATED_ADMINISTRATOR_FROM_ORG: You attempted to remove an
        *                     account that is registered as a delegated administrator for a service integrated
        *                     with your organization. To complete this operation, you must first deregister
        *                     this account as a delegated administrator. </p>
        *             </li>
        *             <li>
        *                 <p>CLOSE_ACCOUNT_QUOTA_EXCEEDED: You have exceeded close account quota for the
        *                     past 30 days. </p>
        *             </li>
        *             <li>
        *                 <p>CLOSE_ACCOUNT_REQUESTS_LIMIT_EXCEEDED: You attempted to exceed the number of
        *                     accounts that you can close at a time. ​ </p>
        *             </li>
        *             <li>
        *                 <p>CREATE_ORGANIZATION_IN_BILLING_MODE_UNSUPPORTED_REGION: To create an
        *                     organization in the specified region, you must enable all features mode.</p>
        *             </li>
        *             <li>
        *                 <p>DELEGATED_ADMINISTRATOR_EXISTS_FOR_THIS_SERVICE: You attempted to register an
        *                     Amazon Web Services account as a delegated administrator for an Amazon Web Services service that already has
        *                     a delegated administrator. To complete this operation, you must first deregister
        *                     any existing delegated administrators for this service.</p>
        *             </li>
        *             <li>
        *                 <p>EMAIL_VERIFICATION_CODE_EXPIRED: The email verification code is only valid for
        *                     a limited period of time. You must resubmit the request and generate a new
        *                     verfication code.</p>
        *             </li>
        *             <li>
        *                 <p>HANDSHAKE_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of
        *                     handshakes that you can send in one day.</p>
        *             </li>
        *             <li>
        *                 <p>INVALID_PAYMENT_INSTRUMENT: You cannot remove an account because no supported
        *                     payment method is associated with the account. Amazon Web Services does not support cards
        *                     issued by financial institutions in Russia or Belarus. For more information, see
        *                         <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/manage-general.html">Managing your
        *                         Amazon Web Services payments</a>.</p>
        *             </li>
        *             <li>
        *                 <p>MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE: To create an account in
        *                     this organization, you first must migrate the organization's management account
        *                     to the marketplace that corresponds to the management account's address. For
        *                     example, accounts with India addresses must be associated with the AISPL
        *                     marketplace. All accounts in an organization must be associated with the same
        *                     marketplace.</p>
        *             </li>
        *             <li>
        *                 <p>MASTER_ACCOUNT_MISSING_BUSINESS_LICENSE: Applies only to the Amazon Web Services /> Regions
        *                     in China. To create an organization, the master must have a valid business
        *                     license. For more information, contact customer support.</p>
        *             </li>
        *             <li>
        *                 <p>MASTER_ACCOUNT_MISSING_CONTACT_INFO: To complete this operation, you must
        *                     first provide a valid contact address and phone number for the management
        *                     account. Then try the operation again.</p>
        *             </li>
        *             <li>
        *                 <p>MASTER_ACCOUNT_NOT_GOVCLOUD_ENABLED: To complete this operation, the
        *                     management account must have an associated account in the Amazon Web Services GovCloud
        *                     (US-West) Region. For more information, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a>
        *                     in the
        *                     <i>Amazon Web Services GovCloud User Guide.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED: To create an organization with
        *                     this management account, you first must associate a valid payment instrument,
        *                     such as a credit card, with the account. Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">To leave an organization when all required account information has not yet
        *                         been provided</a> in the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>MAX_DELEGATED_ADMINISTRATORS_FOR_SERVICE_LIMIT_EXCEEDED: You attempted to
        *                     register more delegated administrators than allowed for the service principal.
        *                 </p>
        *             </li>
        *             <li>
        *                 <p>MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED: You attempted to exceed the number
        *                     of policies of a certain type that can be attached to an entity at one
        *                     time.</p>
        *             </li>
        *             <li>
        *                 <p>MAX_TAG_LIMIT_EXCEEDED: You have exceeded the number of tags allowed on this
        *                     resource. </p>
        *             </li>
        *             <li>
        *                 <p>MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED: To complete this operation with
        *                     this member account, you first must associate a valid payment instrument, such
        *                     as a credit card, with the account. Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">To leave an organization when all required account information has not yet
        *                         been provided</a> in the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED: You attempted to detach a policy
        *                     from an entity that would cause the entity to have fewer than the minimum number
        *                     of policies of a certain type required.</p>
        *             </li>
        *             <li>
        *                 <p>ORGANIZATION_NOT_IN_ALL_FEATURES_MODE: You attempted to perform an operation
        *                     that requires the organization to be configured to support all features. An
        *                     organization that supports only consolidated billing features can't perform this
        *                     operation.</p>
        *             </li>
        *             <li>
        *                 <p>OU_DEPTH_LIMIT_EXCEEDED: You attempted to create an OU tree that is too many
        *                     levels deep.</p>
        *             </li>
        *             <li>
        *                 <p>OU_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the number of OUs that you
        *                     can have in an organization.</p>
        *             </li>
        *             <li>
        *                 <p>POLICY_CONTENT_LIMIT_EXCEEDED: You attempted to create a policy that is larger
        *                     than the maximum size.</p>
        *             </li>
        *             <li>
        *                 <p>POLICY_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the number of policies
        *                     that you can have in an organization.</p>
        *             </li>
        *             <li>
        *                 <p>SERVICE_ACCESS_NOT_ENABLED: You attempted to register a delegated
        *                     administrator before you enabled service access. Call the
        *                         <code>EnableAWSServiceAccess</code> API first.</p>
        *             </li>
        *             <li>
        *                 <p>TAG_POLICY_VIOLATION: You attempted to create or update a resource with tags
        *                     that are not compliant with the tag policy requirements for this account.</p>
        *             </li>
        *             <li>
        *                 <p>WAIT_PERIOD_ACTIVE: After you create an Amazon Web Services account, there is a waiting
        *                     period before you can remove it from the organization. If you get an error that
        *                     indicates that a wait period is required, try again in a few days.</p>
        *             </li>
        *          </ul>
        */
    export class ConstraintViolationException extends __BaseException {
            readonly name: "ConstraintViolationException";
            readonly $fault: "client";
            Message?: string;
            Reason?: ConstraintViolationExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConstraintViolationException, __BaseException>);
    }
    /**
        * <p>The selected policy is already attached to the specified target.</p>
        */
    export class DuplicatePolicyAttachmentException extends __BaseException {
            readonly name: "DuplicatePolicyAttachmentException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicatePolicyAttachmentException, __BaseException>);
    }
    /**
        * <p>Changes to the effective policy are in progress, and its contents can't be returned.
        *             Try the operation again later. </p>
        */
    export class PolicyChangesInProgressException extends __BaseException {
            readonly name: "PolicyChangesInProgressException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyChangesInProgressException, __BaseException>);
    }
    /**
        * <p>We can't find a policy with the <code>PolicyId</code> that you specified.</p>
        */
    export class PolicyNotFoundException extends __BaseException {
            readonly name: "PolicyNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyNotFoundException, __BaseException>);
    }
    /**
        * <p>The specified policy type isn't currently enabled in this root. You can't attach
        *             policies of the specified type to entities in a root until you enable that type in the
        *             root. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features
        *                 in Your Organization</a> in the <i>Organizations User Guide.</i>
        *          </p>
        */
    export class PolicyTypeNotEnabledException extends __BaseException {
            readonly name: "PolicyTypeNotEnabledException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyTypeNotEnabledException, __BaseException>);
    }
    /**
        * <p>We can't find a root, OU, account, or policy with the <code>TargetId</code> that you
        *             specified.</p>
        */
    export class TargetNotFoundException extends __BaseException {
            readonly name: "TargetNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TargetNotFoundException, __BaseException>);
    }
    /**
        * <p>This action isn't available in the current Amazon Web Services Region.</p>
        */
    export class UnsupportedAPIEndpointException extends __BaseException {
            readonly name: "UnsupportedAPIEndpointException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnsupportedAPIEndpointException, __BaseException>);
    }
    export interface CancelHandshakeRequest {
            /**
                * <p>The unique identifier (ID) of the handshake that you want to cancel. You can get the
                *             ID from the <a>ListHandshakesForOrganization</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            HandshakeId: string | undefined;
    }
    export namespace CancelHandshakeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelHandshakeRequest) => any;
    }
    export interface CloseAccountRequest {
            /**
                * <p>Retrieves the Amazon Web Services account Id for the current <code>CloseAccount</code> API request.
                *         </p>
                */
            AccountId: string | undefined;
    }
    export namespace CloseAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloseAccountRequest) => any;
    }
    /**
        * <p>The request failed because it conflicts with the current state of the specified
        *             resource.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export enum IAMUserAccessToBilling {
            ALLOW = "ALLOW",
            DENY = "DENY"
    }
    /**
        * <p>A custom key-value pair associated with a resource within your organization.</p>
        *         <p>You can attach tags to any of the following organization resources.</p>
        *         <ul>
        *             <li>
        *                 <p>Amazon Web Services account</p>
        *             </li>
        *             <li>
        *                 <p>Organizational unit (OU)</p>
        *             </li>
        *             <li>
        *                 <p>Organization root</p>
        *             </li>
        *             <li>
        *                 <p>Policy</p>
        *             </li>
        *          </ul>
        */
    export interface Tag {
            /**
                * <p>The key identifier, or name, of the tag.</p>
                */
            Key: string | undefined;
            /**
                * <p>The string value that's associated with the key of the tag. You can set the value of a
                *             tag to an empty string, but you can't set the value of a tag to null.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateAccountRequest {
            /**
                * <p>The email address of the owner to assign to the new member account. This email address
                *             must not already be associated with another Amazon Web Services account. You must use a valid email
                *             address to complete account creation.</p>
                *         <p>The rules for a valid email address:</p>
                *         <ul>
                *             <li>
                *                 <p>The address must be a minimum of 6 and a maximum of 64 characters long.</p>
                *             </li>
                *             <li>
                *                 <p>All characters must be 7-bit ASCII characters.</p>
                *             </li>
                *             <li>
                *                 <p>There must be one and only one @ symbol, which separates the local name from
                *                     the domain name.</p>
                *             </li>
                *             <li>
                *                 <p>The local name can't contain any of the following characters:</p>
                *                 <p>whitespace, " ' ( ) < > [ ] : ; , \ | % &</p>
                *             </li>
                *             <li>
                *                 <p>The local name can't begin with a dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name can consist of only the characters [a-z],[A-Z],[0-9], hyphen
                *                     (-), or dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name can't begin or end with a hyphen (-) or dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name must contain at least one dot</p>
                *             </li>
                *          </ul>
                *         <p>You can't access the root user of the account or remove an account that was created
                *             with an invalid email address.</p>
                */
            Email: string | undefined;
            /**
                * <p>The friendly name of the member account.</p>
                */
            AccountName: string | undefined;
            /**
                * <p>(Optional)</p>
                *         <p>The name of an IAM role that Organizations automatically preconfigures in the new member
                *             account. This role trusts the management account, allowing users in the management
                *             account to assume the role, as permitted by the management account administrator. The
                *             role has administrator permissions in the new member account.</p>
                *         <p>If you don't specify this parameter, the role name defaults to
                *                 <code>OrganizationAccountAccessRole</code>.</p>
                *         <p>For more information about how to use this role to access the member account, see the
                *             following links:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role">Accessing and Administering the Member Accounts in Your
                *                         Organization</a> in the <i>Organizations User Guide</i>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Steps 2 and 3 in <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html">Tutorial:
                *                         Delegate Access Across Amazon Web Services accounts Using IAM Roles</a> in the
                *                         <i>IAM User Guide</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that
                *     is used to validate this parameter. The pattern can include uppercase
                *     letters, lowercase letters, digits with no spaces, and any of the following characters: =,.@-</p>
                */
            RoleName?: string;
            /**
                * <p>If set to <code>ALLOW</code>, the new account enables IAM users to access account
                *             billing information <i>if</i> they have the required permissions. If set
                *             to <code>DENY</code>, only the root user of the new account can access account billing
                *             information. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
                *                 Access to the Billing and Cost Management Console</a> in the
                *             <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
                *         <p>If you don't specify this parameter, the value defaults to <code>ALLOW</code>, and
                *             IAM users and roles with the required permissions can access billing information for
                *             the new account.</p>
                */
            IamUserAccessToBilling?: IAMUserAccessToBilling | string;
            /**
                * <p>A list of tags that you want to attach to the newly created account. For each tag in
                *             the list, you must specify both a tag key and a value. You can set the value to an empty
                *             string, but you can't set it to <code>null</code>. For more information about tagging,
                *             see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging Organizations
                *                 resources</a> in the Organizations User Guide.</p>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the maximum allowed number of
                *                 tags for an account, then the entire request fails and the account is not
                *                 created.</p>
                *         </note>
                */
            Tags?: Tag[];
    }
    export namespace CreateAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccountRequest) => any;
    }
    export enum CreateAccountFailureReason {
            ACCOUNT_LIMIT_EXCEEDED = "ACCOUNT_LIMIT_EXCEEDED",
            CONCURRENT_ACCOUNT_MODIFICATION = "CONCURRENT_ACCOUNT_MODIFICATION",
            EMAIL_ALREADY_EXISTS = "EMAIL_ALREADY_EXISTS",
            FAILED_BUSINESS_VALIDATION = "FAILED_BUSINESS_VALIDATION",
            GOVCLOUD_ACCOUNT_ALREADY_EXISTS = "GOVCLOUD_ACCOUNT_ALREADY_EXISTS",
            INTERNAL_FAILURE = "INTERNAL_FAILURE",
            INVALID_ADDRESS = "INVALID_ADDRESS",
            INVALID_EMAIL = "INVALID_EMAIL",
            INVALID_IDENTITY_FOR_BUSINESS_VALIDATION = "INVALID_IDENTITY_FOR_BUSINESS_VALIDATION",
            INVALID_PAYMENT_INSTRUMENT = "INVALID_PAYMENT_INSTRUMENT",
            MISSING_BUSINESS_VALIDATION = "MISSING_BUSINESS_VALIDATION",
            MISSING_PAYMENT_INSTRUMENT = "MISSING_PAYMENT_INSTRUMENT",
            PENDING_BUSINESS_VALIDATIONv = "PENDING_BUSINESS_VALIDATION",
            UNKNOWN_BUSINESS_VALIDATION = "UNKNOWN_BUSINESS_VALIDATION"
    }
    export enum CreateAccountState {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>Contains the status about a <a>CreateAccount</a> or <a>CreateGovCloudAccount</a> request to create an Amazon Web Services account or an Amazon Web Services
        *             GovCloud (US) account in an organization.</p>
        */
    export interface CreateAccountStatus {
            /**
                * <p>The unique identifier (ID) that references this request. You get this value from the
                *             response of the initial <a>CreateAccount</a> request to create the
                *             account.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a create account request ID string
                *     requires "car-" followed by from 8 to 32 lowercase letters or digits.</p>
                */
            Id?: string;
            /**
                * <p>The account name given to the account when it was created.</p>
                */
            AccountName?: string;
            /**
                * <p>The status of the asynchronous request to create an Amazon Web Services account.</p>
                */
            State?: CreateAccountState | string;
            /**
                * <p>The date and time that the request was made for the account creation.</p>
                */
            RequestedTimestamp?: Date;
            /**
                * <p>The date and time that the account was created and the request completed.</p>
                */
            CompletedTimestamp?: Date;
            /**
                * <p>If the account was created successfully, the unique identifier (ID) of the new
                *             account.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            AccountId?: string;
            /**
                * <p>If the account was created successfully, the unique identifier (ID) of the new account
                *             in the Amazon Web Services GovCloud (US) Region.</p>
                */
            GovCloudAccountId?: string;
            /**
                * <p>If the request failed, a description of the reason for the failure.</p>
                *         <ul>
                *             <li>
                *                 <p>ACCOUNT_LIMIT_EXCEEDED: The account couldn't be created because you reached
                *                     the limit on the number of accounts in your organization.</p>
                *             </li>
                *             <li>
                *                 <p>CONCURRENT_ACCOUNT_MODIFICATION: You already submitted a request with the same
                *                     information.</p>
                *             </li>
                *             <li>
                *                 <p>EMAIL_ALREADY_EXISTS: The account could not be created because another Amazon Web Services
                *                     account with that email address already exists.</p>
                *             </li>
                *             <li>
                *                 <p>FAILED_BUSINESS_VALIDATION: The Amazon Web Services account that owns your organization
                *                     failed to receive business license validation.</p>
                *             </li>
                *             <li>
                *                 <p>GOVCLOUD_ACCOUNT_ALREADY_EXISTS: The account in the Amazon Web Services GovCloud (US) Region
                *                     could not be created because this Region already includes an account with that
                *                     email address.</p>
                *             </li>
                *             <li>
                *                 <p>IDENTITY_INVALID_BUSINESS_VALIDATION: The Amazon Web Services account that owns your
                *                     organization can't complete business license validation because it doesn't have
                *                     valid identity data.</p>
                *             </li>
                *             <li>
                *                 <p>INVALID_ADDRESS: The account could not be created because the address you
                *                     provided is not valid.</p>
                *             </li>
                *             <li>
                *                 <p>INVALID_EMAIL: The account could not be created because the email address you
                *                     provided is not valid.</p>
                *             </li>
                *             <li>
                *                 <p>INVALID_PAYMENT_INSTRUMENT: The Amazon Web Services account that owns your organization does
                *                     not have a supported payment method associated with the account. Amazon Web Services does not
                *                     support cards issued by financial institutions in Russia or Belarus. For more
                *                     information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/manage-general.html">Managing your
                *                         Amazon Web Services payments</a>.</p>
                *             </li>
                *             <li>
                *                 <p>INTERNAL_FAILURE: The account could not be created because of an internal
                *                     failure. Try again later. If the problem persists, contact Amazon Web Services Customer
                *                     Support.</p>
                *             </li>
                *             <li>
                *                 <p>MISSING_BUSINESS_VALIDATION: The Amazon Web Services account that owns your organization has
                *                     not received Business Validation.</p>
                *             </li>
                *             <li>
                *                 <p> MISSING_PAYMENT_INSTRUMENT: You must configure the management account with a
                *                     valid payment method, such as a credit card.</p>
                *             </li>
                *             <li>
                *                 <p>PENDING_BUSINESS_VALIDATION: The Amazon Web Services account that owns your organization is
                *                     still in the process of completing business license validation.</p>
                *             </li>
                *             <li>
                *                 <p>UNKNOWN_BUSINESS_VALIDATION: The Amazon Web Services account that owns your organization has
                *                     an unknown issue with business license validation.</p>
                *             </li>
                *          </ul>
                */
            FailureReason?: CreateAccountFailureReason | string;
    }
    export namespace CreateAccountStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccountStatus) => any;
    }
    export interface CreateAccountResponse {
            /**
                * <p>A structure that contains details about the request to create an account. This
                *             response structure might not be fully populated when you first receive it because
                *             account creation is an asynchronous process. You can pass the returned
                *                 <code>CreateAccountStatus</code> ID as a parameter to <a>DescribeCreateAccountStatus</a> to get status about the progress of the
                *             request at later times. You can also check the CloudTrail log for the
                *                 <code>CreateAccountResult</code> event. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html">Monitoring the
                *                 Activity in Your Organization</a> in the
                *             <i>Organizations User Guide</i>.</p>
                */
            CreateAccountStatus?: CreateAccountStatus;
    }
    export namespace CreateAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccountResponse) => any;
    }
    /**
        * <p>Organizations couldn't perform the operation because your organization hasn't finished
        *             initializing. This can take up to an hour. Try again later. If after one hour you
        *             continue to receive this error, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.</p>
        */
    export class FinalizingOrganizationException extends __BaseException {
            readonly name: "FinalizingOrganizationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<FinalizingOrganizationException, __BaseException>);
    }
    export interface CreateGovCloudAccountRequest {
            /**
                * <p>Specifies the email address of the owner to assign to the new member account in the
                *             commercial Region. This email address must not already be associated with another
                *             Amazon Web Services account. You must use a valid email address to complete account creation.</p>
                *         <p>The rules for a valid email address:</p>
                *         <ul>
                *             <li>
                *                 <p>The address must be a minimum of 6 and a maximum of 64 characters long.</p>
                *             </li>
                *             <li>
                *                 <p>All characters must be 7-bit ASCII characters.</p>
                *             </li>
                *             <li>
                *                 <p>There must be one and only one @ symbol, which separates the local name from
                *                     the domain name.</p>
                *             </li>
                *             <li>
                *                 <p>The local name can't contain any of the following characters:</p>
                *                 <p>whitespace, " ' ( ) < > [ ] : ; , \ | % &</p>
                *             </li>
                *             <li>
                *                 <p>The local name can't begin with a dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name can consist of only the characters [a-z],[A-Z],[0-9], hyphen
                *                     (-), or dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name can't begin or end with a hyphen (-) or dot (.)</p>
                *             </li>
                *             <li>
                *                 <p>The domain name must contain at least one dot</p>
                *             </li>
                *          </ul>
                *         <p>You can't access the root user of the account or remove an account that was created
                *             with an invalid email address. Like all request parameters for
                *                 <code>CreateGovCloudAccount</code>, the request for the email address for the Amazon Web Services
                *             GovCloud (US) account originates from the commercial Region, not from the Amazon Web Services GovCloud
                *             (US) Region.</p>
                */
            Email: string | undefined;
            /**
                * <p>The friendly name of the member account. </p>
                *         <p>The account name can consist of only the characters [a-z],[A-Z],[0-9], hyphen (-), or
                *             dot (.) You can't separate characters with a dash (–).</p>
                */
            AccountName: string | undefined;
            /**
                * <p>(Optional)</p>
                *         <p>The name of an IAM role that Organizations automatically preconfigures in the new member
                *             accounts in both the Amazon Web Services GovCloud (US) Region and in the commercial Region. This role
                *             trusts the management account, allowing users in the management account to assume the
                *             role, as permitted by the management account administrator. The role has administrator
                *             permissions in the new member account.</p>
                *         <p>If you don't specify this parameter, the role name defaults to
                *                 <code>OrganizationAccountAccessRole</code>.</p>
                *         <p>For more information about how to use this role to access the member account, see
                *                 <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role">Accessing and Administering the Member Accounts in Your Organization</a> in the
                *                 <i>Organizations User Guide</i> and steps 2 and 3 in <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html">Tutorial: Delegate Access Across Amazon Web Services accounts Using IAM Roles</a> in the
                *                 <i>IAM User Guide.</i>
                *          </p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that
                *     is used to validate this parameter. The pattern can include uppercase
                *     letters, lowercase letters, digits with no spaces, and any of the following characters: =,.@-</p>
                */
            RoleName?: string;
            /**
                * <p>If set to <code>ALLOW</code>, the new linked account in the commercial Region enables
                *             IAM users to access account billing information <i>if</i> they have the
                *             required permissions. If set to <code>DENY</code>, only the root user of the new account
                *             can access account billing information. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
                *                 Access to the Billing and Cost Management Console</a> in the
                *             <i>Amazon Web Services Billing and Cost Management User Guide.</i>
                *          </p>
                *         <p>If you don't specify this parameter, the value defaults to <code>ALLOW</code>, and
                *             IAM users and roles with the required permissions can access billing information for
                *             the new account.</p>
                */
            IamUserAccessToBilling?: IAMUserAccessToBilling | string;
            /**
                * <p>A list of tags that you want to attach to the newly created account. These tags are
                *             attached to the commercial account associated with the GovCloud account, and not to the
                *             GovCloud account itself. To add tags to the actual GovCloud account, call the <a>TagResource</a> operation in the GovCloud region after the new GovCloud
                *             account exists.</p>
                *         <p>For each tag in the list, you must specify both a tag key and a value. You can set the
                *             value to an empty string, but you can't set it to <code>null</code>. For more
                *             information about tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging Organizations resources</a> in the
                *             Organizations User Guide.</p>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the maximum allowed number of
                *                 tags for an account, then the entire request fails and the account is not
                *                 created.</p>
                *         </note>
                */
            Tags?: Tag[];
    }
    export namespace CreateGovCloudAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGovCloudAccountRequest) => any;
    }
    export interface CreateGovCloudAccountResponse {
            /**
                * <p>Contains the status about a <a>CreateAccount</a> or <a>CreateGovCloudAccount</a> request to create an Amazon Web Services account or an Amazon Web Services
                *             GovCloud (US) account in an organization.</p>
                */
            CreateAccountStatus?: CreateAccountStatus;
    }
    export namespace CreateGovCloudAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGovCloudAccountResponse) => any;
    }
    export enum OrganizationFeatureSet {
            ALL = "ALL",
            CONSOLIDATED_BILLING = "CONSOLIDATED_BILLING"
    }
    export interface CreateOrganizationRequest {
            /**
                * <p>Specifies the feature set supported by the new organization. Each feature set supports
                *             different levels of functionality.</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>CONSOLIDATED_BILLING</code>: All member accounts have their bills
                *                     consolidated to and paid by the management account. For more information, see
                *                         <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-cb-only">Consolidated billing</a> in the
                *                     <i>Organizations User Guide.</i>
                *                </p>
                *                 <p> The consolidated billing feature subset isn't available for organizations in
                *                     the Amazon Web Services GovCloud (US) Region.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>ALL</code>: In addition to all the features supported by the
                *                     consolidated billing feature set, the management account can also apply any
                *                     policy type to any member account in the organization. For more information, see
                *                         <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-all">All
                *                         features</a> in the <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                */
            FeatureSet?: OrganizationFeatureSet | string;
    }
    export namespace CreateOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationRequest) => any;
    }
    export enum PolicyTypeStatus {
            ENABLED = "ENABLED",
            PENDING_DISABLE = "PENDING_DISABLE",
            PENDING_ENABLE = "PENDING_ENABLE"
    }
    export enum PolicyType {
            AISERVICES_OPT_OUT_POLICY = "AISERVICES_OPT_OUT_POLICY",
            BACKUP_POLICY = "BACKUP_POLICY",
            SERVICE_CONTROL_POLICY = "SERVICE_CONTROL_POLICY",
            TAG_POLICY = "TAG_POLICY"
    }
    /**
        * <p>Contains information about a policy type and its status in the associated root.</p>
        */
    export interface PolicyTypeSummary {
            /**
                * <p>The name of the policy type.</p>
                */
            Type?: PolicyType | string;
            /**
                * <p>The status of the policy type as it relates to the associated root. To attach a policy
                *             of the specified type to a root or to an OU or account in that root, it must be
                *             available in the organization and enabled for that root.</p>
                */
            Status?: PolicyTypeStatus | string;
    }
    export namespace PolicyTypeSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicyTypeSummary) => any;
    }
    /**
        * <p>Contains details about an organization. An organization is a collection of accounts
        *             that are centrally managed together using consolidated billing, organized hierarchically
        *             with organizational units (OUs), and controlled with policies .</p>
        */
    export interface Organization {
            /**
                * <p>The unique identifier (ID) of an organization.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organization ID string requires "o-"
                *     followed by from 10 to 32 lowercase letters or digits.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of an organization.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>Specifies the functionality that currently is available to the organization. If set to
                *             "ALL", then all features are enabled and policies can be applied to accounts in the
                *             organization. If set to "CONSOLIDATED_BILLING", then only consolidated billing
                *             functionality is available. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features
                *                 in Your Organization</a> in the <i>Organizations User Guide</i>.</p>
                */
            FeatureSet?: OrganizationFeatureSet | string;
            /**
                * <p>The Amazon Resource Name (ARN) of the account that is designated as the management
                *             account for the organization.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            MasterAccountArn?: string;
            /**
                * <p>The unique identifier (ID) of the management account of an organization.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            MasterAccountId?: string;
            /**
                * <p>The email address that is associated with the Amazon Web Services account that is designated as the
                *             management account for the organization.</p>
                */
            MasterAccountEmail?: string;
            /**
                * <important>
                *             <p>Do not use. This field is deprecated and doesn't provide complete information
                *                 about the policies in your organization.</p>
                *         </important>
                *         <p>To determine the policies that are enabled and available for use in your organization,
                *             use the <a>ListRoots</a> operation instead.</p>
                */
            AvailablePolicyTypes?: PolicyTypeSummary[];
    }
    export namespace Organization {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Organization) => any;
    }
    export interface CreateOrganizationResponse {
            /**
                * <p>A structure that contains details about the newly created organization.</p>
                */
            Organization?: Organization;
    }
    export namespace CreateOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationResponse) => any;
    }
    export interface CreateOrganizationalUnitRequest {
            /**
                * <p>The unique identifier (ID) of the parent root or OU that you want to create the new OU
                *             in.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            ParentId: string | undefined;
            /**
                * <p>The friendly name to assign to the new OU.</p>
                */
            Name: string | undefined;
            /**
                * <p>A list of tags that you want to attach to the newly created OU. For each tag in the
                *             list, you must specify both a tag key and a value. You can set the value to an empty
                *             string, but you can't set it to <code>null</code>. For more information about tagging,
                *             see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging Organizations
                *                 resources</a> in the Organizations User Guide.</p>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the allowed number of tags for
                *                 an OU, then the entire request fails and the OU is not created.</p>
                *         </note>
                */
            Tags?: Tag[];
    }
    export namespace CreateOrganizationalUnitRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationalUnitRequest) => any;
    }
    /**
        * <p>Contains details about an organizational unit (OU). An OU is a container of Amazon Web Services
        *             accounts within a root of an organization. Policies that are attached to an OU apply to
        *             all accounts contained in that OU and in any child OUs.</p>
        */
    export interface OrganizationalUnit {
            /**
                * <p>The unique identifier (ID) associated with this OU.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires
                *     "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the
                *     OU). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
                *     or digits.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of this OU.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>The friendly name of this OU.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
    }
    export namespace OrganizationalUnit {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationalUnit) => any;
    }
    export interface CreateOrganizationalUnitResponse {
            /**
                * <p>A structure that contains details about the newly created OU.</p>
                */
            OrganizationalUnit?: OrganizationalUnit;
    }
    export namespace CreateOrganizationalUnitResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationalUnitResponse) => any;
    }
    /**
        * <p>An OU with the same name already exists.</p>
        */
    export class DuplicateOrganizationalUnitException extends __BaseException {
            readonly name: "DuplicateOrganizationalUnitException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicateOrganizationalUnitException, __BaseException>);
    }
    /**
        * <p>We can't find a root or OU with the <code>ParentId</code> that you specified.</p>
        */
    export class ParentNotFoundException extends __BaseException {
            readonly name: "ParentNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ParentNotFoundException, __BaseException>);
    }
    export interface CreatePolicyRequest {
            /**
                * <p>The policy text content to add to the new policy. The text that you supply must adhere
                *             to the rules of the policy type you specify in the <code>Type</code> parameter.</p>
                */
            Content: string | undefined;
            /**
                * <p>An optional description to assign to the policy.</p>
                */
            Description: string | undefined;
            /**
                * <p>The friendly name to assign to the policy.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name: string | undefined;
            /**
                * <p>The type of policy to create. You can specify one of the following values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            Type: PolicyType | string | undefined;
            /**
                * <p>A list of tags that you want to attach to the newly created policy. For each tag in
                *             the list, you must specify both a tag key and a value. You can set the value to an empty
                *             string, but you can't set it to <code>null</code>. For more information about tagging,
                *             see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging Organizations
                *                 resources</a> in the Organizations User Guide.</p>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the allowed number of tags for
                *                 a policy, then the entire request fails and the policy is not created.</p>
                *         </note>
                */
            Tags?: Tag[];
    }
    export namespace CreatePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyRequest) => any;
    }
    /**
        * <p>Contains information about a policy, but does not include the content. To see the
        *             content of a policy, see <a>DescribePolicy</a>.</p>
        */
    export interface PolicySummary {
            /**
                * <p>The unique identifier (ID) of the policy.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the policy.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>The friendly name of the policy.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
            /**
                * <p>The description of the policy.</p>
                */
            Description?: string;
            /**
                * <p>The type of policy.</p>
                */
            Type?: PolicyType | string;
            /**
                * <p>A boolean value that indicates whether the specified policy is an Amazon Web Services managed
                *             policy. If true, then you can attach the policy to roots, OUs, or accounts, but you
                *             cannot edit it.</p>
                */
            AwsManaged?: boolean;
    }
    export namespace PolicySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicySummary) => any;
    }
    /**
        * <p>Contains rules to be applied to the affected accounts. Policies can be attached
        *             directly to accounts, or to roots and OUs to affect all accounts in those
        *             hierarchies.</p>
        */
    export interface Policy {
            /**
                * <p>A structure that contains additional details about the policy.</p>
                */
            PolicySummary?: PolicySummary;
            /**
                * <p>The text content of the policy.</p>
                */
            Content?: string;
    }
    export namespace Policy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Policy) => any;
    }
    export interface CreatePolicyResponse {
            /**
                * <p>A structure that contains details about the newly created policy.</p>
                */
            Policy?: Policy;
    }
    export namespace CreatePolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePolicyResponse) => any;
    }
    /**
        * <p>A policy with the same name already exists.</p>
        */
    export class DuplicatePolicyException extends __BaseException {
            readonly name: "DuplicatePolicyException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicatePolicyException, __BaseException>);
    }
    /**
        * <p>The provided policy document doesn't meet the requirements of the specified policy
        *             type. For example, the syntax might be incorrect. For details about service control
        *             policy syntax, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service Control Policy
        *                 Syntax</a> in the <i>Organizations User Guide.</i>
        *          </p>
        */
    export class MalformedPolicyDocumentException extends __BaseException {
            readonly name: "MalformedPolicyDocumentException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MalformedPolicyDocumentException, __BaseException>);
    }
    /**
        * <p>You can't use the specified policy type with the feature set currently enabled for
        *             this organization. For example, you can enable SCPs only after you enable all features
        *             in the organization. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html#enable_policies_on_root">Managing
        *                 Organizations Policies</a>in the <i>Organizations User Guide.</i>
        *          </p>
        */
    export class PolicyTypeNotAvailableForOrganizationException extends __BaseException {
            readonly name: "PolicyTypeNotAvailableForOrganizationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyTypeNotAvailableForOrganizationException, __BaseException>);
    }
    export interface DeclineHandshakeRequest {
            /**
                * <p>The unique identifier (ID) of the handshake that you want to decline. You can get the
                *             ID from the <a>ListHandshakesForAccount</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            HandshakeId: string | undefined;
    }
    export namespace DeclineHandshakeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeclineHandshakeRequest) => any;
    }
    /**
        * <p>The organization isn't empty. To delete an organization, you must first remove all
        *             accounts except the management account, delete all OUs, and delete all policies.</p>
        */
    export class OrganizationNotEmptyException extends __BaseException {
            readonly name: "OrganizationNotEmptyException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OrganizationNotEmptyException, __BaseException>);
    }
    export interface DeleteOrganizationalUnitRequest {
            /**
                * <p>The unique identifier (ID) of the organizational unit that you want to delete. You can
                *             get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires
                *     "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the
                *     OU). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
                *     or digits.</p>
                */
            OrganizationalUnitId: string | undefined;
    }
    export namespace DeleteOrganizationalUnitRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteOrganizationalUnitRequest) => any;
    }
    /**
        * <p>The specified OU is not empty. Move all accounts to another root or to other OUs,
        *             remove all child OUs, and try the operation again.</p>
        */
    export class OrganizationalUnitNotEmptyException extends __BaseException {
            readonly name: "OrganizationalUnitNotEmptyException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OrganizationalUnitNotEmptyException, __BaseException>);
    }
    /**
        * <p>We can't find an OU with the <code>OrganizationalUnitId</code> that you
        *             specified.</p>
        */
    export class OrganizationalUnitNotFoundException extends __BaseException {
            readonly name: "OrganizationalUnitNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OrganizationalUnitNotFoundException, __BaseException>);
    }
    export interface DeletePolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy that you want to delete. You can get the ID
                *             from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a>
                *             operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
    }
    export namespace DeletePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePolicyRequest) => any;
    }
    /**
        * <p>The policy is attached to one or more entities. You must detach it from all roots,
        *             OUs, and accounts before performing this operation.</p>
        */
    export class PolicyInUseException extends __BaseException {
            readonly name: "PolicyInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyInUseException, __BaseException>);
    }
    export interface DeregisterDelegatedAdministratorRequest {
            /**
                * <p>The account ID number of the member account in the organization that you want to
                *             deregister as a delegated administrator.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The service principal name of an Amazon Web Services service for which the account is a delegated
                *             administrator.</p>
                *         <p>Delegated administrator privileges are revoked for only the specified Amazon Web Services service
                *             from the member account. If the specified service is the only service for which the
                *             member account is a delegated administrator, the operation also revokes Organizations read action
                *             permissions.</p>
                */
            ServicePrincipal: string | undefined;
    }
    export namespace DeregisterDelegatedAdministratorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeregisterDelegatedAdministratorRequest) => any;
    }
    export interface DescribeAccountRequest {
            /**
                * <p>The unique identifier (ID) of the Amazon Web Services account that you want information about. You
                *             can get the ID from the <a>ListAccounts</a> or <a>ListAccountsForParent</a> operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            AccountId: string | undefined;
    }
    export namespace DescribeAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccountRequest) => any;
    }
    export interface DescribeAccountResponse {
            /**
                * <p>A structure that contains information about the requested account.</p>
                */
            Account?: Account;
    }
    export namespace DescribeAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccountResponse) => any;
    }
    /**
        * <p>We can't find an create account request with the <code>CreateAccountRequestId</code>
        *             that you specified.</p>
        */
    export class CreateAccountStatusNotFoundException extends __BaseException {
            readonly name: "CreateAccountStatusNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CreateAccountStatusNotFoundException, __BaseException>);
    }
    export interface DescribeCreateAccountStatusRequest {
            /**
                * <p>Specifies the <code>Id</code> value that uniquely identifies the
                *                 <code>CreateAccount</code> request. You can get the value from the
                *                 <code>CreateAccountStatus.Id</code> response in an earlier <a>CreateAccount</a> request, or from the <a>ListCreateAccountStatus</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a create account request ID string
                *     requires "car-" followed by from 8 to 32 lowercase letters or digits.</p>
                */
            CreateAccountRequestId: string | undefined;
    }
    export namespace DescribeCreateAccountStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCreateAccountStatusRequest) => any;
    }
    export interface DescribeCreateAccountStatusResponse {
            /**
                * <p>A structure that contains the current status of an account creation request.</p>
                */
            CreateAccountStatus?: CreateAccountStatus;
    }
    export namespace DescribeCreateAccountStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCreateAccountStatusResponse) => any;
    }
    export enum EffectivePolicyType {
            AISERVICES_OPT_OUT_POLICY = "AISERVICES_OPT_OUT_POLICY",
            BACKUP_POLICY = "BACKUP_POLICY",
            TAG_POLICY = "TAG_POLICY"
    }
    export interface DescribeEffectivePolicyRequest {
            /**
                * <p>The type of policy that you want information about. You can specify one of the
                *             following values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            PolicyType: EffectivePolicyType | string | undefined;
            /**
                * <p>When you're signed in as the management account, specify the ID of the account that
                *             you want details about. Specifying an organization root or organizational unit (OU) as
                *             the target is not supported.</p>
                */
            TargetId?: string;
    }
    export namespace DescribeEffectivePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEffectivePolicyRequest) => any;
    }
    /**
        * <p>Contains rules to be applied to the affected accounts. The effective policy is the
        *             aggregation of any policies the account inherits, plus any policy directly attached to
        *             the account.</p>
        */
    export interface EffectivePolicy {
            /**
                * <p>The text content of the policy.</p>
                */
            PolicyContent?: string;
            /**
                * <p>The time of the last update to this policy.</p>
                */
            LastUpdatedTimestamp?: Date;
            /**
                * <p>The account ID of the policy target. </p>
                */
            TargetId?: string;
            /**
                * <p>The policy type.</p>
                */
            PolicyType?: EffectivePolicyType | string;
    }
    export namespace EffectivePolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EffectivePolicy) => any;
    }
    export interface DescribeEffectivePolicyResponse {
            /**
                * <p>The contents of the effective policy.</p>
                */
            EffectivePolicy?: EffectivePolicy;
    }
    export namespace DescribeEffectivePolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEffectivePolicyResponse) => any;
    }
    /**
        * <p>If you ran this action on the management account, this policy type is not enabled. If
        *             you ran the action on a member account, the account doesn't have an effective policy of
        *             this type. Contact the administrator of your organization about attaching a policy of
        *             this type to the account. </p>
        */
    export class EffectivePolicyNotFoundException extends __BaseException {
            readonly name: "EffectivePolicyNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<EffectivePolicyNotFoundException, __BaseException>);
    }
    export interface DescribeHandshakeRequest {
            /**
                * <p>The unique identifier (ID) of the handshake that you want information about. You can
                *             get the ID from the original call to <a>InviteAccountToOrganization</a>, or
                *             from a call to <a>ListHandshakesForAccount</a> or <a>ListHandshakesForOrganization</a>.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            HandshakeId: string | undefined;
    }
    export namespace DescribeHandshakeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeHandshakeRequest) => any;
    }
    export interface DescribeOrganizationResponse {
            /**
                * <p>A structure that contains information about the organization.</p>
                *         <important>
                *             <p>The <code>AvailablePolicyTypes</code> part of the response is deprecated, and you
                *                 shouldn't use it in your apps. It doesn't include any policy type supported by Organizations
                *                 other than SCPs. To determine which policy types are enabled in your organization,
                *                 use the <code>
                *                   <a>ListRoots</a>
                *                </code> operation.</p>
                *         </important>
                */
            Organization?: Organization;
    }
    export namespace DescribeOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationResponse) => any;
    }
    export interface DescribeOrganizationalUnitRequest {
            /**
                * <p>The unique identifier (ID) of the organizational unit that you want details about. You
                *             can get the ID from the <a>ListOrganizationalUnitsForParent</a>
                *             operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires
                *     "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the
                *     OU). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
                *     or digits.</p>
                */
            OrganizationalUnitId: string | undefined;
    }
    export namespace DescribeOrganizationalUnitRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationalUnitRequest) => any;
    }
    export interface DescribeOrganizationalUnitResponse {
            /**
                * <p>A structure that contains details about the specified OU.</p>
                */
            OrganizationalUnit?: OrganizationalUnit;
    }
    export namespace DescribeOrganizationalUnitResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationalUnitResponse) => any;
    }
    export interface DescribePolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy that you want details about. You can get the
                *             ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a>
                *             operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
    }
    export namespace DescribePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePolicyRequest) => any;
    }
    export interface DescribePolicyResponse {
            /**
                * <p>A structure that contains details about the specified policy.</p>
                */
            Policy?: Policy;
    }
    export namespace DescribePolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePolicyResponse) => any;
    }
    export interface DetachPolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy you want to detach. You can get the ID from
                *             the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a>
                *             operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
            /**
                * <p>The unique identifier (ID) of the root, OU, or account that you want to detach the
                *             policy from. You can get the ID from the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>, or <a>ListAccounts</a>
                *             operations.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            TargetId: string | undefined;
    }
    export namespace DetachPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetachPolicyRequest) => any;
    }
    /**
        * <p>The policy isn't attached to the specified target in the specified root.</p>
        */
    export class PolicyNotAttachedException extends __BaseException {
            readonly name: "PolicyNotAttachedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyNotAttachedException, __BaseException>);
    }
    export interface DisableAWSServiceAccessRequest {
            /**
                * <p>The service principal name of the Amazon Web Services service for which you want to disable
                *             integration with your organization. This is typically in the form of a URL, such as
                *                     <code>
                *                <i>service-abbreviation</i>.amazonaws.com</code>.</p>
                */
            ServicePrincipal: string | undefined;
    }
    export namespace DisableAWSServiceAccessRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisableAWSServiceAccessRequest) => any;
    }
    export interface DisablePolicyTypeRequest {
            /**
                * <p>The unique identifier (ID) of the root in which you want to disable a policy type. You
                *             can get the ID from the <a>ListRoots</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by
                *     from 4 to 32 lowercase letters or digits.</p>
                */
            RootId: string | undefined;
            /**
                * <p>The policy type that you want to disable in this root. You can specify one of the
                *             following values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            PolicyType: PolicyType | string | undefined;
    }
    export namespace DisablePolicyTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisablePolicyTypeRequest) => any;
    }
    /**
        * <p>Contains details about a root. A root is a top-level parent node in the hierarchy of
        *             an organization that can contain organizational units (OUs) and accounts.
        *             The root contains every Amazon Web Services account in the
        *             organization.</p>
        */
    export interface Root {
            /**
                * <p>The unique identifier (ID) for the root.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by
                *     from 4 to 32 lowercase letters or digits.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the root.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>The friendly name of the root.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
            /**
                * <p>The types of policies that are currently enabled for the root and therefore can be
                *             attached to the root or to its OUs or accounts.</p>
                *         <note>
                *             <p>Even if a policy type is shown as available in the organization, you can
                *                 separately enable and disable them at the root level by using <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. Use <a>DescribeOrganization</a> to see the availability of the policy types in
                *                 that organization.</p>
                *         </note>
                */
            PolicyTypes?: PolicyTypeSummary[];
    }
    export namespace Root {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Root) => any;
    }
    export interface DisablePolicyTypeResponse {
            /**
                * <p>A structure that shows the root with the updated list of enabled policy types.</p>
                */
            Root?: Root;
    }
    export namespace DisablePolicyTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisablePolicyTypeResponse) => any;
    }
    /**
        * <p>We can't find a root with the <code>RootId</code> that you specified.</p>
        */
    export class RootNotFoundException extends __BaseException {
            readonly name: "RootNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<RootNotFoundException, __BaseException>);
    }
    export interface EnableAllFeaturesRequest {
    }
    export namespace EnableAllFeaturesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableAllFeaturesRequest) => any;
    }
    export interface EnableAWSServiceAccessRequest {
            /**
                * <p>The service principal name of the Amazon Web Services service for which you want to enable
                *             integration with your organization. This is typically in the form of a URL, such as
                *                     <code>
                *                <i>service-abbreviation</i>.amazonaws.com</code>.</p>
                */
            ServicePrincipal: string | undefined;
    }
    export namespace EnableAWSServiceAccessRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableAWSServiceAccessRequest) => any;
    }
    export interface EnablePolicyTypeRequest {
            /**
                * <p>The unique identifier (ID) of the root in which you want to enable a policy type. You
                *             can get the ID from the <a>ListRoots</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by
                *     from 4 to 32 lowercase letters or digits.</p>
                */
            RootId: string | undefined;
            /**
                * <p>The policy type that you want to enable. You can specify one of the following
                *             values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            PolicyType: PolicyType | string | undefined;
    }
    export namespace EnablePolicyTypeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnablePolicyTypeRequest) => any;
    }
    export interface EnablePolicyTypeResponse {
            /**
                * <p>A structure that shows the root with the updated list of enabled policy types.</p>
                */
            Root?: Root;
    }
    export namespace EnablePolicyTypeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnablePolicyTypeResponse) => any;
    }
    /**
        * <p>The specified policy type is already enabled in the specified root.</p>
        */
    export class PolicyTypeAlreadyEnabledException extends __BaseException {
            readonly name: "PolicyTypeAlreadyEnabledException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PolicyTypeAlreadyEnabledException, __BaseException>);
    }
    /**
        * <p>A handshake with the same action and target already exists. For example, if you
        *             invited an account to join your organization, the invited account might already have a
        *             pending invitation from this organization. If you intend to resend an invitation to an
        *             account, ensure that existing handshakes that might be considered duplicates are
        *             canceled or declined.</p>
        */
    export class DuplicateHandshakeException extends __BaseException {
            readonly name: "DuplicateHandshakeException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicateHandshakeException, __BaseException>);
    }
    export interface InviteAccountToOrganizationRequest {
            /**
                * <p>The identifier (ID) of the Amazon Web Services account that you want to invite to join your
                *             organization. This is a JSON object that contains the following elements:</p>
                *         <p>
                *             <code>{ "Type": "ACCOUNT", "Id": "<<i>
                *                   <b>account id
                *                         number</b>
                *                </i>>" }</code>
                *         </p>
                *         <p>If you use the CLI, you can submit this as a single string, similar to the following
                *             example:</p>
                *         <p>
                *             <code>--target Id=123456789012,Type=ACCOUNT</code>
                *         </p>
                *         <p>If you specify <code>"Type": "ACCOUNT"</code>, you must provide the Amazon Web Services account ID
                *             number as the <code>Id</code>. If you specify <code>"Type": "EMAIL"</code>, you must
                *             specify the email address that is associated with the account.</p>
                *         <p>
                *             <code>--target Id=diego@example.com,Type=EMAIL</code>
                *         </p>
                */
            Target: HandshakeParty | undefined;
            /**
                * <p>Additional information that you want to include in the generated email to the
                *             recipient account owner.</p>
                */
            Notes?: string;
            /**
                * <p>A list of tags that you want to attach to the account when it becomes a member of the
                *             organization. For each tag in the list, you must specify both a tag key and a value. You
                *             can set the value to an empty string, but you can't set it to <code>null</code>. For
                *             more information about tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging Organizations resources</a> in the
                *             Organizations User Guide.</p>
                *         <important>
                *             <p>Any tags in the request are checked for compliance with any applicable tag
                *                 policies when the request is made. The request is rejected if the tags in the
                *                 request don't match the requirements of the policy at that time. Tag policy
                *                 compliance is <i>
                *                   <b>not</b>
                *                </i> checked
                *                 again when the invitation is accepted and the tags are actually attached to the
                *                 account. That means that if the tag policy changes between the invitation and the
                *                 acceptance, then that tags could potentially be non-compliant.</p>
                *         </important>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the allowed number of tags for
                *                 an account, then the entire request fails and invitations are not sent.</p>
                *         </note>
                */
            Tags?: Tag[];
    }
    export namespace InviteAccountToOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InviteAccountToOrganizationRequest) => any;
    }
    /**
        * <p>You can't remove a management account from an organization. If you want the management
        *             account to become a member account in another organization, you must first delete the
        *             current organization of the management account.</p>
        */
    export class MasterCannotLeaveOrganizationException extends __BaseException {
            readonly name: "MasterCannotLeaveOrganizationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MasterCannotLeaveOrganizationException, __BaseException>);
    }
    export interface ListAccountsRequest {
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAccountsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsRequest) => any;
    }
    export interface ListAccountsResponse {
            /**
                * <p>A list of objects in the organization.</p>
                */
            Accounts?: Account[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListAccountsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsResponse) => any;
    }
    export interface ListAccountsForParentRequest {
            /**
                * <p>The unique identifier (ID) for the parent root or organization unit (OU) whose
                *             accounts you want to list.</p>
                */
            ParentId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAccountsForParentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsForParentRequest) => any;
    }
    export interface ListAccountsForParentResponse {
            /**
                * <p>A list of the accounts in the specified root or OU.</p>
                */
            Accounts?: Account[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListAccountsForParentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsForParentResponse) => any;
    }
    export interface ListAWSServiceAccessForOrganizationRequest {
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAWSServiceAccessForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAWSServiceAccessForOrganizationRequest) => any;
    }
    /**
        * <p>A structure that contains details of a service principal that represents an Amazon Web Services
        *             service that is enabled to integrate with Organizations.</p>
        */
    export interface EnabledServicePrincipal {
            /**
                * <p>The name of the service principal. This is typically in the form of a URL, such as:
                *                     <code>
                *                <i>servicename</i>.amazonaws.com</code>.</p>
                */
            ServicePrincipal?: string;
            /**
                * <p>The date that the service principal was enabled for integration with Organizations.</p>
                */
            DateEnabled?: Date;
    }
    export namespace EnabledServicePrincipal {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnabledServicePrincipal) => any;
    }
    export interface ListAWSServiceAccessForOrganizationResponse {
            /**
                * <p>A list of the service principals for the services that are enabled to integrate with
                *             your organization. Each principal is a structure that includes the name and the date
                *             that it was enabled for integration with Organizations.</p>
                */
            EnabledServicePrincipals?: EnabledServicePrincipal[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListAWSServiceAccessForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAWSServiceAccessForOrganizationResponse) => any;
    }
    export enum ChildType {
            ACCOUNT = "ACCOUNT",
            ORGANIZATIONAL_UNIT = "ORGANIZATIONAL_UNIT"
    }
    export interface ListChildrenRequest {
            /**
                * <p>The unique identifier (ID) for the parent root or OU whose children you want to
                *             list.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            ParentId: string | undefined;
            /**
                * <p>Filters the output to include only the specified child type.</p>
                */
            ChildType: ChildType | string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListChildrenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChildrenRequest) => any;
    }
    /**
        * <p>Contains a list of child entities, either OUs or accounts.</p>
        */
    export interface Child {
            /**
                * <p>The unique identifier (ID) of this child entity.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a child ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with
                *           "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that
                *           contains the OU). This string is followed by a second "-" dash and from 8 to 32 additional
                *           lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            Id?: string;
            /**
                * <p>The type of this child entity.</p>
                */
            Type?: ChildType | string;
    }
    export namespace Child {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Child) => any;
    }
    export interface ListChildrenResponse {
            /**
                * <p>The list of children of the specified parent container.</p>
                */
            Children?: Child[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListChildrenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChildrenResponse) => any;
    }
    export interface ListCreateAccountStatusRequest {
            /**
                * <p>A list of one or more states that you want included in the response. If this parameter
                *             isn't present, all requests are included in the response.</p>
                */
            States?: (CreateAccountState | string)[];
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListCreateAccountStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCreateAccountStatusRequest) => any;
    }
    export interface ListCreateAccountStatusResponse {
            /**
                * <p>A list of objects with details about the requests. Certain elements, such as the
                *             accountId number, are present in the output only after the account has been successfully
                *             created.</p>
                */
            CreateAccountStatuses?: CreateAccountStatus[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListCreateAccountStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCreateAccountStatusResponse) => any;
    }
    export interface ListDelegatedAdministratorsRequest {
            /**
                * <p>Specifies a service principal name. If specified, then the operation lists the
                *             delegated administrators only for the specified service.</p>
                *         <p>If you don't specify a service principal, the operation lists all delegated
                *             administrators for all services in your organization.</p>
                */
            ServicePrincipal?: string;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListDelegatedAdministratorsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDelegatedAdministratorsRequest) => any;
    }
    /**
        * <p>Contains information about the delegated administrator.</p>
        */
    export interface DelegatedAdministrator {
            /**
                * <p>The unique identifier (ID) of the delegated administrator's account.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the delegated administrator's account.</p>
                */
            Arn?: string;
            /**
                * <p>The email address that is associated with the delegated administrator's Amazon Web Services
                *             account.</p>
                */
            Email?: string;
            /**
                * <p>The friendly name of the delegated administrator's account.</p>
                */
            Name?: string;
            /**
                * <p>The status of the delegated administrator's account in the organization.</p>
                */
            Status?: AccountStatus | string;
            /**
                * <p>The method by which the delegated administrator's account joined the
                *             organization.</p>
                */
            JoinedMethod?: AccountJoinedMethod | string;
            /**
                * <p>The date when the delegated administrator's account became a part of the
                *             organization.</p>
                */
            JoinedTimestamp?: Date;
            /**
                * <p>The date when the account was made a delegated administrator.</p>
                */
            DelegationEnabledDate?: Date;
    }
    export namespace DelegatedAdministrator {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DelegatedAdministrator) => any;
    }
    export interface ListDelegatedAdministratorsResponse {
            /**
                * <p>The list of delegated administrators in your organization.</p>
                */
            DelegatedAdministrators?: DelegatedAdministrator[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListDelegatedAdministratorsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDelegatedAdministratorsResponse) => any;
    }
    export interface ListDelegatedServicesForAccountRequest {
            /**
                * <p>The account ID number of a delegated administrator account in the organization.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListDelegatedServicesForAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDelegatedServicesForAccountRequest) => any;
    }
    /**
        * <p>Contains information about the Amazon Web Services service for which the account is a delegated
        *             administrator.</p>
        */
    export interface DelegatedService {
            /**
                * <p>The name of an Amazon Web Services service that can request an operation for the specified service.
                *             This is typically in the form of a URL, such as:
                *                 <code>
                *                <i>servicename</i>.amazonaws.com</code>.</p>
                */
            ServicePrincipal?: string;
            /**
                * <p>The date that the account became a delegated administrator for this service. </p>
                */
            DelegationEnabledDate?: Date;
    }
    export namespace DelegatedService {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DelegatedService) => any;
    }
    export interface ListDelegatedServicesForAccountResponse {
            /**
                * <p>The services for which the account is a delegated administrator.</p>
                */
            DelegatedServices?: DelegatedService[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListDelegatedServicesForAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDelegatedServicesForAccountResponse) => any;
    }
    /**
        * <p>Specifies the criteria that are used to select the handshakes for the
        *             operation.</p>
        */
    export interface HandshakeFilter {
            /**
                * <p>Specifies the type of handshake action.</p>
                *         <p>If you specify <code>ActionType</code>, you cannot also specify
                *                 <code>ParentHandshakeId</code>.</p>
                */
            ActionType?: ActionType | string;
            /**
                * <p>Specifies the parent handshake. Only used for handshake types that are a child of
                *             another type.</p>
                *         <p>If you specify <code>ParentHandshakeId</code>, you cannot also specify
                *                 <code>ActionType</code>.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            ParentHandshakeId?: string;
    }
    export namespace HandshakeFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HandshakeFilter) => any;
    }
    export interface ListHandshakesForAccountRequest {
            /**
                * <p>Filters the handshakes that you want included in the response. The default is all
                *             types. Use the <code>ActionType</code> element to limit the output to only a specified
                *             type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>, or
                *                 <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
                *                 <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child handshake
                *             for each member account, you can specify <code>ParentHandshakeId</code> to see only the
                *             handshakes that were generated by that parent request.</p>
                */
            Filter?: HandshakeFilter;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListHandshakesForAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHandshakesForAccountRequest) => any;
    }
    export interface ListHandshakesForOrganizationRequest {
            /**
                * <p>A filter of the handshakes that you want included in the response. The default is all
                *             types. Use the <code>ActionType</code> element to limit the output to only a specified
                *             type, such as <code>INVITE</code>, <code>ENABLE-ALL-FEATURES</code>, or
                *                 <code>APPROVE-ALL-FEATURES</code>. Alternatively, for the
                *                 <code>ENABLE-ALL-FEATURES</code> handshake that generates a separate child handshake
                *             for each member account, you can specify the <code>ParentHandshakeId</code> to see only
                *             the handshakes that were generated by that parent request.</p>
                */
            Filter?: HandshakeFilter;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListHandshakesForOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHandshakesForOrganizationRequest) => any;
    }
    export interface ListOrganizationalUnitsForParentRequest {
            /**
                * <p>The unique identifier (ID) of the root or OU whose child OUs you want to list.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            ParentId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListOrganizationalUnitsForParentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationalUnitsForParentRequest) => any;
    }
    export interface ListOrganizationalUnitsForParentResponse {
            /**
                * <p>A list of the OUs in the specified root or parent OU.</p>
                */
            OrganizationalUnits?: OrganizationalUnit[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListOrganizationalUnitsForParentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationalUnitsForParentResponse) => any;
    }
    /**
        * <p>We can't find an organizational unit (OU) or Amazon Web Services account with the
        *                 <code>ChildId</code> that you specified.</p>
        */
    export class ChildNotFoundException extends __BaseException {
            readonly name: "ChildNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ChildNotFoundException, __BaseException>);
    }
    export interface ListParentsRequest {
            /**
                * <p>The unique identifier (ID) of the OU or account whose parent containers you want to
                *             list. Don't specify a root.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a child ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with
                *           "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that
                *           contains the OU). This string is followed by a second "-" dash and from 8 to 32 additional
                *           lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            ChildId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListParentsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListParentsRequest) => any;
    }
    export enum ParentType {
            ORGANIZATIONAL_UNIT = "ORGANIZATIONAL_UNIT",
            ROOT = "ROOT"
    }
    /**
        * <p>Contains information about either a root or an organizational unit (OU) that can
        *             contain OUs or accounts in an organization.</p>
        */
    export interface Parent {
            /**
                * <p>The unique identifier (ID) of the parent entity.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            Id?: string;
            /**
                * <p>The type of the parent entity.</p>
                */
            Type?: ParentType | string;
    }
    export namespace Parent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Parent) => any;
    }
    export interface ListParentsResponse {
            /**
                * <p>A list of parents for the specified child account or OU.</p>
                */
            Parents?: Parent[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListParentsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListParentsResponse) => any;
    }
    export interface ListPoliciesRequest {
            /**
                * <p>Specifies the type of policy that you want to include in the response. You must
                *             specify one of the following values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            Filter: PolicyType | string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesRequest) => any;
    }
    export interface ListPoliciesResponse {
            /**
                * <p>A list of policies that match the filter criteria in the request. The output list
                *             doesn't include the policy contents. To see the content for a policy, see <a>DescribePolicy</a>.</p>
                */
            Policies?: PolicySummary[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesResponse) => any;
    }
    export interface ListPoliciesForTargetRequest {
            /**
                * <p>The unique identifier (ID) of the root, organizational unit, or account whose policies
                *             you want to list.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            TargetId: string | undefined;
            /**
                * <p>The type of policy that you want to include in the returned list. You must specify one
                *             of the following values:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            Filter: PolicyType | string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListPoliciesForTargetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesForTargetRequest) => any;
    }
    export interface ListPoliciesForTargetResponse {
            /**
                * <p>The list of policies that match the criteria in the request.</p>
                */
            Policies?: PolicySummary[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListPoliciesForTargetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPoliciesForTargetResponse) => any;
    }
    export interface ListRootsRequest {
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListRootsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRootsRequest) => any;
    }
    export interface ListRootsResponse {
            /**
                * <p>A list of roots that are defined in an organization.</p>
                */
            Roots?: Root[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListRootsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRootsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The ID of the resource with the tags to list.</p>
                *         <p>You can specify any of the following taggable resources.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account – specify the account ID number.</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit  – specify the OU ID that begins with <code>ou-</code> and
                *                     looks similar to: <code>ou-<i>1a2b-34uvwxyz</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Root – specify the root ID that begins with <code>r-</code> and looks similar
                *                     to: <code>r-<i>1a2b</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Policy – specify the policy ID that begins with <code>p-</code> andlooks
                *                     similar to: <code>p-<i>12abcdefg3</i>
                *                   </code>
                *                </p>
                *             </li>
                *          </ul>
                */
            ResourceId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The tags that are assigned to the resource.</p>
                */
            Tags?: Tag[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListTargetsForPolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy whose attachments you want to know.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
            /**
                * <p>The parameter for receiving additional results if you receive a
                *     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
                *     indicates that more output is available. Set this parameter to the value of the previous
                *     call's <code>NextToken</code> response to indicate where the output should continue
                *     from.</p>
                */
            NextToken?: string;
            /**
                * <p>The total number of results that you want included on each page of the
                *     response. If you do not include this parameter, it defaults to a value that is specific to the
                *     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
                *     response element is present and has a value (is not null). Include that value as the
                *     <code>NextToken</code> request parameter in the next call to the operation to get the next part
                *     of the results. Note that Organizations might return fewer results than the maximum even when there are
                *     more results available. You should check <code>NextToken</code> after every operation to ensure
                *     that you receive all of the results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListTargetsForPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForPolicyRequest) => any;
    }
    export enum TargetType {
            ACCOUNT = "ACCOUNT",
            ORGANIZATIONAL_UNIT = "ORGANIZATIONAL_UNIT",
            ROOT = "ROOT"
    }
    /**
        * <p>Contains information about a root, OU, or account that a policy is attached to.</p>
        */
    export interface PolicyTargetSummary {
            /**
                * <p>The unique identifier (ID) of the policy target.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            TargetId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the policy target.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>The friendly name of the policy target.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
            /**
                * <p>The type of the policy target.</p>
                */
            Type?: TargetType | string;
    }
    export namespace PolicyTargetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicyTargetSummary) => any;
    }
    export interface ListTargetsForPolicyResponse {
            /**
                * <p>A list of structures, each of which contains details about one of the entities to
                *             which the specified policy is attached.</p>
                */
            Targets?: PolicyTargetSummary[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListTargetsForPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTargetsForPolicyResponse) => any;
    }
    /**
        * <p>We can't find the destination container (a root or OU) with the <code>ParentId</code>
        *             that you specified.</p>
        */
    export class DestinationParentNotFoundException extends __BaseException {
            readonly name: "DestinationParentNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DestinationParentNotFoundException, __BaseException>);
    }
    /**
        * <p>That account is already present in the specified destination.</p>
        */
    export class DuplicateAccountException extends __BaseException {
            readonly name: "DuplicateAccountException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicateAccountException, __BaseException>);
    }
    export interface MoveAccountRequest {
            /**
                * <p>The unique identifier (ID) of the account that you want to move.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The unique identifier (ID) of the root or organizational unit that you want to move
                *             the account from.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            SourceParentId: string | undefined;
            /**
                * <p>The unique identifier (ID) of the root or organizational unit that you want to move
                *             the account to.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
                *     following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
                *           digits.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
                *           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
                *           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
                *             </li>
                *          </ul>
                */
            DestinationParentId: string | undefined;
    }
    export namespace MoveAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MoveAccountRequest) => any;
    }
    /**
        * <p>We can't find a source root or OU with the <code>ParentId</code> that you
        *             specified.</p>
        */
    export class SourceParentNotFoundException extends __BaseException {
            readonly name: "SourceParentNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<SourceParentNotFoundException, __BaseException>);
    }
    export interface RegisterDelegatedAdministratorRequest {
            /**
                * <p>The account ID number of the member account in the organization to register as a
                *             delegated administrator.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The service principal of the Amazon Web Services service for which you want to make the member
                *             account a delegated administrator.</p>
                */
            ServicePrincipal: string | undefined;
    }
    export namespace RegisterDelegatedAdministratorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterDelegatedAdministratorRequest) => any;
    }
    export interface RemoveAccountFromOrganizationRequest {
            /**
                * <p>The unique identifier (ID) of the member account that you want to remove from the
                *             organization.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
                *     digits.</p>
                */
            AccountId: string | undefined;
    }
    export namespace RemoveAccountFromOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveAccountFromOrganizationRequest) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The ID of the resource to add a tag to.</p>
                *         <p>You can specify any of the following taggable resources.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account – specify the account ID number.</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit  – specify the OU ID that begins with <code>ou-</code> and
                *                     looks similar to: <code>ou-<i>1a2b-34uvwxyz</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Root – specify the root ID that begins with <code>r-</code> and looks similar
                *                     to: <code>r-<i>1a2b</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Policy – specify the policy ID that begins with <code>p-</code> andlooks
                *                     similar to: <code>p-<i>12abcdefg3</i>
                *                   </code>
                *                </p>
                *             </li>
                *          </ul>
                */
            ResourceId: string | undefined;
            /**
                * <p>A list of tags to add to the specified resource.</p>
                *         <p>For each tag in the list, you must specify both a tag key and a value. The value can
                *             be an empty string, but you can't set it to <code>null</code>.</p>
                *         <note>
                *             <p>If any one of the tags is invalid or if you exceed the maximum allowed number of
                *                 tags for a resource, then the entire request fails.</p>
                *         </note>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The ID of the resource to remove a tag from.</p>
                *         <p>You can specify any of the following taggable resources.</p>
                *         <ul>
                *             <li>
                *                 <p>Amazon Web Services account – specify the account ID number.</p>
                *             </li>
                *             <li>
                *                 <p>Organizational unit  – specify the OU ID that begins with <code>ou-</code> and
                *                     looks similar to: <code>ou-<i>1a2b-34uvwxyz</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Root – specify the root ID that begins with <code>r-</code> and looks similar
                *                     to: <code>r-<i>1a2b</i>
                *                   </code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>Policy – specify the policy ID that begins with <code>p-</code> andlooks
                *                     similar to: <code>p-<i>12abcdefg3</i>
                *                   </code>
                *                </p>
                *             </li>
                *          </ul>
                */
            ResourceId: string | undefined;
            /**
                * <p>The list of keys for tags to remove from the specified resource.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UpdateOrganizationalUnitRequest {
            /**
                * <p>The unique identifier (ID) of the OU that you want to rename. You can get the ID from
                *             the <a>ListOrganizationalUnitsForParent</a> operation.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires
                *     "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the
                *     OU). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
                *     or digits.</p>
                */
            OrganizationalUnitId: string | undefined;
            /**
                * <p>The new name that you want to assign to the OU.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
    }
    export namespace UpdateOrganizationalUnitRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateOrganizationalUnitRequest) => any;
    }
    export interface UpdateOrganizationalUnitResponse {
            /**
                * <p>A structure that contains the details about the specified OU, including its new
                *             name.</p>
                */
            OrganizationalUnit?: OrganizationalUnit;
    }
    export namespace UpdateOrganizationalUnitResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateOrganizationalUnitResponse) => any;
    }
    export interface UpdatePolicyRequest {
            /**
                * <p>The unique identifier (ID) of the policy that you want to update.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
                *     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
                */
            PolicyId: string | undefined;
            /**
                * <p>If provided, the new name for the policy.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
                *     that is used to validate this parameter is a string of any of the characters in the ASCII
                *     character range.</p>
                */
            Name?: string;
            /**
                * <p>If provided, the new description for the policy.</p>
                */
            Description?: string;
            /**
                * <p>If provided, the new content for the policy. The text must be correctly formatted JSON
                *             that complies with the syntax for the policy's type. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service
                *                 Control Policy Syntax</a> in the <i>Organizations User Guide.</i>
                *          </p>
                */
            Content?: string;
    }
    export namespace UpdatePolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePolicyRequest) => any;
    }
    export interface UpdatePolicyResponse {
            /**
                * <p>A structure that contains details about the updated policy, showing the requested
                *             changes.</p>
                */
            Policy?: Policy;
    }
    export namespace UpdatePolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePolicyResponse) => any;
    }
    /**
        * <p>Contains additional data that is needed to process a handshake.</p>
        */
    export interface HandshakeResource {
            /**
                * <p>The information that is passed to the other party in the handshake. The format of the
                *             value string must match the requirements of the specified type.</p>
                */
            Value?: string;
            /**
                * <p>The type of information being passed, specifying how the value is to be interpreted by
                *             the other party:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>ACCOUNT</code> - Specifies an Amazon Web Services account ID number.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>ORGANIZATION</code> - Specifies an organization ID number.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>EMAIL</code> - Specifies the email address that is associated with the
                *                     account that receives the handshake. </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>OWNER_EMAIL</code> - Specifies the email address associated with the
                *                     management account. Included as information about an organization. </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>OWNER_NAME</code> - Specifies the name associated with the management
                *                     account. Included as information about an organization. </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>NOTES</code> - Additional text provided by the handshake initiator and
                *                     intended for the recipient to read.</p>
                *             </li>
                *          </ul>
                */
            Type?: HandshakeResourceType | string;
            /**
                * <p>When needed, contains an additional array of <code>HandshakeResource</code>
                *             objects.</p>
                */
            Resources?: HandshakeResource[];
    }
    export namespace HandshakeResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HandshakeResource) => any;
    }
    /**
        * <p>Contains information that must be exchanged to securely establish a relationship
        *             between two accounts (an <i>originator</i> and a
        *                 <i>recipient</i>). For example, when a management account (the
        *             originator) invites another account (the recipient) to join its organization, the two
        *             accounts exchange information as a series of handshake requests and responses.</p>
        *         <p>
        *             <b>Note:</b> Handshakes that are <code>CANCELED</code>,
        *                 <code>ACCEPTED</code>, <code>DECLINED</code>, or <code>EXPIRED</code> show up in
        *             lists for only 30 days after entering that state After that they are deleted.</p>
        */
    export interface Handshake {
            /**
                * <p>The unique identifier (ID) of a handshake. The originating account creates the ID when
                *             it initiates the handshake.</p>
                *         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for  handshake ID string requires "h-"
                *     followed by from 8 to 32 lowercase letters or digits.</p>
                */
            Id?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of a handshake.</p>
                *         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
                *     Formats Supported by Organizations</a> in the <i>Amazon Web Services Service Authorization Reference</i>.</p>
                */
            Arn?: string;
            /**
                * <p>Information about the two accounts that are participating in the handshake.</p>
                */
            Parties?: HandshakeParty[];
            /**
                * <p>The current state of the handshake. Use the state to trace the flow of the handshake
                *             through the process from its creation to its acceptance. The meaning of each of the
                *             valid values is as follows:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>REQUESTED</b>: This handshake was sent to
                *                     multiple recipients (applicable to only some handshake types) and not all
                *                     recipients have responded yet. The request stays in this state until all
                *                     recipients respond.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>OPEN</b>: This handshake was sent to multiple
                *                     recipients (applicable to only some policy types) and all recipients have
                *                     responded, allowing the originator to complete the handshake action.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>CANCELED</b>: This handshake is no longer active
                *                     because it was canceled by the originating account.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>ACCEPTED</b>: This handshake is complete because
                *                     it has been accepted by the recipient.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>DECLINED</b>: This handshake is no longer active
                *                     because it was declined by the recipient account.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>EXPIRED</b>: This handshake is no longer active
                *                     because the originator did not receive a response of any kind from the recipient
                *                     before the expiration time (15 days).</p>
                *             </li>
                *          </ul>
                */
            State?: HandshakeState | string;
            /**
                * <p>The date and time that the handshake request was made.</p>
                */
            RequestedTimestamp?: Date;
            /**
                * <p>The date and time that the handshake expires. If the recipient of the handshake
                *             request fails to respond before the specified date and time, the handshake becomes
                *             inactive and is no longer valid.</p>
                */
            ExpirationTimestamp?: Date;
            /**
                * <p>The type of handshake, indicating what action occurs when the recipient accepts the
                *             handshake. The following handshake types are supported:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>INVITE</b>: This type of handshake represents a
                *                     request to join an organization. It is always sent from the management account
                *                     to only non-member accounts.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>ENABLE_ALL_FEATURES</b>: This type of handshake
                *                     represents a request to enable all features in an organization. It is always
                *                     sent from the management account to only <i>invited</i> member
                *                     accounts. Created accounts do not receive this because those accounts were
                *                     created by the organization's management account and approval is
                *                     inferred.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>APPROVE_ALL_FEATURES</b>: This type of handshake
                *                     is sent from the Organizations service when all member accounts have approved the
                *                         <code>ENABLE_ALL_FEATURES</code> invitation. It is sent only to the
                *                     management account and signals the master that it can finalize the process to
                *                     enable all features.</p>
                *             </li>
                *          </ul>
                */
            Action?: ActionType | string;
            /**
                * <p>Additional information that is needed to process the handshake.</p>
                */
            Resources?: HandshakeResource[];
    }
    export namespace Handshake {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Handshake) => any;
    }
    export interface AcceptHandshakeResponse {
            /**
                * <p>A structure that contains details about the accepted handshake.</p>
                */
            Handshake?: Handshake;
    }
    export namespace AcceptHandshakeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptHandshakeResponse) => any;
    }
    export interface CancelHandshakeResponse {
            /**
                * <p>A structure that contains details about the handshake that you canceled.</p>
                */
            Handshake?: Handshake;
    }
    export namespace CancelHandshakeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelHandshakeResponse) => any;
    }
    export interface DeclineHandshakeResponse {
            /**
                * <p>A structure that contains details about the declined handshake. The state is updated
                *             to show the value <code>DECLINED</code>.</p>
                */
            Handshake?: Handshake;
    }
    export namespace DeclineHandshakeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeclineHandshakeResponse) => any;
    }
    export interface DescribeHandshakeResponse {
            /**
                * <p>A structure that contains information about the specified handshake.</p>
                */
            Handshake?: Handshake;
    }
    export namespace DescribeHandshakeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeHandshakeResponse) => any;
    }
    export interface EnableAllFeaturesResponse {
            /**
                * <p>A structure that contains details about the handshake created to support this request
                *             to enable all features in the organization.</p>
                */
            Handshake?: Handshake;
    }
    export namespace EnableAllFeaturesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableAllFeaturesResponse) => any;
    }
    export interface InviteAccountToOrganizationResponse {
            /**
                * <p>A structure that contains details about the handshake that is created to support this
                *             invitation request.</p>
                */
            Handshake?: Handshake;
    }
    export namespace InviteAccountToOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InviteAccountToOrganizationResponse) => any;
    }
    export interface ListHandshakesForAccountResponse {
            /**
                * <p>A list of <a>Handshake</a> objects with details about each of the
                *             handshakes that is associated with the specified account.</p>
                */
            Handshakes?: Handshake[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListHandshakesForAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHandshakesForAccountResponse) => any;
    }
    export interface ListHandshakesForOrganizationResponse {
            /**
                * <p>A list of <a>Handshake</a> objects with details about each of the
                *             handshakes that are associated with an organization.</p>
                */
            Handshakes?: Handshake[];
            /**
                * <p>If present, indicates that more output is available than is
                *     included in the current response. Use this value in the <code>NextToken</code> request parameter
                *     in a subsequent call to the operation to get the next part of the output. You should repeat this
                *     until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
                */
            NextToken?: string;
    }
    export namespace ListHandshakesForOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListHandshakesForOrganizationResponse) => any;
    }
}

declare module '@aws-sdk/client-organizations/node_modules/@aws-sdk/client-organizations/dist-types/models/OrganizationsServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Organizations service.
        */
    export class OrganizationsServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

