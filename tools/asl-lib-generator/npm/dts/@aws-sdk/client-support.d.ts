// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-support' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AddAttachmentsToSetCommandInput, AddAttachmentsToSetCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddAttachmentsToSetCommand";
    import { AddCommunicationToCaseCommandInput, AddCommunicationToCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddCommunicationToCaseCommand";
    import { CreateCaseCommandInput, CreateCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/CreateCaseCommand";
    import { DescribeAttachmentCommandInput, DescribeAttachmentCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeAttachmentCommand";
    import { DescribeCasesCommandInput, DescribeCasesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCasesCommand";
    import { DescribeCommunicationsCommandInput, DescribeCommunicationsCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCommunicationsCommand";
    import { DescribeServicesCommandInput, DescribeServicesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeServicesCommand";
    import { DescribeSeverityLevelsCommandInput, DescribeSeverityLevelsCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeSeverityLevelsCommand";
    import { DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckRefreshStatusesCommand";
    import { DescribeTrustedAdvisorCheckResultCommandInput, DescribeTrustedAdvisorCheckResultCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckResultCommand";
    import { DescribeTrustedAdvisorChecksCommandInput, DescribeTrustedAdvisorChecksCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorChecksCommand";
    import { DescribeTrustedAdvisorCheckSummariesCommandInput, DescribeTrustedAdvisorCheckSummariesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckSummariesCommand";
    import { RefreshTrustedAdvisorCheckCommandInput, RefreshTrustedAdvisorCheckCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/RefreshTrustedAdvisorCheckCommand";
    import { ResolveCaseCommandInput, ResolveCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/ResolveCaseCommand";
    import { SupportClient } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    /**
        * <fullname>Amazon Web Services Support</fullname>
        *         <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed
        *             information about the Amazon Web Services Support operations and data types. You can use the API to manage
        *             your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return
        *             results in JSON format.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        *         <p>The Amazon Web Services Support service also exposes a set of <a href="http://aws.amazon.com/premiumsupport/trustedadvisor/">Trusted Advisor</a> features. You can
        *             retrieve a list of checks and their descriptions, get check results, specify checks to
        *             refresh, and get the refresh status of checks.</p>
        *         <p>The following list describes the Amazon Web Services Support case management operations:</p>
        *         <ul>
        *             <li>
        *                 <p> Service names, issue categories, and available severity levels  - The
        *                         <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Services service names,
        *                     service codes, service categories, and problem severity levels. You use these
        *                     values when you call the <a>CreateCase</a> operation.</p>
        *             </li>
        *             <li>
        *                 <p> Case creation, case details, and case resolution - The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations
        *                     create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p>
        *             </li>
        *             <li>
        *                 <p> Case communication - The <a>DescribeCommunications</a>,
        *                         <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications
        *                     and attachments to Amazon Web Services Support cases.</p>
        *             </li>
        *          </ul>
        *         <p>The following list describes the operations available from the Amazon Web Services Support service for
        *             Trusted Advisor:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorChecks</a> returns the list of checks that
        *                     run against your Amazon Web Services resources.</p>
        *             </li>
        *             <li>
        *                 <p>Using the <code>checkId</code> for a specific check returned by <a>DescribeTrustedAdvisorChecks</a>, you can call <a>DescribeTrustedAdvisorCheckResult</a> to obtain the results for the
        *                     check that you specified.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorCheckSummaries</a> returns summarized
        *                     results for one or more Trusted Advisor checks.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>RefreshTrustedAdvisorCheck</a> requests that Trusted Advisor rerun a
        *                     specified check.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> reports the refresh
        *                     status of one or more checks.</p>
        *             </li>
        *          </ul>
        *         <p>For authentication of requests, Amazon Web Services Support uses <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing
        *                 Process</a>.</p>
        *         <p>See <a href="https://docs.aws.amazon.com/awssupport/latest/user/Welcome.html">About the
        *             Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i> for
        *             information about how to use this service to create and manage your support cases, and
        *             how to call Trusted Advisor for results of checks on your resources.</p>
        */
    export class Support extends SupportClient {
            /**
                * <p>Adds one or more attachments to an attachment set. </p>
                *         <p>An attachment set is a temporary container for attachments that you add to a case or
                *             case communication. The set is available for 1 hour after it's created. The
                *                 <code>expiryTime</code> returned in the response is when the set expires. </p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            addAttachmentsToSet(args: AddAttachmentsToSetCommandInput, options?: __HttpHandlerOptions): Promise<AddAttachmentsToSetCommandOutput>;
            addAttachmentsToSet(args: AddAttachmentsToSetCommandInput, cb: (err: any, data?: AddAttachmentsToSetCommandOutput) => void): void;
            addAttachmentsToSet(args: AddAttachmentsToSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddAttachmentsToSetCommandOutput) => void): void;
            /**
                * <p>Adds additional customer communication to an Amazon Web Services Support case. Use the <code>caseId</code>
                *             parameter to identify the case to which to add communication. You can list a set of
                *             email addresses to copy on the communication by using the <code>ccEmailAddresses</code>
                *             parameter. The <code>communicationBody</code> value contains the text of the
                *             communication.</p>
                *
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            addCommunicationToCase(args: AddCommunicationToCaseCommandInput, options?: __HttpHandlerOptions): Promise<AddCommunicationToCaseCommandOutput>;
            addCommunicationToCase(args: AddCommunicationToCaseCommandInput, cb: (err: any, data?: AddCommunicationToCaseCommandOutput) => void): void;
            addCommunicationToCase(args: AddCommunicationToCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddCommunicationToCaseCommandOutput) => void): void;
            /**
                * <p>Creates a case in the Amazon Web Services Support Center. This operation is similar to how you create a case
                *             in the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
                *                 Case</a> page.</p>
                *         <p>The Amazon Web Services Support API doesn't support requesting service limit increases. You can submit a
                *             service limit increase in the following ways: </p>
                *         <ul>
                *             <li>
                *                 <p>Submit a request from the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p>
                *             </li>
                *             <li>
                *                 <p>Use the Service Quotas <a href="https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html">RequestServiceQuotaIncrease</a> operation.</p>
                *             </li>
                *          </ul>
                *         <p>A successful <code>CreateCase</code> request returns an Amazon Web Services Support case number. You can use
                *             the <a>DescribeCases</a> operation and specify the case number to get
                *             existing Amazon Web Services Support cases. After you create a case, use the <a>AddCommunicationToCase</a> operation to add additional communication or
                *             attachments to an existing case.</p>
                *         <p>The <code>caseId</code> is separate from the <code>displayId</code> that appears in
                *             the <a href="https://console.aws.amazon.com/support">Amazon Web Services Support Center</a>. Use the <a>DescribeCases</a> operation to get the <code>displayId</code>.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            createCase(args: CreateCaseCommandInput, options?: __HttpHandlerOptions): Promise<CreateCaseCommandOutput>;
            createCase(args: CreateCaseCommandInput, cb: (err: any, data?: CreateCaseCommandOutput) => void): void;
            createCase(args: CreateCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCaseCommandOutput) => void): void;
            /**
                * <p>Returns the attachment that has the specified ID. Attachments can include screenshots,
                *             error logs, or other files that describe your issue. Attachment IDs are generated by the
                *             case management system when you add an attachment to a case or case communication.
                *             Attachment IDs are returned in the <a>AttachmentDetails</a> objects that are
                *             returned by the <a>DescribeCommunications</a> operation.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeAttachment(args: DescribeAttachmentCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAttachmentCommandOutput>;
            describeAttachment(args: DescribeAttachmentCommandInput, cb: (err: any, data?: DescribeAttachmentCommandOutput) => void): void;
            describeAttachment(args: DescribeAttachmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAttachmentCommandOutput) => void): void;
            /**
                * <p>Returns a list of cases that you specify by passing one or more case IDs. You can use
                *             the <code>afterTime</code> and <code>beforeTime</code> parameters to filter the cases by
                *             date. You can set values for the <code>includeResolvedCases</code> and
                *                 <code>includeCommunications</code> parameters to specify how much information to
                *             return.</p>
                *         <p>The response returns the following in JSON format:</p>
                *         <ul>
                *             <li>
                *                 <p>One or more <a href="https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html">CaseDetails</a> data types.</p>
                *             </li>
                *             <li>
                *                 <p>One or more <code>nextToken</code> values, which specify where to paginate the
                *                     returned records represented by the <code>CaseDetails</code> objects.</p>
                *             </li>
                *          </ul>
                *         <p>Case data is available for 12 months after creation. If a case was created more than
                *             12 months ago, a request might return an error.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeCases(args: DescribeCasesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCasesCommandOutput>;
            describeCases(args: DescribeCasesCommandInput, cb: (err: any, data?: DescribeCasesCommandOutput) => void): void;
            describeCases(args: DescribeCasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCasesCommandOutput) => void): void;
            /**
                * <p>Returns communications and attachments for one or more support cases. Use the
                *                 <code>afterTime</code> and <code>beforeTime</code> parameters to filter by date. You
                *             can use the <code>caseId</code> parameter to restrict the results to a specific
                *             case.</p>
                *         <p>Case data is available for 12 months after creation. If a case was created more than
                *             12 months ago, a request for data might cause an error.</p>
                *         <p>You can use the <code>maxResults</code> and <code>nextToken</code> parameters to
                *             control the pagination of the results. Set <code>maxResults</code> to the number of
                *             cases that you want to display on each page, and use <code>nextToken</code> to specify
                *             the resumption of pagination.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeCommunications(args: DescribeCommunicationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCommunicationsCommandOutput>;
            describeCommunications(args: DescribeCommunicationsCommandInput, cb: (err: any, data?: DescribeCommunicationsCommandOutput) => void): void;
            describeCommunications(args: DescribeCommunicationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCommunicationsCommandOutput) => void): void;
            /**
                * <p>Returns the current list of Amazon Web Services services and a list of service categories for each
                *             service. You then use service names and categories in your <a>CreateCase</a>
                *             requests. Each Amazon Web Services service has its own set of categories.</p>
                *         <p>The service codes and category codes correspond to the values that appear in the
                *                 <b>Service</b> and <b>Category</b> lists on the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. The values in those fields
                *             don't necessarily match the service codes and categories returned by the
                *                 <code>DescribeServices</code> operation. Always use the service codes and categories
                *             that the <code>DescribeServices</code> operation returns, so that you have the most
                *             recent set of service and category codes.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeServices(args: DescribeServicesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeServicesCommandOutput>;
            describeServices(args: DescribeServicesCommandInput, cb: (err: any, data?: DescribeServicesCommandOutput) => void): void;
            describeServices(args: DescribeServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeServicesCommandOutput) => void): void;
            /**
                * <p>Returns the list of severity levels that you can assign to a support case. The severity
                *             level for a case is also a field in the <a>CaseDetails</a> data type that you
                *             include for a <a>CreateCase</a> request.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeSeverityLevels(args: DescribeSeverityLevelsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSeverityLevelsCommandOutput>;
            describeSeverityLevels(args: DescribeSeverityLevelsCommandInput, cb: (err: any, data?: DescribeSeverityLevelsCommandOutput) => void): void;
            describeSeverityLevels(args: DescribeSeverityLevelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSeverityLevelsCommandOutput) => void): void;
            /**
                * <p>Returns the refresh status of the Trusted Advisor checks that have the specified check
                *             IDs. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
                *         <p>Some checks are refreshed automatically, and you can't return their refresh statuses
                *             by using the <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation. If you
                *             call this operation for these checks, you might see an
                *                 <code>InvalidParameterValue</code> error.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeTrustedAdvisorCheckRefreshStatuses(args: DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput>;
            describeTrustedAdvisorCheckRefreshStatuses(args: DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, cb: (err: any, data?: DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput) => void): void;
            describeTrustedAdvisorCheckRefreshStatuses(args: DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput) => void): void;
            /**
                * <p>Returns the results of the Trusted Advisor check that has the specified check ID. You
                *             can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
                *             operation.</p>
                *         <p>The response contains a <a>TrustedAdvisorCheckResult</a> object, which
                *             contains these three objects:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                     <a>TrustedAdvisorCategorySpecificSummary</a>
                *                 </p>
                *             </li>
                *             <li>
                *                 <p>
                *                     <a>TrustedAdvisorResourceDetail</a>
                *                 </p>
                *             </li>
                *             <li>
                *                 <p>
                *                     <a>TrustedAdvisorResourcesSummary</a>
                *                 </p>
                *             </li>
                *          </ul>
                *         <p>In addition, the response contains these fields:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                     <b>status</b> - The alert status of the check
                *                     can be <code>ok</code> (green), <code>warning</code> (yellow),
                *                         <code>error</code> (red), or <code>not_available</code>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                     <b>timestamp</b> - The time of the last refresh
                *                     of the check.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                     <b>checkId</b> - The unique identifier for the
                *                     check.</p>
                *             </li>
                *          </ul>
                *
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeTrustedAdvisorCheckResult(args: DescribeTrustedAdvisorCheckResultCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrustedAdvisorCheckResultCommandOutput>;
            describeTrustedAdvisorCheckResult(args: DescribeTrustedAdvisorCheckResultCommandInput, cb: (err: any, data?: DescribeTrustedAdvisorCheckResultCommandOutput) => void): void;
            describeTrustedAdvisorCheckResult(args: DescribeTrustedAdvisorCheckResultCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrustedAdvisorCheckResultCommandOutput) => void): void;
            /**
                * <p>Returns information about all available Trusted Advisor checks, including the name, ID,
                *             category, description, and metadata. You must specify a language code. The Amazon Web Services Support API
                *             currently supports English ("en") and Japanese ("ja"). The response contains a <a>TrustedAdvisorCheckDescription</a> object for each check. You must set the
                *             Amazon Web Services Region to us-east-1.</p>
                *
                *
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                         <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *                <li>
                *                     <p>The names and descriptions for Trusted Advisor checks are subject to change. We recommend
                *                         that you specify the check ID in your code to uniquely identify a check.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeTrustedAdvisorChecks(args: DescribeTrustedAdvisorChecksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrustedAdvisorChecksCommandOutput>;
            describeTrustedAdvisorChecks(args: DescribeTrustedAdvisorChecksCommandInput, cb: (err: any, data?: DescribeTrustedAdvisorChecksCommandOutput) => void): void;
            describeTrustedAdvisorChecks(args: DescribeTrustedAdvisorChecksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrustedAdvisorChecksCommandOutput) => void): void;
            /**
                * <p>Returns the results for the Trusted Advisor check summaries for the check IDs that you
                *             specified. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
                *         <p>The response contains an array of <a>TrustedAdvisorCheckSummary</a>
                *             objects.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            describeTrustedAdvisorCheckSummaries(args: DescribeTrustedAdvisorCheckSummariesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTrustedAdvisorCheckSummariesCommandOutput>;
            describeTrustedAdvisorCheckSummaries(args: DescribeTrustedAdvisorCheckSummariesCommandInput, cb: (err: any, data?: DescribeTrustedAdvisorCheckSummariesCommandOutput) => void): void;
            describeTrustedAdvisorCheckSummaries(args: DescribeTrustedAdvisorCheckSummariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTrustedAdvisorCheckSummariesCommandOutput) => void): void;
            /**
                * <p>Refreshes the Trusted Advisor check that you specify using the check ID. You can get the
                *             check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
                *             operation.</p>
                *         <note>
                *             <p>Some checks are refreshed automatically. If you call the
                *                     <code>RefreshTrustedAdvisorCheck</code> operation to refresh them, you might see
                *                 the <code>InvalidParameterValue</code> error.</p>
                *         </note>
                *         <p>The response contains a <a>TrustedAdvisorCheckRefreshStatus</a>
                *             object.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            refreshTrustedAdvisorCheck(args: RefreshTrustedAdvisorCheckCommandInput, options?: __HttpHandlerOptions): Promise<RefreshTrustedAdvisorCheckCommandOutput>;
            refreshTrustedAdvisorCheck(args: RefreshTrustedAdvisorCheckCommandInput, cb: (err: any, data?: RefreshTrustedAdvisorCheckCommandOutput) => void): void;
            refreshTrustedAdvisorCheck(args: RefreshTrustedAdvisorCheckCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RefreshTrustedAdvisorCheckCommandOutput) => void): void;
            /**
                * <p>Resolves a support case. This operation takes a <code>caseId</code> and returns the
                *             initial and final state of the case.</p>
                *         <note>
                *             <ul>
                *                <li>
                *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
                *                         API. </p>
                *                 </li>
                *                <li>
                *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
                *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
                *                             <code>SubscriptionRequiredException</code> error message appears. For
                *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
                *                 </li>
                *             </ul>
                *         </note>
                */
            resolveCase(args: ResolveCaseCommandInput, options?: __HttpHandlerOptions): Promise<ResolveCaseCommandOutput>;
            resolveCase(args: ResolveCaseCommandInput, cb: (err: any, data?: ResolveCaseCommandOutput) => void): void;
            resolveCase(args: ResolveCaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResolveCaseCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddAttachmentsToSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AddAttachmentsToSetRequest, AddAttachmentsToSetResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface AddAttachmentsToSetCommandInput extends AddAttachmentsToSetRequest {
    }
    export interface AddAttachmentsToSetCommandOutput extends AddAttachmentsToSetResponse, __MetadataBearer {
    }
    /**
        * <p>Adds one or more attachments to an attachment set. </p>
        *         <p>An attachment set is a temporary container for attachments that you add to a case or
        *             case communication. The set is available for 1 hour after it's created. The
        *                 <code>expiryTime</code> returned in the response is when the set expires. </p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, AddAttachmentsToSetCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, AddAttachmentsToSetCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new AddAttachmentsToSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddAttachmentsToSetCommandInput} for command's `input` shape.
        * @see {@link AddAttachmentsToSetCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class AddAttachmentsToSetCommand extends $Command<AddAttachmentsToSetCommandInput, AddAttachmentsToSetCommandOutput, SupportClientResolvedConfig> {
            readonly input: AddAttachmentsToSetCommandInput;
            constructor(input: AddAttachmentsToSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddAttachmentsToSetCommandInput, AddAttachmentsToSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddCommunicationToCaseCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AddCommunicationToCaseRequest, AddCommunicationToCaseResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface AddCommunicationToCaseCommandInput extends AddCommunicationToCaseRequest {
    }
    export interface AddCommunicationToCaseCommandOutput extends AddCommunicationToCaseResponse, __MetadataBearer {
    }
    /**
        * <p>Adds additional customer communication to an Amazon Web Services Support case. Use the <code>caseId</code>
        *             parameter to identify the case to which to add communication. You can list a set of
        *             email addresses to copy on the communication by using the <code>ccEmailAddresses</code>
        *             parameter. The <code>communicationBody</code> value contains the text of the
        *             communication.</p>
        *
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, AddCommunicationToCaseCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, AddCommunicationToCaseCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new AddCommunicationToCaseCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddCommunicationToCaseCommandInput} for command's `input` shape.
        * @see {@link AddCommunicationToCaseCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class AddCommunicationToCaseCommand extends $Command<AddCommunicationToCaseCommandInput, AddCommunicationToCaseCommandOutput, SupportClientResolvedConfig> {
            readonly input: AddCommunicationToCaseCommandInput;
            constructor(input: AddCommunicationToCaseCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddCommunicationToCaseCommandInput, AddCommunicationToCaseCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/CreateCaseCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateCaseRequest, CreateCaseResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface CreateCaseCommandInput extends CreateCaseRequest {
    }
    export interface CreateCaseCommandOutput extends CreateCaseResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a case in the Amazon Web Services Support Center. This operation is similar to how you create a case
        *             in the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
        *                 Case</a> page.</p>
        *         <p>The Amazon Web Services Support API doesn't support requesting service limit increases. You can submit a
        *             service limit increase in the following ways: </p>
        *         <ul>
        *             <li>
        *                 <p>Submit a request from the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p>
        *             </li>
        *             <li>
        *                 <p>Use the Service Quotas <a href="https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html">RequestServiceQuotaIncrease</a> operation.</p>
        *             </li>
        *          </ul>
        *         <p>A successful <code>CreateCase</code> request returns an Amazon Web Services Support case number. You can use
        *             the <a>DescribeCases</a> operation and specify the case number to get
        *             existing Amazon Web Services Support cases. After you create a case, use the <a>AddCommunicationToCase</a> operation to add additional communication or
        *             attachments to an existing case.</p>
        *         <p>The <code>caseId</code> is separate from the <code>displayId</code> that appears in
        *             the <a href="https://console.aws.amazon.com/support">Amazon Web Services Support Center</a>. Use the <a>DescribeCases</a> operation to get the <code>displayId</code>.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, CreateCaseCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, CreateCaseCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new CreateCaseCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateCaseCommandInput} for command's `input` shape.
        * @see {@link CreateCaseCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class CreateCaseCommand extends $Command<CreateCaseCommandInput, CreateCaseCommandOutput, SupportClientResolvedConfig> {
            readonly input: CreateCaseCommandInput;
            constructor(input: CreateCaseCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateCaseCommandInput, CreateCaseCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeAttachmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAttachmentRequest, DescribeAttachmentResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeAttachmentCommandInput extends DescribeAttachmentRequest {
    }
    export interface DescribeAttachmentCommandOutput extends DescribeAttachmentResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the attachment that has the specified ID. Attachments can include screenshots,
        *             error logs, or other files that describe your issue. Attachment IDs are generated by the
        *             case management system when you add an attachment to a case or case communication.
        *             Attachment IDs are returned in the <a>AttachmentDetails</a> objects that are
        *             returned by the <a>DescribeCommunications</a> operation.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeAttachmentCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeAttachmentCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeAttachmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAttachmentCommandInput} for command's `input` shape.
        * @see {@link DescribeAttachmentCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeAttachmentCommand extends $Command<DescribeAttachmentCommandInput, DescribeAttachmentCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeAttachmentCommandInput;
            constructor(input: DescribeAttachmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAttachmentCommandInput, DescribeAttachmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCasesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeCasesRequest, DescribeCasesResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeCasesCommandInput extends DescribeCasesRequest {
    }
    export interface DescribeCasesCommandOutput extends DescribeCasesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of cases that you specify by passing one or more case IDs. You can use
        *             the <code>afterTime</code> and <code>beforeTime</code> parameters to filter the cases by
        *             date. You can set values for the <code>includeResolvedCases</code> and
        *                 <code>includeCommunications</code> parameters to specify how much information to
        *             return.</p>
        *         <p>The response returns the following in JSON format:</p>
        *         <ul>
        *             <li>
        *                 <p>One or more <a href="https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html">CaseDetails</a> data types.</p>
        *             </li>
        *             <li>
        *                 <p>One or more <code>nextToken</code> values, which specify where to paginate the
        *                     returned records represented by the <code>CaseDetails</code> objects.</p>
        *             </li>
        *          </ul>
        *         <p>Case data is available for 12 months after creation. If a case was created more than
        *             12 months ago, a request might return an error.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeCasesCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeCasesCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeCasesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCasesCommandInput} for command's `input` shape.
        * @see {@link DescribeCasesCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeCasesCommand extends $Command<DescribeCasesCommandInput, DescribeCasesCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeCasesCommandInput;
            constructor(input: DescribeCasesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCasesCommandInput, DescribeCasesCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCommunicationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeCommunicationsRequest, DescribeCommunicationsResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeCommunicationsCommandInput extends DescribeCommunicationsRequest {
    }
    export interface DescribeCommunicationsCommandOutput extends DescribeCommunicationsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns communications and attachments for one or more support cases. Use the
        *                 <code>afterTime</code> and <code>beforeTime</code> parameters to filter by date. You
        *             can use the <code>caseId</code> parameter to restrict the results to a specific
        *             case.</p>
        *         <p>Case data is available for 12 months after creation. If a case was created more than
        *             12 months ago, a request for data might cause an error.</p>
        *         <p>You can use the <code>maxResults</code> and <code>nextToken</code> parameters to
        *             control the pagination of the results. Set <code>maxResults</code> to the number of
        *             cases that you want to display on each page, and use <code>nextToken</code> to specify
        *             the resumption of pagination.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeCommunicationsCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeCommunicationsCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeCommunicationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCommunicationsCommandInput} for command's `input` shape.
        * @see {@link DescribeCommunicationsCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeCommunicationsCommand extends $Command<DescribeCommunicationsCommandInput, DescribeCommunicationsCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeCommunicationsCommandInput;
            constructor(input: DescribeCommunicationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCommunicationsCommandInput, DescribeCommunicationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeServicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeServicesRequest, DescribeServicesResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeServicesCommandInput extends DescribeServicesRequest {
    }
    export interface DescribeServicesCommandOutput extends DescribeServicesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the current list of Amazon Web Services services and a list of service categories for each
        *             service. You then use service names and categories in your <a>CreateCase</a>
        *             requests. Each Amazon Web Services service has its own set of categories.</p>
        *         <p>The service codes and category codes correspond to the values that appear in the
        *                 <b>Service</b> and <b>Category</b> lists on the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. The values in those fields
        *             don't necessarily match the service codes and categories returned by the
        *                 <code>DescribeServices</code> operation. Always use the service codes and categories
        *             that the <code>DescribeServices</code> operation returns, so that you have the most
        *             recent set of service and category codes.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeServicesCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeServicesCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeServicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeServicesCommandInput} for command's `input` shape.
        * @see {@link DescribeServicesCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeServicesCommand extends $Command<DescribeServicesCommandInput, DescribeServicesCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeServicesCommandInput;
            constructor(input: DescribeServicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeServicesCommandInput, DescribeServicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeSeverityLevelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeSeverityLevelsRequest, DescribeSeverityLevelsResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeSeverityLevelsCommandInput extends DescribeSeverityLevelsRequest {
    }
    export interface DescribeSeverityLevelsCommandOutput extends DescribeSeverityLevelsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the list of severity levels that you can assign to a support case. The severity
        *             level for a case is also a field in the <a>CaseDetails</a> data type that you
        *             include for a <a>CreateCase</a> request.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeSeverityLevelsCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeSeverityLevelsCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeSeverityLevelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeSeverityLevelsCommandInput} for command's `input` shape.
        * @see {@link DescribeSeverityLevelsCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeSeverityLevelsCommand extends $Command<DescribeSeverityLevelsCommandInput, DescribeSeverityLevelsCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeSeverityLevelsCommandInput;
            constructor(input: DescribeSeverityLevelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeSeverityLevelsCommandInput, DescribeSeverityLevelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckRefreshStatusesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeTrustedAdvisorCheckRefreshStatusesRequest, DescribeTrustedAdvisorCheckRefreshStatusesResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeTrustedAdvisorCheckRefreshStatusesCommandInput extends DescribeTrustedAdvisorCheckRefreshStatusesRequest {
    }
    export interface DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput extends DescribeTrustedAdvisorCheckRefreshStatusesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the refresh status of the Trusted Advisor checks that have the specified check
        *             IDs. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
        *         <p>Some checks are refreshed automatically, and you can't return their refresh statuses
        *             by using the <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation. If you
        *             call this operation for these checks, you might see an
        *                 <code>InvalidParameterValue</code> error.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeTrustedAdvisorCheckRefreshStatusesCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeTrustedAdvisorCheckRefreshStatusesCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeTrustedAdvisorCheckRefreshStatusesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTrustedAdvisorCheckRefreshStatusesCommandInput} for command's `input` shape.
        * @see {@link DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeTrustedAdvisorCheckRefreshStatusesCommand extends $Command<DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeTrustedAdvisorCheckRefreshStatusesCommandInput;
            constructor(input: DescribeTrustedAdvisorCheckRefreshStatusesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckResultCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeTrustedAdvisorCheckResultRequest, DescribeTrustedAdvisorCheckResultResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeTrustedAdvisorCheckResultCommandInput extends DescribeTrustedAdvisorCheckResultRequest {
    }
    export interface DescribeTrustedAdvisorCheckResultCommandOutput extends DescribeTrustedAdvisorCheckResultResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the results of the Trusted Advisor check that has the specified check ID. You
        *             can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
        *             operation.</p>
        *         <p>The response contains a <a>TrustedAdvisorCheckResult</a> object, which
        *             contains these three objects:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <a>TrustedAdvisorCategorySpecificSummary</a>
        *                 </p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>TrustedAdvisorResourceDetail</a>
        *                 </p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>TrustedAdvisorResourcesSummary</a>
        *                 </p>
        *             </li>
        *          </ul>
        *         <p>In addition, the response contains these fields:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <b>status</b> - The alert status of the check
        *                     can be <code>ok</code> (green), <code>warning</code> (yellow),
        *                         <code>error</code> (red), or <code>not_available</code>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>timestamp</b> - The time of the last refresh
        *                     of the check.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>checkId</b> - The unique identifier for the
        *                     check.</p>
        *             </li>
        *          </ul>
        *
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeTrustedAdvisorCheckResultCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeTrustedAdvisorCheckResultCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeTrustedAdvisorCheckResultCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTrustedAdvisorCheckResultCommandInput} for command's `input` shape.
        * @see {@link DescribeTrustedAdvisorCheckResultCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeTrustedAdvisorCheckResultCommand extends $Command<DescribeTrustedAdvisorCheckResultCommandInput, DescribeTrustedAdvisorCheckResultCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeTrustedAdvisorCheckResultCommandInput;
            constructor(input: DescribeTrustedAdvisorCheckResultCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTrustedAdvisorCheckResultCommandInput, DescribeTrustedAdvisorCheckResultCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorChecksCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeTrustedAdvisorChecksRequest, DescribeTrustedAdvisorChecksResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeTrustedAdvisorChecksCommandInput extends DescribeTrustedAdvisorChecksRequest {
    }
    export interface DescribeTrustedAdvisorChecksCommandOutput extends DescribeTrustedAdvisorChecksResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about all available Trusted Advisor checks, including the name, ID,
        *             category, description, and metadata. You must specify a language code. The Amazon Web Services Support API
        *             currently supports English ("en") and Japanese ("ja"). The response contains a <a>TrustedAdvisorCheckDescription</a> object for each check. You must set the
        *             Amazon Web Services Region to us-east-1.</p>
        *
        *
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                         <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *                <li>
        *                     <p>The names and descriptions for Trusted Advisor checks are subject to change. We recommend
        *                         that you specify the check ID in your code to uniquely identify a check.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeTrustedAdvisorChecksCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeTrustedAdvisorChecksCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeTrustedAdvisorChecksCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTrustedAdvisorChecksCommandInput} for command's `input` shape.
        * @see {@link DescribeTrustedAdvisorChecksCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeTrustedAdvisorChecksCommand extends $Command<DescribeTrustedAdvisorChecksCommandInput, DescribeTrustedAdvisorChecksCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeTrustedAdvisorChecksCommandInput;
            constructor(input: DescribeTrustedAdvisorChecksCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTrustedAdvisorChecksCommandInput, DescribeTrustedAdvisorChecksCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckSummariesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeTrustedAdvisorCheckSummariesRequest, DescribeTrustedAdvisorCheckSummariesResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface DescribeTrustedAdvisorCheckSummariesCommandInput extends DescribeTrustedAdvisorCheckSummariesRequest {
    }
    export interface DescribeTrustedAdvisorCheckSummariesCommandOutput extends DescribeTrustedAdvisorCheckSummariesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the results for the Trusted Advisor check summaries for the check IDs that you
        *             specified. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
        *         <p>The response contains an array of <a>TrustedAdvisorCheckSummary</a>
        *             objects.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, DescribeTrustedAdvisorCheckSummariesCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, DescribeTrustedAdvisorCheckSummariesCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new DescribeTrustedAdvisorCheckSummariesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTrustedAdvisorCheckSummariesCommandInput} for command's `input` shape.
        * @see {@link DescribeTrustedAdvisorCheckSummariesCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class DescribeTrustedAdvisorCheckSummariesCommand extends $Command<DescribeTrustedAdvisorCheckSummariesCommandInput, DescribeTrustedAdvisorCheckSummariesCommandOutput, SupportClientResolvedConfig> {
            readonly input: DescribeTrustedAdvisorCheckSummariesCommandInput;
            constructor(input: DescribeTrustedAdvisorCheckSummariesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTrustedAdvisorCheckSummariesCommandInput, DescribeTrustedAdvisorCheckSummariesCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/RefreshTrustedAdvisorCheckCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RefreshTrustedAdvisorCheckRequest, RefreshTrustedAdvisorCheckResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface RefreshTrustedAdvisorCheckCommandInput extends RefreshTrustedAdvisorCheckRequest {
    }
    export interface RefreshTrustedAdvisorCheckCommandOutput extends RefreshTrustedAdvisorCheckResponse, __MetadataBearer {
    }
    /**
        * <p>Refreshes the Trusted Advisor check that you specify using the check ID. You can get the
        *             check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
        *             operation.</p>
        *         <note>
        *             <p>Some checks are refreshed automatically. If you call the
        *                     <code>RefreshTrustedAdvisorCheck</code> operation to refresh them, you might see
        *                 the <code>InvalidParameterValue</code> error.</p>
        *         </note>
        *         <p>The response contains a <a>TrustedAdvisorCheckRefreshStatus</a>
        *             object.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, RefreshTrustedAdvisorCheckCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, RefreshTrustedAdvisorCheckCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new RefreshTrustedAdvisorCheckCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RefreshTrustedAdvisorCheckCommandInput} for command's `input` shape.
        * @see {@link RefreshTrustedAdvisorCheckCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class RefreshTrustedAdvisorCheckCommand extends $Command<RefreshTrustedAdvisorCheckCommandInput, RefreshTrustedAdvisorCheckCommandOutput, SupportClientResolvedConfig> {
            readonly input: RefreshTrustedAdvisorCheckCommandInput;
            constructor(input: RefreshTrustedAdvisorCheckCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RefreshTrustedAdvisorCheckCommandInput, RefreshTrustedAdvisorCheckCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/ResolveCaseCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ResolveCaseRequest, ResolveCaseResponse } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient";
    export interface ResolveCaseCommandInput extends ResolveCaseRequest {
    }
    export interface ResolveCaseCommandOutput extends ResolveCaseResponse, __MetadataBearer {
    }
    /**
        * <p>Resolves a support case. This operation takes a <code>caseId</code> and returns the
        *             initial and final state of the case.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SupportClient, ResolveCaseCommand } from "@aws-sdk/client-support"; // ES Modules import
        * // const { SupportClient, ResolveCaseCommand } = require("@aws-sdk/client-support"); // CommonJS import
        * const client = new SupportClient(config);
        * const command = new ResolveCaseCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResolveCaseCommandInput} for command's `input` shape.
        * @see {@link ResolveCaseCommandOutput} for command's `response` shape.
        * @see {@link SupportClientResolvedConfig | config} for SupportClient's `config` shape.
        *
        */
    export class ResolveCaseCommand extends $Command<ResolveCaseCommandInput, ResolveCaseCommandOutput, SupportClientResolvedConfig> {
            readonly input: ResolveCaseCommandInput;
            constructor(input: ResolveCaseCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SupportClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResolveCaseCommandInput, ResolveCaseCommandOutput>;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/SupportClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AddAttachmentsToSetCommandInput, AddAttachmentsToSetCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddAttachmentsToSetCommand";
    import { AddCommunicationToCaseCommandInput, AddCommunicationToCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/AddCommunicationToCaseCommand";
    import { CreateCaseCommandInput, CreateCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/CreateCaseCommand";
    import { DescribeAttachmentCommandInput, DescribeAttachmentCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeAttachmentCommand";
    import { DescribeCasesCommandInput, DescribeCasesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCasesCommand";
    import { DescribeCommunicationsCommandInput, DescribeCommunicationsCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeCommunicationsCommand";
    import { DescribeServicesCommandInput, DescribeServicesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeServicesCommand";
    import { DescribeSeverityLevelsCommandInput, DescribeSeverityLevelsCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeSeverityLevelsCommand";
    import { DescribeTrustedAdvisorCheckRefreshStatusesCommandInput, DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckRefreshStatusesCommand";
    import { DescribeTrustedAdvisorCheckResultCommandInput, DescribeTrustedAdvisorCheckResultCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckResultCommand";
    import { DescribeTrustedAdvisorChecksCommandInput, DescribeTrustedAdvisorChecksCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorChecksCommand";
    import { DescribeTrustedAdvisorCheckSummariesCommandInput, DescribeTrustedAdvisorCheckSummariesCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/DescribeTrustedAdvisorCheckSummariesCommand";
    import { RefreshTrustedAdvisorCheckCommandInput, RefreshTrustedAdvisorCheckCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/RefreshTrustedAdvisorCheckCommand";
    import { ResolveCaseCommandInput, ResolveCaseCommandOutput } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/commands/ResolveCaseCommand";
    export type ServiceInputTypes = AddAttachmentsToSetCommandInput | AddCommunicationToCaseCommandInput | CreateCaseCommandInput | DescribeAttachmentCommandInput | DescribeCasesCommandInput | DescribeCommunicationsCommandInput | DescribeServicesCommandInput | DescribeSeverityLevelsCommandInput | DescribeTrustedAdvisorCheckRefreshStatusesCommandInput | DescribeTrustedAdvisorCheckResultCommandInput | DescribeTrustedAdvisorCheckSummariesCommandInput | DescribeTrustedAdvisorChecksCommandInput | RefreshTrustedAdvisorCheckCommandInput | ResolveCaseCommandInput;
    export type ServiceOutputTypes = AddAttachmentsToSetCommandOutput | AddCommunicationToCaseCommandOutput | CreateCaseCommandOutput | DescribeAttachmentCommandOutput | DescribeCasesCommandOutput | DescribeCommunicationsCommandOutput | DescribeServicesCommandOutput | DescribeSeverityLevelsCommandOutput | DescribeTrustedAdvisorCheckRefreshStatusesCommandOutput | DescribeTrustedAdvisorCheckResultCommandOutput | DescribeTrustedAdvisorCheckSummariesCommandOutput | DescribeTrustedAdvisorChecksCommandOutput | RefreshTrustedAdvisorCheckCommandOutput | ResolveCaseCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type SupportClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of SupportClient class constructor that set the region, credentials and other options.
        */
    export interface SupportClientConfig extends SupportClientConfigType {
    }
    type SupportClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of SupportClient class. This is resolved and normalized from the {@link SupportClientConfig | constructor configuration interface}.
        */
    export interface SupportClientResolvedConfig extends SupportClientResolvedConfigType {
    }
    /**
        * <fullname>Amazon Web Services Support</fullname>
        *         <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed
        *             information about the Amazon Web Services Support operations and data types. You can use the API to manage
        *             your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return
        *             results in JSON format.</p>
        *         <note>
        *             <ul>
        *                <li>
        *                     <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support
        *                         API. </p>
        *                 </li>
        *                <li>
        *                     <p>If you call the Amazon Web Services Support API from an account that does not have a
        *                         Business, Enterprise On-Ramp, or Enterprise Support plan, the
        *                             <code>SubscriptionRequiredException</code> error message appears. For
        *                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p>
        *                 </li>
        *             </ul>
        *         </note>
        *         <p>The Amazon Web Services Support service also exposes a set of <a href="http://aws.amazon.com/premiumsupport/trustedadvisor/">Trusted Advisor</a> features. You can
        *             retrieve a list of checks and their descriptions, get check results, specify checks to
        *             refresh, and get the refresh status of checks.</p>
        *         <p>The following list describes the Amazon Web Services Support case management operations:</p>
        *         <ul>
        *             <li>
        *                 <p> Service names, issue categories, and available severity levels  - The
        *                         <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Services service names,
        *                     service codes, service categories, and problem severity levels. You use these
        *                     values when you call the <a>CreateCase</a> operation.</p>
        *             </li>
        *             <li>
        *                 <p> Case creation, case details, and case resolution - The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations
        *                     create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p>
        *             </li>
        *             <li>
        *                 <p> Case communication - The <a>DescribeCommunications</a>,
        *                         <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications
        *                     and attachments to Amazon Web Services Support cases.</p>
        *             </li>
        *          </ul>
        *         <p>The following list describes the operations available from the Amazon Web Services Support service for
        *             Trusted Advisor:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorChecks</a> returns the list of checks that
        *                     run against your Amazon Web Services resources.</p>
        *             </li>
        *             <li>
        *                 <p>Using the <code>checkId</code> for a specific check returned by <a>DescribeTrustedAdvisorChecks</a>, you can call <a>DescribeTrustedAdvisorCheckResult</a> to obtain the results for the
        *                     check that you specified.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorCheckSummaries</a> returns summarized
        *                     results for one or more Trusted Advisor checks.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>RefreshTrustedAdvisorCheck</a> requests that Trusted Advisor rerun a
        *                     specified check.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> reports the refresh
        *                     status of one or more checks.</p>
        *             </li>
        *          </ul>
        *         <p>For authentication of requests, Amazon Web Services Support uses <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing
        *                 Process</a>.</p>
        *         <p>See <a href="https://docs.aws.amazon.com/awssupport/latest/user/Welcome.html">About the
        *             Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i> for
        *             information about how to use this service to create and manage your support cases, and
        *             how to call Trusted Advisor for results of checks on your resources.</p>
        */
    export class SupportClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, SupportClientResolvedConfig> {
            /**
                * The resolved configuration of SupportClient class. This is resolved and normalized from the {@link SupportClientConfig | constructor configuration interface}.
                */
            readonly config: SupportClientResolvedConfig;
            constructor(configuration: SupportClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { SupportServiceException as __BaseException } from "@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/SupportServiceException";
    /**
        * <p>An attachment to a case communication. The attachment consists of the file name and
        *             the content of the file.</p>
        */
    export interface Attachment {
            /**
                * <p>The name of the attachment file.</p>
                */
            fileName?: string;
            /**
                * <p>The content of the attachment file.</p>
                */
            data?: Uint8Array;
    }
    export namespace Attachment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attachment) => any;
    }
    export interface AddAttachmentsToSetRequest {
            /**
                * <p>The ID of the attachment set. If an <code>attachmentSetId</code> is not specified, a
                *             new attachment set is created, and the ID of the set is returned in the response. If an
                *                 <code>attachmentSetId</code> is specified, the attachments are added to the
                *             specified set, if it exists.</p>
                */
            attachmentSetId?: string;
            /**
                * <p>One or more attachments to add to the set. You can add up to three attachments per
                *             set. The size limit is 5 MB per attachment.</p>
                *         <p>In the <code>Attachment</code> object, use the <code>data</code> parameter to specify
                *             the contents of the attachment file. In the previous request syntax, the value for
                *                 <code>data</code> appear as <code>blob</code>, which is represented as a
                *             base64-encoded string. The value for <code>fileName</code> is the name of the
                *             attachment, such as <code>troubleshoot-screenshot.png</code>.</p>
                */
            attachments: Attachment[] | undefined;
    }
    export namespace AddAttachmentsToSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddAttachmentsToSetRequest) => any;
    }
    /**
        * <p>The ID and expiry time of the attachment set returned by the <a>AddAttachmentsToSet</a> operation.</p>
        */
    export interface AddAttachmentsToSetResponse {
            /**
                * <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a
                *             new attachment set is created, and the ID of the set is returned in the response. If an
                *                 <code>attachmentSetId</code> was specified, the attachments are added to the
                *             specified set, if it exists.</p>
                */
            attachmentSetId?: string;
            /**
                * <p>The time and date when the attachment set expires.</p>
                */
            expiryTime?: string;
    }
    export namespace AddAttachmentsToSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddAttachmentsToSetResponse) => any;
    }
    /**
        * <p>The limit for the number of attachment sets created in a short period of time has been
        *             exceeded.</p>
        */
    export class AttachmentLimitExceeded extends __BaseException {
            readonly name: "AttachmentLimitExceeded";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AttachmentLimitExceeded, __BaseException>);
    }
    /**
        * <p>The expiration time of the attachment set has passed. The set expires 1 hour after it
        *             is created.</p>
        */
    export class AttachmentSetExpired extends __BaseException {
            readonly name: "AttachmentSetExpired";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AttachmentSetExpired, __BaseException>);
    }
    /**
        * <p>An attachment set with the specified ID could not be found.</p>
        */
    export class AttachmentSetIdNotFound extends __BaseException {
            readonly name: "AttachmentSetIdNotFound";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AttachmentSetIdNotFound, __BaseException>);
    }
    /**
        * <p>A limit for the size of an attachment set has been exceeded. The limits are three
        *             attachments and 5 MB per attachment.</p>
        */
    export class AttachmentSetSizeLimitExceeded extends __BaseException {
            readonly name: "AttachmentSetSizeLimitExceeded";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AttachmentSetSizeLimitExceeded, __BaseException>);
    }
    /**
        * <p>An internal server error occurred.</p>
        */
    export class InternalServerError extends __BaseException {
            readonly name: "InternalServerError";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerError, __BaseException>);
    }
    export interface AddCommunicationToCaseRequest {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string formatted as shown in this example:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId?: string;
            /**
                * <p>The body of an email communication to add to the support case.</p>
                */
            communicationBody: string | undefined;
            /**
                * <p>The email addresses in the CC line of an email to be added to the support case.</p>
                */
            ccEmailAddresses?: string[];
            /**
                * <p>The ID of a set of one or more attachments for the communication to add to the case.
                *             Create the set by calling <a>AddAttachmentsToSet</a>
                *         </p>
                */
            attachmentSetId?: string;
    }
    export namespace AddCommunicationToCaseRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddCommunicationToCaseRequest) => any;
    }
    /**
        * <p>The result of the <a>AddCommunicationToCase</a> operation.</p>
        */
    export interface AddCommunicationToCaseResponse {
            /**
                * <p>True if <a>AddCommunicationToCase</a> succeeds. Otherwise, returns an
                *             error.</p>
                */
            result?: boolean;
    }
    export namespace AddCommunicationToCaseResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddCommunicationToCaseResponse) => any;
    }
    /**
        * <p>The requested <code>caseId</code> couldn't be located.</p>
        */
    export class CaseIdNotFound extends __BaseException {
            readonly name: "CaseIdNotFound";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CaseIdNotFound, __BaseException>);
    }
    /**
        * <p>The file name and ID of an attachment to a case communication. You can use the ID to
        *             retrieve the attachment with the <a>DescribeAttachment</a> operation.</p>
        */
    export interface AttachmentDetails {
            /**
                * <p>The ID of the attachment.</p>
                */
            attachmentId?: string;
            /**
                * <p>The file name of the attachment.</p>
                */
            fileName?: string;
    }
    export namespace AttachmentDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttachmentDetails) => any;
    }
    /**
        * <p>An attachment with the specified ID could not be found.</p>
        */
    export class AttachmentIdNotFound extends __BaseException {
            readonly name: "AttachmentIdNotFound";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AttachmentIdNotFound, __BaseException>);
    }
    /**
        * <p>The case creation limit for the account has been exceeded.</p>
        */
    export class CaseCreationLimitExceeded extends __BaseException {
            readonly name: "CaseCreationLimitExceeded";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<CaseCreationLimitExceeded, __BaseException>);
    }
    export interface CreateCaseRequest {
            /**
                * <p>The title of the support case. The title appears in the <b>Subject</b> field on the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p>
                */
            subject: string | undefined;
            /**
                * <p>The code for the Amazon Web Services service. You can use the <a>DescribeServices</a>
                *             operation to get the possible <code>serviceCode</code> values.</p>
                */
            serviceCode?: string;
            /**
                * <p>A value that indicates the urgency of the case. This value determines the response
                *             time according to your service level agreement with Amazon Web Services Support. You can use the <a>DescribeSeverityLevels</a> operation to get the possible values for
                *                 <code>severityCode</code>. </p>
                *         <p>For more information, see <a>SeverityLevel</a> and <a href="https://docs.aws.amazon.com/awssupport/latest/user/getting-started.html#choosing-severity">Choosing a
                *                 Severity</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
                *         <note>
                *             <p>The availability of severity levels depends on the support plan for the
                *                 Amazon Web Services account.</p>
                *         </note>
                */
            severityCode?: string;
            /**
                * <p>The category of problem for the support case. You also use the <a>DescribeServices</a> operation to get the category code for a service. Each
                *             Amazon Web Services service defines its own set of category codes.</p>
                */
            categoryCode?: string;
            /**
                * <p>The communication body text that describes the issue. This text appears in the
                *                 <b>Description</b> field on the Amazon Web Services Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p>
                */
            communicationBody: string | undefined;
            /**
                * <p>A list of email addresses that Amazon Web Services Support copies on case correspondence. Amazon Web Services Support
                *             identifies the account that creates the case when you specify your Amazon Web Services credentials in an
                *             HTTP POST method or use the <a href="http://aws.amazon.com/tools/">Amazon Web Services SDKs</a>.
                *         </p>
                */
            ccEmailAddresses?: string[];
            /**
                * <p>The language in which Amazon Web Services Support handles the case. You must specify the ISO 639-1
                *             code for the <code>language</code> parameter if you want support in that language.
                *             Currently, English ("en") and Japanese ("ja") are supported.</p>
                */
            language?: string;
            /**
                * <p>The type of issue for the case. You can specify <code>customer-service</code> or
                *                 <code>technical</code>. If you don't specify a value, the default is
                *                 <code>technical</code>.</p>
                */
            issueType?: string;
            /**
                * <p>The ID of a set of one or more attachments for the case. Create the set by using the
                *                 <a>AddAttachmentsToSet</a> operation.</p>
                */
            attachmentSetId?: string;
    }
    export namespace CreateCaseRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCaseRequest) => any;
    }
    /**
        * <p>The support case ID returned by a successful completion of the <a>CreateCase</a> operation.</p>
        */
    export interface CreateCaseResponse {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string in the following format:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId?: string;
    }
    export namespace CreateCaseResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCaseResponse) => any;
    }
    /**
        * <p>The limit for the number of <a>DescribeAttachment</a> requests in a short
        *             period of time has been exceeded.</p>
        */
    export class DescribeAttachmentLimitExceeded extends __BaseException {
            readonly name: "DescribeAttachmentLimitExceeded";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DescribeAttachmentLimitExceeded, __BaseException>);
    }
    export interface DescribeAttachmentRequest {
            /**
                * <p>The ID of the attachment to return. Attachment IDs are returned by the <a>DescribeCommunications</a> operation.</p>
                */
            attachmentId: string | undefined;
    }
    export namespace DescribeAttachmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAttachmentRequest) => any;
    }
    /**
        * <p>The content and file name of the attachment returned by the <a>DescribeAttachment</a> operation.</p>
        */
    export interface DescribeAttachmentResponse {
            /**
                * <p>This object includes the attachment content and file name.</p>
                *         <p>In the previous response syntax, the value for the <code>data</code> parameter appears
                *             as <code>blob</code>, which is represented as a base64-encoded string. The value for
                *                 <code>fileName</code> is the name of the attachment, such as
                *                 <code>troubleshoot-screenshot.png</code>.</p>
                */
            attachment?: Attachment;
    }
    export namespace DescribeAttachmentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAttachmentResponse) => any;
    }
    export interface DescribeCasesRequest {
            /**
                * <p>A list of ID numbers of the support cases you want returned. The maximum number of
                *             cases is 100.</p>
                */
            caseIdList?: string[];
            /**
                * <p>The ID displayed for a case in the Amazon Web Services Support Center user interface.</p>
                */
            displayId?: string;
            /**
                * <p>The start date for a filtered date search on support case communications. Case
                *             communications are available for 12 months after creation.</p>
                */
            afterTime?: string;
            /**
                * <p>The end date for a filtered date search on support case communications. Case
                *             communications are available for 12 months after creation.</p>
                */
            beforeTime?: string;
            /**
                * <p>Specifies whether to include resolved support cases in the <code>DescribeCases</code>
                *             response. By default, resolved cases aren't included.</p>
                */
            includeResolvedCases?: boolean;
            /**
                * <p>A resumption point for pagination.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return before paginating.</p>
                */
            maxResults?: number;
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language?: string;
            /**
                * <p>Specifies whether to include communications in the <code>DescribeCases</code>
                *             response. By default, communications are included.</p>
                */
            includeCommunications?: boolean;
    }
    export namespace DescribeCasesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCasesRequest) => any;
    }
    /**
        * <p>A communication associated with a support case. The communication consists of the
        *             case ID, the message body, attachment information, the submitter of the communication,
        *             and the date and time of the communication.</p>
        */
    export interface Communication {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string formatted as shown in this example:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId?: string;
            /**
                * <p>The text of the communication between the customer and Amazon Web Services Support.</p>
                */
            body?: string;
            /**
                * <p>The identity of the account that submitted, or responded to, the support case.
                *             Customer entries include the role or IAM user as well as the email address. For example,
                *             "AdminRole (Role) <janedoe@example.com>. Entries from the Amazon Web Services Support team display
                *             "Amazon Web Services," and don't show an email address.
                *             </p>
                */
            submittedBy?: string;
            /**
                * <p>The time the communication was created.</p>
                */
            timeCreated?: string;
            /**
                * <p>Information about the attachments to the case communication.</p>
                */
            attachmentSet?: AttachmentDetails[];
    }
    export namespace Communication {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Communication) => any;
    }
    /**
        * <p>The five most recent communications associated with the case.</p>
        */
    export interface RecentCaseCommunications {
            /**
                * <p>The five most recent communications associated with the case.</p>
                */
            communications?: Communication[];
            /**
                * <p>A resumption point for pagination.</p>
                */
            nextToken?: string;
    }
    export namespace RecentCaseCommunications {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecentCaseCommunications) => any;
    }
    /**
        * <p>A JSON-formatted object that contains the metadata for a support case. It is contained
        *             in the response from a <a>DescribeCases</a> request. <b>CaseDetails</b> contains the following fields:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <b>caseId</b> - The support case ID requested or
        *                     returned in the call. The case ID is an alphanumeric string formatted as shown
        *                     in this example:
        *                     case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>categoryCode</b> - The category of problem for the
        *                     support case. Corresponds to the <code>CategoryCode</code> values returned by a call to
        *                         <a>DescribeServices</a>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>displayId</b> - The identifier for the case on pages
        *                     in the Amazon Web Services Support Center.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>language</b> - The ISO 639-1 code for the language
        *                     in which Amazon Web Services provides support. Amazon Web Services Support currently supports English ("en") and
        *                     Japanese ("ja"). Language parameters must be passed explicitly for operations
        *                     that take them.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>nextToken</b> - A resumption point for
        *                     pagination.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>recentCommunications</b> - One or more <a>Communication</a> objects. Fields of these objects are
        *                         <code>attachments</code>, <code>body</code>, <code>caseId</code>,
        *                         <code>submittedBy</code>, and <code>timeCreated</code>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>serviceCode</b> - The identifier for the Amazon Web Services service
        *                     that corresponds to the service code defined in the call to <a>DescribeServices</a>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>severityCode</b> - The severity code assigned to the
        *                     case. Contains one of the values returned by the call to <a>DescribeSeverityLevels</a>. The possible values are:
        *                         <code>low</code>, <code>normal</code>, <code>high</code>,
        *                         <code>urgent</code>, and <code>critical</code>.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>status</b> - The status of the case in the Amazon Web Services Support Center. Valid values:</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <code>opened</code>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <code>pending-customer-action</code>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <code>reopened</code>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <code>resolved</code>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <code>unassigned</code>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <code>work-in-progress</code>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>subject</b> - The subject line of the case.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>submittedBy</b> - The email address of the account
        *                     that submitted the case.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                     <b>timeCreated</b> - The time the case was created, in
        *                     ISO-8601 format.</p>
        *             </li>
        *          </ul>
        */
    export interface CaseDetails {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string formatted as shown in this example:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId?: string;
            /**
                * <p>The ID displayed for the case in the Amazon Web Services Support Center. This is a numeric
                *             string.</p>
                */
            displayId?: string;
            /**
                * <p>The subject line for the case in the Amazon Web Services Support Center.</p>
                */
            subject?: string;
            /**
                * <p>The status of the case.</p>
                *         <p>Valid values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>opened</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>pending-customer-action</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>reopened</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>resolved</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>unassigned</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>work-in-progress</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            status?: string;
            /**
                * <p>The code for the Amazon Web Services service. You can get a list of codes and the corresponding
                *             service names by calling <a>DescribeServices</a>.</p>
                */
            serviceCode?: string;
            /**
                * <p>The category of problem for the support case.</p>
                */
            categoryCode?: string;
            /**
                * <p>The code for the severity level returned by the call to <a>DescribeSeverityLevels</a>.</p>
                */
            severityCode?: string;
            /**
                * <p>The email address of the account that submitted the case.</p>
                */
            submittedBy?: string;
            /**
                * <p>The time that the case was created in the Amazon Web Services Support Center.</p>
                */
            timeCreated?: string;
            /**
                * <p>The five most recent communications between you and Amazon Web Services Support Center, including the
                *             IDs of any attachments to the communications. Also includes a <code>nextToken</code>
                *             that you can use to retrieve earlier communications.</p>
                */
            recentCommunications?: RecentCaseCommunications;
            /**
                * <p>The email addresses that receive copies of communication about the case.</p>
                */
            ccEmailAddresses?: string[];
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language?: string;
    }
    export namespace CaseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CaseDetails) => any;
    }
    /**
        * <p>Returns an array of <a href="https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html">CaseDetails</a>
        *             objects and a <code>nextToken</code> that defines a point for pagination in the result
        *             set.</p>
        */
    export interface DescribeCasesResponse {
            /**
                * <p>The details for the cases that match the request.</p>
                */
            cases?: CaseDetails[];
            /**
                * <p>A resumption point for pagination.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeCasesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCasesResponse) => any;
    }
    export interface DescribeCommunicationsRequest {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string formatted as shown in this example:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId: string | undefined;
            /**
                * <p>The end date for a filtered date search on support case communications. Case
                *             communications are available for 12 months after creation.</p>
                */
            beforeTime?: string;
            /**
                * <p>The start date for a filtered date search on support case communications. Case
                *             communications are available for 12 months after creation.</p>
                */
            afterTime?: string;
            /**
                * <p>A resumption point for pagination.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return before paginating.</p>
                */
            maxResults?: number;
    }
    export namespace DescribeCommunicationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCommunicationsRequest) => any;
    }
    /**
        * <p>The communications returned by the <a>DescribeCommunications</a>
        *             operation.</p>
        */
    export interface DescribeCommunicationsResponse {
            /**
                * <p>The communications for the case.</p>
                */
            communications?: Communication[];
            /**
                * <p>A resumption point for pagination.</p>
                */
            nextToken?: string;
    }
    export namespace DescribeCommunicationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCommunicationsResponse) => any;
    }
    export interface DescribeServicesRequest {
            /**
                * <p>A JSON-formatted list of service codes available for Amazon Web Services services.</p>
                */
            serviceCodeList?: string[];
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language?: string;
    }
    export namespace DescribeServicesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServicesRequest) => any;
    }
    /**
        * <p>A JSON-formatted name/value pair that represents the category name and category code
        *             of the problem, selected from the <a>DescribeServices</a> response for each
        *             Amazon Web Services service.</p>
        */
    export interface Category {
            /**
                * <p>The category code for the support case.</p>
                */
            code?: string;
            /**
                * <p>The category name for the support case.</p>
                */
            name?: string;
    }
    export namespace Category {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Category) => any;
    }
    /**
        * <p>Information about an Amazon Web Services service returned by the <a>DescribeServices</a>
        *             operation.</p>
        */
    export interface Service {
            /**
                * <p>The code for an Amazon Web Services service returned by the <a>DescribeServices</a>
                *             response. The <code>name</code> element contains the corresponding friendly name.</p>
                */
            code?: string;
            /**
                * <p>The friendly name for an Amazon Web Services service. The <code>code</code> element contains the
                *             corresponding code.</p>
                */
            name?: string;
            /**
                * <p>A list of categories that describe the type of support issue a case describes.
                *             Categories consist of a category name and a category code. Category names and codes are
                *             passed to Amazon Web Services Support when you call <a>CreateCase</a>.</p>
                */
            categories?: Category[];
    }
    export namespace Service {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Service) => any;
    }
    /**
        * <p>The list of Amazon Web Services services returned by the <a>DescribeServices</a>
        *             operation.</p>
        */
    export interface DescribeServicesResponse {
            /**
                * <p>A JSON-formatted list of Amazon Web Services services.</p>
                */
            services?: Service[];
    }
    export namespace DescribeServicesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServicesResponse) => any;
    }
    export interface DescribeSeverityLevelsRequest {
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language?: string;
    }
    export namespace DescribeSeverityLevelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSeverityLevelsRequest) => any;
    }
    /**
        * <p>A code and name pair that represents the severity level of a support case. The
        *             available values depend on the support plan for the account. For more information, see
        *                 <a href="https://docs.aws.amazon.com/awssupport/latest/user/case-management.html#choosing-severity">Choosing a
        *                 severity</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
        */
    export interface SeverityLevel {
            /**
                * <p>The code for case severity level.</p>
                *         <p>Valid values: <code>low</code> | <code>normal</code> | <code>high</code> |
                *                 <code>urgent</code> | <code>critical</code>
                *          </p>
                */
            code?: string;
            /**
                * <p>The name of the severity level that corresponds to the severity level code.</p>
                *         <note>
                *             <p>The values returned by the API are different from the values that appear in the
                *                 Amazon Web Services Support Center. For example, the API uses the code <code>low</code>, but the name
                *                 appears as General guidance in Support Center. </p>
                *             <p>The following are the API code names and how they appear in the console:</p>
                *             <ul>
                *                <li>
                *                     <p>
                *                      <code>low</code> - General guidance</p>
                *                 </li>
                *                <li>
                *                     <p>
                *                      <code>normal</code> - System impaired</p>
                *                 </li>
                *                <li>
                *                     <p>
                *                      <code>high</code> - Production system impaired</p>
                *                 </li>
                *                <li>
                *                     <p>
                *                      <code>urgent</code> - Production system down</p>
                *                 </li>
                *                <li>
                *                     <p>
                *                      <code>critical</code> - Business-critical system down</p>
                *                 </li>
                *             </ul>
                *         </note>
                *         <p>For more information, see <a href="https://docs.aws.amazon.com/awssupport/latest/user/case-management.html#choosing-severity">Choosing a
                *                 severity</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
                */
            name?: string;
    }
    export namespace SeverityLevel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SeverityLevel) => any;
    }
    /**
        * <p>The list of severity levels returned by the <a>DescribeSeverityLevels</a>
        *             operation.</p>
        */
    export interface DescribeSeverityLevelsResponse {
            /**
                * <p>The available severity levels for the support case. Available severity levels are
                *             defined by your service level agreement with Amazon Web Services.</p>
                */
            severityLevels?: SeverityLevel[];
    }
    export namespace DescribeSeverityLevelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeSeverityLevelsResponse) => any;
    }
    export interface DescribeTrustedAdvisorCheckRefreshStatusesRequest {
            /**
                * <p>The IDs of the Trusted Advisor checks to get the status.</p>
                *         <note>
                *             <p>If you specify the check ID of a check that is automatically refreshed, you might
                *                 see an <code>InvalidParameterValue</code> error.</p>
                *         </note>
                */
            checkIds: string[] | undefined;
    }
    export namespace DescribeTrustedAdvisorCheckRefreshStatusesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckRefreshStatusesRequest) => any;
    }
    /**
        * <p>The refresh status of a Trusted Advisor check.</p>
        */
    export interface TrustedAdvisorCheckRefreshStatus {
            /**
                * <p>The unique identifier for the Trusted Advisor check.</p>
                */
            checkId: string | undefined;
            /**
                * <p>The status of the Trusted Advisor check for which a refresh has been requested:
                *             </p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>none</code> - The check is not refreshed or the non-success status
                *                     exceeds the timeout</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>enqueued</code> - The check refresh requests has entered the refresh
                *                     queue</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>processing</code> - The check refresh request is picked up by the rule
                *                     processing engine</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>success</code> - The check is successfully refreshed</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>abandoned</code> - The check refresh has failed</p>
                *             </li>
                *          </ul>
                */
            status: string | undefined;
            /**
                * <p>The amount of time, in milliseconds, until the Trusted Advisor check is eligible for
                *             refresh.</p>
                */
            millisUntilNextRefreshable: number | undefined;
    }
    export namespace TrustedAdvisorCheckRefreshStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCheckRefreshStatus) => any;
    }
    /**
        * <p>The statuses of the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorCheckRefreshStatuses</a> operation.</p>
        */
    export interface DescribeTrustedAdvisorCheckRefreshStatusesResponse {
            /**
                * <p>The refresh status of the specified Trusted Advisor checks.</p>
                */
            statuses: TrustedAdvisorCheckRefreshStatus[] | undefined;
    }
    export namespace DescribeTrustedAdvisorCheckRefreshStatusesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckRefreshStatusesResponse) => any;
    }
    /**
        * <p></p>
        */
    export interface DescribeTrustedAdvisorCheckResultRequest {
            /**
                * <p>The unique identifier for the Trusted Advisor check.</p>
                */
            checkId: string | undefined;
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language?: string;
    }
    export namespace DescribeTrustedAdvisorCheckResultRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckResultRequest) => any;
    }
    /**
        * <p>The estimated cost savings that might be realized if the recommended operations are
        *             taken.</p>
        */
    export interface TrustedAdvisorCostOptimizingSummary {
            /**
                * <p>The estimated monthly savings that might be realized if the recommended operations are
                *             taken.</p>
                */
            estimatedMonthlySavings: number | undefined;
            /**
                * <p>The estimated percentage of savings that might be realized if the recommended
                *             operations are taken.</p>
                */
            estimatedPercentMonthlySavings: number | undefined;
    }
    export namespace TrustedAdvisorCostOptimizingSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCostOptimizingSummary) => any;
    }
    /**
        * <p>The container for summary information that relates to the category of the Trusted Advisor check.</p>
        */
    export interface TrustedAdvisorCategorySpecificSummary {
            /**
                * <p>The summary information about cost savings for a Trusted Advisor check that is in the
                *             Cost Optimizing category.</p>
                */
            costOptimizing?: TrustedAdvisorCostOptimizingSummary;
    }
    export namespace TrustedAdvisorCategorySpecificSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCategorySpecificSummary) => any;
    }
    /**
        * <p>Contains information about a resource identified by a Trusted Advisor check.</p>
        */
    export interface TrustedAdvisorResourceDetail {
            /**
                * <p>The status code for the resource identified in the Trusted Advisor check.</p>
                */
            status: string | undefined;
            /**
                * <p>The Amazon Web Services Region in which the identified resource is located.</p>
                */
            region?: string;
            /**
                * <p>The unique identifier for the identified resource.</p>
                */
            resourceId: string | undefined;
            /**
                * <p>Specifies whether the Amazon Web Services resource was ignored by Trusted Advisor because it was
                *             marked as suppressed by the user.</p>
                */
            isSuppressed?: boolean;
            /**
                * <p>Additional information about the identified resource. The exact metadata and its order
                *             can be obtained by inspecting the <a>TrustedAdvisorCheckDescription</a>
                *             object returned by the call to <a>DescribeTrustedAdvisorChecks</a>. <b>Metadata</b> contains all the data that is shown in the Excel
                *             download, even in those cases where the UI shows just summary data.</p>
                */
            metadata: string[] | undefined;
    }
    export namespace TrustedAdvisorResourceDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorResourceDetail) => any;
    }
    /**
        * <p>Details about Amazon Web Services resources that were analyzed in a call to Trusted Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>.</p>
        */
    export interface TrustedAdvisorResourcesSummary {
            /**
                * <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
                */
            resourcesProcessed: number | undefined;
            /**
                * <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor
                *             check.</p>
                */
            resourcesFlagged: number | undefined;
            /**
                * <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was
                *             unavailable.</p>
                */
            resourcesIgnored: number | undefined;
            /**
                * <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as
                *             suppressed by the user.</p>
                */
            resourcesSuppressed: number | undefined;
    }
    export namespace TrustedAdvisorResourcesSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorResourcesSummary) => any;
    }
    /**
        * <p>The results of a Trusted Advisor check returned by <a>DescribeTrustedAdvisorCheckResult</a>.</p>
        */
    export interface TrustedAdvisorCheckResult {
            /**
                * <p>The unique identifier for the Trusted Advisor check.</p>
                */
            checkId: string | undefined;
            /**
                * <p>The time of the last refresh of the check.</p>
                */
            timestamp: string | undefined;
            /**
                * <p>The alert status of the check: "ok" (green), "warning" (yellow), "error" (red), or
                *             "not_available".</p>
                */
            status: string | undefined;
            /**
                * <p>Details about Amazon Web Services resources that were analyzed in a call to Trusted Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>.</p>
                */
            resourcesSummary: TrustedAdvisorResourcesSummary | undefined;
            /**
                * <p>Summary information that relates to the category of the check. Cost Optimizing is the
                *             only category that is currently supported.</p>
                */
            categorySpecificSummary: TrustedAdvisorCategorySpecificSummary | undefined;
            /**
                * <p>The details about each resource listed in the check result.</p>
                */
            flaggedResources: TrustedAdvisorResourceDetail[] | undefined;
    }
    export namespace TrustedAdvisorCheckResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCheckResult) => any;
    }
    /**
        * <p>The result of the Trusted Advisor check returned by the <a>DescribeTrustedAdvisorCheckResult</a> operation.</p>
        */
    export interface DescribeTrustedAdvisorCheckResultResponse {
            /**
                * <p>The detailed results of the Trusted Advisor check.</p>
                */
            result?: TrustedAdvisorCheckResult;
    }
    export namespace DescribeTrustedAdvisorCheckResultResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckResultResponse) => any;
    }
    export interface DescribeTrustedAdvisorChecksRequest {
            /**
                * <p>The ISO 639-1 code for the language in which Amazon Web Services provides support. Amazon Web Services Support
                *             currently supports English ("en") and Japanese ("ja"). Language parameters must be
                *             passed explicitly for operations that take them.</p>
                */
            language: string | undefined;
    }
    export namespace DescribeTrustedAdvisorChecksRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorChecksRequest) => any;
    }
    /**
        * <p>The description and metadata for a Trusted Advisor check.</p>
        */
    export interface TrustedAdvisorCheckDescription {
            /**
                * <p>The unique identifier for the Trusted Advisor check.</p>
                */
            id: string | undefined;
            /**
                * <p>The display name for the Trusted Advisor check.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the Trusted Advisor check, which includes the alert criteria and
                *             recommended operations (contains HTML markup).</p>
                */
            description: string | undefined;
            /**
                * <p>The category of the Trusted Advisor check.</p>
                */
            category: string | undefined;
            /**
                * <p>The column headings for the data returned by the Trusted Advisor check. The order of
                *             the headings corresponds to the order of the data in the <b>Metadata</b> element of the <a>TrustedAdvisorResourceDetail</a>
                *             for the check. <b>Metadata</b> contains all the data that is
                *             shown in the Excel download, even in those cases where the UI shows just summary data.
                *         </p>
                */
            metadata: string[] | undefined;
    }
    export namespace TrustedAdvisorCheckDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCheckDescription) => any;
    }
    /**
        * <p>Information about the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
        */
    export interface DescribeTrustedAdvisorChecksResponse {
            /**
                * <p>Information about all available Trusted Advisor checks.</p>
                */
            checks: TrustedAdvisorCheckDescription[] | undefined;
    }
    export namespace DescribeTrustedAdvisorChecksResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorChecksResponse) => any;
    }
    export interface DescribeTrustedAdvisorCheckSummariesRequest {
            /**
                * <p>The IDs of the Trusted Advisor checks.</p>
                */
            checkIds: string[] | undefined;
    }
    export namespace DescribeTrustedAdvisorCheckSummariesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckSummariesRequest) => any;
    }
    /**
        * <p>A summary of a Trusted Advisor check result, including the alert status, last refresh,
        *             and number of resources examined.</p>
        */
    export interface TrustedAdvisorCheckSummary {
            /**
                * <p>The unique identifier for the Trusted Advisor check.</p>
                */
            checkId: string | undefined;
            /**
                * <p>The time of the last refresh of the check.</p>
                */
            timestamp: string | undefined;
            /**
                * <p>The alert status of the check: "ok" (green), "warning" (yellow), "error" (red), or
                *             "not_available".</p>
                */
            status: string | undefined;
            /**
                * <p>Specifies whether the Trusted Advisor check has flagged resources.</p>
                */
            hasFlaggedResources?: boolean;
            /**
                * <p>Details about Amazon Web Services resources that were analyzed in a call to Trusted Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>.</p>
                */
            resourcesSummary: TrustedAdvisorResourcesSummary | undefined;
            /**
                * <p>Summary information that relates to the category of the check. Cost Optimizing is the
                *             only category that is currently supported.</p>
                */
            categorySpecificSummary: TrustedAdvisorCategorySpecificSummary | undefined;
    }
    export namespace TrustedAdvisorCheckSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrustedAdvisorCheckSummary) => any;
    }
    /**
        * <p>The summaries of the Trusted Advisor checks returned by the <a>DescribeTrustedAdvisorCheckSummaries</a> operation.</p>
        */
    export interface DescribeTrustedAdvisorCheckSummariesResponse {
            /**
                * <p>The summary information for the requested Trusted Advisor checks.</p>
                */
            summaries: TrustedAdvisorCheckSummary[] | undefined;
    }
    export namespace DescribeTrustedAdvisorCheckSummariesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTrustedAdvisorCheckSummariesResponse) => any;
    }
    /**
        * <p></p>
        */
    export interface RefreshTrustedAdvisorCheckRequest {
            /**
                * <p>The unique identifier for the Trusted Advisor check to refresh.</p>
                *             <note>
                *                 <p>Specifying the check ID of a check that is automatically refreshed
                *                     causes an <code>InvalidParameterValue</code> error.</p>
                *             </note>
                */
            checkId: string | undefined;
    }
    export namespace RefreshTrustedAdvisorCheckRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RefreshTrustedAdvisorCheckRequest) => any;
    }
    /**
        * <p>The current refresh status of a Trusted Advisor check.</p>
        */
    export interface RefreshTrustedAdvisorCheckResponse {
            /**
                * <p>The current refresh status for a check, including the amount of time until the check
                *             is eligible for refresh.</p>
                */
            status: TrustedAdvisorCheckRefreshStatus | undefined;
    }
    export namespace RefreshTrustedAdvisorCheckResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RefreshTrustedAdvisorCheckResponse) => any;
    }
    export interface ResolveCaseRequest {
            /**
                * <p>The support case ID requested or returned in the call. The case ID is an
                *             alphanumeric string formatted as shown in this example:
                *                 case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
                *         </p>
                */
            caseId?: string;
    }
    export namespace ResolveCaseRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResolveCaseRequest) => any;
    }
    /**
        * <p>The status of the case returned by the <a>ResolveCase</a> operation.</p>
        */
    export interface ResolveCaseResponse {
            /**
                * <p>The status of the case when the <a>ResolveCase</a> request was sent.</p>
                */
            initialCaseStatus?: string;
            /**
                * <p>The status of the case after the <a>ResolveCase</a> request was
                *             processed.</p>
                */
            finalCaseStatus?: string;
    }
    export namespace ResolveCaseResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResolveCaseResponse) => any;
    }
}

declare module '@aws-sdk/client-support/node_modules/@aws-sdk/client-support/dist-types/models/SupportServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Support service.
        */
    export class SupportServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

