// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-resource-groups-tagging-api' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { DescribeReportCreationCommandInput, DescribeReportCreationCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/DescribeReportCreationCommand";
    import { GetComplianceSummaryCommandInput, GetComplianceSummaryCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetComplianceSummaryCommand";
    import { GetResourcesCommandInput, GetResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetResourcesCommand";
    import { GetTagKeysCommandInput, GetTagKeysCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagKeysCommand";
    import { GetTagValuesCommandInput, GetTagValuesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagValuesCommand";
    import { StartReportCreationCommandInput, StartReportCreationCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/StartReportCreationCommand";
    import { TagResourcesCommandInput, TagResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/TagResourcesCommand";
    import { UntagResourcesCommandInput, UntagResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/UntagResourcesCommand";
    import { ResourceGroupsTaggingAPIClient } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    /**
        * <fullname>Resource Groups Tagging API</fullname>
        */
    export class ResourceGroupsTaggingAPI extends ResourceGroupsTaggingAPIClient {
            /**
                * <p>Describes the status of the <code>StartReportCreation</code> operation. </p>
                *         <p>You can call this operation only from the organization's
                *     management account and from the us-east-1 Region.</p>
                */
            describeReportCreation(args: DescribeReportCreationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReportCreationCommandOutput>;
            describeReportCreation(args: DescribeReportCreationCommandInput, cb: (err: any, data?: DescribeReportCreationCommandOutput) => void): void;
            describeReportCreation(args: DescribeReportCreationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReportCreationCommandOutput) => void): void;
            /**
                * <p>Returns a table that shows counts of resources that are noncompliant with their tag
                *             policies.</p>
                *         <p>For more information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag Policies</a> in
                *             the <i>Organizations User Guide.</i>
                *          </p>
                *         <p>You can call this operation only from the organization's
                *     management account and from the us-east-1 Region.</p>
                *         <p>This operation supports pagination, where the response can be sent in
                *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
                *     if there are additional results available to return. Repeat the query, passing the
                *     <code>PaginationToken</code> response parameter value as an input to the next request until you
                *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
                *     there are no more results waiting to be returned.</p>
                */
            getComplianceSummary(args: GetComplianceSummaryCommandInput, options?: __HttpHandlerOptions): Promise<GetComplianceSummaryCommandOutput>;
            getComplianceSummary(args: GetComplianceSummaryCommandInput, cb: (err: any, data?: GetComplianceSummaryCommandOutput) => void): void;
            getComplianceSummary(args: GetComplianceSummaryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetComplianceSummaryCommandOutput) => void): void;
            /**
                * <p>Returns all the tagged or previously tagged resources that are located in the
                *             specified Amazon Web Services Region for the account.</p>
                *         <p>Depending on what information you want returned, you can also specify the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <i>Filters</i> that specify what tags and resource types you
                *                     want returned. The response includes all tags that are associated with the
                *                     requested resources.</p>
                *             </li>
                *             <li>
                *                 <p>Information about compliance with the account's effective tag policy. For more
                *                     information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag
                *                         Policies</a> in the <i>Organizations User Guide.</i>
                *                </p>
                *             </li>
                *          </ul>
                *         <p>This operation supports pagination, where the response can be sent in
                *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
                *     if there are additional results available to return. Repeat the query, passing the
                *     <code>PaginationToken</code> response parameter value as an input to the next request until you
                *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
                *     there are no more results waiting to be returned.</p>
                */
            getResources(args: GetResourcesCommandInput, options?: __HttpHandlerOptions): Promise<GetResourcesCommandOutput>;
            getResources(args: GetResourcesCommandInput, cb: (err: any, data?: GetResourcesCommandOutput) => void): void;
            getResources(args: GetResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourcesCommandOutput) => void): void;
            /**
                * <p>Returns all tag keys currently in use in the specified Amazon Web Services Region for the calling
                *             account.</p>
                *         <p>This operation supports pagination, where the response can be sent in
                *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
                *     if there are additional results available to return. Repeat the query, passing the
                *     <code>PaginationToken</code> response parameter value as an input to the next request until you
                *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
                *     there are no more results waiting to be returned.</p>
                */
            getTagKeys(args: GetTagKeysCommandInput, options?: __HttpHandlerOptions): Promise<GetTagKeysCommandOutput>;
            getTagKeys(args: GetTagKeysCommandInput, cb: (err: any, data?: GetTagKeysCommandOutput) => void): void;
            getTagKeys(args: GetTagKeysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTagKeysCommandOutput) => void): void;
            /**
                * <p>Returns all tag values for the specified key that are used in the specified Amazon Web Services
                *             Region for the calling account.</p>
                *         <p>This operation supports pagination, where the response can be sent in
                *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
                *     if there are additional results available to return. Repeat the query, passing the
                *     <code>PaginationToken</code> response parameter value as an input to the next request until you
                *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
                *     there are no more results waiting to be returned.</p>
                */
            getTagValues(args: GetTagValuesCommandInput, options?: __HttpHandlerOptions): Promise<GetTagValuesCommandOutput>;
            getTagValues(args: GetTagValuesCommandInput, cb: (err: any, data?: GetTagValuesCommandOutput) => void): void;
            getTagValues(args: GetTagValuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTagValuesCommandOutput) => void): void;
            /**
                * <p>Generates a report that lists all tagged resources in the accounts across your
                *             organization and tells whether each resource is compliant with the effective tag policy.
                *             Compliance data is refreshed daily. The report is generated asynchronously.</p>
                *         <p>The generated report is saved to the following location:</p>
                *         <p>
                *             <code>s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv</code>
                *          </p>
                *         <p>You can call this operation only from the organization's
                *     management account and from the us-east-1 Region.</p>
                */
            startReportCreation(args: StartReportCreationCommandInput, options?: __HttpHandlerOptions): Promise<StartReportCreationCommandOutput>;
            startReportCreation(args: StartReportCreationCommandInput, cb: (err: any, data?: StartReportCreationCommandOutput) => void): void;
            startReportCreation(args: StartReportCreationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartReportCreationCommandOutput) => void): void;
            /**
                * <p>Applies one or more tags to the specified resources. Note the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Not all resources can have tags. For a list of services with resources that
                *                     support tagging using this operation, see <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html">Services that support the
                *                         Resource Groups Tagging API</a>. If the resource doesn't yet support
                *                     this operation, the resource's service might support tagging using its own API
                *                     operations. For more information, refer to the documentation for that
                *                     service.</p>
                *             </li>
                *             <li>
                *                 <p>Each resource can have up to 50 tags. For other limits, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions">Tag Naming and Usage Conventions</a> in the <i>Amazon Web Services General
                *                         Reference.</i>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>You can only tag resources that are located in the specified Amazon Web Services Region for
                *                     the Amazon Web Services account.</p>
                *             </li>
                *             <li>
                *                 <p>To add tags to a resource, you need the necessary permissions for the service
                *                     that the resource belongs to as well as permissions for adding tags. For more
                *                     information, see the documentation for each service.</p>
                *             </li>
                *          </ul>
                *         <important>
                *             <p>Do not store personally identifiable information (PII) or other confidential or
                *                 sensitive information in tags. We use tags to provide you with billing and
                *                 administration services. Tags are not intended to be used for private or sensitive
                *                 data.</p>
                *         </important>
                *         <p>
                *             <b>Minimum permissions</b>
                *          </p>
                *         <p>In addition to the <code>tag:TagResources</code> permission required by this
                *             operation, you must also have the tagging permission defined by the service that created
                *             the resource. For example, to tag an Amazon EC2 instance using the <code>TagResources</code>
                *             operation, you must have both of the following permissions:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>tag:TagResource</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>ec2:CreateTags</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            tagResources(args: TagResourcesCommandInput, options?: __HttpHandlerOptions): Promise<TagResourcesCommandOutput>;
            tagResources(args: TagResourcesCommandInput, cb: (err: any, data?: TagResourcesCommandOutput) => void): void;
            tagResources(args: TagResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourcesCommandOutput) => void): void;
            /**
                * <p>Removes the specified tags from the specified resources. When you specify a tag key,
                *             the action removes both that key and its associated value. The operation succeeds even
                *             if you attempt to remove tags from a resource that were already removed. Note the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>To remove tags from a resource, you need the necessary permissions for the
                *                     service that the resource belongs to as well as permissions for removing tags.
                *                     For more information, see the documentation for the service whose resource you
                *                     want to untag.</p>
                *             </li>
                *             <li>
                *                 <p>You can only tag resources that are located in the specified Amazon Web Services Region for
                *                     the calling Amazon Web Services account.</p>
                *             </li>
                *          </ul>
                *
                *         <p>
                *             <b>Minimum permissions</b>
                *          </p>
                *         <p>In addition to the <code>tag:UntagResources</code> permission required by this
                *             operation, you must also have the remove tags permission defined by the service that
                *             created the resource. For example, to remove the tags from an Amazon EC2 instance using the
                *                 <code>UntagResources</code> operation, you must have both of the following
                *             permissions:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>tag:UntagResource</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>ec2:DeleteTags</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            untagResources(args: UntagResourcesCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourcesCommandOutput>;
            untagResources(args: UntagResourcesCommandInput, cb: (err: any, data?: UntagResourcesCommandOutput) => void): void;
            untagResources(args: UntagResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourcesCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/DescribeReportCreationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeReportCreationInput, DescribeReportCreationOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface DescribeReportCreationCommandInput extends DescribeReportCreationInput {
    }
    export interface DescribeReportCreationCommandOutput extends DescribeReportCreationOutput, __MetadataBearer {
    }
    /**
        * <p>Describes the status of the <code>StartReportCreation</code> operation. </p>
        *         <p>You can call this operation only from the organization's
        *     management account and from the us-east-1 Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, DescribeReportCreationCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, DescribeReportCreationCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new DescribeReportCreationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeReportCreationCommandInput} for command's `input` shape.
        * @see {@link DescribeReportCreationCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class DescribeReportCreationCommand extends $Command<DescribeReportCreationCommandInput, DescribeReportCreationCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: DescribeReportCreationCommandInput;
            constructor(input: DescribeReportCreationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeReportCreationCommandInput, DescribeReportCreationCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetComplianceSummaryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetComplianceSummaryInput, GetComplianceSummaryOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface GetComplianceSummaryCommandInput extends GetComplianceSummaryInput {
    }
    export interface GetComplianceSummaryCommandOutput extends GetComplianceSummaryOutput, __MetadataBearer {
    }
    /**
        * <p>Returns a table that shows counts of resources that are noncompliant with their tag
        *             policies.</p>
        *         <p>For more information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag Policies</a> in
        *             the <i>Organizations User Guide.</i>
        *          </p>
        *         <p>You can call this operation only from the organization's
        *     management account and from the us-east-1 Region.</p>
        *         <p>This operation supports pagination, where the response can be sent in
        *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
        *     if there are additional results available to return. Repeat the query, passing the
        *     <code>PaginationToken</code> response parameter value as an input to the next request until you
        *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
        *     there are no more results waiting to be returned.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, GetComplianceSummaryCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, GetComplianceSummaryCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new GetComplianceSummaryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetComplianceSummaryCommandInput} for command's `input` shape.
        * @see {@link GetComplianceSummaryCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class GetComplianceSummaryCommand extends $Command<GetComplianceSummaryCommandInput, GetComplianceSummaryCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: GetComplianceSummaryCommandInput;
            constructor(input: GetComplianceSummaryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetComplianceSummaryCommandInput, GetComplianceSummaryCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetResourcesInput, GetResourcesOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface GetResourcesCommandInput extends GetResourcesInput {
    }
    export interface GetResourcesCommandOutput extends GetResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>Returns all the tagged or previously tagged resources that are located in the
        *             specified Amazon Web Services Region for the account.</p>
        *         <p>Depending on what information you want returned, you can also specify the
        *             following:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <i>Filters</i> that specify what tags and resource types you
        *                     want returned. The response includes all tags that are associated with the
        *                     requested resources.</p>
        *             </li>
        *             <li>
        *                 <p>Information about compliance with the account's effective tag policy. For more
        *                     information on tag policies, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag
        *                         Policies</a> in the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        *         <p>This operation supports pagination, where the response can be sent in
        *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
        *     if there are additional results available to return. Repeat the query, passing the
        *     <code>PaginationToken</code> response parameter value as an input to the next request until you
        *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
        *     there are no more results waiting to be returned.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, GetResourcesCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, GetResourcesCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new GetResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetResourcesCommandInput} for command's `input` shape.
        * @see {@link GetResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class GetResourcesCommand extends $Command<GetResourcesCommandInput, GetResourcesCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: GetResourcesCommandInput;
            constructor(input: GetResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetResourcesCommandInput, GetResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagKeysCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetTagKeysInput, GetTagKeysOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface GetTagKeysCommandInput extends GetTagKeysInput {
    }
    export interface GetTagKeysCommandOutput extends GetTagKeysOutput, __MetadataBearer {
    }
    /**
        * <p>Returns all tag keys currently in use in the specified Amazon Web Services Region for the calling
        *             account.</p>
        *         <p>This operation supports pagination, where the response can be sent in
        *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
        *     if there are additional results available to return. Repeat the query, passing the
        *     <code>PaginationToken</code> response parameter value as an input to the next request until you
        *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
        *     there are no more results waiting to be returned.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, GetTagKeysCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, GetTagKeysCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new GetTagKeysCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTagKeysCommandInput} for command's `input` shape.
        * @see {@link GetTagKeysCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class GetTagKeysCommand extends $Command<GetTagKeysCommandInput, GetTagKeysCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: GetTagKeysCommandInput;
            constructor(input: GetTagKeysCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTagKeysCommandInput, GetTagKeysCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagValuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetTagValuesInput, GetTagValuesOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface GetTagValuesCommandInput extends GetTagValuesInput {
    }
    export interface GetTagValuesCommandOutput extends GetTagValuesOutput, __MetadataBearer {
    }
    /**
        * <p>Returns all tag values for the specified key that are used in the specified Amazon Web Services
        *             Region for the calling account.</p>
        *         <p>This operation supports pagination, where the response can be sent in
        *     multiple pages. You should check the <code>PaginationToken</code> response parameter to determine
        *     if there are additional results available to return. Repeat the query, passing the
        *     <code>PaginationToken</code> response parameter value as an input to the next request until you
        *     recieve a <code>null</code> value. A null value for <code>PaginationToken</code> indicates that
        *     there are no more results waiting to be returned.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, GetTagValuesCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, GetTagValuesCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new GetTagValuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTagValuesCommandInput} for command's `input` shape.
        * @see {@link GetTagValuesCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class GetTagValuesCommand extends $Command<GetTagValuesCommandInput, GetTagValuesCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: GetTagValuesCommandInput;
            constructor(input: GetTagValuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTagValuesCommandInput, GetTagValuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/StartReportCreationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { StartReportCreationInput, StartReportCreationOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface StartReportCreationCommandInput extends StartReportCreationInput {
    }
    export interface StartReportCreationCommandOutput extends StartReportCreationOutput, __MetadataBearer {
    }
    /**
        * <p>Generates a report that lists all tagged resources in the accounts across your
        *             organization and tells whether each resource is compliant with the effective tag policy.
        *             Compliance data is refreshed daily. The report is generated asynchronously.</p>
        *         <p>The generated report is saved to the following location:</p>
        *         <p>
        *             <code>s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv</code>
        *          </p>
        *         <p>You can call this operation only from the organization's
        *     management account and from the us-east-1 Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, StartReportCreationCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, StartReportCreationCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new StartReportCreationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartReportCreationCommandInput} for command's `input` shape.
        * @see {@link StartReportCreationCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class StartReportCreationCommand extends $Command<StartReportCreationCommandInput, StartReportCreationCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: StartReportCreationCommandInput;
            constructor(input: StartReportCreationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartReportCreationCommandInput, StartReportCreationCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/TagResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourcesInput, TagResourcesOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface TagResourcesCommandInput extends TagResourcesInput {
    }
    export interface TagResourcesCommandOutput extends TagResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>Applies one or more tags to the specified resources. Note the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Not all resources can have tags. For a list of services with resources that
        *                     support tagging using this operation, see <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html">Services that support the
        *                         Resource Groups Tagging API</a>. If the resource doesn't yet support
        *                     this operation, the resource's service might support tagging using its own API
        *                     operations. For more information, refer to the documentation for that
        *                     service.</p>
        *             </li>
        *             <li>
        *                 <p>Each resource can have up to 50 tags. For other limits, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions">Tag Naming and Usage Conventions</a> in the <i>Amazon Web Services General
        *                         Reference.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>You can only tag resources that are located in the specified Amazon Web Services Region for
        *                     the Amazon Web Services account.</p>
        *             </li>
        *             <li>
        *                 <p>To add tags to a resource, you need the necessary permissions for the service
        *                     that the resource belongs to as well as permissions for adding tags. For more
        *                     information, see the documentation for each service.</p>
        *             </li>
        *          </ul>
        *         <important>
        *             <p>Do not store personally identifiable information (PII) or other confidential or
        *                 sensitive information in tags. We use tags to provide you with billing and
        *                 administration services. Tags are not intended to be used for private or sensitive
        *                 data.</p>
        *         </important>
        *         <p>
        *             <b>Minimum permissions</b>
        *          </p>
        *         <p>In addition to the <code>tag:TagResources</code> permission required by this
        *             operation, you must also have the tagging permission defined by the service that created
        *             the resource. For example, to tag an Amazon EC2 instance using the <code>TagResources</code>
        *             operation, you must have both of the following permissions:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <code>tag:TagResource</code>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>ec2:CreateTags</code>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, TagResourcesCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, TagResourcesCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new TagResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourcesCommandInput} for command's `input` shape.
        * @see {@link TagResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class TagResourcesCommand extends $Command<TagResourcesCommandInput, TagResourcesCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: TagResourcesCommandInput;
            constructor(input: TagResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourcesCommandInput, TagResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/UntagResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourcesInput, UntagResourcesOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0";
    import { ResourceGroupsTaggingAPIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient";
    export interface UntagResourcesCommandInput extends UntagResourcesInput {
    }
    export interface UntagResourcesCommandOutput extends UntagResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>Removes the specified tags from the specified resources. When you specify a tag key,
        *             the action removes both that key and its associated value. The operation succeeds even
        *             if you attempt to remove tags from a resource that were already removed. Note the
        *             following:</p>
        *         <ul>
        *             <li>
        *                 <p>To remove tags from a resource, you need the necessary permissions for the
        *                     service that the resource belongs to as well as permissions for removing tags.
        *                     For more information, see the documentation for the service whose resource you
        *                     want to untag.</p>
        *             </li>
        *             <li>
        *                 <p>You can only tag resources that are located in the specified Amazon Web Services Region for
        *                     the calling Amazon Web Services account.</p>
        *             </li>
        *          </ul>
        *
        *         <p>
        *             <b>Minimum permissions</b>
        *          </p>
        *         <p>In addition to the <code>tag:UntagResources</code> permission required by this
        *             operation, you must also have the remove tags permission defined by the service that
        *             created the resource. For example, to remove the tags from an Amazon EC2 instance using the
        *                 <code>UntagResources</code> operation, you must have both of the following
        *             permissions:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <code>tag:UntagResource</code>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>ec2:DeleteTags</code>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResourceGroupsTaggingAPIClient, UntagResourcesCommand } from "@aws-sdk/client-resource-groups-tagging-api"; // ES Modules import
        * // const { ResourceGroupsTaggingAPIClient, UntagResourcesCommand } = require("@aws-sdk/client-resource-groups-tagging-api"); // CommonJS import
        * const client = new ResourceGroupsTaggingAPIClient(config);
        * const command = new UntagResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourcesCommandInput} for command's `input` shape.
        * @see {@link UntagResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResourceGroupsTaggingAPIClientResolvedConfig | config} for ResourceGroupsTaggingAPIClient's `config` shape.
        *
        */
    export class UntagResourcesCommand extends $Command<UntagResourcesCommandInput, UntagResourcesCommandOutput, ResourceGroupsTaggingAPIClientResolvedConfig> {
            readonly input: UntagResourcesCommandInput;
            constructor(input: UntagResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResourceGroupsTaggingAPIClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourcesCommandInput, UntagResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/ResourceGroupsTaggingAPIClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DescribeReportCreationCommandInput, DescribeReportCreationCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/DescribeReportCreationCommand";
    import { GetComplianceSummaryCommandInput, GetComplianceSummaryCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetComplianceSummaryCommand";
    import { GetResourcesCommandInput, GetResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetResourcesCommand";
    import { GetTagKeysCommandInput, GetTagKeysCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagKeysCommand";
    import { GetTagValuesCommandInput, GetTagValuesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/GetTagValuesCommand";
    import { StartReportCreationCommandInput, StartReportCreationCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/StartReportCreationCommand";
    import { TagResourcesCommandInput, TagResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/TagResourcesCommand";
    import { UntagResourcesCommandInput, UntagResourcesCommandOutput } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/commands/UntagResourcesCommand";
    export type ServiceInputTypes = DescribeReportCreationCommandInput | GetComplianceSummaryCommandInput | GetResourcesCommandInput | GetTagKeysCommandInput | GetTagValuesCommandInput | StartReportCreationCommandInput | TagResourcesCommandInput | UntagResourcesCommandInput;
    export type ServiceOutputTypes = DescribeReportCreationCommandOutput | GetComplianceSummaryCommandOutput | GetResourcesCommandOutput | GetTagKeysCommandOutput | GetTagValuesCommandOutput | StartReportCreationCommandOutput | TagResourcesCommandOutput | UntagResourcesCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ResourceGroupsTaggingAPIClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ResourceGroupsTaggingAPIClient class constructor that set the region, credentials and other options.
        */
    export interface ResourceGroupsTaggingAPIClientConfig extends ResourceGroupsTaggingAPIClientConfigType {
    }
    type ResourceGroupsTaggingAPIClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ResourceGroupsTaggingAPIClient class. This is resolved and normalized from the {@link ResourceGroupsTaggingAPIClientConfig | constructor configuration interface}.
        */
    export interface ResourceGroupsTaggingAPIClientResolvedConfig extends ResourceGroupsTaggingAPIClientResolvedConfigType {
    }
    /**
        * <fullname>Resource Groups Tagging API</fullname>
        */
    export class ResourceGroupsTaggingAPIClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ResourceGroupsTaggingAPIClientResolvedConfig> {
            /**
                * The resolved configuration of ResourceGroupsTaggingAPIClient class. This is resolved and normalized from the {@link ResourceGroupsTaggingAPIClientConfig | constructor configuration interface}.
                */
            readonly config: ResourceGroupsTaggingAPIClientResolvedConfig;
            constructor(configuration: ResourceGroupsTaggingAPIClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ResourceGroupsTaggingAPIServiceException as __BaseException } from "@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/ResourceGroupsTaggingAPIServiceException";
    /**
        * <p>Information that shows whether a resource is compliant with the effective tag policy,
        *             including details on any noncompliant tag keys.</p>
        */
    export interface ComplianceDetails {
            /**
                * <p>These tag keys on the resource are noncompliant with the effective tag policy.</p>
                */
            NoncompliantKeys?: string[];
            /**
                * <p>These are keys defined in the effective policy that are on the resource with either
                *             incorrect case treatment or noncompliant values. </p>
                */
            KeysWithNoncompliantValues?: string[];
            /**
                * <p>Whether a resource is compliant with the effective tag policy.</p>
                */
            ComplianceStatus?: boolean;
    }
    export namespace ComplianceDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ComplianceDetails) => any;
    }
    /**
        * <p>The target of the operation is currently being modified by a different request. Try
        *             again later.</p>
        */
    export class ConcurrentModificationException extends __BaseException {
            readonly name: "ConcurrentModificationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
    }
    /**
        * <p>The request was denied because performing this operation violates a constraint. </p>
        *         <p>Some of the reasons in the following list might not apply to this specific
        *             operation.</p>
        *         <ul>
        *             <li>
        *                 <p>You must meet the prerequisites for using tag policies. For information, see
        *                         <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies-prereqs.html">Prerequisites and Permissions for Using Tag Policies</a> in the
        *                         <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>You must enable the tag policies service principal
        *                         (<code>tagpolicies.tag.amazonaws.com</code>) to integrate with Organizations For
        *                     information, see <a href="https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html">EnableAWSServiceAccess</a>.</p>
        *             </li>
        *             <li>
        *                 <p>You must have a tag policy attached to the organization root, an OU, or an
        *                     account.</p>
        *             </li>
        *          </ul>
        */
    export class ConstraintViolationException extends __BaseException {
            readonly name: "ConstraintViolationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConstraintViolationException, __BaseException>);
    }
    export interface DescribeReportCreationInput {
    }
    export namespace DescribeReportCreationInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeReportCreationInput) => any;
    }
    export interface DescribeReportCreationOutput {
            /**
                * <p>Reports the status of the operation.</p>
                *         <p>The operation status can be one of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>RUNNING</code> - Report creation is in progress.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>SUCCEEDED</code> - Report creation is complete. You can open the report
                *                     from the Amazon S3 bucket that you specified when you ran
                *                         <code>StartReportCreation</code>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>FAILED</code> - Report creation timed out or the Amazon S3 bucket is not
                *                     accessible. </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>NO REPORT</code> - No report was generated in the last 90 days.</p>
                *             </li>
                *          </ul>
                */
            Status?: string;
            /**
                * <p>The path to the Amazon S3 bucket where the report was stored on creation.</p>
                */
            S3Location?: string;
            /**
                * <p>The date and time that the report was started. </p>
                */
            StartDate?: string;
            /**
                * <p>Details of the common errors that all operations return.</p>
                */
            ErrorMessage?: string;
    }
    export namespace DescribeReportCreationOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeReportCreationOutput) => any;
    }
    /**
        * <p>The request processing failed because of an unknown error, exception, or failure. You
        *             can retry the request.</p>
        */
    export class InternalServiceException extends __BaseException {
            readonly name: "InternalServiceException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServiceException, __BaseException>);
    }
    /**
        * <p>This error indicates one of the following:</p>
        *         <ul>
        *             <li>
        *                 <p>A parameter is missing.</p>
        *             </li>
        *             <li>
        *                 <p>A malformed string was supplied for the request parameter.</p>
        *             </li>
        *             <li>
        *                 <p>An out-of-range value was supplied for the request parameter.</p>
        *             </li>
        *             <li>
        *                 <p>The target ID is invalid, unsupported, or doesn't exist.</p>
        *             </li>
        *             <li>
        *                 <p>You can't access the Amazon S3 bucket for report storage. For more information, see
        *                         <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies-prereqs.html#bucket-policies-org-report">Additional Requirements for Organization-wide Tag Compliance
        *                         Reports</a> in the <i>Organizations User Guide.</i>
        *                </p>
        *             </li>
        *          </ul>
        */
    export class InvalidParameterException extends __BaseException {
            readonly name: "InvalidParameterException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
    }
    /**
        * <p>The request was denied to limit the frequency of submitted requests.</p>
        */
    export class ThrottledException extends __BaseException {
            readonly name: "ThrottledException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottledException, __BaseException>);
    }
    export enum ErrorCode {
            INTERNAL_SERVICE_EXCEPTION = "InternalServiceException",
            INVALID_PARAMETER_EXCEPTION = "InvalidParameterException"
    }
    /**
        * <p>Information about the errors that are returned for each failed resource. This
        *             information can include <code>InternalServiceException</code> and
        *                 <code>InvalidParameterException</code> errors. It can also include any valid error
        *             code returned by the Amazon Web Services service that hosts the resource that the ARN key
        *             represents.</p>
        *         <p>The following are common error codes that you might receive from other Amazon Web Services
        *             services:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <b>InternalServiceException</b> – This can
        *                     mean that the Resource Groups Tagging API didn't receive a response from another Amazon Web Services service. It
        *                     can also mean that the resource type in the request is not supported by the
        *                     Resource Groups Tagging API. In these cases, it's safe to retry the request and then call <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a> to verify the changes.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <b>AccessDeniedException</b> – This can mean
        *                     that you need permission to call the tagging operations in the Amazon Web Services service
        *                     that contains the resource. For example, to use the Resource Groups Tagging API to tag a Amazon CloudWatch
        *                     alarm resource, you need permission to call both <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html">
        *                      <code>TagResources</code>
        *                   </a>
        *                     <i>and</i>
        *                     <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">
        *                      <code>TagResource</code>
        *                   </a> in the CloudWatch API. </p>
        *             </li>
        *          </ul>
        *         <p>For more information on errors that are generated from other Amazon Web Services services, see the
        *             documentation for that service. </p>
        */
    export interface FailureInfo {
            /**
                * <p>The HTTP status code of the common error.</p>
                */
            StatusCode?: number;
            /**
                * <p>The code of the common error. Valid values include
                *                 <code>InternalServiceException</code>, <code>InvalidParameterException</code>, and
                *             any valid error code returned by the Amazon Web Services service that hosts the resource that you want
                *             to tag.</p>
                */
            ErrorCode?: ErrorCode | string;
            /**
                * <p>The message of the common error.</p>
                */
            ErrorMessage?: string;
    }
    export namespace FailureInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FailureInfo) => any;
    }
    export enum GroupByAttribute {
            REGION = "REGION",
            RESOURCE_TYPE = "RESOURCE_TYPE",
            TARGET_ID = "TARGET_ID"
    }
    export interface GetComplianceSummaryInput {
            /**
                * <p>Specifies target identifiers (usually, specific account IDs) to limit the output by.
                *             If you use this parameter, the count of returned noncompliant resources includes only
                *             resources with the specified target IDs.</p>
                */
            TargetIdFilters?: string[];
            /**
                * <p>Specifies a list of Amazon Web Services Regions to limit the output to. If you use this parameter,
                *             the count of returned noncompliant resources includes only resources in the specified
                *             Regions.</p>
                */
            RegionFilters?: string[];
            /**
                * <p>Specifies that you want the response to include information for only resources of the
                *             specified types. The format of each resource type is
                *             <code>service[:resourceType]</code>. For example, specifying a resource type of
                *                 <code>ec2</code> returns all Amazon EC2 resources (which includes EC2 instances).
                *             Specifying a resource type of <code>ec2:instance</code> returns only EC2
                *             instances.</p>
                *         <p>The string for each service name and resource type is the same as that embedded in a
                *             resource's Amazon Resource Name (ARN). Consult the <i>
                *                <a href="https://docs.aws.amazon.com/general/latest/gr/">Amazon Web Services General Reference</a>
                *             </i>
                *             for the following:</p>
                *         <ul>
                *             <li>
                *                 <p>For a list of service name strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a>.</p>
                *             </li>
                *             <li>
                *                 <p>For resource type strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax">Example
                *                         ARNs</a>.</p>
                *             </li>
                *             <li>
                *                 <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names
                *                         (ARNs) and Amazon Web Services Service Namespaces</a>.</p>
                *             </li>
                *          </ul>
                *         <p>You can specify multiple resource types by using a comma separated array. The array
                *             can include up to 100 items. Note that the length constraint requirement applies to each
                *             resource type filter. </p>
                */
            ResourceTypeFilters?: string[];
            /**
                * <p>Specifies that you want the response to include information for only resources that
                *             have tags with the specified tag keys. If you use this parameter, the count of returned
                *             noncompliant resources includes only resources that have the specified tag keys.</p>
                */
            TagKeyFilters?: string[];
            /**
                * <p>Specifies a list of attributes to group the counts of noncompliant resources by. If
                *             supplied, the counts are sorted by those attributes.</p>
                */
            GroupBy?: (GroupByAttribute | string)[];
            /**
                * <p>Specifies the maximum number of results to be returned in each page. A
                *     query can return fewer than this maximum, even if there are more results still to return. You
                *     should always check the <code>PaginationToken</code> response value to see if there are more
                *     results. You can specify a minimum of 1 and a maximum value of 100.</p>
                */
            MaxResults?: number;
            /**
                * <p>Specifies a <code>PaginationToken</code> response value from a
                *     previous request to indicate that you want the next page of results. Leave this parameter empty
                *     in your initial request.</p>
                */
            PaginationToken?: string;
    }
    export namespace GetComplianceSummaryInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetComplianceSummaryInput) => any;
    }
    export enum TargetIdType {
            ACCOUNT = "ACCOUNT",
            OU = "OU",
            ROOT = "ROOT"
    }
    /**
        * <p>A count of noncompliant resources.</p>
        */
    export interface Summary {
            /**
                * <p>The timestamp that shows when this summary was generated in this Region. </p>
                */
            LastUpdated?: string;
            /**
                * <p>The account identifier or the root identifier of the organization. If you don't know
                *             the root ID, you can call the Organizations <a href="https://docs.aws.amazon.com/organizations/latest/APIReference/API_ListRoots.html">ListRoots</a> API.</p>
                */
            TargetId?: string;
            /**
                * <p>Whether the target is an account, an OU, or the organization root.</p>
                */
            TargetIdType?: TargetIdType | string;
            /**
                * <p>The Amazon Web Services Region that the summary applies to.</p>
                */
            Region?: string;
            /**
                * <p>The Amazon Web Services resource type.</p>
                */
            ResourceType?: string;
            /**
                * <p>The count of noncompliant resources.</p>
                */
            NonCompliantResources?: number;
    }
    export namespace Summary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Summary) => any;
    }
    export interface GetComplianceSummaryOutput {
            /**
                * <p>A table that shows counts of noncompliant resources.</p>
                */
            SummaryList?: Summary[];
            /**
                * <p>A string that indicates that there is more data available than this
                *     response contains. To receive the next part of the response, specify this response value
                *     as the <code>PaginationToken</code> value in the request for the next page.</p>
                */
            PaginationToken?: string;
    }
    export namespace GetComplianceSummaryOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetComplianceSummaryOutput) => any;
    }
    /**
        * <p>A list of tags (keys and values) that are used to specify the associated
        *             resources.</p>
        */
    export interface TagFilter {
            /**
                * <p>One part of a key-value pair that makes up a tag. A key is a general label
                *     that acts like a category for more specific tag values.</p>
                */
            Key?: string;
            /**
                * <p>One part of a key-value pair that make up a tag. A value acts as a
                *     descriptor within a tag category (key). The value can be empty or null.</p>
                */
            Values?: string[];
    }
    export namespace TagFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagFilter) => any;
    }
    export interface GetResourcesInput {
            /**
                * <p>Specifies a <code>PaginationToken</code> response value from a
                *     previous request to indicate that you want the next page of results. Leave this parameter empty
                *     in your initial request.</p>
                */
            PaginationToken?: string;
            /**
                * <p>Specifies a list of TagFilters (keys and values) to restrict the output to only those
                *             resources that have tags with the specified keys and, if included, the specified values.
                *             Each <code>TagFilter</code> must contain a key with values optional. A request can
                *             include up to 50 keys, and each key can include up to 20 values. </p>
                *         <p>Note the following when deciding how to use TagFilters:</p>
                *         <ul>
                *             <li>
                *                 <p>If you <i>don't</i> specify a <code>TagFilter</code>, the
                *                     response includes all resources that are currently tagged or ever had a tag.
                *                     Resources that currently don't have tags are shown with an empty tag set, like
                *                     this: <code>"Tags": []</code>.</p>
                *             </li>
                *             <li>
                *                 <p>If you specify more than one filter in a single request, the response returns
                *                     only those resources that satisfy all filters.</p>
                *             </li>
                *             <li>
                *                 <p>If you specify a filter that contains more than one value for a key, the
                *                     response returns resources that match <i>any</i> of the specified
                *                     values for that key.</p>
                *             </li>
                *             <li>
                *                 <p>If you don't specify a value for a key, the response returns all resources
                *                     that are tagged with that key, with any or no value.</p>
                *                 <p>For example, for the following filters: <code>filter1= {keyA,{value1}}</code>,
                *                         <code>filter2={keyB,{value2,value3,value4}}</code>, <code>filter3=
                *                         {keyC}</code>:</p>
                *                 <ul>
                *                   <li>
                *                         <p>
                *                         <code>GetResources({filter1})</code> returns resources tagged with
                *                                 <code>key1=value1</code>
                *                      </p>
                *                     </li>
                *                   <li>
                *                         <p>
                *                         <code>GetResources({filter2})</code> returns resources tagged with
                *                                 <code>key2=value2</code> or <code>key2=value3</code> or
                *                                 <code>key2=value4</code>
                *                      </p>
                *                     </li>
                *                   <li>
                *                         <p>
                *                         <code>GetResources({filter3})</code> returns resources tagged with any
                *                             tag with the key <code>key3</code>, and with any or no value</p>
                *                     </li>
                *                   <li>
                *                         <p>
                *                         <code>GetResources({filter1,filter2,filter3})</code> returns resources
                *                             tagged with <code>(key1=value1) and (key2=value2 or key2=value3 or
                *                                 key2=value4) and (key3, any or no value)</code>
                *                      </p>
                *                     </li>
                *                </ul>
                *             </li>
                *          </ul>
                */
            TagFilters?: TagFilter[];
            /**
                * <p>Specifies the maximum number of results to be returned in each page. A
                *     query can return fewer than this maximum, even if there are more results still to return. You
                *     should always check the <code>PaginationToken</code> response value to see if there are more
                *     results. You can specify a minimum of 1 and a maximum value of 100.</p>
                */
            ResourcesPerPage?: number;
            /**
                * <p>Amazon Web Services recommends using <code>ResourcesPerPage</code> instead of this parameter.</p>
                *         <p>A limit that restricts the number of tags (key and value pairs) returned by
                *                 <code>GetResources</code> in paginated output. A resource with no tags is counted as
                *             having one tag (one key and value pair).</p>
                *         <p>
                *             <code>GetResources</code> does not split a resource and its associated tags across
                *             pages. If the specified <code>TagsPerPage</code> would cause such a break, a
                *                 <code>PaginationToken</code> is returned in place of the affected resource and its
                *             tags. Use that token in another request to get the remaining data. For example, if you
                *             specify a <code>TagsPerPage</code> of <code>100</code> and the account has 22 resources
                *             with 10 tags each (meaning that each resource has 10 key and value pairs), the output
                *             will consist of three pages. The first page displays the first 10 resources, each with
                *             its 10 tags. The second page displays the next 10 resources, each with its 10 tags. The
                *             third page displays the remaining 2 resources, each with its 10 tags.</p>
                *         <p>You can set <code>TagsPerPage</code> to a minimum of 100 items up to a maximum of 500
                *             items.</p>
                */
            TagsPerPage?: number;
            /**
                * <p>Specifies the resource types that you want included in the response. The format of
                *             each resource type is <code>service[:resourceType]</code>. For example, specifying a
                *             resource type of <code>ec2</code> returns all Amazon EC2 resources (which includes EC2
                *             instances). Specifying a resource type of <code>ec2:instance</code> returns only EC2
                *             instances. </p>
                *         <p>The string for each service name and resource type is the same as that embedded in a
                *             resource's Amazon Resource Name (ARN). For the list of services whose resources you can
                *             use in this parameter, see <a href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html">Services that support the Resource Groups Tagging API</a>.</p>
                *         <p>You can specify multiple resource types by using an array. The array can include up to
                *             100 items. Note that the length constraint requirement applies to each resource type
                *             filter. For example, the following string would limit the response to only Amazon EC2
                *             instances, Amazon S3 buckets, or any Audit Manager resource:</p>
                *         <p>
                *             <code>ec2:instance,s3:bucket,auditmanager</code>
                *          </p>
                */
            ResourceTypeFilters?: string[];
            /**
                * <p>Specifies whether to include details regarding the compliance with the effective tag
                *             policy. Set this to <code>true</code> to determine whether resources are compliant with
                *             the tag policy and to get details.</p>
                */
            IncludeComplianceDetails?: boolean;
            /**
                * <p>Specifies whether to exclude resources that are compliant with the tag policy. Set
                *             this to <code>true</code> if you are interested in retrieving information on
                *             noncompliant resources only.</p>
                *         <p>You can use this parameter only if the <code>IncludeComplianceDetails</code> parameter
                *             is also set to <code>true</code>.</p>
                */
            ExcludeCompliantResources?: boolean;
            /**
                * <p>Specifies a list of ARNs of resources for which you want to retrieve tag data. You
                *             can't specify both this parameter and any of the pagination parameters
                *                 (<code>ResourcesPerPage</code>, <code>TagsPerPage</code>,
                *                 <code>PaginationToken</code>) in the same request. If you specify both, you get an
                *                 <code>Invalid Parameter</code> exception.</p>
                *         <p>If a resource specified by this parameter doesn't exist, it doesn't generate an error;
                *             it simply isn't included in the response.</p>
                *         <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information,
                *             see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                *                 Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the
                *                 <i>Amazon Web Services General Reference</i>.</p>
                */
            ResourceARNList?: string[];
    }
    export namespace GetResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourcesInput) => any;
    }
    /**
        * <p>The metadata that you apply to Amazon Web Services resources to help you categorize and organize
        *             them. Each tag consists of a key and a value, both of which you define. For more
        *             information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General Reference</i>.</p>
        */
    export interface Tag {
            /**
                * <p>One part of a key-value pair that makes up a tag. A key is a general label
                *     that acts like a category for more specific tag values.</p>
                */
            Key: string | undefined;
            /**
                * <p>One part of a key-value pair that make up a tag. A value acts as a
                *     descriptor within a tag category (key). The value can be empty or null.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    /**
        * <p>A list of resource ARNs and the tags (keys and values) that are associated with
        *             each.</p>
        */
    export interface ResourceTagMapping {
            /**
                * <p>The ARN of the resource.</p>
                */
            ResourceARN?: string;
            /**
                * <p>The tags that have been applied to one or more Amazon Web Services resources.</p>
                */
            Tags?: Tag[];
            /**
                * <p>Information that shows whether a resource is compliant with the effective tag policy,
                *             including details on any noncompliant tag keys.</p>
                */
            ComplianceDetails?: ComplianceDetails;
    }
    export namespace ResourceTagMapping {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceTagMapping) => any;
    }
    export interface GetResourcesOutput {
            /**
                * <p>A string that indicates that there is more data available than this
                *     response contains. To receive the next part of the response, specify this response value
                *     as the <code>PaginationToken</code> value in the request for the next page.</p>
                */
            PaginationToken?: string;
            /**
                * <p>A list of resource ARNs and the tags (keys and values) associated with
                *     each.</p>
                */
            ResourceTagMappingList?: ResourceTagMapping[];
    }
    export namespace GetResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourcesOutput) => any;
    }
    /**
        * <p>A <code>PaginationToken</code> is valid for a maximum of 15 minutes. Your request was
        *             denied because the specified <code>PaginationToken</code> has expired.</p>
        */
    export class PaginationTokenExpiredException extends __BaseException {
            readonly name: "PaginationTokenExpiredException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<PaginationTokenExpiredException, __BaseException>);
    }
    export interface GetTagKeysInput {
            /**
                * <p>Specifies a <code>PaginationToken</code> response value from a
                *     previous request to indicate that you want the next page of results. Leave this parameter empty
                *     in your initial request.</p>
                */
            PaginationToken?: string;
    }
    export namespace GetTagKeysInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTagKeysInput) => any;
    }
    export interface GetTagKeysOutput {
            /**
                * <p>A string that indicates that there is more data available than this
                *     response contains. To receive the next part of the response, specify this response value
                *     as the <code>PaginationToken</code> value in the request for the next page.</p>
                */
            PaginationToken?: string;
            /**
                * <p>A list of all tag keys in the Amazon Web Services account.</p>
                */
            TagKeys?: string[];
    }
    export namespace GetTagKeysOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTagKeysOutput) => any;
    }
    export interface GetTagValuesInput {
            /**
                * <p>Specifies a <code>PaginationToken</code> response value from a
                *     previous request to indicate that you want the next page of results. Leave this parameter empty
                *     in your initial request.</p>
                */
            PaginationToken?: string;
            /**
                * <p>Specifies the tag key for which you want to list all existing values that are
                *             currently used in the specified Amazon Web Services Region for the calling account.</p>
                */
            Key: string | undefined;
    }
    export namespace GetTagValuesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTagValuesInput) => any;
    }
    export interface GetTagValuesOutput {
            /**
                * <p>A string that indicates that there is more data available than this
                *     response contains. To receive the next part of the response, specify this response value
                *     as the <code>PaginationToken</code> value in the request for the next page.</p>
                */
            PaginationToken?: string;
            /**
                * <p>A list of all tag values for the specified key currently used in the specified Amazon Web Services
                *             Region for the calling account.</p>
                */
            TagValues?: string[];
    }
    export namespace GetTagValuesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTagValuesOutput) => any;
    }
    export interface StartReportCreationInput {
            /**
                * <p>The name of the Amazon S3 bucket where the report will be stored; for example:</p>
                *         <p>
                *             <code>awsexamplebucket</code>
                *          </p>
                *         <p>For more information on S3 bucket requirements, including an example bucket policy,
                *             see the example S3 bucket policy on this page.</p>
                */
            S3Bucket: string | undefined;
    }
    export namespace StartReportCreationInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartReportCreationInput) => any;
    }
    export interface StartReportCreationOutput {
    }
    export namespace StartReportCreationOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartReportCreationOutput) => any;
    }
    export interface TagResourcesInput {
            /**
                * <p>Specifies the list of ARNs of the resources that you want to apply tags to.</p>
                *         <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information,
                *             see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                *                 Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services
                *                 General Reference</i>.</p>
                */
            ResourceARNList: string[] | undefined;
            /**
                * <p>Specifies a list of tags that you want to add to the specified resources. A tag
                *             consists of a key and a value that you define.</p>
                */
            Tags: Record<string, string> | undefined;
    }
    export namespace TagResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourcesInput) => any;
    }
    export interface TagResourcesOutput {
            /**
                * <p>A map containing a key-value pair for each failed item that couldn't be tagged. The
                *             key is the ARN of the failed resource. The value is a <code>FailureInfo</code> object
                *             that contains an error code, a status code, and an error message. If there are no
                *             errors, the <code>FailedResourcesMap</code> is empty.</p>
                */
            FailedResourcesMap?: Record<string, FailureInfo>;
    }
    export namespace TagResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourcesOutput) => any;
    }
    export interface UntagResourcesInput {
            /**
                * <p>Specifies a list of ARNs of the resources that you want to remove tags from.</p>
                *         <p>An ARN (Amazon Resource Name) uniquely identifies a resource. For more information,
                *             see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                *                 Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services
                *                 General Reference</i>.</p>
                */
            ResourceARNList: string[] | undefined;
            /**
                * <p>Specifies a list of tag keys that you want to remove from the specified
                *             resources.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourcesInput) => any;
    }
    export interface UntagResourcesOutput {
            /**
                * <p>A map containing a key-value pair for each failed item that couldn't be untagged. The
                *             key is the ARN of the failed resource. The value is a <code>FailureInfo</code> object
                *             that contains an error code, a status code, and an error message. If there are no
                *             errors, the <code>FailedResourcesMap</code> is empty.</p>
                */
            FailedResourcesMap?: Record<string, FailureInfo>;
    }
    export namespace UntagResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourcesOutput) => any;
    }
}

declare module '@aws-sdk/client-resource-groups-tagging-api/node_modules/@aws-sdk/client-resource-groups-tagging-api/dist-types/models/ResourceGroupsTaggingAPIServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from ResourceGroupsTaggingAPI service.
        */
    export class ResourceGroupsTaggingAPIServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

