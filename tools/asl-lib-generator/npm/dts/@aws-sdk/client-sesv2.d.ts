// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-sesv2' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateConfigurationSetCommandInput, CreateConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetCommand";
    import { CreateConfigurationSetEventDestinationCommandInput, CreateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetEventDestinationCommand";
    import { CreateContactCommandInput, CreateContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactCommand";
    import { CreateContactListCommandInput, CreateContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactListCommand";
    import { CreateCustomVerificationEmailTemplateCommandInput, CreateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateCustomVerificationEmailTemplateCommand";
    import { CreateDedicatedIpPoolCommandInput, CreateDedicatedIpPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDedicatedIpPoolCommand";
    import { CreateDeliverabilityTestReportCommandInput, CreateDeliverabilityTestReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDeliverabilityTestReportCommand";
    import { CreateEmailIdentityCommandInput, CreateEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityCommand";
    import { CreateEmailIdentityPolicyCommandInput, CreateEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityPolicyCommand";
    import { CreateEmailTemplateCommandInput, CreateEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailTemplateCommand";
    import { CreateImportJobCommandInput, CreateImportJobCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateImportJobCommand";
    import { DeleteConfigurationSetCommandInput, DeleteConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetCommand";
    import { DeleteConfigurationSetEventDestinationCommandInput, DeleteConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetEventDestinationCommand";
    import { DeleteContactCommandInput, DeleteContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactCommand";
    import { DeleteContactListCommandInput, DeleteContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactListCommand";
    import { DeleteCustomVerificationEmailTemplateCommandInput, DeleteCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteCustomVerificationEmailTemplateCommand";
    import { DeleteDedicatedIpPoolCommandInput, DeleteDedicatedIpPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteDedicatedIpPoolCommand";
    import { DeleteEmailIdentityCommandInput, DeleteEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityCommand";
    import { DeleteEmailIdentityPolicyCommandInput, DeleteEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityPolicyCommand";
    import { DeleteEmailTemplateCommandInput, DeleteEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailTemplateCommand";
    import { DeleteSuppressedDestinationCommandInput, DeleteSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteSuppressedDestinationCommand";
    import { GetAccountCommandInput, GetAccountCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetAccountCommand";
    import { GetBlacklistReportsCommandInput, GetBlacklistReportsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetBlacklistReportsCommand";
    import { GetConfigurationSetCommandInput, GetConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetCommand";
    import { GetConfigurationSetEventDestinationsCommandInput, GetConfigurationSetEventDestinationsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetEventDestinationsCommand";
    import { GetContactCommandInput, GetContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactCommand";
    import { GetContactListCommandInput, GetContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactListCommand";
    import { GetCustomVerificationEmailTemplateCommandInput, GetCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetCustomVerificationEmailTemplateCommand";
    import { GetDedicatedIpCommandInput, GetDedicatedIpCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpCommand";
    import { GetDedicatedIpsCommandInput, GetDedicatedIpsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpsCommand";
    import { GetDeliverabilityDashboardOptionsCommandInput, GetDeliverabilityDashboardOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityDashboardOptionsCommand";
    import { GetDeliverabilityTestReportCommandInput, GetDeliverabilityTestReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityTestReportCommand";
    import { GetDomainDeliverabilityCampaignCommandInput, GetDomainDeliverabilityCampaignCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainDeliverabilityCampaignCommand";
    import { GetDomainStatisticsReportCommandInput, GetDomainStatisticsReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainStatisticsReportCommand";
    import { GetEmailIdentityCommandInput, GetEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityCommand";
    import { GetEmailIdentityPoliciesCommandInput, GetEmailIdentityPoliciesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityPoliciesCommand";
    import { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailTemplateCommand";
    import { GetImportJobCommandInput, GetImportJobCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetImportJobCommand";
    import { GetSuppressedDestinationCommandInput, GetSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetSuppressedDestinationCommand";
    import { ListConfigurationSetsCommandInput, ListConfigurationSetsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListConfigurationSetsCommand";
    import { ListContactListsCommandInput, ListContactListsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactListsCommand";
    import { ListContactsCommandInput, ListContactsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactsCommand";
    import { ListCustomVerificationEmailTemplatesCommandInput, ListCustomVerificationEmailTemplatesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListCustomVerificationEmailTemplatesCommand";
    import { ListDedicatedIpPoolsCommandInput, ListDedicatedIpPoolsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDedicatedIpPoolsCommand";
    import { ListDeliverabilityTestReportsCommandInput, ListDeliverabilityTestReportsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDeliverabilityTestReportsCommand";
    import { ListDomainDeliverabilityCampaignsCommandInput, ListDomainDeliverabilityCampaignsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDomainDeliverabilityCampaignsCommand";
    import { ListEmailIdentitiesCommandInput, ListEmailIdentitiesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailIdentitiesCommand";
    import { ListEmailTemplatesCommandInput, ListEmailTemplatesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailTemplatesCommand";
    import { ListImportJobsCommandInput, ListImportJobsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListImportJobsCommand";
    import { ListSuppressedDestinationsCommandInput, ListSuppressedDestinationsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListSuppressedDestinationsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListTagsForResourceCommand";
    import { PutAccountDedicatedIpWarmupAttributesCommandInput, PutAccountDedicatedIpWarmupAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDedicatedIpWarmupAttributesCommand";
    import { PutAccountDetailsCommandInput, PutAccountDetailsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDetailsCommand";
    import { PutAccountSendingAttributesCommandInput, PutAccountSendingAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSendingAttributesCommand";
    import { PutAccountSuppressionAttributesCommandInput, PutAccountSuppressionAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSuppressionAttributesCommand";
    import { PutConfigurationSetDeliveryOptionsCommandInput, PutConfigurationSetDeliveryOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetDeliveryOptionsCommand";
    import { PutConfigurationSetReputationOptionsCommandInput, PutConfigurationSetReputationOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetReputationOptionsCommand";
    import { PutConfigurationSetSendingOptionsCommandInput, PutConfigurationSetSendingOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSendingOptionsCommand";
    import { PutConfigurationSetSuppressionOptionsCommandInput, PutConfigurationSetSuppressionOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSuppressionOptionsCommand";
    import { PutConfigurationSetTrackingOptionsCommandInput, PutConfigurationSetTrackingOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetTrackingOptionsCommand";
    import { PutDedicatedIpInPoolCommandInput, PutDedicatedIpInPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpInPoolCommand";
    import { PutDedicatedIpWarmupAttributesCommandInput, PutDedicatedIpWarmupAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpWarmupAttributesCommand";
    import { PutDeliverabilityDashboardOptionCommandInput, PutDeliverabilityDashboardOptionCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDeliverabilityDashboardOptionCommand";
    import { PutEmailIdentityConfigurationSetAttributesCommandInput, PutEmailIdentityConfigurationSetAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityConfigurationSetAttributesCommand";
    import { PutEmailIdentityDkimAttributesCommandInput, PutEmailIdentityDkimAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimAttributesCommand";
    import { PutEmailIdentityDkimSigningAttributesCommandInput, PutEmailIdentityDkimSigningAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimSigningAttributesCommand";
    import { PutEmailIdentityFeedbackAttributesCommandInput, PutEmailIdentityFeedbackAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityFeedbackAttributesCommand";
    import { PutEmailIdentityMailFromAttributesCommandInput, PutEmailIdentityMailFromAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityMailFromAttributesCommand";
    import { PutSuppressedDestinationCommandInput, PutSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutSuppressedDestinationCommand";
    import { SendBulkEmailCommandInput, SendBulkEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendBulkEmailCommand";
    import { SendCustomVerificationEmailCommandInput, SendCustomVerificationEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendCustomVerificationEmailCommand";
    import { SendEmailCommandInput, SendEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendEmailCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TagResourceCommand";
    import { TestRenderEmailTemplateCommandInput, TestRenderEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TestRenderEmailTemplateCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UntagResourceCommand";
    import { UpdateConfigurationSetEventDestinationCommandInput, UpdateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateConfigurationSetEventDestinationCommand";
    import { UpdateContactCommandInput, UpdateContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactCommand";
    import { UpdateContactListCommandInput, UpdateContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactListCommand";
    import { UpdateCustomVerificationEmailTemplateCommandInput, UpdateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateCustomVerificationEmailTemplateCommand";
    import { UpdateEmailIdentityPolicyCommandInput, UpdateEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailIdentityPolicyCommand";
    import { UpdateEmailTemplateCommandInput, UpdateEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailTemplateCommand";
    import { SESv2Client } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    /**
        * <fullname>Amazon SES API v2</fullname>
        *
        *         <p>
        *             <a href="http://aws.amazon.com/ses">Amazon SES</a> is an Amazon Web Services service that
        *             you can use to send email messages to your customers.</p>
        *         <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/">Amazon Simple Email Service Developer
        *                 Guide</a>. The <i>Amazon SES Developer Guide</i> provides information
        *             and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
        */
    export class SESv2 extends SESv2Client {
            /**
                * <p>Create a configuration set. <i>Configuration sets</i> are groups of
                *             rules that you can apply to the emails that you send. You apply a configuration set to
                *             an email by specifying the name of the configuration set when you call the Amazon SES API v2. When
                *             you apply a configuration set to an email, all of the rules in that configuration set
                *             are applied to the email. </p>
                */
            createConfigurationSet(args: CreateConfigurationSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateConfigurationSetCommandOutput>;
            createConfigurationSet(args: CreateConfigurationSetCommandInput, cb: (err: any, data?: CreateConfigurationSetCommandOutput) => void): void;
            createConfigurationSet(args: CreateConfigurationSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateConfigurationSetCommandOutput) => void): void;
            /**
                * <p>Create an event destination. <i>Events</i> include message sends,
                *             deliveries, opens, clicks, bounces, and complaints. <i>Event
                *                 destinations</i> are places that you can send information about these events
                *             to. For example, you can send event data to Amazon SNS to receive notifications when you
                *             receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term
                *             storage.</p>
                *         <p>A single configuration set can include more than one event destination.</p>
                */
            createConfigurationSetEventDestination(args: CreateConfigurationSetEventDestinationCommandInput, options?: __HttpHandlerOptions): Promise<CreateConfigurationSetEventDestinationCommandOutput>;
            createConfigurationSetEventDestination(args: CreateConfigurationSetEventDestinationCommandInput, cb: (err: any, data?: CreateConfigurationSetEventDestinationCommandOutput) => void): void;
            createConfigurationSetEventDestination(args: CreateConfigurationSetEventDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateConfigurationSetEventDestinationCommandOutput) => void): void;
            /**
                * <p>Creates a contact, which is an end-user who is receiving the email, and adds them to a
                *             contact list.</p>
                */
            createContact(args: CreateContactCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactCommandOutput>;
            createContact(args: CreateContactCommandInput, cb: (err: any, data?: CreateContactCommandOutput) => void): void;
            createContact(args: CreateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactCommandOutput) => void): void;
            /**
                * <p>Creates a contact list.</p>
                */
            createContactList(args: CreateContactListCommandInput, options?: __HttpHandlerOptions): Promise<CreateContactListCommandOutput>;
            createContactList(args: CreateContactListCommandInput, cb: (err: any, data?: CreateContactListCommandOutput) => void): void;
            createContactList(args: CreateContactListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContactListCommandOutput) => void): void;
            /**
                * <p>Creates a new custom verification email template.</p>
                *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            createCustomVerificationEmailTemplate(args: CreateCustomVerificationEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateCustomVerificationEmailTemplateCommandOutput>;
            createCustomVerificationEmailTemplate(args: CreateCustomVerificationEmailTemplateCommandInput, cb: (err: any, data?: CreateCustomVerificationEmailTemplateCommandOutput) => void): void;
            createCustomVerificationEmailTemplate(args: CreateCustomVerificationEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCustomVerificationEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Create a new pool of dedicated IP addresses. A pool can include one or more dedicated
                *             IP addresses that are associated with your Amazon Web Services account. You can associate a pool with
                *             a configuration set. When you send an email that uses that configuration set, the
                *             message is sent from one of the addresses in the associated pool.</p>
                */
            createDedicatedIpPool(args: CreateDedicatedIpPoolCommandInput, options?: __HttpHandlerOptions): Promise<CreateDedicatedIpPoolCommandOutput>;
            createDedicatedIpPool(args: CreateDedicatedIpPoolCommandInput, cb: (err: any, data?: CreateDedicatedIpPoolCommandOutput) => void): void;
            createDedicatedIpPool(args: CreateDedicatedIpPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDedicatedIpPoolCommandOutput) => void): void;
            /**
                * <p>Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled
                *             by various email providers around the world. When you perform a predictive inbox placement test, you provide a
                *             sample message that contains the content that you plan to send to your customers. Amazon SES
                *             then sends that message to special email addresses spread across several major email
                *             providers. After about 24 hours, the test is complete, and you can use the
                *                 <code>GetDeliverabilityTestReport</code> operation to view the results of the
                *             test.</p>
                */
            createDeliverabilityTestReport(args: CreateDeliverabilityTestReportCommandInput, options?: __HttpHandlerOptions): Promise<CreateDeliverabilityTestReportCommandOutput>;
            createDeliverabilityTestReport(args: CreateDeliverabilityTestReportCommandInput, cb: (err: any, data?: CreateDeliverabilityTestReportCommandOutput) => void): void;
            createDeliverabilityTestReport(args: CreateDeliverabilityTestReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDeliverabilityTestReportCommandOutput) => void): void;
            /**
                * <p>Starts the process of verifying an email identity. An <i>identity</i> is
                *             an email address or domain that you use when you send email. Before you can use an
                *             identity to send email, you first have to verify it. By verifying an identity, you
                *             demonstrate that you're the owner of the identity, and that you've given Amazon SES API v2
                *             permission to send email from the identity.</p>
                *         <p>When you verify an email address, Amazon SES sends an email to the address. Your email
                *             address is verified as soon as you follow the link in the verification email.
                *
                *         </p>
                *         <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code>
                *             object, this operation provides a set of DKIM tokens. You can convert these tokens into
                *             CNAME records, which you then add to the DNS configuration for your domain. Your domain
                *             is verified when Amazon SES detects these records in the DNS configuration for your domain.
                *             This verification method is known as <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
                *         <p>Alternatively, you can perform the verification process by providing your own
                *             public-private key pair. This verification method is known as Bring Your Own DKIM
                *             (BYODKIM). To use BYODKIM, your call to the <code>CreateEmailIdentity</code> operation
                *             has to include the <code>DkimSigningAttributes</code> object. When you specify this
                *             object, you provide a selector (a component of the DNS record name that identifies the
                *             public key to use for DKIM authentication) and a private key.</p>
                *         <p>When you verify a domain, this operation provides a set of DKIM tokens, which you can
                *             convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your
                *             domain. Your domain is verified when Amazon SES detects these records in the DNS
                *             configuration for your domain. For some DNS providers, it can take 72 hours or more to
                *             complete the domain verification process.</p>
                *         <p>Additionally, you can associate an existing configuration set with the email identity that you're verifying.</p>
                */
            createEmailIdentity(args: CreateEmailIdentityCommandInput, options?: __HttpHandlerOptions): Promise<CreateEmailIdentityCommandOutput>;
            createEmailIdentity(args: CreateEmailIdentityCommandInput, cb: (err: any, data?: CreateEmailIdentityCommandOutput) => void): void;
            createEmailIdentity(args: CreateEmailIdentityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEmailIdentityCommandOutput) => void): void;
            /**
                * <p>Creates the specified sending authorization policy for the given identity (an email
                *         address or a domain).</p>
                *         <note>
                *             <p>This API is for the identity owner only. If you have not verified the identity,
                *                 this API will return an error.</p>
                *         </note>
                *         <p>Sending authorization is a feature that enables an identity owner to authorize other
                *             senders to use its identities. For information about using sending authorization, see
                *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            createEmailIdentityPolicy(args: CreateEmailIdentityPolicyCommandInput, options?: __HttpHandlerOptions): Promise<CreateEmailIdentityPolicyCommandOutput>;
            createEmailIdentityPolicy(args: CreateEmailIdentityPolicyCommandInput, cb: (err: any, data?: CreateEmailIdentityPolicyCommandOutput) => void): void;
            createEmailIdentityPolicy(args: CreateEmailIdentityPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEmailIdentityPolicyCommandOutput) => void): void;
            /**
                * <p>Creates an email template. Email templates enable you to send personalized email to
                *             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            createEmailTemplate(args: CreateEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateEmailTemplateCommandOutput>;
            createEmailTemplate(args: CreateEmailTemplateCommandInput, cb: (err: any, data?: CreateEmailTemplateCommandOutput) => void): void;
            createEmailTemplate(args: CreateEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Creates an import job for a data destination.</p>
                */
            createImportJob(args: CreateImportJobCommandInput, options?: __HttpHandlerOptions): Promise<CreateImportJobCommandOutput>;
            createImportJob(args: CreateImportJobCommandInput, cb: (err: any, data?: CreateImportJobCommandOutput) => void): void;
            createImportJob(args: CreateImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateImportJobCommandOutput) => void): void;
            /**
                * <p>Delete an existing configuration set.</p>
                *         <p>
                *             <i>Configuration sets</i> are groups of rules that you can apply to the
                *             emails you send. You apply a configuration set to an email by including a reference to
                *             the configuration set in the headers of the email. When you apply a configuration set to
                *             an email, all of the rules in that configuration set are applied to the email.</p>
                */
            deleteConfigurationSet(args: DeleteConfigurationSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteConfigurationSetCommandOutput>;
            deleteConfigurationSet(args: DeleteConfigurationSetCommandInput, cb: (err: any, data?: DeleteConfigurationSetCommandOutput) => void): void;
            deleteConfigurationSet(args: DeleteConfigurationSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteConfigurationSetCommandOutput) => void): void;
            /**
                * <p>Delete an event destination.</p>
                *         <p>
                *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
                *             and complaints. <i>Event destinations</i> are places that you can send
                *             information about these events to. For example, you can send event data to Amazon SNS to
                *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
                *             stream data to Amazon S3 for long-term storage.</p>
                */
            deleteConfigurationSetEventDestination(args: DeleteConfigurationSetEventDestinationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteConfigurationSetEventDestinationCommandOutput>;
            deleteConfigurationSetEventDestination(args: DeleteConfigurationSetEventDestinationCommandInput, cb: (err: any, data?: DeleteConfigurationSetEventDestinationCommandOutput) => void): void;
            deleteConfigurationSetEventDestination(args: DeleteConfigurationSetEventDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteConfigurationSetEventDestinationCommandOutput) => void): void;
            /**
                * <p>Removes a contact from a contact list.</p>
                */
            deleteContact(args: DeleteContactCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactCommandOutput>;
            deleteContact(args: DeleteContactCommandInput, cb: (err: any, data?: DeleteContactCommandOutput) => void): void;
            deleteContact(args: DeleteContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactCommandOutput) => void): void;
            /**
                * <p>Deletes a contact list and all of the contacts on that list.</p>
                */
            deleteContactList(args: DeleteContactListCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContactListCommandOutput>;
            deleteContactList(args: DeleteContactListCommandInput, cb: (err: any, data?: DeleteContactListCommandOutput) => void): void;
            deleteContactList(args: DeleteContactListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContactListCommandOutput) => void): void;
            /**
                * <p>Deletes an existing custom verification email template.</p>
                *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            deleteCustomVerificationEmailTemplate(args: DeleteCustomVerificationEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteCustomVerificationEmailTemplateCommandOutput>;
            deleteCustomVerificationEmailTemplate(args: DeleteCustomVerificationEmailTemplateCommandInput, cb: (err: any, data?: DeleteCustomVerificationEmailTemplateCommandOutput) => void): void;
            deleteCustomVerificationEmailTemplate(args: DeleteCustomVerificationEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteCustomVerificationEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Delete a dedicated IP pool.</p>
                */
            deleteDedicatedIpPool(args: DeleteDedicatedIpPoolCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDedicatedIpPoolCommandOutput>;
            deleteDedicatedIpPool(args: DeleteDedicatedIpPoolCommandInput, cb: (err: any, data?: DeleteDedicatedIpPoolCommandOutput) => void): void;
            deleteDedicatedIpPool(args: DeleteDedicatedIpPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDedicatedIpPoolCommandOutput) => void): void;
            /**
                * <p>Deletes an email identity. An identity can be either an email address or a domain
                *             name.</p>
                */
            deleteEmailIdentity(args: DeleteEmailIdentityCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEmailIdentityCommandOutput>;
            deleteEmailIdentity(args: DeleteEmailIdentityCommandInput, cb: (err: any, data?: DeleteEmailIdentityCommandOutput) => void): void;
            deleteEmailIdentity(args: DeleteEmailIdentityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEmailIdentityCommandOutput) => void): void;
            /**
                * <p>Deletes the specified sending authorization policy for the given identity (an email
                *             address or a domain). This API returns successfully even if a policy with the specified
                *             name does not exist.</p>
                *         <note>
                *             <p>This API is for the identity owner only. If you have not verified the identity,
                *                 this API will return an error.</p>
                *         </note>
                *         <p>Sending authorization is a feature that enables an identity owner to authorize other
                *             senders to use its identities. For information about using sending authorization, see
                *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            deleteEmailIdentityPolicy(args: DeleteEmailIdentityPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEmailIdentityPolicyCommandOutput>;
            deleteEmailIdentityPolicy(args: DeleteEmailIdentityPolicyCommandInput, cb: (err: any, data?: DeleteEmailIdentityPolicyCommandOutput) => void): void;
            deleteEmailIdentityPolicy(args: DeleteEmailIdentityPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEmailIdentityPolicyCommandOutput) => void): void;
            /**
                * <p>Deletes an email template.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            deleteEmailTemplate(args: DeleteEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEmailTemplateCommandOutput>;
            deleteEmailTemplate(args: DeleteEmailTemplateCommandInput, cb: (err: any, data?: DeleteEmailTemplateCommandOutput) => void): void;
            deleteEmailTemplate(args: DeleteEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Removes an email address from the suppression list for your account.</p>
                */
            deleteSuppressedDestination(args: DeleteSuppressedDestinationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSuppressedDestinationCommandOutput>;
            deleteSuppressedDestination(args: DeleteSuppressedDestinationCommandInput, cb: (err: any, data?: DeleteSuppressedDestinationCommandOutput) => void): void;
            deleteSuppressedDestination(args: DeleteSuppressedDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSuppressedDestinationCommandOutput) => void): void;
            /**
                * <p>Obtain information about the email-sending status and capabilities of your Amazon SES
                *             account in the current Amazon Web Services Region.</p>
                */
            getAccount(args: GetAccountCommandInput, options?: __HttpHandlerOptions): Promise<GetAccountCommandOutput>;
            getAccount(args: GetAccountCommandInput, cb: (err: any, data?: GetAccountCommandOutput) => void): void;
            getAccount(args: GetAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccountCommandOutput) => void): void;
            /**
                * <p>Retrieve a list of the blacklists that your dedicated IP addresses appear on.</p>
                */
            getBlacklistReports(args: GetBlacklistReportsCommandInput, options?: __HttpHandlerOptions): Promise<GetBlacklistReportsCommandOutput>;
            getBlacklistReports(args: GetBlacklistReportsCommandInput, cb: (err: any, data?: GetBlacklistReportsCommandOutput) => void): void;
            getBlacklistReports(args: GetBlacklistReportsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBlacklistReportsCommandOutput) => void): void;
            /**
                * <p>Get information about an existing configuration set, including the dedicated IP pool
                *             that it's associated with, whether or not it's enabled for sending email, and
                *             more.</p>
                *         <p>
                *             <i>Configuration sets</i> are groups of rules that you can apply to the
                *             emails you send. You apply a configuration set to an email by including a reference to
                *             the configuration set in the headers of the email. When you apply a configuration set to
                *             an email, all of the rules in that configuration set are applied to the email.</p>
                */
            getConfigurationSet(args: GetConfigurationSetCommandInput, options?: __HttpHandlerOptions): Promise<GetConfigurationSetCommandOutput>;
            getConfigurationSet(args: GetConfigurationSetCommandInput, cb: (err: any, data?: GetConfigurationSetCommandOutput) => void): void;
            getConfigurationSet(args: GetConfigurationSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetConfigurationSetCommandOutput) => void): void;
            /**
                * <p>Retrieve a list of event destinations that are associated with a configuration
                *             set.</p>
                *         <p>
                *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
                *             and complaints. <i>Event destinations</i> are places that you can send
                *             information about these events to. For example, you can send event data to Amazon SNS to
                *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
                *             stream data to Amazon S3 for long-term storage.</p>
                */
            getConfigurationSetEventDestinations(args: GetConfigurationSetEventDestinationsCommandInput, options?: __HttpHandlerOptions): Promise<GetConfigurationSetEventDestinationsCommandOutput>;
            getConfigurationSetEventDestinations(args: GetConfigurationSetEventDestinationsCommandInput, cb: (err: any, data?: GetConfigurationSetEventDestinationsCommandOutput) => void): void;
            getConfigurationSetEventDestinations(args: GetConfigurationSetEventDestinationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetConfigurationSetEventDestinationsCommandOutput) => void): void;
            /**
                * <p>Returns a contact from a contact list.</p>
                */
            getContact(args: GetContactCommandInput, options?: __HttpHandlerOptions): Promise<GetContactCommandOutput>;
            getContact(args: GetContactCommandInput, cb: (err: any, data?: GetContactCommandOutput) => void): void;
            getContact(args: GetContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContactCommandOutput) => void): void;
            /**
                * <p>Returns contact list metadata. It does not return any information about the contacts
                *             present in the list.</p>
                */
            getContactList(args: GetContactListCommandInput, options?: __HttpHandlerOptions): Promise<GetContactListCommandOutput>;
            getContactList(args: GetContactListCommandInput, cb: (err: any, data?: GetContactListCommandOutput) => void): void;
            getContactList(args: GetContactListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContactListCommandOutput) => void): void;
            /**
                * <p>Returns the custom email verification template for the template name you
                *             specify.</p>
                *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            getCustomVerificationEmailTemplate(args: GetCustomVerificationEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetCustomVerificationEmailTemplateCommandOutput>;
            getCustomVerificationEmailTemplate(args: GetCustomVerificationEmailTemplateCommandInput, cb: (err: any, data?: GetCustomVerificationEmailTemplateCommandOutput) => void): void;
            getCustomVerificationEmailTemplate(args: GetCustomVerificationEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCustomVerificationEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Get information about a dedicated IP address, including the name of the dedicated IP
                *             pool that it's associated with, as well information about the automatic warm-up process
                *             for the address.</p>
                */
            getDedicatedIp(args: GetDedicatedIpCommandInput, options?: __HttpHandlerOptions): Promise<GetDedicatedIpCommandOutput>;
            getDedicatedIp(args: GetDedicatedIpCommandInput, cb: (err: any, data?: GetDedicatedIpCommandOutput) => void): void;
            getDedicatedIp(args: GetDedicatedIpCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDedicatedIpCommandOutput) => void): void;
            /**
                * <p>List the dedicated IP addresses that are associated with your Amazon Web Services
                *             account.</p>
                */
            getDedicatedIps(args: GetDedicatedIpsCommandInput, options?: __HttpHandlerOptions): Promise<GetDedicatedIpsCommandOutput>;
            getDedicatedIps(args: GetDedicatedIpsCommandInput, cb: (err: any, data?: GetDedicatedIpsCommandOutput) => void): void;
            getDedicatedIps(args: GetDedicatedIpsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDedicatedIpsCommandOutput) => void): void;
            /**
                * <p>Retrieve information about the status of the Deliverability dashboard for your account. When
                *             the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other
                *             metrics for the domains that you use to send email. You also gain the ability to perform
                *             predictive inbox placement tests.</p>
                *
                *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
                *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
                *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
                */
            getDeliverabilityDashboardOptions(args: GetDeliverabilityDashboardOptionsCommandInput, options?: __HttpHandlerOptions): Promise<GetDeliverabilityDashboardOptionsCommandOutput>;
            getDeliverabilityDashboardOptions(args: GetDeliverabilityDashboardOptionsCommandInput, cb: (err: any, data?: GetDeliverabilityDashboardOptionsCommandOutput) => void): void;
            getDeliverabilityDashboardOptions(args: GetDeliverabilityDashboardOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDeliverabilityDashboardOptionsCommandOutput) => void): void;
            /**
                * <p>Retrieve the results of a predictive inbox placement test.</p>
                */
            getDeliverabilityTestReport(args: GetDeliverabilityTestReportCommandInput, options?: __HttpHandlerOptions): Promise<GetDeliverabilityTestReportCommandOutput>;
            getDeliverabilityTestReport(args: GetDeliverabilityTestReportCommandInput, cb: (err: any, data?: GetDeliverabilityTestReportCommandOutput) => void): void;
            getDeliverabilityTestReport(args: GetDeliverabilityTestReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDeliverabilityTestReportCommandOutput) => void): void;
            /**
                * <p>Retrieve all the deliverability data for a specific campaign. This data is available
                *             for a campaign only if the campaign sent email by using a domain that the
                *             Deliverability dashboard is enabled for.</p>
                */
            getDomainDeliverabilityCampaign(args: GetDomainDeliverabilityCampaignCommandInput, options?: __HttpHandlerOptions): Promise<GetDomainDeliverabilityCampaignCommandOutput>;
            getDomainDeliverabilityCampaign(args: GetDomainDeliverabilityCampaignCommandInput, cb: (err: any, data?: GetDomainDeliverabilityCampaignCommandOutput) => void): void;
            getDomainDeliverabilityCampaign(args: GetDomainDeliverabilityCampaignCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDomainDeliverabilityCampaignCommandOutput) => void): void;
            /**
                * <p>Retrieve inbox placement and engagement rates for the domains that you use to send
                *             email.</p>
                */
            getDomainStatisticsReport(args: GetDomainStatisticsReportCommandInput, options?: __HttpHandlerOptions): Promise<GetDomainStatisticsReportCommandOutput>;
            getDomainStatisticsReport(args: GetDomainStatisticsReportCommandInput, cb: (err: any, data?: GetDomainStatisticsReportCommandOutput) => void): void;
            getDomainStatisticsReport(args: GetDomainStatisticsReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDomainStatisticsReportCommandOutput) => void): void;
            /**
                * <p>Provides information about a specific identity, including the identity's verification
                *             status, sending authorization policies, its DKIM authentication status, and its custom
                *             Mail-From settings.</p>
                */
            getEmailIdentity(args: GetEmailIdentityCommandInput, options?: __HttpHandlerOptions): Promise<GetEmailIdentityCommandOutput>;
            getEmailIdentity(args: GetEmailIdentityCommandInput, cb: (err: any, data?: GetEmailIdentityCommandOutput) => void): void;
            getEmailIdentity(args: GetEmailIdentityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEmailIdentityCommandOutput) => void): void;
            /**
                * <p>Returns the requested sending authorization policies for the given identity (an email
                *             address or a domain). The policies are returned as a map of policy names to policy
                *             contents. You can retrieve a maximum of 20 policies at a time.</p>
                *         <note>
                *             <p>This API is for the identity owner only. If you have not verified the identity,
                *                 this API will return an error.</p>
                *         </note>
                *         <p>Sending authorization is a feature that enables an identity owner to authorize other
                *             senders to use its identities. For information about using sending authorization, see
                *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            getEmailIdentityPolicies(args: GetEmailIdentityPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<GetEmailIdentityPoliciesCommandOutput>;
            getEmailIdentityPolicies(args: GetEmailIdentityPoliciesCommandInput, cb: (err: any, data?: GetEmailIdentityPoliciesCommandOutput) => void): void;
            getEmailIdentityPolicies(args: GetEmailIdentityPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEmailIdentityPoliciesCommandOutput) => void): void;
            /**
                * <p>Displays the template object (which includes the subject line, HTML part and text
                *             part) for the template you specify.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            getEmailTemplate(args: GetEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetEmailTemplateCommandOutput>;
            getEmailTemplate(args: GetEmailTemplateCommandInput, cb: (err: any, data?: GetEmailTemplateCommandOutput) => void): void;
            getEmailTemplate(args: GetEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Provides information about an import job.</p>
                */
            getImportJob(args: GetImportJobCommandInput, options?: __HttpHandlerOptions): Promise<GetImportJobCommandOutput>;
            getImportJob(args: GetImportJobCommandInput, cb: (err: any, data?: GetImportJobCommandOutput) => void): void;
            getImportJob(args: GetImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetImportJobCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a specific email address that's on the suppression list
                *             for your account.</p>
                */
            getSuppressedDestination(args: GetSuppressedDestinationCommandInput, options?: __HttpHandlerOptions): Promise<GetSuppressedDestinationCommandOutput>;
            getSuppressedDestination(args: GetSuppressedDestinationCommandInput, cb: (err: any, data?: GetSuppressedDestinationCommandOutput) => void): void;
            getSuppressedDestination(args: GetSuppressedDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSuppressedDestinationCommandOutput) => void): void;
            /**
                * <p>List all of the configuration sets associated with your account in the current
                *             region.</p>
                *         <p>
                *             <i>Configuration sets</i> are groups of rules that you can apply to the
                *             emails you send. You apply a configuration set to an email by including a reference to
                *             the configuration set in the headers of the email. When you apply a configuration set to
                *             an email, all of the rules in that configuration set are applied to the email.</p>
                */
            listConfigurationSets(args: ListConfigurationSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListConfigurationSetsCommandOutput>;
            listConfigurationSets(args: ListConfigurationSetsCommandInput, cb: (err: any, data?: ListConfigurationSetsCommandOutput) => void): void;
            listConfigurationSets(args: ListConfigurationSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListConfigurationSetsCommandOutput) => void): void;
            /**
                * <p>Lists all of the contact lists available.</p>
                */
            listContactLists(args: ListContactListsCommandInput, options?: __HttpHandlerOptions): Promise<ListContactListsCommandOutput>;
            listContactLists(args: ListContactListsCommandInput, cb: (err: any, data?: ListContactListsCommandOutput) => void): void;
            listContactLists(args: ListContactListsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactListsCommandOutput) => void): void;
            /**
                * <p>Lists the contacts present in a specific contact list.</p>
                */
            listContacts(args: ListContactsCommandInput, options?: __HttpHandlerOptions): Promise<ListContactsCommandOutput>;
            listContacts(args: ListContactsCommandInput, cb: (err: any, data?: ListContactsCommandOutput) => void): void;
            listContacts(args: ListContactsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContactsCommandOutput) => void): void;
            /**
                * <p>Lists the existing custom verification email templates for your account in the current
                *             Amazon Web Services Region.</p>
                *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            listCustomVerificationEmailTemplates(args: ListCustomVerificationEmailTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListCustomVerificationEmailTemplatesCommandOutput>;
            listCustomVerificationEmailTemplates(args: ListCustomVerificationEmailTemplatesCommandInput, cb: (err: any, data?: ListCustomVerificationEmailTemplatesCommandOutput) => void): void;
            listCustomVerificationEmailTemplates(args: ListCustomVerificationEmailTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCustomVerificationEmailTemplatesCommandOutput) => void): void;
            /**
                * <p>List all of the dedicated IP pools that exist in your Amazon Web Services account in the current
                *             Region.</p>
                */
            listDedicatedIpPools(args: ListDedicatedIpPoolsCommandInput, options?: __HttpHandlerOptions): Promise<ListDedicatedIpPoolsCommandOutput>;
            listDedicatedIpPools(args: ListDedicatedIpPoolsCommandInput, cb: (err: any, data?: ListDedicatedIpPoolsCommandOutput) => void): void;
            listDedicatedIpPools(args: ListDedicatedIpPoolsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDedicatedIpPoolsCommandOutput) => void): void;
            /**
                * <p>Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For
                *             predictive inbox placement tests that are complete, you can use the <code>GetDeliverabilityTestReport</code>
                *             operation to view the results.</p>
                */
            listDeliverabilityTestReports(args: ListDeliverabilityTestReportsCommandInput, options?: __HttpHandlerOptions): Promise<ListDeliverabilityTestReportsCommandOutput>;
            listDeliverabilityTestReports(args: ListDeliverabilityTestReportsCommandInput, cb: (err: any, data?: ListDeliverabilityTestReportsCommandOutput) => void): void;
            listDeliverabilityTestReports(args: ListDeliverabilityTestReportsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDeliverabilityTestReportsCommandOutput) => void): void;
            /**
                * <p>Retrieve deliverability data for all the campaigns that used a specific domain to send
                *             email during a specified time range. This data is available for a domain only if you
                *             enabled the Deliverability dashboard for the domain.</p>
                */
            listDomainDeliverabilityCampaigns(args: ListDomainDeliverabilityCampaignsCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainDeliverabilityCampaignsCommandOutput>;
            listDomainDeliverabilityCampaigns(args: ListDomainDeliverabilityCampaignsCommandInput, cb: (err: any, data?: ListDomainDeliverabilityCampaignsCommandOutput) => void): void;
            listDomainDeliverabilityCampaigns(args: ListDomainDeliverabilityCampaignsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainDeliverabilityCampaignsCommandOutput) => void): void;
            /**
                * <p>Returns a list of all of the email identities that are associated with your Amazon Web Services
                *             account. An identity can be either an email address or a domain. This operation returns
                *             identities that are verified as well as those that aren't. This operation returns
                *             identities that are associated with Amazon SES and Amazon Pinpoint.</p>
                */
            listEmailIdentities(args: ListEmailIdentitiesCommandInput, options?: __HttpHandlerOptions): Promise<ListEmailIdentitiesCommandOutput>;
            listEmailIdentities(args: ListEmailIdentitiesCommandInput, cb: (err: any, data?: ListEmailIdentitiesCommandOutput) => void): void;
            listEmailIdentities(args: ListEmailIdentitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEmailIdentitiesCommandOutput) => void): void;
            /**
                * <p>Lists the email templates present in your Amazon SES account in the current Amazon Web Services
                *             Region.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            listEmailTemplates(args: ListEmailTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListEmailTemplatesCommandOutput>;
            listEmailTemplates(args: ListEmailTemplatesCommandInput, cb: (err: any, data?: ListEmailTemplatesCommandOutput) => void): void;
            listEmailTemplates(args: ListEmailTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEmailTemplatesCommandOutput) => void): void;
            /**
                * <p>Lists all of the import jobs.</p>
                */
            listImportJobs(args: ListImportJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListImportJobsCommandOutput>;
            listImportJobs(args: ListImportJobsCommandInput, cb: (err: any, data?: ListImportJobsCommandOutput) => void): void;
            listImportJobs(args: ListImportJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListImportJobsCommandOutput) => void): void;
            /**
                * <p>Retrieves a list of email addresses that are on the suppression list for your
                *             account.</p>
                */
            listSuppressedDestinations(args: ListSuppressedDestinationsCommandInput, options?: __HttpHandlerOptions): Promise<ListSuppressedDestinationsCommandOutput>;
            listSuppressedDestinations(args: ListSuppressedDestinationsCommandInput, cb: (err: any, data?: ListSuppressedDestinationsCommandOutput) => void): void;
            listSuppressedDestinations(args: ListSuppressedDestinationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSuppressedDestinationsCommandOutput) => void): void;
            /**
                * <p>Retrieve a list of the tags (keys and values) that are associated with a specified
                *             resource. A <i>tag</i> is a label that you optionally define and associate
                *             with a resource. Each tag consists of a required <i>tag key</i> and an
                *             optional associated <i>tag value</i>. A tag key is a general label that
                *             acts as a category for more specific tag values. A tag value acts as a descriptor within
                *             a tag key.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Enable or disable the automatic warm-up feature for dedicated IP addresses.</p>
                */
            putAccountDedicatedIpWarmupAttributes(args: PutAccountDedicatedIpWarmupAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutAccountDedicatedIpWarmupAttributesCommandOutput>;
            putAccountDedicatedIpWarmupAttributes(args: PutAccountDedicatedIpWarmupAttributesCommandInput, cb: (err: any, data?: PutAccountDedicatedIpWarmupAttributesCommandOutput) => void): void;
            putAccountDedicatedIpWarmupAttributes(args: PutAccountDedicatedIpWarmupAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccountDedicatedIpWarmupAttributesCommandOutput) => void): void;
            /**
                * <p>Update your Amazon SES account details.</p>
                */
            putAccountDetails(args: PutAccountDetailsCommandInput, options?: __HttpHandlerOptions): Promise<PutAccountDetailsCommandOutput>;
            putAccountDetails(args: PutAccountDetailsCommandInput, cb: (err: any, data?: PutAccountDetailsCommandOutput) => void): void;
            putAccountDetails(args: PutAccountDetailsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccountDetailsCommandOutput) => void): void;
            /**
                * <p>Enable or disable the ability of your account to send email.</p>
                */
            putAccountSendingAttributes(args: PutAccountSendingAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutAccountSendingAttributesCommandOutput>;
            putAccountSendingAttributes(args: PutAccountSendingAttributesCommandInput, cb: (err: any, data?: PutAccountSendingAttributesCommandOutput) => void): void;
            putAccountSendingAttributes(args: PutAccountSendingAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccountSendingAttributesCommandOutput) => void): void;
            /**
                * <p>Change the settings for the account-level suppression list.</p>
                */
            putAccountSuppressionAttributes(args: PutAccountSuppressionAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutAccountSuppressionAttributesCommandOutput>;
            putAccountSuppressionAttributes(args: PutAccountSuppressionAttributesCommandInput, cb: (err: any, data?: PutAccountSuppressionAttributesCommandOutput) => void): void;
            putAccountSuppressionAttributes(args: PutAccountSuppressionAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccountSuppressionAttributesCommandOutput) => void): void;
            /**
                * <p>Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools
                *             to create groups of dedicated IP addresses for sending specific types of email.</p>
                */
            putConfigurationSetDeliveryOptions(args: PutConfigurationSetDeliveryOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutConfigurationSetDeliveryOptionsCommandOutput>;
            putConfigurationSetDeliveryOptions(args: PutConfigurationSetDeliveryOptionsCommandInput, cb: (err: any, data?: PutConfigurationSetDeliveryOptionsCommandOutput) => void): void;
            putConfigurationSetDeliveryOptions(args: PutConfigurationSetDeliveryOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutConfigurationSetDeliveryOptionsCommandOutput) => void): void;
            /**
                * <p>Enable or disable collection of reputation metrics for emails that you send using a
                *             particular configuration set in a specific Amazon Web Services Region.</p>
                */
            putConfigurationSetReputationOptions(args: PutConfigurationSetReputationOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutConfigurationSetReputationOptionsCommandOutput>;
            putConfigurationSetReputationOptions(args: PutConfigurationSetReputationOptionsCommandInput, cb: (err: any, data?: PutConfigurationSetReputationOptionsCommandOutput) => void): void;
            putConfigurationSetReputationOptions(args: PutConfigurationSetReputationOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutConfigurationSetReputationOptionsCommandOutput) => void): void;
            /**
                * <p>Enable or disable email sending for messages that use a particular configuration set
                *             in a specific Amazon Web Services Region.</p>
                */
            putConfigurationSetSendingOptions(args: PutConfigurationSetSendingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutConfigurationSetSendingOptionsCommandOutput>;
            putConfigurationSetSendingOptions(args: PutConfigurationSetSendingOptionsCommandInput, cb: (err: any, data?: PutConfigurationSetSendingOptionsCommandOutput) => void): void;
            putConfigurationSetSendingOptions(args: PutConfigurationSetSendingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutConfigurationSetSendingOptionsCommandOutput) => void): void;
            /**
                * <p>Specify the account suppression list preferences for a configuration set.</p>
                */
            putConfigurationSetSuppressionOptions(args: PutConfigurationSetSuppressionOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutConfigurationSetSuppressionOptionsCommandOutput>;
            putConfigurationSetSuppressionOptions(args: PutConfigurationSetSuppressionOptionsCommandInput, cb: (err: any, data?: PutConfigurationSetSuppressionOptionsCommandOutput) => void): void;
            putConfigurationSetSuppressionOptions(args: PutConfigurationSetSuppressionOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutConfigurationSetSuppressionOptionsCommandOutput) => void): void;
            /**
                * <p>Specify a custom domain to use for open and click tracking elements in email that you
                *             send.</p>
                */
            putConfigurationSetTrackingOptions(args: PutConfigurationSetTrackingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutConfigurationSetTrackingOptionsCommandOutput>;
            putConfigurationSetTrackingOptions(args: PutConfigurationSetTrackingOptionsCommandInput, cb: (err: any, data?: PutConfigurationSetTrackingOptionsCommandOutput) => void): void;
            putConfigurationSetTrackingOptions(args: PutConfigurationSetTrackingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutConfigurationSetTrackingOptionsCommandOutput) => void): void;
            /**
                * <p>Move a dedicated IP address to an existing dedicated IP pool.</p>
                *         <note>
                *             <p>The dedicated IP address that you specify must already exist, and must be
                *                 associated with your Amazon Web Services account.
                *
                *             </p>
                *             <p>The dedicated IP pool you specify must already exist. You can create a new pool by
                *                 using the <code>CreateDedicatedIpPool</code> operation.</p>
                *
                *         </note>
                */
            putDedicatedIpInPool(args: PutDedicatedIpInPoolCommandInput, options?: __HttpHandlerOptions): Promise<PutDedicatedIpInPoolCommandOutput>;
            putDedicatedIpInPool(args: PutDedicatedIpInPoolCommandInput, cb: (err: any, data?: PutDedicatedIpInPoolCommandOutput) => void): void;
            putDedicatedIpInPool(args: PutDedicatedIpInPoolCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutDedicatedIpInPoolCommandOutput) => void): void;
            /**
                * <p></p>
                */
            putDedicatedIpWarmupAttributes(args: PutDedicatedIpWarmupAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutDedicatedIpWarmupAttributesCommandOutput>;
            putDedicatedIpWarmupAttributes(args: PutDedicatedIpWarmupAttributesCommandInput, cb: (err: any, data?: PutDedicatedIpWarmupAttributesCommandOutput) => void): void;
            putDedicatedIpWarmupAttributes(args: PutDedicatedIpWarmupAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutDedicatedIpWarmupAttributesCommandOutput) => void): void;
            /**
                * <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain
                *             access to reputation, deliverability, and other metrics for the domains that you use to
                *             send email. You also gain the ability to perform predictive inbox placement tests.</p>
                *
                *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
                *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
                *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
                */
            putDeliverabilityDashboardOption(args: PutDeliverabilityDashboardOptionCommandInput, options?: __HttpHandlerOptions): Promise<PutDeliverabilityDashboardOptionCommandOutput>;
            putDeliverabilityDashboardOption(args: PutDeliverabilityDashboardOptionCommandInput, cb: (err: any, data?: PutDeliverabilityDashboardOptionCommandOutput) => void): void;
            putDeliverabilityDashboardOption(args: PutDeliverabilityDashboardOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutDeliverabilityDashboardOptionCommandOutput) => void): void;
            /**
                * <p>Used to associate a configuration set with an email identity.</p>
                */
            putEmailIdentityConfigurationSetAttributes(args: PutEmailIdentityConfigurationSetAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailIdentityConfigurationSetAttributesCommandOutput>;
            putEmailIdentityConfigurationSetAttributes(args: PutEmailIdentityConfigurationSetAttributesCommandInput, cb: (err: any, data?: PutEmailIdentityConfigurationSetAttributesCommandOutput) => void): void;
            putEmailIdentityConfigurationSetAttributes(args: PutEmailIdentityConfigurationSetAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailIdentityConfigurationSetAttributesCommandOutput) => void): void;
            /**
                * <p>Used to enable or disable DKIM authentication for an email identity.</p>
                */
            putEmailIdentityDkimAttributes(args: PutEmailIdentityDkimAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailIdentityDkimAttributesCommandOutput>;
            putEmailIdentityDkimAttributes(args: PutEmailIdentityDkimAttributesCommandInput, cb: (err: any, data?: PutEmailIdentityDkimAttributesCommandOutput) => void): void;
            putEmailIdentityDkimAttributes(args: PutEmailIdentityDkimAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailIdentityDkimAttributesCommandOutput) => void): void;
            /**
                * <p>Used to configure or change the DKIM authentication settings for an email domain
                *             identity. You can use this operation to do any of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>Update the signing attributes for an identity that uses Bring Your Own DKIM
                *                     (BYODKIM).</p>
                *             </li>
                *             <li>
                *                 <p>Update the key length that should be used for Easy DKIM.</p>
                *             </li>
                *             <li>
                *                 <p>Change from using no DKIM authentication to using Easy DKIM.</p>
                *             </li>
                *             <li>
                *                 <p>Change from using no DKIM authentication to using BYODKIM.</p>
                *             </li>
                *             <li>
                *                 <p>Change from using Easy DKIM to using BYODKIM.</p>
                *             </li>
                *             <li>
                *                 <p>Change from using BYODKIM to using Easy DKIM.</p>
                *             </li>
                *          </ul>
                */
            putEmailIdentityDkimSigningAttributes(args: PutEmailIdentityDkimSigningAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailIdentityDkimSigningAttributesCommandOutput>;
            putEmailIdentityDkimSigningAttributes(args: PutEmailIdentityDkimSigningAttributesCommandInput, cb: (err: any, data?: PutEmailIdentityDkimSigningAttributesCommandOutput) => void): void;
            putEmailIdentityDkimSigningAttributes(args: PutEmailIdentityDkimSigningAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailIdentityDkimSigningAttributesCommandOutput) => void): void;
            /**
                * <p>Used to enable or disable feedback forwarding for an identity. This setting determines
                *             what happens when an identity is used to send an email that results in a bounce or
                *             complaint event.</p>
                *         <p>If the value is <code>true</code>, you receive email notifications when bounce or
                *             complaint events occur. These notifications are sent to the address that you specified
                *             in the <code>Return-Path</code> header of the original email.</p>
                *         <p>You're required to have a method of tracking bounces and complaints. If you haven't
                *             set up another mechanism for receiving bounce or complaint notifications (for example,
                *             by setting up an event destination), you receive an email notification when these events
                *             occur (even if this setting is disabled).</p>
                */
            putEmailIdentityFeedbackAttributes(args: PutEmailIdentityFeedbackAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailIdentityFeedbackAttributesCommandOutput>;
            putEmailIdentityFeedbackAttributes(args: PutEmailIdentityFeedbackAttributesCommandInput, cb: (err: any, data?: PutEmailIdentityFeedbackAttributesCommandOutput) => void): void;
            putEmailIdentityFeedbackAttributes(args: PutEmailIdentityFeedbackAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailIdentityFeedbackAttributesCommandOutput) => void): void;
            /**
                * <p>Used to enable or disable the custom Mail-From domain configuration for an email
                *             identity.</p>
                */
            putEmailIdentityMailFromAttributes(args: PutEmailIdentityMailFromAttributesCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailIdentityMailFromAttributesCommandOutput>;
            putEmailIdentityMailFromAttributes(args: PutEmailIdentityMailFromAttributesCommandInput, cb: (err: any, data?: PutEmailIdentityMailFromAttributesCommandOutput) => void): void;
            putEmailIdentityMailFromAttributes(args: PutEmailIdentityMailFromAttributesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailIdentityMailFromAttributesCommandOutput) => void): void;
            /**
                * <p>Adds an email address to the suppression list for your account.</p>
                */
            putSuppressedDestination(args: PutSuppressedDestinationCommandInput, options?: __HttpHandlerOptions): Promise<PutSuppressedDestinationCommandOutput>;
            putSuppressedDestination(args: PutSuppressedDestinationCommandInput, cb: (err: any, data?: PutSuppressedDestinationCommandOutput) => void): void;
            putSuppressedDestination(args: PutSuppressedDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutSuppressedDestinationCommandOutput) => void): void;
            /**
                * <p>Composes an email message to multiple destinations.</p>
                */
            sendBulkEmail(args: SendBulkEmailCommandInput, options?: __HttpHandlerOptions): Promise<SendBulkEmailCommandOutput>;
            sendBulkEmail(args: SendBulkEmailCommandInput, cb: (err: any, data?: SendBulkEmailCommandOutput) => void): void;
            sendBulkEmail(args: SendBulkEmailCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendBulkEmailCommandOutput) => void): void;
            /**
                * <p>Adds an email address to the list of identities for your Amazon SES account in the current
                *             Amazon Web Services Region and attempts to verify it. As a result of executing this operation, a
                *             customized verification email is sent to the specified address.</p>
                *         <p>To use this operation, you must first create a custom verification email template. For
                *             more information about creating and using custom verification email templates, see
                *                 <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            sendCustomVerificationEmail(args: SendCustomVerificationEmailCommandInput, options?: __HttpHandlerOptions): Promise<SendCustomVerificationEmailCommandOutput>;
            sendCustomVerificationEmail(args: SendCustomVerificationEmailCommandInput, cb: (err: any, data?: SendCustomVerificationEmailCommandOutput) => void): void;
            sendCustomVerificationEmail(args: SendCustomVerificationEmailCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendCustomVerificationEmailCommandOutput) => void): void;
            /**
                * <p>Sends an email message. You can use the Amazon SES API v2 to send the following types of
                *             messages:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>Simple</b> – A standard email message. When
                *                     you create this type of message, you specify the sender, the recipient, and the
                *                     message body, and Amazon SES assembles the message for you.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>Raw</b> – A raw, MIME-formatted email
                *                     message. When you send this type of email, you have to specify all of the
                *                     message headers, as well as the message body. You can use this message type to
                *                     send messages that contain attachments. The message that you specify has to be a
                *                     valid MIME message.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>Templated</b> – A message that contains
                *                     personalization tags. When you send this type of email, Amazon SES API v2 automatically
                *                     replaces the tags with values that you specify.</p>
                *             </li>
                *          </ul>
                */
            sendEmail(args: SendEmailCommandInput, options?: __HttpHandlerOptions): Promise<SendEmailCommandOutput>;
            sendEmail(args: SendEmailCommandInput, cb: (err: any, data?: SendEmailCommandOutput) => void): void;
            sendEmail(args: SendEmailCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendEmailCommandOutput) => void): void;
            /**
                * <p>Add one or more tags (keys and values) to a specified resource. A
                *                 <i>tag</i> is a label that you optionally define and associate with a
                *             resource. Tags can help you categorize and manage resources in different ways, such as
                *             by purpose, owner, environment, or other criteria. A resource can have as many as 50
                *             tags.</p>
                *         <p>Each tag consists of a required <i>tag key</i> and an
                *                 associated <i>tag value</i>, both of which you define. A tag key is a
                *             general label that acts as a category for more specific tag values. A tag value acts as
                *             a descriptor within a tag key.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Creates a preview of the MIME content of an email when provided with a template and a
                *             set of replacement data.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            testRenderEmailTemplate(args: TestRenderEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<TestRenderEmailTemplateCommandOutput>;
            testRenderEmailTemplate(args: TestRenderEmailTemplateCommandInput, cb: (err: any, data?: TestRenderEmailTemplateCommandOutput) => void): void;
            testRenderEmailTemplate(args: TestRenderEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TestRenderEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Remove one or more tags (keys and values) from a specified resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Update the configuration of an event destination for a configuration set.</p>
                *         <p>
                *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
                *             and complaints. <i>Event destinations</i> are places that you can send
                *             information about these events to. For example, you can send event data to Amazon SNS to
                *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
                *             stream data to Amazon S3 for long-term storage.</p>
                */
            updateConfigurationSetEventDestination(args: UpdateConfigurationSetEventDestinationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateConfigurationSetEventDestinationCommandOutput>;
            updateConfigurationSetEventDestination(args: UpdateConfigurationSetEventDestinationCommandInput, cb: (err: any, data?: UpdateConfigurationSetEventDestinationCommandOutput) => void): void;
            updateConfigurationSetEventDestination(args: UpdateConfigurationSetEventDestinationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateConfigurationSetEventDestinationCommandOutput) => void): void;
            /**
                * <p>Updates a contact's preferences for a list. It is not necessary to specify all
                *             existing topic preferences in the TopicPreferences object, just the ones that need
                *             updating.</p>
                */
            updateContact(args: UpdateContactCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactCommandOutput>;
            updateContact(args: UpdateContactCommandInput, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
            updateContact(args: UpdateContactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactCommandOutput) => void): void;
            /**
                * <p>Updates contact list metadata. This operation does a complete replacement.</p>
                */
            updateContactList(args: UpdateContactListCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContactListCommandOutput>;
            updateContactList(args: UpdateContactListCommandInput, cb: (err: any, data?: UpdateContactListCommandOutput) => void): void;
            updateContactList(args: UpdateContactListCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContactListCommandOutput) => void): void;
            /**
                * <p>Updates an existing custom verification email template.</p>
                *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
                *                 Guide</i>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            updateCustomVerificationEmailTemplate(args: UpdateCustomVerificationEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateCustomVerificationEmailTemplateCommandOutput>;
            updateCustomVerificationEmailTemplate(args: UpdateCustomVerificationEmailTemplateCommandInput, cb: (err: any, data?: UpdateCustomVerificationEmailTemplateCommandOutput) => void): void;
            updateCustomVerificationEmailTemplate(args: UpdateCustomVerificationEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateCustomVerificationEmailTemplateCommandOutput) => void): void;
            /**
                * <p>Updates the specified sending authorization policy for the given identity (an email
                *             address or a domain). This API returns successfully even if a policy with the specified
                *             name does not exist.</p>
                *         <note>
                *             <p>This API is for the identity owner only. If you have not verified the identity,
                *                 this API will return an error.</p>
                *         </note>
                *         <p>Sending authorization is a feature that enables an identity owner to authorize other
                *             senders to use its identities. For information about using sending authorization, see
                *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *
                *         <p>You can execute this operation no more than once per second.</p>
                */
            updateEmailIdentityPolicy(args: UpdateEmailIdentityPolicyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEmailIdentityPolicyCommandOutput>;
            updateEmailIdentityPolicy(args: UpdateEmailIdentityPolicyCommandInput, cb: (err: any, data?: UpdateEmailIdentityPolicyCommandOutput) => void): void;
            updateEmailIdentityPolicy(args: UpdateEmailIdentityPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEmailIdentityPolicyCommandOutput) => void): void;
            /**
                * <p>Updates an email template. Email templates enable you to send personalized email to
                *             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *         <p>You can execute this operation no more than once per second.</p>
                */
            updateEmailTemplate(args: UpdateEmailTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEmailTemplateCommandOutput>;
            updateEmailTemplate(args: UpdateEmailTemplateCommandInput, cb: (err: any, data?: UpdateEmailTemplateCommandOutput) => void): void;
            updateEmailTemplate(args: UpdateEmailTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEmailTemplateCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateConfigurationSetRequest, CreateConfigurationSetResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateConfigurationSetCommandInput extends CreateConfigurationSetRequest {
    }
    export interface CreateConfigurationSetCommandOutput extends CreateConfigurationSetResponse, __MetadataBearer {
    }
    /**
        * <p>Create a configuration set. <i>Configuration sets</i> are groups of
        *             rules that you can apply to the emails that you send. You apply a configuration set to
        *             an email by specifying the name of the configuration set when you call the Amazon SES API v2. When
        *             you apply a configuration set to an email, all of the rules in that configuration set
        *             are applied to the email. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateConfigurationSetCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateConfigurationSetCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateConfigurationSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateConfigurationSetCommandInput} for command's `input` shape.
        * @see {@link CreateConfigurationSetCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateConfigurationSetCommand extends $Command<CreateConfigurationSetCommandInput, CreateConfigurationSetCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateConfigurationSetCommandInput;
            constructor(input: CreateConfigurationSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateConfigurationSetCommandInput, CreateConfigurationSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetEventDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateConfigurationSetEventDestinationRequest, CreateConfigurationSetEventDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateConfigurationSetEventDestinationCommandInput extends CreateConfigurationSetEventDestinationRequest {
    }
    export interface CreateConfigurationSetEventDestinationCommandOutput extends CreateConfigurationSetEventDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Create an event destination. <i>Events</i> include message sends,
        *             deliveries, opens, clicks, bounces, and complaints. <i>Event
        *                 destinations</i> are places that you can send information about these events
        *             to. For example, you can send event data to Amazon SNS to receive notifications when you
        *             receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term
        *             storage.</p>
        *         <p>A single configuration set can include more than one event destination.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateConfigurationSetEventDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateConfigurationSetEventDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateConfigurationSetEventDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateConfigurationSetEventDestinationCommandInput} for command's `input` shape.
        * @see {@link CreateConfigurationSetEventDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateConfigurationSetEventDestinationCommand extends $Command<CreateConfigurationSetEventDestinationCommandInput, CreateConfigurationSetEventDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateConfigurationSetEventDestinationCommandInput;
            constructor(input: CreateConfigurationSetEventDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateConfigurationSetEventDestinationCommandInput, CreateConfigurationSetEventDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateContactRequest, CreateContactResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateContactCommandInput extends CreateContactRequest {
    }
    export interface CreateContactCommandOutput extends CreateContactResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a contact, which is an end-user who is receiving the email, and adds them to a
        *             contact list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateContactCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateContactCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateContactCommandInput} for command's `input` shape.
        * @see {@link CreateContactCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateContactCommand extends $Command<CreateContactCommandInput, CreateContactCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateContactCommandInput;
            constructor(input: CreateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateContactCommandInput, CreateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactListCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateContactListRequest, CreateContactListResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateContactListCommandInput extends CreateContactListRequest {
    }
    export interface CreateContactListCommandOutput extends CreateContactListResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a contact list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateContactListCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateContactListCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateContactListCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateContactListCommandInput} for command's `input` shape.
        * @see {@link CreateContactListCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateContactListCommand extends $Command<CreateContactListCommandInput, CreateContactListCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateContactListCommandInput;
            constructor(input: CreateContactListCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateContactListCommandInput, CreateContactListCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateCustomVerificationEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateCustomVerificationEmailTemplateRequest, CreateCustomVerificationEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateCustomVerificationEmailTemplateCommandInput extends CreateCustomVerificationEmailTemplateRequest {
    }
    export interface CreateCustomVerificationEmailTemplateCommandOutput extends CreateCustomVerificationEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new custom verification email template.</p>
        *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateCustomVerificationEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateCustomVerificationEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateCustomVerificationEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateCustomVerificationEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateCustomVerificationEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateCustomVerificationEmailTemplateCommand extends $Command<CreateCustomVerificationEmailTemplateCommandInput, CreateCustomVerificationEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateCustomVerificationEmailTemplateCommandInput;
            constructor(input: CreateCustomVerificationEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateCustomVerificationEmailTemplateCommandInput, CreateCustomVerificationEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDedicatedIpPoolCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateDedicatedIpPoolRequest, CreateDedicatedIpPoolResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateDedicatedIpPoolCommandInput extends CreateDedicatedIpPoolRequest {
    }
    export interface CreateDedicatedIpPoolCommandOutput extends CreateDedicatedIpPoolResponse, __MetadataBearer {
    }
    /**
        * <p>Create a new pool of dedicated IP addresses. A pool can include one or more dedicated
        *             IP addresses that are associated with your Amazon Web Services account. You can associate a pool with
        *             a configuration set. When you send an email that uses that configuration set, the
        *             message is sent from one of the addresses in the associated pool.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateDedicatedIpPoolCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateDedicatedIpPoolCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateDedicatedIpPoolCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDedicatedIpPoolCommandInput} for command's `input` shape.
        * @see {@link CreateDedicatedIpPoolCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateDedicatedIpPoolCommand extends $Command<CreateDedicatedIpPoolCommandInput, CreateDedicatedIpPoolCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateDedicatedIpPoolCommandInput;
            constructor(input: CreateDedicatedIpPoolCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDedicatedIpPoolCommandInput, CreateDedicatedIpPoolCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDeliverabilityTestReportCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateDeliverabilityTestReportRequest, CreateDeliverabilityTestReportResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateDeliverabilityTestReportCommandInput extends CreateDeliverabilityTestReportRequest {
    }
    export interface CreateDeliverabilityTestReportCommandOutput extends CreateDeliverabilityTestReportResponse, __MetadataBearer {
    }
    /**
        * <p>Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled
        *             by various email providers around the world. When you perform a predictive inbox placement test, you provide a
        *             sample message that contains the content that you plan to send to your customers. Amazon SES
        *             then sends that message to special email addresses spread across several major email
        *             providers. After about 24 hours, the test is complete, and you can use the
        *                 <code>GetDeliverabilityTestReport</code> operation to view the results of the
        *             test.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateDeliverabilityTestReportCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateDeliverabilityTestReportCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateDeliverabilityTestReportCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDeliverabilityTestReportCommandInput} for command's `input` shape.
        * @see {@link CreateDeliverabilityTestReportCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateDeliverabilityTestReportCommand extends $Command<CreateDeliverabilityTestReportCommandInput, CreateDeliverabilityTestReportCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateDeliverabilityTestReportCommandInput;
            constructor(input: CreateDeliverabilityTestReportCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDeliverabilityTestReportCommandInput, CreateDeliverabilityTestReportCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEmailIdentityRequest, CreateEmailIdentityResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateEmailIdentityCommandInput extends CreateEmailIdentityRequest {
    }
    export interface CreateEmailIdentityCommandOutput extends CreateEmailIdentityResponse, __MetadataBearer {
    }
    /**
        * <p>Starts the process of verifying an email identity. An <i>identity</i> is
        *             an email address or domain that you use when you send email. Before you can use an
        *             identity to send email, you first have to verify it. By verifying an identity, you
        *             demonstrate that you're the owner of the identity, and that you've given Amazon SES API v2
        *             permission to send email from the identity.</p>
        *         <p>When you verify an email address, Amazon SES sends an email to the address. Your email
        *             address is verified as soon as you follow the link in the verification email.
        *
        *         </p>
        *         <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code>
        *             object, this operation provides a set of DKIM tokens. You can convert these tokens into
        *             CNAME records, which you then add to the DNS configuration for your domain. Your domain
        *             is verified when Amazon SES detects these records in the DNS configuration for your domain.
        *             This verification method is known as <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
        *         <p>Alternatively, you can perform the verification process by providing your own
        *             public-private key pair. This verification method is known as Bring Your Own DKIM
        *             (BYODKIM). To use BYODKIM, your call to the <code>CreateEmailIdentity</code> operation
        *             has to include the <code>DkimSigningAttributes</code> object. When you specify this
        *             object, you provide a selector (a component of the DNS record name that identifies the
        *             public key to use for DKIM authentication) and a private key.</p>
        *         <p>When you verify a domain, this operation provides a set of DKIM tokens, which you can
        *             convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your
        *             domain. Your domain is verified when Amazon SES detects these records in the DNS
        *             configuration for your domain. For some DNS providers, it can take 72 hours or more to
        *             complete the domain verification process.</p>
        *         <p>Additionally, you can associate an existing configuration set with the email identity that you're verifying.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateEmailIdentityCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateEmailIdentityCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateEmailIdentityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEmailIdentityCommandInput} for command's `input` shape.
        * @see {@link CreateEmailIdentityCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateEmailIdentityCommand extends $Command<CreateEmailIdentityCommandInput, CreateEmailIdentityCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateEmailIdentityCommandInput;
            constructor(input: CreateEmailIdentityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEmailIdentityCommandInput, CreateEmailIdentityCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEmailIdentityPolicyRequest, CreateEmailIdentityPolicyResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateEmailIdentityPolicyCommandInput extends CreateEmailIdentityPolicyRequest {
    }
    export interface CreateEmailIdentityPolicyCommandOutput extends CreateEmailIdentityPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates the specified sending authorization policy for the given identity (an email
        *         address or a domain).</p>
        *         <note>
        *             <p>This API is for the identity owner only. If you have not verified the identity,
        *                 this API will return an error.</p>
        *         </note>
        *         <p>Sending authorization is a feature that enables an identity owner to authorize other
        *             senders to use its identities. For information about using sending authorization, see
        *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateEmailIdentityPolicyCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateEmailIdentityPolicyCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateEmailIdentityPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEmailIdentityPolicyCommandInput} for command's `input` shape.
        * @see {@link CreateEmailIdentityPolicyCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateEmailIdentityPolicyCommand extends $Command<CreateEmailIdentityPolicyCommandInput, CreateEmailIdentityPolicyCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateEmailIdentityPolicyCommandInput;
            constructor(input: CreateEmailIdentityPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEmailIdentityPolicyCommandInput, CreateEmailIdentityPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEmailTemplateRequest, CreateEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateEmailTemplateCommandInput extends CreateEmailTemplateRequest {
    }
    export interface CreateEmailTemplateCommandOutput extends CreateEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an email template. Email templates enable you to send personalized email to
        *             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateEmailTemplateCommand extends $Command<CreateEmailTemplateCommandInput, CreateEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateEmailTemplateCommandInput;
            constructor(input: CreateEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEmailTemplateCommandInput, CreateEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateImportJobRequest, CreateImportJobResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface CreateImportJobCommandInput extends CreateImportJobRequest {
    }
    export interface CreateImportJobCommandOutput extends CreateImportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an import job for a data destination.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, CreateImportJobCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, CreateImportJobCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new CreateImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateImportJobCommandInput} for command's `input` shape.
        * @see {@link CreateImportJobCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class CreateImportJobCommand extends $Command<CreateImportJobCommandInput, CreateImportJobCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: CreateImportJobCommandInput;
            constructor(input: CreateImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateImportJobCommandInput, CreateImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteConfigurationSetRequest, DeleteConfigurationSetResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteConfigurationSetCommandInput extends DeleteConfigurationSetRequest {
    }
    export interface DeleteConfigurationSetCommandOutput extends DeleteConfigurationSetResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an existing configuration set.</p>
        *         <p>
        *             <i>Configuration sets</i> are groups of rules that you can apply to the
        *             emails you send. You apply a configuration set to an email by including a reference to
        *             the configuration set in the headers of the email. When you apply a configuration set to
        *             an email, all of the rules in that configuration set are applied to the email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteConfigurationSetCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteConfigurationSetCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteConfigurationSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteConfigurationSetCommandInput} for command's `input` shape.
        * @see {@link DeleteConfigurationSetCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteConfigurationSetCommand extends $Command<DeleteConfigurationSetCommandInput, DeleteConfigurationSetCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteConfigurationSetCommandInput;
            constructor(input: DeleteConfigurationSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteConfigurationSetCommandInput, DeleteConfigurationSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetEventDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteConfigurationSetEventDestinationRequest, DeleteConfigurationSetEventDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteConfigurationSetEventDestinationCommandInput extends DeleteConfigurationSetEventDestinationRequest {
    }
    export interface DeleteConfigurationSetEventDestinationCommandOutput extends DeleteConfigurationSetEventDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Delete an event destination.</p>
        *         <p>
        *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
        *             and complaints. <i>Event destinations</i> are places that you can send
        *             information about these events to. For example, you can send event data to Amazon SNS to
        *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
        *             stream data to Amazon S3 for long-term storage.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteConfigurationSetEventDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteConfigurationSetEventDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteConfigurationSetEventDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteConfigurationSetEventDestinationCommandInput} for command's `input` shape.
        * @see {@link DeleteConfigurationSetEventDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteConfigurationSetEventDestinationCommand extends $Command<DeleteConfigurationSetEventDestinationCommandInput, DeleteConfigurationSetEventDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteConfigurationSetEventDestinationCommandInput;
            constructor(input: DeleteConfigurationSetEventDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteConfigurationSetEventDestinationCommandInput, DeleteConfigurationSetEventDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteContactRequest, DeleteContactResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteContactCommandInput extends DeleteContactRequest {
    }
    export interface DeleteContactCommandOutput extends DeleteContactResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a contact from a contact list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteContactCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteContactCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteContactCommandInput} for command's `input` shape.
        * @see {@link DeleteContactCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteContactCommand extends $Command<DeleteContactCommandInput, DeleteContactCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteContactCommandInput;
            constructor(input: DeleteContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteContactCommandInput, DeleteContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactListCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteContactListRequest, DeleteContactListResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteContactListCommandInput extends DeleteContactListRequest {
    }
    export interface DeleteContactListCommandOutput extends DeleteContactListResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a contact list and all of the contacts on that list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteContactListCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteContactListCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteContactListCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteContactListCommandInput} for command's `input` shape.
        * @see {@link DeleteContactListCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteContactListCommand extends $Command<DeleteContactListCommandInput, DeleteContactListCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteContactListCommandInput;
            constructor(input: DeleteContactListCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteContactListCommandInput, DeleteContactListCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteCustomVerificationEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteCustomVerificationEmailTemplateRequest, DeleteCustomVerificationEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteCustomVerificationEmailTemplateCommandInput extends DeleteCustomVerificationEmailTemplateRequest {
    }
    export interface DeleteCustomVerificationEmailTemplateCommandOutput extends DeleteCustomVerificationEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an existing custom verification email template.</p>
        *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteCustomVerificationEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteCustomVerificationEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteCustomVerificationEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteCustomVerificationEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteCustomVerificationEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteCustomVerificationEmailTemplateCommand extends $Command<DeleteCustomVerificationEmailTemplateCommandInput, DeleteCustomVerificationEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteCustomVerificationEmailTemplateCommandInput;
            constructor(input: DeleteCustomVerificationEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteCustomVerificationEmailTemplateCommandInput, DeleteCustomVerificationEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteDedicatedIpPoolCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteDedicatedIpPoolRequest, DeleteDedicatedIpPoolResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteDedicatedIpPoolCommandInput extends DeleteDedicatedIpPoolRequest {
    }
    export interface DeleteDedicatedIpPoolCommandOutput extends DeleteDedicatedIpPoolResponse, __MetadataBearer {
    }
    /**
        * <p>Delete a dedicated IP pool.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteDedicatedIpPoolCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteDedicatedIpPoolCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteDedicatedIpPoolCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDedicatedIpPoolCommandInput} for command's `input` shape.
        * @see {@link DeleteDedicatedIpPoolCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteDedicatedIpPoolCommand extends $Command<DeleteDedicatedIpPoolCommandInput, DeleteDedicatedIpPoolCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteDedicatedIpPoolCommandInput;
            constructor(input: DeleteDedicatedIpPoolCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDedicatedIpPoolCommandInput, DeleteDedicatedIpPoolCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEmailIdentityRequest, DeleteEmailIdentityResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteEmailIdentityCommandInput extends DeleteEmailIdentityRequest {
    }
    export interface DeleteEmailIdentityCommandOutput extends DeleteEmailIdentityResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an email identity. An identity can be either an email address or a domain
        *             name.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteEmailIdentityCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteEmailIdentityCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteEmailIdentityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEmailIdentityCommandInput} for command's `input` shape.
        * @see {@link DeleteEmailIdentityCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteEmailIdentityCommand extends $Command<DeleteEmailIdentityCommandInput, DeleteEmailIdentityCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteEmailIdentityCommandInput;
            constructor(input: DeleteEmailIdentityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEmailIdentityCommandInput, DeleteEmailIdentityCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEmailIdentityPolicyRequest, DeleteEmailIdentityPolicyResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteEmailIdentityPolicyCommandInput extends DeleteEmailIdentityPolicyRequest {
    }
    export interface DeleteEmailIdentityPolicyCommandOutput extends DeleteEmailIdentityPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified sending authorization policy for the given identity (an email
        *             address or a domain). This API returns successfully even if a policy with the specified
        *             name does not exist.</p>
        *         <note>
        *             <p>This API is for the identity owner only. If you have not verified the identity,
        *                 this API will return an error.</p>
        *         </note>
        *         <p>Sending authorization is a feature that enables an identity owner to authorize other
        *             senders to use its identities. For information about using sending authorization, see
        *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteEmailIdentityPolicyCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteEmailIdentityPolicyCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteEmailIdentityPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEmailIdentityPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteEmailIdentityPolicyCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteEmailIdentityPolicyCommand extends $Command<DeleteEmailIdentityPolicyCommandInput, DeleteEmailIdentityPolicyCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteEmailIdentityPolicyCommandInput;
            constructor(input: DeleteEmailIdentityPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEmailIdentityPolicyCommandInput, DeleteEmailIdentityPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEmailTemplateRequest, DeleteEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteEmailTemplateCommandInput extends DeleteEmailTemplateRequest {
    }
    export interface DeleteEmailTemplateCommandOutput extends DeleteEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an email template.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteEmailTemplateCommand extends $Command<DeleteEmailTemplateCommandInput, DeleteEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteEmailTemplateCommandInput;
            constructor(input: DeleteEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEmailTemplateCommandInput, DeleteEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteSuppressedDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteSuppressedDestinationRequest, DeleteSuppressedDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface DeleteSuppressedDestinationCommandInput extends DeleteSuppressedDestinationRequest {
    }
    export interface DeleteSuppressedDestinationCommandOutput extends DeleteSuppressedDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Removes an email address from the suppression list for your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, DeleteSuppressedDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, DeleteSuppressedDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new DeleteSuppressedDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSuppressedDestinationCommandInput} for command's `input` shape.
        * @see {@link DeleteSuppressedDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class DeleteSuppressedDestinationCommand extends $Command<DeleteSuppressedDestinationCommandInput, DeleteSuppressedDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: DeleteSuppressedDestinationCommandInput;
            constructor(input: DeleteSuppressedDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSuppressedDestinationCommandInput, DeleteSuppressedDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccountRequest, GetAccountResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetAccountCommandInput extends GetAccountRequest {
    }
    export interface GetAccountCommandOutput extends GetAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Obtain information about the email-sending status and capabilities of your Amazon SES
        *             account in the current Amazon Web Services Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetAccountCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetAccountCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccountCommandInput} for command's `input` shape.
        * @see {@link GetAccountCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetAccountCommand extends $Command<GetAccountCommandInput, GetAccountCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetAccountCommandInput;
            constructor(input: GetAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccountCommandInput, GetAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetBlacklistReportsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetBlacklistReportsRequest, GetBlacklistReportsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetBlacklistReportsCommandInput extends GetBlacklistReportsRequest {
    }
    export interface GetBlacklistReportsCommandOutput extends GetBlacklistReportsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve a list of the blacklists that your dedicated IP addresses appear on.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetBlacklistReportsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetBlacklistReportsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetBlacklistReportsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBlacklistReportsCommandInput} for command's `input` shape.
        * @see {@link GetBlacklistReportsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetBlacklistReportsCommand extends $Command<GetBlacklistReportsCommandInput, GetBlacklistReportsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetBlacklistReportsCommandInput;
            constructor(input: GetBlacklistReportsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBlacklistReportsCommandInput, GetBlacklistReportsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetConfigurationSetRequest, GetConfigurationSetResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetConfigurationSetCommandInput extends GetConfigurationSetRequest {
    }
    export interface GetConfigurationSetCommandOutput extends GetConfigurationSetResponse, __MetadataBearer {
    }
    /**
        * <p>Get information about an existing configuration set, including the dedicated IP pool
        *             that it's associated with, whether or not it's enabled for sending email, and
        *             more.</p>
        *         <p>
        *             <i>Configuration sets</i> are groups of rules that you can apply to the
        *             emails you send. You apply a configuration set to an email by including a reference to
        *             the configuration set in the headers of the email. When you apply a configuration set to
        *             an email, all of the rules in that configuration set are applied to the email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetConfigurationSetCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetConfigurationSetCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetConfigurationSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetConfigurationSetCommandInput} for command's `input` shape.
        * @see {@link GetConfigurationSetCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetConfigurationSetCommand extends $Command<GetConfigurationSetCommandInput, GetConfigurationSetCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetConfigurationSetCommandInput;
            constructor(input: GetConfigurationSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetConfigurationSetCommandInput, GetConfigurationSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetEventDestinationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetConfigurationSetEventDestinationsRequest, GetConfigurationSetEventDestinationsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetConfigurationSetEventDestinationsCommandInput extends GetConfigurationSetEventDestinationsRequest {
    }
    export interface GetConfigurationSetEventDestinationsCommandOutput extends GetConfigurationSetEventDestinationsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve a list of event destinations that are associated with a configuration
        *             set.</p>
        *         <p>
        *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
        *             and complaints. <i>Event destinations</i> are places that you can send
        *             information about these events to. For example, you can send event data to Amazon SNS to
        *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
        *             stream data to Amazon S3 for long-term storage.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetConfigurationSetEventDestinationsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetConfigurationSetEventDestinationsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetConfigurationSetEventDestinationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetConfigurationSetEventDestinationsCommandInput} for command's `input` shape.
        * @see {@link GetConfigurationSetEventDestinationsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetConfigurationSetEventDestinationsCommand extends $Command<GetConfigurationSetEventDestinationsCommandInput, GetConfigurationSetEventDestinationsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetConfigurationSetEventDestinationsCommandInput;
            constructor(input: GetConfigurationSetEventDestinationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetConfigurationSetEventDestinationsCommandInput, GetConfigurationSetEventDestinationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetContactRequest, GetContactResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetContactCommandInput extends GetContactRequest {
    }
    export interface GetContactCommandOutput extends GetContactResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a contact from a contact list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetContactCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetContactCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetContactCommandInput} for command's `input` shape.
        * @see {@link GetContactCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetContactCommand extends $Command<GetContactCommandInput, GetContactCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetContactCommandInput;
            constructor(input: GetContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetContactCommandInput, GetContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactListCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetContactListRequest, GetContactListResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetContactListCommandInput extends GetContactListRequest {
    }
    export interface GetContactListCommandOutput extends GetContactListResponse, __MetadataBearer {
    }
    /**
        * <p>Returns contact list metadata. It does not return any information about the contacts
        *             present in the list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetContactListCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetContactListCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetContactListCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetContactListCommandInput} for command's `input` shape.
        * @see {@link GetContactListCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetContactListCommand extends $Command<GetContactListCommandInput, GetContactListCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetContactListCommandInput;
            constructor(input: GetContactListCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetContactListCommandInput, GetContactListCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetCustomVerificationEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetCustomVerificationEmailTemplateRequest, GetCustomVerificationEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetCustomVerificationEmailTemplateCommandInput extends GetCustomVerificationEmailTemplateRequest {
    }
    export interface GetCustomVerificationEmailTemplateCommandOutput extends GetCustomVerificationEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the custom email verification template for the template name you
        *             specify.</p>
        *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetCustomVerificationEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetCustomVerificationEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetCustomVerificationEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetCustomVerificationEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link GetCustomVerificationEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetCustomVerificationEmailTemplateCommand extends $Command<GetCustomVerificationEmailTemplateCommandInput, GetCustomVerificationEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetCustomVerificationEmailTemplateCommandInput;
            constructor(input: GetCustomVerificationEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCustomVerificationEmailTemplateCommandInput, GetCustomVerificationEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDedicatedIpRequest, GetDedicatedIpResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDedicatedIpCommandInput extends GetDedicatedIpRequest {
    }
    export interface GetDedicatedIpCommandOutput extends GetDedicatedIpResponse, __MetadataBearer {
    }
    /**
        * <p>Get information about a dedicated IP address, including the name of the dedicated IP
        *             pool that it's associated with, as well information about the automatic warm-up process
        *             for the address.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDedicatedIpCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDedicatedIpCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDedicatedIpCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDedicatedIpCommandInput} for command's `input` shape.
        * @see {@link GetDedicatedIpCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDedicatedIpCommand extends $Command<GetDedicatedIpCommandInput, GetDedicatedIpCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDedicatedIpCommandInput;
            constructor(input: GetDedicatedIpCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDedicatedIpCommandInput, GetDedicatedIpCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDedicatedIpsRequest, GetDedicatedIpsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDedicatedIpsCommandInput extends GetDedicatedIpsRequest {
    }
    export interface GetDedicatedIpsCommandOutput extends GetDedicatedIpsResponse, __MetadataBearer {
    }
    /**
        * <p>List the dedicated IP addresses that are associated with your Amazon Web Services
        *             account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDedicatedIpsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDedicatedIpsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDedicatedIpsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDedicatedIpsCommandInput} for command's `input` shape.
        * @see {@link GetDedicatedIpsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDedicatedIpsCommand extends $Command<GetDedicatedIpsCommandInput, GetDedicatedIpsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDedicatedIpsCommandInput;
            constructor(input: GetDedicatedIpsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDedicatedIpsCommandInput, GetDedicatedIpsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityDashboardOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDeliverabilityDashboardOptionsRequest, GetDeliverabilityDashboardOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDeliverabilityDashboardOptionsCommandInput extends GetDeliverabilityDashboardOptionsRequest {
    }
    export interface GetDeliverabilityDashboardOptionsCommandOutput extends GetDeliverabilityDashboardOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve information about the status of the Deliverability dashboard for your account. When
        *             the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other
        *             metrics for the domains that you use to send email. You also gain the ability to perform
        *             predictive inbox placement tests.</p>
        *
        *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
        *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
        *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDeliverabilityDashboardOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDeliverabilityDashboardOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDeliverabilityDashboardOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDeliverabilityDashboardOptionsCommandInput} for command's `input` shape.
        * @see {@link GetDeliverabilityDashboardOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDeliverabilityDashboardOptionsCommand extends $Command<GetDeliverabilityDashboardOptionsCommandInput, GetDeliverabilityDashboardOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDeliverabilityDashboardOptionsCommandInput;
            constructor(input: GetDeliverabilityDashboardOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDeliverabilityDashboardOptionsCommandInput, GetDeliverabilityDashboardOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityTestReportCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDeliverabilityTestReportRequest, GetDeliverabilityTestReportResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDeliverabilityTestReportCommandInput extends GetDeliverabilityTestReportRequest {
    }
    export interface GetDeliverabilityTestReportCommandOutput extends GetDeliverabilityTestReportResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve the results of a predictive inbox placement test.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDeliverabilityTestReportCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDeliverabilityTestReportCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDeliverabilityTestReportCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDeliverabilityTestReportCommandInput} for command's `input` shape.
        * @see {@link GetDeliverabilityTestReportCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDeliverabilityTestReportCommand extends $Command<GetDeliverabilityTestReportCommandInput, GetDeliverabilityTestReportCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDeliverabilityTestReportCommandInput;
            constructor(input: GetDeliverabilityTestReportCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDeliverabilityTestReportCommandInput, GetDeliverabilityTestReportCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainDeliverabilityCampaignCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDomainDeliverabilityCampaignRequest, GetDomainDeliverabilityCampaignResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDomainDeliverabilityCampaignCommandInput extends GetDomainDeliverabilityCampaignRequest {
    }
    export interface GetDomainDeliverabilityCampaignCommandOutput extends GetDomainDeliverabilityCampaignResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve all the deliverability data for a specific campaign. This data is available
        *             for a campaign only if the campaign sent email by using a domain that the
        *             Deliverability dashboard is enabled for.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDomainDeliverabilityCampaignCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDomainDeliverabilityCampaignCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDomainDeliverabilityCampaignCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDomainDeliverabilityCampaignCommandInput} for command's `input` shape.
        * @see {@link GetDomainDeliverabilityCampaignCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDomainDeliverabilityCampaignCommand extends $Command<GetDomainDeliverabilityCampaignCommandInput, GetDomainDeliverabilityCampaignCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDomainDeliverabilityCampaignCommandInput;
            constructor(input: GetDomainDeliverabilityCampaignCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDomainDeliverabilityCampaignCommandInput, GetDomainDeliverabilityCampaignCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainStatisticsReportCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDomainStatisticsReportRequest, GetDomainStatisticsReportResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetDomainStatisticsReportCommandInput extends GetDomainStatisticsReportRequest {
    }
    export interface GetDomainStatisticsReportCommandOutput extends GetDomainStatisticsReportResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve inbox placement and engagement rates for the domains that you use to send
        *             email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetDomainStatisticsReportCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetDomainStatisticsReportCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetDomainStatisticsReportCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDomainStatisticsReportCommandInput} for command's `input` shape.
        * @see {@link GetDomainStatisticsReportCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetDomainStatisticsReportCommand extends $Command<GetDomainStatisticsReportCommandInput, GetDomainStatisticsReportCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetDomainStatisticsReportCommandInput;
            constructor(input: GetDomainStatisticsReportCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDomainStatisticsReportCommandInput, GetDomainStatisticsReportCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEmailIdentityRequest, GetEmailIdentityResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetEmailIdentityCommandInput extends GetEmailIdentityRequest {
    }
    export interface GetEmailIdentityCommandOutput extends GetEmailIdentityResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about a specific identity, including the identity's verification
        *             status, sending authorization policies, its DKIM authentication status, and its custom
        *             Mail-From settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetEmailIdentityCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetEmailIdentityCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetEmailIdentityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEmailIdentityCommandInput} for command's `input` shape.
        * @see {@link GetEmailIdentityCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetEmailIdentityCommand extends $Command<GetEmailIdentityCommandInput, GetEmailIdentityCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetEmailIdentityCommandInput;
            constructor(input: GetEmailIdentityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEmailIdentityCommandInput, GetEmailIdentityCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEmailIdentityPoliciesRequest, GetEmailIdentityPoliciesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetEmailIdentityPoliciesCommandInput extends GetEmailIdentityPoliciesRequest {
    }
    export interface GetEmailIdentityPoliciesCommandOutput extends GetEmailIdentityPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the requested sending authorization policies for the given identity (an email
        *             address or a domain). The policies are returned as a map of policy names to policy
        *             contents. You can retrieve a maximum of 20 policies at a time.</p>
        *         <note>
        *             <p>This API is for the identity owner only. If you have not verified the identity,
        *                 this API will return an error.</p>
        *         </note>
        *         <p>Sending authorization is a feature that enables an identity owner to authorize other
        *             senders to use its identities. For information about using sending authorization, see
        *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetEmailIdentityPoliciesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetEmailIdentityPoliciesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetEmailIdentityPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEmailIdentityPoliciesCommandInput} for command's `input` shape.
        * @see {@link GetEmailIdentityPoliciesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetEmailIdentityPoliciesCommand extends $Command<GetEmailIdentityPoliciesCommandInput, GetEmailIdentityPoliciesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetEmailIdentityPoliciesCommandInput;
            constructor(input: GetEmailIdentityPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEmailIdentityPoliciesCommandInput, GetEmailIdentityPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEmailTemplateRequest, GetEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetEmailTemplateCommandInput extends GetEmailTemplateRequest {
    }
    export interface GetEmailTemplateCommandOutput extends GetEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Displays the template object (which includes the subject line, HTML part and text
        *             part) for the template you specify.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link GetEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetEmailTemplateCommand extends $Command<GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetEmailTemplateCommandInput;
            constructor(input: GetEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetImportJobRequest, GetImportJobResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetImportJobCommandInput extends GetImportJobRequest {
    }
    export interface GetImportJobCommandOutput extends GetImportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information about an import job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetImportJobCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetImportJobCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetImportJobCommandInput} for command's `input` shape.
        * @see {@link GetImportJobCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetImportJobCommand extends $Command<GetImportJobCommandInput, GetImportJobCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetImportJobCommandInput;
            constructor(input: GetImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetImportJobCommandInput, GetImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetSuppressedDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetSuppressedDestinationRequest, GetSuppressedDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface GetSuppressedDestinationCommandInput extends GetSuppressedDestinationRequest {
    }
    export interface GetSuppressedDestinationCommandOutput extends GetSuppressedDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a specific email address that's on the suppression list
        *             for your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, GetSuppressedDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, GetSuppressedDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new GetSuppressedDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSuppressedDestinationCommandInput} for command's `input` shape.
        * @see {@link GetSuppressedDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class GetSuppressedDestinationCommand extends $Command<GetSuppressedDestinationCommandInput, GetSuppressedDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: GetSuppressedDestinationCommandInput;
            constructor(input: GetSuppressedDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSuppressedDestinationCommandInput, GetSuppressedDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListConfigurationSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListConfigurationSetsRequest, ListConfigurationSetsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListConfigurationSetsCommandInput extends ListConfigurationSetsRequest {
    }
    export interface ListConfigurationSetsCommandOutput extends ListConfigurationSetsResponse, __MetadataBearer {
    }
    /**
        * <p>List all of the configuration sets associated with your account in the current
        *             region.</p>
        *         <p>
        *             <i>Configuration sets</i> are groups of rules that you can apply to the
        *             emails you send. You apply a configuration set to an email by including a reference to
        *             the configuration set in the headers of the email. When you apply a configuration set to
        *             an email, all of the rules in that configuration set are applied to the email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListConfigurationSetsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListConfigurationSetsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListConfigurationSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListConfigurationSetsCommandInput} for command's `input` shape.
        * @see {@link ListConfigurationSetsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListConfigurationSetsCommand extends $Command<ListConfigurationSetsCommandInput, ListConfigurationSetsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListConfigurationSetsCommandInput;
            constructor(input: ListConfigurationSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListConfigurationSetsCommandInput, ListConfigurationSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactListsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListContactListsRequest, ListContactListsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListContactListsCommandInput extends ListContactListsRequest {
    }
    export interface ListContactListsCommandOutput extends ListContactListsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all of the contact lists available.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListContactListsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListContactListsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListContactListsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListContactListsCommandInput} for command's `input` shape.
        * @see {@link ListContactListsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListContactListsCommand extends $Command<ListContactListsCommandInput, ListContactListsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListContactListsCommandInput;
            constructor(input: ListContactListsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListContactListsCommandInput, ListContactListsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListContactsRequest, ListContactsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListContactsCommandInput extends ListContactsRequest {
    }
    export interface ListContactsCommandOutput extends ListContactsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the contacts present in a specific contact list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListContactsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListContactsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListContactsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListContactsCommandInput} for command's `input` shape.
        * @see {@link ListContactsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListContactsCommand extends $Command<ListContactsCommandInput, ListContactsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListContactsCommandInput;
            constructor(input: ListContactsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListContactsCommandInput, ListContactsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListCustomVerificationEmailTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListCustomVerificationEmailTemplatesRequest, ListCustomVerificationEmailTemplatesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListCustomVerificationEmailTemplatesCommandInput extends ListCustomVerificationEmailTemplatesRequest {
    }
    export interface ListCustomVerificationEmailTemplatesCommandOutput extends ListCustomVerificationEmailTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the existing custom verification email templates for your account in the current
        *             Amazon Web Services Region.</p>
        *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListCustomVerificationEmailTemplatesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListCustomVerificationEmailTemplatesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListCustomVerificationEmailTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListCustomVerificationEmailTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListCustomVerificationEmailTemplatesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListCustomVerificationEmailTemplatesCommand extends $Command<ListCustomVerificationEmailTemplatesCommandInput, ListCustomVerificationEmailTemplatesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListCustomVerificationEmailTemplatesCommandInput;
            constructor(input: ListCustomVerificationEmailTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListCustomVerificationEmailTemplatesCommandInput, ListCustomVerificationEmailTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDedicatedIpPoolsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDedicatedIpPoolsRequest, ListDedicatedIpPoolsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListDedicatedIpPoolsCommandInput extends ListDedicatedIpPoolsRequest {
    }
    export interface ListDedicatedIpPoolsCommandOutput extends ListDedicatedIpPoolsResponse, __MetadataBearer {
    }
    /**
        * <p>List all of the dedicated IP pools that exist in your Amazon Web Services account in the current
        *             Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListDedicatedIpPoolsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListDedicatedIpPoolsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListDedicatedIpPoolsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDedicatedIpPoolsCommandInput} for command's `input` shape.
        * @see {@link ListDedicatedIpPoolsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListDedicatedIpPoolsCommand extends $Command<ListDedicatedIpPoolsCommandInput, ListDedicatedIpPoolsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListDedicatedIpPoolsCommandInput;
            constructor(input: ListDedicatedIpPoolsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDedicatedIpPoolsCommandInput, ListDedicatedIpPoolsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDeliverabilityTestReportsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDeliverabilityTestReportsRequest, ListDeliverabilityTestReportsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListDeliverabilityTestReportsCommandInput extends ListDeliverabilityTestReportsRequest {
    }
    export interface ListDeliverabilityTestReportsCommandOutput extends ListDeliverabilityTestReportsResponse, __MetadataBearer {
    }
    /**
        * <p>Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For
        *             predictive inbox placement tests that are complete, you can use the <code>GetDeliverabilityTestReport</code>
        *             operation to view the results.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListDeliverabilityTestReportsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListDeliverabilityTestReportsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListDeliverabilityTestReportsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDeliverabilityTestReportsCommandInput} for command's `input` shape.
        * @see {@link ListDeliverabilityTestReportsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListDeliverabilityTestReportsCommand extends $Command<ListDeliverabilityTestReportsCommandInput, ListDeliverabilityTestReportsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListDeliverabilityTestReportsCommandInput;
            constructor(input: ListDeliverabilityTestReportsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDeliverabilityTestReportsCommandInput, ListDeliverabilityTestReportsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDomainDeliverabilityCampaignsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListDomainDeliverabilityCampaignsRequest, ListDomainDeliverabilityCampaignsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListDomainDeliverabilityCampaignsCommandInput extends ListDomainDeliverabilityCampaignsRequest {
    }
    export interface ListDomainDeliverabilityCampaignsCommandOutput extends ListDomainDeliverabilityCampaignsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve deliverability data for all the campaigns that used a specific domain to send
        *             email during a specified time range. This data is available for a domain only if you
        *             enabled the Deliverability dashboard for the domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListDomainDeliverabilityCampaignsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListDomainDeliverabilityCampaignsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListDomainDeliverabilityCampaignsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDomainDeliverabilityCampaignsCommandInput} for command's `input` shape.
        * @see {@link ListDomainDeliverabilityCampaignsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListDomainDeliverabilityCampaignsCommand extends $Command<ListDomainDeliverabilityCampaignsCommandInput, ListDomainDeliverabilityCampaignsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListDomainDeliverabilityCampaignsCommandInput;
            constructor(input: ListDomainDeliverabilityCampaignsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDomainDeliverabilityCampaignsCommandInput, ListDomainDeliverabilityCampaignsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailIdentitiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEmailIdentitiesRequest, ListEmailIdentitiesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListEmailIdentitiesCommandInput extends ListEmailIdentitiesRequest {
    }
    export interface ListEmailIdentitiesCommandOutput extends ListEmailIdentitiesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of all of the email identities that are associated with your Amazon Web Services
        *             account. An identity can be either an email address or a domain. This operation returns
        *             identities that are verified as well as those that aren't. This operation returns
        *             identities that are associated with Amazon SES and Amazon Pinpoint.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListEmailIdentitiesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListEmailIdentitiesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListEmailIdentitiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEmailIdentitiesCommandInput} for command's `input` shape.
        * @see {@link ListEmailIdentitiesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListEmailIdentitiesCommand extends $Command<ListEmailIdentitiesCommandInput, ListEmailIdentitiesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListEmailIdentitiesCommandInput;
            constructor(input: ListEmailIdentitiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEmailIdentitiesCommandInput, ListEmailIdentitiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEmailTemplatesRequest, ListEmailTemplatesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListEmailTemplatesCommandInput extends ListEmailTemplatesRequest {
    }
    export interface ListEmailTemplatesCommandOutput extends ListEmailTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the email templates present in your Amazon SES account in the current Amazon Web Services
        *             Region.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListEmailTemplatesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListEmailTemplatesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListEmailTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEmailTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListEmailTemplatesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListEmailTemplatesCommand extends $Command<ListEmailTemplatesCommandInput, ListEmailTemplatesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListEmailTemplatesCommandInput;
            constructor(input: ListEmailTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEmailTemplatesCommandInput, ListEmailTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListImportJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListImportJobsRequest, ListImportJobsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListImportJobsCommandInput extends ListImportJobsRequest {
    }
    export interface ListImportJobsCommandOutput extends ListImportJobsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all of the import jobs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListImportJobsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListImportJobsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListImportJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListImportJobsCommandInput} for command's `input` shape.
        * @see {@link ListImportJobsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListImportJobsCommand extends $Command<ListImportJobsCommandInput, ListImportJobsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListImportJobsCommandInput;
            constructor(input: ListImportJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListImportJobsCommandInput, ListImportJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListSuppressedDestinationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSuppressedDestinationsRequest, ListSuppressedDestinationsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListSuppressedDestinationsCommandInput extends ListSuppressedDestinationsRequest {
    }
    export interface ListSuppressedDestinationsCommandOutput extends ListSuppressedDestinationsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a list of email addresses that are on the suppression list for your
        *             account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListSuppressedDestinationsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListSuppressedDestinationsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListSuppressedDestinationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSuppressedDestinationsCommandInput} for command's `input` shape.
        * @see {@link ListSuppressedDestinationsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListSuppressedDestinationsCommand extends $Command<ListSuppressedDestinationsCommandInput, ListSuppressedDestinationsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListSuppressedDestinationsCommandInput;
            constructor(input: ListSuppressedDestinationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSuppressedDestinationsCommandInput, ListSuppressedDestinationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieve a list of the tags (keys and values) that are associated with a specified
        *             resource. A <i>tag</i> is a label that you optionally define and associate
        *             with a resource. Each tag consists of a required <i>tag key</i> and an
        *             optional associated <i>tag value</i>. A tag key is a general label that
        *             acts as a category for more specific tag values. A tag value acts as a descriptor within
        *             a tag key.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, ListTagsForResourceCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, ListTagsForResourceCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDedicatedIpWarmupAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccountDedicatedIpWarmupAttributesRequest, PutAccountDedicatedIpWarmupAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutAccountDedicatedIpWarmupAttributesCommandInput extends PutAccountDedicatedIpWarmupAttributesRequest {
    }
    export interface PutAccountDedicatedIpWarmupAttributesCommandOutput extends PutAccountDedicatedIpWarmupAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Enable or disable the automatic warm-up feature for dedicated IP addresses.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutAccountDedicatedIpWarmupAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutAccountDedicatedIpWarmupAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutAccountDedicatedIpWarmupAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccountDedicatedIpWarmupAttributesCommandInput} for command's `input` shape.
        * @see {@link PutAccountDedicatedIpWarmupAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutAccountDedicatedIpWarmupAttributesCommand extends $Command<PutAccountDedicatedIpWarmupAttributesCommandInput, PutAccountDedicatedIpWarmupAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutAccountDedicatedIpWarmupAttributesCommandInput;
            constructor(input: PutAccountDedicatedIpWarmupAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccountDedicatedIpWarmupAttributesCommandInput, PutAccountDedicatedIpWarmupAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDetailsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccountDetailsRequest, PutAccountDetailsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutAccountDetailsCommandInput extends PutAccountDetailsRequest {
    }
    export interface PutAccountDetailsCommandOutput extends PutAccountDetailsResponse, __MetadataBearer {
    }
    /**
        * <p>Update your Amazon SES account details.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutAccountDetailsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutAccountDetailsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutAccountDetailsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccountDetailsCommandInput} for command's `input` shape.
        * @see {@link PutAccountDetailsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutAccountDetailsCommand extends $Command<PutAccountDetailsCommandInput, PutAccountDetailsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutAccountDetailsCommandInput;
            constructor(input: PutAccountDetailsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccountDetailsCommandInput, PutAccountDetailsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSendingAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccountSendingAttributesRequest, PutAccountSendingAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutAccountSendingAttributesCommandInput extends PutAccountSendingAttributesRequest {
    }
    export interface PutAccountSendingAttributesCommandOutput extends PutAccountSendingAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Enable or disable the ability of your account to send email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutAccountSendingAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutAccountSendingAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutAccountSendingAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccountSendingAttributesCommandInput} for command's `input` shape.
        * @see {@link PutAccountSendingAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutAccountSendingAttributesCommand extends $Command<PutAccountSendingAttributesCommandInput, PutAccountSendingAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutAccountSendingAttributesCommandInput;
            constructor(input: PutAccountSendingAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccountSendingAttributesCommandInput, PutAccountSendingAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSuppressionAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccountSuppressionAttributesRequest, PutAccountSuppressionAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutAccountSuppressionAttributesCommandInput extends PutAccountSuppressionAttributesRequest {
    }
    export interface PutAccountSuppressionAttributesCommandOutput extends PutAccountSuppressionAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Change the settings for the account-level suppression list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutAccountSuppressionAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutAccountSuppressionAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutAccountSuppressionAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccountSuppressionAttributesCommandInput} for command's `input` shape.
        * @see {@link PutAccountSuppressionAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutAccountSuppressionAttributesCommand extends $Command<PutAccountSuppressionAttributesCommandInput, PutAccountSuppressionAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutAccountSuppressionAttributesCommandInput;
            constructor(input: PutAccountSuppressionAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccountSuppressionAttributesCommandInput, PutAccountSuppressionAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetDeliveryOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutConfigurationSetDeliveryOptionsRequest, PutConfigurationSetDeliveryOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutConfigurationSetDeliveryOptionsCommandInput extends PutConfigurationSetDeliveryOptionsRequest {
    }
    export interface PutConfigurationSetDeliveryOptionsCommandOutput extends PutConfigurationSetDeliveryOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools
        *             to create groups of dedicated IP addresses for sending specific types of email.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutConfigurationSetDeliveryOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutConfigurationSetDeliveryOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutConfigurationSetDeliveryOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutConfigurationSetDeliveryOptionsCommandInput} for command's `input` shape.
        * @see {@link PutConfigurationSetDeliveryOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutConfigurationSetDeliveryOptionsCommand extends $Command<PutConfigurationSetDeliveryOptionsCommandInput, PutConfigurationSetDeliveryOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutConfigurationSetDeliveryOptionsCommandInput;
            constructor(input: PutConfigurationSetDeliveryOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutConfigurationSetDeliveryOptionsCommandInput, PutConfigurationSetDeliveryOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetReputationOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutConfigurationSetReputationOptionsRequest, PutConfigurationSetReputationOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutConfigurationSetReputationOptionsCommandInput extends PutConfigurationSetReputationOptionsRequest {
    }
    export interface PutConfigurationSetReputationOptionsCommandOutput extends PutConfigurationSetReputationOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Enable or disable collection of reputation metrics for emails that you send using a
        *             particular configuration set in a specific Amazon Web Services Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutConfigurationSetReputationOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutConfigurationSetReputationOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutConfigurationSetReputationOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutConfigurationSetReputationOptionsCommandInput} for command's `input` shape.
        * @see {@link PutConfigurationSetReputationOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutConfigurationSetReputationOptionsCommand extends $Command<PutConfigurationSetReputationOptionsCommandInput, PutConfigurationSetReputationOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutConfigurationSetReputationOptionsCommandInput;
            constructor(input: PutConfigurationSetReputationOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutConfigurationSetReputationOptionsCommandInput, PutConfigurationSetReputationOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSendingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutConfigurationSetSendingOptionsRequest, PutConfigurationSetSendingOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutConfigurationSetSendingOptionsCommandInput extends PutConfigurationSetSendingOptionsRequest {
    }
    export interface PutConfigurationSetSendingOptionsCommandOutput extends PutConfigurationSetSendingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Enable or disable email sending for messages that use a particular configuration set
        *             in a specific Amazon Web Services Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutConfigurationSetSendingOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutConfigurationSetSendingOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutConfigurationSetSendingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutConfigurationSetSendingOptionsCommandInput} for command's `input` shape.
        * @see {@link PutConfigurationSetSendingOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutConfigurationSetSendingOptionsCommand extends $Command<PutConfigurationSetSendingOptionsCommandInput, PutConfigurationSetSendingOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutConfigurationSetSendingOptionsCommandInput;
            constructor(input: PutConfigurationSetSendingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutConfigurationSetSendingOptionsCommandInput, PutConfigurationSetSendingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSuppressionOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutConfigurationSetSuppressionOptionsRequest, PutConfigurationSetSuppressionOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutConfigurationSetSuppressionOptionsCommandInput extends PutConfigurationSetSuppressionOptionsRequest {
    }
    export interface PutConfigurationSetSuppressionOptionsCommandOutput extends PutConfigurationSetSuppressionOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Specify the account suppression list preferences for a configuration set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutConfigurationSetSuppressionOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutConfigurationSetSuppressionOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutConfigurationSetSuppressionOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutConfigurationSetSuppressionOptionsCommandInput} for command's `input` shape.
        * @see {@link PutConfigurationSetSuppressionOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutConfigurationSetSuppressionOptionsCommand extends $Command<PutConfigurationSetSuppressionOptionsCommandInput, PutConfigurationSetSuppressionOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutConfigurationSetSuppressionOptionsCommandInput;
            constructor(input: PutConfigurationSetSuppressionOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutConfigurationSetSuppressionOptionsCommandInput, PutConfigurationSetSuppressionOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetTrackingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutConfigurationSetTrackingOptionsRequest, PutConfigurationSetTrackingOptionsResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutConfigurationSetTrackingOptionsCommandInput extends PutConfigurationSetTrackingOptionsRequest {
    }
    export interface PutConfigurationSetTrackingOptionsCommandOutput extends PutConfigurationSetTrackingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Specify a custom domain to use for open and click tracking elements in email that you
        *             send.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutConfigurationSetTrackingOptionsCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutConfigurationSetTrackingOptionsCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutConfigurationSetTrackingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutConfigurationSetTrackingOptionsCommandInput} for command's `input` shape.
        * @see {@link PutConfigurationSetTrackingOptionsCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutConfigurationSetTrackingOptionsCommand extends $Command<PutConfigurationSetTrackingOptionsCommandInput, PutConfigurationSetTrackingOptionsCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutConfigurationSetTrackingOptionsCommandInput;
            constructor(input: PutConfigurationSetTrackingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutConfigurationSetTrackingOptionsCommandInput, PutConfigurationSetTrackingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpInPoolCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutDedicatedIpInPoolRequest, PutDedicatedIpInPoolResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutDedicatedIpInPoolCommandInput extends PutDedicatedIpInPoolRequest {
    }
    export interface PutDedicatedIpInPoolCommandOutput extends PutDedicatedIpInPoolResponse, __MetadataBearer {
    }
    /**
        * <p>Move a dedicated IP address to an existing dedicated IP pool.</p>
        *         <note>
        *             <p>The dedicated IP address that you specify must already exist, and must be
        *                 associated with your Amazon Web Services account.
        *
        *             </p>
        *             <p>The dedicated IP pool you specify must already exist. You can create a new pool by
        *                 using the <code>CreateDedicatedIpPool</code> operation.</p>
        *
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutDedicatedIpInPoolCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutDedicatedIpInPoolCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutDedicatedIpInPoolCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutDedicatedIpInPoolCommandInput} for command's `input` shape.
        * @see {@link PutDedicatedIpInPoolCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutDedicatedIpInPoolCommand extends $Command<PutDedicatedIpInPoolCommandInput, PutDedicatedIpInPoolCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutDedicatedIpInPoolCommandInput;
            constructor(input: PutDedicatedIpInPoolCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutDedicatedIpInPoolCommandInput, PutDedicatedIpInPoolCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpWarmupAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutDedicatedIpWarmupAttributesRequest, PutDedicatedIpWarmupAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutDedicatedIpWarmupAttributesCommandInput extends PutDedicatedIpWarmupAttributesRequest {
    }
    export interface PutDedicatedIpWarmupAttributesCommandOutput extends PutDedicatedIpWarmupAttributesResponse, __MetadataBearer {
    }
    /**
        * <p></p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutDedicatedIpWarmupAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutDedicatedIpWarmupAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutDedicatedIpWarmupAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutDedicatedIpWarmupAttributesCommandInput} for command's `input` shape.
        * @see {@link PutDedicatedIpWarmupAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutDedicatedIpWarmupAttributesCommand extends $Command<PutDedicatedIpWarmupAttributesCommandInput, PutDedicatedIpWarmupAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutDedicatedIpWarmupAttributesCommandInput;
            constructor(input: PutDedicatedIpWarmupAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutDedicatedIpWarmupAttributesCommandInput, PutDedicatedIpWarmupAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDeliverabilityDashboardOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutDeliverabilityDashboardOptionRequest, PutDeliverabilityDashboardOptionResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutDeliverabilityDashboardOptionCommandInput extends PutDeliverabilityDashboardOptionRequest {
    }
    export interface PutDeliverabilityDashboardOptionCommandOutput extends PutDeliverabilityDashboardOptionResponse, __MetadataBearer {
    }
    /**
        * <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain
        *             access to reputation, deliverability, and other metrics for the domains that you use to
        *             send email. You also gain the ability to perform predictive inbox placement tests.</p>
        *
        *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
        *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
        *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutDeliverabilityDashboardOptionCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutDeliverabilityDashboardOptionCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutDeliverabilityDashboardOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutDeliverabilityDashboardOptionCommandInput} for command's `input` shape.
        * @see {@link PutDeliverabilityDashboardOptionCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutDeliverabilityDashboardOptionCommand extends $Command<PutDeliverabilityDashboardOptionCommandInput, PutDeliverabilityDashboardOptionCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutDeliverabilityDashboardOptionCommandInput;
            constructor(input: PutDeliverabilityDashboardOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutDeliverabilityDashboardOptionCommandInput, PutDeliverabilityDashboardOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityConfigurationSetAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailIdentityConfigurationSetAttributesRequest, PutEmailIdentityConfigurationSetAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutEmailIdentityConfigurationSetAttributesCommandInput extends PutEmailIdentityConfigurationSetAttributesRequest {
    }
    export interface PutEmailIdentityConfigurationSetAttributesCommandOutput extends PutEmailIdentityConfigurationSetAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Used to associate a configuration set with an email identity.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutEmailIdentityConfigurationSetAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutEmailIdentityConfigurationSetAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutEmailIdentityConfigurationSetAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailIdentityConfigurationSetAttributesCommandInput} for command's `input` shape.
        * @see {@link PutEmailIdentityConfigurationSetAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutEmailIdentityConfigurationSetAttributesCommand extends $Command<PutEmailIdentityConfigurationSetAttributesCommandInput, PutEmailIdentityConfigurationSetAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutEmailIdentityConfigurationSetAttributesCommandInput;
            constructor(input: PutEmailIdentityConfigurationSetAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailIdentityConfigurationSetAttributesCommandInput, PutEmailIdentityConfigurationSetAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailIdentityDkimAttributesRequest, PutEmailIdentityDkimAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutEmailIdentityDkimAttributesCommandInput extends PutEmailIdentityDkimAttributesRequest {
    }
    export interface PutEmailIdentityDkimAttributesCommandOutput extends PutEmailIdentityDkimAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Used to enable or disable DKIM authentication for an email identity.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutEmailIdentityDkimAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutEmailIdentityDkimAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutEmailIdentityDkimAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailIdentityDkimAttributesCommandInput} for command's `input` shape.
        * @see {@link PutEmailIdentityDkimAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutEmailIdentityDkimAttributesCommand extends $Command<PutEmailIdentityDkimAttributesCommandInput, PutEmailIdentityDkimAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutEmailIdentityDkimAttributesCommandInput;
            constructor(input: PutEmailIdentityDkimAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailIdentityDkimAttributesCommandInput, PutEmailIdentityDkimAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimSigningAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailIdentityDkimSigningAttributesRequest, PutEmailIdentityDkimSigningAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutEmailIdentityDkimSigningAttributesCommandInput extends PutEmailIdentityDkimSigningAttributesRequest {
    }
    export interface PutEmailIdentityDkimSigningAttributesCommandOutput extends PutEmailIdentityDkimSigningAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Used to configure or change the DKIM authentication settings for an email domain
        *             identity. You can use this operation to do any of the following:</p>
        *         <ul>
        *             <li>
        *                 <p>Update the signing attributes for an identity that uses Bring Your Own DKIM
        *                     (BYODKIM).</p>
        *             </li>
        *             <li>
        *                 <p>Update the key length that should be used for Easy DKIM.</p>
        *             </li>
        *             <li>
        *                 <p>Change from using no DKIM authentication to using Easy DKIM.</p>
        *             </li>
        *             <li>
        *                 <p>Change from using no DKIM authentication to using BYODKIM.</p>
        *             </li>
        *             <li>
        *                 <p>Change from using Easy DKIM to using BYODKIM.</p>
        *             </li>
        *             <li>
        *                 <p>Change from using BYODKIM to using Easy DKIM.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutEmailIdentityDkimSigningAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutEmailIdentityDkimSigningAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutEmailIdentityDkimSigningAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailIdentityDkimSigningAttributesCommandInput} for command's `input` shape.
        * @see {@link PutEmailIdentityDkimSigningAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutEmailIdentityDkimSigningAttributesCommand extends $Command<PutEmailIdentityDkimSigningAttributesCommandInput, PutEmailIdentityDkimSigningAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutEmailIdentityDkimSigningAttributesCommandInput;
            constructor(input: PutEmailIdentityDkimSigningAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailIdentityDkimSigningAttributesCommandInput, PutEmailIdentityDkimSigningAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityFeedbackAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailIdentityFeedbackAttributesRequest, PutEmailIdentityFeedbackAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutEmailIdentityFeedbackAttributesCommandInput extends PutEmailIdentityFeedbackAttributesRequest {
    }
    export interface PutEmailIdentityFeedbackAttributesCommandOutput extends PutEmailIdentityFeedbackAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Used to enable or disable feedback forwarding for an identity. This setting determines
        *             what happens when an identity is used to send an email that results in a bounce or
        *             complaint event.</p>
        *         <p>If the value is <code>true</code>, you receive email notifications when bounce or
        *             complaint events occur. These notifications are sent to the address that you specified
        *             in the <code>Return-Path</code> header of the original email.</p>
        *         <p>You're required to have a method of tracking bounces and complaints. If you haven't
        *             set up another mechanism for receiving bounce or complaint notifications (for example,
        *             by setting up an event destination), you receive an email notification when these events
        *             occur (even if this setting is disabled).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutEmailIdentityFeedbackAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutEmailIdentityFeedbackAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutEmailIdentityFeedbackAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailIdentityFeedbackAttributesCommandInput} for command's `input` shape.
        * @see {@link PutEmailIdentityFeedbackAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutEmailIdentityFeedbackAttributesCommand extends $Command<PutEmailIdentityFeedbackAttributesCommandInput, PutEmailIdentityFeedbackAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutEmailIdentityFeedbackAttributesCommandInput;
            constructor(input: PutEmailIdentityFeedbackAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailIdentityFeedbackAttributesCommandInput, PutEmailIdentityFeedbackAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityMailFromAttributesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailIdentityMailFromAttributesRequest, PutEmailIdentityMailFromAttributesResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutEmailIdentityMailFromAttributesCommandInput extends PutEmailIdentityMailFromAttributesRequest {
    }
    export interface PutEmailIdentityMailFromAttributesCommandOutput extends PutEmailIdentityMailFromAttributesResponse, __MetadataBearer {
    }
    /**
        * <p>Used to enable or disable the custom Mail-From domain configuration for an email
        *             identity.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutEmailIdentityMailFromAttributesCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutEmailIdentityMailFromAttributesCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutEmailIdentityMailFromAttributesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailIdentityMailFromAttributesCommandInput} for command's `input` shape.
        * @see {@link PutEmailIdentityMailFromAttributesCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutEmailIdentityMailFromAttributesCommand extends $Command<PutEmailIdentityMailFromAttributesCommandInput, PutEmailIdentityMailFromAttributesCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutEmailIdentityMailFromAttributesCommandInput;
            constructor(input: PutEmailIdentityMailFromAttributesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailIdentityMailFromAttributesCommandInput, PutEmailIdentityMailFromAttributesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutSuppressedDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutSuppressedDestinationRequest, PutSuppressedDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface PutSuppressedDestinationCommandInput extends PutSuppressedDestinationRequest {
    }
    export interface PutSuppressedDestinationCommandOutput extends PutSuppressedDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Adds an email address to the suppression list for your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, PutSuppressedDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, PutSuppressedDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new PutSuppressedDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutSuppressedDestinationCommandInput} for command's `input` shape.
        * @see {@link PutSuppressedDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class PutSuppressedDestinationCommand extends $Command<PutSuppressedDestinationCommandInput, PutSuppressedDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: PutSuppressedDestinationCommandInput;
            constructor(input: PutSuppressedDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutSuppressedDestinationCommandInput, PutSuppressedDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendBulkEmailCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SendBulkEmailRequest, SendBulkEmailResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface SendBulkEmailCommandInput extends SendBulkEmailRequest {
    }
    export interface SendBulkEmailCommandOutput extends SendBulkEmailResponse, __MetadataBearer {
    }
    /**
        * <p>Composes an email message to multiple destinations.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, SendBulkEmailCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, SendBulkEmailCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new SendBulkEmailCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SendBulkEmailCommandInput} for command's `input` shape.
        * @see {@link SendBulkEmailCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class SendBulkEmailCommand extends $Command<SendBulkEmailCommandInput, SendBulkEmailCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: SendBulkEmailCommandInput;
            constructor(input: SendBulkEmailCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SendBulkEmailCommandInput, SendBulkEmailCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendCustomVerificationEmailCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SendCustomVerificationEmailRequest, SendCustomVerificationEmailResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface SendCustomVerificationEmailCommandInput extends SendCustomVerificationEmailRequest {
    }
    export interface SendCustomVerificationEmailCommandOutput extends SendCustomVerificationEmailResponse, __MetadataBearer {
    }
    /**
        * <p>Adds an email address to the list of identities for your Amazon SES account in the current
        *             Amazon Web Services Region and attempts to verify it. As a result of executing this operation, a
        *             customized verification email is sent to the specified address.</p>
        *         <p>To use this operation, you must first create a custom verification email template. For
        *             more information about creating and using custom verification email templates, see
        *                 <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, SendCustomVerificationEmailCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, SendCustomVerificationEmailCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new SendCustomVerificationEmailCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SendCustomVerificationEmailCommandInput} for command's `input` shape.
        * @see {@link SendCustomVerificationEmailCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class SendCustomVerificationEmailCommand extends $Command<SendCustomVerificationEmailCommandInput, SendCustomVerificationEmailCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: SendCustomVerificationEmailCommandInput;
            constructor(input: SendCustomVerificationEmailCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SendCustomVerificationEmailCommandInput, SendCustomVerificationEmailCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendEmailCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SendEmailRequest, SendEmailResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface SendEmailCommandInput extends SendEmailRequest {
    }
    export interface SendEmailCommandOutput extends SendEmailResponse, __MetadataBearer {
    }
    /**
        * <p>Sends an email message. You can use the Amazon SES API v2 to send the following types of
        *             messages:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <b>Simple</b> – A standard email message. When
        *                     you create this type of message, you specify the sender, the recipient, and the
        *                     message body, and Amazon SES assembles the message for you.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <b>Raw</b> – A raw, MIME-formatted email
        *                     message. When you send this type of email, you have to specify all of the
        *                     message headers, as well as the message body. You can use this message type to
        *                     send messages that contain attachments. The message that you specify has to be a
        *                     valid MIME message.</p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <b>Templated</b> – A message that contains
        *                     personalization tags. When you send this type of email, Amazon SES API v2 automatically
        *                     replaces the tags with values that you specify.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, SendEmailCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, SendEmailCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new SendEmailCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SendEmailCommandInput} for command's `input` shape.
        * @see {@link SendEmailCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class SendEmailCommand extends $Command<SendEmailCommandInput, SendEmailCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: SendEmailCommandInput;
            constructor(input: SendEmailCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SendEmailCommandInput, SendEmailCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Add one or more tags (keys and values) to a specified resource. A
        *                 <i>tag</i> is a label that you optionally define and associate with a
        *             resource. Tags can help you categorize and manage resources in different ways, such as
        *             by purpose, owner, environment, or other criteria. A resource can have as many as 50
        *             tags.</p>
        *         <p>Each tag consists of a required <i>tag key</i> and an
        *                 associated <i>tag value</i>, both of which you define. A tag key is a
        *             general label that acts as a category for more specific tag values. A tag value acts as
        *             a descriptor within a tag key.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, TagResourceCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, TagResourceCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TestRenderEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TestRenderEmailTemplateRequest, TestRenderEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface TestRenderEmailTemplateCommandInput extends TestRenderEmailTemplateRequest {
    }
    export interface TestRenderEmailTemplateCommandOutput extends TestRenderEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a preview of the MIME content of an email when provided with a template and a
        *             set of replacement data.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, TestRenderEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, TestRenderEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new TestRenderEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TestRenderEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link TestRenderEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class TestRenderEmailTemplateCommand extends $Command<TestRenderEmailTemplateCommandInput, TestRenderEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: TestRenderEmailTemplateCommandInput;
            constructor(input: TestRenderEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TestRenderEmailTemplateCommandInput, TestRenderEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Remove one or more tags (keys and values) from a specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UntagResourceCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UntagResourceCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateConfigurationSetEventDestinationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateConfigurationSetEventDestinationRequest, UpdateConfigurationSetEventDestinationResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateConfigurationSetEventDestinationCommandInput extends UpdateConfigurationSetEventDestinationRequest {
    }
    export interface UpdateConfigurationSetEventDestinationCommandOutput extends UpdateConfigurationSetEventDestinationResponse, __MetadataBearer {
    }
    /**
        * <p>Update the configuration of an event destination for a configuration set.</p>
        *         <p>
        *             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
        *             and complaints. <i>Event destinations</i> are places that you can send
        *             information about these events to. For example, you can send event data to Amazon SNS to
        *             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
        *             stream data to Amazon S3 for long-term storage.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateConfigurationSetEventDestinationCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateConfigurationSetEventDestinationCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateConfigurationSetEventDestinationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateConfigurationSetEventDestinationCommandInput} for command's `input` shape.
        * @see {@link UpdateConfigurationSetEventDestinationCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateConfigurationSetEventDestinationCommand extends $Command<UpdateConfigurationSetEventDestinationCommandInput, UpdateConfigurationSetEventDestinationCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateConfigurationSetEventDestinationCommandInput;
            constructor(input: UpdateConfigurationSetEventDestinationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateConfigurationSetEventDestinationCommandInput, UpdateConfigurationSetEventDestinationCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateContactRequest, UpdateContactResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateContactCommandInput extends UpdateContactRequest {
    }
    export interface UpdateContactCommandOutput extends UpdateContactResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a contact's preferences for a list. It is not necessary to specify all
        *             existing topic preferences in the TopicPreferences object, just the ones that need
        *             updating.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateContactCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateContactCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateContactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactCommandInput} for command's `input` shape.
        * @see {@link UpdateContactCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateContactCommand extends $Command<UpdateContactCommandInput, UpdateContactCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateContactCommandInput;
            constructor(input: UpdateContactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactCommandInput, UpdateContactCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactListCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateContactListRequest, UpdateContactListResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateContactListCommandInput extends UpdateContactListRequest {
    }
    export interface UpdateContactListCommandOutput extends UpdateContactListResponse, __MetadataBearer {
    }
    /**
        * <p>Updates contact list metadata. This operation does a complete replacement.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateContactListCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateContactListCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateContactListCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateContactListCommandInput} for command's `input` shape.
        * @see {@link UpdateContactListCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateContactListCommand extends $Command<UpdateContactListCommandInput, UpdateContactListCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateContactListCommandInput;
            constructor(input: UpdateContactListCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateContactListCommandInput, UpdateContactListCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateCustomVerificationEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateCustomVerificationEmailTemplateRequest, UpdateCustomVerificationEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateCustomVerificationEmailTemplateCommandInput extends UpdateCustomVerificationEmailTemplateRequest {
    }
    export interface UpdateCustomVerificationEmailTemplateCommandOutput extends UpdateCustomVerificationEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing custom verification email template.</p>
        *         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
        *                 Guide</i>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateCustomVerificationEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateCustomVerificationEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateCustomVerificationEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateCustomVerificationEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateCustomVerificationEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateCustomVerificationEmailTemplateCommand extends $Command<UpdateCustomVerificationEmailTemplateCommandInput, UpdateCustomVerificationEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateCustomVerificationEmailTemplateCommandInput;
            constructor(input: UpdateCustomVerificationEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCustomVerificationEmailTemplateCommandInput, UpdateCustomVerificationEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailIdentityPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEmailIdentityPolicyRequest, UpdateEmailIdentityPolicyResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateEmailIdentityPolicyCommandInput extends UpdateEmailIdentityPolicyRequest {
    }
    export interface UpdateEmailIdentityPolicyCommandOutput extends UpdateEmailIdentityPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the specified sending authorization policy for the given identity (an email
        *             address or a domain). This API returns successfully even if a policy with the specified
        *             name does not exist.</p>
        *         <note>
        *             <p>This API is for the identity owner only. If you have not verified the identity,
        *                 this API will return an error.</p>
        *         </note>
        *         <p>Sending authorization is a feature that enables an identity owner to authorize other
        *             senders to use its identities. For information about using sending authorization, see
        *             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateEmailIdentityPolicyCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateEmailIdentityPolicyCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateEmailIdentityPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEmailIdentityPolicyCommandInput} for command's `input` shape.
        * @see {@link UpdateEmailIdentityPolicyCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateEmailIdentityPolicyCommand extends $Command<UpdateEmailIdentityPolicyCommandInput, UpdateEmailIdentityPolicyCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateEmailIdentityPolicyCommandInput;
            constructor(input: UpdateEmailIdentityPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEmailIdentityPolicyCommandInput, UpdateEmailIdentityPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEmailTemplateRequest, UpdateEmailTemplateResponse } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client";
    export interface UpdateEmailTemplateCommandInput extends UpdateEmailTemplateRequest {
    }
    export interface UpdateEmailTemplateCommandOutput extends UpdateEmailTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an email template. Email templates enable you to send personalized email to
        *             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
        *                 Guide</a>.</p>
        *         <p>You can execute this operation no more than once per second.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SESv2Client, UpdateEmailTemplateCommand } from "@aws-sdk/client-sesv2"; // ES Modules import
        * // const { SESv2Client, UpdateEmailTemplateCommand } = require("@aws-sdk/client-sesv2"); // CommonJS import
        * const client = new SESv2Client(config);
        * const command = new UpdateEmailTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEmailTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateEmailTemplateCommandOutput} for command's `response` shape.
        * @see {@link SESv2ClientResolvedConfig | config} for SESv2Client's `config` shape.
        *
        */
    export class UpdateEmailTemplateCommand extends $Command<UpdateEmailTemplateCommandInput, UpdateEmailTemplateCommandOutput, SESv2ClientResolvedConfig> {
            readonly input: UpdateEmailTemplateCommandInput;
            constructor(input: UpdateEmailTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SESv2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEmailTemplateCommandInput, UpdateEmailTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/SESv2Client' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateConfigurationSetCommandInput, CreateConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetCommand";
    import { CreateConfigurationSetEventDestinationCommandInput, CreateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateConfigurationSetEventDestinationCommand";
    import { CreateContactCommandInput, CreateContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactCommand";
    import { CreateContactListCommandInput, CreateContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateContactListCommand";
    import { CreateCustomVerificationEmailTemplateCommandInput, CreateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateCustomVerificationEmailTemplateCommand";
    import { CreateDedicatedIpPoolCommandInput, CreateDedicatedIpPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDedicatedIpPoolCommand";
    import { CreateDeliverabilityTestReportCommandInput, CreateDeliverabilityTestReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateDeliverabilityTestReportCommand";
    import { CreateEmailIdentityCommandInput, CreateEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityCommand";
    import { CreateEmailIdentityPolicyCommandInput, CreateEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailIdentityPolicyCommand";
    import { CreateEmailTemplateCommandInput, CreateEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateEmailTemplateCommand";
    import { CreateImportJobCommandInput, CreateImportJobCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/CreateImportJobCommand";
    import { DeleteConfigurationSetCommandInput, DeleteConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetCommand";
    import { DeleteConfigurationSetEventDestinationCommandInput, DeleteConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteConfigurationSetEventDestinationCommand";
    import { DeleteContactCommandInput, DeleteContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactCommand";
    import { DeleteContactListCommandInput, DeleteContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteContactListCommand";
    import { DeleteCustomVerificationEmailTemplateCommandInput, DeleteCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteCustomVerificationEmailTemplateCommand";
    import { DeleteDedicatedIpPoolCommandInput, DeleteDedicatedIpPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteDedicatedIpPoolCommand";
    import { DeleteEmailIdentityCommandInput, DeleteEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityCommand";
    import { DeleteEmailIdentityPolicyCommandInput, DeleteEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailIdentityPolicyCommand";
    import { DeleteEmailTemplateCommandInput, DeleteEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteEmailTemplateCommand";
    import { DeleteSuppressedDestinationCommandInput, DeleteSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/DeleteSuppressedDestinationCommand";
    import { GetAccountCommandInput, GetAccountCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetAccountCommand";
    import { GetBlacklistReportsCommandInput, GetBlacklistReportsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetBlacklistReportsCommand";
    import { GetConfigurationSetCommandInput, GetConfigurationSetCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetCommand";
    import { GetConfigurationSetEventDestinationsCommandInput, GetConfigurationSetEventDestinationsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetConfigurationSetEventDestinationsCommand";
    import { GetContactCommandInput, GetContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactCommand";
    import { GetContactListCommandInput, GetContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetContactListCommand";
    import { GetCustomVerificationEmailTemplateCommandInput, GetCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetCustomVerificationEmailTemplateCommand";
    import { GetDedicatedIpCommandInput, GetDedicatedIpCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpCommand";
    import { GetDedicatedIpsCommandInput, GetDedicatedIpsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDedicatedIpsCommand";
    import { GetDeliverabilityDashboardOptionsCommandInput, GetDeliverabilityDashboardOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityDashboardOptionsCommand";
    import { GetDeliverabilityTestReportCommandInput, GetDeliverabilityTestReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDeliverabilityTestReportCommand";
    import { GetDomainDeliverabilityCampaignCommandInput, GetDomainDeliverabilityCampaignCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainDeliverabilityCampaignCommand";
    import { GetDomainStatisticsReportCommandInput, GetDomainStatisticsReportCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetDomainStatisticsReportCommand";
    import { GetEmailIdentityCommandInput, GetEmailIdentityCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityCommand";
    import { GetEmailIdentityPoliciesCommandInput, GetEmailIdentityPoliciesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailIdentityPoliciesCommand";
    import { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetEmailTemplateCommand";
    import { GetImportJobCommandInput, GetImportJobCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetImportJobCommand";
    import { GetSuppressedDestinationCommandInput, GetSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/GetSuppressedDestinationCommand";
    import { ListConfigurationSetsCommandInput, ListConfigurationSetsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListConfigurationSetsCommand";
    import { ListContactListsCommandInput, ListContactListsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactListsCommand";
    import { ListContactsCommandInput, ListContactsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListContactsCommand";
    import { ListCustomVerificationEmailTemplatesCommandInput, ListCustomVerificationEmailTemplatesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListCustomVerificationEmailTemplatesCommand";
    import { ListDedicatedIpPoolsCommandInput, ListDedicatedIpPoolsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDedicatedIpPoolsCommand";
    import { ListDeliverabilityTestReportsCommandInput, ListDeliverabilityTestReportsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDeliverabilityTestReportsCommand";
    import { ListDomainDeliverabilityCampaignsCommandInput, ListDomainDeliverabilityCampaignsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListDomainDeliverabilityCampaignsCommand";
    import { ListEmailIdentitiesCommandInput, ListEmailIdentitiesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailIdentitiesCommand";
    import { ListEmailTemplatesCommandInput, ListEmailTemplatesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListEmailTemplatesCommand";
    import { ListImportJobsCommandInput, ListImportJobsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListImportJobsCommand";
    import { ListSuppressedDestinationsCommandInput, ListSuppressedDestinationsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListSuppressedDestinationsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/ListTagsForResourceCommand";
    import { PutAccountDedicatedIpWarmupAttributesCommandInput, PutAccountDedicatedIpWarmupAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDedicatedIpWarmupAttributesCommand";
    import { PutAccountDetailsCommandInput, PutAccountDetailsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountDetailsCommand";
    import { PutAccountSendingAttributesCommandInput, PutAccountSendingAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSendingAttributesCommand";
    import { PutAccountSuppressionAttributesCommandInput, PutAccountSuppressionAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutAccountSuppressionAttributesCommand";
    import { PutConfigurationSetDeliveryOptionsCommandInput, PutConfigurationSetDeliveryOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetDeliveryOptionsCommand";
    import { PutConfigurationSetReputationOptionsCommandInput, PutConfigurationSetReputationOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetReputationOptionsCommand";
    import { PutConfigurationSetSendingOptionsCommandInput, PutConfigurationSetSendingOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSendingOptionsCommand";
    import { PutConfigurationSetSuppressionOptionsCommandInput, PutConfigurationSetSuppressionOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetSuppressionOptionsCommand";
    import { PutConfigurationSetTrackingOptionsCommandInput, PutConfigurationSetTrackingOptionsCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutConfigurationSetTrackingOptionsCommand";
    import { PutDedicatedIpInPoolCommandInput, PutDedicatedIpInPoolCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpInPoolCommand";
    import { PutDedicatedIpWarmupAttributesCommandInput, PutDedicatedIpWarmupAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDedicatedIpWarmupAttributesCommand";
    import { PutDeliverabilityDashboardOptionCommandInput, PutDeliverabilityDashboardOptionCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutDeliverabilityDashboardOptionCommand";
    import { PutEmailIdentityConfigurationSetAttributesCommandInput, PutEmailIdentityConfigurationSetAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityConfigurationSetAttributesCommand";
    import { PutEmailIdentityDkimAttributesCommandInput, PutEmailIdentityDkimAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimAttributesCommand";
    import { PutEmailIdentityDkimSigningAttributesCommandInput, PutEmailIdentityDkimSigningAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityDkimSigningAttributesCommand";
    import { PutEmailIdentityFeedbackAttributesCommandInput, PutEmailIdentityFeedbackAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityFeedbackAttributesCommand";
    import { PutEmailIdentityMailFromAttributesCommandInput, PutEmailIdentityMailFromAttributesCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutEmailIdentityMailFromAttributesCommand";
    import { PutSuppressedDestinationCommandInput, PutSuppressedDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/PutSuppressedDestinationCommand";
    import { SendBulkEmailCommandInput, SendBulkEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendBulkEmailCommand";
    import { SendCustomVerificationEmailCommandInput, SendCustomVerificationEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendCustomVerificationEmailCommand";
    import { SendEmailCommandInput, SendEmailCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/SendEmailCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TagResourceCommand";
    import { TestRenderEmailTemplateCommandInput, TestRenderEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/TestRenderEmailTemplateCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UntagResourceCommand";
    import { UpdateConfigurationSetEventDestinationCommandInput, UpdateConfigurationSetEventDestinationCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateConfigurationSetEventDestinationCommand";
    import { UpdateContactCommandInput, UpdateContactCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactCommand";
    import { UpdateContactListCommandInput, UpdateContactListCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateContactListCommand";
    import { UpdateCustomVerificationEmailTemplateCommandInput, UpdateCustomVerificationEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateCustomVerificationEmailTemplateCommand";
    import { UpdateEmailIdentityPolicyCommandInput, UpdateEmailIdentityPolicyCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailIdentityPolicyCommand";
    import { UpdateEmailTemplateCommandInput, UpdateEmailTemplateCommandOutput } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/commands/UpdateEmailTemplateCommand";
    export type ServiceInputTypes = CreateConfigurationSetCommandInput | CreateConfigurationSetEventDestinationCommandInput | CreateContactCommandInput | CreateContactListCommandInput | CreateCustomVerificationEmailTemplateCommandInput | CreateDedicatedIpPoolCommandInput | CreateDeliverabilityTestReportCommandInput | CreateEmailIdentityCommandInput | CreateEmailIdentityPolicyCommandInput | CreateEmailTemplateCommandInput | CreateImportJobCommandInput | DeleteConfigurationSetCommandInput | DeleteConfigurationSetEventDestinationCommandInput | DeleteContactCommandInput | DeleteContactListCommandInput | DeleteCustomVerificationEmailTemplateCommandInput | DeleteDedicatedIpPoolCommandInput | DeleteEmailIdentityCommandInput | DeleteEmailIdentityPolicyCommandInput | DeleteEmailTemplateCommandInput | DeleteSuppressedDestinationCommandInput | GetAccountCommandInput | GetBlacklistReportsCommandInput | GetConfigurationSetCommandInput | GetConfigurationSetEventDestinationsCommandInput | GetContactCommandInput | GetContactListCommandInput | GetCustomVerificationEmailTemplateCommandInput | GetDedicatedIpCommandInput | GetDedicatedIpsCommandInput | GetDeliverabilityDashboardOptionsCommandInput | GetDeliverabilityTestReportCommandInput | GetDomainDeliverabilityCampaignCommandInput | GetDomainStatisticsReportCommandInput | GetEmailIdentityCommandInput | GetEmailIdentityPoliciesCommandInput | GetEmailTemplateCommandInput | GetImportJobCommandInput | GetSuppressedDestinationCommandInput | ListConfigurationSetsCommandInput | ListContactListsCommandInput | ListContactsCommandInput | ListCustomVerificationEmailTemplatesCommandInput | ListDedicatedIpPoolsCommandInput | ListDeliverabilityTestReportsCommandInput | ListDomainDeliverabilityCampaignsCommandInput | ListEmailIdentitiesCommandInput | ListEmailTemplatesCommandInput | ListImportJobsCommandInput | ListSuppressedDestinationsCommandInput | ListTagsForResourceCommandInput | PutAccountDedicatedIpWarmupAttributesCommandInput | PutAccountDetailsCommandInput | PutAccountSendingAttributesCommandInput | PutAccountSuppressionAttributesCommandInput | PutConfigurationSetDeliveryOptionsCommandInput | PutConfigurationSetReputationOptionsCommandInput | PutConfigurationSetSendingOptionsCommandInput | PutConfigurationSetSuppressionOptionsCommandInput | PutConfigurationSetTrackingOptionsCommandInput | PutDedicatedIpInPoolCommandInput | PutDedicatedIpWarmupAttributesCommandInput | PutDeliverabilityDashboardOptionCommandInput | PutEmailIdentityConfigurationSetAttributesCommandInput | PutEmailIdentityDkimAttributesCommandInput | PutEmailIdentityDkimSigningAttributesCommandInput | PutEmailIdentityFeedbackAttributesCommandInput | PutEmailIdentityMailFromAttributesCommandInput | PutSuppressedDestinationCommandInput | SendBulkEmailCommandInput | SendCustomVerificationEmailCommandInput | SendEmailCommandInput | TagResourceCommandInput | TestRenderEmailTemplateCommandInput | UntagResourceCommandInput | UpdateConfigurationSetEventDestinationCommandInput | UpdateContactCommandInput | UpdateContactListCommandInput | UpdateCustomVerificationEmailTemplateCommandInput | UpdateEmailIdentityPolicyCommandInput | UpdateEmailTemplateCommandInput;
    export type ServiceOutputTypes = CreateConfigurationSetCommandOutput | CreateConfigurationSetEventDestinationCommandOutput | CreateContactCommandOutput | CreateContactListCommandOutput | CreateCustomVerificationEmailTemplateCommandOutput | CreateDedicatedIpPoolCommandOutput | CreateDeliverabilityTestReportCommandOutput | CreateEmailIdentityCommandOutput | CreateEmailIdentityPolicyCommandOutput | CreateEmailTemplateCommandOutput | CreateImportJobCommandOutput | DeleteConfigurationSetCommandOutput | DeleteConfigurationSetEventDestinationCommandOutput | DeleteContactCommandOutput | DeleteContactListCommandOutput | DeleteCustomVerificationEmailTemplateCommandOutput | DeleteDedicatedIpPoolCommandOutput | DeleteEmailIdentityCommandOutput | DeleteEmailIdentityPolicyCommandOutput | DeleteEmailTemplateCommandOutput | DeleteSuppressedDestinationCommandOutput | GetAccountCommandOutput | GetBlacklistReportsCommandOutput | GetConfigurationSetCommandOutput | GetConfigurationSetEventDestinationsCommandOutput | GetContactCommandOutput | GetContactListCommandOutput | GetCustomVerificationEmailTemplateCommandOutput | GetDedicatedIpCommandOutput | GetDedicatedIpsCommandOutput | GetDeliverabilityDashboardOptionsCommandOutput | GetDeliverabilityTestReportCommandOutput | GetDomainDeliverabilityCampaignCommandOutput | GetDomainStatisticsReportCommandOutput | GetEmailIdentityCommandOutput | GetEmailIdentityPoliciesCommandOutput | GetEmailTemplateCommandOutput | GetImportJobCommandOutput | GetSuppressedDestinationCommandOutput | ListConfigurationSetsCommandOutput | ListContactListsCommandOutput | ListContactsCommandOutput | ListCustomVerificationEmailTemplatesCommandOutput | ListDedicatedIpPoolsCommandOutput | ListDeliverabilityTestReportsCommandOutput | ListDomainDeliverabilityCampaignsCommandOutput | ListEmailIdentitiesCommandOutput | ListEmailTemplatesCommandOutput | ListImportJobsCommandOutput | ListSuppressedDestinationsCommandOutput | ListTagsForResourceCommandOutput | PutAccountDedicatedIpWarmupAttributesCommandOutput | PutAccountDetailsCommandOutput | PutAccountSendingAttributesCommandOutput | PutAccountSuppressionAttributesCommandOutput | PutConfigurationSetDeliveryOptionsCommandOutput | PutConfigurationSetReputationOptionsCommandOutput | PutConfigurationSetSendingOptionsCommandOutput | PutConfigurationSetSuppressionOptionsCommandOutput | PutConfigurationSetTrackingOptionsCommandOutput | PutDedicatedIpInPoolCommandOutput | PutDedicatedIpWarmupAttributesCommandOutput | PutDeliverabilityDashboardOptionCommandOutput | PutEmailIdentityConfigurationSetAttributesCommandOutput | PutEmailIdentityDkimAttributesCommandOutput | PutEmailIdentityDkimSigningAttributesCommandOutput | PutEmailIdentityFeedbackAttributesCommandOutput | PutEmailIdentityMailFromAttributesCommandOutput | PutSuppressedDestinationCommandOutput | SendBulkEmailCommandOutput | SendCustomVerificationEmailCommandOutput | SendEmailCommandOutput | TagResourceCommandOutput | TestRenderEmailTemplateCommandOutput | UntagResourceCommandOutput | UpdateConfigurationSetEventDestinationCommandOutput | UpdateContactCommandOutput | UpdateContactListCommandOutput | UpdateCustomVerificationEmailTemplateCommandOutput | UpdateEmailIdentityPolicyCommandOutput | UpdateEmailTemplateCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type SESv2ClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of SESv2Client class constructor that set the region, credentials and other options.
        */
    export interface SESv2ClientConfig extends SESv2ClientConfigType {
    }
    type SESv2ClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of SESv2Client class. This is resolved and normalized from the {@link SESv2ClientConfig | constructor configuration interface}.
        */
    export interface SESv2ClientResolvedConfig extends SESv2ClientResolvedConfigType {
    }
    /**
        * <fullname>Amazon SES API v2</fullname>
        *
        *         <p>
        *             <a href="http://aws.amazon.com/ses">Amazon SES</a> is an Amazon Web Services service that
        *             you can use to send email messages to your customers.</p>
        *         <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/">Amazon Simple Email Service Developer
        *                 Guide</a>. The <i>Amazon SES Developer Guide</i> provides information
        *             and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
        */
    export class SESv2Client extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, SESv2ClientResolvedConfig> {
            /**
                * The resolved configuration of SESv2Client class. This is resolved and normalized from the {@link SESv2ClientConfig | constructor configuration interface}.
                */
            readonly config: SESv2ClientResolvedConfig;
            constructor(configuration: SESv2ClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { SESv2ServiceException as __BaseException } from "@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/SESv2ServiceException";
    export enum ContactLanguage {
            EN = "EN",
            JA = "JA"
    }
    export enum MailType {
            MARKETING = "MARKETING",
            TRANSACTIONAL = "TRANSACTIONAL"
    }
    export enum ReviewStatus {
            DENIED = "DENIED",
            FAILED = "FAILED",
            GRANTED = "GRANTED",
            PENDING = "PENDING"
    }
    /**
        * <p>An object that contains information about your account details review.</p>
        */
    export interface ReviewDetails {
            /**
                * <p>The status of the latest review of your account. The status can be one of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>PENDING</code> – We have received your appeal and are in the
                *                     process of reviewing it.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>GRANTED</code> – Your appeal has been reviewed and your production
                *                     access has been granted.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>DENIED</code> – Your appeal has been reviewed and your production
                *                     access has been denied.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>FAILED</code> – An internal error occurred and we didn't receive
                *                     your appeal. You can submit your appeal again.</p>
                *             </li>
                *          </ul>
                */
            Status?: ReviewStatus | string;
            /**
                * <p>The associated support center case ID (if any).</p>
                */
            CaseId?: string;
    }
    export namespace ReviewDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReviewDetails) => any;
    }
    /**
        * <p>An object that contains information about your account details.</p>
        */
    export interface AccountDetails {
            /**
                * <p>The type of email your account is sending. The mail type can be one of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>MARKETING</code> – Most of your sending traffic is to keep your
                *                     customers informed of your latest offering.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>TRANSACTIONAL</code> – Most of your sending traffic is to
                *                     communicate during a transaction with a customer.</p>
                *             </li>
                *          </ul>
                */
            MailType?: MailType | string;
            /**
                * <p>The URL of your website. This information helps us better understand the type of
                *             content that you plan to send.</p>
                */
            WebsiteURL?: string;
            /**
                * <p>The language you would prefer for the case. The contact language can be one of
                *                 <code>ENGLISH</code> or <code>JAPANESE</code>.</p>
                */
            ContactLanguage?: ContactLanguage | string;
            /**
                * <p>A description of the types of email that you plan to send.</p>
                */
            UseCaseDescription?: string;
            /**
                * <p>Additional email addresses where updates are sent about your account review
                *             process.</p>
                */
            AdditionalContactEmailAddresses?: string[];
            /**
                * <p>Information about the review of the latest details you submitted.</p>
                */
            ReviewDetails?: ReviewDetails;
    }
    export namespace AccountDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccountDetails) => any;
    }
    /**
        * <p>The message can't be sent because the account's ability to send email has been
        *             permanently restricted.</p>
        */
    export class AccountSuspendedException extends __BaseException {
            readonly name: "AccountSuspendedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccountSuspendedException, __BaseException>);
    }
    /**
        * <p>The resource specified in your request already exists.</p>
        */
    export class AlreadyExistsException extends __BaseException {
            readonly name: "AlreadyExistsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>);
    }
    /**
        * <p>The input you provided is invalid.</p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    export enum BehaviorOnMxFailure {
            REJECT_MESSAGE = "REJECT_MESSAGE",
            USE_DEFAULT_VALUE = "USE_DEFAULT_VALUE"
    }
    /**
        * <p>An object that contains information about a blacklisting event that impacts one of the
        *             dedicated IP addresses that is associated with your account.</p>
        */
    export interface BlacklistEntry {
            /**
                * <p>The name of the blacklist that the IP address appears on.</p>
                */
            RblName?: string;
            /**
                * <p>The time when the blacklisting event occurred, shown in Unix time format.</p>
                */
            ListingTime?: Date;
            /**
                * <p>Additional information about the blacklisting event, as provided by the blacklist
                *             maintainer.</p>
                */
            Description?: string;
    }
    export namespace BlacklistEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BlacklistEntry) => any;
    }
    /**
        * <p>An object that represents the content of the email, and optionally a character set
        *             specification.</p>
        */
    export interface Content {
            /**
                * <p>The content of the message itself.</p>
                */
            Data: string | undefined;
            /**
                * <p>The character set for the content. Because of the constraints of the SMTP protocol,
                *             Amazon SES uses 7-bit ASCII by default. If the text includes characters outside of the ASCII
                *             range, you have to specify a character set. For example, you could specify
                *                 <code>UTF-8</code>, <code>ISO-8859-1</code>, or <code>Shift_JIS</code>.</p>
                */
            Charset?: string;
    }
    export namespace Content {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Content) => any;
    }
    /**
        * <p>Represents the body of the email message.</p>
        */
    export interface Body {
            /**
                * <p>An object that represents the version of the message that is displayed in email
                *             clients that don't support HTML, or clients where the recipient has disabled HTML
                *             rendering.</p>
                */
            Text?: Content;
            /**
                * <p>An object that represents the version of the message that is displayed in email
                *             clients that support HTML. HTML messages can include formatted text, hyperlinks, images,
                *             and more. </p>
                */
            Html?: Content;
    }
    export namespace Body {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Body) => any;
    }
    /**
        * <p>An object that defines the email template to use for an email message, and the values
        *             to use for any message variables in that template. An <i>email
        *                 template</i> is a type of message template that contains content that you
        *             want to define, save, and reuse in email messages that you send.</p>
        */
    export interface Template {
            /**
                * <p>The name of the template. You will refer to this name when you send email using the
                *                 <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
                *         </p>
                */
            TemplateName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the template.</p>
                */
            TemplateArn?: string;
            /**
                * <p>An object that defines the values to use for message variables in the template. This
                *             object is a set of key-value pairs. Each key defines a message variable in the template.
                *             The corresponding value defines the value to use for that variable.</p>
                */
            TemplateData?: string;
    }
    export namespace Template {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Template) => any;
    }
    /**
        * <p>An object that contains the body of the message. You can specify a template
        *             message.</p>
        */
    export interface BulkEmailContent {
            /**
                * <p>The template to use for the bulk email message.</p>
                */
            Template?: Template;
    }
    export namespace BulkEmailContent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BulkEmailContent) => any;
    }
    /**
        * <p>An object that describes the recipients for an email.</p>
        *         <note>
        *             <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>. For this reason, the
        *                     <i>local part</i> of a destination email address (the part of the
        *                 email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit ASCII
        *                     characters</a>. If the <i>domain part</i> of an address (the
        *                 part after the @ sign) contains non-ASCII characters, they must be encoded using
        *                 Punycode, as described in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>.</p>
        *         </note>
        */
    export interface Destination {
            /**
                * <p>An array that contains the email addresses of the "To" recipients for the
                *             email.</p>
                */
            ToAddresses?: string[];
            /**
                * <p>An array that contains the email addresses of the "CC" (carbon copy) recipients for
                *             the email.</p>
                */
            CcAddresses?: string[];
            /**
                * <p>An array that contains the email addresses of the "BCC" (blind carbon copy) recipients
                *             for the email.</p>
                */
            BccAddresses?: string[];
    }
    export namespace Destination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Destination) => any;
    }
    /**
        * <p>An object which contains <code>ReplacementTemplateData</code> to be used for a
        *             specific <code>BulkEmailEntry</code>.</p>
        */
    export interface ReplacementTemplate {
            /**
                * <p>A list of replacement values to apply to the template. This parameter is a JSON
                *             object, typically consisting of key-value pairs in which the keys correspond to
                *             replacement tags in the email template.</p>
                */
            ReplacementTemplateData?: string;
    }
    export namespace ReplacementTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReplacementTemplate) => any;
    }
    /**
        * <p>The <code>ReplaceEmailContent</code> object to be used for a specific
        *                 <code>BulkEmailEntry</code>. The <code>ReplacementTemplate</code> can be specified
        *             within this object.</p>
        */
    export interface ReplacementEmailContent {
            /**
                * <p>The <code>ReplacementTemplate</code> associated with
                *                 <code>ReplacementEmailContent</code>.</p>
                */
            ReplacementTemplate?: ReplacementTemplate;
    }
    export namespace ReplacementEmailContent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReplacementEmailContent) => any;
    }
    /**
        * <p>Contains the name and value of a tag that you apply to an email. You can use message
        *             tags when you publish email sending events.
        *             </p>
        */
    export interface MessageTag {
            /**
                * <p>The name of the message tag. The message tag name has to meet the following
                *             criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),
                *                     underscores (_), or dashes (-).</p>
                *             </li>
                *             <li>
                *                 <p>It can contain no more than 256 characters.</p>
                *             </li>
                *          </ul>
                */
            Name: string | undefined;
            /**
                * <p>The value of the message tag. The message tag value has to meet the following
                *             criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),
                *                     underscores (_), or dashes (-).</p>
                *             </li>
                *             <li>
                *                 <p>It can contain no more than 256 characters.</p>
                *             </li>
                *          </ul>
                */
            Value: string | undefined;
    }
    export namespace MessageTag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MessageTag) => any;
    }
    export interface BulkEmailEntry {
            /**
                * <p>Represents the destination of the message, consisting of To:, CC:, and BCC:
                *             fields.</p>
                *         <note>
                *             <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>. For this reason, the
                *                 local part of a destination email address (the part of the email address that
                *                 precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit ASCII
                *                     characters</a>. If the domain part of an address (the part after the @ sign)
                *                 contains non-ASCII characters, they must be encoded using Punycode, as described in
                *                     <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>.</p>
                *         </note>
                */
            Destination: Destination | undefined;
            /**
                * <p>A list of tags, in the form of name/value pairs, to apply to an email that you send
                *             using the <code>SendBulkTemplatedEmail</code> operation. Tags correspond to
                *             characteristics of the email that you define, so that you can publish email sending
                *             events.</p>
                */
            ReplacementTags?: MessageTag[];
            /**
                * <p>The <code>ReplacementEmailContent</code> associated with a
                *             <code>BulkEmailEntry</code>.</p>
                */
            ReplacementEmailContent?: ReplacementEmailContent;
    }
    export namespace BulkEmailEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BulkEmailEntry) => any;
    }
    export enum BulkEmailStatus {
            ACCOUNT_DAILY_QUOTA_EXCEEDED = "ACCOUNT_DAILY_QUOTA_EXCEEDED",
            ACCOUNT_SENDING_PAUSED = "ACCOUNT_SENDING_PAUSED",
            ACCOUNT_SUSPENDED = "ACCOUNT_SUSPENDED",
            ACCOUNT_THROTTLED = "ACCOUNT_THROTTLED",
            CONFIGURATION_SET_NOT_FOUND = "CONFIGURATION_SET_NOT_FOUND",
            CONFIGURATION_SET_SENDING_PAUSED = "CONFIGURATION_SET_SENDING_PAUSED",
            FAILED = "FAILED",
            INVALID_PARAMETER = "INVALID_PARAMETER",
            INVALID_SENDING_POOL_NAME = "INVALID_SENDING_POOL_NAME",
            MAIL_FROM_DOMAIN_NOT_VERIFIED = "MAIL_FROM_DOMAIN_NOT_VERIFIED",
            MESSAGE_REJECTED = "MESSAGE_REJECTED",
            SUCCESS = "SUCCESS",
            TEMPLATE_NOT_FOUND = "TEMPLATE_NOT_FOUND",
            TRANSIENT_FAILURE = "TRANSIENT_FAILURE"
    }
    /**
        * <p>The result of the <code>SendBulkEmail</code> operation of each specified
        *                 <code>BulkEmailEntry</code>.</p>
        */
    export interface BulkEmailEntryResult {
            /**
                * <p>The status of a message sent using the <code>SendBulkTemplatedEmail</code>
                *             operation.</p>
                *         <p>Possible values for this parameter include:</p>
                *         <ul>
                *             <li>
                *                 <p>SUCCESS: Amazon SES accepted the message, and will attempt to deliver it to
                *                     the recipients.</p>
                *             </li>
                *             <li>
                *                 <p>MESSAGE_REJECTED: The message was rejected because it contained a
                *                     virus.</p>
                *             </li>
                *             <li>
                *                 <p>MAIL_FROM_DOMAIN_NOT_VERIFIED: The sender's email address or domain was not
                *                     verified.</p>
                *             </li>
                *             <li>
                *                 <p>CONFIGURATION_SET_DOES_NOT_EXIST: The configuration set you specified does not
                *                     exist.</p>
                *             </li>
                *             <li>
                *                 <p>TEMPLATE_DOES_NOT_EXIST: The template you specified does not exist.</p>
                *             </li>
                *             <li>
                *                 <p>ACCOUNT_SUSPENDED: Your account has been shut down because of issues related
                *                     to your email sending practices.</p>
                *             </li>
                *             <li>
                *                 <p>ACCOUNT_THROTTLED: The number of emails you can send has been reduced because
                *                     your account has exceeded its allocated sending limit.</p>
                *             </li>
                *             <li>
                *                 <p>ACCOUNT_DAILY_QUOTA_EXCEEDED: You have reached or exceeded the maximum number
                *                     of emails you can send from your account in a 24-hour period.</p>
                *             </li>
                *             <li>
                *                 <p>INVALID_SENDING_POOL_NAME: The configuration set you specified refers to an IP
                *                     pool that does not exist.</p>
                *             </li>
                *             <li>
                *                 <p>ACCOUNT_SENDING_PAUSED: Email sending for the Amazon SES account was disabled
                *                     using the <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html">UpdateAccountSendingEnabled</a> operation.</p>
                *             </li>
                *             <li>
                *                 <p>CONFIGURATION_SET_SENDING_PAUSED: Email sending for this configuration set was
                *                     disabled using the <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateConfigurationSetSendingEnabled.html">UpdateConfigurationSetSendingEnabled</a> operation.</p>
                *             </li>
                *             <li>
                *                 <p>INVALID_PARAMETER_VALUE: One or more of the parameters you specified when
                *                     calling this operation was invalid. See the error message for additional
                *                     information.</p>
                *             </li>
                *             <li>
                *                 <p>TRANSIENT_FAILURE: Amazon SES was unable to process your request because of a
                *                     temporary issue.</p>
                *             </li>
                *             <li>
                *                 <p>FAILED: Amazon SES was unable to process your request. See the error message
                *                     for additional information.</p>
                *             </li>
                *          </ul>
                */
            Status?: BulkEmailStatus | string;
            /**
                * <p>A description of an error that prevented a message being sent using the
                *                 <code>SendBulkTemplatedEmail</code> operation.</p>
                */
            Error?: string;
            /**
                * <p>The unique message identifier returned from the <code>SendBulkTemplatedEmail</code>
                *             operation.</p>
                */
            MessageId?: string;
    }
    export namespace BulkEmailEntryResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BulkEmailEntryResult) => any;
    }
    export enum DimensionValueSource {
            EMAIL_HEADER = "EMAIL_HEADER",
            LINK_TAG = "LINK_TAG",
            MESSAGE_TAG = "MESSAGE_TAG"
    }
    /**
        * <p>An object that defines the dimension configuration to use when you send email events
        *             to Amazon CloudWatch.</p>
        */
    export interface CloudWatchDimensionConfiguration {
            /**
                * <p>The name of an Amazon CloudWatch dimension associated with an email sending metric. The name has to
                *             meet the following criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),
                *                     underscores (_), or dashes (-).</p>
                *             </li>
                *             <li>
                *                 <p>It can contain no more than 256 characters.</p>
                *             </li>
                *          </ul>
                */
            DimensionName: string | undefined;
            /**
                * <p>The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. To
                *             use the message tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or
                *             a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose
                *                 <code>messageTag</code>. To use your own email headers, choose
                *                 <code>emailHeader</code>. To use link tags, choose <code>linkTags</code>.</p>
                */
            DimensionValueSource: DimensionValueSource | string | undefined;
            /**
                * <p>The default value of the dimension that is published to Amazon CloudWatch if you don't provide the
                *             value of the dimension when you send an email. This value has to meet the following
                *             criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),
                *                     underscores (_), or dashes (-).</p>
                *             </li>
                *             <li>
                *                 <p>It can contain no more than 256 characters.</p>
                *             </li>
                *          </ul>
                */
            DefaultDimensionValue: string | undefined;
    }
    export namespace CloudWatchDimensionConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudWatchDimensionConfiguration) => any;
    }
    /**
        * <p>An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to
        *             monitor and gain insights on your email sending metrics.</p>
        */
    export interface CloudWatchDestination {
            /**
                * <p>An array of objects that define the dimensions to use when you send email events to
                *             Amazon CloudWatch.</p>
                */
            DimensionConfigurations: CloudWatchDimensionConfiguration[] | undefined;
    }
    export namespace CloudWatchDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudWatchDestination) => any;
    }
    /**
        * <p>The resource is being modified by another operation or thread.</p>
        */
    export class ConcurrentModificationException extends __BaseException {
            readonly name: "ConcurrentModificationException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
    }
    /**
        * <p>If there is already an ongoing account details update under review.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export enum SubscriptionStatus {
            OPT_IN = "OPT_IN",
            OPT_OUT = "OPT_OUT"
    }
    /**
        * <p>The contact's preference for being opted-in to or opted-out of a topic.</p>
        */
    export interface TopicPreference {
            /**
                * <p>The name of the topic.</p>
                */
            TopicName: string | undefined;
            /**
                * <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or
                *                 <code>OPT_OUT</code>.</p>
                */
            SubscriptionStatus: SubscriptionStatus | string | undefined;
    }
    export namespace TopicPreference {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicPreference) => any;
    }
    /**
        * <p>A contact is the end-user who is receiving the email.</p>
        */
    export interface Contact {
            /**
                * <p>The contact's email address.</p>
                */
            EmailAddress?: string;
            /**
                * <p>The contact's preference for being opted-in to or opted-out of a topic.</p>
                */
            TopicPreferences?: TopicPreference[];
            /**
                * <p>The default topic preferences applied to the contact.</p>
                */
            TopicDefaultPreferences?: TopicPreference[];
            /**
                * <p>A boolean value status noting if the contact is unsubscribed from all contact list
                *             topics.</p>
                */
            UnsubscribeAll?: boolean;
            /**
                * <p>A timestamp noting the last time the contact's information was updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace Contact {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Contact) => any;
    }
    /**
        * <p>A list that contains contacts that have subscribed to a particular topic or
        *             topics.</p>
        */
    export interface ContactList {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName?: string;
            /**
                * <p>A timestamp noting the last time the contact list was updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace ContactList {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactList) => any;
    }
    export enum ContactListImportAction {
            DELETE = "DELETE",
            PUT = "PUT"
    }
    /**
        * <p>An object that contains details about the action of a contact list.</p>
        */
    export interface ContactListDestination {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>>The type of action to perform on the addresses. The following are the
                *             possible values:</p>
                *         <ul>
                *             <li>
                *                 <p>PUT: add the addresses to the contact list. If the record already exists, it
                *                     will override it with the new value.</p>
                *             </li>
                *             <li>
                *                 <p>DELETE: remove the addresses from the contact list.</p>
                *             </li>
                *          </ul>
                */
            ContactListImportAction: ContactListImportAction | string | undefined;
    }
    export namespace ContactListDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContactListDestination) => any;
    }
    export enum TlsPolicy {
            OPTIONAL = "OPTIONAL",
            REQUIRE = "REQUIRE"
    }
    /**
        * <p>Used to associate a configuration set with a dedicated IP pool.</p>
        */
    export interface DeliveryOptions {
            /**
                * <p>Specifies whether messages that use the configuration set are required to use
                *             Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only
                *             delivered if a TLS connection can be established. If the value is <code>Optional</code>,
                *             messages can be delivered in plain text if a TLS connection can't be established.</p>
                */
            TlsPolicy?: TlsPolicy | string;
            /**
                * <p>The name of the dedicated IP pool to associate with the configuration set.</p>
                */
            SendingPoolName?: string;
    }
    export namespace DeliveryOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeliveryOptions) => any;
    }
    /**
        * <p>Enable or disable collection of reputation metrics for emails that you send using this
        *             configuration set in the current Amazon Web Services Region. </p>
        */
    export interface ReputationOptions {
            /**
                * <p>If <code>true</code>, tracking of reputation metrics is enabled for the configuration
                *             set. If <code>false</code>, tracking of reputation metrics is disabled for the
                *             configuration set.</p>
                */
            ReputationMetricsEnabled?: boolean;
            /**
                * <p>The date and time (in Unix time) when the reputation metrics were last given a fresh
                *             start. When your account is given a fresh start, your reputation metrics are calculated
                *             starting from the date of the fresh start.</p>
                */
            LastFreshStart?: Date;
    }
    export namespace ReputationOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ReputationOptions) => any;
    }
    /**
        * <p>Used to enable or disable email sending for messages that use this configuration set
        *             in the current Amazon Web Services Region.</p>
        */
    export interface SendingOptions {
            /**
                * <p>If <code>true</code>, email sending is enabled for the configuration set. If
                *                 <code>false</code>, email sending is disabled for the configuration set.</p>
                */
            SendingEnabled?: boolean;
    }
    export namespace SendingOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendingOptions) => any;
    }
    export enum SuppressionListReason {
            BOUNCE = "BOUNCE",
            COMPLAINT = "COMPLAINT"
    }
    /**
        * <p>An object that contains information about the suppression list preferences for your
        *             account.</p>
        */
    export interface SuppressionOptions {
            /**
                * <p>A list that contains the reasons that email addresses are automatically added to the
                *             suppression list for your account. This list can contain any or all of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a
                *                     complaint.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>BOUNCE</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a hard
                *                     bounce.</p>
                *             </li>
                *          </ul>
                */
            SuppressedReasons?: (SuppressionListReason | string)[];
    }
    export namespace SuppressionOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressionOptions) => any;
    }
    /**
        * <p>An object that defines the tags that are associated with a resource.
        *                 A <i>tag</i> is a label that you optionally define and associate with
        *             a resource. Tags can help you categorize and manage resources in different ways, such as
        *             by purpose, owner, environment, or other criteria. A resource can have as many as 50
        *             tags.</p>
        *         <p>Each tag consists of a required <i>tag key</i> and an
        *                 associated <i>tag value</i>, both of which you define. A tag key is a
        *             general label that acts as a category for a more specific tag value. A tag value acts as
        *             a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag
        *             value can contain as many as 256 characters. The characters can be Unicode letters,
        *             digits, white space, or one of the following symbols: _ . : / = + -. The following
        *             additional restrictions apply to tags:</p>
        *         <ul>
        *             <li>
        *                 <p>Tag keys and values are case sensitive.</p>
        *             </li>
        *             <li>
        *                 <p>For each associated resource, each tag key must be unique and it can have only
        *                     one value.</p>
        *             </li>
        *             <li>
        *                 <p>The <code>aws:</code> prefix is reserved for use by Amazon Web Services; you can’t use it in
        *                     any tag keys or values that you define. In addition, you can't edit or remove
        *                     tag keys or values that use this prefix. Tags that use this prefix don’t count
        *                     against the limit of 50 tags per resource.</p>
        *             </li>
        *             <li>
        *                 <p>You can associate tags with public or shared resources, but the tags are
        *                     available only for your Amazon Web Services account, not any other accounts that share the
        *                     resource. In addition, the tags are available only for resources that are
        *                     located in the specified Amazon Web Services Region for your Amazon Web Services account.</p>
        *             </li>
        *          </ul>
        */
    export interface Tag {
            /**
                * <p>One part of a key-value pair that defines a tag. The maximum length of a tag key is
                *             128 characters. The minimum length is 1 character.</p>
                */
            Key: string | undefined;
            /**
                * <p>The optional part of a key-value pair that defines a tag. The maximum length of a tag
                *             value is 256 characters. The minimum length is 0 characters. If you don't want a
                *             resource to have a specific tag value, don't specify a value for this parameter. If you
                *             don't specify a value, Amazon SES sets the value to an empty string.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    /**
        * <p>An object that defines the tracking options for a configuration set. When you use the
        *             Amazon SES API v2 to send an email, it contains an invisible image that's used to track when
        *             recipients open your email. If your email contains links, those links are changed
        *             slightly in order to track when recipients click them.</p>
        *         <p>These images and links include references to a domain operated by Amazon Web Services. You can
        *             optionally configure the Amazon SES to use a domain that you operate for these images and
        *             links.</p>
        */
    export interface TrackingOptions {
            /**
                * <p>The domain to use for tracking open and click events.</p>
                */
            CustomRedirectDomain: string | undefined;
    }
    export namespace TrackingOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TrackingOptions) => any;
    }
    /**
        * <p>A request to create a configuration set.</p>
        */
    export interface CreateConfigurationSetRequest {
            /**
                * <p>The name of the configuration set. The name can contain up to 64 alphanumeric
                *             characters, including letters, numbers, hyphens (-) and underscores (_) only.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>An object that defines the open and click tracking options for emails that you send
                *             using the configuration set.</p>
                */
            TrackingOptions?: TrackingOptions;
            /**
                * <p>An object that defines the dedicated IP pool that is used to send emails that you send
                *             using the configuration set.</p>
                */
            DeliveryOptions?: DeliveryOptions;
            /**
                * <p>An object that defines whether or not Amazon SES collects reputation metrics for the emails
                *             that you send that use the configuration set.</p>
                */
            ReputationOptions?: ReputationOptions;
            /**
                * <p>An object that defines whether or not Amazon SES can send email that you send using the
                *             configuration set.</p>
                */
            SendingOptions?: SendingOptions;
            /**
                * <p>An array of objects that define the tags (keys and values) to associate with the
                *             configuration set.</p>
                */
            Tags?: Tag[];
            /**
                * <p>An object that contains information about the suppression list preferences for your
                *             account.</p>
                */
            SuppressionOptions?: SuppressionOptions;
    }
    export namespace CreateConfigurationSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConfigurationSetRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface CreateConfigurationSetResponse {
    }
    export namespace CreateConfigurationSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConfigurationSetResponse) => any;
    }
    /**
        * <p>There are too many instances of the specified resource type.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>The resource you attempted to access doesn't exist.</p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    /**
        * <p>Too many requests have been made to the operation.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    /**
        * <p>An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to
        *             stream data to other services, such as Amazon S3 and Amazon Redshift.</p>
        */
    export interface KinesisFirehoseDestination {
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email
                *             events to the Amazon Kinesis Data Firehose stream.</p>
                */
            IamRoleArn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email
                *             events to.</p>
                */
            DeliveryStreamArn: string | undefined;
    }
    export namespace KinesisFirehoseDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KinesisFirehoseDestination) => any;
    }
    export enum EventType {
            BOUNCE = "BOUNCE",
            CLICK = "CLICK",
            COMPLAINT = "COMPLAINT",
            DELIVERY = "DELIVERY",
            DELIVERY_DELAY = "DELIVERY_DELAY",
            OPEN = "OPEN",
            REJECT = "REJECT",
            RENDERING_FAILURE = "RENDERING_FAILURE",
            SEND = "SEND",
            SUBSCRIPTION = "SUBSCRIPTION"
    }
    /**
        * <p>An object that defines an Amazon Pinpoint project destination for email events. You can send
        *             email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging
        *             dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional
        *                 Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.</p>
        */
    export interface PinpointDestination {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon Pinpoint project to send email events to.</p>
                */
            ApplicationArn?: string;
    }
    export namespace PinpointDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PinpointDestination) => any;
    }
    /**
        * <p>An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to
        *             send notification when certain email events occur.</p>
        */
    export interface SnsDestination {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to. For
                *             more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
                */
            TopicArn: string | undefined;
    }
    export namespace SnsDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SnsDestination) => any;
    }
    /**
        * <p>An object that defines the event destination. Specifically, it defines which services
        *             receive events from emails sent using the configuration set that the event destination
        *             is associated with. Also defines the types of events that are sent to the event
        *             destination.</p>
        */
    export interface EventDestinationDefinition {
            /**
                * <p>If <code>true</code>, the event destination is enabled. When the event destination is
                *             enabled, the specified event types are sent to the destinations in this
                *                 <code>EventDestinationDefinition</code>.</p>
                *         <p>If <code>false</code>, the event destination is disabled. When the event destination
                *             is disabled, events aren't sent to the specified destinations.</p>
                */
            Enabled?: boolean;
            /**
                * <p>An array that specifies which events the Amazon SES API v2 should send to the destinations in
                *             this <code>EventDestinationDefinition</code>.</p>
                */
            MatchingEventTypes?: (EventType | string)[];
            /**
                * <p>An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to
                *             stream data to other services, such as Amazon S3 and Amazon Redshift.</p>
                */
            KinesisFirehoseDestination?: KinesisFirehoseDestination;
            /**
                * <p>An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to
                *             monitor and gain insights on your email sending metrics.</p>
                */
            CloudWatchDestination?: CloudWatchDestination;
            /**
                * <p>An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to
                *             send notification when certain email events occur.</p>
                */
            SnsDestination?: SnsDestination;
            /**
                * <p>An object that defines an Amazon Pinpoint project destination for email events. You can send
                *             email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging
                *             dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional
                *                 Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.</p>
                */
            PinpointDestination?: PinpointDestination;
    }
    export namespace EventDestinationDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventDestinationDefinition) => any;
    }
    /**
        * <p>A request to add an event destination to a configuration set.</p>
        */
    export interface CreateConfigurationSetEventDestinationRequest {
            /**
                * <p>The name of the configuration set .</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>A name that identifies the event destination within the configuration set.</p>
                */
            EventDestinationName: string | undefined;
            /**
                * <p>An object that defines the event destination.</p>
                */
            EventDestination: EventDestinationDefinition | undefined;
    }
    export namespace CreateConfigurationSetEventDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConfigurationSetEventDestinationRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface CreateConfigurationSetEventDestinationResponse {
    }
    export namespace CreateConfigurationSetEventDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConfigurationSetEventDestinationResponse) => any;
    }
    export interface CreateContactRequest {
            /**
                * <p>The name of the contact list to which the contact should be added.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>The contact's email address.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The contact's preferences for being opted-in to or opted-out of topics.</p>
                */
            TopicPreferences?: TopicPreference[];
            /**
                * <p>A boolean value status noting if the contact is unsubscribed from all contact list
                *             topics.</p>
                */
            UnsubscribeAll?: boolean;
            /**
                * <p>The attribute data attached to a contact.</p>
                */
            AttributesData?: string;
    }
    export namespace CreateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactRequest) => any;
    }
    export interface CreateContactResponse {
    }
    export namespace CreateContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactResponse) => any;
    }
    /**
        * <p>An interest group, theme, or label within a list. Lists can have multiple
        *             topics.</p>
        */
    export interface Topic {
            /**
                * <p>The name of the topic.</p>
                */
            TopicName: string | undefined;
            /**
                * <p>The name of the topic the contact will see.</p>
                */
            DisplayName: string | undefined;
            /**
                * <p>A description of what the topic is about, which the contact will see.</p>
                */
            Description?: string;
            /**
                * <p>The default subscription status to be applied to a contact if the contact has not
                *             noted their preference for subscribing to a topic.</p>
                */
            DefaultSubscriptionStatus: SubscriptionStatus | string | undefined;
    }
    export namespace Topic {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Topic) => any;
    }
    export interface CreateContactListRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>An interest group, theme, or label within a list. A contact list can have multiple
                *             topics.</p>
                */
            Topics?: Topic[];
            /**
                * <p>A description of what the contact list is about.</p>
                */
            Description?: string;
            /**
                * <p>The tags associated with a contact list.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateContactListRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactListRequest) => any;
    }
    export interface CreateContactListResponse {
    }
    export namespace CreateContactListResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateContactListResponse) => any;
    }
    /**
        * <p>Represents a request to create a custom verification email template.</p>
        */
    export interface CreateCustomVerificationEmailTemplateRequest {
            /**
                * <p>The name of the custom verification email template.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>The email address that the custom verification email is sent from.</p>
                */
            FromEmailAddress: string | undefined;
            /**
                * <p>The subject line of the custom verification email.</p>
                */
            TemplateSubject: string | undefined;
            /**
                * <p>The content of the custom verification email. The total size of the email must be less
                *             than 10 MB. The message body may contain HTML, with some limitations. For more
                *             information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html#custom-verification-emails-faq">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES
                *                 Developer Guide</i>.</p>
                */
            TemplateContent: string | undefined;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is successfully verified.</p>
                */
            SuccessRedirectionURL: string | undefined;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is not successfully verified.</p>
                */
            FailureRedirectionURL: string | undefined;
    }
    export namespace CreateCustomVerificationEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCustomVerificationEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface CreateCustomVerificationEmailTemplateResponse {
    }
    export namespace CreateCustomVerificationEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCustomVerificationEmailTemplateResponse) => any;
    }
    /**
        * <p>A request to create a new dedicated IP pool.</p>
        */
    export interface CreateDedicatedIpPoolRequest {
            /**
                * <p>The name of the dedicated IP pool.</p>
                */
            PoolName: string | undefined;
            /**
                * <p>An object that defines the tags (keys and values) that you want to associate with the
                *             pool.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateDedicatedIpPoolRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDedicatedIpPoolRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface CreateDedicatedIpPoolResponse {
    }
    export namespace CreateDedicatedIpPoolResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDedicatedIpPoolResponse) => any;
    }
    /**
        * <p>Represents the raw content of an email message.</p>
        */
    export interface RawMessage {
            /**
                * <p>The raw email message. The message has to meet the following criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>The message has to contain a header and a body, separated by one blank
                *                     line.</p>
                *             </li>
                *             <li>
                *                 <p>All of the required header fields must be present in the message.</p>
                *             </li>
                *             <li>
                *                 <p>Each part of a multipart MIME message must be formatted properly.</p>
                *             </li>
                *             <li>
                *                 <p>Attachments must be in a file format that the Amazon SES supports.</p>
                *             </li>
                *             <li>
                *                 <p>The entire message must be Base64 encoded.</p>
                *             </li>
                *             <li>
                *                 <p>If any of the MIME parts in your message contain content that is outside of
                *                     the 7-bit ASCII character range, you should encode that content to ensure that
                *                     recipients' email clients render the message properly.</p>
                *             </li>
                *             <li>
                *                 <p>The length of any single line of text in the message can't exceed 1,000
                *                     characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p>
                *             </li>
                *          </ul>
                */
            Data: Uint8Array | undefined;
    }
    export namespace RawMessage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RawMessage) => any;
    }
    /**
        * <p>Represents the email message that you're sending. The <code>Message</code> object
        *             consists of a subject line and a message body.</p>
        */
    export interface Message {
            /**
                * <p>The subject line of the email. The subject line can only contain 7-bit ASCII
                *             characters. However, you can specify non-ASCII characters in the subject line by using
                *             encoded-word syntax, as described in <a href="https://tools.ietf.org/html/rfc2047">RFC 2047</a>.</p>
                */
            Subject: Content | undefined;
            /**
                * <p>The body of the message. You can specify an HTML version of the message, a text-only
                *             version of the message, or both.</p>
                */
            Body: Body | undefined;
    }
    export namespace Message {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Message) => any;
    }
    /**
        * <p>An object that defines the entire content of the email, including the message headers
        *             and the body content. You can create a simple email message, in which you specify the
        *             subject and the text and HTML versions of the message body. You can also create raw
        *             messages, in which you specify a complete MIME-formatted message. Raw messages can
        *             include attachments and custom headers.</p>
        */
    export interface EmailContent {
            /**
                * <p>The simple email message. The message consists of a subject and a message body.</p>
                */
            Simple?: Message;
            /**
                * <p>The raw email message. The message has to meet the following criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>The message has to contain a header and a body, separated by one blank
                *                     line.</p>
                *             </li>
                *             <li>
                *                 <p>All of the required header fields must be present in the message.</p>
                *             </li>
                *             <li>
                *                 <p>Each part of a multipart MIME message must be formatted properly.</p>
                *             </li>
                *             <li>
                *                 <p>If you include attachments, they must be in a file format that the Amazon SES API v2
                *                     supports.
                *                     </p>
                *             </li>
                *             <li>
                *                 <p>The entire message must be Base64 encoded.</p>
                *             </li>
                *             <li>
                *                 <p>If any of the MIME parts in your message contain content that is outside of
                *                     the 7-bit ASCII character range, you should encode that content to ensure that
                *                     recipients' email clients render the message properly.</p>
                *             </li>
                *             <li>
                *                 <p>The length of any single line of text in the message can't exceed 1,000
                *                     characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p>
                *             </li>
                *          </ul>
                */
            Raw?: RawMessage;
            /**
                * <p>The template to use for the email message.</p>
                */
            Template?: Template;
    }
    export namespace EmailContent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmailContent) => any;
    }
    /**
        * <p>A request to perform a predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will
        *             be handled by various email providers around the world. When you perform a predictive inbox placement test, you
        *             provide a sample message that contains the content that you plan to send to your
        *             customers. We send that message to special email addresses spread across several major
        *             email providers around the world. The test takes about 24 hours to complete. When the
        *             test is complete, you can use the <code>GetDeliverabilityTestReport</code> operation to
        *             view the results of the test.</p>
        */
    export interface CreateDeliverabilityTestReportRequest {
            /**
                * <p>A unique name that helps you to identify the predictive inbox placement test when you retrieve the
                *             results.</p>
                */
            ReportName?: string;
            /**
                * <p>The email address that the predictive inbox placement test email was sent from.</p>
                */
            FromEmailAddress: string | undefined;
            /**
                * <p>The HTML body of the message that you sent when you performed the predictive inbox placement test.</p>
                */
            Content: EmailContent | undefined;
            /**
                * <p>An array of objects that define the tags (keys and values) that you want to associate
                *             with the predictive inbox placement test.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateDeliverabilityTestReportRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDeliverabilityTestReportRequest) => any;
    }
    export enum DeliverabilityTestStatus {
            COMPLETED = "COMPLETED",
            IN_PROGRESS = "IN_PROGRESS"
    }
    /**
        * <p>Information about the predictive inbox placement test that you created.</p>
        */
    export interface CreateDeliverabilityTestReportResponse {
            /**
                * <p>A unique string that identifies the predictive inbox placement test.</p>
                */
            ReportId: string | undefined;
            /**
                * <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test
                *             is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the
                *             test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use
                *             the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
                */
            DeliverabilityTestStatus: DeliverabilityTestStatus | string | undefined;
    }
    export namespace CreateDeliverabilityTestReportResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDeliverabilityTestReportResponse) => any;
    }
    /**
        * <p>The message can't be sent because the sending domain isn't verified.</p>
        */
    export class MailFromDomainNotVerifiedException extends __BaseException {
            readonly name: "MailFromDomainNotVerifiedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MailFromDomainNotVerifiedException, __BaseException>);
    }
    /**
        * <p>The message can't be sent because it contains invalid content.</p>
        */
    export class MessageRejected extends __BaseException {
            readonly name: "MessageRejected";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MessageRejected, __BaseException>);
    }
    /**
        * <p>The message can't be sent because the account's ability to send email is currently
        *             paused.</p>
        */
    export class SendingPausedException extends __BaseException {
            readonly name: "SendingPausedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<SendingPausedException, __BaseException>);
    }
    export enum DkimSigningKeyLength {
            RSA_1024_BIT = "RSA_1024_BIT",
            RSA_2048_BIT = "RSA_2048_BIT"
    }
    /**
        * <p>An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM</p>
        */
    export interface DkimSigningAttributes {
            /**
                * <p>[Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a
                *             domain.</p>
                */
            DomainSigningSelector?: string;
            /**
                * <p>[Bring Your Own DKIM] A private key that's used to generate a DKIM signature.</p>
                *         <p>The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using
                *             base64 encoding.</p>
                */
            DomainSigningPrivateKey?: string;
            /**
                * <p>[Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.</p>
                */
            NextSigningKeyLength?: DkimSigningKeyLength | string;
    }
    export namespace DkimSigningAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DkimSigningAttributes) => any;
    }
    /**
        * <p>A request to begin the verification process for an email identity (an email address or
        *             domain).</p>
        */
    export interface CreateEmailIdentityRequest {
            /**
                * <p>The email address or domain to verify.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>An array of objects that define the tags (keys and values) to associate with the email
                *             identity.</p>
                */
            Tags?: Tag[];
            /**
                * <p>If your request includes this object, Amazon SES configures the identity to use Bring Your
                *             Own DKIM (BYODKIM) for DKIM authentication purposes, or, configures the key length to be used for
                *             <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
                *         <p>You can only specify this object if the email identity is a domain, as opposed to an
                *             address.</p>
                */
            DkimSigningAttributes?: DkimSigningAttributes;
            /**
                * <p>The configuration set to use by default when sending from this identity. Note that any
                *             configuration set defined in the email sending request takes precedence. </p>
                */
            ConfigurationSetName?: string;
    }
    export namespace CreateEmailIdentityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailIdentityRequest) => any;
    }
    export enum DkimSigningAttributesOrigin {
            AWS_SES = "AWS_SES",
            EXTERNAL = "EXTERNAL"
    }
    export enum DkimStatus {
            FAILED = "FAILED",
            NOT_STARTED = "NOT_STARTED",
            PENDING = "PENDING",
            SUCCESS = "SUCCESS",
            TEMPORARY_FAILURE = "TEMPORARY_FAILURE"
    }
    /**
        * <p>An object that contains information about the DKIM authentication status for an email
        *             identity.</p>
        *         <p>Amazon SES determines the authentication status by searching for specific records in the
        *             DNS configuration for the domain. If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to set up DKIM
        *             authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration
        *             for your domain. If you provided a public key to perform DKIM authentication, Amazon SES
        *             tries to find a TXT record that uses the selector that you specified. The value of the
        *             TXT record must be a public key that's paired with the private key that you specified in
        *             the process of creating the identity</p>
        */
    export interface DkimAttributes {
            /**
                * <p>If the value is <code>true</code>, then the messages that you send from the identity
                *             are signed using DKIM. If the value is <code>false</code>, then the messages that you
                *             send from the identity aren't DKIM-signed.</p>
                */
            SigningEnabled?: boolean;
            /**
                * <p>Describes whether or not Amazon SES has successfully located the DKIM records in the DNS
                *             records for the domain. The status can be one of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>PENDING</code> – The verification process was initiated, but Amazon SES
                *                     hasn't yet detected the DKIM records in the DNS configuration for the
                *                     domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>SUCCESS</code> – The verification process completed
                *                     successfully.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>FAILED</code> – The verification process failed. This typically
                *                     occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the
                *                     domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES
                *                     from determining the DKIM authentication status of the domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>NOT_STARTED</code> – The DKIM verification process hasn't been
                *                     initiated for the domain.</p>
                *             </li>
                *          </ul>
                */
            Status?: DkimStatus | string;
            /**
                * <p>If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to configure DKIM authentication for the domain, then this object
                *             contains a set of unique strings that you use to create a set of CNAME records that you
                *             add to the DNS configuration for your domain. When Amazon SES detects these records in the
                *             DNS configuration for your domain, the DKIM authentication process is complete.</p>
                *         <p>If you configured DKIM authentication for the domain by providing your own
                *             public-private key pair, then this object contains the selector for the public
                *             key.</p>
                *         <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the
                *             appropriate records in the DNS configuration of the domain for up to 72 hours.</p>
                */
            Tokens?: string[];
            /**
                * <p>A string that indicates how DKIM was configured for the identity. These are the
                *             possible values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>AWS_SES</code> – Indicates that DKIM was configured for the
                *                     identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>EXTERNAL</code> – Indicates that DKIM was configured for the
                *                     identity by using Bring Your Own DKIM (BYODKIM).</p>
                *             </li>
                *          </ul>
                */
            SigningAttributesOrigin?: DkimSigningAttributesOrigin | string;
            /**
                * <p>[Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.</p>
                */
            NextSigningKeyLength?: DkimSigningKeyLength | string;
            /**
                * <p>[Easy DKIM] The key length of the DKIM key pair in use.</p>
                */
            CurrentSigningKeyLength?: DkimSigningKeyLength | string;
            /**
                * <p>[Easy DKIM] The last time a key pair was generated for this identity.</p>
                */
            LastKeyGenerationTimestamp?: Date;
    }
    export namespace DkimAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DkimAttributes) => any;
    }
    export enum IdentityType {
            DOMAIN = "DOMAIN",
            EMAIL_ADDRESS = "EMAIL_ADDRESS",
            MANAGED_DOMAIN = "MANAGED_DOMAIN"
    }
    /**
        * <p>If the email identity is a domain, this object contains information about the DKIM
        *             verification status for the domain.</p>
        *         <p>If the email identity is an email address, this object is empty. </p>
        */
    export interface CreateEmailIdentityResponse {
            /**
                * <p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not
                *             supported.</p>
                */
            IdentityType?: IdentityType | string;
            /**
                * <p>Specifies whether or not the identity is verified. You can only send email from
                *             verified email addresses or domains. For more information about verifying identities,
                *             see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.</p>
                */
            VerifiedForSendingStatus?: boolean;
            /**
                * <p>An object that contains information about the DKIM attributes for the identity.</p>
                */
            DkimAttributes?: DkimAttributes;
    }
    export namespace CreateEmailIdentityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailIdentityResponse) => any;
    }
    /**
        * <p>Represents a request to create a sending authorization policy for an identity. Sending
        *             authorization is an Amazon SES feature that enables you to authorize other senders to use
        *             your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.</p>
        */
    export interface CreateEmailIdentityPolicyRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>The name of the policy.</p>
                *
                *         <p>The policy name cannot exceed 64 characters and can only include alphanumeric
                *             characters, dashes, and underscores.</p>
                */
            PolicyName: string | undefined;
            /**
                * <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p>
                *         <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer
                *                 Guide</a>.</p>
                */
            Policy: string | undefined;
    }
    export namespace CreateEmailIdentityPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailIdentityPolicyRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface CreateEmailIdentityPolicyResponse {
    }
    export namespace CreateEmailIdentityPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailIdentityPolicyResponse) => any;
    }
    /**
        * <p>The content of the email, composed of a subject line, an HTML part, and a text-only
        *             part.</p>
        */
    export interface EmailTemplateContent {
            /**
                * <p>The subject line of the email.</p>
                */
            Subject?: string;
            /**
                * <p>The email body that will be visible to recipients whose email clients do not display
                *             HTML.</p>
                */
            Text?: string;
            /**
                * <p>The HTML body of the email.</p>
                */
            Html?: string;
    }
    export namespace EmailTemplateContent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmailTemplateContent) => any;
    }
    /**
        * <p>Represents a request to create an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES
        *                 Developer Guide</a>.</p>
        */
    export interface CreateEmailTemplateRequest {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>The content of the email template, composed of a subject line, an HTML part, and a
                *             text-only part.</p>
                */
            TemplateContent: EmailTemplateContent | undefined;
    }
    export namespace CreateEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface CreateEmailTemplateResponse {
    }
    export namespace CreateEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEmailTemplateResponse) => any;
    }
    export enum DataFormat {
            CSV = "CSV",
            JSON = "JSON"
    }
    /**
        * <p>An object that contains details about the data source of the import job.</p>
        */
    export interface ImportDataSource {
            /**
                * <p>An Amazon S3 URL in the format
                *                 s3://<i><bucket_name></i>/<i><object></i>.</p>
                */
            S3Url: string | undefined;
            /**
                * <p>The data format of the import job's data source.</p>
                */
            DataFormat: DataFormat | string | undefined;
    }
    export namespace ImportDataSource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportDataSource) => any;
    }
    export enum SuppressionListImportAction {
            DELETE = "DELETE",
            PUT = "PUT"
    }
    /**
        * <p>An object that contains details about the action of suppression list.</p>
        */
    export interface SuppressionListDestination {
            /**
                * <p>The type of action to perform on the address. The following are possible values:</p>
                *         <ul>
                *             <li>
                *                 <p>PUT: add the addresses to the suppression list. If the record already exists,
                *                     it will override it with the new value.</p>
                *             </li>
                *             <li>
                *                 <p>DELETE: remove the addresses from the suppression list.</p>
                *             </li>
                *          </ul>
                */
            SuppressionListImportAction: SuppressionListImportAction | string | undefined;
    }
    export namespace SuppressionListDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressionListDestination) => any;
    }
    /**
        * <p>An object that contains details about the resource destination the import job is going
        *             to target.</p>
        */
    export interface ImportDestination {
            /**
                * <p>An object that contains the action of the import job towards suppression list.</p>
                */
            SuppressionListDestination?: SuppressionListDestination;
            /**
                * <p>An object that contains the action of the import job towards a contact list.</p>
                */
            ContactListDestination?: ContactListDestination;
    }
    export namespace ImportDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportDestination) => any;
    }
    /**
        * <p>Represents a request to create an import job from a data source for a data
        *             destination.</p>
        */
    export interface CreateImportJobRequest {
            /**
                * <p>The destination for the import job.</p>
                */
            ImportDestination: ImportDestination | undefined;
            /**
                * <p>The data source for the import job.</p>
                */
            ImportDataSource: ImportDataSource | undefined;
    }
    export namespace CreateImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateImportJobRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface CreateImportJobResponse {
            /**
                * <p>A string that represents the import job ID.</p>
                */
            JobId?: string;
    }
    export namespace CreateImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateImportJobResponse) => any;
    }
    /**
        * <p>Contains information about a custom verification email template.</p>
        */
    export interface CustomVerificationEmailTemplateMetadata {
            /**
                * <p>The name of the custom verification email template.</p>
                */
            TemplateName?: string;
            /**
                * <p>The email address that the custom verification email is sent from.</p>
                */
            FromEmailAddress?: string;
            /**
                * <p>The subject line of the custom verification email.</p>
                */
            TemplateSubject?: string;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is successfully verified.</p>
                */
            SuccessRedirectionURL?: string;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is not successfully verified.</p>
                */
            FailureRedirectionURL?: string;
    }
    export namespace CustomVerificationEmailTemplateMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CustomVerificationEmailTemplateMetadata) => any;
    }
    /**
        * <p>An object that contains inbox placement data for email sent from one of your email
        *             domains to a specific email provider.</p>
        */
    export interface DomainIspPlacement {
            /**
                * <p>The name of the email provider that the inbox placement data applies to.</p>
                */
            IspName?: string;
            /**
                * <p>The total number of messages that were sent from the selected domain to the specified
                *             email provider that arrived in recipients' inboxes.</p>
                */
            InboxRawCount?: number;
            /**
                * <p>The total number of messages that were sent from the selected domain to the specified
                *             email provider that arrived in recipients' spam or junk mail folders.</p>
                */
            SpamRawCount?: number;
            /**
                * <p>The percentage of messages that were sent from the selected domain to the specified
                *             email provider that arrived in recipients' inboxes.</p>
                */
            InboxPercentage?: number;
            /**
                * <p>The percentage of messages that were sent from the selected domain to the specified
                *             email provider that arrived in recipients' spam or junk mail folders.</p>
                */
            SpamPercentage?: number;
    }
    export namespace DomainIspPlacement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainIspPlacement) => any;
    }
    /**
        * <p>An object that contains information about the amount of email that was delivered to
        *             recipients.</p>
        */
    export interface VolumeStatistics {
            /**
                * <p>The total number of emails that arrived in recipients' inboxes.</p>
                */
            InboxRawCount?: number;
            /**
                * <p>The total number of emails that arrived in recipients' spam or junk mail
                *             folders.</p>
                */
            SpamRawCount?: number;
            /**
                * <p>An estimate of the percentage of emails sent from the current domain that will arrive
                *             in recipients' inboxes.</p>
                */
            ProjectedInbox?: number;
            /**
                * <p>An estimate of the percentage of emails sent from the current domain that will arrive
                *             in recipients' spam or junk mail folders.</p>
                */
            ProjectedSpam?: number;
    }
    export namespace VolumeStatistics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VolumeStatistics) => any;
    }
    /**
        * <p>An object that contains information about the volume of email sent on each day of the
        *             analysis period.</p>
        */
    export interface DailyVolume {
            /**
                * <p>The date that the DailyVolume metrics apply to, in Unix time.</p>
                */
            StartDate?: Date;
            /**
                * <p>An object that contains inbox placement metrics for a specific day in the analysis
                *             period.</p>
                */
            VolumeStatistics?: VolumeStatistics;
            /**
                * <p>An object that contains inbox placement metrics for a specified day in the analysis
                *             period, broken out by the recipient's email provider.</p>
                */
            DomainIspPlacements?: DomainIspPlacement[];
    }
    export namespace DailyVolume {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DailyVolume) => any;
    }
    export enum WarmupStatus {
            DONE = "DONE",
            IN_PROGRESS = "IN_PROGRESS"
    }
    /**
        * <p>Contains information about a dedicated IP address that is associated with your Amazon SES
        *             account.</p>
        *         <p>To learn more about requesting dedicated IP addresses, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html">Requesting and Relinquishing
        *                 Dedicated IP Addresses</a> in the <i>Amazon SES Developer
        *             Guide</i>.</p>
        */
    export interface DedicatedIp {
            /**
                * <p>An IPv4 address.</p>
                */
            Ip: string | undefined;
            /**
                * <p>The warm-up status of a dedicated IP address. The status can have one of the following
                *             values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>IN_PROGRESS</code> – The IP address isn't ready to use because the
                *                     dedicated IP warm-up process is ongoing.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>DONE</code> – The dedicated IP warm-up process is complete, and
                *                     the IP address is ready to use.</p>
                *             </li>
                *          </ul>
                */
            WarmupStatus: WarmupStatus | string | undefined;
            /**
                * <p>Indicates how complete the dedicated IP warm-up process is. When this value equals 1,
                *             the address has completed the warm-up process and is ready for use.</p>
                */
            WarmupPercentage: number | undefined;
            /**
                * <p>The name of the dedicated IP pool that the IP address is associated with.</p>
                */
            PoolName?: string;
    }
    export namespace DedicatedIp {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DedicatedIp) => any;
    }
    /**
        * <p>A request to delete a configuration set.</p>
        */
    export interface DeleteConfigurationSetRequest {
            /**
                * <p>The name of the configuration set.</p>
                */
            ConfigurationSetName: string | undefined;
    }
    export namespace DeleteConfigurationSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConfigurationSetRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteConfigurationSetResponse {
    }
    export namespace DeleteConfigurationSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConfigurationSetResponse) => any;
    }
    /**
        * <p>A request to delete an event destination from a configuration set.</p>
        */
    export interface DeleteConfigurationSetEventDestinationRequest {
            /**
                * <p>The name of the configuration set that contains the event destination to
                *             delete.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>The name of the event destination to delete.</p>
                */
            EventDestinationName: string | undefined;
    }
    export namespace DeleteConfigurationSetEventDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConfigurationSetEventDestinationRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteConfigurationSetEventDestinationResponse {
    }
    export namespace DeleteConfigurationSetEventDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConfigurationSetEventDestinationResponse) => any;
    }
    export interface DeleteContactRequest {
            /**
                * <p>The name of the contact list from which the contact should be removed.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>The contact's email address.</p>
                */
            EmailAddress: string | undefined;
    }
    export namespace DeleteContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactRequest) => any;
    }
    export interface DeleteContactResponse {
    }
    export namespace DeleteContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactResponse) => any;
    }
    export interface DeleteContactListRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
    }
    export namespace DeleteContactListRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactListRequest) => any;
    }
    export interface DeleteContactListResponse {
    }
    export namespace DeleteContactListResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteContactListResponse) => any;
    }
    /**
        * <p>Represents a request to delete an existing custom verification email template.</p>
        */
    export interface DeleteCustomVerificationEmailTemplateRequest {
            /**
                * <p>The name of the custom verification email template that you want to delete.</p>
                */
            TemplateName: string | undefined;
    }
    export namespace DeleteCustomVerificationEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCustomVerificationEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface DeleteCustomVerificationEmailTemplateResponse {
    }
    export namespace DeleteCustomVerificationEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteCustomVerificationEmailTemplateResponse) => any;
    }
    /**
        * <p>A request to delete a dedicated IP pool.</p>
        */
    export interface DeleteDedicatedIpPoolRequest {
            /**
                * <p>The name of the dedicated IP pool that you want to delete.</p>
                */
            PoolName: string | undefined;
    }
    export namespace DeleteDedicatedIpPoolRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDedicatedIpPoolRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteDedicatedIpPoolResponse {
    }
    export namespace DeleteDedicatedIpPoolResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDedicatedIpPoolResponse) => any;
    }
    /**
        * <p>A request to delete an existing email identity. When you delete an identity, you lose
        *             the ability to send email from that identity. You can restore your ability to send email
        *             by completing the verification process for the identity again.</p>
        */
    export interface DeleteEmailIdentityRequest {
            /**
                * <p>The identity (that is, the email address or domain) to delete.</p>
                */
            EmailIdentity: string | undefined;
    }
    export namespace DeleteEmailIdentityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailIdentityRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteEmailIdentityResponse {
    }
    export namespace DeleteEmailIdentityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailIdentityResponse) => any;
    }
    /**
        * <p>Represents a request to delete a sending authorization policy for an identity. Sending
        *             authorization is an Amazon SES feature that enables you to authorize other senders to
        *             use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.</p>
        */
    export interface DeleteEmailIdentityPolicyRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>The name of the policy.</p>
                *
                *         <p>The policy name cannot exceed 64 characters and can only include alphanumeric
                *             characters, dashes, and underscores.</p>
                */
            PolicyName: string | undefined;
    }
    export namespace DeleteEmailIdentityPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailIdentityPolicyRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteEmailIdentityPolicyResponse {
    }
    export namespace DeleteEmailIdentityPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailIdentityPolicyResponse) => any;
    }
    /**
        * <p>Represents a request to delete an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
        *                 Guide</a>.</p>
        */
    export interface DeleteEmailTemplateRequest {
            /**
                * <p>The name of the template to be deleted.</p>
                */
            TemplateName: string | undefined;
    }
    export namespace DeleteEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface DeleteEmailTemplateResponse {
    }
    export namespace DeleteEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailTemplateResponse) => any;
    }
    /**
        * <p>A request to remove an email address from the suppression list for your
        *             account.</p>
        */
    export interface DeleteSuppressedDestinationRequest {
            /**
                * <p>The suppressed email destination to remove from the account suppression list.</p>
                */
            EmailAddress: string | undefined;
    }
    export namespace DeleteSuppressedDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSuppressedDestinationRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface DeleteSuppressedDestinationResponse {
    }
    export namespace DeleteSuppressedDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSuppressedDestinationResponse) => any;
    }
    export enum DeliverabilityDashboardAccountStatus {
            ACTIVE = "ACTIVE",
            DISABLED = "DISABLED",
            PENDING_EXPIRATION = "PENDING_EXPIRATION"
    }
    /**
        * <p>An object that contains metadata related to a predictive inbox placement test.</p>
        */
    export interface DeliverabilityTestReport {
            /**
                * <p>A unique string that identifies the predictive inbox placement test.</p>
                */
            ReportId?: string;
            /**
                * <p>A name that helps you identify a predictive inbox placement test report.</p>
                */
            ReportName?: string;
            /**
                * <p>The subject line for an email that you submitted in a predictive inbox placement test.</p>
                */
            Subject?: string;
            /**
                * <p>The sender address that you specified for the predictive inbox placement test.</p>
                */
            FromEmailAddress?: string;
            /**
                * <p>The date and time when the predictive inbox placement test was created, in Unix time format.</p>
                */
            CreateDate?: Date;
            /**
                * <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test
                *             is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the
                *             test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use
                *             the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
                */
            DeliverabilityTestStatus?: DeliverabilityTestStatus | string;
    }
    export namespace DeliverabilityTestReport {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeliverabilityTestReport) => any;
    }
    /**
        * <p>An object that contains the deliverability data for a specific campaign. This data is
        *             available for a campaign only if the campaign sent email by using a domain that the
        *             Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        *             operation).</p>
        */
    export interface DomainDeliverabilityCampaign {
            /**
                * <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates
                *             and assigns this identifier to a campaign.</p>
                */
            CampaignId?: string;
            /**
                * <p>The URL of an image that contains a snapshot of the email message that was
                *             sent.</p>
                */
            ImageUrl?: string;
            /**
                * <p>The subject line, or title, of the email message.</p>
                */
            Subject?: string;
            /**
                * <p>The verified email address that the email message was sent from.</p>
                */
            FromAddress?: string;
            /**
                * <p>The IP addresses that were used to send the email message.</p>
                */
            SendingIps?: string[];
            /**
                * <p>The first time, in Unix time format, when the email message was delivered to any
                *             recipient's inbox. This value can help you determine how long it took for a campaign to
                *             deliver an email message.</p>
                */
            FirstSeenDateTime?: Date;
            /**
                * <p>The last time, in Unix time format, when the email message was delivered to any
                *             recipient's inbox. This value can help you determine how long it took for a campaign to
                *             deliver an email message.</p>
                */
            LastSeenDateTime?: Date;
            /**
                * <p>The number of email messages that were delivered to recipients’ inboxes.</p>
                */
            InboxCount?: number;
            /**
                * <p>The number of email messages that were delivered to recipients' spam or junk mail
                *             folders.</p>
                */
            SpamCount?: number;
            /**
                * <p>The percentage of email messages that were opened by recipients. Due to technical
                *             limitations, this value only includes recipients who opened the message by using an
                *             email client that supports images.</p>
                */
            ReadRate?: number;
            /**
                * <p>The percentage of email messages that were deleted by recipients, without being opened
                *             first. Due to technical limitations, this value only includes recipients who opened the
                *             message by using an email client that supports images.</p>
                */
            DeleteRate?: number;
            /**
                * <p>The percentage of email messages that were opened and then deleted by recipients. Due
                *             to technical limitations, this value only includes recipients who opened the message by
                *             using an email client that supports images.</p>
                */
            ReadDeleteRate?: number;
            /**
                * <p>The projected number of recipients that the email message was sent to.</p>
                */
            ProjectedVolume?: number;
            /**
                * <p>The major email providers who handled the email message.</p>
                */
            Esps?: string[];
    }
    export namespace DomainDeliverabilityCampaign {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainDeliverabilityCampaign) => any;
    }
    /**
        * <p>An object that contains information about the inbox placement data settings for a
        *             verified domain that’s associated with your Amazon Web Services account. This data is available only
        *             if you enabled the Deliverability dashboard for the domain.</p>
        */
    export interface InboxPlacementTrackingOption {
            /**
                * <p>Specifies whether inbox placement data is being tracked for the domain.</p>
                */
            Global?: boolean;
            /**
                * <p>An array of strings, one for each major email provider that the inbox placement data
                *             applies to.</p>
                */
            TrackedIsps?: string[];
    }
    export namespace InboxPlacementTrackingOption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InboxPlacementTrackingOption) => any;
    }
    /**
        * <p>An object that contains information about the Deliverability dashboard subscription for a
        *             verified domain that you use to send email and currently has an active Deliverability dashboard
        *             subscription. If a Deliverability dashboard subscription is active for a domain, you gain access
        *             to reputation, inbox placement, and other metrics for the domain.</p>
        */
    export interface DomainDeliverabilityTrackingOption {
            /**
                * <p>A verified domain that’s associated with your Amazon Web Services account and currently has an
                *             active Deliverability dashboard subscription.</p>
                */
            Domain?: string;
            /**
                * <p>The date, in Unix time format, when you enabled the Deliverability dashboard for the
                *             domain.</p>
                */
            SubscriptionStartDate?: Date;
            /**
                * <p>An object that contains information about the inbox placement data settings for the
                *             domain.</p>
                */
            InboxPlacementTrackingOption?: InboxPlacementTrackingOption;
    }
    export namespace DomainDeliverabilityTrackingOption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DomainDeliverabilityTrackingOption) => any;
    }
    /**
        * <p>Contains information about an email template.</p>
        */
    export interface EmailTemplateMetadata {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName?: string;
            /**
                * <p>The time and date the template was created.</p>
                */
            CreatedTimestamp?: Date;
    }
    export namespace EmailTemplateMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmailTemplateMetadata) => any;
    }
    /**
        * <p>In the Amazon SES API v2, <i>events</i> include message sends, deliveries, opens,
        *             clicks, bounces, complaints and delivery delays. <i>Event destinations</i>
        *             are places that you can send information about these events to. For example, you can
        *             send event data to Amazon SNS to receive notifications when you receive bounces or
        *             complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>
        */
    export interface EventDestination {
            /**
                * <p>A name that identifies the event destination.</p>
                */
            Name: string | undefined;
            /**
                * <p>If <code>true</code>, the event destination is enabled. When the event destination is
                *             enabled, the specified event types are sent to the destinations in this
                *                 <code>EventDestinationDefinition</code>.</p>
                *         <p>If <code>false</code>, the event destination is disabled. When the event destination
                *             is disabled, events aren't sent to the specified destinations.</p>
                */
            Enabled?: boolean;
            /**
                * <p>The types of events that Amazon SES sends to the specified event destinations.</p>
                */
            MatchingEventTypes: (EventType | string)[] | undefined;
            /**
                * <p>An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to
                *             stream data to other services, such as Amazon S3 and Amazon Redshift.</p>
                */
            KinesisFirehoseDestination?: KinesisFirehoseDestination;
            /**
                * <p>An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to
                *             monitor and gain insights on your email sending metrics.</p>
                */
            CloudWatchDestination?: CloudWatchDestination;
            /**
                * <p>An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to
                *             send notification when certain email events occur.</p>
                */
            SnsDestination?: SnsDestination;
            /**
                * <p>An object that defines an Amazon Pinpoint project destination for email events. You can send
                *             email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging
                *             dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional
                *                 Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.</p>
                */
            PinpointDestination?: PinpointDestination;
    }
    export namespace EventDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventDestination) => any;
    }
    /**
        * <p>An object that contains the failure details about an import job.</p>
        */
    export interface FailureInfo {
            /**
                * <p>An Amazon S3 presigned URL that contains all the failed records and related
                *             information.</p>
                */
            FailedRecordsS3Url?: string;
            /**
                * <p>A message about why the import job failed.</p>
                */
            ErrorMessage?: string;
    }
    export namespace FailureInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FailureInfo) => any;
    }
    /**
        * <p>A request to obtain information about the email-sending capabilities of your Amazon SES
        *             account.</p>
        */
    export interface GetAccountRequest {
    }
    export namespace GetAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountRequest) => any;
    }
    /**
        * <p>An object that contains information about the per-day and per-second sending limits
        *             for your Amazon SES account in the current Amazon Web Services Region.</p>
        */
    export interface SendQuota {
            /**
                * <p>The maximum number of emails that you can send in the current Amazon Web Services Region over a
                *             24-hour period. This value is also called your <i>sending
                *             quota</i>.</p>
                */
            Max24HourSend?: number;
            /**
                * <p>The maximum number of emails that you can send per second in the current Amazon Web Services Region.
                *             This value is also called your <i>maximum sending rate</i> or your
                *                 <i>maximum TPS (transactions per second) rate</i>.</p>
                */
            MaxSendRate?: number;
            /**
                * <p>The number of emails sent from your Amazon SES account in the current Amazon Web Services Region over the
                *             past 24 hours.</p>
                */
            SentLast24Hours?: number;
    }
    export namespace SendQuota {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendQuota) => any;
    }
    /**
        * <p>An object that contains information about the email address suppression preferences
        *             for your account in the current Amazon Web Services Region.</p>
        */
    export interface SuppressionAttributes {
            /**
                * <p>A list that contains the reasons that email addresses will be automatically added to
                *             the suppression list for your account. This list can contain any or all of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a
                *                     complaint.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>BOUNCE</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a hard
                *                     bounce.</p>
                *             </li>
                *          </ul>
                */
            SuppressedReasons?: (SuppressionListReason | string)[];
    }
    export namespace SuppressionAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressionAttributes) => any;
    }
    /**
        * <p>A list of details about the email-sending capabilities of your Amazon SES account in the
        *             current Amazon Web Services Region.</p>
        */
    export interface GetAccountResponse {
            /**
                * <p>Indicates whether or not the automatic warm-up feature is enabled for dedicated IP
                *             addresses that are associated with your account.</p>
                */
            DedicatedIpAutoWarmupEnabled?: boolean;
            /**
                * <p>The reputation status of your Amazon SES account. The status can be one of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>HEALTHY</code> – There are no reputation-related issues that
                *                     currently impact your account.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>PROBATION</code> – We've identified potential issues with your
                *                     Amazon SES account. We're placing your account under review while you work on
                *                     correcting these issues.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>SHUTDOWN</code> – Your account's ability to send email is
                *                     currently paused because of an issue with the email sent from your account. When
                *                     you correct the issue, you can contact us and request that your account's
                *                     ability to send email is resumed.</p>
                *             </li>
                *          </ul>
                */
            EnforcementStatus?: string;
            /**
                * <p>Indicates whether or not your account has production access in the current Amazon Web Services
                *             Region.</p>
                *         <p>If the value is <code>false</code>, then your account is in the
                *                 <i>sandbox</i>. When your account is in the sandbox, you can only send
                *             email to verified identities. Additionally, the maximum number of emails you can send in
                *             a 24-hour period (your sending quota) is 200, and the maximum number of emails you can
                *             send per second (your maximum sending rate) is 1.</p>
                *         <p>If the value is <code>true</code>, then your account has production access. When your
                *             account has production access, you can send email to any address. The sending quota and
                *             maximum sending rate for your account vary based on your specific use case.</p>
                */
            ProductionAccessEnabled?: boolean;
            /**
                * <p>An object that contains information about the per-day and per-second sending limits
                *             for your Amazon SES account in the current Amazon Web Services Region.</p>
                */
            SendQuota?: SendQuota;
            /**
                * <p>Indicates whether or not email sending is enabled for your Amazon SES account in the
                *             current Amazon Web Services Region.</p>
                */
            SendingEnabled?: boolean;
            /**
                * <p>An object that contains information about the email address suppression preferences
                *             for your account in the current Amazon Web Services Region.</p>
                */
            SuppressionAttributes?: SuppressionAttributes;
            /**
                * <p>An object that defines your account details.</p>
                */
            Details?: AccountDetails;
    }
    export namespace GetAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountResponse) => any;
    }
    /**
        * <p>A request to retrieve a list of the blacklists that your dedicated IP addresses appear
        *             on.</p>
        */
    export interface GetBlacklistReportsRequest {
            /**
                * <p>A list of IP addresses that you want to retrieve blacklist information about. You can
                *             only specify the dedicated IP addresses that you use to send email using Amazon SES or
                *             Amazon Pinpoint.</p>
                */
            BlacklistItemNames: string[] | undefined;
    }
    export namespace GetBlacklistReportsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBlacklistReportsRequest) => any;
    }
    /**
        * <p>An object that contains information about blacklist events.</p>
        */
    export interface GetBlacklistReportsResponse {
            /**
                * <p>An object that contains information about a blacklist that one of your dedicated IP
                *             addresses appears on.</p>
                */
            BlacklistReport: Record<string, BlacklistEntry[]> | undefined;
    }
    export namespace GetBlacklistReportsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBlacklistReportsResponse) => any;
    }
    /**
        * <p>A request to obtain information about a configuration set.</p>
        */
    export interface GetConfigurationSetRequest {
            /**
                * <p>The name of the configuration set.</p>
                */
            ConfigurationSetName: string | undefined;
    }
    export namespace GetConfigurationSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetConfigurationSetRequest) => any;
    }
    /**
        * <p>Information about a configuration set.</p>
        */
    export interface GetConfigurationSetResponse {
            /**
                * <p>The name of the configuration set.</p>
                */
            ConfigurationSetName?: string;
            /**
                * <p>An object that defines the open and click tracking options for emails that you send
                *             using the configuration set.</p>
                */
            TrackingOptions?: TrackingOptions;
            /**
                * <p>An object that defines the dedicated IP pool that is used to send emails that you send
                *             using the configuration set.</p>
                */
            DeliveryOptions?: DeliveryOptions;
            /**
                * <p>An object that defines whether or not Amazon SES collects reputation metrics for the emails
                *             that you send that use the configuration set.</p>
                */
            ReputationOptions?: ReputationOptions;
            /**
                * <p>An object that defines whether or not Amazon SES can send email that you send using the
                *             configuration set.</p>
                */
            SendingOptions?: SendingOptions;
            /**
                * <p>An array of objects that define the tags (keys and values) that are associated with
                *             the configuration set.</p>
                */
            Tags?: Tag[];
            /**
                * <p>An object that contains information about the suppression list preferences for your
                *             account.</p>
                */
            SuppressionOptions?: SuppressionOptions;
    }
    export namespace GetConfigurationSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetConfigurationSetResponse) => any;
    }
    /**
        * <p>A request to obtain information about the event destinations for a configuration
        *             set.</p>
        */
    export interface GetConfigurationSetEventDestinationsRequest {
            /**
                * <p>The name of the configuration set that contains the event destination.</p>
                */
            ConfigurationSetName: string | undefined;
    }
    export namespace GetConfigurationSetEventDestinationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetConfigurationSetEventDestinationsRequest) => any;
    }
    /**
        * <p>Information about an event destination for a configuration set.</p>
        */
    export interface GetConfigurationSetEventDestinationsResponse {
            /**
                * <p>An array that includes all of the events destinations that have been configured for
                *             the configuration set.</p>
                */
            EventDestinations?: EventDestination[];
    }
    export namespace GetConfigurationSetEventDestinationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetConfigurationSetEventDestinationsResponse) => any;
    }
    export interface GetContactRequest {
            /**
                * <p>The name of the contact list to which the contact belongs.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>The contact's email addres.</p>
                */
            EmailAddress: string | undefined;
    }
    export namespace GetContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactRequest) => any;
    }
    export interface GetContactResponse {
            /**
                * <p>The name of the contact list to which the contact belongs.</p>
                */
            ContactListName?: string;
            /**
                * <p>The contact's email addres.</p>
                */
            EmailAddress?: string;
            /**
                * <p>The contact's preference for being opted-in to or opted-out of a topic.></p>
                */
            TopicPreferences?: TopicPreference[];
            /**
                * <p>The default topic preferences applied to the contact.</p>
                */
            TopicDefaultPreferences?: TopicPreference[];
            /**
                * <p>A boolean value status noting if the contact is unsubscribed from all contact list
                *             topics.</p>
                */
            UnsubscribeAll?: boolean;
            /**
                * <p>The attribute data attached to a contact.</p>
                */
            AttributesData?: string;
            /**
                * <p>A timestamp noting when the contact was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>A timestamp noting the last time the contact's information was updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace GetContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactResponse) => any;
    }
    export interface GetContactListRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
    }
    export namespace GetContactListRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactListRequest) => any;
    }
    export interface GetContactListResponse {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName?: string;
            /**
                * <p>An interest group, theme, or label within a list. A contact list can have multiple
                *             topics.</p>
                */
            Topics?: Topic[];
            /**
                * <p>A description of what the contact list is about.</p>
                */
            Description?: string;
            /**
                * <p>A timestamp noting when the contact list was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>A timestamp noting the last time the contact list was updated.</p>
                */
            LastUpdatedTimestamp?: Date;
            /**
                * <p>The tags associated with a contact list.</p>
                */
            Tags?: Tag[];
    }
    export namespace GetContactListResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetContactListResponse) => any;
    }
    /**
        * <p>Represents a request to retrieve an existing custom verification email
        *             template.</p>
        */
    export interface GetCustomVerificationEmailTemplateRequest {
            /**
                * <p>The name of the custom verification email template that you want to retrieve.</p>
                */
            TemplateName: string | undefined;
    }
    export namespace GetCustomVerificationEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCustomVerificationEmailTemplateRequest) => any;
    }
    /**
        * <p>The following elements are returned by the service.</p>
        */
    export interface GetCustomVerificationEmailTemplateResponse {
            /**
                * <p>The name of the custom verification email template.</p>
                */
            TemplateName?: string;
            /**
                * <p>The email address that the custom verification email is sent from.</p>
                */
            FromEmailAddress?: string;
            /**
                * <p>The subject line of the custom verification email.</p>
                */
            TemplateSubject?: string;
            /**
                * <p>The content of the custom verification email.</p>
                */
            TemplateContent?: string;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is successfully verified.</p>
                */
            SuccessRedirectionURL?: string;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is not successfully verified.</p>
                */
            FailureRedirectionURL?: string;
    }
    export namespace GetCustomVerificationEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetCustomVerificationEmailTemplateResponse) => any;
    }
    /**
        * <p>A request to obtain more information about a dedicated IP address.</p>
        */
    export interface GetDedicatedIpRequest {
            /**
                * <p>The IP address that you want to obtain more information about. The value you specify
                *             has to be a dedicated IP address that's assocaited with your Amazon Web Services account.</p>
                */
            Ip: string | undefined;
    }
    export namespace GetDedicatedIpRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDedicatedIpRequest) => any;
    }
    /**
        * <p>Information about a dedicated IP address.</p>
        */
    export interface GetDedicatedIpResponse {
            /**
                * <p>An object that contains information about a dedicated IP address.</p>
                */
            DedicatedIp?: DedicatedIp;
    }
    export namespace GetDedicatedIpResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDedicatedIpResponse) => any;
    }
    /**
        * <p>A request to obtain more information about dedicated IP pools.</p>
        */
    export interface GetDedicatedIpsRequest {
            /**
                * <p>The name of the IP pool that the dedicated IP address is associated with.</p>
                */
            PoolName?: string;
            /**
                * <p>A token returned from a previous call to <code>GetDedicatedIps</code> to indicate the
                *             position of the dedicated IP pool in the list of IP pools.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>.
                *             If the number of results is larger than the number you specified in this parameter, then
                *             the response includes a <code>NextToken</code> element, which you can use to obtain
                *             additional results.</p>
                */
            PageSize?: number;
    }
    export namespace GetDedicatedIpsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDedicatedIpsRequest) => any;
    }
    /**
        * <p>Information about the dedicated IP addresses that are associated with your Amazon Web Services
        *             account.</p>
        */
    export interface GetDedicatedIpsResponse {
            /**
                * <p>A list of dedicated IP addresses that are associated with your Amazon Web Services account.</p>
                */
            DedicatedIps?: DedicatedIp[];
            /**
                * <p>A token that indicates that there are additional dedicated IP addresses to list. To
                *             view additional addresses, issue another request to <code>GetDedicatedIps</code>,
                *             passing this token in the <code>NextToken</code> parameter.</p>
                */
            NextToken?: string;
    }
    export namespace GetDedicatedIpsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDedicatedIpsResponse) => any;
    }
    /**
        * <p>Retrieve information about the status of the Deliverability dashboard for your Amazon Web Services account.
        *             When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and
        *             other metrics for your domains. You also gain the ability to perform predictive inbox placement tests.</p>
        *
        *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
        *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
        *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
        */
    export interface GetDeliverabilityDashboardOptionsRequest {
    }
    export namespace GetDeliverabilityDashboardOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDeliverabilityDashboardOptionsRequest) => any;
    }
    /**
        * <p>An object that shows the status of the Deliverability dashboard.</p>
        */
    export interface GetDeliverabilityDashboardOptionsResponse {
            /**
                * <p>Specifies whether the Deliverability dashboard is enabled. If this value is <code>true</code>,
                *             the dashboard is enabled.</p>
                */
            DashboardEnabled: boolean | undefined;
            /**
                * <p>The date, in Unix time format, when your current subscription to the Deliverability dashboard
                *             is scheduled to expire, if your subscription is scheduled to expire at the end of the
                *             current calendar month. This value is null if you have an active subscription that isn’t
                *             due to expire at the end of the month.</p>
                */
            SubscriptionExpiryDate?: Date;
            /**
                * <p>The current status of your Deliverability dashboard subscription. If this value is
                *                 <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end
                *             of the current calendar month.</p>
                */
            AccountStatus?: DeliverabilityDashboardAccountStatus | string;
            /**
                * <p>An array of objects, one for each verified domain that you use to send email and
                *             currently has an active Deliverability dashboard subscription that isn’t scheduled to expire at
                *             the end of the current calendar month.</p>
                */
            ActiveSubscribedDomains?: DomainDeliverabilityTrackingOption[];
            /**
                * <p>An array of objects, one for each verified domain that you use to send email and
                *             currently has an active Deliverability dashboard subscription that's scheduled to expire at the
                *             end of the current calendar month.</p>
                */
            PendingExpirationSubscribedDomains?: DomainDeliverabilityTrackingOption[];
    }
    export namespace GetDeliverabilityDashboardOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDeliverabilityDashboardOptionsResponse) => any;
    }
    /**
        * <p>A request to retrieve the results of a predictive inbox placement test.</p>
        */
    export interface GetDeliverabilityTestReportRequest {
            /**
                * <p>A unique string that identifies the predictive inbox placement test.</p>
                */
            ReportId: string | undefined;
    }
    export namespace GetDeliverabilityTestReportRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDeliverabilityTestReportRequest) => any;
    }
    /**
        * <p>An object that contains inbox placement data for an email provider.</p>
        */
    export interface PlacementStatistics {
            /**
                * <p>The percentage of emails that arrived in recipients' inboxes during the predictive inbox placement test.</p>
                */
            InboxPercentage?: number;
            /**
                * <p>The percentage of emails that arrived in recipients' spam or junk mail folders during
                *             the predictive inbox placement test.</p>
                */
            SpamPercentage?: number;
            /**
                * <p>The percentage of emails that didn't arrive in recipients' inboxes at all during the
                *             predictive inbox placement test.</p>
                */
            MissingPercentage?: number;
            /**
                * <p>The percentage of emails that were authenticated by using Sender Policy Framework
                *             (SPF) during the predictive inbox placement test.</p>
                */
            SpfPercentage?: number;
            /**
                * <p>The percentage of emails that were authenticated by using DomainKeys Identified Mail
                *             (DKIM) during the predictive inbox placement test.</p>
                */
            DkimPercentage?: number;
    }
    export namespace PlacementStatistics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PlacementStatistics) => any;
    }
    /**
        * <p>An object that describes how email sent during the predictive inbox placement test was handled by a certain
        *             email provider.</p>
        */
    export interface IspPlacement {
            /**
                * <p>The name of the email provider that the inbox placement data applies to.</p>
                */
            IspName?: string;
            /**
                * <p>An object that contains inbox placement metrics for a specific email provider.</p>
                */
            PlacementStatistics?: PlacementStatistics;
    }
    export namespace IspPlacement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IspPlacement) => any;
    }
    /**
        * <p>The results of the predictive inbox placement test.</p>
        */
    export interface GetDeliverabilityTestReportResponse {
            /**
                * <p>An object that contains the results of the predictive inbox placement test.</p>
                */
            DeliverabilityTestReport: DeliverabilityTestReport | undefined;
            /**
                * <p>An object that specifies how many test messages that were sent during the predictive inbox placement test were
                *             delivered to recipients' inboxes, how many were sent to recipients' spam folders, and
                *             how many weren't delivered.</p>
                */
            OverallPlacement: PlacementStatistics | undefined;
            /**
                * <p>An object that describes how the test email was handled by several email providers,
                *             including Gmail, Hotmail, Yahoo, AOL, and others.</p>
                */
            IspPlacements: IspPlacement[] | undefined;
            /**
                * <p>An object that contains the message that you sent when you performed this
                *             predictive inbox placement test.</p>
                */
            Message?: string;
            /**
                * <p>An array of objects that define the tags (keys and values) that are associated with
                *             the predictive inbox placement test.</p>
                */
            Tags?: Tag[];
    }
    export namespace GetDeliverabilityTestReportResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDeliverabilityTestReportResponse) => any;
    }
    /**
        * <p>Retrieve all the deliverability data for a specific campaign. This data is available
        *             for a campaign only if the campaign sent email by using a domain that the
        *             Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        *             operation).</p>
        */
    export interface GetDomainDeliverabilityCampaignRequest {
            /**
                * <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates
                *             and assigns this identifier to a campaign.</p>
                */
            CampaignId: string | undefined;
    }
    export namespace GetDomainDeliverabilityCampaignRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainDeliverabilityCampaignRequest) => any;
    }
    /**
        * <p>An object that contains all the deliverability data for a specific campaign. This data
        *             is available for a campaign only if the campaign sent email by using a domain that the
        *             Deliverability dashboard is enabled for.</p>
        */
    export interface GetDomainDeliverabilityCampaignResponse {
            /**
                * <p>An object that contains the deliverability data for the campaign.</p>
                */
            DomainDeliverabilityCampaign: DomainDeliverabilityCampaign | undefined;
    }
    export namespace GetDomainDeliverabilityCampaignResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainDeliverabilityCampaignResponse) => any;
    }
    /**
        * <p>A request to obtain deliverability metrics for a domain.</p>
        */
    export interface GetDomainStatisticsReportRequest {
            /**
                * <p>The domain that you want to obtain deliverability metrics for.</p>
                */
            Domain: string | undefined;
            /**
                * <p>The first day (in Unix time) that you want to obtain domain deliverability metrics
                *             for.</p>
                */
            StartDate: Date | undefined;
            /**
                * <p>The last day (in Unix time) that you want to obtain domain deliverability metrics for.
                *             The <code>EndDate</code> that you specify has to be less than or equal to 30 days after
                *             the <code>StartDate</code>.</p>
                */
            EndDate: Date | undefined;
    }
    export namespace GetDomainStatisticsReportRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainStatisticsReportRequest) => any;
    }
    /**
        * <p>An object that contains information about email that was sent from the selected
        *             domain.</p>
        */
    export interface OverallVolume {
            /**
                * <p>An object that contains information about the numbers of messages that arrived in
                *             recipients' inboxes and junk mail folders.</p>
                */
            VolumeStatistics?: VolumeStatistics;
            /**
                * <p>The percentage of emails that were sent from the domain that were read by their
                *             recipients.</p>
                */
            ReadRatePercent?: number;
            /**
                * <p>An object that contains inbox and junk mail placement metrics for individual email
                *             providers.</p>
                */
            DomainIspPlacements?: DomainIspPlacement[];
    }
    export namespace OverallVolume {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OverallVolume) => any;
    }
    /**
        * <p>An object that includes statistics that are related to the domain that you
        *             specified.</p>
        */
    export interface GetDomainStatisticsReportResponse {
            /**
                * <p>An object that contains deliverability metrics for the domain that you specified. The
                *             data in this object is a summary of all of the data that was collected from the
                *                 <code>StartDate</code> to the <code>EndDate</code>.</p>
                */
            OverallVolume: OverallVolume | undefined;
            /**
                * <p>An object that contains deliverability metrics for the domain that you specified. This
                *             object contains data for each day, starting on the <code>StartDate</code> and ending on
                *             the <code>EndDate</code>.</p>
                */
            DailyVolumes: DailyVolume[] | undefined;
    }
    export namespace GetDomainStatisticsReportResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDomainStatisticsReportResponse) => any;
    }
    /**
        * <p>A request to return details about an email identity.</p>
        */
    export interface GetEmailIdentityRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
    }
    export namespace GetEmailIdentityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailIdentityRequest) => any;
    }
    export enum MailFromDomainStatus {
            FAILED = "FAILED",
            PENDING = "PENDING",
            SUCCESS = "SUCCESS",
            TEMPORARY_FAILURE = "TEMPORARY_FAILURE"
    }
    /**
        * <p>A list of attributes that are associated with a MAIL FROM domain.</p>
        */
    export interface MailFromAttributes {
            /**
                * <p>The name of a domain that an email identity uses as a custom MAIL FROM domain.</p>
                */
            MailFromDomain: string | undefined;
            /**
                * <p>The status of the MAIL FROM domain. This status can have the following values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>PENDING</code> – Amazon SES hasn't started searching for the MX record
                *                     yet.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>SUCCESS</code> – Amazon SES detected the required MX record for the
                *                     MAIL FROM domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>FAILED</code> – Amazon SES can't find the required MX record, or the
                *                     record no longer exists.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which
                *                     prevented Amazon SES from determining the status of the MAIL FROM domain.</p>
                *             </li>
                *          </ul>
                */
            MailFromDomainStatus: MailFromDomainStatus | string | undefined;
            /**
                * <p>The action to take if the required MX record can't be found when you send an email.
                *             When you set this value to <code>UseDefaultValue</code>, the mail is sent using
                *                 <i>amazonses.com</i> as the MAIL FROM domain. When you set this value
                *             to <code>RejectMessage</code>, the Amazon SES API v2 returns a
                *                 <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the
                *             email.</p>
                *         <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the
                *                 <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
                *             states.</p>
                */
            BehaviorOnMxFailure: BehaviorOnMxFailure | string | undefined;
    }
    export namespace MailFromAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MailFromAttributes) => any;
    }
    /**
        * <p>Details about an email identity.</p>
        */
    export interface GetEmailIdentityResponse {
            /**
                * <p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not
                *             supported.</p>
                */
            IdentityType?: IdentityType | string;
            /**
                * <p>The feedback forwarding configuration for the identity.</p>
                *         <p>If the value is <code>true</code>, you receive email notifications when bounce or
                *             complaint events occur. These notifications are sent to the address that you specified
                *             in the <code>Return-Path</code> header of the original email.</p>
                *         <p>You're required to have a method of tracking bounces and complaints. If you haven't
                *             set up another mechanism for receiving bounce or complaint notifications (for example,
                *             by setting up an event destination), you receive an email notification when these events
                *             occur (even if this setting is disabled).</p>
                */
            FeedbackForwardingStatus?: boolean;
            /**
                * <p>Specifies whether or not the identity is verified. You can only send email from
                *             verified email addresses or domains. For more information about verifying identities,
                *             see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.</p>
                */
            VerifiedForSendingStatus?: boolean;
            /**
                * <p>An object that contains information about the DKIM attributes for the identity.</p>
                */
            DkimAttributes?: DkimAttributes;
            /**
                * <p>An object that contains information about the Mail-From attributes for the email
                *             identity.</p>
                */
            MailFromAttributes?: MailFromAttributes;
            /**
                * <p>A map of policy names to policies.</p>
                */
            Policies?: Record<string, string>;
            /**
                * <p>An array of objects that define the tags (keys and values) that are associated with
                *             the email identity.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The configuration set used by default when sending from this identity.</p>
                */
            ConfigurationSetName?: string;
    }
    export namespace GetEmailIdentityResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailIdentityResponse) => any;
    }
    /**
        * <p>A request to return the policies of an email identity.</p>
        */
    export interface GetEmailIdentityPoliciesRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
    }
    export namespace GetEmailIdentityPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailIdentityPoliciesRequest) => any;
    }
    /**
        * <p>Identity policies associated with email identity.</p>
        */
    export interface GetEmailIdentityPoliciesResponse {
            /**
                * <p>A map of policy names to policies.</p>
                */
            Policies?: Record<string, string>;
    }
    export namespace GetEmailIdentityPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailIdentityPoliciesResponse) => any;
    }
    /**
        * <p>Represents a request to display the template object (which includes the subject line,
        *             HTML part and text part) for the template you specify.</p>
        */
    export interface GetEmailTemplateRequest {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName: string | undefined;
    }
    export namespace GetEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailTemplateRequest) => any;
    }
    /**
        * <p>The following element is returned by the service.</p>
        */
    export interface GetEmailTemplateResponse {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>The content of the email template, composed of a subject line, an HTML part, and a
                *             text-only part.</p>
                */
            TemplateContent: EmailTemplateContent | undefined;
    }
    export namespace GetEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEmailTemplateResponse) => any;
    }
    /**
        * <p>Represents a request for information about an import job using the import job
        *             ID.</p>
        */
    export interface GetImportJobRequest {
            /**
                * <p>The ID of the import job.</p>
                */
            JobId: string | undefined;
    }
    export namespace GetImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetImportJobRequest) => any;
    }
    export enum JobStatus {
            COMPLETED = "COMPLETED",
            CREATED = "CREATED",
            FAILED = "FAILED",
            PROCESSING = "PROCESSING"
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface GetImportJobResponse {
            /**
                * <p>A string that represents the import job ID.</p>
                */
            JobId?: string;
            /**
                * <p>The destination of the import job.</p>
                */
            ImportDestination?: ImportDestination;
            /**
                * <p>The data source of the import job.</p>
                */
            ImportDataSource?: ImportDataSource;
            /**
                * <p>The failure details about an import job.</p>
                */
            FailureInfo?: FailureInfo;
            /**
                * <p>The status of the import job.</p>
                */
            JobStatus?: JobStatus | string;
            /**
                * <p>The time stamp of when the import job was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time stamp of when the import job was completed.</p>
                */
            CompletedTimestamp?: Date;
            /**
                * <p>The current number of records processed.</p>
                */
            ProcessedRecordsCount?: number;
            /**
                * <p>The number of records that failed processing because of invalid input or other
                *             reasons.</p>
                */
            FailedRecordsCount?: number;
    }
    export namespace GetImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetImportJobResponse) => any;
    }
    /**
        * <p>A request to retrieve information about an email address that's on the suppression
        *             list for your account.</p>
        */
    export interface GetSuppressedDestinationRequest {
            /**
                * <p>The email address that's on the account suppression list.</p>
                */
            EmailAddress: string | undefined;
    }
    export namespace GetSuppressedDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSuppressedDestinationRequest) => any;
    }
    /**
        * <p>An object that contains additional attributes that are related an email address that
        *             is on the suppression list for your account.</p>
        */
    export interface SuppressedDestinationAttributes {
            /**
                * <p>The unique identifier of the email message that caused the email address to be added
                *             to the suppression list for your account.</p>
                */
            MessageId?: string;
            /**
                * <p>A unique identifier that's generated when an email address is added to the suppression
                *             list for your account.</p>
                */
            FeedbackId?: string;
    }
    export namespace SuppressedDestinationAttributes {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressedDestinationAttributes) => any;
    }
    /**
        * <p>An object that contains information about an email address that is on the suppression
        *             list for your account.</p>
        */
    export interface SuppressedDestination {
            /**
                * <p>The email address that is on the suppression list for your account.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The reason that the address was added to the suppression list for your account.</p>
                */
            Reason: SuppressionListReason | string | undefined;
            /**
                * <p>The date and time when the suppressed destination was last updated, shown in Unix time
                *             format.</p>
                */
            LastUpdateTime: Date | undefined;
            /**
                * <p>An optional value that can contain additional information about the reasons that the
                *             address was added to the suppression list for your account.</p>
                */
            Attributes?: SuppressedDestinationAttributes;
    }
    export namespace SuppressedDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressedDestination) => any;
    }
    /**
        * <p>Information about the suppressed email address.</p>
        */
    export interface GetSuppressedDestinationResponse {
            /**
                * <p>An object containing information about the suppressed email address.</p>
                */
            SuppressedDestination: SuppressedDestination | undefined;
    }
    export namespace GetSuppressedDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSuppressedDestinationResponse) => any;
    }
    /**
        * <p>Information about an email identity.</p>
        */
    export interface IdentityInfo {
            /**
                * <p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> type is not supported
                *             for email identity types.</p>
                */
            IdentityType?: IdentityType | string;
            /**
                * <p>The address or domain of the identity.</p>
                */
            IdentityName?: string;
            /**
                * <p>Indicates whether or not you can send email from the identity.</p>
                *         <p>An <i>identity</i> is an email address or domain that you send email
                *             from. Before you can send email from an identity, you have to demostrate that you own
                *             the identity, and that you authorize Amazon SES to send email from that identity.</p>
                */
            SendingEnabled?: boolean;
    }
    export namespace IdentityInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IdentityInfo) => any;
    }
    export enum ImportDestinationType {
            CONTACT_LIST = "CONTACT_LIST",
            SUPPRESSION_LIST = "SUPPRESSION_LIST"
    }
    /**
        * <p>A summary of the import job.</p>
        */
    export interface ImportJobSummary {
            /**
                * <p>A string that represents the import job ID.</p>
                */
            JobId?: string;
            /**
                * <p>An object that contains details about the resource destination the import job is going
                *             to target.</p>
                */
            ImportDestination?: ImportDestination;
            /**
                * <p>The status of the import job.</p>
                */
            JobStatus?: JobStatus | string;
            /**
                * <p>The date and time when the import job was created.</p>
                */
            CreatedTimestamp?: Date;
    }
    export namespace ImportJobSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportJobSummary) => any;
    }
    /**
        * <p>The specified request includes an invalid or expired token.</p>
        */
    export class InvalidNextTokenException extends __BaseException {
            readonly name: "InvalidNextTokenException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>);
    }
    /**
        * <p>A request to obtain a list of configuration sets for your Amazon SES account in the current
        *             Amazon Web Services Region.</p>
        */
    export interface ListConfigurationSetsRequest {
            /**
                * <p>A token returned from a previous call to <code>ListConfigurationSets</code> to
                *             indicate the position in the list of configuration sets.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to <code>ListConfigurationSets</code>.
                *             If the number of results is larger than the number you specified in this parameter, then
                *             the response includes a <code>NextToken</code> element, which you can use to obtain
                *             additional results.</p>
                */
            PageSize?: number;
    }
    export namespace ListConfigurationSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConfigurationSetsRequest) => any;
    }
    /**
        * <p>A list of configuration sets in your Amazon SES account in the current Amazon Web Services Region.</p>
        */
    export interface ListConfigurationSetsResponse {
            /**
                * <p>An array that contains all of the configuration sets in your Amazon SES account in the
                *             current Amazon Web Services Region.</p>
                */
            ConfigurationSets?: string[];
            /**
                * <p>A token that indicates that there are additional configuration sets to list. To view
                *             additional configuration sets, issue another request to
                *                 <code>ListConfigurationSets</code>, and pass this token in the
                *                 <code>NextToken</code> parameter.</p>
                */
            NextToken?: string;
    }
    export namespace ListConfigurationSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConfigurationSetsResponse) => any;
    }
    export interface ListContactListsRequest {
            /**
                * <p>Maximum number of contact lists to return at once. Use this parameter to paginate
                *             results. If additional contact lists exist beyond the specified limit, the
                *                 <code>NextToken</code> element is sent in the response. Use the
                *                 <code>NextToken</code> value in subsequent requests to retrieve additional
                *             lists.</p>
                */
            PageSize?: number;
            /**
                * <p>A string token indicating that there might be additional contact lists available to be
                *             listed. Use the token provided in the Response to use in the subsequent call to
                *             ListContactLists with the same parameters to retrieve the next page of contact
                *             lists.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactListsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactListsRequest) => any;
    }
    export interface ListContactListsResponse {
            /**
                * <p>The available contact lists.</p>
                */
            ContactLists?: ContactList[];
            /**
                * <p>A string token indicating that there might be additional contact lists available to be
                *             listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the
                *             same parameters to retrieve the next page of contact lists.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactListsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactListsResponse) => any;
    }
    /**
        * <p>Used for filtering by a specific topic preference.</p>
        */
    export interface TopicFilter {
            /**
                * <p>The name of a topic on which you wish to apply the filter.</p>
                */
            TopicName?: string;
            /**
                * <p>Notes that the default subscription status should be applied to a contact because the
                *             contact has not noted their preference for subscribing to a topic.</p>
                */
            UseDefaultIfPreferenceUnavailable?: boolean;
    }
    export namespace TopicFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TopicFilter) => any;
    }
    /**
        * <p>A filter that can be applied to a list of contacts.</p>
        */
    export interface ListContactsFilter {
            /**
                * <p>The status by which you are filtering: <code>OPT_IN</code> or
                *             <code>OPT_OUT</code>.</p>
                */
            FilteredStatus?: SubscriptionStatus | string;
            /**
                * <p>Used for filtering by a specific topic preference.</p>
                */
            TopicFilter?: TopicFilter;
    }
    export namespace ListContactsFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactsFilter) => any;
    }
    export interface ListContactsRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>A filter that can be applied to a list of contacts.</p>
                */
            Filter?: ListContactsFilter;
            /**
                * <p>The number of contacts that may be returned at once, which is dependent on if there
                *             are more or less contacts than the value of the PageSize. Use this parameter to
                *             paginate results. If additional contacts exist beyond the specified limit, the
                *                 <code>NextToken</code> element is sent in the response. Use the
                *                 <code>NextToken</code> value in subsequent requests to retrieve additional
                *             contacts.</p>
                */
            PageSize?: number;
            /**
                * <p>A string token indicating that there might be additional contacts available to be
                *             listed. Use the token provided in the Response to use in the subsequent call to
                *             ListContacts with the same parameters to retrieve the next page of contacts.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactsRequest) => any;
    }
    export interface ListContactsResponse {
            /**
                * <p>The contacts present in a specific contact list.</p>
                */
            Contacts?: Contact[];
            /**
                * <p>A string token indicating that there might be additional contacts available to be
                *             listed. Copy this token to a subsequent call to <code>ListContacts</code> with the same
                *             parameters to retrieve the next page of contacts.</p>
                */
            NextToken?: string;
    }
    export namespace ListContactsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListContactsResponse) => any;
    }
    /**
        * <p>Represents a request to list the existing custom verification email templates for your
        *             account.</p>
        */
    export interface ListCustomVerificationEmailTemplatesRequest {
            /**
                * <p>A token returned from a previous call to
                *                 <code>ListCustomVerificationEmailTemplates</code> to indicate the position in the
                *             list of custom verification email templates.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to
                *                 <code>ListCustomVerificationEmailTemplates</code>. If the number of results is
                *             larger than the number you specified in this parameter, then the response includes a
                *                 <code>NextToken</code> element, which you can use to obtain additional
                *             results.</p>
                *         <p>The value you specify has to be at least 1, and can be no more than 50.</p>
                */
            PageSize?: number;
    }
    export namespace ListCustomVerificationEmailTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCustomVerificationEmailTemplatesRequest) => any;
    }
    /**
        * <p>The following elements are returned by the service.</p>
        */
    export interface ListCustomVerificationEmailTemplatesResponse {
            /**
                * <p>A list of the custom verification email templates that exist in your account.</p>
                */
            CustomVerificationEmailTemplates?: CustomVerificationEmailTemplateMetadata[];
            /**
                * <p>A token indicating that there are additional custom verification email templates
                *             available to be listed. Pass this token to a subsequent call to
                *                 <code>ListCustomVerificationEmailTemplates</code> to retrieve the next 50 custom
                *             verification email templates.</p>
                */
            NextToken?: string;
    }
    export namespace ListCustomVerificationEmailTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListCustomVerificationEmailTemplatesResponse) => any;
    }
    /**
        * <p>A request to obtain a list of dedicated IP pools.</p>
        */
    export interface ListDedicatedIpPoolsRequest {
            /**
                * <p>A token returned from a previous call to <code>ListDedicatedIpPools</code> to indicate
                *             the position in the list of dedicated IP pools.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to <code>ListDedicatedIpPools</code>.
                *             If the number of results is larger than the number you specified in this parameter, then
                *             the response includes a <code>NextToken</code> element, which you can use to obtain
                *             additional results.</p>
                */
            PageSize?: number;
    }
    export namespace ListDedicatedIpPoolsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDedicatedIpPoolsRequest) => any;
    }
    /**
        * <p>A list of dedicated IP pools.</p>
        */
    export interface ListDedicatedIpPoolsResponse {
            /**
                * <p>A list of all of the dedicated IP pools that are associated with your Amazon Web Services account in
                *             the current Region.</p>
                */
            DedicatedIpPools?: string[];
            /**
                * <p>A token that indicates that there are additional IP pools to list. To view additional
                *             IP pools, issue another request to <code>ListDedicatedIpPools</code>, passing this token
                *             in the <code>NextToken</code> parameter.</p>
                */
            NextToken?: string;
    }
    export namespace ListDedicatedIpPoolsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDedicatedIpPoolsResponse) => any;
    }
    /**
        * <p>A request to list all of the predictive inbox placement tests that you've performed.</p>
        */
    export interface ListDeliverabilityTestReportsRequest {
            /**
                * <p>A token returned from a previous call to <code>ListDeliverabilityTestReports</code> to
                *             indicate the position in the list of predictive inbox placement tests.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to
                *                 <code>ListDeliverabilityTestReports</code>. If the number of results is larger than
                *             the number you specified in this parameter, then the response includes a
                *                 <code>NextToken</code> element, which you can use to obtain additional
                *             results.</p>
                *         <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
                */
            PageSize?: number;
    }
    export namespace ListDeliverabilityTestReportsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDeliverabilityTestReportsRequest) => any;
    }
    /**
        * <p>A list of the predictive inbox placement test reports that are available for your account, regardless of
        *             whether or not those tests are complete.</p>
        */
    export interface ListDeliverabilityTestReportsResponse {
            /**
                * <p>An object that contains a lists of predictive inbox placement tests that you've performed.</p>
                */
            DeliverabilityTestReports: DeliverabilityTestReport[] | undefined;
            /**
                * <p>A token that indicates that there are additional predictive inbox placement tests to list. To view additional
                *             predictive inbox placement tests, issue another request to <code>ListDeliverabilityTestReports</code>, and pass
                *             this token in the <code>NextToken</code> parameter.</p>
                */
            NextToken?: string;
    }
    export namespace ListDeliverabilityTestReportsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDeliverabilityTestReportsResponse) => any;
    }
    /**
        * <p>Retrieve deliverability data for all the campaigns that used a specific domain to send
        *             email during a specified time range. This data is available for a domain only if you
        *             enabled the Deliverability dashboard.</p>
        */
    export interface ListDomainDeliverabilityCampaignsRequest {
            /**
                * <p>The first day, in Unix time format, that you want to obtain deliverability data
                *             for.</p>
                */
            StartDate: Date | undefined;
            /**
                * <p>The last day, in Unix time format, that you want to obtain deliverability data for.
                *             This value has to be less than or equal to 30 days after the value of the
                *                 <code>StartDate</code> parameter.</p>
                */
            EndDate: Date | undefined;
            /**
                * <p>The domain to obtain deliverability data for.</p>
                */
            SubscribedDomain: string | undefined;
            /**
                * <p>A token that’s returned from a previous call to the
                *                 <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the
                *             position of a campaign in the list of campaigns.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to include in response to a single call to the
                *                 <code>ListDomainDeliverabilityCampaigns</code> operation. If the number of results
                *             is larger than the number that you specify in this parameter, the response includes a
                *                 <code>NextToken</code> element, which you can use to obtain additional
                *             results.</p>
                */
            PageSize?: number;
    }
    export namespace ListDomainDeliverabilityCampaignsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainDeliverabilityCampaignsRequest) => any;
    }
    /**
        * <p>An array of objects that provide deliverability data for all the campaigns that used a
        *             specific domain to send email during a specified time range. This data is available for
        *             a domain only if you enabled the Deliverability dashboard for the domain.</p>
        */
    export interface ListDomainDeliverabilityCampaignsResponse {
            /**
                * <p>An array of responses, one for each campaign that used the domain to send email during
                *             the specified time range.</p>
                */
            DomainDeliverabilityCampaigns: DomainDeliverabilityCampaign[] | undefined;
            /**
                * <p>A token that’s returned from a previous call to the
                *                 <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the
                *             position of the campaign in the list of campaigns.</p>
                */
            NextToken?: string;
    }
    export namespace ListDomainDeliverabilityCampaignsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDomainDeliverabilityCampaignsResponse) => any;
    }
    /**
        * <p>A request to list all of the email identities associated with your Amazon Web Services account. This
        *             list includes identities that you've already verified, identities that are unverified,
        *             and identities that were verified in the past, but are no longer verified.</p>
        */
    export interface ListEmailIdentitiesRequest {
            /**
                * <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate
                *             the position in the list of identities.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If
                *             the number of results is larger than the number you specified in this parameter, then
                *             the response includes a <code>NextToken</code> element, which you can use to obtain
                *             additional results.</p>
                *         <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
                */
            PageSize?: number;
    }
    export namespace ListEmailIdentitiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEmailIdentitiesRequest) => any;
    }
    /**
        * <p>A list of all of the identities that you've attempted to verify, regardless of whether
        *             or not those identities were successfully verified.</p>
        */
    export interface ListEmailIdentitiesResponse {
            /**
                * <p>An array that includes all of the email identities associated with your Amazon Web Services
                *             account.</p>
                */
            EmailIdentities?: IdentityInfo[];
            /**
                * <p>A token that indicates that there are additional configuration sets to list. To view
                *             additional configuration sets, issue another request to
                *             <code>ListEmailIdentities</code>, and pass this token in the <code>NextToken</code>
                *             parameter.</p>
                */
            NextToken?: string;
    }
    export namespace ListEmailIdentitiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEmailIdentitiesResponse) => any;
    }
    /**
        * <p>Represents a request to list the email templates present in your Amazon SES account in the
        *             current Amazon Web Services Region. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
        *                 Guide</a>.</p>
        */
    export interface ListEmailTemplatesRequest {
            /**
                * <p>A token returned from a previous call to <code>ListEmailTemplates</code> to indicate
                *             the position in the list of email templates.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to <code>ListEmailTemplates</code>. If the number of
                *             results is larger than the number you specified in this parameter, then the response
                *             includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
                *         <p>The value you specify has to be at least 1, and can be no more than 10.</p>
                */
            PageSize?: number;
    }
    export namespace ListEmailTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEmailTemplatesRequest) => any;
    }
    /**
        * <p>The following elements are returned by the service.</p>
        */
    export interface ListEmailTemplatesResponse {
            /**
                * <p>An array the contains the name and creation time stamp for each template in your Amazon SES
                *             account.</p>
                */
            TemplatesMetadata?: EmailTemplateMetadata[];
            /**
                * <p>A token indicating that there are additional email templates available to be listed.
                *             Pass this token to a subsequent <code>ListEmailTemplates</code> call to retrieve the
                *             next 10 email templates.</p>
                */
            NextToken?: string;
    }
    export namespace ListEmailTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEmailTemplatesResponse) => any;
    }
    /**
        * <p>Represents a request to list all of the import jobs for a data destination within the
        *             specified maximum number of import jobs.</p>
        */
    export interface ListImportJobsRequest {
            /**
                * <p>The destination of the import job, which can be used to list import jobs that have a
                *             certain <code>ImportDestinationType</code>.</p>
                */
            ImportDestinationType?: ImportDestinationType | string;
            /**
                * <p>A string token indicating that there might be additional import jobs available to be
                *             listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the
                *             same parameters to retrieve the next page of import jobs.</p>
                */
            NextToken?: string;
            /**
                * <p>Maximum number of import jobs to return at once. Use this parameter to paginate
                *             results. If additional import jobs exist beyond the specified limit, the
                *                 <code>NextToken</code> element is sent in the response. Use the
                *                 <code>NextToken</code> value in subsequent requests to retrieve additional
                *             addresses.</p>
                */
            PageSize?: number;
    }
    export namespace ListImportJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListImportJobsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface ListImportJobsResponse {
            /**
                * <p>A list of the import job summaries.</p>
                */
            ImportJobs?: ImportJobSummary[];
            /**
                * <p>A string token indicating that there might be additional import jobs available to be
                *             listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the
                *             same parameters to retrieve the next page of import jobs.</p>
                */
            NextToken?: string;
    }
    export namespace ListImportJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListImportJobsResponse) => any;
    }
    /**
        * <p>An object used to specify a list or topic to which an email belongs, which will be
        *             used when a contact chooses to unsubscribe.</p>
        */
    export interface ListManagementOptions {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>The name of the topic.</p>
                */
            TopicName?: string;
    }
    export namespace ListManagementOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListManagementOptions) => any;
    }
    /**
        * <p>A request to obtain a list of email destinations that are on the suppression list for
        *             your account.</p>
        */
    export interface ListSuppressedDestinationsRequest {
            /**
                * <p>The factors that caused the email address to be added to .</p>
                */
            Reasons?: (SuppressionListReason | string)[];
            /**
                * <p>Used to filter the list of suppressed email destinations so that it only includes
                *             addresses that were added to the list after a specific date. The date that you specify
                *             should be in Unix time format.</p>
                */
            StartDate?: Date;
            /**
                * <p>Used to filter the list of suppressed email destinations so that it only includes
                *             addresses that were added to the list before a specific date. The date that you specify
                *             should be in Unix time format.</p>
                */
            EndDate?: Date;
            /**
                * <p>A token returned from a previous call to <code>ListSuppressedDestinations</code> to
                *             indicate the position in the list of suppressed email addresses.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of results to show in a single call to
                *                 <code>ListSuppressedDestinations</code>. If the number of results is larger than the
                *             number you specified in this parameter, then the response includes a
                *                 <code>NextToken</code> element, which you can use to obtain additional
                *             results.</p>
                */
            PageSize?: number;
    }
    export namespace ListSuppressedDestinationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSuppressedDestinationsRequest) => any;
    }
    /**
        * <p>A summary that describes the suppressed email address.</p>
        */
    export interface SuppressedDestinationSummary {
            /**
                * <p>The email address that's on the suppression list for your account.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The reason that the address was added to the suppression list for your account.</p>
                */
            Reason: SuppressionListReason | string | undefined;
            /**
                * <p>The date and time when the suppressed destination was last updated, shown in Unix time
                *             format.</p>
                */
            LastUpdateTime: Date | undefined;
    }
    export namespace SuppressedDestinationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SuppressedDestinationSummary) => any;
    }
    /**
        * <p>A list of suppressed email addresses.</p>
        */
    export interface ListSuppressedDestinationsResponse {
            /**
                * <p>A list of summaries, each containing a summary for a suppressed email
                *             destination.</p>
                */
            SuppressedDestinationSummaries?: SuppressedDestinationSummary[];
            /**
                * <p>A token that indicates that there are additional email addresses on the suppression
                *             list for your account. To view additional suppressed addresses, issue another request to
                *                 <code>ListSuppressedDestinations</code>, and pass this token in the
                *                 <code>NextToken</code> parameter.</p>
                */
            NextToken?: string;
    }
    export namespace ListSuppressedDestinationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSuppressedDestinationsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that you want to retrieve tag
                *             information for.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>An array that lists all the tags that are associated with the resource. Each tag
                *             consists of a required tag key (<code>Key</code>) and an associated tag value
                *                 (<code>Value</code>)</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    /**
        * <p>A request to enable or disable the automatic IP address warm-up feature.</p>
        */
    export interface PutAccountDedicatedIpWarmupAttributesRequest {
            /**
                * <p>Enables or disables the automatic warm-up feature for dedicated IP addresses that are
                *             associated with your Amazon SES account in the current Amazon Web Services Region. Set to <code>true</code>
                *             to enable the automatic warm-up feature, or set to <code>false</code> to disable
                *             it.</p>
                */
            AutoWarmupEnabled?: boolean;
    }
    export namespace PutAccountDedicatedIpWarmupAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountDedicatedIpWarmupAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutAccountDedicatedIpWarmupAttributesResponse {
    }
    export namespace PutAccountDedicatedIpWarmupAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountDedicatedIpWarmupAttributesResponse) => any;
    }
    /**
        * <p>A request to submit new account details.</p>
        */
    export interface PutAccountDetailsRequest {
            /**
                * <p>The type of email your account will send.</p>
                */
            MailType: MailType | string | undefined;
            /**
                * <p>The URL of your website. This information helps us better understand the type of
                *             content that you plan to send.</p>
                */
            WebsiteURL: string | undefined;
            /**
                * <p>The language you would prefer to be contacted with.</p>
                */
            ContactLanguage?: ContactLanguage | string;
            /**
                * <p>A description of the types of email that you plan to send.</p>
                */
            UseCaseDescription: string | undefined;
            /**
                * <p>Additional email addresses that you would like to be notified regarding Amazon SES
                *             matters.</p>
                */
            AdditionalContactEmailAddresses?: string[];
            /**
                * <p>Indicates whether or not your account should have production access in the current
                *             Amazon Web Services Region.</p>
                *         <p>If the value is <code>false</code>, then your account is in the
                *                 <i>sandbox</i>. When your account is in the sandbox, you can only send
                *             email to verified identities. Additionally, the maximum number of emails you can send in
                *             a 24-hour period (your sending quota) is 200, and the maximum number of emails you can
                *             send per second (your maximum sending rate) is 1.</p>
                *         <p>If the value is <code>true</code>, then your account has production access. When your
                *             account has production access, you can send email to any address. The sending quota and
                *             maximum sending rate for your account vary based on your specific use case.</p>
                */
            ProductionAccessEnabled?: boolean;
    }
    export namespace PutAccountDetailsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountDetailsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutAccountDetailsResponse {
    }
    export namespace PutAccountDetailsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountDetailsResponse) => any;
    }
    /**
        * <p>A request to change the ability of your account to send email.</p>
        */
    export interface PutAccountSendingAttributesRequest {
            /**
                * <p>Enables or disables your account's ability to send email. Set to <code>true</code> to
                *             enable email sending, or set to <code>false</code> to disable email sending.</p>
                *         <note>
                *             <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation
                *                 to resume your account's ability to send email.</p>
                *         </note>
                */
            SendingEnabled?: boolean;
    }
    export namespace PutAccountSendingAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountSendingAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutAccountSendingAttributesResponse {
    }
    export namespace PutAccountSendingAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountSendingAttributesResponse) => any;
    }
    /**
        * <p>A request to change your account's suppression preferences.</p>
        */
    export interface PutAccountSuppressionAttributesRequest {
            /**
                * <p>A list that contains the reasons that email addresses will be automatically added to
                *             the suppression list for your account. This list can contain any or all of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a
                *                     complaint.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>BOUNCE</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a hard
                *                     bounce.</p>
                *             </li>
                *          </ul>
                */
            SuppressedReasons?: (SuppressionListReason | string)[];
    }
    export namespace PutAccountSuppressionAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountSuppressionAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutAccountSuppressionAttributesResponse {
    }
    export namespace PutAccountSuppressionAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccountSuppressionAttributesResponse) => any;
    }
    /**
        * <p>A request to associate a configuration set with a dedicated IP pool.</p>
        */
    export interface PutConfigurationSetDeliveryOptionsRequest {
            /**
                * <p>The name of the configuration set to associate with a dedicated IP pool.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>Specifies whether messages that use the configuration set are required to use
                *             Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only
                *             delivered if a TLS connection can be established. If the value is <code>Optional</code>,
                *             messages can be delivered in plain text if a TLS connection can't be established.</p>
                */
            TlsPolicy?: TlsPolicy | string;
            /**
                * <p>The name of the dedicated IP pool to associate with the configuration set.</p>
                */
            SendingPoolName?: string;
    }
    export namespace PutConfigurationSetDeliveryOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetDeliveryOptionsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutConfigurationSetDeliveryOptionsResponse {
    }
    export namespace PutConfigurationSetDeliveryOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetDeliveryOptionsResponse) => any;
    }
    /**
        * <p>A request to enable or disable tracking of reputation metrics for a configuration
        *             set.</p>
        */
    export interface PutConfigurationSetReputationOptionsRequest {
            /**
                * <p>The name of the configuration set.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>If <code>true</code>, tracking of reputation metrics is enabled for the configuration
                *             set. If <code>false</code>, tracking of reputation metrics is disabled for the
                *             configuration set.</p>
                */
            ReputationMetricsEnabled?: boolean;
    }
    export namespace PutConfigurationSetReputationOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetReputationOptionsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutConfigurationSetReputationOptionsResponse {
    }
    export namespace PutConfigurationSetReputationOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetReputationOptionsResponse) => any;
    }
    /**
        * <p>A request to enable or disable the ability of Amazon SES to send emails that use a specific
        *             configuration set.</p>
        */
    export interface PutConfigurationSetSendingOptionsRequest {
            /**
                * <p>The name of the configuration set to enable or disable email sending for.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>If <code>true</code>, email sending is enabled for the configuration set. If
                *                 <code>false</code>, email sending is disabled for the configuration set.</p>
                */
            SendingEnabled?: boolean;
    }
    export namespace PutConfigurationSetSendingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetSendingOptionsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutConfigurationSetSendingOptionsResponse {
    }
    export namespace PutConfigurationSetSendingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetSendingOptionsResponse) => any;
    }
    /**
        * <p>A request to change the account suppression list preferences for a specific
        *             configuration set.</p>
        */
    export interface PutConfigurationSetSuppressionOptionsRequest {
            /**
                * <p>The name of the configuration set to change the suppression list preferences
                *             for.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>A list that contains the reasons that email addresses are automatically added to the
                *             suppression list for your account. This list can contain any or all of the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a
                *                     complaint.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>BOUNCE</code> – Amazon SES adds an email address to the suppression
                *                     list for your account when a message sent to that address results in a hard
                *                     bounce.</p>
                *             </li>
                *          </ul>
                */
            SuppressedReasons?: (SuppressionListReason | string)[];
    }
    export namespace PutConfigurationSetSuppressionOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetSuppressionOptionsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutConfigurationSetSuppressionOptionsResponse {
    }
    export namespace PutConfigurationSetSuppressionOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetSuppressionOptionsResponse) => any;
    }
    /**
        * <p>A request to add a custom domain for tracking open and click events to a configuration
        *             set.</p>
        */
    export interface PutConfigurationSetTrackingOptionsRequest {
            /**
                * <p>The name of the configuration set.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>The domain to use to track open and click events.</p>
                */
            CustomRedirectDomain?: string;
    }
    export namespace PutConfigurationSetTrackingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetTrackingOptionsRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutConfigurationSetTrackingOptionsResponse {
    }
    export namespace PutConfigurationSetTrackingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutConfigurationSetTrackingOptionsResponse) => any;
    }
    /**
        * <p>A request to move a dedicated IP address to a dedicated IP pool.</p>
        */
    export interface PutDedicatedIpInPoolRequest {
            /**
                * <p>The IP address that you want to move to the dedicated IP pool. The value you specify
                *             has to be a dedicated IP address that's associated with your Amazon Web Services account.</p>
                */
            Ip: string | undefined;
            /**
                * <p>The name of the IP pool that you want to add the dedicated IP address to. You have to
                *             specify an IP pool that already exists.</p>
                */
            DestinationPoolName: string | undefined;
    }
    export namespace PutDedicatedIpInPoolRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDedicatedIpInPoolRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutDedicatedIpInPoolResponse {
    }
    export namespace PutDedicatedIpInPoolResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDedicatedIpInPoolResponse) => any;
    }
    /**
        * <p>A request to change the warm-up attributes for a dedicated IP address. This operation
        *             is useful when you want to resume the warm-up process for an existing IP address.</p>
        */
    export interface PutDedicatedIpWarmupAttributesRequest {
            /**
                * <p>The dedicated IP address that you want to update the warm-up attributes for.</p>
                */
            Ip: string | undefined;
            /**
                * <p>The warm-up percentage that you want to associate with the dedicated IP
                *             address.</p>
                */
            WarmupPercentage: number | undefined;
    }
    export namespace PutDedicatedIpWarmupAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDedicatedIpWarmupAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutDedicatedIpWarmupAttributesResponse {
    }
    export namespace PutDedicatedIpWarmupAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDedicatedIpWarmupAttributesResponse) => any;
    }
    /**
        * <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain
        *             access to reputation, deliverability, and other metrics for the domains that you use to
        *             send email using Amazon SES API v2. You also gain the ability to perform predictive inbox placement tests.</p>
        *         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
        *             to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more
        *             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
        */
    export interface PutDeliverabilityDashboardOptionRequest {
            /**
                * <p>Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this
                *             value to <code>true</code>.</p>
                */
            DashboardEnabled: boolean | undefined;
            /**
                * <p>An array of objects, one for each verified domain that you use to send email and
                *             enabled the Deliverability dashboard for.</p>
                */
            SubscribedDomains?: DomainDeliverabilityTrackingOption[];
    }
    export namespace PutDeliverabilityDashboardOptionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDeliverabilityDashboardOptionRequest) => any;
    }
    /**
        * <p>A response that indicates whether the Deliverability dashboard is enabled.</p>
        */
    export interface PutDeliverabilityDashboardOptionResponse {
    }
    export namespace PutDeliverabilityDashboardOptionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDeliverabilityDashboardOptionResponse) => any;
    }
    /**
        * <p>A request to associate a configuration set with an email identity.</p>
        */
    export interface PutEmailIdentityConfigurationSetAttributesRequest {
            /**
                * <p>The email address or domain to associate with a configuration set.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>The configuration set to associate with an email identity.</p>
                */
            ConfigurationSetName?: string;
    }
    export namespace PutEmailIdentityConfigurationSetAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityConfigurationSetAttributesRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface PutEmailIdentityConfigurationSetAttributesResponse {
    }
    export namespace PutEmailIdentityConfigurationSetAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityConfigurationSetAttributesResponse) => any;
    }
    /**
        * <p>A request to enable or disable DKIM signing of email that you send from an email
        *             identity.</p>
        */
    export interface PutEmailIdentityDkimAttributesRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>Sets the DKIM signing configuration for the identity.</p>
                *         <p>When you set this value <code>true</code>, then the messages that are sent from the
                *             identity are signed using DKIM. If you set this value to <code>false</code>, your
                *             messages are sent without DKIM signing.</p>
                */
            SigningEnabled?: boolean;
    }
    export namespace PutEmailIdentityDkimAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityDkimAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutEmailIdentityDkimAttributesResponse {
    }
    export namespace PutEmailIdentityDkimAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityDkimAttributesResponse) => any;
    }
    /**
        * <p>A request to change the DKIM attributes for an email identity.</p>
        */
    export interface PutEmailIdentityDkimSigningAttributesRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>The method to use to configure DKIM for the identity. There are the following possible
                *             values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy
                *                         DKIM</a>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring
                *                     Your Own DKIM (BYODKIM).</p>
                *             </li>
                *          </ul>
                */
            SigningAttributesOrigin: DkimSigningAttributesOrigin | string | undefined;
            /**
                * <p>An object that contains information about the private key and selector that you want
                *             to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or,
                *             configures the key length to be used for
                *             <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
                */
            SigningAttributes?: DkimSigningAttributes;
    }
    export namespace PutEmailIdentityDkimSigningAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityDkimSigningAttributesRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response.</p>
        *         <p>The following data is returned in JSON format by the service.</p>
        */
    export interface PutEmailIdentityDkimSigningAttributesResponse {
            /**
                * <p>The DKIM authentication status of the identity. Amazon SES determines the authentication
                *             status by searching for specific records in the DNS configuration for your domain. If
                *             you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy
                *                 DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME
                *             records in the DNS configuration for your domain.</p>
                *         <p>If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT
                *             record that uses the selector that you specified. The value of the TXT record must be a
                *             public key that's paired with the private key that you specified in the process of
                *             creating the identity.</p>
                *         <p>The status can be one of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>PENDING</code> – The verification process was initiated, but Amazon SES
                *                     hasn't yet detected the DKIM records in the DNS configuration for the
                *                     domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>SUCCESS</code> – The verification process completed
                *                     successfully.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>FAILED</code> – The verification process failed. This typically
                *                     occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the
                *                     domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES
                *                     from determining the DKIM authentication status of the domain.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>NOT_STARTED</code> – The DKIM verification process hasn't been
                *                     initiated for the domain.</p>
                *             </li>
                *          </ul>
                */
            DkimStatus?: DkimStatus | string;
            /**
                * <p>If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to configure DKIM authentication for the domain, then this object
                *             contains a set of unique strings that you use to create a set of CNAME records that you
                *             add to the DNS configuration for your domain. When Amazon SES detects these records in the
                *             DNS configuration for your domain, the DKIM authentication process is complete.</p>
                *         <p>If you configured DKIM authentication for the domain by providing your own
                *             public-private key pair, then this object contains the selector that's associated with
                *             your public key.</p>
                *         <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the
                *             appropriate records in the DNS configuration of the domain for up to 72 hours.</p>
                */
            DkimTokens?: string[];
    }
    export namespace PutEmailIdentityDkimSigningAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityDkimSigningAttributesResponse) => any;
    }
    /**
        * <p>A request to set the attributes that control how bounce and complaint events are
        *             processed.</p>
        */
    export interface PutEmailIdentityFeedbackAttributesRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>Sets the feedback forwarding configuration for the identity.</p>
                *         <p>If the value is <code>true</code>, you receive email notifications when bounce or
                *             complaint events occur. These notifications are sent to the address that you specified
                *             in the <code>Return-Path</code> header of the original email.</p>
                *         <p>You're required to have a method of tracking bounces and complaints. If you haven't
                *             set up another mechanism for receiving bounce or complaint notifications (for example,
                *             by setting up an event destination), you receive an email notification when these events
                *             occur (even if this setting is disabled).</p>
                */
            EmailForwardingEnabled?: boolean;
    }
    export namespace PutEmailIdentityFeedbackAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityFeedbackAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutEmailIdentityFeedbackAttributesResponse {
    }
    export namespace PutEmailIdentityFeedbackAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityFeedbackAttributesResponse) => any;
    }
    /**
        * <p>A request to configure the custom MAIL FROM domain for a verified identity.</p>
        */
    export interface PutEmailIdentityMailFromAttributesRequest {
            /**
                * <p>The verified email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p> The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM
                *             domain must meet the following criteria:</p>
                *         <ul>
                *             <li>
                *                 <p>It has to be a subdomain of the verified identity.</p>
                *             </li>
                *             <li>
                *                 <p>It can't be used to receive email.</p>
                *             </li>
                *             <li>
                *                 <p>It can't be used in a "From" address if the MAIL FROM domain is a destination
                *                     for feedback forwarding emails.</p>
                *             </li>
                *          </ul>
                */
            MailFromDomain?: string;
            /**
                * <p>The action to take if the required MX record isn't found when you send an email. When
                *             you set this value to <code>UseDefaultValue</code>, the mail is sent using
                *                 <i>amazonses.com</i> as the MAIL FROM domain. When you set this value
                *             to <code>RejectMessage</code>, the Amazon SES API v2 returns a
                *                 <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the
                *             email.</p>
                *         <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the
                *                 <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
                *             states.</p>
                */
            BehaviorOnMxFailure?: BehaviorOnMxFailure | string;
    }
    export namespace PutEmailIdentityMailFromAttributesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityMailFromAttributesRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutEmailIdentityMailFromAttributesResponse {
    }
    export namespace PutEmailIdentityMailFromAttributesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailIdentityMailFromAttributesResponse) => any;
    }
    /**
        * <p>A request to add an email destination to the suppression list for your account.</p>
        */
    export interface PutSuppressedDestinationRequest {
            /**
                * <p>The email address that should be added to the suppression list for your
                *             account.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The factors that should cause the email address to be added to the suppression list
                *             for your account.</p>
                */
            Reason: SuppressionListReason | string | undefined;
    }
    export namespace PutSuppressedDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutSuppressedDestinationRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface PutSuppressedDestinationResponse {
    }
    export namespace PutSuppressedDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutSuppressedDestinationResponse) => any;
    }
    /**
        * <p>Represents a request to send email messages to multiple destinations using Amazon SES. For
        *             more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
        *                 Guide</a>.</p>
        */
    export interface SendBulkEmailRequest {
            /**
                * <p>The email address to use as the "From" address for the email. The
                *             address that you specify has to be verified.</p>
                */
            FromEmailAddress?: string;
            /**
                * <p>This parameter is used only for sending authorization. It is the ARN of the identity
                *             that is associated with the sending authorization policy that permits you to use the
                *             email address specified in the <code>FromEmailAddress</code> parameter.</p>
                *         <p>For example, if the owner of example.com (which has ARN
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
                *             authorizes you to use sender@example.com, then you would specify the
                *                 <code>FromEmailAddressIdentityArn</code> to be
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
                *                 <code>FromEmailAddress</code> to be sender@example.com.</p>
                *         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                */
            FromEmailAddressIdentityArn?: string;
            /**
                * <p>The "Reply-to" email addresses for the message. When the recipient replies to the
                *             message, each Reply-to address receives the reply.</p>
                */
            ReplyToAddresses?: string[];
            /**
                * <p>The address that you want bounce and complaint notifications to be sent to.</p>
                */
            FeedbackForwardingEmailAddress?: string;
            /**
                * <p>This parameter is used only for sending authorization. It is the ARN of the identity
                *             that is associated with the sending authorization policy that permits you to use the
                *             email address specified in the <code>FeedbackForwardingEmailAddress</code>
                *             parameter.</p>
                *         <p>For example, if the owner of example.com (which has ARN
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
                *             authorizes you to use feedback@example.com, then you would specify the
                *                 <code>FeedbackForwardingEmailAddressIdentityArn</code> to be
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
                *                 <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>
                *         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                */
            FeedbackForwardingEmailAddressIdentityArn?: string;
            /**
                * <p>A list of tags, in the form of name/value pairs, to apply to an email that you send
                *             using the <code>SendEmail</code> operation. Tags correspond to characteristics of the
                *             email that you define, so that you can publish email sending events.</p>
                */
            DefaultEmailTags?: MessageTag[];
            /**
                * <p>An object that contains the body of the message. You can specify a template
                *             message.</p>
                */
            DefaultContent: BulkEmailContent | undefined;
            /**
                * <p>The list of bulk email entry objects.</p>
                */
            BulkEmailEntries: BulkEmailEntry[] | undefined;
            /**
                * <p>The name of the configuration set to use when sending the email.</p>
                */
            ConfigurationSetName?: string;
    }
    export namespace SendBulkEmailRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendBulkEmailRequest) => any;
    }
    /**
        * <p>The following data is returned in JSON format by the service.</p>
        */
    export interface SendBulkEmailResponse {
            /**
                * <p>One object per intended recipient. Check each response object and retry any messages
                *             with a failure status.</p>
                */
            BulkEmailEntryResults: BulkEmailEntryResult[] | undefined;
    }
    export namespace SendBulkEmailResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendBulkEmailResponse) => any;
    }
    /**
        * <p>Represents a request to send a custom verification email to a specified
        *             recipient.</p>
        */
    export interface SendCustomVerificationEmailRequest {
            /**
                * <p>The email address to verify.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The name of the custom verification email template to use when sending the
                *             verification email.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>Name of a configuration set to use when sending the verification email.</p>
                */
            ConfigurationSetName?: string;
    }
    export namespace SendCustomVerificationEmailRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendCustomVerificationEmailRequest) => any;
    }
    /**
        * <p>The following element is returned by the service.</p>
        */
    export interface SendCustomVerificationEmailResponse {
            /**
                * <p>The unique message identifier returned from the
                *                 <code>SendCustomVerificationEmail</code> operation.</p>
                */
            MessageId?: string;
    }
    export namespace SendCustomVerificationEmailResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendCustomVerificationEmailResponse) => any;
    }
    /**
        * <p>Represents a request to send a single formatted email using Amazon SES. For more
        *             information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html">Amazon SES Developer
        *                 Guide</a>.</p>
        */
    export interface SendEmailRequest {
            /**
                * <p>The email address to use as the "From" address for the email. The
                *             address that you specify has to be verified.
                *             </p>
                */
            FromEmailAddress?: string;
            /**
                * <p>This parameter is used only for sending authorization. It is the ARN of the identity
                *             that is associated with the sending authorization policy that permits you to use the
                *             email address specified in the <code>FromEmailAddress</code> parameter.</p>
                *         <p>For example, if the owner of example.com (which has ARN
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
                *             authorizes you to use sender@example.com, then you would specify the
                *                 <code>FromEmailAddressIdentityArn</code> to be
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
                *                 <code>FromEmailAddress</code> to be sender@example.com.</p>
                *         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                *         <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the
                *             X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message
                *             content.</p>
                */
            FromEmailAddressIdentityArn?: string;
            /**
                * <p>An object that contains the recipients of the email message.</p>
                */
            Destination?: Destination;
            /**
                * <p>The "Reply-to" email addresses for the message. When the recipient replies to the
                *             message, each Reply-to address receives the reply.</p>
                */
            ReplyToAddresses?: string[];
            /**
                * <p>The address that you want bounce and complaint notifications to be sent to.</p>
                */
            FeedbackForwardingEmailAddress?: string;
            /**
                * <p>This parameter is used only for sending authorization. It is the ARN of the identity
                *             that is associated with the sending authorization policy that permits you to use the
                *             email address specified in the <code>FeedbackForwardingEmailAddress</code>
                *             parameter.</p>
                *         <p>For example, if the owner of example.com (which has ARN
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
                *             authorizes you to use feedback@example.com, then you would specify the
                *                 <code>FeedbackForwardingEmailAddressIdentityArn</code> to be
                *             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
                *                 <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>
                *         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
                *                 Guide</a>.</p>
                */
            FeedbackForwardingEmailAddressIdentityArn?: string;
            /**
                * <p>An object that contains the body of the message. You can send either a Simple message
                *             Raw message or a template Message.</p>
                */
            Content: EmailContent | undefined;
            /**
                * <p>A list of tags, in the form of name/value pairs, to apply to an email that you send
                *             using the <code>SendEmail</code> operation. Tags correspond to characteristics of the
                *             email that you define, so that you can publish email sending events. </p>
                */
            EmailTags?: MessageTag[];
            /**
                * <p>The name of the configuration set to use when sending the email.</p>
                */
            ConfigurationSetName?: string;
            /**
                * <p>An object used to specify a list or topic to which an email belongs, which will be
                *             used when a contact chooses to unsubscribe.</p>
                */
            ListManagementOptions?: ListManagementOptions;
    }
    export namespace SendEmailRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendEmailRequest) => any;
    }
    /**
        * <p>A unique message ID that you receive when an email is accepted for sending.</p>
        */
    export interface SendEmailResponse {
            /**
                * <p>A unique identifier for the message that is generated when the message is
                *             accepted.</p>
                *         <note>
                *             <p>It's possible for Amazon SES to accept a message without sending it. This can happen
                *                 when the message that you're trying to send has an attachment contains a virus, or
                *                 when you send a templated email that contains invalid personalization content, for
                *                 example.</p>
                *         </note>
                */
            MessageId?: string;
    }
    export namespace SendEmailResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendEmailResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that you want to add one or more tags
                *             to.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>A list of the tags that you want to add to the resource. A tag consists of a required
                *             tag key (<code>Key</code>) and an associated tag value (<code>Value</code>). The maximum
                *             length of a tag key is 128 characters. The maximum length of a tag value is 256
                *             characters.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    /**
        * <p>>Represents a request to create a preview of the MIME content of an email when
        *             provided with a template and a set of replacement data.</p>
        */
    export interface TestRenderEmailTemplateRequest {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>A list of replacement values to apply to the template. This parameter is a JSON
                *             object, typically consisting of key-value pairs in which the keys correspond to
                *             replacement tags in the email template.</p>
                */
            TemplateData: string | undefined;
    }
    export namespace TestRenderEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestRenderEmailTemplateRequest) => any;
    }
    /**
        * <p>The following element is returned by the service.</p>
        */
    export interface TestRenderEmailTemplateResponse {
            /**
                * <p>The complete MIME message rendered by applying the data in the
                *                 <code>TemplateData</code> parameter to the template specified in the TemplateName
                *             parameter.</p>
                */
            RenderedTemplate: string | undefined;
    }
    export namespace TestRenderEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestRenderEmailTemplateResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource that you want to remove one or more
                *             tags from.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The tags (tag keys) that you want to remove from the resource. When you specify a tag
                *             key, the action removes both that key and its associated tag value.</p>
                *         <p>To remove more than one tag from the resource, append the <code>TagKeys</code>
                *             parameter and argument for each additional tag to remove, separated by an ampersand. For
                *             example:
                *                 <code>/v2/email/tags?ResourceArn=ResourceArn&TagKeys=Key1&TagKeys=Key2</code>
                *         </p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    /**
        * <p>A request to change the settings for an event destination for a configuration
        *             set.</p>
        */
    export interface UpdateConfigurationSetEventDestinationRequest {
            /**
                * <p>The name of the configuration set that contains the event destination to
                *             modify.</p>
                */
            ConfigurationSetName: string | undefined;
            /**
                * <p>The name of the event destination.</p>
                */
            EventDestinationName: string | undefined;
            /**
                * <p>An object that defines the event destination.</p>
                */
            EventDestination: EventDestinationDefinition | undefined;
    }
    export namespace UpdateConfigurationSetEventDestinationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateConfigurationSetEventDestinationRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface UpdateConfigurationSetEventDestinationResponse {
    }
    export namespace UpdateConfigurationSetEventDestinationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateConfigurationSetEventDestinationResponse) => any;
    }
    export interface UpdateContactRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>The contact's email addres.</p>
                */
            EmailAddress: string | undefined;
            /**
                * <p>The contact's preference for being opted-in to or opted-out of a topic.</p>
                */
            TopicPreferences?: TopicPreference[];
            /**
                * <p>A boolean value status noting if the contact is unsubscribed from all contact list
                *             topics.</p>
                */
            UnsubscribeAll?: boolean;
            /**
                * <p>The attribute data attached to a contact.</p>
                */
            AttributesData?: string;
    }
    export namespace UpdateContactRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactRequest) => any;
    }
    export interface UpdateContactResponse {
    }
    export namespace UpdateContactResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactResponse) => any;
    }
    export interface UpdateContactListRequest {
            /**
                * <p>The name of the contact list.</p>
                */
            ContactListName: string | undefined;
            /**
                * <p>An interest group, theme, or label within a list. A contact list can have multiple
                *             topics.</p>
                */
            Topics?: Topic[];
            /**
                * <p>A description of what the contact list is about.</p>
                */
            Description?: string;
    }
    export namespace UpdateContactListRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactListRequest) => any;
    }
    export interface UpdateContactListResponse {
    }
    export namespace UpdateContactListResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateContactListResponse) => any;
    }
    /**
        * <p>Represents a request to update an existing custom verification email template.</p>
        */
    export interface UpdateCustomVerificationEmailTemplateRequest {
            /**
                * <p>The name of the custom verification email template that you want to update.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>The email address that the custom verification email is sent from.</p>
                */
            FromEmailAddress: string | undefined;
            /**
                * <p>The subject line of the custom verification email.</p>
                */
            TemplateSubject: string | undefined;
            /**
                * <p>The content of the custom verification email. The total size of the email must be less
                *             than 10 MB. The message body may contain HTML, with some limitations. For more
                *             information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html#custom-verification-emails-faq">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES
                *                 Developer Guide</i>.</p>
                */
            TemplateContent: string | undefined;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is successfully verified.</p>
                */
            SuccessRedirectionURL: string | undefined;
            /**
                * <p>The URL that the recipient of the verification email is sent to if his or her address
                *             is not successfully verified.</p>
                */
            FailureRedirectionURL: string | undefined;
    }
    export namespace UpdateCustomVerificationEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCustomVerificationEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface UpdateCustomVerificationEmailTemplateResponse {
    }
    export namespace UpdateCustomVerificationEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateCustomVerificationEmailTemplateResponse) => any;
    }
    /**
        * <p>Represents a request to update a sending authorization policy for an identity. Sending
        *             authorization is an Amazon SES feature that enables you to authorize other senders to use
        *             your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.</p>
        */
    export interface UpdateEmailIdentityPolicyRequest {
            /**
                * <p>The email identity.</p>
                */
            EmailIdentity: string | undefined;
            /**
                * <p>The name of the policy.</p>
                *
                *         <p>The policy name cannot exceed 64 characters and can only include alphanumeric
                *             characters, dashes, and underscores.</p>
                */
            PolicyName: string | undefined;
            /**
                * <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p>
                *         <p> For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer
                *                 Guide</a>.</p>
                */
            Policy: string | undefined;
    }
    export namespace UpdateEmailIdentityPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEmailIdentityPolicyRequest) => any;
    }
    /**
        * <p>An HTTP 200 response if the request succeeds, or an error message if the request
        *             fails.</p>
        */
    export interface UpdateEmailIdentityPolicyResponse {
    }
    export namespace UpdateEmailIdentityPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEmailIdentityPolicyResponse) => any;
    }
    /**
        * <p>Represents a request to update an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES
        *                 Developer Guide</a>.</p>
        */
    export interface UpdateEmailTemplateRequest {
            /**
                * <p>The name of the template.</p>
                */
            TemplateName: string | undefined;
            /**
                * <p>The content of the email template, composed of a subject line, an HTML part, and a
                *             text-only part.</p>
                */
            TemplateContent: EmailTemplateContent | undefined;
    }
    export namespace UpdateEmailTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEmailTemplateRequest) => any;
    }
    /**
        * <p>If the action is successful, the service sends back an HTTP 200 response with an empty
        *             HTTP body.</p>
        */
    export interface UpdateEmailTemplateResponse {
    }
    export namespace UpdateEmailTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEmailTemplateResponse) => any;
    }
}

declare module '@aws-sdk/client-sesv2/node_modules/@aws-sdk/client-sesv2/dist-types/models/SESv2ServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from SESv2 service.
        */
    export class SESv2ServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

