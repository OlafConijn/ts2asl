// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-identitystore' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { DescribeGroupCommandInput, DescribeGroupCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeGroupCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeUserCommand";
    import { ListGroupsCommandInput, ListGroupsCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListGroupsCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListUsersCommand";
    import { IdentitystoreClient } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient";
    /**
        * <p>The AWS Single Sign-On (SSO) Identity Store service provides a single place to retrieve all of your
        *          identities (users and groups). For more information about AWS, see the <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">AWS Single Sign-On User
        *             Guide</a>.</p>
        */
    export class Identitystore extends IdentitystoreClient {
            /**
                * <p>Retrieves the group metadata and attributes from <code>GroupId</code> in an identity store.</p>
                */
            describeGroup(args: DescribeGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeGroupCommandOutput>;
            describeGroup(args: DescribeGroupCommandInput, cb: (err: any, data?: DescribeGroupCommandOutput) => void): void;
            describeGroup(args: DescribeGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeGroupCommandOutput) => void): void;
            /**
                * <p>Retrieves the user metadata and attributes from <code>UserId</code> in an identity store.</p>
                */
            describeUser(args: DescribeUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserCommandOutput>;
            describeUser(args: DescribeUserCommandInput, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            describeUser(args: DescribeUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            /**
                * <p>Lists the attribute name and value of the group that you specified in the search. We only support <code>DisplayName</code> as a valid filter
                *          attribute path currently, and filter is required. This API returns minimum attributes, including <code>GroupId</code> and group
                *             <code>DisplayName</code> in the response.</p>
                */
            listGroups(args: ListGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListGroupsCommandOutput>;
            listGroups(args: ListGroupsCommandInput, cb: (err: any, data?: ListGroupsCommandOutput) => void): void;
            listGroups(args: ListGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGroupsCommandOutput) => void): void;
            /**
                * <p>Lists the attribute name and value of the user that you specified in the search. We only support <code>UserName</code> as a valid filter attribute
                *          path currently, and filter is required. This API returns minimum attributes, including <code>UserId</code> and <code>UserName</code> in the
                *          response.</p>
                */
            listUsers(args: ListUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListUsersCommandOutput>;
            listUsers(args: ListUsersCommandInput, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            listUsers(args: ListUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IdentitystoreClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient";
    import { DescribeGroupRequest, DescribeGroupResponse } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/models_0";
    export interface DescribeGroupCommandInput extends DescribeGroupRequest {
    }
    export interface DescribeGroupCommandOutput extends DescribeGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the group metadata and attributes from <code>GroupId</code> in an identity store.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IdentitystoreClient, DescribeGroupCommand } from "@aws-sdk/client-identitystore"; // ES Modules import
        * // const { IdentitystoreClient, DescribeGroupCommand } = require("@aws-sdk/client-identitystore"); // CommonJS import
        * const client = new IdentitystoreClient(config);
        * const command = new DescribeGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeGroupCommandInput} for command's `input` shape.
        * @see {@link DescribeGroupCommandOutput} for command's `response` shape.
        * @see {@link IdentitystoreClientResolvedConfig | config} for IdentitystoreClient's `config` shape.
        *
        */
    export class DescribeGroupCommand extends $Command<DescribeGroupCommandInput, DescribeGroupCommandOutput, IdentitystoreClientResolvedConfig> {
            readonly input: DescribeGroupCommandInput;
            constructor(input: DescribeGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IdentitystoreClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeGroupCommandInput, DescribeGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IdentitystoreClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient";
    import { DescribeUserRequest, DescribeUserResponse } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/models_0";
    export interface DescribeUserCommandInput extends DescribeUserRequest {
    }
    export interface DescribeUserCommandOutput extends DescribeUserResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the user metadata and attributes from <code>UserId</code> in an identity store.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IdentitystoreClient, DescribeUserCommand } from "@aws-sdk/client-identitystore"; // ES Modules import
        * // const { IdentitystoreClient, DescribeUserCommand } = require("@aws-sdk/client-identitystore"); // CommonJS import
        * const client = new IdentitystoreClient(config);
        * const command = new DescribeUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeUserCommandInput} for command's `input` shape.
        * @see {@link DescribeUserCommandOutput} for command's `response` shape.
        * @see {@link IdentitystoreClientResolvedConfig | config} for IdentitystoreClient's `config` shape.
        *
        */
    export class DescribeUserCommand extends $Command<DescribeUserCommandInput, DescribeUserCommandOutput, IdentitystoreClientResolvedConfig> {
            readonly input: DescribeUserCommandInput;
            constructor(input: DescribeUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IdentitystoreClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeUserCommandInput, DescribeUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IdentitystoreClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient";
    import { ListGroupsRequest, ListGroupsResponse } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/models_0";
    export interface ListGroupsCommandInput extends ListGroupsRequest {
    }
    export interface ListGroupsCommandOutput extends ListGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the attribute name and value of the group that you specified in the search. We only support <code>DisplayName</code> as a valid filter
        *          attribute path currently, and filter is required. This API returns minimum attributes, including <code>GroupId</code> and group
        *             <code>DisplayName</code> in the response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IdentitystoreClient, ListGroupsCommand } from "@aws-sdk/client-identitystore"; // ES Modules import
        * // const { IdentitystoreClient, ListGroupsCommand } = require("@aws-sdk/client-identitystore"); // CommonJS import
        * const client = new IdentitystoreClient(config);
        * const command = new ListGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGroupsCommandInput} for command's `input` shape.
        * @see {@link ListGroupsCommandOutput} for command's `response` shape.
        * @see {@link IdentitystoreClientResolvedConfig | config} for IdentitystoreClient's `config` shape.
        *
        */
    export class ListGroupsCommand extends $Command<ListGroupsCommandInput, ListGroupsCommandOutput, IdentitystoreClientResolvedConfig> {
            readonly input: ListGroupsCommandInput;
            constructor(input: ListGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IdentitystoreClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGroupsCommandInput, ListGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IdentitystoreClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient";
    import { ListUsersRequest, ListUsersResponse } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/models_0";
    export interface ListUsersCommandInput extends ListUsersRequest {
    }
    export interface ListUsersCommandOutput extends ListUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the attribute name and value of the user that you specified in the search. We only support <code>UserName</code> as a valid filter attribute
        *          path currently, and filter is required. This API returns minimum attributes, including <code>UserId</code> and <code>UserName</code> in the
        *          response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IdentitystoreClient, ListUsersCommand } from "@aws-sdk/client-identitystore"; // ES Modules import
        * // const { IdentitystoreClient, ListUsersCommand } = require("@aws-sdk/client-identitystore"); // CommonJS import
        * const client = new IdentitystoreClient(config);
        * const command = new ListUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUsersCommandInput} for command's `input` shape.
        * @see {@link ListUsersCommandOutput} for command's `response` shape.
        * @see {@link IdentitystoreClientResolvedConfig | config} for IdentitystoreClient's `config` shape.
        *
        */
    export class ListUsersCommand extends $Command<ListUsersCommandInput, ListUsersCommandOutput, IdentitystoreClientResolvedConfig> {
            readonly input: ListUsersCommandInput;
            constructor(input: ListUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IdentitystoreClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUsersCommandInput, ListUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/IdentitystoreClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DescribeGroupCommandInput, DescribeGroupCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeGroupCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/DescribeUserCommand";
    import { ListGroupsCommandInput, ListGroupsCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListGroupsCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/commands/ListUsersCommand";
    export type ServiceInputTypes = DescribeGroupCommandInput | DescribeUserCommandInput | ListGroupsCommandInput | ListUsersCommandInput;
    export type ServiceOutputTypes = DescribeGroupCommandOutput | DescribeUserCommandOutput | ListGroupsCommandOutput | ListUsersCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IdentitystoreClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IdentitystoreClient class constructor that set the region, credentials and other options.
        */
    export interface IdentitystoreClientConfig extends IdentitystoreClientConfigType {
    }
    type IdentitystoreClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IdentitystoreClient class. This is resolved and normalized from the {@link IdentitystoreClientConfig | constructor configuration interface}.
        */
    export interface IdentitystoreClientResolvedConfig extends IdentitystoreClientResolvedConfigType {
    }
    /**
        * <p>The AWS Single Sign-On (SSO) Identity Store service provides a single place to retrieve all of your
        *          identities (users and groups). For more information about AWS, see the <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">AWS Single Sign-On User
        *             Guide</a>.</p>
        */
    export class IdentitystoreClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IdentitystoreClientResolvedConfig> {
            /**
                * The resolved configuration of IdentitystoreClient class. This is resolved and normalized from the {@link IdentitystoreClientConfig | constructor configuration interface}.
                */
            readonly config: IdentitystoreClientResolvedConfig;
            constructor(configuration: IdentitystoreClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IdentitystoreServiceException as __BaseException } from "@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/IdentitystoreServiceException";
    /**
        * <p>You do not have sufficient access to perform this action.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The identifier for each request. This value is a globally unique ID that is generated by the Identity Store service for each sent request, and is then returned inside the exception if the request fails.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export interface DescribeGroupRequest {
            /**
                * <p>The globally unique identifier for the identity store, such as
                *          <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and
                *             <code>1234567890</code> is a randomly generated string that contains number and lower
                *          case letters. This value is generated at the time that a new identity store is
                *          created.</p>
                */
            IdentityStoreId: string | undefined;
            /**
                * <p>The identifier for a group in the identity store.</p>
                */
            GroupId: string | undefined;
    }
    export namespace DescribeGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGroupRequest) => any;
    }
    export interface DescribeGroupResponse {
            /**
                * <p>The identifier for a group in the identity store.</p>
                */
            GroupId: string | undefined;
            /**
                * <p>Contains the group’s display name value. The length limit is 1,024 characters. This
                *          value can consist of letters, accented characters, symbols, numbers, punctuation, tab, new
                *          line, carriage return, space, and nonbreaking space in this attribute. The characters
                *             <code><>;:%</code> are excluded. This value is specified at the time that the
                *          group is created and stored as an attribute of the group object in the identity
                *          store.</p>
                */
            DisplayName: string | undefined;
    }
    export namespace DescribeGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGroupResponse) => any;
    }
    /**
        * <p>The request processing has failed because of an unknown error, exception or failure with an internal server.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            Message?: string;
            /**
                * <p>The identifier for each request. This value is a globally unique ID that is generated by the Identity Store service for each sent request, and is then returned inside the exception if the request fails.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    export enum ResourceType {
            GROUP = "GROUP",
            IDENTITY_STORE = "IDENTITY_STORE",
            USER = "USER"
    }
    /**
        * <p>Indicates that a requested resource is not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * <p>The type of resource in the Identity Store service, which is an enum object. Valid values include USER, GROUP, and IDENTITY_STORE.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>The identifier for a resource in the identity store, which can be used as <code>UserId</code> or <code>GroupId</code>. The format for <code>ResourceId</code> is either <code>UUID</code> or <code>1234567890-UUID</code>, where <code>UUID</code> is a randomly generated value for each resource when it is created and <code>1234567890</code> represents the <code>IdentityStoreId</code> string value. In the case that the identity store is migrated from a legacy SSO identity store, the <code>ResourceId</code> for that identity store will be in the format of <code>UUID</code>. Otherwise, it will be in the <code>1234567890-UUID</code> format.</p>
                */
            ResourceId?: string;
            Message?: string;
            /**
                * <p>The identifier for each request. This value is a globally unique ID that is generated by the Identity Store service for each sent request, and is then returned inside the exception if the request fails.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>Indicates that the principal has crossed the throttling limits of the API operations.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The identifier for each request. This value is a globally unique ID that is generated by the Identity Store service for each sent request, and is then returned inside the exception if the request fails.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>The request failed because it contains a syntax error.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The identifier for each request. This value is a globally unique ID that is generated by the Identity Store service for each sent request, and is then returned inside the exception if the request fails.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export interface DescribeUserRequest {
            /**
                * <p>The globally unique identifier for the identity store, such as
                *          <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and
                *             <code>1234567890</code> is a randomly generated string that contains number and lower
                *          case letters. This value is generated at the time that a new identity store is
                *          created.</p>
                */
            IdentityStoreId: string | undefined;
            /**
                * <p>The identifier for a user in the identity store.</p>
                */
            UserId: string | undefined;
    }
    export namespace DescribeUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserRequest) => any;
    }
    export interface DescribeUserResponse {
            /**
                * <p>Contains the user’s user name value. The length limit is 128 characters. This value can
                *          consist of letters, accented characters, symbols, numbers, and punctuation. The characters
                *             <code><>;:%</code> are excluded. This value is specified at the time the user is
                *          created and stored as an attribute of the user object in the identity store.</p>
                */
            UserName: string | undefined;
            /**
                * <p>The identifier for a user in the identity store.</p>
                */
            UserId: string | undefined;
    }
    export namespace DescribeUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserResponse) => any;
    }
    /**
        * <p>A query filter used by <code>ListUsers</code> and <code>ListGroup</code>. This filter object provides the attribute name and attribute value to
        *          search users or groups.</p>
        */
    export interface Filter {
            /**
                * <p>The attribute path that is used to specify which attribute name to search. Length limit
                *          is 255 characters. For example, <code>UserName</code> is a valid attribute path for the
                *             <code>ListUsers</code> API, and <code>DisplayName</code> is a valid attribute path for
                *          the <code>ListGroups</code> API.</p>
                */
            AttributePath: string | undefined;
            /**
                * <p>Represents the data for an attribute. Each attribute value is described as a name-value pair. </p>
                */
            AttributeValue: string | undefined;
    }
    export namespace Filter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Filter) => any;
    }
    export interface ListGroupsRequest {
            /**
                * <p>The globally unique identifier for the identity store, such as
                *          <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and
                *             <code>1234567890</code> is a randomly generated string that contains number and lower
                *          case letters. This value is generated at the time that a new identity store is
                *          created.</p>
                */
            IdentityStoreId: string | undefined;
            /**
                * <p>The maximum number of results to be returned per request. This parameter is used in the
                *             <code>ListUsers</code> and <code>ListGroups</code> request to specify how many results
                *          to return in one page. The length limit is 50 characters.</p>
                */
            MaxResults?: number;
            /**
                * <p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API
                *          operations. This value is generated by the identity store service. It is returned in the
                *          API response if the total results are more than the size of one page. This token is also
                *          returned when it is used in the API request to search for the next page.</p>
                */
            NextToken?: string;
            /**
                * <p>A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code> and <code>ListGroups</code> request. </p>
                */
            Filters?: Filter[];
    }
    export namespace ListGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupsRequest) => any;
    }
    /**
        * <p>A group object, which contains a specified group’s metadata and attributes.</p>
        */
    export interface Group {
            /**
                * <p>The identifier for a group in the identity store.</p>
                */
            GroupId: string | undefined;
            /**
                * <p>Contains the group’s display name value. The length limit is 1,024 characters. This
                *          value can consist of letters, accented characters, symbols, numbers, punctuation, tab, new
                *          line, carriage return, space, and nonbreaking space in this attribute. The characters
                *             <code><>;:%</code> are excluded. This value is specified at the time the group
                *          is created and stored as an attribute of the group object in the identity store.</p>
                */
            DisplayName: string | undefined;
    }
    export namespace Group {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Group) => any;
    }
    export interface ListGroupsResponse {
            /**
                * <p>A list of <code>Group</code> objects in the identity store.</p>
                */
            Groups: Group[] | undefined;
            /**
                * <p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API
                *          operations. This value is generated by the identity store service. It is returned in the
                *          API response if the total results are more than the size of one page. This token is also
                *          returned when it1 is used in the API request to search for the next page.</p>
                */
            NextToken?: string;
    }
    export namespace ListGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupsResponse) => any;
    }
    export interface ListUsersRequest {
            /**
                * <p>The globally unique identifier for the identity store, such as
                *          <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and
                *             <code>1234567890</code> is a randomly generated string that contains number and lower
                *          case letters. This value is generated at the time that a new identity store is
                *          created.</p>
                */
            IdentityStoreId: string | undefined;
            /**
                * <p>The maximum number of results to be returned per request. This parameter is used in the
                *             <code>ListUsers</code> and <code>ListGroups</code> request to specify how many results
                *          to return in one page. The length limit is 50 characters.</p>
                */
            MaxResults?: number;
            /**
                * <p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API
                *          operations. This value is generated by the identity store service. It is returned in the
                *          API response if the total results are more than the size of one page. This token is also
                *          returned when it is used in the API request to search for the next page.</p>
                */
            NextToken?: string;
            /**
                * <p>A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code> and <code>ListGroups</code> request. </p>
                */
            Filters?: Filter[];
    }
    export namespace ListUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersRequest) => any;
    }
    /**
        * <p>A user object, which contains a specified user’s metadata and attributes.</p>
        */
    export interface User {
            /**
                * <p>Contains the user’s user name value. The length limit is 128 characters. This value can
                *          consist of letters, accented characters, symbols, numbers, and punctuation. The characters
                *             <code><>;:%</code> are excluded. This value is specified at the time the user is
                *          created and stored as an attribute of the user object in the identity store.</p>
                */
            UserName: string | undefined;
            /**
                * <p>The identifier for a user in the identity store.</p>
                */
            UserId: string | undefined;
    }
    export namespace User {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: User) => any;
    }
    export interface ListUsersResponse {
            /**
                * <p>A list of <code>User</code> objects in the identity store.</p>
                */
            Users: User[] | undefined;
            /**
                * <p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API
                *          operations. This value is generated by the identity store service. It is returned in the
                *          API response if the total results are more than the size of one page. This token is also
                *          returned when it is used in the API request to search for the next page.</p>
                */
            NextToken?: string;
    }
    export namespace ListUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersResponse) => any;
    }
}

declare module '@aws-sdk/client-identitystore/node_modules/@aws-sdk/client-identitystore/dist-types/models/IdentitystoreServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Identitystore service.
        */
    export class IdentitystoreServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

