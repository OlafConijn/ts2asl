// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-ram' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptResourceShareInvitationCommandInput, AcceptResourceShareInvitationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AcceptResourceShareInvitationCommand";
    import { AssociateResourceShareCommandInput, AssociateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceShareCommand";
    import { AssociateResourceSharePermissionCommandInput, AssociateResourceSharePermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceSharePermissionCommand";
    import { CreateResourceShareCommandInput, CreateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/CreateResourceShareCommand";
    import { DeleteResourceShareCommandInput, DeleteResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DeleteResourceShareCommand";
    import { DisassociateResourceShareCommandInput, DisassociateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceShareCommand";
    import { DisassociateResourceSharePermissionCommandInput, DisassociateResourceSharePermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceSharePermissionCommand";
    import { EnableSharingWithAwsOrganizationCommandInput, EnableSharingWithAwsOrganizationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/EnableSharingWithAwsOrganizationCommand";
    import { GetPermissionCommandInput, GetPermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetPermissionCommand";
    import { GetResourcePoliciesCommandInput, GetResourcePoliciesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourcePoliciesCommand";
    import { GetResourceShareAssociationsCommandInput, GetResourceShareAssociationsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareAssociationsCommand";
    import { GetResourceShareInvitationsCommandInput, GetResourceShareInvitationsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareInvitationsCommand";
    import { GetResourceSharesCommandInput, GetResourceSharesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceSharesCommand";
    import { ListPendingInvitationResourcesCommandInput, ListPendingInvitationResourcesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPendingInvitationResourcesCommand";
    import { ListPermissionsCommandInput, ListPermissionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionsCommand";
    import { ListPermissionVersionsCommandInput, ListPermissionVersionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionVersionsCommand";
    import { ListPrincipalsCommandInput, ListPrincipalsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPrincipalsCommand";
    import { ListResourcesCommandInput, ListResourcesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourcesCommand";
    import { ListResourceSharePermissionsCommandInput, ListResourceSharePermissionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceSharePermissionsCommand";
    import { ListResourceTypesCommandInput, ListResourceTypesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceTypesCommand";
    import { PromoteResourceShareCreatedFromPolicyCommandInput, PromoteResourceShareCreatedFromPolicyCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/PromoteResourceShareCreatedFromPolicyCommand";
    import { RejectResourceShareInvitationCommandInput, RejectResourceShareInvitationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/RejectResourceShareInvitationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UntagResourceCommand";
    import { UpdateResourceShareCommandInput, UpdateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UpdateResourceShareCommand";
    import { RAMClient } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    /**
        * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides
        *             descriptions and syntax for each of the actions and data types in RAM. RAM is a
        *             service that helps you securely share your Amazon Web Services resources across Amazon Web Services accounts. If you
        *             have multiple Amazon Web Services accounts, you can use RAM to share those resources with other
        *             accounts. If you use Organizations to manage your accounts, then you share your resources
        *             with your organization or organizational units (OUs). For supported resource types, you
        *             can also share resources with individual Identity and Access Management (IAM) roles an users. </p>
        *
        *         <p>To learn more about RAM, see the following resources:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <a href="http://aws.amazon.com/ram">Resource Access Manager product page</a>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/ram/latest/userguide/">Resource Access Manager User
        *                         Guide</a>
        *                </p>
        *             </li>
        *          </ul>
        */
    export class RAM extends RAMClient {
            /**
                * <p>Accepts an invitation to a resource share from another Amazon Web Services account. After you accept the
                *             invitation, the resources included in the resource share are available to interact with in the
                *             relevant Amazon Web Services Management Consoles and tools.</p>
                */
            acceptResourceShareInvitation(args: AcceptResourceShareInvitationCommandInput, options?: __HttpHandlerOptions): Promise<AcceptResourceShareInvitationCommandOutput>;
            acceptResourceShareInvitation(args: AcceptResourceShareInvitationCommandInput, cb: (err: any, data?: AcceptResourceShareInvitationCommandOutput) => void): void;
            acceptResourceShareInvitation(args: AcceptResourceShareInvitationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptResourceShareInvitationCommandOutput) => void): void;
            /**
                * <p>Adds the specified list of principals and list of resources to a resource share. Principals that
                *             already have access to this resource share immediately receive access to the added resources.
                *             Newly added principals immediately receive access to the resources shared in this resource share. </p>
                */
            associateResourceShare(args: AssociateResourceShareCommandInput, options?: __HttpHandlerOptions): Promise<AssociateResourceShareCommandOutput>;
            associateResourceShare(args: AssociateResourceShareCommandInput, cb: (err: any, data?: AssociateResourceShareCommandOutput) => void): void;
            associateResourceShare(args: AssociateResourceShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateResourceShareCommandOutput) => void): void;
            /**
                * <p>Adds or replaces the RAM permission for a resource type included in a resource share. You can
                *             have exactly one permission associated with each resource type in the resource share. You can add
                *             a new RAM permission only if there are currently no resources of that resource type
                *             currently in the resource share.</p>
                */
            associateResourceSharePermission(args: AssociateResourceSharePermissionCommandInput, options?: __HttpHandlerOptions): Promise<AssociateResourceSharePermissionCommandOutput>;
            associateResourceSharePermission(args: AssociateResourceSharePermissionCommandInput, cb: (err: any, data?: AssociateResourceSharePermissionCommandOutput) => void): void;
            associateResourceSharePermission(args: AssociateResourceSharePermissionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateResourceSharePermissionCommandOutput) => void): void;
            /**
                * <p>Creates a resource share. You can provide a list of the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> for the resources that you
                *             want to share, a list of principals you want to share the resources with, and the
                *             permissions to grant those principals.</p>
                *         <note>
                *             <p>Sharing a resource makes it available for use by principals outside of the
                *                 Amazon Web Services account that created the resource. Sharing doesn't change any permissions or
                *                 quotas that apply to the resource in the account that created it.</p>
                *         </note>
                */
            createResourceShare(args: CreateResourceShareCommandInput, options?: __HttpHandlerOptions): Promise<CreateResourceShareCommandOutput>;
            createResourceShare(args: CreateResourceShareCommandInput, cb: (err: any, data?: CreateResourceShareCommandOutput) => void): void;
            createResourceShare(args: CreateResourceShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateResourceShareCommandOutput) => void): void;
            /**
                * <p>Deletes the specified resource share. This doesn't delete any of the resources that were
                *             associated with the resource share; it only stops the sharing of those resources outside of the
                *             Amazon Web Services account that created them.</p>
                */
            deleteResourceShare(args: DeleteResourceShareCommandInput, options?: __HttpHandlerOptions): Promise<DeleteResourceShareCommandOutput>;
            deleteResourceShare(args: DeleteResourceShareCommandInput, cb: (err: any, data?: DeleteResourceShareCommandOutput) => void): void;
            deleteResourceShare(args: DeleteResourceShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteResourceShareCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified principals or resources from the specified resource share.</p>
                */
            disassociateResourceShare(args: DisassociateResourceShareCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateResourceShareCommandOutput>;
            disassociateResourceShare(args: DisassociateResourceShareCommandInput, cb: (err: any, data?: DisassociateResourceShareCommandOutput) => void): void;
            disassociateResourceShare(args: DisassociateResourceShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateResourceShareCommandOutput) => void): void;
            /**
                * <p>Disassociates an RAM permission from a resource share. Permission changes take effect
                *             immediately. You can remove a RAM permission from a resource share only if there are currently
                *             no resources of the relevant resource type currently attached to the resource share.</p>
                */
            disassociateResourceSharePermission(args: DisassociateResourceSharePermissionCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateResourceSharePermissionCommandOutput>;
            disassociateResourceSharePermission(args: DisassociateResourceSharePermissionCommandInput, cb: (err: any, data?: DisassociateResourceSharePermissionCommandOutput) => void): void;
            disassociateResourceSharePermission(args: DisassociateResourceSharePermissionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateResourceSharePermissionCommandOutput) => void): void;
            /**
                * <p>Enables resource sharing within your organization in Organizations. Calling this operation
                *             enables RAM to retrieve information about the organization and its structure. This
                *             lets you share resources with all of the accounts in an organization by specifying the
                *             organization's ID, or all of the accounts in an organizational unit (OU) by specifying
                *             the OU's ID. Until you enable sharing within the organization, you can specify only
                *             individual Amazon Web Services accounts, or for supported resource types, IAM users and
                *             roles.</p>
                *         <p>You must call this operation from an IAM user or role in the organization's
                *             management account.</p>
                */
            enableSharingWithAwsOrganization(args: EnableSharingWithAwsOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<EnableSharingWithAwsOrganizationCommandOutput>;
            enableSharingWithAwsOrganization(args: EnableSharingWithAwsOrganizationCommandInput, cb: (err: any, data?: EnableSharingWithAwsOrganizationCommandOutput) => void): void;
            enableSharingWithAwsOrganization(args: EnableSharingWithAwsOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableSharingWithAwsOrganizationCommandOutput) => void): void;
            /**
                * <p>Gets the contents of an RAM permission in JSON format.</p>
                */
            getPermission(args: GetPermissionCommandInput, options?: __HttpHandlerOptions): Promise<GetPermissionCommandOutput>;
            getPermission(args: GetPermissionCommandInput, cb: (err: any, data?: GetPermissionCommandOutput) => void): void;
            getPermission(args: GetPermissionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPermissionCommandOutput) => void): void;
            /**
                * <p>Retrieves the resource policies for the specified resources that you own and have
                *             shared.</p>
                */
            getResourcePolicies(args: GetResourcePoliciesCommandInput, options?: __HttpHandlerOptions): Promise<GetResourcePoliciesCommandOutput>;
            getResourcePolicies(args: GetResourcePoliciesCommandInput, cb: (err: any, data?: GetResourcePoliciesCommandOutput) => void): void;
            getResourcePolicies(args: GetResourcePoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourcePoliciesCommandOutput) => void): void;
            /**
                * <p>Retrieves the resource and principal associations for resource shares that you own.</p>
                */
            getResourceShareAssociations(args: GetResourceShareAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<GetResourceShareAssociationsCommandOutput>;
            getResourceShareAssociations(args: GetResourceShareAssociationsCommandInput, cb: (err: any, data?: GetResourceShareAssociationsCommandOutput) => void): void;
            getResourceShareAssociations(args: GetResourceShareAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourceShareAssociationsCommandOutput) => void): void;
            /**
                * <p>Retrieves details about invitations that you have received for resource shares.</p>
                */
            getResourceShareInvitations(args: GetResourceShareInvitationsCommandInput, options?: __HttpHandlerOptions): Promise<GetResourceShareInvitationsCommandOutput>;
            getResourceShareInvitations(args: GetResourceShareInvitationsCommandInput, cb: (err: any, data?: GetResourceShareInvitationsCommandOutput) => void): void;
            getResourceShareInvitations(args: GetResourceShareInvitationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourceShareInvitationsCommandOutput) => void): void;
            /**
                * <p>Retrieves details about the resource shares that you own or that are shared with you.</p>
                */
            getResourceShares(args: GetResourceSharesCommandInput, options?: __HttpHandlerOptions): Promise<GetResourceSharesCommandOutput>;
            getResourceShares(args: GetResourceSharesCommandInput, cb: (err: any, data?: GetResourceSharesCommandOutput) => void): void;
            getResourceShares(args: GetResourceSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetResourceSharesCommandOutput) => void): void;
            /**
                * <p>Lists the resources in a resource share that is shared with you but for which the invitation is
                *             still <code>PENDING</code>. That means that you haven't accepted or rejected the
                *             invitation and the invitation hasn't expired.</p>
                */
            listPendingInvitationResources(args: ListPendingInvitationResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListPendingInvitationResourcesCommandOutput>;
            listPendingInvitationResources(args: ListPendingInvitationResourcesCommandInput, cb: (err: any, data?: ListPendingInvitationResourcesCommandOutput) => void): void;
            listPendingInvitationResources(args: ListPendingInvitationResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPendingInvitationResourcesCommandOutput) => void): void;
            /**
                * <p>Retrieves a list of available RAM permissions that you can use for the supported
                *             resource types. </p>
                */
            listPermissions(args: ListPermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ListPermissionsCommandOutput>;
            listPermissions(args: ListPermissionsCommandInput, cb: (err: any, data?: ListPermissionsCommandOutput) => void): void;
            listPermissions(args: ListPermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPermissionsCommandOutput) => void): void;
            /**
                * <p>Lists the available versions of the specified RAM permission.</p>
                */
            listPermissionVersions(args: ListPermissionVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListPermissionVersionsCommandOutput>;
            listPermissionVersions(args: ListPermissionVersionsCommandInput, cb: (err: any, data?: ListPermissionVersionsCommandOutput) => void): void;
            listPermissionVersions(args: ListPermissionVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPermissionVersionsCommandOutput) => void): void;
            /**
                * <p>Lists the principals that you are sharing resources with or that are sharing resources
                *             with you.</p>
                */
            listPrincipals(args: ListPrincipalsCommandInput, options?: __HttpHandlerOptions): Promise<ListPrincipalsCommandOutput>;
            listPrincipals(args: ListPrincipalsCommandInput, cb: (err: any, data?: ListPrincipalsCommandOutput) => void): void;
            listPrincipals(args: ListPrincipalsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPrincipalsCommandOutput) => void): void;
            /**
                * <p>Lists the resources that you added to a resource share or the resources that are shared with
                *             you.</p>
                */
            listResources(args: ListResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListResourcesCommandOutput>;
            listResources(args: ListResourcesCommandInput, cb: (err: any, data?: ListResourcesCommandOutput) => void): void;
            listResources(args: ListResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourcesCommandOutput) => void): void;
            /**
                * <p>Lists the RAM permissions that are associated with a resource share.</p>
                */
            listResourceSharePermissions(args: ListResourceSharePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ListResourceSharePermissionsCommandOutput>;
            listResourceSharePermissions(args: ListResourceSharePermissionsCommandInput, cb: (err: any, data?: ListResourceSharePermissionsCommandOutput) => void): void;
            listResourceSharePermissions(args: ListResourceSharePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourceSharePermissionsCommandOutput) => void): void;
            /**
                * <p>Lists the resource types that can be shared by RAM.</p>
                */
            listResourceTypes(args: ListResourceTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListResourceTypesCommandOutput>;
            listResourceTypes(args: ListResourceTypesCommandInput, cb: (err: any, data?: ListResourceTypesCommandOutput) => void): void;
            listResourceTypes(args: ListResourceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourceTypesCommandOutput) => void): void;
            /**
                * <p>When you attach a resource-based permission policy to a resource, it automatically
                *             creates a resource share. However, resource shares created this way are visible only to the resource share owner, and
                *             the resource share can't be modified in RAM.</p>
                *         <p>You can use this operation to promote the resource share to a full RAM resource share. When you promote
                *             a resource share, you can then manage the resource share in RAM and it becomes visible to all of the
                *             principals you shared it with.</p>
                */
            promoteResourceShareCreatedFromPolicy(args: PromoteResourceShareCreatedFromPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PromoteResourceShareCreatedFromPolicyCommandOutput>;
            promoteResourceShareCreatedFromPolicy(args: PromoteResourceShareCreatedFromPolicyCommandInput, cb: (err: any, data?: PromoteResourceShareCreatedFromPolicyCommandOutput) => void): void;
            promoteResourceShareCreatedFromPolicy(args: PromoteResourceShareCreatedFromPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PromoteResourceShareCreatedFromPolicyCommandOutput) => void): void;
            /**
                * <p>Rejects an invitation to a resource share from another Amazon Web Services account.</p>
                */
            rejectResourceShareInvitation(args: RejectResourceShareInvitationCommandInput, options?: __HttpHandlerOptions): Promise<RejectResourceShareInvitationCommandOutput>;
            rejectResourceShareInvitation(args: RejectResourceShareInvitationCommandInput, cb: (err: any, data?: RejectResourceShareInvitationCommandOutput) => void): void;
            rejectResourceShareInvitation(args: RejectResourceShareInvitationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectResourceShareInvitationCommandOutput) => void): void;
            /**
                * <p>Adds the specified tag keys and values to the specified resource share. The tags are attached
                *             only to the resource share, not to the resources that are in the resource share.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes the specified tag key and value pairs from the specified resource share.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Modifies some of the properties of the specified resource share.</p>
                */
            updateResourceShare(args: UpdateResourceShareCommandInput, options?: __HttpHandlerOptions): Promise<UpdateResourceShareCommandOutput>;
            updateResourceShare(args: UpdateResourceShareCommandInput, cb: (err: any, data?: UpdateResourceShareCommandOutput) => void): void;
            updateResourceShare(args: UpdateResourceShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateResourceShareCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AcceptResourceShareInvitationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AcceptResourceShareInvitationRequest, AcceptResourceShareInvitationResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface AcceptResourceShareInvitationCommandInput extends AcceptResourceShareInvitationRequest {
    }
    export interface AcceptResourceShareInvitationCommandOutput extends AcceptResourceShareInvitationResponse, __MetadataBearer {
    }
    /**
        * <p>Accepts an invitation to a resource share from another Amazon Web Services account. After you accept the
        *             invitation, the resources included in the resource share are available to interact with in the
        *             relevant Amazon Web Services Management Consoles and tools.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, AcceptResourceShareInvitationCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, AcceptResourceShareInvitationCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new AcceptResourceShareInvitationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptResourceShareInvitationCommandInput} for command's `input` shape.
        * @see {@link AcceptResourceShareInvitationCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class AcceptResourceShareInvitationCommand extends $Command<AcceptResourceShareInvitationCommandInput, AcceptResourceShareInvitationCommandOutput, RAMClientResolvedConfig> {
            readonly input: AcceptResourceShareInvitationCommandInput;
            constructor(input: AcceptResourceShareInvitationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptResourceShareInvitationCommandInput, AcceptResourceShareInvitationCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateResourceShareRequest, AssociateResourceShareResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface AssociateResourceShareCommandInput extends AssociateResourceShareRequest {
    }
    export interface AssociateResourceShareCommandOutput extends AssociateResourceShareResponse, __MetadataBearer {
    }
    /**
        * <p>Adds the specified list of principals and list of resources to a resource share. Principals that
        *             already have access to this resource share immediately receive access to the added resources.
        *             Newly added principals immediately receive access to the resources shared in this resource share. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, AssociateResourceShareCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, AssociateResourceShareCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new AssociateResourceShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateResourceShareCommandInput} for command's `input` shape.
        * @see {@link AssociateResourceShareCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class AssociateResourceShareCommand extends $Command<AssociateResourceShareCommandInput, AssociateResourceShareCommandOutput, RAMClientResolvedConfig> {
            readonly input: AssociateResourceShareCommandInput;
            constructor(input: AssociateResourceShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateResourceShareCommandInput, AssociateResourceShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceSharePermissionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateResourceSharePermissionRequest, AssociateResourceSharePermissionResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface AssociateResourceSharePermissionCommandInput extends AssociateResourceSharePermissionRequest {
    }
    export interface AssociateResourceSharePermissionCommandOutput extends AssociateResourceSharePermissionResponse, __MetadataBearer {
    }
    /**
        * <p>Adds or replaces the RAM permission for a resource type included in a resource share. You can
        *             have exactly one permission associated with each resource type in the resource share. You can add
        *             a new RAM permission only if there are currently no resources of that resource type
        *             currently in the resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, AssociateResourceSharePermissionCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, AssociateResourceSharePermissionCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new AssociateResourceSharePermissionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateResourceSharePermissionCommandInput} for command's `input` shape.
        * @see {@link AssociateResourceSharePermissionCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class AssociateResourceSharePermissionCommand extends $Command<AssociateResourceSharePermissionCommandInput, AssociateResourceSharePermissionCommandOutput, RAMClientResolvedConfig> {
            readonly input: AssociateResourceSharePermissionCommandInput;
            constructor(input: AssociateResourceSharePermissionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateResourceSharePermissionCommandInput, AssociateResourceSharePermissionCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/CreateResourceShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateResourceShareRequest, CreateResourceShareResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface CreateResourceShareCommandInput extends CreateResourceShareRequest {
    }
    export interface CreateResourceShareCommandOutput extends CreateResourceShareResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a resource share. You can provide a list of the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> for the resources that you
        *             want to share, a list of principals you want to share the resources with, and the
        *             permissions to grant those principals.</p>
        *         <note>
        *             <p>Sharing a resource makes it available for use by principals outside of the
        *                 Amazon Web Services account that created the resource. Sharing doesn't change any permissions or
        *                 quotas that apply to the resource in the account that created it.</p>
        *         </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, CreateResourceShareCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, CreateResourceShareCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new CreateResourceShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateResourceShareCommandInput} for command's `input` shape.
        * @see {@link CreateResourceShareCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class CreateResourceShareCommand extends $Command<CreateResourceShareCommandInput, CreateResourceShareCommandOutput, RAMClientResolvedConfig> {
            readonly input: CreateResourceShareCommandInput;
            constructor(input: CreateResourceShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateResourceShareCommandInput, CreateResourceShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DeleteResourceShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteResourceShareRequest, DeleteResourceShareResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface DeleteResourceShareCommandInput extends DeleteResourceShareRequest {
    }
    export interface DeleteResourceShareCommandOutput extends DeleteResourceShareResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified resource share. This doesn't delete any of the resources that were
        *             associated with the resource share; it only stops the sharing of those resources outside of the
        *             Amazon Web Services account that created them.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, DeleteResourceShareCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, DeleteResourceShareCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new DeleteResourceShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteResourceShareCommandInput} for command's `input` shape.
        * @see {@link DeleteResourceShareCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class DeleteResourceShareCommand extends $Command<DeleteResourceShareCommandInput, DeleteResourceShareCommandOutput, RAMClientResolvedConfig> {
            readonly input: DeleteResourceShareCommandInput;
            constructor(input: DeleteResourceShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteResourceShareCommandInput, DeleteResourceShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateResourceShareRequest, DisassociateResourceShareResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface DisassociateResourceShareCommandInput extends DisassociateResourceShareRequest {
    }
    export interface DisassociateResourceShareCommandOutput extends DisassociateResourceShareResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified principals or resources from the specified resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, DisassociateResourceShareCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, DisassociateResourceShareCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new DisassociateResourceShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateResourceShareCommandInput} for command's `input` shape.
        * @see {@link DisassociateResourceShareCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class DisassociateResourceShareCommand extends $Command<DisassociateResourceShareCommandInput, DisassociateResourceShareCommandOutput, RAMClientResolvedConfig> {
            readonly input: DisassociateResourceShareCommandInput;
            constructor(input: DisassociateResourceShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateResourceShareCommandInput, DisassociateResourceShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceSharePermissionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateResourceSharePermissionRequest, DisassociateResourceSharePermissionResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface DisassociateResourceSharePermissionCommandInput extends DisassociateResourceSharePermissionRequest {
    }
    export interface DisassociateResourceSharePermissionCommandOutput extends DisassociateResourceSharePermissionResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates an RAM permission from a resource share. Permission changes take effect
        *             immediately. You can remove a RAM permission from a resource share only if there are currently
        *             no resources of the relevant resource type currently attached to the resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, DisassociateResourceSharePermissionCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, DisassociateResourceSharePermissionCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new DisassociateResourceSharePermissionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateResourceSharePermissionCommandInput} for command's `input` shape.
        * @see {@link DisassociateResourceSharePermissionCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class DisassociateResourceSharePermissionCommand extends $Command<DisassociateResourceSharePermissionCommandInput, DisassociateResourceSharePermissionCommandOutput, RAMClientResolvedConfig> {
            readonly input: DisassociateResourceSharePermissionCommandInput;
            constructor(input: DisassociateResourceSharePermissionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateResourceSharePermissionCommandInput, DisassociateResourceSharePermissionCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/EnableSharingWithAwsOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { EnableSharingWithAwsOrganizationRequest, EnableSharingWithAwsOrganizationResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface EnableSharingWithAwsOrganizationCommandInput extends EnableSharingWithAwsOrganizationRequest {
    }
    export interface EnableSharingWithAwsOrganizationCommandOutput extends EnableSharingWithAwsOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Enables resource sharing within your organization in Organizations. Calling this operation
        *             enables RAM to retrieve information about the organization and its structure. This
        *             lets you share resources with all of the accounts in an organization by specifying the
        *             organization's ID, or all of the accounts in an organizational unit (OU) by specifying
        *             the OU's ID. Until you enable sharing within the organization, you can specify only
        *             individual Amazon Web Services accounts, or for supported resource types, IAM users and
        *             roles.</p>
        *         <p>You must call this operation from an IAM user or role in the organization's
        *             management account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, EnableSharingWithAwsOrganizationCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, EnableSharingWithAwsOrganizationCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new EnableSharingWithAwsOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableSharingWithAwsOrganizationCommandInput} for command's `input` shape.
        * @see {@link EnableSharingWithAwsOrganizationCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class EnableSharingWithAwsOrganizationCommand extends $Command<EnableSharingWithAwsOrganizationCommandInput, EnableSharingWithAwsOrganizationCommandOutput, RAMClientResolvedConfig> {
            readonly input: EnableSharingWithAwsOrganizationCommandInput;
            constructor(input: EnableSharingWithAwsOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableSharingWithAwsOrganizationCommandInput, EnableSharingWithAwsOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetPermissionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetPermissionRequest, GetPermissionResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface GetPermissionCommandInput extends GetPermissionRequest {
    }
    export interface GetPermissionCommandOutput extends GetPermissionResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the contents of an RAM permission in JSON format.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, GetPermissionCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, GetPermissionCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new GetPermissionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPermissionCommandInput} for command's `input` shape.
        * @see {@link GetPermissionCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class GetPermissionCommand extends $Command<GetPermissionCommandInput, GetPermissionCommandOutput, RAMClientResolvedConfig> {
            readonly input: GetPermissionCommandInput;
            constructor(input: GetPermissionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPermissionCommandInput, GetPermissionCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourcePoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetResourcePoliciesRequest, GetResourcePoliciesResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface GetResourcePoliciesCommandInput extends GetResourcePoliciesRequest {
    }
    export interface GetResourcePoliciesCommandOutput extends GetResourcePoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the resource policies for the specified resources that you own and have
        *             shared.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, GetResourcePoliciesCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, GetResourcePoliciesCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new GetResourcePoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetResourcePoliciesCommandInput} for command's `input` shape.
        * @see {@link GetResourcePoliciesCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class GetResourcePoliciesCommand extends $Command<GetResourcePoliciesCommandInput, GetResourcePoliciesCommandOutput, RAMClientResolvedConfig> {
            readonly input: GetResourcePoliciesCommandInput;
            constructor(input: GetResourcePoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetResourcePoliciesCommandInput, GetResourcePoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareAssociationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetResourceShareAssociationsRequest, GetResourceShareAssociationsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface GetResourceShareAssociationsCommandInput extends GetResourceShareAssociationsRequest {
    }
    export interface GetResourceShareAssociationsCommandOutput extends GetResourceShareAssociationsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the resource and principal associations for resource shares that you own.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, GetResourceShareAssociationsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, GetResourceShareAssociationsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new GetResourceShareAssociationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetResourceShareAssociationsCommandInput} for command's `input` shape.
        * @see {@link GetResourceShareAssociationsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class GetResourceShareAssociationsCommand extends $Command<GetResourceShareAssociationsCommandInput, GetResourceShareAssociationsCommandOutput, RAMClientResolvedConfig> {
            readonly input: GetResourceShareAssociationsCommandInput;
            constructor(input: GetResourceShareAssociationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetResourceShareAssociationsCommandInput, GetResourceShareAssociationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareInvitationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetResourceShareInvitationsRequest, GetResourceShareInvitationsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface GetResourceShareInvitationsCommandInput extends GetResourceShareInvitationsRequest {
    }
    export interface GetResourceShareInvitationsCommandOutput extends GetResourceShareInvitationsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details about invitations that you have received for resource shares.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, GetResourceShareInvitationsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, GetResourceShareInvitationsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new GetResourceShareInvitationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetResourceShareInvitationsCommandInput} for command's `input` shape.
        * @see {@link GetResourceShareInvitationsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class GetResourceShareInvitationsCommand extends $Command<GetResourceShareInvitationsCommandInput, GetResourceShareInvitationsCommandOutput, RAMClientResolvedConfig> {
            readonly input: GetResourceShareInvitationsCommandInput;
            constructor(input: GetResourceShareInvitationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetResourceShareInvitationsCommandInput, GetResourceShareInvitationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceSharesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetResourceSharesRequest, GetResourceSharesResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface GetResourceSharesCommandInput extends GetResourceSharesRequest {
    }
    export interface GetResourceSharesCommandOutput extends GetResourceSharesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details about the resource shares that you own or that are shared with you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, GetResourceSharesCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, GetResourceSharesCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new GetResourceSharesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetResourceSharesCommandInput} for command's `input` shape.
        * @see {@link GetResourceSharesCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class GetResourceSharesCommand extends $Command<GetResourceSharesCommandInput, GetResourceSharesCommandOutput, RAMClientResolvedConfig> {
            readonly input: GetResourceSharesCommandInput;
            constructor(input: GetResourceSharesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetResourceSharesCommandInput, GetResourceSharesCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPendingInvitationResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPendingInvitationResourcesRequest, ListPendingInvitationResourcesResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListPendingInvitationResourcesCommandInput extends ListPendingInvitationResourcesRequest {
    }
    export interface ListPendingInvitationResourcesCommandOutput extends ListPendingInvitationResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the resources in a resource share that is shared with you but for which the invitation is
        *             still <code>PENDING</code>. That means that you haven't accepted or rejected the
        *             invitation and the invitation hasn't expired.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListPendingInvitationResourcesCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListPendingInvitationResourcesCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListPendingInvitationResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPendingInvitationResourcesCommandInput} for command's `input` shape.
        * @see {@link ListPendingInvitationResourcesCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListPendingInvitationResourcesCommand extends $Command<ListPendingInvitationResourcesCommandInput, ListPendingInvitationResourcesCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListPendingInvitationResourcesCommandInput;
            constructor(input: ListPendingInvitationResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPendingInvitationResourcesCommandInput, ListPendingInvitationResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPermissionsRequest, ListPermissionsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListPermissionsCommandInput extends ListPermissionsRequest {
    }
    export interface ListPermissionsCommandOutput extends ListPermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a list of available RAM permissions that you can use for the supported
        *             resource types. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListPermissionsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListPermissionsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListPermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPermissionsCommandInput} for command's `input` shape.
        * @see {@link ListPermissionsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListPermissionsCommand extends $Command<ListPermissionsCommandInput, ListPermissionsCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListPermissionsCommandInput;
            constructor(input: ListPermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPermissionsCommandInput, ListPermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPermissionVersionsRequest, ListPermissionVersionsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListPermissionVersionsCommandInput extends ListPermissionVersionsRequest {
    }
    export interface ListPermissionVersionsCommandOutput extends ListPermissionVersionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the available versions of the specified RAM permission.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListPermissionVersionsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListPermissionVersionsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListPermissionVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPermissionVersionsCommandInput} for command's `input` shape.
        * @see {@link ListPermissionVersionsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListPermissionVersionsCommand extends $Command<ListPermissionVersionsCommandInput, ListPermissionVersionsCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListPermissionVersionsCommandInput;
            constructor(input: ListPermissionVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPermissionVersionsCommandInput, ListPermissionVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPrincipalsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPrincipalsRequest, ListPrincipalsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListPrincipalsCommandInput extends ListPrincipalsRequest {
    }
    export interface ListPrincipalsCommandOutput extends ListPrincipalsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the principals that you are sharing resources with or that are sharing resources
        *             with you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListPrincipalsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListPrincipalsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListPrincipalsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPrincipalsCommandInput} for command's `input` shape.
        * @see {@link ListPrincipalsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListPrincipalsCommand extends $Command<ListPrincipalsCommandInput, ListPrincipalsCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListPrincipalsCommandInput;
            constructor(input: ListPrincipalsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPrincipalsCommandInput, ListPrincipalsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourcesRequest, ListResourcesResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListResourcesCommandInput extends ListResourcesRequest {
    }
    export interface ListResourcesCommandOutput extends ListResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the resources that you added to a resource share or the resources that are shared with
        *             you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListResourcesCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListResourcesCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourcesCommandInput} for command's `input` shape.
        * @see {@link ListResourcesCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListResourcesCommand extends $Command<ListResourcesCommandInput, ListResourcesCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListResourcesCommandInput;
            constructor(input: ListResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourcesCommandInput, ListResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceSharePermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourceSharePermissionsRequest, ListResourceSharePermissionsResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListResourceSharePermissionsCommandInput extends ListResourceSharePermissionsRequest {
    }
    export interface ListResourceSharePermissionsCommandOutput extends ListResourceSharePermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the RAM permissions that are associated with a resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListResourceSharePermissionsCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListResourceSharePermissionsCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListResourceSharePermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourceSharePermissionsCommandInput} for command's `input` shape.
        * @see {@link ListResourceSharePermissionsCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListResourceSharePermissionsCommand extends $Command<ListResourceSharePermissionsCommandInput, ListResourceSharePermissionsCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListResourceSharePermissionsCommandInput;
            constructor(input: ListResourceSharePermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourceSharePermissionsCommandInput, ListResourceSharePermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceTypesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourceTypesRequest, ListResourceTypesResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface ListResourceTypesCommandInput extends ListResourceTypesRequest {
    }
    export interface ListResourceTypesCommandOutput extends ListResourceTypesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the resource types that can be shared by RAM.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, ListResourceTypesCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, ListResourceTypesCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new ListResourceTypesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourceTypesCommandInput} for command's `input` shape.
        * @see {@link ListResourceTypesCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class ListResourceTypesCommand extends $Command<ListResourceTypesCommandInput, ListResourceTypesCommandOutput, RAMClientResolvedConfig> {
            readonly input: ListResourceTypesCommandInput;
            constructor(input: ListResourceTypesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourceTypesCommandInput, ListResourceTypesCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/PromoteResourceShareCreatedFromPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PromoteResourceShareCreatedFromPolicyRequest, PromoteResourceShareCreatedFromPolicyResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface PromoteResourceShareCreatedFromPolicyCommandInput extends PromoteResourceShareCreatedFromPolicyRequest {
    }
    export interface PromoteResourceShareCreatedFromPolicyCommandOutput extends PromoteResourceShareCreatedFromPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>When you attach a resource-based permission policy to a resource, it automatically
        *             creates a resource share. However, resource shares created this way are visible only to the resource share owner, and
        *             the resource share can't be modified in RAM.</p>
        *         <p>You can use this operation to promote the resource share to a full RAM resource share. When you promote
        *             a resource share, you can then manage the resource share in RAM and it becomes visible to all of the
        *             principals you shared it with.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, PromoteResourceShareCreatedFromPolicyCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, PromoteResourceShareCreatedFromPolicyCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new PromoteResourceShareCreatedFromPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PromoteResourceShareCreatedFromPolicyCommandInput} for command's `input` shape.
        * @see {@link PromoteResourceShareCreatedFromPolicyCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class PromoteResourceShareCreatedFromPolicyCommand extends $Command<PromoteResourceShareCreatedFromPolicyCommandInput, PromoteResourceShareCreatedFromPolicyCommandOutput, RAMClientResolvedConfig> {
            readonly input: PromoteResourceShareCreatedFromPolicyCommandInput;
            constructor(input: PromoteResourceShareCreatedFromPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PromoteResourceShareCreatedFromPolicyCommandInput, PromoteResourceShareCreatedFromPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/RejectResourceShareInvitationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RejectResourceShareInvitationRequest, RejectResourceShareInvitationResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface RejectResourceShareInvitationCommandInput extends RejectResourceShareInvitationRequest {
    }
    export interface RejectResourceShareInvitationCommandOutput extends RejectResourceShareInvitationResponse, __MetadataBearer {
    }
    /**
        * <p>Rejects an invitation to a resource share from another Amazon Web Services account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, RejectResourceShareInvitationCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, RejectResourceShareInvitationCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new RejectResourceShareInvitationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RejectResourceShareInvitationCommandInput} for command's `input` shape.
        * @see {@link RejectResourceShareInvitationCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class RejectResourceShareInvitationCommand extends $Command<RejectResourceShareInvitationCommandInput, RejectResourceShareInvitationCommandOutput, RAMClientResolvedConfig> {
            readonly input: RejectResourceShareInvitationCommandInput;
            constructor(input: RejectResourceShareInvitationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectResourceShareInvitationCommandInput, RejectResourceShareInvitationCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Adds the specified tag keys and values to the specified resource share. The tags are attached
        *             only to the resource share, not to the resources that are in the resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, TagResourceCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, TagResourceCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, RAMClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the specified tag key and value pairs from the specified resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, UntagResourceCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, UntagResourceCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, RAMClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UpdateResourceShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateResourceShareRequest, UpdateResourceShareResponse } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0";
    import { RAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient";
    export interface UpdateResourceShareCommandInput extends UpdateResourceShareRequest {
    }
    export interface UpdateResourceShareCommandOutput extends UpdateResourceShareResponse, __MetadataBearer {
    }
    /**
        * <p>Modifies some of the properties of the specified resource share.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RAMClient, UpdateResourceShareCommand } from "@aws-sdk/client-ram"; // ES Modules import
        * // const { RAMClient, UpdateResourceShareCommand } = require("@aws-sdk/client-ram"); // CommonJS import
        * const client = new RAMClient(config);
        * const command = new UpdateResourceShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateResourceShareCommandInput} for command's `input` shape.
        * @see {@link UpdateResourceShareCommandOutput} for command's `response` shape.
        * @see {@link RAMClientResolvedConfig | config} for RAMClient's `config` shape.
        *
        */
    export class UpdateResourceShareCommand extends $Command<UpdateResourceShareCommandInput, UpdateResourceShareCommandOutput, RAMClientResolvedConfig> {
            readonly input: UpdateResourceShareCommandInput;
            constructor(input: UpdateResourceShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateResourceShareCommandInput, UpdateResourceShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/RAMClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptResourceShareInvitationCommandInput, AcceptResourceShareInvitationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AcceptResourceShareInvitationCommand";
    import { AssociateResourceShareCommandInput, AssociateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceShareCommand";
    import { AssociateResourceSharePermissionCommandInput, AssociateResourceSharePermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/AssociateResourceSharePermissionCommand";
    import { CreateResourceShareCommandInput, CreateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/CreateResourceShareCommand";
    import { DeleteResourceShareCommandInput, DeleteResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DeleteResourceShareCommand";
    import { DisassociateResourceShareCommandInput, DisassociateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceShareCommand";
    import { DisassociateResourceSharePermissionCommandInput, DisassociateResourceSharePermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/DisassociateResourceSharePermissionCommand";
    import { EnableSharingWithAwsOrganizationCommandInput, EnableSharingWithAwsOrganizationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/EnableSharingWithAwsOrganizationCommand";
    import { GetPermissionCommandInput, GetPermissionCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetPermissionCommand";
    import { GetResourcePoliciesCommandInput, GetResourcePoliciesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourcePoliciesCommand";
    import { GetResourceShareAssociationsCommandInput, GetResourceShareAssociationsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareAssociationsCommand";
    import { GetResourceShareInvitationsCommandInput, GetResourceShareInvitationsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceShareInvitationsCommand";
    import { GetResourceSharesCommandInput, GetResourceSharesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/GetResourceSharesCommand";
    import { ListPendingInvitationResourcesCommandInput, ListPendingInvitationResourcesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPendingInvitationResourcesCommand";
    import { ListPermissionsCommandInput, ListPermissionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionsCommand";
    import { ListPermissionVersionsCommandInput, ListPermissionVersionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPermissionVersionsCommand";
    import { ListPrincipalsCommandInput, ListPrincipalsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListPrincipalsCommand";
    import { ListResourcesCommandInput, ListResourcesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourcesCommand";
    import { ListResourceSharePermissionsCommandInput, ListResourceSharePermissionsCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceSharePermissionsCommand";
    import { ListResourceTypesCommandInput, ListResourceTypesCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/ListResourceTypesCommand";
    import { PromoteResourceShareCreatedFromPolicyCommandInput, PromoteResourceShareCreatedFromPolicyCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/PromoteResourceShareCreatedFromPolicyCommand";
    import { RejectResourceShareInvitationCommandInput, RejectResourceShareInvitationCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/RejectResourceShareInvitationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UntagResourceCommand";
    import { UpdateResourceShareCommandInput, UpdateResourceShareCommandOutput } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/commands/UpdateResourceShareCommand";
    export type ServiceInputTypes = AcceptResourceShareInvitationCommandInput | AssociateResourceShareCommandInput | AssociateResourceSharePermissionCommandInput | CreateResourceShareCommandInput | DeleteResourceShareCommandInput | DisassociateResourceShareCommandInput | DisassociateResourceSharePermissionCommandInput | EnableSharingWithAwsOrganizationCommandInput | GetPermissionCommandInput | GetResourcePoliciesCommandInput | GetResourceShareAssociationsCommandInput | GetResourceShareInvitationsCommandInput | GetResourceSharesCommandInput | ListPendingInvitationResourcesCommandInput | ListPermissionVersionsCommandInput | ListPermissionsCommandInput | ListPrincipalsCommandInput | ListResourceSharePermissionsCommandInput | ListResourceTypesCommandInput | ListResourcesCommandInput | PromoteResourceShareCreatedFromPolicyCommandInput | RejectResourceShareInvitationCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateResourceShareCommandInput;
    export type ServiceOutputTypes = AcceptResourceShareInvitationCommandOutput | AssociateResourceShareCommandOutput | AssociateResourceSharePermissionCommandOutput | CreateResourceShareCommandOutput | DeleteResourceShareCommandOutput | DisassociateResourceShareCommandOutput | DisassociateResourceSharePermissionCommandOutput | EnableSharingWithAwsOrganizationCommandOutput | GetPermissionCommandOutput | GetResourcePoliciesCommandOutput | GetResourceShareAssociationsCommandOutput | GetResourceShareInvitationsCommandOutput | GetResourceSharesCommandOutput | ListPendingInvitationResourcesCommandOutput | ListPermissionVersionsCommandOutput | ListPermissionsCommandOutput | ListPrincipalsCommandOutput | ListResourceSharePermissionsCommandOutput | ListResourceTypesCommandOutput | ListResourcesCommandOutput | PromoteResourceShareCreatedFromPolicyCommandOutput | RejectResourceShareInvitationCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateResourceShareCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type RAMClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of RAMClient class constructor that set the region, credentials and other options.
        */
    export interface RAMClientConfig extends RAMClientConfigType {
    }
    type RAMClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of RAMClient class. This is resolved and normalized from the {@link RAMClientConfig | constructor configuration interface}.
        */
    export interface RAMClientResolvedConfig extends RAMClientResolvedConfigType {
    }
    /**
        * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides
        *             descriptions and syntax for each of the actions and data types in RAM. RAM is a
        *             service that helps you securely share your Amazon Web Services resources across Amazon Web Services accounts. If you
        *             have multiple Amazon Web Services accounts, you can use RAM to share those resources with other
        *             accounts. If you use Organizations to manage your accounts, then you share your resources
        *             with your organization or organizational units (OUs). For supported resource types, you
        *             can also share resources with individual Identity and Access Management (IAM) roles an users. </p>
        *
        *         <p>To learn more about RAM, see the following resources:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                     <a href="http://aws.amazon.com/ram">Resource Access Manager product page</a>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/ram/latest/userguide/">Resource Access Manager User
        *                         Guide</a>
        *                </p>
        *             </li>
        *          </ul>
        */
    export class RAMClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, RAMClientResolvedConfig> {
            /**
                * The resolved configuration of RAMClient class. This is resolved and normalized from the {@link RAMClientConfig | constructor configuration interface}.
                */
            readonly config: RAMClientResolvedConfig;
            constructor(configuration: RAMClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { RAMServiceException as __BaseException } from "@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/RAMServiceException";
    export interface AcceptResourceShareInvitationRequest {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the invitation that you want to accept.</p>
                */
            resourceShareInvitationArn: string | undefined;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace AcceptResourceShareInvitationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptResourceShareInvitationRequest) => any;
    }
    export type ResourceShareAssociationType = "PRINCIPAL" | "RESOURCE";
    export type ResourceShareAssociationStatus = "ASSOCIATED" | "ASSOCIATING" | "DISASSOCIATED" | "DISASSOCIATING" | "FAILED";
    /**
        * <p>Describes an association with a resource share and either a principal or a resource.</p>
        */
    export interface ResourceShareAssociation {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share.</p>
                */
            resourceShareArn?: string;
            /**
                * <p>The name of the resource share.</p>
                */
            resourceShareName?: string;
            /**
                * <p>The associated entity. This can be either of the following:</p>
                *         <ul>
                *             <li>
                *                 <p>For a resource association, this is the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource.</p>
                *             </li>
                *             <li>
                *                 <p>For principal associations, this is one of the following:</p>
                *                 <ul>
                *                   <li>
                *                         <p>The ID of an Amazon Web Services account</p>
                *                     </li>
                *                   <li>
                *                         <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an organization in Organizations</p>
                *                     </li>
                *                   <li>
                *                         <p>The ARN of an organizational unit (OU) in Organizations</p>
                *                     </li>
                *                   <li>
                *                         <p>The ARN of an IAM role</p>
                *                     </li>
                *                   <li>
                *                         <p>The ARN of an IAM user</p>
                *                     </li>
                *                </ul>
                *             </li>
                *          </ul>
                */
            associatedEntity?: string;
            /**
                * <p>The type of entity included in this association.</p>
                */
            associationType?: ResourceShareAssociationType | string;
            /**
                * <p>The current status of the association.</p>
                */
            status?: ResourceShareAssociationStatus | string;
            /**
                * <p>A message about the status of the association.</p>
                */
            statusMessage?: string;
            /**
                * <p>The date and time when the association was created.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date and time when the association was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Indicates whether the principal belongs to the same organization in Organizations as the
                *             Amazon Web Services account that owns the resource share.</p>
                */
            external?: boolean;
    }
    export namespace ResourceShareAssociation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceShareAssociation) => any;
    }
    export type ResourceShareInvitationStatus = "ACCEPTED" | "EXPIRED" | "PENDING" | "REJECTED";
    /**
        * <p>Describes an invitation for an Amazon Web Services account to join a resource share.</p>
        */
    export interface ResourceShareInvitation {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the invitation.</p>
                */
            resourceShareInvitationArn?: string;
            /**
                * <p>The name of the resource share.</p>
                */
            resourceShareName?: string;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share</p>
                */
            resourceShareArn?: string;
            /**
                * <p>The ID of the Amazon Web Services account that sent the invitation.</p>
                */
            senderAccountId?: string;
            /**
                * <p>The ID of the Amazon Web Services account that received the invitation.</p>
                */
            receiverAccountId?: string;
            /**
                * <p>The date and time when the invitation was sent.</p>
                */
            invitationTimestamp?: Date;
            /**
                * <p>The current status of the invitation.</p>
                */
            status?: ResourceShareInvitationStatus | string;
            /**
                * @deprecated
                *
                * <p>To view the resources associated with a pending resource share invitation, use <a>ListPendingInvitationResources</a>.</p>
                */
            resourceShareAssociations?: ResourceShareAssociation[];
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the IAM user or role that received the invitation.</p>
                */
            receiverArn?: string;
    }
    export namespace ResourceShareInvitation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceShareInvitation) => any;
    }
    export interface AcceptResourceShareInvitationResponse {
            /**
                * <p>An object that contains information about the specified invitation.</p>
                */
            resourceShareInvitation?: ResourceShareInvitation;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace AcceptResourceShareInvitationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptResourceShareInvitationResponse) => any;
    }
    /**
        * <p>The client token input parameter was matched one used with a previous call to the
        *             operation, but at least one of the other input parameters is different from the previous
        *             call.</p>
        */
    export class IdempotentParameterMismatchException extends __BaseException {
            readonly name: "IdempotentParameterMismatchException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<IdempotentParameterMismatchException, __BaseException>);
    }
    /**
        * <p>The client token is not valid.</p>
        */
    export class InvalidClientTokenException extends __BaseException {
            readonly name: "InvalidClientTokenException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidClientTokenException, __BaseException>);
    }
    /**
        * <p>The format of an Amazon Resource Name (ARN) is not valid.</p>
        */
    export class MalformedArnException extends __BaseException {
            readonly name: "MalformedArnException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MalformedArnException, __BaseException>);
    }
    /**
        * <p>The requested operation is not permitted.</p>
        */
    export class OperationNotPermittedException extends __BaseException {
            readonly name: "OperationNotPermittedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OperationNotPermittedException, __BaseException>);
    }
    /**
        * <p>The specified invitation was already accepted.</p>
        */
    export class ResourceShareInvitationAlreadyAcceptedException extends __BaseException {
            readonly name: "ResourceShareInvitationAlreadyAcceptedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceShareInvitationAlreadyAcceptedException, __BaseException>);
    }
    /**
        * <p>The specified invitation was already rejected.</p>
        */
    export class ResourceShareInvitationAlreadyRejectedException extends __BaseException {
            readonly name: "ResourceShareInvitationAlreadyRejectedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceShareInvitationAlreadyRejectedException, __BaseException>);
    }
    /**
        * <p>The specified Amazon Resource Name (ARN) for an invitation was not found.</p>
        */
    export class ResourceShareInvitationArnNotFoundException extends __BaseException {
            readonly name: "ResourceShareInvitationArnNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceShareInvitationArnNotFoundException, __BaseException>);
    }
    /**
        * <p>The specified invitation is expired.</p>
        */
    export class ResourceShareInvitationExpiredException extends __BaseException {
            readonly name: "ResourceShareInvitationExpiredException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceShareInvitationExpiredException, __BaseException>);
    }
    /**
        * <p>The service could not respond to the request due to an internal problem.</p>
        */
    export class ServerInternalException extends __BaseException {
            readonly name: "ServerInternalException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServerInternalException, __BaseException>);
    }
    /**
        * <p>The service is not available.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    export interface AssociateResourceShareRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share that you want to add principals or resources
                *             to.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies a list of <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of the resources that you want to share. This can be
                *                 <code>null</code> if you want to add only principals.</p>
                */
            resourceArns?: string[];
            /**
                * <p>Specifies a list of principals to whom you want to the resource share. This can be
                *                 <code>null</code> if you want to add only resources.</p>
                *         <p>What the principals can do with the resources in the share is determined by the RAM
                *             permissions that you associate with the resource share. See <a>AssociateResourceSharePermission</a>.</p>
                *         <p>You can include the following values:</p>
                *         <ul>
                *             <li>
                *                 <p>An Amazon Web Services account ID, for example: <code>123456789012</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an organization in Organizations, for example:
                *                         <code>organizations::123456789012:organization/o-exampleorgid</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an organizational unit (OU) in Organizations, for example:
                *                         <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM role, for example:
                *                         <code>iam::123456789012:role/rolename</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM user, for example:
                *                         <code>iam::123456789012user/username</code>
                *                </p>
                *             </li>
                *          </ul>
                *         <note>
                *             <p>Not all resource types can be shared with IAM roles and users.
                *              For more information, see <a href="https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User
                *                     Guide</i>.</p>
                *          </note>
                */
            principals?: string[];
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace AssociateResourceShareRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateResourceShareRequest) => any;
    }
    export interface AssociateResourceShareResponse {
            /**
                * <p>An array of objects that contain information about the associations.</p>
                */
            resourceShareAssociations?: ResourceShareAssociation[];
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace AssociateResourceShareResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateResourceShareResponse) => any;
    }
    /**
        * <p>A parameter is not valid.</p>
        */
    export class InvalidParameterException extends __BaseException {
            readonly name: "InvalidParameterException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
    }
    /**
        * <p>The requested state transition is not valid.</p>
        */
    export class InvalidStateTransitionException extends __BaseException {
            readonly name: "InvalidStateTransitionException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidStateTransitionException, __BaseException>);
    }
    /**
        * <p>This request would exceed the limit for resource shares for your account.</p>
        */
    export class ResourceShareLimitExceededException extends __BaseException {
            readonly name: "ResourceShareLimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceShareLimitExceededException, __BaseException>);
    }
    /**
        * <p>You exceeded the rate at which you are allowed to perform this operation. Please try
        *             again later.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>A specified resource was not found.</p>
        */
    export class UnknownResourceException extends __BaseException {
            readonly name: "UnknownResourceException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnknownResourceException, __BaseException>);
    }
    export interface AssociateResourceSharePermissionRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share to which you want to add or replace
                *             permissions.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the RAM permission to associate with the resource share.
                *             To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href="https://console.aws.amazon.com/ram/home#Permissions:">Permissions library</a> page in the RAM console and
                *              then choose the name of the permission. The ARN is displayed on the detail page.</p>
                */
            permissionArn: string | undefined;
            /**
                * <p>Specifies whether the specified permission should replace or add to the existing
                *             permission associated with the resource share. Use <code>true</code> to replace the current
                *             permissions. Use <code>false</code> to add the permission to the current permission. The
                *             default value is <code>false</code>.</p>
                *         <note>
                *             <p>A resource share can have only one permission per resource type. If a resource share already has a
                *                 permission for the specified resource type and you don't set <code>replace</code> to
                *                     <code>true</code> then the operation returns an error. This helps prevent
                *                 accidental overwriting of a permission.</p>
                *         </note>
                */
            replace?: boolean;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
            /**
                * <p>Specifies the version of the RAM permission to associate with the resource share. If you don't
                *             specify this parameter, the operation uses the version designated as the default. You
                *             can use the <a>ListPermissionVersions</a> operation to discover the available
                *             versions of a permission.</p>
                */
            permissionVersion?: number;
    }
    export namespace AssociateResourceSharePermissionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateResourceSharePermissionRequest) => any;
    }
    export interface AssociateResourceSharePermissionResponse {
            /**
                * <p>A return value of <code>true</code> indicates that the request succeeded.
                *              A value of <code>false</code> indicates that the request failed.</p>
                */
            returnValue?: boolean;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace AssociateResourceSharePermissionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateResourceSharePermissionResponse) => any;
    }
    /**
        * <p>A structure containing a tag. A tag is metadata that you can attach to your resources
        *             to help organize and categorize them. You can also use them to help you secure your
        *             resources. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling access to Amazon Web Services resources
        *                 using tags</a>.</p>
        *         <p>For more information about tags, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the
        *                 <i>Amazon Web Services General Reference Guide</i>.</p>
        */
    export interface Tag {
            /**
                * <p>The key, or name, attached to the tag. Every tag must have a key. Key names are case
                *             sensitive.</p>
                */
            key?: string;
            /**
                * <p>The string value attached to the tag. The value can be an empty string. Key values are
                *             case sensitive.</p>
                */
            value?: string;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateResourceShareRequest {
            /**
                * <p>Specifies the name of the resource share.</p>
                */
            name: string | undefined;
            /**
                * <p>Specifies a list of one or more ARNs of the resources to associate with the
                *             resource share.</p>
                */
            resourceArns?: string[];
            /**
                * <p>Specifies a list of one or more principals to associate with the resource share.</p>
                *         <p>You can include the following values:</p>
                *         <ul>
                *             <li>
                *                 <p>An Amazon Web Services account ID, for example: <code>123456789012</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an organization in Organizations, for example:
                *                         <code>organizations::123456789012:organization/o-exampleorgid</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an organizational unit (OU) in Organizations, for example:
                *                         <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM role, for example:
                *                         <code>iam::123456789012:role/rolename</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM user, for example:
                *                         <code>iam::123456789012user/username</code>
                *                </p>
                *             </li>
                *          </ul>
                *         <note>
                *             <p>Not all resource types can be shared with IAM roles and users.
                *              For more information, see <a href="https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User
                *                     Guide</i>.</p>
                *          </note>
                */
            principals?: string[];
            /**
                * <p>Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to
                *             the resources associated with the resource share.</p>
                */
            tags?: Tag[];
            /**
                * <p>Specifies whether principals outside your organization in Organizations can be associated
                *             with a resource share. A value of <code>true</code> lets you share with individual Amazon Web Services accounts
                *             that are <i>not</i> in your organization. A value of <code>false</code>
                *             only has meaning if your account is a member of an Amazon Web Services Organization. The default value
                *             is <code>true</code>.</p>
                */
            allowExternalPrincipals?: boolean;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of the RAM permission to associate with the resource share. If you do
                *             not specify an ARN for the permission, RAM automatically attaches the default version
                *             of the permission for each resource type. You can associate only one permission with
                *             each resource type included in the resource share.</p>
                */
            permissionArns?: string[];
    }
    export namespace CreateResourceShareRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceShareRequest) => any;
    }
    export type ResourceShareFeatureSet = "CREATED_FROM_POLICY" | "PROMOTING_TO_STANDARD" | "STANDARD";
    export type ResourceShareStatus = "ACTIVE" | "DELETED" | "DELETING" | "FAILED" | "PENDING";
    /**
        * <p>Describes a resource share in RAM.</p>
        */
    export interface ResourceShare {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share</p>
                */
            resourceShareArn?: string;
            /**
                * <p>The name of the resource share.</p>
                */
            name?: string;
            /**
                * <p>The ID of the Amazon Web Services account that owns the resource share.</p>
                */
            owningAccountId?: string;
            /**
                * <p>Indicates whether principals outside your organization in Organizations can be associated
                *             with a resource share.</p>
                */
            allowExternalPrincipals?: boolean;
            /**
                * <p>The current status of the resource share.</p>
                */
            status?: ResourceShareStatus | string;
            /**
                * <p>A message about the status of the resource share.</p>
                */
            statusMessage?: string;
            /**
                * <p>The tag key and value pairs attached to the resource share.</p>
                */
            tags?: Tag[];
            /**
                * <p>The date and time when the resource share was created.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date and time when the resource share was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Indicates how the resource share was created. Possible values include:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>CREATED_FROM_POLICY</code> - Indicates that the resource share was created from an
                *                     Identity and Access Management (IAM) resource-based permission policy attached to the resource.
                *                     This type of resource share is visible only to the Amazon Web Services account that created it. You
                *                     can't modify it in RAM unless you promote it. For more information, see <a>PromoteResourceShareCreatedFromPolicy</a>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>PROMOTING_TO_STANDARD</code> - The resource share is in the process of being
                *                     promoted. For more information, see <a>PromoteResourceShareCreatedFromPolicy</a>.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>STANDARD</code> - Indicates that the resource share was created in RAM using the
                *                     console or APIs. These resource shares are visible to all principals you share the resource share
                *                     with. You can modify these resource shares in RAM using the console or APIs.</p>
                *             </li>
                *          </ul>
                */
            featureSet?: ResourceShareFeatureSet | string;
    }
    export namespace ResourceShare {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceShare) => any;
    }
    export interface CreateResourceShareResponse {
            /**
                * <p>An object with information about the new resource share.</p>
                */
            resourceShare?: ResourceShare;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace CreateResourceShareResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceShareResponse) => any;
    }
    /**
        * <p>The specified tag key is a reserved word and can't be used.</p>
        */
    export class TagPolicyViolationException extends __BaseException {
            readonly name: "TagPolicyViolationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TagPolicyViolationException, __BaseException>);
    }
    export interface DeleteResourceShareRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share to delete.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteResourceShareRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResourceShareRequest) => any;
    }
    export interface DeleteResourceShareResponse {
            /**
                * <p>A return value of <code>true</code> indicates that the request succeeded.
                *              A value of <code>false</code> indicates that the request failed.</p>
                */
            returnValue?: boolean;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteResourceShareResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResourceShareResponse) => any;
    }
    export interface DisassociateResourceShareRequest {
            /**
                * <p>Specifies <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share that you want to remove resources from.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies a list of <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> for one or more resources that you want to remove from
                *             the resource share. After the operation runs, these resources are no longer shared with principals
                *             outside of the Amazon Web Services account that created the resources.</p>
                */
            resourceArns?: string[];
            /**
                * <p>Specifies a list of one or more principals that no longer are to have access to the
                *             resources in this resource share.</p>
                *         <p>You can include the following values:</p>
                *         <ul>
                *             <li>
                *                 <p>An Amazon Web Services account ID, for example: <code>123456789012</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an organization in Organizations, for example:
                *                         <code>organizations::123456789012:organization/o-exampleorgid</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an organizational unit (OU) in Organizations, for example:
                *                         <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM role, for example:
                *                         <code>iam::123456789012:role/rolename</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM user, for example:
                *                         <code>iam::123456789012user/username</code>
                *                </p>
                *             </li>
                *          </ul>
                *         <note>
                *             <p>Not all resource types can be shared with IAM roles and users.
                *              For more information, see <a href="https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User
                *                     Guide</i>.</p>
                *          </note>
                */
            principals?: string[];
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateResourceShareRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateResourceShareRequest) => any;
    }
    export interface DisassociateResourceShareResponse {
            /**
                * <p>An array of objects that contain information about the updated associations for this
                *             resource share.</p>
                */
            resourceShareAssociations?: ResourceShareAssociation[];
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateResourceShareResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateResourceShareResponse) => any;
    }
    export interface DisassociateResourceSharePermissionRequest {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share from which you want to disassociate a permission.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the permission to disassociate from the resource share. Changes to permissions
                *             take effect immediately.</p>
                */
            permissionArn: string | undefined;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateResourceSharePermissionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateResourceSharePermissionRequest) => any;
    }
    export interface DisassociateResourceSharePermissionResponse {
            /**
                * <p>A return value of <code>true</code> indicates that the request succeeded.
                *              A value of <code>false</code> indicates that the request failed.</p>
                */
            returnValue?: boolean;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateResourceSharePermissionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateResourceSharePermissionResponse) => any;
    }
    export interface EnableSharingWithAwsOrganizationRequest {
    }
    export namespace EnableSharingWithAwsOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableSharingWithAwsOrganizationRequest) => any;
    }
    export interface EnableSharingWithAwsOrganizationResponse {
            /**
                * <p>A return value of <code>true</code> indicates that the request succeeded.
                *              A value of <code>false</code> indicates that the request failed.</p>
                */
            returnValue?: boolean;
    }
    export namespace EnableSharingWithAwsOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableSharingWithAwsOrganizationResponse) => any;
    }
    export interface GetPermissionRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the permission whose contents you want to retrieve.
                *             To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href="https://console.aws.amazon.com/ram/home#Permissions:">Permissions library</a> page in the RAM console and
                *              then choose the name of the permission. The ARN is displayed on the detail page.</p>
                */
            permissionArn: string | undefined;
            /**
                * <p>Specifies identifier for the version of the RAM permission to retrieve. If you don't
                *             specify this parameter, the operation retrieves the default version.</p>
                */
            permissionVersion?: number;
    }
    export namespace GetPermissionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPermissionRequest) => any;
    }
    /**
        * <p>Information about an RAM permission.</p>
        */
    export interface ResourceSharePermissionDetail {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of this RAM permission.</p>
                */
            arn?: string;
            /**
                * <p>The version of the permission represented in this structure.</p>
                */
            version?: string;
            /**
                * <p>Specifies whether the version of the permission represented in this structure is the
                *             default version for this permission.</p>
                */
            defaultVersion?: boolean;
            /**
                * <p>The name of this permission.</p>
                */
            name?: string;
            /**
                * <p>The resource type to which this permission applies.</p>
                */
            resourceType?: string;
            /**
                * <p>The permission's effect and actions in JSON format. The <code>effect</code> indicates
                *             whether the specified actions are allowed or denied. The <code>actions</code> list the
                *             operations to which the principal is granted or denied access.</p>
                */
            permission?: string;
            /**
                * <p>The date and time when the permission was created.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date and time when the permission was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Specifies whether the version of the permission represented in this structure is the
                *             default version for all resources of this resource type.</p>
                */
            isResourceTypeDefault?: boolean;
    }
    export namespace ResourceSharePermissionDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceSharePermissionDetail) => any;
    }
    export interface GetPermissionResponse {
            /**
                * <p>An object that contains information about the permission.</p>
                */
            permission?: ResourceSharePermissionDetail;
    }
    export namespace GetPermissionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPermissionResponse) => any;
    }
    export interface GetResourcePoliciesRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of the resources whose policies you want to retrieve.</p>
                */
            resourceArns: string[] | undefined;
            /**
                * <p>Specifies the principal.</p>
                */
            principal?: string;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace GetResourcePoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourcePoliciesRequest) => any;
    }
    export interface GetResourcePoliciesResponse {
            /**
                * <p>An array of resource policy documents in JSON format.</p>
                */
            policies?: string[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace GetResourcePoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourcePoliciesResponse) => any;
    }
    /**
        * <p>The specified value for <code>NextToken</code> is not valid.</p>
        */
    export class InvalidNextTokenException extends __BaseException {
            readonly name: "InvalidNextTokenException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>);
    }
    /**
        * <p>The specified Amazon Resource Name (ARN) was not found.</p>
        */
    export class ResourceArnNotFoundException extends __BaseException {
            readonly name: "ResourceArnNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceArnNotFoundException, __BaseException>);
    }
    export interface GetResourceShareAssociationsRequest {
            /**
                * <p>Specifies whether you want to retrieve the associations that involve a specified
                *             resource or principal.</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>PRINCIPAL</code> – list the principals that are associated with
                *                     the specified resource share.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>RESOURCE</code> – list the resources that are associated with the
                *                     specified resource share.</p>
                *             </li>
                *          </ul>
                */
            associationType: ResourceShareAssociationType | string | undefined;
            /**
                * <p>Specifies a list of <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of the resource share whose associations you want to
                *             retrieve.</p>
                */
            resourceShareArns?: string[];
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource whose resource shares you want to retrieve.</p>
                *         <p>You cannot specify this parameter if the association type is
                *             <code>PRINCIPAL</code>.</p>
                */
            resourceArn?: string;
            /**
                * <p>Specifies the ID of the principal whose resource shares you want to retrieve. This can be an
                *             Amazon Web Services account ID, an organization ID, an organizational unit ID, or the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an
                *             individual IAM user or role.</p>
                *         <p>You cannot specify this parameter if the association type is
                *             <code>RESOURCE</code>.</p>
                */
            principal?: string;
            /**
                * <p>Specifies that you want to retrieve only associations with this status.</p>
                */
            associationStatus?: ResourceShareAssociationStatus | string;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace GetResourceShareAssociationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceShareAssociationsRequest) => any;
    }
    export interface GetResourceShareAssociationsResponse {
            /**
                * <p>An array of objects that contain the details about the associations.</p>
                */
            resourceShareAssociations?: ResourceShareAssociation[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace GetResourceShareAssociationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceShareAssociationsResponse) => any;
    }
    export interface GetResourceShareInvitationsRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of the resource share invitations you want information about.</p>
                */
            resourceShareInvitationArns?: string[];
            /**
                * <p>Specifies that you want details about invitations only for the resource shares described by this
                *             list of <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>
                *          </p>
                */
            resourceShareArns?: string[];
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace GetResourceShareInvitationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceShareInvitationsRequest) => any;
    }
    export interface GetResourceShareInvitationsResponse {
            /**
                * <p>An array of objects that contain the details about the invitations.</p>
                */
            resourceShareInvitations?: ResourceShareInvitation[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace GetResourceShareInvitationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceShareInvitationsResponse) => any;
    }
    /**
        * <p>The specified value for <code>MaxResults</code> is not valid.</p>
        */
    export class InvalidMaxResultsException extends __BaseException {
            readonly name: "InvalidMaxResultsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidMaxResultsException, __BaseException>);
    }
    export enum ResourceOwner {
            OTHER_ACCOUNTS = "OTHER-ACCOUNTS",
            SELF = "SELF"
    }
    /**
        * <p>A tag key and optional list of possible values that you can use to filter results for
        *             tagged resources.</p>
        */
    export interface TagFilter {
            /**
                * <p>The tag key. This must have a valid string value and can't be empty.</p>
                */
            tagKey?: string;
            /**
                * <p>A list of zero or more tag values. If no values are provided, then the filter matches
                *             any tag with the specified key, regardless of its value.</p>
                */
            tagValues?: string[];
    }
    export namespace TagFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagFilter) => any;
    }
    export interface GetResourceSharesRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of individual resource shares that you want information about.</p>
                */
            resourceShareArns?: string[];
            /**
                * <p>Specifies that you want to retrieve details of only those resource shares that have this
                *             status.</p>
                */
            resourceShareStatus?: ResourceShareStatus | string;
            /**
                * <p>Specifies that you want to retrieve details of only those resource shares that match the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>SELF</code>
                *                   </b> – resource shares that your
                *                     account shares with other accounts</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>OTHER-ACCOUNTS</code>
                *                   </b> – resource shares
                *                     that other accounts share with your account</p>
                *             </li>
                *          </ul>
                */
            resourceOwner: ResourceOwner | string | undefined;
            /**
                * <p>Specifies the name of an individual resource share that you want to retrieve details
                *             about.</p>
                */
            name?: string;
            /**
                * <p>Specifies that you want to retrieve details of only those resource shares that match the
                *             specified tag keys and values.</p>
                */
            tagFilters?: TagFilter[];
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
            /**
                * <p>Specifies that you want to retrieve details of only those resource shares that use the RAM
                *             permission with this <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a>.</p>
                */
            permissionArn?: string;
    }
    export namespace GetResourceSharesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceSharesRequest) => any;
    }
    export interface GetResourceSharesResponse {
            /**
                * <p>An array of objects that contain the information about the resource shares.</p>
                */
            resourceShares?: ResourceShare[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace GetResourceSharesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetResourceSharesResponse) => any;
    }
    export enum ResourceRegionScopeFilter {
            ALL = "ALL",
            GLOBAL = "GLOBAL",
            REGIONAL = "REGIONAL"
    }
    export interface ListPendingInvitationResourcesRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the invitation. You can use <a>GetResourceShareInvitations</a> to find the ARN of the invitation.</p>
                */
            resourceShareInvitationArn: string | undefined;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
            /**
                * <p>Specifies that you want the results to include only
                *             resources that have the specified scope.</p>
                *             <ul>
                *             <li>
                *                <p>
                *                   <code>ALL</code> – the results include both global and
                *                     regional resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>GLOBAL</code> – the results include only global
                *                     resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>REGIONAL</code> – the results include only regional
                *                     resources or resource types.</p>
                *             </li>
                *          </ul>
                *             <p>The default value is <code>ALL</code>.</p>
                */
            resourceRegionScope?: ResourceRegionScopeFilter | string;
    }
    export namespace ListPendingInvitationResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPendingInvitationResourcesRequest) => any;
    }
    export enum ResourceRegionScope {
            GLOBAL = "GLOBAL",
            REGIONAL = "REGIONAL"
    }
    export type ResourceStatus = "AVAILABLE" | "LIMIT_EXCEEDED" | "PENDING" | "UNAVAILABLE" | "ZONAL_RESOURCE_INACCESSIBLE";
    /**
        * <p>Describes a resource associated with a resource share in RAM.</p>
        */
    export interface Resource {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource.</p>
                */
            arn?: string;
            /**
                * <p>The resource type. This takes the form of:
                *                 <code>service-code</code>:<code>resource-code</code>
                *          </p>
                */
            type?: string;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share this resource is associated with.</p>
                */
            resourceShareArn?: string;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource group. This value is available only if the resource is
                *             part of a resource group.</p>
                */
            resourceGroupArn?: string;
            /**
                * <p>The current status of the resource.</p>
                */
            status?: ResourceStatus | string;
            /**
                * <p>A message about the status of the resource.</p>
                */
            statusMessage?: string;
            /**
                * <p>The date and time when the resource was associated with the resource share.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date an time when the association was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Specifies the scope of visibility of this resource:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>REGIONAL</b> – The resource can be
                *                     accessed only by using requests that target the Amazon Web Services Region in which the
                *                     resource exists.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>GLOBAL</b> – The resource can be accessed
                *                     from any Amazon Web Services Region.</p>
                *             </li>
                *          </ul>
                */
            resourceRegionScope?: ResourceRegionScope | string;
    }
    export namespace Resource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Resource) => any;
    }
    export interface ListPendingInvitationResourcesResponse {
            /**
                * <p>An array of objects that contain the information about the resources included the
                *             specified resource share.</p>
                */
            resources?: Resource[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPendingInvitationResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPendingInvitationResourcesResponse) => any;
    }
    /**
        * <p>A required input parameter is missing.</p>
        */
    export class MissingRequiredParameterException extends __BaseException {
            readonly name: "MissingRequiredParameterException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MissingRequiredParameterException, __BaseException>);
    }
    export interface ListPermissionsRequest {
            /**
                * <p>Specifies that you want to list permissions for only the specified resource type. For
                *             example, to list only permissions that apply to EC2 subnets, specify
                *                 <code>ec2:Subnet</code>. You can use the <a>ListResourceTypes</a>
                *             operation to get the specific string required.</p>
                */
            resourceType?: string;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace ListPermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPermissionsRequest) => any;
    }
    /**
        * <p>Information about an RAM permission that is associated with a resource share and any of its
        *             resources of a specified type.</p>
        */
    export interface ResourceSharePermissionSummary {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the permission you want information about.</p>
                */
            arn?: string;
            /**
                * <p>The version of the permission represented in this structure.</p>
                */
            version?: string;
            /**
                * <p>Specifies whether the version of the permission represented in this structure is the
                *             default version for this permission.</p>
                */
            defaultVersion?: boolean;
            /**
                * <p>The name of this permission.</p>
                */
            name?: string;
            /**
                * <p>The type of resource to which this permission applies.</p>
                */
            resourceType?: string;
            /**
                * <p>The current status of the permission.</p>
                */
            status?: string;
            /**
                * <p>The date and time when the permission was created.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date and time when the permission was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Specifies whether the version of the permission represented in this structure is the
                *             default version for all resources of this resource type.</p>
                */
            isResourceTypeDefault?: boolean;
    }
    export namespace ResourceSharePermissionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceSharePermissionSummary) => any;
    }
    export interface ListPermissionsResponse {
            /**
                * <p>An array of objects with information about the permissions.</p>
                */
            permissions?: ResourceSharePermissionSummary[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPermissionsResponse) => any;
    }
    export interface ListPermissionVersionsRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the RAM permission whose versions you want to list. You
                *             can use the <code>permissionVersion</code> parameter on the <a>AssociateResourceSharePermission</a> operation to specify a non-default
                *             version to attach.</p>
                */
            permissionArn: string | undefined;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace ListPermissionVersionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPermissionVersionsRequest) => any;
    }
    export interface ListPermissionVersionsResponse {
            /**
                * <p>An array of objects that contain details for each of the available versions.</p>
                */
            permissions?: ResourceSharePermissionSummary[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPermissionVersionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPermissionVersionsResponse) => any;
    }
    export interface ListPrincipalsRequest {
            /**
                * <p>Specifies that you want to list information for only resource shares that match the
                *             following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>SELF</code>
                *                   </b> – principals that
                *                     your account is sharing resources with</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>OTHER-ACCOUNTS</code>
                *                   </b> –
                *                     principals that are sharing resources with your account</p>
                *             </li>
                *          </ul>
                */
            resourceOwner: ResourceOwner | string | undefined;
            /**
                * <p>Specifies that you want to list principal information for the resource share with the specified
                *             <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a>.</p>
                */
            resourceArn?: string;
            /**
                * <p>Specifies that you want to list information for only the listed principals.</p>
                *         <p>You can include the following values:</p>
                *         <ul>
                *             <li>
                *                 <p>An Amazon Web Services account ID, for example: <code>123456789012</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of an organization in Organizations, for example:
                *                         <code>organizations::123456789012:organization/o-exampleorgid</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an organizational unit (OU) in Organizations, for example:
                *                         <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM role, for example:
                *                         <code>iam::123456789012:role/rolename</code>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>An ARN of an IAM user, for example:
                *                         <code>iam::123456789012user/username</code>
                *                </p>
                *             </li>
                *          </ul>
                *         <note>
                *             <p>Not all resource types can be shared with IAM roles and users.
                *              For more information, see <a href="https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User
                *                     Guide</i>.</p>
                *          </note>
                */
            principals?: string[];
            /**
                * <p>Specifies that you want to list information for only principals associated with resource shares
                *             that include the specified resource type.</p>
                *         <p>For a list of valid values, query the <a>ListResourceTypes</a>
                *             operation.</p>
                */
            resourceType?: string;
            /**
                * <p>Specifies that you want to list information for only principals associated with the
                *             resource shares specified by a list the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
                */
            resourceShareArns?: string[];
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace ListPrincipalsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalsRequest) => any;
    }
    /**
        * <p>Describes a principal for use with Resource Access Manager.</p>
        */
    export interface Principal {
            /**
                * <p>The ID of the principal.</p>
                */
            id?: string;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of a resource share the principal is associated with.</p>
                */
            resourceShareArn?: string;
            /**
                * <p>The date and time when the principal was associated with the resource share.</p>
                */
            creationTime?: Date;
            /**
                * <p>The date and time when the association was last updated.</p>
                */
            lastUpdatedTime?: Date;
            /**
                * <p>Indicates whether the principal belongs to the same organization in Organizations as the
                *             Amazon Web Services account that owns the resource share.</p>
                */
            external?: boolean;
    }
    export namespace Principal {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Principal) => any;
    }
    export interface ListPrincipalsResponse {
            /**
                * <p>An array of objects that contain the details about the principals.</p>
                */
            principals?: Principal[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPrincipalsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalsResponse) => any;
    }
    /**
        * <p>The specified resource type is not valid.</p>
        */
    export class InvalidResourceTypeException extends __BaseException {
            readonly name: "InvalidResourceTypeException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidResourceTypeException, __BaseException>);
    }
    export interface ListResourcesRequest {
            /**
                * <p>Specifies that you want to list only the resource shares that match the following:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>SELF</code>
                *                   </b> – resources that
                *                     your account shares with other accounts</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>
                *                      <code>OTHER-ACCOUNTS</code>
                *                   </b> –
                *                     resources that other accounts share with your account</p>
                *             </li>
                *          </ul>
                */
            resourceOwner: ResourceOwner | string | undefined;
            /**
                * <p>Specifies that you want to list only the resource shares that are associated with the specified
                *             principal.</p>
                */
            principal?: string;
            /**
                * <p>Specifies that you want to list only the resource shares that include resources of the specified
                *             resource type.</p>
                *         <p>For valid values, query the <a>ListResourceTypes</a> operation.</p>
                */
            resourceType?: string;
            /**
                * <p>Specifies that you want to list only the resource shares that include resources with the
                *             specified <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
                */
            resourceArns?: string[];
            /**
                * <p>Specifies that you want to list only resources in the resource shares identified by the
                *             specified <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
                */
            resourceShareArns?: string[];
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
            /**
                * <p>Specifies that you want the results to include only
                *             resources that have the specified scope.</p>
                *             <ul>
                *             <li>
                *                <p>
                *                   <code>ALL</code> – the results include both global and
                *                     regional resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>GLOBAL</code> – the results include only global
                *                     resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>REGIONAL</code> – the results include only regional
                *                     resources or resource types.</p>
                *             </li>
                *          </ul>
                *             <p>The default value is <code>ALL</code>.</p>
                */
            resourceRegionScope?: ResourceRegionScopeFilter | string;
    }
    export namespace ListResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesRequest) => any;
    }
    export interface ListResourcesResponse {
            /**
                * <p>An array of objects that contain information about the resources.</p>
                */
            resources?: Resource[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesResponse) => any;
    }
    export interface ListResourceSharePermissionsRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share for which you want to retrieve the associated
                *             permissions.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
    }
    export namespace ListResourceSharePermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceSharePermissionsRequest) => any;
    }
    export interface ListResourceSharePermissionsResponse {
            /**
                * <p>An array of objects that describe the permissions associated with the resource share.</p>
                */
            permissions?: ResourceSharePermissionSummary[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListResourceSharePermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceSharePermissionsResponse) => any;
    }
    export interface ListResourceTypesRequest {
            /**
                * <p>Specifies that you want to receive the next page of results. Valid
                *              only if you received a <code>NextToken</code> response in the previous request. If you
                *              did, it indicates that more output is available. Set this parameter to the value
                *              provided by the previous call's <code>NextToken</code> response to request the
                *              next page of results.</p>
                */
            nextToken?: string;
            /**
                * <p>Specifies the total number of results that you want included on each page
                *              of the response. If you do not include this parameter, it defaults to a value that is
                *              specific to the operation. If additional items exist beyond the number you specify, the
                *              <code>NextToken</code> response element is returned with a value (not null).
                *              Include the specified value as the <code>NextToken</code> request parameter in the next
                *              call to the operation to get the next part of the results. Note that the service might
                *              return fewer results than the maximum even when there are more results available. You
                *              should check <code>NextToken</code> after every operation to ensure that you receive all
                *              of the results.</p>
                */
            maxResults?: number;
            /**
                * <p>Specifies that you want the results to include only
                *             resources that have the specified scope.</p>
                *             <ul>
                *             <li>
                *                <p>
                *                   <code>ALL</code> – the results include both global and
                *                     regional resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>GLOBAL</code> – the results include only global
                *                     resources or resource types.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>REGIONAL</code> – the results include only regional
                *                     resources or resource types.</p>
                *             </li>
                *          </ul>
                *             <p>The default value is <code>ALL</code>.</p>
                */
            resourceRegionScope?: ResourceRegionScopeFilter | string;
    }
    export namespace ListResourceTypesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceTypesRequest) => any;
    }
    /**
        * <p>Information about a shareable resource type and the Amazon Web Services service to which resources
        *             of that type belong.</p>
        */
    export interface ServiceNameAndResourceType {
            /**
                * <p>The type of the resource.</p>
                */
            resourceType?: string;
            /**
                * <p>The name of the Amazon Web Services service to which resources of this type belong.</p>
                */
            serviceName?: string;
            /**
                * <p>Specifies the scope of visibility of resources of this type:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <b>REGIONAL</b> – The resource can be
                *                     accessed only by using requests that target the Amazon Web Services Region in which the
                *                     resource exists.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <b>GLOBAL</b> – The resource can be accessed
                *                     from any Amazon Web Services Region.</p>
                *             </li>
                *          </ul>
                */
            resourceRegionScope?: ResourceRegionScope | string;
    }
    export namespace ServiceNameAndResourceType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceNameAndResourceType) => any;
    }
    export interface ListResourceTypesResponse {
            /**
                * <p>An array of objects that contain information about the resource types that can be
                *             shared using RAM.</p>
                */
            resourceTypes?: ServiceNameAndResourceType[];
            /**
                * <p>If present, this value indicates that more output is available than
                *              is included in the current response. Use this value in the <code>NextToken</code>
                *              request parameter in a subsequent call to the operation to get the next part of the
                *              output. You should repeat this until the <code>NextToken</code> response element comes
                *              back as <code>null</code>. This indicates that this is the last page of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListResourceTypesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceTypesResponse) => any;
    }
    export interface PromoteResourceShareCreatedFromPolicyRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share to promote.</p>
                */
            resourceShareArn: string | undefined;
    }
    export namespace PromoteResourceShareCreatedFromPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PromoteResourceShareCreatedFromPolicyRequest) => any;
    }
    export interface PromoteResourceShareCreatedFromPolicyResponse {
            /**
                * <p>A return value of <code>true</code> indicates that the request succeeded.
                *              A value of <code>false</code> indicates that the request failed.</p>
                */
            returnValue?: boolean;
    }
    export namespace PromoteResourceShareCreatedFromPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PromoteResourceShareCreatedFromPolicyResponse) => any;
    }
    export interface RejectResourceShareInvitationRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the invitation that you want to reject.</p>
                */
            resourceShareInvitationArn: string | undefined;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace RejectResourceShareInvitationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectResourceShareInvitationRequest) => any;
    }
    export interface RejectResourceShareInvitationResponse {
            /**
                * <p>An object that contains the details about the rejected invitation.</p>
                */
            resourceShareInvitation?: ResourceShareInvitation;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace RejectResourceShareInvitationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectResourceShareInvitationResponse) => any;
    }
    /**
        * <p>This request would exceed the limit for tags for your account.</p>
        */
    export class TagLimitExceededException extends __BaseException {
            readonly name: "TagLimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TagLimitExceededException, __BaseException>);
    }
    export interface TagResourceRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share that you want to add tags to.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>A list of one or more tag key and value pairs. The tag key must be present and not be
                *             an empty string. The tag value must be present but can be an empty string.</p>
                */
            tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share that you want to remove tags from. The tags are
                *             removed from the resource share, not the resources in the resource share.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>Specifies a list of one or more tag keys that you want to remove.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateResourceShareRequest {
            /**
                * <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a> of the resource share that you want to modify.</p>
                */
            resourceShareArn: string | undefined;
            /**
                * <p>If specified, the new name that you want to attach to the resource share.</p>
                */
            name?: string;
            /**
                * <p>Specifies whether principals outside your organization in Organizations can be associated
                *             with a resource share.</p>
                */
            allowExternalPrincipals?: boolean;
            /**
                * <p>Specifies a unique, case-sensitive identifier that you provide to
                *              ensure the idempotency of the request. This lets you safely retry the request without
                *              accidentally performing the same operation a second time. Passing the same value to a
                *              later call to an operation requires that you also pass the same value for all other
                *              parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of
                *              value.</a>.</p>
                *              <p>If you don't provide this value, then Amazon Web Services generates a random one for
                *              you.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateResourceShareRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResourceShareRequest) => any;
    }
    export interface UpdateResourceShareResponse {
            /**
                * <p>Information about the resource share.</p>
                */
            resourceShare?: ResourceShare;
            /**
                * <p>The idempotency identifier associated with this request. If you
                *              want to repeat the same operation in an idempotent manner then you must include this
                *              value in the <code>clientToken</code> request parameter of that later call. All other
                *              parameters must also have the same values that you used in the first call.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateResourceShareResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResourceShareResponse) => any;
    }
}

declare module '@aws-sdk/client-ram/node_modules/@aws-sdk/client-ram/dist-types/models/RAMServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from RAM service.
        */
    export class RAMServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

