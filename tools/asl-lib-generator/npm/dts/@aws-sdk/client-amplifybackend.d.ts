// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-amplifybackend' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AmplifyBackendClient } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CloneBackendCommandInput, CloneBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CloneBackendCommand";
    import { CreateBackendAPICommandInput, CreateBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAPICommand";
    import { CreateBackendAuthCommandInput, CreateBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAuthCommand";
    import { CreateBackendCommandInput, CreateBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendCommand";
    import { CreateBackendConfigCommandInput, CreateBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendConfigCommand";
    import { CreateBackendStorageCommandInput, CreateBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendStorageCommand";
    import { CreateTokenCommandInput, CreateTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateTokenCommand";
    import { DeleteBackendAPICommandInput, DeleteBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAPICommand";
    import { DeleteBackendAuthCommandInput, DeleteBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAuthCommand";
    import { DeleteBackendCommandInput, DeleteBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendCommand";
    import { DeleteBackendStorageCommandInput, DeleteBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendStorageCommand";
    import { DeleteTokenCommandInput, DeleteTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteTokenCommand";
    import { GenerateBackendAPIModelsCommandInput, GenerateBackendAPIModelsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GenerateBackendAPIModelsCommand";
    import { GetBackendAPICommandInput, GetBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPICommand";
    import { GetBackendAPIModelsCommandInput, GetBackendAPIModelsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPIModelsCommand";
    import { GetBackendAuthCommandInput, GetBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAuthCommand";
    import { GetBackendCommandInput, GetBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendCommand";
    import { GetBackendJobCommandInput, GetBackendJobCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendJobCommand";
    import { GetBackendStorageCommandInput, GetBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendStorageCommand";
    import { GetTokenCommandInput, GetTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetTokenCommand";
    import { ImportBackendAuthCommandInput, ImportBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendAuthCommand";
    import { ImportBackendStorageCommandInput, ImportBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendStorageCommand";
    import { ListBackendJobsCommandInput, ListBackendJobsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListBackendJobsCommand";
    import { ListS3BucketsCommandInput, ListS3BucketsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListS3BucketsCommand";
    import { RemoveAllBackendsCommandInput, RemoveAllBackendsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveAllBackendsCommand";
    import { RemoveBackendConfigCommandInput, RemoveBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveBackendConfigCommand";
    import { UpdateBackendAPICommandInput, UpdateBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAPICommand";
    import { UpdateBackendAuthCommandInput, UpdateBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAuthCommand";
    import { UpdateBackendConfigCommandInput, UpdateBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendConfigCommand";
    import { UpdateBackendJobCommandInput, UpdateBackendJobCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendJobCommand";
    import { UpdateBackendStorageCommandInput, UpdateBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendStorageCommand";
    /**
        * <p>AWS Amplify Admin API</p>
        */
    export class AmplifyBackend extends AmplifyBackendClient {
            /**
                * <p>This operation clones an existing backend.</p>
                */
            cloneBackend(args: CloneBackendCommandInput, options?: __HttpHandlerOptions): Promise<CloneBackendCommandOutput>;
            cloneBackend(args: CloneBackendCommandInput, cb: (err: any, data?: CloneBackendCommandOutput) => void): void;
            cloneBackend(args: CloneBackendCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CloneBackendCommandOutput) => void): void;
            /**
                * <p>This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.</p>
                */
            createBackend(args: CreateBackendCommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendCommandOutput>;
            createBackend(args: CreateBackendCommandInput, cb: (err: any, data?: CreateBackendCommandOutput) => void): void;
            createBackend(args: CreateBackendCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendCommandOutput) => void): void;
            /**
                * <p>Creates a new backend API resource.</p>
                */
            createBackendAPI(args: CreateBackendAPICommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendAPICommandOutput>;
            createBackendAPI(args: CreateBackendAPICommandInput, cb: (err: any, data?: CreateBackendAPICommandOutput) => void): void;
            createBackendAPI(args: CreateBackendAPICommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendAPICommandOutput) => void): void;
            /**
                * <p>Creates a new backend authentication resource.</p>
                */
            createBackendAuth(args: CreateBackendAuthCommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendAuthCommandOutput>;
            createBackendAuth(args: CreateBackendAuthCommandInput, cb: (err: any, data?: CreateBackendAuthCommandOutput) => void): void;
            createBackendAuth(args: CreateBackendAuthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendAuthCommandOutput) => void): void;
            /**
                * <p>Creates a config object for a backend.</p>
                */
            createBackendConfig(args: CreateBackendConfigCommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendConfigCommandOutput>;
            createBackendConfig(args: CreateBackendConfigCommandInput, cb: (err: any, data?: CreateBackendConfigCommandOutput) => void): void;
            createBackendConfig(args: CreateBackendConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendConfigCommandOutput) => void): void;
            /**
                * <p>Creates a backend storage resource.</p>
                */
            createBackendStorage(args: CreateBackendStorageCommandInput, options?: __HttpHandlerOptions): Promise<CreateBackendStorageCommandOutput>;
            createBackendStorage(args: CreateBackendStorageCommandInput, cb: (err: any, data?: CreateBackendStorageCommandOutput) => void): void;
            createBackendStorage(args: CreateBackendStorageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBackendStorageCommandOutput) => void): void;
            /**
                * <p>Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.</p>
                */
            createToken(args: CreateTokenCommandInput, options?: __HttpHandlerOptions): Promise<CreateTokenCommandOutput>;
            createToken(args: CreateTokenCommandInput, cb: (err: any, data?: CreateTokenCommandOutput) => void): void;
            createToken(args: CreateTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTokenCommandOutput) => void): void;
            /**
                * <p>Removes an existing environment from your Amplify project.</p>
                */
            deleteBackend(args: DeleteBackendCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBackendCommandOutput>;
            deleteBackend(args: DeleteBackendCommandInput, cb: (err: any, data?: DeleteBackendCommandOutput) => void): void;
            deleteBackend(args: DeleteBackendCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBackendCommandOutput) => void): void;
            /**
                * <p>Deletes an existing backend API resource.</p>
                */
            deleteBackendAPI(args: DeleteBackendAPICommandInput, options?: __HttpHandlerOptions): Promise<DeleteBackendAPICommandOutput>;
            deleteBackendAPI(args: DeleteBackendAPICommandInput, cb: (err: any, data?: DeleteBackendAPICommandOutput) => void): void;
            deleteBackendAPI(args: DeleteBackendAPICommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBackendAPICommandOutput) => void): void;
            /**
                * <p>Deletes an existing backend authentication resource.</p>
                */
            deleteBackendAuth(args: DeleteBackendAuthCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBackendAuthCommandOutput>;
            deleteBackendAuth(args: DeleteBackendAuthCommandInput, cb: (err: any, data?: DeleteBackendAuthCommandOutput) => void): void;
            deleteBackendAuth(args: DeleteBackendAuthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBackendAuthCommandOutput) => void): void;
            /**
                * <p>Removes the specified backend storage resource.</p>
                */
            deleteBackendStorage(args: DeleteBackendStorageCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBackendStorageCommandOutput>;
            deleteBackendStorage(args: DeleteBackendStorageCommandInput, cb: (err: any, data?: DeleteBackendStorageCommandOutput) => void): void;
            deleteBackendStorage(args: DeleteBackendStorageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBackendStorageCommandOutput) => void): void;
            /**
                * <p>Deletes the challenge token based on the given appId and sessionId.</p>
                */
            deleteToken(args: DeleteTokenCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTokenCommandOutput>;
            deleteToken(args: DeleteTokenCommandInput, cb: (err: any, data?: DeleteTokenCommandOutput) => void): void;
            deleteToken(args: DeleteTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTokenCommandOutput) => void): void;
            /**
                * <p>Generates a model schema for an existing backend API resource.</p>
                */
            generateBackendAPIModels(args: GenerateBackendAPIModelsCommandInput, options?: __HttpHandlerOptions): Promise<GenerateBackendAPIModelsCommandOutput>;
            generateBackendAPIModels(args: GenerateBackendAPIModelsCommandInput, cb: (err: any, data?: GenerateBackendAPIModelsCommandOutput) => void): void;
            generateBackendAPIModels(args: GenerateBackendAPIModelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GenerateBackendAPIModelsCommandOutput) => void): void;
            /**
                * <p>Provides project-level details for your Amplify UI project.</p>
                */
            getBackend(args: GetBackendCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendCommandOutput>;
            getBackend(args: GetBackendCommandInput, cb: (err: any, data?: GetBackendCommandOutput) => void): void;
            getBackend(args: GetBackendCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendCommandOutput) => void): void;
            /**
                * <p>Gets the details for a backend API.</p>
                */
            getBackendAPI(args: GetBackendAPICommandInput, options?: __HttpHandlerOptions): Promise<GetBackendAPICommandOutput>;
            getBackendAPI(args: GetBackendAPICommandInput, cb: (err: any, data?: GetBackendAPICommandOutput) => void): void;
            getBackendAPI(args: GetBackendAPICommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendAPICommandOutput) => void): void;
            /**
                * <p>Generates a model schema for existing backend API resource.</p>
                */
            getBackendAPIModels(args: GetBackendAPIModelsCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendAPIModelsCommandOutput>;
            getBackendAPIModels(args: GetBackendAPIModelsCommandInput, cb: (err: any, data?: GetBackendAPIModelsCommandOutput) => void): void;
            getBackendAPIModels(args: GetBackendAPIModelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendAPIModelsCommandOutput) => void): void;
            /**
                * <p>Gets a backend auth details.</p>
                */
            getBackendAuth(args: GetBackendAuthCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendAuthCommandOutput>;
            getBackendAuth(args: GetBackendAuthCommandInput, cb: (err: any, data?: GetBackendAuthCommandOutput) => void): void;
            getBackendAuth(args: GetBackendAuthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendAuthCommandOutput) => void): void;
            /**
                * <p>Returns information about a specific job.</p>
                */
            getBackendJob(args: GetBackendJobCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendJobCommandOutput>;
            getBackendJob(args: GetBackendJobCommandInput, cb: (err: any, data?: GetBackendJobCommandOutput) => void): void;
            getBackendJob(args: GetBackendJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendJobCommandOutput) => void): void;
            /**
                * <p>Gets details for a backend storage resource.</p>
                */
            getBackendStorage(args: GetBackendStorageCommandInput, options?: __HttpHandlerOptions): Promise<GetBackendStorageCommandOutput>;
            getBackendStorage(args: GetBackendStorageCommandInput, cb: (err: any, data?: GetBackendStorageCommandOutput) => void): void;
            getBackendStorage(args: GetBackendStorageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBackendStorageCommandOutput) => void): void;
            /**
                * <p>Gets the challenge token based on the given appId and sessionId.</p>
                */
            getToken(args: GetTokenCommandInput, options?: __HttpHandlerOptions): Promise<GetTokenCommandOutput>;
            getToken(args: GetTokenCommandInput, cb: (err: any, data?: GetTokenCommandOutput) => void): void;
            getToken(args: GetTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTokenCommandOutput) => void): void;
            /**
                * <p>Imports an existing backend authentication resource.</p>
                */
            importBackendAuth(args: ImportBackendAuthCommandInput, options?: __HttpHandlerOptions): Promise<ImportBackendAuthCommandOutput>;
            importBackendAuth(args: ImportBackendAuthCommandInput, cb: (err: any, data?: ImportBackendAuthCommandOutput) => void): void;
            importBackendAuth(args: ImportBackendAuthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportBackendAuthCommandOutput) => void): void;
            /**
                * <p>Imports an existing backend storage resource.</p>
                */
            importBackendStorage(args: ImportBackendStorageCommandInput, options?: __HttpHandlerOptions): Promise<ImportBackendStorageCommandOutput>;
            importBackendStorage(args: ImportBackendStorageCommandInput, cb: (err: any, data?: ImportBackendStorageCommandOutput) => void): void;
            importBackendStorage(args: ImportBackendStorageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportBackendStorageCommandOutput) => void): void;
            /**
                * <p>Lists the jobs for the backend of an Amplify app.</p>
                */
            listBackendJobs(args: ListBackendJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListBackendJobsCommandOutput>;
            listBackendJobs(args: ListBackendJobsCommandInput, cb: (err: any, data?: ListBackendJobsCommandOutput) => void): void;
            listBackendJobs(args: ListBackendJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBackendJobsCommandOutput) => void): void;
            /**
                * <p>The list of S3 buckets in your account.</p>
                */
            listS3Buckets(args: ListS3BucketsCommandInput, options?: __HttpHandlerOptions): Promise<ListS3BucketsCommandOutput>;
            listS3Buckets(args: ListS3BucketsCommandInput, cb: (err: any, data?: ListS3BucketsCommandOutput) => void): void;
            listS3Buckets(args: ListS3BucketsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListS3BucketsCommandOutput) => void): void;
            /**
                * <p>Removes all backend environments from your Amplify project.</p>
                */
            removeAllBackends(args: RemoveAllBackendsCommandInput, options?: __HttpHandlerOptions): Promise<RemoveAllBackendsCommandOutput>;
            removeAllBackends(args: RemoveAllBackendsCommandInput, cb: (err: any, data?: RemoveAllBackendsCommandOutput) => void): void;
            removeAllBackends(args: RemoveAllBackendsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveAllBackendsCommandOutput) => void): void;
            /**
                * <p>Removes the AWS resources required to access the Amplify Admin UI.</p>
                */
            removeBackendConfig(args: RemoveBackendConfigCommandInput, options?: __HttpHandlerOptions): Promise<RemoveBackendConfigCommandOutput>;
            removeBackendConfig(args: RemoveBackendConfigCommandInput, cb: (err: any, data?: RemoveBackendConfigCommandOutput) => void): void;
            removeBackendConfig(args: RemoveBackendConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveBackendConfigCommandOutput) => void): void;
            /**
                * <p>Updates an existing backend API resource.</p>
                */
            updateBackendAPI(args: UpdateBackendAPICommandInput, options?: __HttpHandlerOptions): Promise<UpdateBackendAPICommandOutput>;
            updateBackendAPI(args: UpdateBackendAPICommandInput, cb: (err: any, data?: UpdateBackendAPICommandOutput) => void): void;
            updateBackendAPI(args: UpdateBackendAPICommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBackendAPICommandOutput) => void): void;
            /**
                * <p>Updates an existing backend authentication resource.</p>
                */
            updateBackendAuth(args: UpdateBackendAuthCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBackendAuthCommandOutput>;
            updateBackendAuth(args: UpdateBackendAuthCommandInput, cb: (err: any, data?: UpdateBackendAuthCommandOutput) => void): void;
            updateBackendAuth(args: UpdateBackendAuthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBackendAuthCommandOutput) => void): void;
            /**
                * <p>Updates the AWS resources required to access the Amplify Admin UI.</p>
                */
            updateBackendConfig(args: UpdateBackendConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBackendConfigCommandOutput>;
            updateBackendConfig(args: UpdateBackendConfigCommandInput, cb: (err: any, data?: UpdateBackendConfigCommandOutput) => void): void;
            updateBackendConfig(args: UpdateBackendConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBackendConfigCommandOutput) => void): void;
            /**
                * <p>Updates a specific job.</p>
                */
            updateBackendJob(args: UpdateBackendJobCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBackendJobCommandOutput>;
            updateBackendJob(args: UpdateBackendJobCommandInput, cb: (err: any, data?: UpdateBackendJobCommandOutput) => void): void;
            updateBackendJob(args: UpdateBackendJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBackendJobCommandOutput) => void): void;
            /**
                * <p>Updates an existing backend storage resource.</p>
                */
            updateBackendStorage(args: UpdateBackendStorageCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBackendStorageCommandOutput>;
            updateBackendStorage(args: UpdateBackendStorageCommandInput, cb: (err: any, data?: UpdateBackendStorageCommandOutput) => void): void;
            updateBackendStorage(args: UpdateBackendStorageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBackendStorageCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CloneBackendCommandInput, CloneBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CloneBackendCommand";
    import { CreateBackendAPICommandInput, CreateBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAPICommand";
    import { CreateBackendAuthCommandInput, CreateBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAuthCommand";
    import { CreateBackendCommandInput, CreateBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendCommand";
    import { CreateBackendConfigCommandInput, CreateBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendConfigCommand";
    import { CreateBackendStorageCommandInput, CreateBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendStorageCommand";
    import { CreateTokenCommandInput, CreateTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateTokenCommand";
    import { DeleteBackendAPICommandInput, DeleteBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAPICommand";
    import { DeleteBackendAuthCommandInput, DeleteBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAuthCommand";
    import { DeleteBackendCommandInput, DeleteBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendCommand";
    import { DeleteBackendStorageCommandInput, DeleteBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendStorageCommand";
    import { DeleteTokenCommandInput, DeleteTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteTokenCommand";
    import { GenerateBackendAPIModelsCommandInput, GenerateBackendAPIModelsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GenerateBackendAPIModelsCommand";
    import { GetBackendAPICommandInput, GetBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPICommand";
    import { GetBackendAPIModelsCommandInput, GetBackendAPIModelsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPIModelsCommand";
    import { GetBackendAuthCommandInput, GetBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAuthCommand";
    import { GetBackendCommandInput, GetBackendCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendCommand";
    import { GetBackendJobCommandInput, GetBackendJobCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendJobCommand";
    import { GetBackendStorageCommandInput, GetBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendStorageCommand";
    import { GetTokenCommandInput, GetTokenCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetTokenCommand";
    import { ImportBackendAuthCommandInput, ImportBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendAuthCommand";
    import { ImportBackendStorageCommandInput, ImportBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendStorageCommand";
    import { ListBackendJobsCommandInput, ListBackendJobsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListBackendJobsCommand";
    import { ListS3BucketsCommandInput, ListS3BucketsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListS3BucketsCommand";
    import { RemoveAllBackendsCommandInput, RemoveAllBackendsCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveAllBackendsCommand";
    import { RemoveBackendConfigCommandInput, RemoveBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveBackendConfigCommand";
    import { UpdateBackendAPICommandInput, UpdateBackendAPICommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAPICommand";
    import { UpdateBackendAuthCommandInput, UpdateBackendAuthCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAuthCommand";
    import { UpdateBackendConfigCommandInput, UpdateBackendConfigCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendConfigCommand";
    import { UpdateBackendJobCommandInput, UpdateBackendJobCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendJobCommand";
    import { UpdateBackendStorageCommandInput, UpdateBackendStorageCommandOutput } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendStorageCommand";
    export type ServiceInputTypes = CloneBackendCommandInput | CreateBackendAPICommandInput | CreateBackendAuthCommandInput | CreateBackendCommandInput | CreateBackendConfigCommandInput | CreateBackendStorageCommandInput | CreateTokenCommandInput | DeleteBackendAPICommandInput | DeleteBackendAuthCommandInput | DeleteBackendCommandInput | DeleteBackendStorageCommandInput | DeleteTokenCommandInput | GenerateBackendAPIModelsCommandInput | GetBackendAPICommandInput | GetBackendAPIModelsCommandInput | GetBackendAuthCommandInput | GetBackendCommandInput | GetBackendJobCommandInput | GetBackendStorageCommandInput | GetTokenCommandInput | ImportBackendAuthCommandInput | ImportBackendStorageCommandInput | ListBackendJobsCommandInput | ListS3BucketsCommandInput | RemoveAllBackendsCommandInput | RemoveBackendConfigCommandInput | UpdateBackendAPICommandInput | UpdateBackendAuthCommandInput | UpdateBackendConfigCommandInput | UpdateBackendJobCommandInput | UpdateBackendStorageCommandInput;
    export type ServiceOutputTypes = CloneBackendCommandOutput | CreateBackendAPICommandOutput | CreateBackendAuthCommandOutput | CreateBackendCommandOutput | CreateBackendConfigCommandOutput | CreateBackendStorageCommandOutput | CreateTokenCommandOutput | DeleteBackendAPICommandOutput | DeleteBackendAuthCommandOutput | DeleteBackendCommandOutput | DeleteBackendStorageCommandOutput | DeleteTokenCommandOutput | GenerateBackendAPIModelsCommandOutput | GetBackendAPICommandOutput | GetBackendAPIModelsCommandOutput | GetBackendAuthCommandOutput | GetBackendCommandOutput | GetBackendJobCommandOutput | GetBackendStorageCommandOutput | GetTokenCommandOutput | ImportBackendAuthCommandOutput | ImportBackendStorageCommandOutput | ListBackendJobsCommandOutput | ListS3BucketsCommandOutput | RemoveAllBackendsCommandOutput | RemoveBackendConfigCommandOutput | UpdateBackendAPICommandOutput | UpdateBackendAuthCommandOutput | UpdateBackendConfigCommandOutput | UpdateBackendJobCommandOutput | UpdateBackendStorageCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type AmplifyBackendClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of AmplifyBackendClient class constructor that set the region, credentials and other options.
        */
    export interface AmplifyBackendClientConfig extends AmplifyBackendClientConfigType {
    }
    type AmplifyBackendClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of AmplifyBackendClient class. This is resolved and normalized from the {@link AmplifyBackendClientConfig | constructor configuration interface}.
        */
    export interface AmplifyBackendClientResolvedConfig extends AmplifyBackendClientResolvedConfigType {
    }
    /**
        * <p>AWS Amplify Admin API</p>
        */
    export class AmplifyBackendClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, AmplifyBackendClientResolvedConfig> {
            /**
                * The resolved configuration of AmplifyBackendClient class. This is resolved and normalized from the {@link AmplifyBackendClientConfig | constructor configuration interface}.
                */
            readonly config: AmplifyBackendClientResolvedConfig;
            constructor(configuration: AmplifyBackendClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CloneBackendCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CloneBackendRequest, CloneBackendResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CloneBackendCommandInput extends CloneBackendRequest {
    }
    export interface CloneBackendCommandOutput extends CloneBackendResponse, __MetadataBearer {
    }
    /**
        * <p>This operation clones an existing backend.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CloneBackendCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CloneBackendCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CloneBackendCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CloneBackendCommandInput} for command's `input` shape.
        * @see {@link CloneBackendCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CloneBackendCommand extends $Command<CloneBackendCommandInput, CloneBackendCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CloneBackendCommandInput;
            constructor(input: CloneBackendCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CloneBackendCommandInput, CloneBackendCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAPICommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateBackendAPIRequest, CreateBackendAPIResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateBackendAPICommandInput extends CreateBackendAPIRequest {
    }
    export interface CreateBackendAPICommandOutput extends CreateBackendAPIResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new backend API resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateBackendAPICommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateBackendAPICommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateBackendAPICommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendAPICommandInput} for command's `input` shape.
        * @see {@link CreateBackendAPICommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateBackendAPICommand extends $Command<CreateBackendAPICommandInput, CreateBackendAPICommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateBackendAPICommandInput;
            constructor(input: CreateBackendAPICommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendAPICommandInput, CreateBackendAPICommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendAuthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateBackendAuthRequest, CreateBackendAuthResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateBackendAuthCommandInput extends CreateBackendAuthRequest {
    }
    export interface CreateBackendAuthCommandOutput extends CreateBackendAuthResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new backend authentication resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateBackendAuthCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateBackendAuthCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateBackendAuthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendAuthCommandInput} for command's `input` shape.
        * @see {@link CreateBackendAuthCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateBackendAuthCommand extends $Command<CreateBackendAuthCommandInput, CreateBackendAuthCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateBackendAuthCommandInput;
            constructor(input: CreateBackendAuthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendAuthCommandInput, CreateBackendAuthCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateBackendRequest, CreateBackendResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateBackendCommandInput extends CreateBackendRequest {
    }
    export interface CreateBackendCommandOutput extends CreateBackendResponse, __MetadataBearer {
    }
    /**
        * <p>This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateBackendCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateBackendCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateBackendCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendCommandInput} for command's `input` shape.
        * @see {@link CreateBackendCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateBackendCommand extends $Command<CreateBackendCommandInput, CreateBackendCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateBackendCommandInput;
            constructor(input: CreateBackendCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendCommandInput, CreateBackendCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateBackendConfigRequest, CreateBackendConfigResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateBackendConfigCommandInput extends CreateBackendConfigRequest {
    }
    export interface CreateBackendConfigCommandOutput extends CreateBackendConfigResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a config object for a backend.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateBackendConfigCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateBackendConfigCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateBackendConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendConfigCommandInput} for command's `input` shape.
        * @see {@link CreateBackendConfigCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateBackendConfigCommand extends $Command<CreateBackendConfigCommandInput, CreateBackendConfigCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateBackendConfigCommandInput;
            constructor(input: CreateBackendConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendConfigCommandInput, CreateBackendConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateBackendStorageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateBackendStorageRequest, CreateBackendStorageResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateBackendStorageCommandInput extends CreateBackendStorageRequest {
    }
    export interface CreateBackendStorageCommandOutput extends CreateBackendStorageResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a backend storage resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateBackendStorageCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateBackendStorageCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateBackendStorageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBackendStorageCommandInput} for command's `input` shape.
        * @see {@link CreateBackendStorageCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateBackendStorageCommand extends $Command<CreateBackendStorageCommandInput, CreateBackendStorageCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateBackendStorageCommandInput;
            constructor(input: CreateBackendStorageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBackendStorageCommandInput, CreateBackendStorageCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/CreateTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { CreateTokenRequest, CreateTokenResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface CreateTokenCommandInput extends CreateTokenRequest {
    }
    export interface CreateTokenCommandOutput extends CreateTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, CreateTokenCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, CreateTokenCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new CreateTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTokenCommandInput} for command's `input` shape.
        * @see {@link CreateTokenCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class CreateTokenCommand extends $Command<CreateTokenCommandInput, CreateTokenCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: CreateTokenCommandInput;
            constructor(input: CreateTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTokenCommandInput, CreateTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAPICommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { DeleteBackendAPIRequest, DeleteBackendAPIResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface DeleteBackendAPICommandInput extends DeleteBackendAPIRequest {
    }
    export interface DeleteBackendAPICommandOutput extends DeleteBackendAPIResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an existing backend API resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, DeleteBackendAPICommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, DeleteBackendAPICommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new DeleteBackendAPICommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBackendAPICommandInput} for command's `input` shape.
        * @see {@link DeleteBackendAPICommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class DeleteBackendAPICommand extends $Command<DeleteBackendAPICommandInput, DeleteBackendAPICommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: DeleteBackendAPICommandInput;
            constructor(input: DeleteBackendAPICommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBackendAPICommandInput, DeleteBackendAPICommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendAuthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { DeleteBackendAuthRequest, DeleteBackendAuthResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface DeleteBackendAuthCommandInput extends DeleteBackendAuthRequest {
    }
    export interface DeleteBackendAuthCommandOutput extends DeleteBackendAuthResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an existing backend authentication resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, DeleteBackendAuthCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, DeleteBackendAuthCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new DeleteBackendAuthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBackendAuthCommandInput} for command's `input` shape.
        * @see {@link DeleteBackendAuthCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class DeleteBackendAuthCommand extends $Command<DeleteBackendAuthCommandInput, DeleteBackendAuthCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: DeleteBackendAuthCommandInput;
            constructor(input: DeleteBackendAuthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBackendAuthCommandInput, DeleteBackendAuthCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { DeleteBackendRequest, DeleteBackendResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface DeleteBackendCommandInput extends DeleteBackendRequest {
    }
    export interface DeleteBackendCommandOutput extends DeleteBackendResponse, __MetadataBearer {
    }
    /**
        * <p>Removes an existing environment from your Amplify project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, DeleteBackendCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, DeleteBackendCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new DeleteBackendCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBackendCommandInput} for command's `input` shape.
        * @see {@link DeleteBackendCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class DeleteBackendCommand extends $Command<DeleteBackendCommandInput, DeleteBackendCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: DeleteBackendCommandInput;
            constructor(input: DeleteBackendCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBackendCommandInput, DeleteBackendCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteBackendStorageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { DeleteBackendStorageRequest, DeleteBackendStorageResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface DeleteBackendStorageCommandInput extends DeleteBackendStorageRequest {
    }
    export interface DeleteBackendStorageCommandOutput extends DeleteBackendStorageResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the specified backend storage resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, DeleteBackendStorageCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, DeleteBackendStorageCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new DeleteBackendStorageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBackendStorageCommandInput} for command's `input` shape.
        * @see {@link DeleteBackendStorageCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class DeleteBackendStorageCommand extends $Command<DeleteBackendStorageCommandInput, DeleteBackendStorageCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: DeleteBackendStorageCommandInput;
            constructor(input: DeleteBackendStorageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBackendStorageCommandInput, DeleteBackendStorageCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/DeleteTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { DeleteTokenRequest, DeleteTokenResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface DeleteTokenCommandInput extends DeleteTokenRequest {
    }
    export interface DeleteTokenCommandOutput extends DeleteTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the challenge token based on the given appId and sessionId.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, DeleteTokenCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, DeleteTokenCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new DeleteTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTokenCommandInput} for command's `input` shape.
        * @see {@link DeleteTokenCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class DeleteTokenCommand extends $Command<DeleteTokenCommandInput, DeleteTokenCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: DeleteTokenCommandInput;
            constructor(input: DeleteTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTokenCommandInput, DeleteTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GenerateBackendAPIModelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GenerateBackendAPIModelsRequest, GenerateBackendAPIModelsResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GenerateBackendAPIModelsCommandInput extends GenerateBackendAPIModelsRequest {
    }
    export interface GenerateBackendAPIModelsCommandOutput extends GenerateBackendAPIModelsResponse, __MetadataBearer {
    }
    /**
        * <p>Generates a model schema for an existing backend API resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GenerateBackendAPIModelsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GenerateBackendAPIModelsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GenerateBackendAPIModelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GenerateBackendAPIModelsCommandInput} for command's `input` shape.
        * @see {@link GenerateBackendAPIModelsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GenerateBackendAPIModelsCommand extends $Command<GenerateBackendAPIModelsCommandInput, GenerateBackendAPIModelsCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GenerateBackendAPIModelsCommandInput;
            constructor(input: GenerateBackendAPIModelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GenerateBackendAPIModelsCommandInput, GenerateBackendAPIModelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPICommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendAPIRequest, GetBackendAPIResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendAPICommandInput extends GetBackendAPIRequest {
    }
    export interface GetBackendAPICommandOutput extends GetBackendAPIResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the details for a backend API.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendAPICommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendAPICommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendAPICommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendAPICommandInput} for command's `input` shape.
        * @see {@link GetBackendAPICommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendAPICommand extends $Command<GetBackendAPICommandInput, GetBackendAPICommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendAPICommandInput;
            constructor(input: GetBackendAPICommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendAPICommandInput, GetBackendAPICommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAPIModelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendAPIModelsRequest, GetBackendAPIModelsResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendAPIModelsCommandInput extends GetBackendAPIModelsRequest {
    }
    export interface GetBackendAPIModelsCommandOutput extends GetBackendAPIModelsResponse, __MetadataBearer {
    }
    /**
        * <p>Generates a model schema for existing backend API resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendAPIModelsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendAPIModelsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendAPIModelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendAPIModelsCommandInput} for command's `input` shape.
        * @see {@link GetBackendAPIModelsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendAPIModelsCommand extends $Command<GetBackendAPIModelsCommandInput, GetBackendAPIModelsCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendAPIModelsCommandInput;
            constructor(input: GetBackendAPIModelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendAPIModelsCommandInput, GetBackendAPIModelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendAuthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendAuthRequest, GetBackendAuthResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendAuthCommandInput extends GetBackendAuthRequest {
    }
    export interface GetBackendAuthCommandOutput extends GetBackendAuthResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a backend auth details.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendAuthCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendAuthCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendAuthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendAuthCommandInput} for command's `input` shape.
        * @see {@link GetBackendAuthCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendAuthCommand extends $Command<GetBackendAuthCommandInput, GetBackendAuthCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendAuthCommandInput;
            constructor(input: GetBackendAuthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendAuthCommandInput, GetBackendAuthCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendRequest, GetBackendResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendCommandInput extends GetBackendRequest {
    }
    export interface GetBackendCommandOutput extends GetBackendResponse, __MetadataBearer {
    }
    /**
        * <p>Provides project-level details for your Amplify UI project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendCommandInput} for command's `input` shape.
        * @see {@link GetBackendCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendCommand extends $Command<GetBackendCommandInput, GetBackendCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendCommandInput;
            constructor(input: GetBackendCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendCommandInput, GetBackendCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendJobRequest, GetBackendJobResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendJobCommandInput extends GetBackendJobRequest {
    }
    export interface GetBackendJobCommandOutput extends GetBackendJobResponse, __MetadataBearer {
    }
    /**
        * <p>Returns information about a specific job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendJobCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendJobCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendJobCommandInput} for command's `input` shape.
        * @see {@link GetBackendJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendJobCommand extends $Command<GetBackendJobCommandInput, GetBackendJobCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendJobCommandInput;
            constructor(input: GetBackendJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendJobCommandInput, GetBackendJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetBackendStorageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetBackendStorageRequest, GetBackendStorageResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetBackendStorageCommandInput extends GetBackendStorageRequest {
    }
    export interface GetBackendStorageCommandOutput extends GetBackendStorageResponse, __MetadataBearer {
    }
    /**
        * <p>Gets details for a backend storage resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetBackendStorageCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetBackendStorageCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetBackendStorageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBackendStorageCommandInput} for command's `input` shape.
        * @see {@link GetBackendStorageCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetBackendStorageCommand extends $Command<GetBackendStorageCommandInput, GetBackendStorageCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetBackendStorageCommandInput;
            constructor(input: GetBackendStorageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBackendStorageCommandInput, GetBackendStorageCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/GetTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { GetTokenRequest, GetTokenResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface GetTokenCommandInput extends GetTokenRequest {
    }
    export interface GetTokenCommandOutput extends GetTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the challenge token based on the given appId and sessionId.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, GetTokenCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, GetTokenCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new GetTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTokenCommandInput} for command's `input` shape.
        * @see {@link GetTokenCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class GetTokenCommand extends $Command<GetTokenCommandInput, GetTokenCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: GetTokenCommandInput;
            constructor(input: GetTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTokenCommandInput, GetTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendAuthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { ImportBackendAuthRequest, ImportBackendAuthResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface ImportBackendAuthCommandInput extends ImportBackendAuthRequest {
    }
    export interface ImportBackendAuthCommandOutput extends ImportBackendAuthResponse, __MetadataBearer {
    }
    /**
        * <p>Imports an existing backend authentication resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, ImportBackendAuthCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, ImportBackendAuthCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new ImportBackendAuthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ImportBackendAuthCommandInput} for command's `input` shape.
        * @see {@link ImportBackendAuthCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class ImportBackendAuthCommand extends $Command<ImportBackendAuthCommandInput, ImportBackendAuthCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: ImportBackendAuthCommandInput;
            constructor(input: ImportBackendAuthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportBackendAuthCommandInput, ImportBackendAuthCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ImportBackendStorageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { ImportBackendStorageRequest, ImportBackendStorageResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface ImportBackendStorageCommandInput extends ImportBackendStorageRequest {
    }
    export interface ImportBackendStorageCommandOutput extends ImportBackendStorageResponse, __MetadataBearer {
    }
    /**
        * <p>Imports an existing backend storage resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, ImportBackendStorageCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, ImportBackendStorageCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new ImportBackendStorageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ImportBackendStorageCommandInput} for command's `input` shape.
        * @see {@link ImportBackendStorageCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class ImportBackendStorageCommand extends $Command<ImportBackendStorageCommandInput, ImportBackendStorageCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: ImportBackendStorageCommandInput;
            constructor(input: ImportBackendStorageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportBackendStorageCommandInput, ImportBackendStorageCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListBackendJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { ListBackendJobsRequest, ListBackendJobsResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface ListBackendJobsCommandInput extends ListBackendJobsRequest {
    }
    export interface ListBackendJobsCommandOutput extends ListBackendJobsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the jobs for the backend of an Amplify app.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, ListBackendJobsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, ListBackendJobsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new ListBackendJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBackendJobsCommandInput} for command's `input` shape.
        * @see {@link ListBackendJobsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class ListBackendJobsCommand extends $Command<ListBackendJobsCommandInput, ListBackendJobsCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: ListBackendJobsCommandInput;
            constructor(input: ListBackendJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBackendJobsCommandInput, ListBackendJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/ListS3BucketsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { ListS3BucketsRequest, ListS3BucketsResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface ListS3BucketsCommandInput extends ListS3BucketsRequest {
    }
    export interface ListS3BucketsCommandOutput extends ListS3BucketsResponse, __MetadataBearer {
    }
    /**
        * <p>The list of S3 buckets in your account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, ListS3BucketsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, ListS3BucketsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new ListS3BucketsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListS3BucketsCommandInput} for command's `input` shape.
        * @see {@link ListS3BucketsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class ListS3BucketsCommand extends $Command<ListS3BucketsCommandInput, ListS3BucketsCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: ListS3BucketsCommandInput;
            constructor(input: ListS3BucketsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListS3BucketsCommandInput, ListS3BucketsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveAllBackendsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { RemoveAllBackendsRequest, RemoveAllBackendsResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface RemoveAllBackendsCommandInput extends RemoveAllBackendsRequest {
    }
    export interface RemoveAllBackendsCommandOutput extends RemoveAllBackendsResponse, __MetadataBearer {
    }
    /**
        * <p>Removes all backend environments from your Amplify project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, RemoveAllBackendsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, RemoveAllBackendsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new RemoveAllBackendsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveAllBackendsCommandInput} for command's `input` shape.
        * @see {@link RemoveAllBackendsCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class RemoveAllBackendsCommand extends $Command<RemoveAllBackendsCommandInput, RemoveAllBackendsCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: RemoveAllBackendsCommandInput;
            constructor(input: RemoveAllBackendsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveAllBackendsCommandInput, RemoveAllBackendsCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/RemoveBackendConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { RemoveBackendConfigRequest, RemoveBackendConfigResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface RemoveBackendConfigCommandInput extends RemoveBackendConfigRequest {
    }
    export interface RemoveBackendConfigCommandOutput extends RemoveBackendConfigResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the AWS resources required to access the Amplify Admin UI.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, RemoveBackendConfigCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, RemoveBackendConfigCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new RemoveBackendConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveBackendConfigCommandInput} for command's `input` shape.
        * @see {@link RemoveBackendConfigCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class RemoveBackendConfigCommand extends $Command<RemoveBackendConfigCommandInput, RemoveBackendConfigCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: RemoveBackendConfigCommandInput;
            constructor(input: RemoveBackendConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveBackendConfigCommandInput, RemoveBackendConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAPICommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { UpdateBackendAPIRequest, UpdateBackendAPIResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface UpdateBackendAPICommandInput extends UpdateBackendAPIRequest {
    }
    export interface UpdateBackendAPICommandOutput extends UpdateBackendAPIResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing backend API resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, UpdateBackendAPICommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, UpdateBackendAPICommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new UpdateBackendAPICommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBackendAPICommandInput} for command's `input` shape.
        * @see {@link UpdateBackendAPICommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class UpdateBackendAPICommand extends $Command<UpdateBackendAPICommandInput, UpdateBackendAPICommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: UpdateBackendAPICommandInput;
            constructor(input: UpdateBackendAPICommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBackendAPICommandInput, UpdateBackendAPICommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendAuthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { UpdateBackendAuthRequest, UpdateBackendAuthResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface UpdateBackendAuthCommandInput extends UpdateBackendAuthRequest {
    }
    export interface UpdateBackendAuthCommandOutput extends UpdateBackendAuthResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing backend authentication resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, UpdateBackendAuthCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, UpdateBackendAuthCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new UpdateBackendAuthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBackendAuthCommandInput} for command's `input` shape.
        * @see {@link UpdateBackendAuthCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class UpdateBackendAuthCommand extends $Command<UpdateBackendAuthCommandInput, UpdateBackendAuthCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: UpdateBackendAuthCommandInput;
            constructor(input: UpdateBackendAuthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBackendAuthCommandInput, UpdateBackendAuthCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { UpdateBackendConfigRequest, UpdateBackendConfigResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface UpdateBackendConfigCommandInput extends UpdateBackendConfigRequest {
    }
    export interface UpdateBackendConfigCommandOutput extends UpdateBackendConfigResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the AWS resources required to access the Amplify Admin UI.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, UpdateBackendConfigCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, UpdateBackendConfigCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new UpdateBackendConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBackendConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateBackendConfigCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class UpdateBackendConfigCommand extends $Command<UpdateBackendConfigCommandInput, UpdateBackendConfigCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: UpdateBackendConfigCommandInput;
            constructor(input: UpdateBackendConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBackendConfigCommandInput, UpdateBackendConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { UpdateBackendJobRequest, UpdateBackendJobResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface UpdateBackendJobCommandInput extends UpdateBackendJobRequest {
    }
    export interface UpdateBackendJobCommandOutput extends UpdateBackendJobResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a specific job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, UpdateBackendJobCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, UpdateBackendJobCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new UpdateBackendJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBackendJobCommandInput} for command's `input` shape.
        * @see {@link UpdateBackendJobCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class UpdateBackendJobCommand extends $Command<UpdateBackendJobCommandInput, UpdateBackendJobCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: UpdateBackendJobCommandInput;
            constructor(input: UpdateBackendJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBackendJobCommandInput, UpdateBackendJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/commands/UpdateBackendStorageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/AmplifyBackendClient";
    import { UpdateBackendStorageRequest, UpdateBackendStorageResponse } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0";
    export interface UpdateBackendStorageCommandInput extends UpdateBackendStorageRequest {
    }
    export interface UpdateBackendStorageCommandOutput extends UpdateBackendStorageResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing backend storage resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { AmplifyBackendClient, UpdateBackendStorageCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
        * // const { AmplifyBackendClient, UpdateBackendStorageCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
        * const client = new AmplifyBackendClient(config);
        * const command = new UpdateBackendStorageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBackendStorageCommandInput} for command's `input` shape.
        * @see {@link UpdateBackendStorageCommandOutput} for command's `response` shape.
        * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
        *
        */
    export class UpdateBackendStorageCommand extends $Command<UpdateBackendStorageCommandInput, UpdateBackendStorageCommandOutput, AmplifyBackendClientResolvedConfig> {
            readonly input: UpdateBackendStorageCommandInput;
            constructor(input: UpdateBackendStorageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AmplifyBackendClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBackendStorageCommandInput, UpdateBackendStorageCommandOutput>;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { AmplifyBackendServiceException as __BaseException } from "@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/AmplifyBackendServiceException";
    export enum AdditionalConstraintsElement {
            REQUIRE_DIGIT = "REQUIRE_DIGIT",
            REQUIRE_LOWERCASE = "REQUIRE_LOWERCASE",
            REQUIRE_SYMBOL = "REQUIRE_SYMBOL",
            REQUIRE_UPPERCASE = "REQUIRE_UPPERCASE"
    }
    /**
        * <p>An error returned if a request is not formed properly.</p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            /**
                * <p>An error message to inform that the request failed.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    /**
        * <p>The request body for CloneBackend.</p>
        */
    export interface CloneBackendRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of the destination backend environment to be created.</p>
                */
            TargetEnvironmentName: string | undefined;
    }
    export namespace CloneBackendRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloneBackendRequest) => any;
    }
    export interface CloneBackendResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CloneBackendResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloneBackendResponse) => any;
    }
    /**
        * <p>An error returned if there's a temporary issue with the service.</p>
        */
    export class GatewayTimeoutException extends __BaseException {
            readonly name: "GatewayTimeoutException";
            readonly $fault: "server";
            /**
                * <p>An error message to inform that the request failed.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<GatewayTimeoutException, __BaseException>);
    }
    /**
        * <p>An error returned when a specific resource type is not found.</p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            /**
                * <p>An error message to inform that the request has failed.</p>
                */
            Message?: string;
            /**
                * <p>The type of resource that is not found.</p>
                */
            ResourceType?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    /**
        * <p>An error that is returned when a limit of a specific type has been exceeded.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            /**
                * <p>The type of limit that was exceeded.</p>
                */
            LimitType?: string;
            /**
                * <p>An error message to inform that the request has failed.</p>
                */
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    /**
        * <p>Defines the resource configuration for the data model in your Amplify project.</p>
        */
    export interface ResourceConfig {
    }
    export namespace ResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceConfig) => any;
    }
    /**
        * <p>The request body for CreateBackend.</p>
        */
    export interface CreateBackendRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the app.</p>
                */
            AppName: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for creating a backend.</p>
                */
            ResourceConfig?: ResourceConfig;
            /**
                * <p>The name of the resource.</p>
                */
            ResourceName?: string;
    }
    export namespace CreateBackendRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendRequest) => any;
    }
    export interface CreateBackendResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CreateBackendResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendResponse) => any;
    }
    export enum Mode {
            AMAZON_COGNITO_USER_POOLS = "AMAZON_COGNITO_USER_POOLS",
            API_KEY = "API_KEY",
            AWS_IAM = "AWS_IAM",
            OPENID_CONNECT = "OPENID_CONNECT"
    }
    /**
        * <p>The authentication settings for accessing provisioned data models in your Amplify project.</p>
        */
    export interface BackendAPIAppSyncAuthSettings {
            /**
                * <p>The Amazon Cognito user pool ID, if Amazon Cognito was used as an authentication setting to access your data models.</p>
                */
            CognitoUserPoolId?: string;
            /**
                * <p>The API key description for API_KEY, if it was used as an authentication mechanism to access your data models.</p>
                */
            Description?: string;
            /**
                * <p>The API key expiration time for API_KEY, if it was used as an authentication mechanism to access your data models.</p>
                */
            ExpirationTime?: number;
            /**
                * <p>The expiry time for the OpenID authentication mechanism.</p>
                */
            OpenIDAuthTTL?: string;
            /**
                * <p>The clientID for openID, if openID was used as an authentication setting to access your data models.</p>
                */
            OpenIDClientId?: string;
            /**
                * <p>The expiry time for the OpenID authentication mechanism.</p>
                */
            OpenIDIatTTL?: string;
            /**
                * <p>The openID issuer URL, if openID was used as an authentication setting to access your data models.</p>
                */
            OpenIDIssueURL?: string;
            /**
                * <p>The OpenID provider name, if OpenID was used as an authentication mechanism to access your data models.</p>
                */
            OpenIDProviderName?: string;
    }
    export namespace BackendAPIAppSyncAuthSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAPIAppSyncAuthSettings) => any;
    }
    /**
        * <p>Describes the auth types for your configured data models.</p>
        */
    export interface BackendAPIAuthType {
            /**
                * <p>Describes the authentication mode.</p>
                */
            Mode?: Mode | string;
            /**
                * <p>Describes settings for the authentication mode.</p>
                */
            Settings?: BackendAPIAppSyncAuthSettings;
    }
    export namespace BackendAPIAuthType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAPIAuthType) => any;
    }
    export enum ResolutionStrategy {
            AUTOMERGE = "AUTOMERGE",
            LAMBDA = "LAMBDA",
            NONE = "NONE",
            OPTIMISTIC_CONCURRENCY = "OPTIMISTIC_CONCURRENCY"
    }
    /**
        * <p>Describes the conflict resolution configuration for your data model configured in your Amplify project.</p>
        */
    export interface BackendAPIConflictResolution {
            /**
                * <p>The strategy for conflict resolution.</p>
                */
            ResolutionStrategy?: ResolutionStrategy | string;
    }
    export namespace BackendAPIConflictResolution {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAPIConflictResolution) => any;
    }
    /**
        * <p>The resource config for the data model, configured as a part of the Amplify project.</p>
        */
    export interface BackendAPIResourceConfig {
            /**
                * <p>Additional authentication methods used to interact with your data models.</p>
                */
            AdditionalAuthTypes?: BackendAPIAuthType[];
            /**
                * <p>The API name used to interact with the data model, configured as a part of your Amplify project.</p>
                */
            ApiName?: string;
            /**
                * <p>The conflict resolution strategy for your data stored in the data models.</p>
                */
            ConflictResolution?: BackendAPIConflictResolution;
            /**
                * <p>The default authentication type for interacting with the configured data models in your Amplify project.</p>
                */
            DefaultAuthType?: BackendAPIAuthType;
            /**
                * <p>The service used to provision and interact with the data model.</p>
                */
            Service?: string;
            /**
                * <p>The definition of the data model in the annotated transform of the GraphQL schema.</p>
                */
            TransformSchema?: string;
    }
    export namespace BackendAPIResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAPIResourceConfig) => any;
    }
    /**
        * <p>The request body for CreateBackendAPI.</p>
        */
    export interface CreateBackendAPIRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for this request.</p>
                */
            ResourceConfig: BackendAPIResourceConfig | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace CreateBackendAPIRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAPIRequest) => any;
    }
    export interface CreateBackendAPIResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CreateBackendAPIResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAPIResponse) => any;
    }
    export enum AuthResources {
            IDENTITY_POOL_AND_USER_POOL = "IDENTITY_POOL_AND_USER_POOL",
            USER_POOL_ONLY = "USER_POOL_ONLY"
    }
    /**
        * <p>Describes authorization configurations for the auth resources, configured as a part of your Amplify project.</p>
        */
    export interface CreateBackendAuthIdentityPoolConfig {
            /**
                * <p>Name of the Amazon Cognito identity pool used for authorization.</p>
                */
            IdentityPoolName: string | undefined;
            /**
                * <p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>
                */
            UnauthenticatedLogin: boolean | undefined;
    }
    export namespace CreateBackendAuthIdentityPoolConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthIdentityPoolConfig) => any;
    }
    export enum Service {
            COGNITO = "COGNITO"
    }
    export enum DeliveryMethod {
            EMAIL = "EMAIL",
            SMS = "SMS"
    }
    /**
        * <p>The configuration for the email sent when an app user forgets their password.</p>
        */
    export interface EmailSettings {
            /**
                * <p>The contents of the email message.</p>
                */
            EmailMessage?: string;
            /**
                * <p>The contents of the subject line of the email message.</p>
                */
            EmailSubject?: string;
    }
    export namespace EmailSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmailSettings) => any;
    }
    /**
        * <p>SMS settings for authentication.</p>
        */
    export interface SmsSettings {
            /**
                * <p>The contents of the SMS message.</p>
                */
            SmsMessage?: string;
    }
    export namespace SmsSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SmsSettings) => any;
    }
    /**
        * <p><b>(DEPRECATED)</b> Describes the forgot password policy for authenticating into the Amplify app.</p>
        */
    export interface CreateBackendAuthForgotPasswordConfig {
            /**
                * <p><b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.</p>
                */
            DeliveryMethod: DeliveryMethod | string | undefined;
            /**
                * <p><b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.</p>
                */
            EmailSettings?: EmailSettings;
            /**
                * <p><b>(DEPRECATED)</b> The configuration for the SMS message sent when an app user forgets their password.</p>
                */
            SmsSettings?: SmsSettings;
    }
    export namespace CreateBackendAuthForgotPasswordConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthForgotPasswordConfig) => any;
    }
    export enum MFAMode {
            OFF = "OFF",
            ON = "ON",
            OPTIONAL = "OPTIONAL"
    }
    export enum MfaTypesElement {
            SMS = "SMS",
            TOTP = "TOTP"
    }
    /**
        * <p>The settings of your MFA configuration for the backend of your Amplify project.</p>
        */
    export interface Settings {
            /**
                * <p>The supported MFA types.</p>
                */
            MfaTypes?: (MfaTypesElement | string)[];
            /**
                * <p>The body of the SMS message.</p>
                */
            SmsMessage?: string;
    }
    export namespace Settings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Settings) => any;
    }
    /**
        * <p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>
        */
    export interface CreateBackendAuthMFAConfig {
            /**
                * <p>Describes whether MFA should be [ON, OFF, or OPTIONAL] for authentication in your Amplify project.</p>
                */
            MFAMode: MFAMode | string | undefined;
            /**
                * <p>Describes the configuration settings and methods for your Amplify app users to use MFA.</p>
                */
            Settings?: Settings;
    }
    export namespace CreateBackendAuthMFAConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthMFAConfig) => any;
    }
    export enum OAuthGrantType {
            CODE = "CODE",
            IMPLICIT = "IMPLICIT"
    }
    export enum OAuthScopesElement {
            AWS_COGNITO_SIGNIN_USER_ADMIN = "AWS_COGNITO_SIGNIN_USER_ADMIN",
            EMAIL = "EMAIL",
            OPENID = "OPENID",
            PHONE = "PHONE",
            PROFILE = "PROFILE"
    }
    /**
        * <p>Describes third-party social federation configurations for allowing your app users to sign in using OAuth.</p>
        */
    export interface BackendAuthSocialProviderConfig {
            /**
                * <p>Describes the client_id, which can be obtained from the third-party social federation provider.</p>
                */
            ClientId?: string;
            /**
                * <p>Describes the client_secret, which can be obtained from third-party social federation providers.</p>
                */
            ClientSecret?: string;
    }
    export namespace BackendAuthSocialProviderConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAuthSocialProviderConfig) => any;
    }
    /**
        * <p>Describes Apple social federation configurations for allowing your app users to sign in using OAuth.</p>
        */
    export interface BackendAuthAppleProviderConfig {
            /**
                * <p>Describes the client_id (also called Services ID) that comes from Apple.</p>
                */
            ClientId?: string;
            /**
                * <p>Describes the key_id that comes from Apple.</p>
                */
            KeyId?: string;
            /**
                * <p>Describes the private_key that comes from Apple.</p>
                */
            PrivateKey?: string;
            /**
                * <p>Describes the team_id that comes from Apple.</p>
                */
            TeamId?: string;
    }
    export namespace BackendAuthAppleProviderConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendAuthAppleProviderConfig) => any;
    }
    /**
        * <p>The settings for using the social identity providers for access to your Amplify app.</p>
        */
    export interface SocialProviderSettings {
            /**
                * <p>Describes third-party social federation configurations for allowing your app users to sign in using OAuth.</p>
                */
            Facebook?: BackendAuthSocialProviderConfig;
            /**
                * <p>Describes third-party social federation configurations for allowing your app users to sign in using OAuth.</p>
                */
            Google?: BackendAuthSocialProviderConfig;
            /**
                * <p>Describes third-party social federation configurations for allowing your app users to sign in using OAuth.</p>
                */
            LoginWithAmazon?: BackendAuthSocialProviderConfig;
            /**
                * <p>Describes Apple social federation configurations for allowing your app users to sign in using OAuth.</p>
                */
            SignInWithApple?: BackendAuthAppleProviderConfig;
    }
    export namespace SocialProviderSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SocialProviderSettings) => any;
    }
    /**
        * <p>Creates the OAuth configuration for your Amplify project.</p>
        */
    export interface CreateBackendAuthOAuthConfig {
            /**
                * <p>The domain prefix for your Amplify app.</p>
                */
            DomainPrefix?: string;
            /**
                * <p>The OAuth grant type that you use to allow app users to authenticate from your Amplify app.</p>
                */
            OAuthGrantType: OAuthGrantType | string | undefined;
            /**
                * <p>List of OAuth-related flows used to allow your app users to authenticate from your Amplify app.</p>
                */
            OAuthScopes: (OAuthScopesElement | string)[] | undefined;
            /**
                * <p>The redirected URI for signing in to your Amplify app.</p>
                */
            RedirectSignInURIs: string[] | undefined;
            /**
                * <p>Redirect URLs that OAuth uses when a user signs out of an Amplify app.</p>
                */
            RedirectSignOutURIs: string[] | undefined;
            /**
                * <p>The settings for using social providers to access your Amplify app.</p>
                */
            SocialProviderSettings?: SocialProviderSettings;
    }
    export namespace CreateBackendAuthOAuthConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthOAuthConfig) => any;
    }
    /**
        * <p>The password policy configuration for the backend to your Amplify project.</p>
        */
    export interface CreateBackendAuthPasswordPolicyConfig {
            /**
                * <p>Additional constraints for the password used to access the backend of your Amplify project.</p>
                */
            AdditionalConstraints?: (AdditionalConstraintsElement | string)[];
            /**
                * <p>The minimum length of the password used to access the backend of your Amplify project.</p>
                */
            MinimumLength: number | undefined;
    }
    export namespace CreateBackendAuthPasswordPolicyConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthPasswordPolicyConfig) => any;
    }
    export enum RequiredSignUpAttributesElement {
            ADDRESS = "ADDRESS",
            BIRTHDATE = "BIRTHDATE",
            EMAIL = "EMAIL",
            FAMILY_NAME = "FAMILY_NAME",
            GENDER = "GENDER",
            GIVEN_NAME = "GIVEN_NAME",
            LOCALE = "LOCALE",
            MIDDLE_NAME = "MIDDLE_NAME",
            NAME = "NAME",
            NICKNAME = "NICKNAME",
            PHONE_NUMBER = "PHONE_NUMBER",
            PICTURE = "PICTURE",
            PREFERRED_USERNAME = "PREFERRED_USERNAME",
            PROFILE = "PROFILE",
            UPDATED_AT = "UPDATED_AT",
            WEBSITE = "WEBSITE",
            ZONE_INFO = "ZONE_INFO"
    }
    export enum SignInMethod {
            EMAIL = "EMAIL",
            EMAIL_AND_PHONE_NUMBER = "EMAIL_AND_PHONE_NUMBER",
            PHONE_NUMBER = "PHONE_NUMBER",
            USERNAME = "USERNAME"
    }
    /**
        * <p>Creates an email or SMS verification message for the auth resource configured for your Amplify project.</p>
        */
    export interface CreateBackendAuthVerificationMessageConfig {
            /**
                * <p>The type of verification message to send.</p>
                */
            DeliveryMethod: DeliveryMethod | string | undefined;
            /**
                * <p>The settings for the email message.</p>
                */
            EmailSettings?: EmailSettings;
            /**
                * <p>The settings for the SMS message.</p>
                */
            SmsSettings?: SmsSettings;
    }
    export namespace CreateBackendAuthVerificationMessageConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthVerificationMessageConfig) => any;
    }
    /**
        * <p>Describes the Amazon Cognito user pool configuration for the auth resource to be configured for your Amplify project.</p>
        */
    export interface CreateBackendAuthUserPoolConfig {
            /**
                * <p><b>(DEPRECATED)</b> Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            ForgotPassword?: CreateBackendAuthForgotPasswordConfig;
            /**
                * <p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>
                */
            Mfa?: CreateBackendAuthMFAConfig;
            /**
                * <p>Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            OAuth?: CreateBackendAuthOAuthConfig;
            /**
                * <p>Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            PasswordPolicy?: CreateBackendAuthPasswordPolicyConfig;
            /**
                * <p>The required attributes to sign up new users in the user pool.</p>
                */
            RequiredSignUpAttributes: (RequiredSignUpAttributesElement | string)[] | undefined;
            /**
                * <p>Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            SignInMethod: SignInMethod | string | undefined;
            /**
                * <p>The Amazon Cognito user pool name.</p>
                */
            UserPoolName: string | undefined;
            /**
                * <p>Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            VerificationMessage?: CreateBackendAuthVerificationMessageConfig;
    }
    export namespace CreateBackendAuthUserPoolConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthUserPoolConfig) => any;
    }
    /**
        * <p>Defines the resource configuration when creating an auth resource in your Amplify project.</p>
        */
    export interface CreateBackendAuthResourceConfig {
            /**
                * <p>Defines whether you want to configure only authentication or both authentication and authorization settings.</p>
                */
            AuthResources: AuthResources | string | undefined;
            /**
                * <p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>
                */
            IdentityPoolConfigs?: CreateBackendAuthIdentityPoolConfig;
            /**
                * <p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>
                */
            Service: Service | string | undefined;
            /**
                * <p>Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.</p>
                */
            UserPoolConfigs: CreateBackendAuthUserPoolConfig | undefined;
    }
    export namespace CreateBackendAuthResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthResourceConfig) => any;
    }
    /**
        * <p>The request body for CreateBackendAuth.</p>
        */
    export interface CreateBackendAuthRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for this request object.</p>
                */
            ResourceConfig: CreateBackendAuthResourceConfig | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace CreateBackendAuthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthRequest) => any;
    }
    export interface CreateBackendAuthResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CreateBackendAuthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendAuthResponse) => any;
    }
    /**
        * <p>The request body for CreateBackendConfig.</p>
        */
    export interface CreateBackendConfigRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The app ID for the backend manager.</p>
                */
            BackendManagerAppId?: string;
    }
    export namespace CreateBackendConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendConfigRequest) => any;
    }
    export interface CreateBackendConfigResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CreateBackendConfigResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendConfigResponse) => any;
    }
    export enum AuthenticatedElement {
            CREATE_AND_UPDATE = "CREATE_AND_UPDATE",
            DELETE = "DELETE",
            READ = "READ"
    }
    export enum UnAuthenticatedElement {
            CREATE_AND_UPDATE = "CREATE_AND_UPDATE",
            DELETE = "DELETE",
            READ = "READ"
    }
    /**
        * <p>Describes the read, write, and delete permissions users have against your storage S3 bucket.</p>
        */
    export interface BackendStoragePermissions {
            /**
                * <p>Lists all authenticated user read, write, and delete permissions for your S3 bucket.</p>
                */
            Authenticated: (AuthenticatedElement | string)[] | undefined;
            /**
                * <p>Lists all unauthenticated user read, write, and delete permissions for your S3 bucket.</p>
                */
            UnAuthenticated?: (UnAuthenticatedElement | string)[];
    }
    export namespace BackendStoragePermissions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendStoragePermissions) => any;
    }
    export enum ServiceName {
            S3 = "S3"
    }
    /**
        * <p>The resource configuration for creating backend storage.</p>
        */
    export interface CreateBackendStorageResourceConfig {
            /**
                * <p>The name of the S3 bucket.</p>
                */
            BucketName?: string;
            /**
                * <p>The authorization configuration for the storage S3 bucket.</p>
                */
            Permissions: BackendStoragePermissions | undefined;
            /**
                * <p>The name of the storage service.</p>
                */
            ServiceName: ServiceName | string | undefined;
    }
    export namespace CreateBackendStorageResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendStorageResourceConfig) => any;
    }
    /**
        * <p>The request body for CreateBackendStorage.</p>
        */
    export interface CreateBackendStorageRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for creating backend storage.</p>
                */
            ResourceConfig: CreateBackendStorageResourceConfig | undefined;
            /**
                * <p>The name of the storage resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace CreateBackendStorageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendStorageRequest) => any;
    }
    export interface CreateBackendStorageResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace CreateBackendStorageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBackendStorageResponse) => any;
    }
    export interface CreateTokenRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
    }
    export namespace CreateTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTokenRequest) => any;
    }
    export interface CreateTokenResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>One-time challenge code for authenticating into the Amplify Admin UI.</p>
                */
            ChallengeCode?: string;
            /**
                * <p>A unique ID provided when creating a new challenge token.</p>
                */
            SessionId?: string;
            /**
                * <p>The expiry time for the one-time generated token code.</p>
                */
            Ttl?: string;
    }
    export namespace CreateTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTokenResponse) => any;
    }
    export interface DeleteBackendRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
    }
    export namespace DeleteBackendRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendRequest) => any;
    }
    export interface DeleteBackendResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace DeleteBackendResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendResponse) => any;
    }
    /**
        * <p>The request body for DeleteBackendAPI.</p>
        */
    export interface DeleteBackendAPIRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>Defines the resource configuration for the data model in your Amplify project.</p>
                */
            ResourceConfig?: BackendAPIResourceConfig;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace DeleteBackendAPIRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendAPIRequest) => any;
    }
    export interface DeleteBackendAPIResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace DeleteBackendAPIResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendAPIResponse) => any;
    }
    /**
        * <p>The request body for DeleteBackendAuth.</p>
        */
    export interface DeleteBackendAuthRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace DeleteBackendAuthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendAuthRequest) => any;
    }
    export interface DeleteBackendAuthResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace DeleteBackendAuthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendAuthResponse) => any;
    }
    /**
        * <p>The request body for DeleteBackendStorage.</p>
        */
    export interface DeleteBackendStorageRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of the storage resource.</p>
                */
            ResourceName: string | undefined;
            /**
                * <p>The name of the storage service.</p>
                */
            ServiceName: ServiceName | string | undefined;
    }
    export namespace DeleteBackendStorageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendStorageRequest) => any;
    }
    export interface DeleteBackendStorageResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace DeleteBackendStorageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBackendStorageResponse) => any;
    }
    export interface DeleteTokenRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The session ID.</p>
                */
            SessionId: string | undefined;
    }
    export namespace DeleteTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTokenRequest) => any;
    }
    export interface DeleteTokenResponse {
            /**
                * <p>Indicates whether the request succeeded or failed.</p>
                */
            IsSuccess?: boolean;
    }
    export namespace DeleteTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTokenResponse) => any;
    }
    /**
        * <p>The request body for GenerateBackendAPIModels.</p>
        */
    export interface GenerateBackendAPIModelsRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace GenerateBackendAPIModelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GenerateBackendAPIModelsRequest) => any;
    }
    export interface GenerateBackendAPIModelsResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace GenerateBackendAPIModelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GenerateBackendAPIModelsResponse) => any;
    }
    /**
        * <p>The request body for GetBackend.</p>
        */
    export interface GetBackendRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
    }
    export namespace GetBackendRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendRequest) => any;
    }
    export interface GetBackendResponse {
            /**
                * <p>A stringified version of the cli.json file for your Amplify project.</p>
                */
            AmplifyFeatureFlags?: string;
            /**
                * <p>A stringified version of the current configs for your Amplify project.</p>
                */
            AmplifyMetaConfig?: string;
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the app.</p>
                */
            AppName?: string;
            /**
                * <p>A list of backend environments in an array.</p>
                */
            BackendEnvironmentList?: string[];
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request failed, this is the returned error.</p>
                */
            Error?: string;
    }
    export namespace GetBackendResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendResponse) => any;
    }
    /**
        * <p>The request body for GetBackendAPI.</p>
        */
    export interface GetBackendAPIRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>Defines the resource configuration for the data model in your Amplify project.</p>
                */
            ResourceConfig?: BackendAPIResourceConfig;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace GetBackendAPIRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAPIRequest) => any;
    }
    export interface GetBackendAPIResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The resource configuration for this response object.</p>
                */
            ResourceConfig?: BackendAPIResourceConfig;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName?: string;
    }
    export namespace GetBackendAPIResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAPIResponse) => any;
    }
    /**
        * <p>The request body for GetBackendAPIModels.</p>
        */
    export interface GetBackendAPIModelsRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace GetBackendAPIModelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAPIModelsRequest) => any;
    }
    export enum Status {
            LATEST = "LATEST",
            STALE = "STALE"
    }
    export interface GetBackendAPIModelsResponse {
            /**
                * <p>Stringified JSON of the datastore model.</p>
                */
            Models?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: Status | string;
    }
    export namespace GetBackendAPIModelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAPIModelsResponse) => any;
    }
    /**
        * <p>The request body for GetBackendAuth.</p>
        */
    export interface GetBackendAuthRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace GetBackendAuthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAuthRequest) => any;
    }
    export interface GetBackendAuthResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The resource configuration for authorization requests to the backend of your Amplify project.</p>
                */
            ResourceConfig?: CreateBackendAuthResourceConfig;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName?: string;
    }
    export namespace GetBackendAuthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendAuthResponse) => any;
    }
    export interface GetBackendJobRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The ID for the job.</p>
                */
            JobId: string | undefined;
    }
    export namespace GetBackendJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendJobRequest) => any;
    }
    export interface GetBackendJobResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The time when the job was created.</p>
                */
            CreateTime?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
            /**
                * <p>The time when the job was last updated.</p>
                */
            UpdateTime?: string;
    }
    export namespace GetBackendJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendJobResponse) => any;
    }
    /**
        * <p>The request body for GetBackendStorage.</p>
        */
    export interface GetBackendStorageRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of the storage resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace GetBackendStorageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendStorageRequest) => any;
    }
    /**
        * <p>The details for a backend storage resource.</p>
        */
    export interface GetBackendStorageResourceConfig {
            /**
                * <p>The name of the S3 bucket.</p>
                */
            BucketName?: string;
            /**
                * <p>Returns True if the storage resource has been imported.</p>
                */
            Imported: boolean | undefined;
            /**
                * <p>The authorization configuration for the storage S3 bucket.</p>
                */
            Permissions?: BackendStoragePermissions;
            /**
                * <p>The name of the storage service.</p>
                */
            ServiceName: ServiceName | string | undefined;
    }
    export namespace GetBackendStorageResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendStorageResourceConfig) => any;
    }
    export interface GetBackendStorageResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The resource configuration for the backend storage resource.</p>
                */
            ResourceConfig?: GetBackendStorageResourceConfig;
            /**
                * <p>The name of the storage resource.</p>
                */
            ResourceName?: string;
    }
    export namespace GetBackendStorageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBackendStorageResponse) => any;
    }
    export interface GetTokenRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The session ID.</p>
                */
            SessionId: string | undefined;
    }
    export namespace GetTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTokenRequest) => any;
    }
    export interface GetTokenResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The one-time challenge code for authenticating into the Amplify Admin UI.</p>
                */
            ChallengeCode?: string;
            /**
                * <p>A unique ID provided when creating a new challenge token.</p>
                */
            SessionId?: string;
            /**
                * <p>The expiry time for the one-time generated token code.</p>
                */
            Ttl?: string;
    }
    export namespace GetTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTokenResponse) => any;
    }
    /**
        * <p>The request body for ImportBackendAuth.</p>
        */
    export interface ImportBackendAuthRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The ID of the Amazon Cognito identity pool.</p>
                */
            IdentityPoolId?: string;
            /**
                * <p>The ID of the Amazon Cognito native client.</p>
                */
            NativeClientId: string | undefined;
            /**
                * <p>The ID of the Amazon Cognito user pool.</p>
                */
            UserPoolId: string | undefined;
            /**
                * <p>The ID of the Amazon Cognito web client.</p>
                */
            WebClientId: string | undefined;
    }
    export namespace ImportBackendAuthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportBackendAuthRequest) => any;
    }
    export interface ImportBackendAuthResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace ImportBackendAuthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportBackendAuthResponse) => any;
    }
    /**
        * <p>The request body for ImportBackendStorage.</p>
        */
    export interface ImportBackendStorageRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The name of the S3 bucket.</p>
                */
            BucketName?: string;
            /**
                * <p>The name of the storage service.</p>
                */
            ServiceName: ServiceName | string | undefined;
    }
    export namespace ImportBackendStorageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportBackendStorageRequest) => any;
    }
    export interface ImportBackendStorageResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace ImportBackendStorageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportBackendStorageResponse) => any;
    }
    /**
        * <p>The request body for ListBackendJobs.</p>
        */
    export interface ListBackendJobsRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The maximum number of results that you want in the response.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next set of results.</p>
                */
            NextToken?: string;
            /**
                * <p>Filters the list of response objects to include only those with the specified operation name.</p>
                */
            Operation?: string;
            /**
                * <p>Filters the list of response objects to include only those with the specified status.</p>
                */
            Status?: string;
    }
    export namespace ListBackendJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBackendJobsRequest) => any;
    }
    /**
        * <p>The response object for this operation.</p>
        */
    export interface BackendJobRespObj {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The time when the job was created.</p>
                */
            CreateTime?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
            /**
                * <p>The time when the job was last updated.</p>
                */
            UpdateTime?: string;
    }
    export namespace BackendJobRespObj {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BackendJobRespObj) => any;
    }
    export interface ListBackendJobsResponse {
            /**
                * <p>An array of jobs and their properties.</p>
                */
            Jobs?: BackendJobRespObj[];
            /**
                * <p>The token for the next set of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListBackendJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBackendJobsResponse) => any;
    }
    /**
        * <p>The request body for S3Buckets.</p>
        */
    export interface ListS3BucketsRequest {
            /**
                * <p>Reserved for future use.</p>
                */
            NextToken?: string;
    }
    export namespace ListS3BucketsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListS3BucketsRequest) => any;
    }
    /**
        * <p>Describes the metadata of the S3 bucket.</p>
        */
    export interface S3BucketInfo {
            /**
                * <p>The creation date of the S3 bucket.</p>
                */
            CreationDate?: string;
            /**
                * <p>The name of the S3 bucket.</p>
                */
            Name?: string;
    }
    export namespace S3BucketInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3BucketInfo) => any;
    }
    export interface ListS3BucketsResponse {
            /**
                * <p>The list of S3 buckets.</p>
                */
            Buckets?: S3BucketInfo[];
            /**
                * <p>Reserved for future use.</p>
                */
            NextToken?: string;
    }
    export namespace ListS3BucketsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListS3BucketsResponse) => any;
    }
    /**
        * <p>The request body for RemoveAllBackends.</p>
        */
    export interface RemoveAllBackendsRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>Cleans up the Amplify Console app if this value is set to true.</p>
                */
            CleanAmplifyApp?: boolean;
    }
    export namespace RemoveAllBackendsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveAllBackendsRequest) => any;
    }
    export interface RemoveAllBackendsResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace RemoveAllBackendsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveAllBackendsResponse) => any;
    }
    export interface RemoveBackendConfigRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
    }
    export namespace RemoveBackendConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveBackendConfigRequest) => any;
    }
    export interface RemoveBackendConfigResponse {
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
    }
    export namespace RemoveBackendConfigResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveBackendConfigResponse) => any;
    }
    /**
        * <p>The request body for UpdateBackendAPI.</p>
        */
    export interface UpdateBackendAPIRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>Defines the resource configuration for the data model in your Amplify project.</p>
                */
            ResourceConfig?: BackendAPIResourceConfig;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace UpdateBackendAPIRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAPIRequest) => any;
    }
    export interface UpdateBackendAPIResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace UpdateBackendAPIResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAPIResponse) => any;
    }
    /**
        * <p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>
        */
    export interface UpdateBackendAuthIdentityPoolConfig {
            /**
                * <p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>
                */
            UnauthenticatedLogin?: boolean;
    }
    export namespace UpdateBackendAuthIdentityPoolConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthIdentityPoolConfig) => any;
    }
    /**
        * <p><b>(DEPRECATED)</b> Describes the forgot password policy for authenticating into the Amplify app.</p>
        */
    export interface UpdateBackendAuthForgotPasswordConfig {
            /**
                * <p><b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.</p>
                */
            DeliveryMethod?: DeliveryMethod | string;
            /**
                * <p><b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.</p>
                */
            EmailSettings?: EmailSettings;
            /**
                * <p><b>(DEPRECATED)</b> The configuration for the SMS message sent when an Amplify app user forgets their password.</p>
                */
            SmsSettings?: SmsSettings;
    }
    export namespace UpdateBackendAuthForgotPasswordConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthForgotPasswordConfig) => any;
    }
    /**
        * <p>Updates the multi-factor authentication (MFA) configuration for the backend of your Amplify project.</p>
        */
    export interface UpdateBackendAuthMFAConfig {
            /**
                * <p>The MFA mode for the backend of your Amplify project.</p>
                */
            MFAMode?: MFAMode | string;
            /**
                * <p>The settings of your MFA configuration for the backend of your Amplify project.</p>
                */
            Settings?: Settings;
    }
    export namespace UpdateBackendAuthMFAConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthMFAConfig) => any;
    }
    /**
        * <p>The OAuth configurations for authenticating users into your Amplify app.</p>
        */
    export interface UpdateBackendAuthOAuthConfig {
            /**
                * <p>The Amazon Cognito domain prefix used to create a hosted UI for authentication.</p>
                */
            DomainPrefix?: string;
            /**
                * <p>The OAuth grant type to allow app users to authenticate from your Amplify app.</p>
                */
            OAuthGrantType?: OAuthGrantType | string;
            /**
                * <p>The list of OAuth-related flows that can allow users to authenticate from your Amplify app.</p>
                */
            OAuthScopes?: (OAuthScopesElement | string)[];
            /**
                * <p>Redirect URLs that OAuth uses when a user signs in to an Amplify app.</p>
                */
            RedirectSignInURIs?: string[];
            /**
                * <p>Redirect URLs that OAuth uses when a user signs out of an Amplify app.</p>
                */
            RedirectSignOutURIs?: string[];
            /**
                * <p>Describes third-party social federation configurations for allowing your users to sign in with OAuth.</p>
                */
            SocialProviderSettings?: SocialProviderSettings;
    }
    export namespace UpdateBackendAuthOAuthConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthOAuthConfig) => any;
    }
    /**
        * <p>Describes the password policy for your Amazon Cognito user pool configured as a part of your Amplify project.</p>
        */
    export interface UpdateBackendAuthPasswordPolicyConfig {
            /**
                * <p>Describes additional constraints on password requirements to sign in to the auth resource, configured as a part of your Amplify project.</p>
                */
            AdditionalConstraints?: (AdditionalConstraintsElement | string)[];
            /**
                * <p>Describes the minimum length of the password required to sign in to the auth resource, configured as a part of your Amplify project.</p>
                */
            MinimumLength?: number;
    }
    export namespace UpdateBackendAuthPasswordPolicyConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthPasswordPolicyConfig) => any;
    }
    /**
        * <p>Updates the configuration of the email or SMS message for the auth resource configured for your Amplify project.</p>
        */
    export interface UpdateBackendAuthVerificationMessageConfig {
            /**
                * <p>The type of verification message to send.</p>
                */
            DeliveryMethod: DeliveryMethod | string | undefined;
            /**
                * <p>The settings for the email message.</p>
                */
            EmailSettings?: EmailSettings;
            /**
                * <p>The settings for the SMS message.</p>
                */
            SmsSettings?: SmsSettings;
    }
    export namespace UpdateBackendAuthVerificationMessageConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthVerificationMessageConfig) => any;
    }
    /**
        * <p>Describes the Amazon Cognito user pool configuration for the authorization resource to be configured for your Amplify project on an update.</p>
        */
    export interface UpdateBackendAuthUserPoolConfig {
            /**
                * <p><b>(DEPRECATED)</b> Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            ForgotPassword?: UpdateBackendAuthForgotPasswordConfig;
            /**
                * <p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>
                */
            Mfa?: UpdateBackendAuthMFAConfig;
            /**
                * <p>Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            OAuth?: UpdateBackendAuthOAuthConfig;
            /**
                * <p>Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            PasswordPolicy?: UpdateBackendAuthPasswordPolicyConfig;
            /**
                * <p>Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>
                */
            VerificationMessage?: UpdateBackendAuthVerificationMessageConfig;
    }
    export namespace UpdateBackendAuthUserPoolConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthUserPoolConfig) => any;
    }
    /**
        * <p>Defines the resource configuration when updating an authentication resource in your Amplify project.</p>
        */
    export interface UpdateBackendAuthResourceConfig {
            /**
                * <p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>
                */
            AuthResources: AuthResources | string | undefined;
            /**
                * <p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>
                */
            IdentityPoolConfigs?: UpdateBackendAuthIdentityPoolConfig;
            /**
                * <p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>
                */
            Service: Service | string | undefined;
            /**
                * <p>Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.</p>
                */
            UserPoolConfigs: UpdateBackendAuthUserPoolConfig | undefined;
    }
    export namespace UpdateBackendAuthResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthResourceConfig) => any;
    }
    /**
        * <p>The request body for UpdateBackendAuth.</p>
        */
    export interface UpdateBackendAuthRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for this request object.</p>
                */
            ResourceConfig: UpdateBackendAuthResourceConfig | undefined;
            /**
                * <p>The name of this resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace UpdateBackendAuthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthRequest) => any;
    }
    export interface UpdateBackendAuthResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace UpdateBackendAuthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendAuthResponse) => any;
    }
    /**
        * <p>The request object for this operation.</p>
        */
    export interface LoginAuthConfigReqObj {
            /**
                * <p>The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.</p>
                */
            AwsCognitoIdentityPoolId?: string;
            /**
                * <p>The AWS Region for the Amplify Admin UI login.</p>
                */
            AwsCognitoRegion?: string;
            /**
                * <p>The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.</p>
                */
            AwsUserPoolsId?: string;
            /**
                * <p>The web client ID for the Amazon Cognito user pools.</p>
                */
            AwsUserPoolsWebClientId?: string;
    }
    export namespace LoginAuthConfigReqObj {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoginAuthConfigReqObj) => any;
    }
    /**
        * <p>The request body for UpdateBackendConfig.</p>
        */
    export interface UpdateBackendConfigRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>Describes the Amazon Cognito configuration for Admin UI access.</p>
                */
            LoginAuthConfig?: LoginAuthConfigReqObj;
    }
    export namespace UpdateBackendConfigRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendConfigRequest) => any;
    }
    export interface UpdateBackendConfigResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The app ID for the backend manager.</p>
                */
            BackendManagerAppId?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.</p>
                */
            LoginAuthConfig?: LoginAuthConfigReqObj;
    }
    export namespace UpdateBackendConfigResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendConfigResponse) => any;
    }
    /**
        * <p>The request body for GetBackendJob.</p>
        */
    export interface UpdateBackendJobRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The ID for the job.</p>
                */
            JobId: string | undefined;
            /**
                * <p>Filters the list of response objects to include only those with the specified operation name.</p>
                */
            Operation?: string;
            /**
                * <p>Filters the list of response objects to include only those with the specified status.</p>
                */
            Status?: string;
    }
    export namespace UpdateBackendJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendJobRequest) => any;
    }
    export interface UpdateBackendJobResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The time when the job was created.</p>
                */
            CreateTime?: string;
            /**
                * <p>If the request fails, this error is returned.</p>
                */
            Error?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The name of the operation.</p>
                */
            Operation?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
            /**
                * <p>The time when the job was last updated.</p>
                */
            UpdateTime?: string;
    }
    export namespace UpdateBackendJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendJobResponse) => any;
    }
    /**
        * <p>The resource configuration for updating backend storage.</p>
        */
    export interface UpdateBackendStorageResourceConfig {
            /**
                * <p>The authorization configuration for the storage S3 bucket.</p>
                */
            Permissions: BackendStoragePermissions | undefined;
            /**
                * <p>The name of the storage service.</p>
                */
            ServiceName: ServiceName | string | undefined;
    }
    export namespace UpdateBackendStorageResourceConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendStorageResourceConfig) => any;
    }
    /**
        * <p>The request body for UpdateBackendStorage.</p>
        */
    export interface UpdateBackendStorageRequest {
            /**
                * <p>The app ID.</p>
                */
            AppId: string | undefined;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName: string | undefined;
            /**
                * <p>The resource configuration for updating backend storage.</p>
                */
            ResourceConfig: UpdateBackendStorageResourceConfig | undefined;
            /**
                * <p>The name of the storage resource.</p>
                */
            ResourceName: string | undefined;
    }
    export namespace UpdateBackendStorageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendStorageRequest) => any;
    }
    export interface UpdateBackendStorageResponse {
            /**
                * <p>The app ID.</p>
                */
            AppId?: string;
            /**
                * <p>The name of the backend environment.</p>
                */
            BackendEnvironmentName?: string;
            /**
                * <p>The ID for the job.</p>
                */
            JobId?: string;
            /**
                * <p>The current status of the request.</p>
                */
            Status?: string;
    }
    export namespace UpdateBackendStorageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBackendStorageResponse) => any;
    }
}

declare module '@aws-sdk/client-amplifybackend/node_modules/@aws-sdk/client-amplifybackend/dist-types/models/AmplifyBackendServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from AmplifyBackend service.
        */
    export class AmplifyBackendServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

