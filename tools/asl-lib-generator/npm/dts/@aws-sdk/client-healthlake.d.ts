// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-healthlake' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateFHIRDatastoreCommandInput, CreateFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/CreateFHIRDatastoreCommand";
    import { DeleteFHIRDatastoreCommandInput, DeleteFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DeleteFHIRDatastoreCommand";
    import { DescribeFHIRDatastoreCommandInput, DescribeFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRDatastoreCommand";
    import { DescribeFHIRExportJobCommandInput, DescribeFHIRExportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRExportJobCommand";
    import { DescribeFHIRImportJobCommandInput, DescribeFHIRImportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRImportJobCommand";
    import { ListFHIRDatastoresCommandInput, ListFHIRDatastoresCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRDatastoresCommand";
    import { ListFHIRExportJobsCommandInput, ListFHIRExportJobsCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRExportJobsCommand";
    import { ListFHIRImportJobsCommandInput, ListFHIRImportJobsCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRImportJobsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListTagsForResourceCommand";
    import { StartFHIRExportJobCommandInput, StartFHIRExportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRExportJobCommand";
    import { StartFHIRImportJobCommandInput, StartFHIRImportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRImportJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/UntagResourceCommand";
    import { HealthLakeClient } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    /**
        * <p>Amazon HealthLake is a HIPAA eligibile service that allows customers to store,
        *          transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.</p>
        */
    export class HealthLake extends HealthLakeClient {
            /**
                * <p>Creates a Data Store that can ingest and export FHIR formatted data.</p>
                */
            createFHIRDatastore(args: CreateFHIRDatastoreCommandInput, options?: __HttpHandlerOptions): Promise<CreateFHIRDatastoreCommandOutput>;
            createFHIRDatastore(args: CreateFHIRDatastoreCommandInput, cb: (err: any, data?: CreateFHIRDatastoreCommandOutput) => void): void;
            createFHIRDatastore(args: CreateFHIRDatastoreCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFHIRDatastoreCommandOutput) => void): void;
            /**
                * <p>Deletes a Data Store. </p>
                */
            deleteFHIRDatastore(args: DeleteFHIRDatastoreCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFHIRDatastoreCommandOutput>;
            deleteFHIRDatastore(args: DeleteFHIRDatastoreCommandInput, cb: (err: any, data?: DeleteFHIRDatastoreCommandOutput) => void): void;
            deleteFHIRDatastore(args: DeleteFHIRDatastoreCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFHIRDatastoreCommandOutput) => void): void;
            /**
                * <p>Gets the properties associated with the FHIR Data Store, including the Data Store ID,
                *          Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and
                *          Data Store endpoint.</p>
                */
            describeFHIRDatastore(args: DescribeFHIRDatastoreCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFHIRDatastoreCommandOutput>;
            describeFHIRDatastore(args: DescribeFHIRDatastoreCommandInput, cb: (err: any, data?: DescribeFHIRDatastoreCommandOutput) => void): void;
            describeFHIRDatastore(args: DescribeFHIRDatastoreCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFHIRDatastoreCommandOutput) => void): void;
            /**
                * <p>Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>
                */
            describeFHIRExportJob(args: DescribeFHIRExportJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFHIRExportJobCommandOutput>;
            describeFHIRExportJob(args: DescribeFHIRExportJobCommandInput, cb: (err: any, data?: DescribeFHIRExportJobCommandOutput) => void): void;
            describeFHIRExportJob(args: DescribeFHIRExportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFHIRExportJobCommandOutput) => void): void;
            /**
                * <p>Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. </p>
                */
            describeFHIRImportJob(args: DescribeFHIRImportJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFHIRImportJobCommandOutput>;
            describeFHIRImportJob(args: DescribeFHIRImportJobCommandInput, cb: (err: any, data?: DescribeFHIRImportJobCommandOutput) => void): void;
            describeFHIRImportJob(args: DescribeFHIRImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFHIRImportJobCommandOutput) => void): void;
            /**
                * <p>Lists all FHIR Data Stores that are in the userâ€™s account, regardless of Data Store
                *          status.</p>
                */
            listFHIRDatastores(args: ListFHIRDatastoresCommandInput, options?: __HttpHandlerOptions): Promise<ListFHIRDatastoresCommandOutput>;
            listFHIRDatastores(args: ListFHIRDatastoresCommandInput, cb: (err: any, data?: ListFHIRDatastoresCommandOutput) => void): void;
            listFHIRDatastores(args: ListFHIRDatastoresCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFHIRDatastoresCommandOutput) => void): void;
            /**
                * <p>
                *             Lists all FHIR export jobs associated with an account and their statuses.
                *          </p>
                */
            listFHIRExportJobs(args: ListFHIRExportJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListFHIRExportJobsCommandOutput>;
            listFHIRExportJobs(args: ListFHIRExportJobsCommandInput, cb: (err: any, data?: ListFHIRExportJobsCommandOutput) => void): void;
            listFHIRExportJobs(args: ListFHIRExportJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFHIRExportJobsCommandOutput) => void): void;
            /**
                * <p>
                *             Lists all FHIR import jobs associated with an account and their statuses.
                *          </p>
                */
            listFHIRImportJobs(args: ListFHIRImportJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListFHIRImportJobsCommandOutput>;
            listFHIRImportJobs(args: ListFHIRImportJobsCommandInput, cb: (err: any, data?: ListFHIRImportJobsCommandOutput) => void): void;
            listFHIRImportJobs(args: ListFHIRImportJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFHIRImportJobsCommandOutput) => void): void;
            /**
                * <p>
                *             Returns a list of all existing tags associated with a Data Store.
                *          </p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Begins a FHIR export job.</p>
                */
            startFHIRExportJob(args: StartFHIRExportJobCommandInput, options?: __HttpHandlerOptions): Promise<StartFHIRExportJobCommandOutput>;
            startFHIRExportJob(args: StartFHIRExportJobCommandInput, cb: (err: any, data?: StartFHIRExportJobCommandOutput) => void): void;
            startFHIRExportJob(args: StartFHIRExportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartFHIRExportJobCommandOutput) => void): void;
            /**
                * <p>Begins a FHIR Import job.</p>
                */
            startFHIRImportJob(args: StartFHIRImportJobCommandInput, options?: __HttpHandlerOptions): Promise<StartFHIRImportJobCommandOutput>;
            startFHIRImportJob(args: StartFHIRImportJobCommandInput, cb: (err: any, data?: StartFHIRImportJobCommandOutput) => void): void;
            startFHIRImportJob(args: StartFHIRImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartFHIRImportJobCommandOutput) => void): void;
            /**
                * <p>
                *             Adds a user specifed key and value tag to a Data Store.
                *          </p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>
                *             Removes tags from a Data Store.
                *          </p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/CreateFHIRDatastoreCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { CreateFHIRDatastoreRequest, CreateFHIRDatastoreResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface CreateFHIRDatastoreCommandInput extends CreateFHIRDatastoreRequest {
    }
    export interface CreateFHIRDatastoreCommandOutput extends CreateFHIRDatastoreResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a Data Store that can ingest and export FHIR formatted data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, CreateFHIRDatastoreCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, CreateFHIRDatastoreCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new CreateFHIRDatastoreCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateFHIRDatastoreCommandInput} for command's `input` shape.
        * @see {@link CreateFHIRDatastoreCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class CreateFHIRDatastoreCommand extends $Command<CreateFHIRDatastoreCommandInput, CreateFHIRDatastoreCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: CreateFHIRDatastoreCommandInput;
            constructor(input: CreateFHIRDatastoreCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateFHIRDatastoreCommandInput, CreateFHIRDatastoreCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DeleteFHIRDatastoreCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { DeleteFHIRDatastoreRequest, DeleteFHIRDatastoreResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface DeleteFHIRDatastoreCommandInput extends DeleteFHIRDatastoreRequest {
    }
    export interface DeleteFHIRDatastoreCommandOutput extends DeleteFHIRDatastoreResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a Data Store. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, DeleteFHIRDatastoreCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, DeleteFHIRDatastoreCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new DeleteFHIRDatastoreCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteFHIRDatastoreCommandInput} for command's `input` shape.
        * @see {@link DeleteFHIRDatastoreCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class DeleteFHIRDatastoreCommand extends $Command<DeleteFHIRDatastoreCommandInput, DeleteFHIRDatastoreCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: DeleteFHIRDatastoreCommandInput;
            constructor(input: DeleteFHIRDatastoreCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteFHIRDatastoreCommandInput, DeleteFHIRDatastoreCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRDatastoreCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { DescribeFHIRDatastoreRequest, DescribeFHIRDatastoreResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface DescribeFHIRDatastoreCommandInput extends DescribeFHIRDatastoreRequest {
    }
    export interface DescribeFHIRDatastoreCommandOutput extends DescribeFHIRDatastoreResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the properties associated with the FHIR Data Store, including the Data Store ID,
        *          Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and
        *          Data Store endpoint.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, DescribeFHIRDatastoreCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, DescribeFHIRDatastoreCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new DescribeFHIRDatastoreCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFHIRDatastoreCommandInput} for command's `input` shape.
        * @see {@link DescribeFHIRDatastoreCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class DescribeFHIRDatastoreCommand extends $Command<DescribeFHIRDatastoreCommandInput, DescribeFHIRDatastoreCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: DescribeFHIRDatastoreCommandInput;
            constructor(input: DescribeFHIRDatastoreCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFHIRDatastoreCommandInput, DescribeFHIRDatastoreCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRExportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { DescribeFHIRExportJobRequest, DescribeFHIRExportJobResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface DescribeFHIRExportJobCommandInput extends DescribeFHIRExportJobRequest {
    }
    export interface DescribeFHIRExportJobCommandOutput extends DescribeFHIRExportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, DescribeFHIRExportJobCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, DescribeFHIRExportJobCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new DescribeFHIRExportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFHIRExportJobCommandInput} for command's `input` shape.
        * @see {@link DescribeFHIRExportJobCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class DescribeFHIRExportJobCommand extends $Command<DescribeFHIRExportJobCommandInput, DescribeFHIRExportJobCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: DescribeFHIRExportJobCommandInput;
            constructor(input: DescribeFHIRExportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFHIRExportJobCommandInput, DescribeFHIRExportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { DescribeFHIRImportJobRequest, DescribeFHIRImportJobResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface DescribeFHIRImportJobCommandInput extends DescribeFHIRImportJobRequest {
    }
    export interface DescribeFHIRImportJobCommandOutput extends DescribeFHIRImportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, DescribeFHIRImportJobCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, DescribeFHIRImportJobCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new DescribeFHIRImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeFHIRImportJobCommandInput} for command's `input` shape.
        * @see {@link DescribeFHIRImportJobCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class DescribeFHIRImportJobCommand extends $Command<DescribeFHIRImportJobCommandInput, DescribeFHIRImportJobCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: DescribeFHIRImportJobCommandInput;
            constructor(input: DescribeFHIRImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFHIRImportJobCommandInput, DescribeFHIRImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRDatastoresCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { ListFHIRDatastoresRequest, ListFHIRDatastoresResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface ListFHIRDatastoresCommandInput extends ListFHIRDatastoresRequest {
    }
    export interface ListFHIRDatastoresCommandOutput extends ListFHIRDatastoresResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all FHIR Data Stores that are in the userâ€™s account, regardless of Data Store
        *          status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, ListFHIRDatastoresCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, ListFHIRDatastoresCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new ListFHIRDatastoresCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFHIRDatastoresCommandInput} for command's `input` shape.
        * @see {@link ListFHIRDatastoresCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class ListFHIRDatastoresCommand extends $Command<ListFHIRDatastoresCommandInput, ListFHIRDatastoresCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: ListFHIRDatastoresCommandInput;
            constructor(input: ListFHIRDatastoresCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFHIRDatastoresCommandInput, ListFHIRDatastoresCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRExportJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { ListFHIRExportJobsRequest, ListFHIRExportJobsResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface ListFHIRExportJobsCommandInput extends ListFHIRExportJobsRequest {
    }
    export interface ListFHIRExportJobsCommandOutput extends ListFHIRExportJobsResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Lists all FHIR export jobs associated with an account and their statuses.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, ListFHIRExportJobsCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, ListFHIRExportJobsCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new ListFHIRExportJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFHIRExportJobsCommandInput} for command's `input` shape.
        * @see {@link ListFHIRExportJobsCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class ListFHIRExportJobsCommand extends $Command<ListFHIRExportJobsCommandInput, ListFHIRExportJobsCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: ListFHIRExportJobsCommandInput;
            constructor(input: ListFHIRExportJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFHIRExportJobsCommandInput, ListFHIRExportJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRImportJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { ListFHIRImportJobsRequest, ListFHIRImportJobsResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface ListFHIRImportJobsCommandInput extends ListFHIRImportJobsRequest {
    }
    export interface ListFHIRImportJobsCommandOutput extends ListFHIRImportJobsResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Lists all FHIR import jobs associated with an account and their statuses.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, ListFHIRImportJobsCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, ListFHIRImportJobsCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new ListFHIRImportJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFHIRImportJobsCommandInput} for command's `input` shape.
        * @see {@link ListFHIRImportJobsCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class ListFHIRImportJobsCommand extends $Command<ListFHIRImportJobsCommandInput, ListFHIRImportJobsCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: ListFHIRImportJobsCommandInput;
            constructor(input: ListFHIRImportJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFHIRImportJobsCommandInput, ListFHIRImportJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Returns a list of all existing tags associated with a Data Store.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, ListTagsForResourceCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, ListTagsForResourceCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRExportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { StartFHIRExportJobRequest, StartFHIRExportJobResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface StartFHIRExportJobCommandInput extends StartFHIRExportJobRequest {
    }
    export interface StartFHIRExportJobCommandOutput extends StartFHIRExportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Begins a FHIR export job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, StartFHIRExportJobCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, StartFHIRExportJobCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new StartFHIRExportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartFHIRExportJobCommandInput} for command's `input` shape.
        * @see {@link StartFHIRExportJobCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class StartFHIRExportJobCommand extends $Command<StartFHIRExportJobCommandInput, StartFHIRExportJobCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: StartFHIRExportJobCommandInput;
            constructor(input: StartFHIRExportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartFHIRExportJobCommandInput, StartFHIRExportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { StartFHIRImportJobRequest, StartFHIRImportJobResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface StartFHIRImportJobCommandInput extends StartFHIRImportJobRequest {
    }
    export interface StartFHIRImportJobCommandOutput extends StartFHIRImportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Begins a FHIR Import job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, StartFHIRImportJobCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, StartFHIRImportJobCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new StartFHIRImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartFHIRImportJobCommandInput} for command's `input` shape.
        * @see {@link StartFHIRImportJobCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class StartFHIRImportJobCommand extends $Command<StartFHIRImportJobCommandInput, StartFHIRImportJobCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: StartFHIRImportJobCommandInput;
            constructor(input: StartFHIRImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartFHIRImportJobCommandInput, StartFHIRImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Adds a user specifed key and value tag to a Data Store.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, TagResourceCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, TagResourceCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { HealthLakeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Removes tags from a Data Store.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { HealthLakeClient, UntagResourceCommand } from "@aws-sdk/client-healthlake"; // ES Modules import
        * // const { HealthLakeClient, UntagResourceCommand } = require("@aws-sdk/client-healthlake"); // CommonJS import
        * const client = new HealthLakeClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link HealthLakeClientResolvedConfig | config} for HealthLakeClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, HealthLakeClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: HealthLakeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/HealthLakeClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateFHIRDatastoreCommandInput, CreateFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/CreateFHIRDatastoreCommand";
    import { DeleteFHIRDatastoreCommandInput, DeleteFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DeleteFHIRDatastoreCommand";
    import { DescribeFHIRDatastoreCommandInput, DescribeFHIRDatastoreCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRDatastoreCommand";
    import { DescribeFHIRExportJobCommandInput, DescribeFHIRExportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRExportJobCommand";
    import { DescribeFHIRImportJobCommandInput, DescribeFHIRImportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/DescribeFHIRImportJobCommand";
    import { ListFHIRDatastoresCommandInput, ListFHIRDatastoresCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRDatastoresCommand";
    import { ListFHIRExportJobsCommandInput, ListFHIRExportJobsCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRExportJobsCommand";
    import { ListFHIRImportJobsCommandInput, ListFHIRImportJobsCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListFHIRImportJobsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/ListTagsForResourceCommand";
    import { StartFHIRExportJobCommandInput, StartFHIRExportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRExportJobCommand";
    import { StartFHIRImportJobCommandInput, StartFHIRImportJobCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/StartFHIRImportJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/commands/UntagResourceCommand";
    export type ServiceInputTypes = CreateFHIRDatastoreCommandInput | DeleteFHIRDatastoreCommandInput | DescribeFHIRDatastoreCommandInput | DescribeFHIRExportJobCommandInput | DescribeFHIRImportJobCommandInput | ListFHIRDatastoresCommandInput | ListFHIRExportJobsCommandInput | ListFHIRImportJobsCommandInput | ListTagsForResourceCommandInput | StartFHIRExportJobCommandInput | StartFHIRImportJobCommandInput | TagResourceCommandInput | UntagResourceCommandInput;
    export type ServiceOutputTypes = CreateFHIRDatastoreCommandOutput | DeleteFHIRDatastoreCommandOutput | DescribeFHIRDatastoreCommandOutput | DescribeFHIRExportJobCommandOutput | DescribeFHIRImportJobCommandOutput | ListFHIRDatastoresCommandOutput | ListFHIRExportJobsCommandOutput | ListFHIRImportJobsCommandOutput | ListTagsForResourceCommandOutput | StartFHIRExportJobCommandOutput | StartFHIRImportJobCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type HealthLakeClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of HealthLakeClient class constructor that set the region, credentials and other options.
        */
    export interface HealthLakeClientConfig extends HealthLakeClientConfigType {
    }
    type HealthLakeClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of HealthLakeClient class. This is resolved and normalized from the {@link HealthLakeClientConfig | constructor configuration interface}.
        */
    export interface HealthLakeClientResolvedConfig extends HealthLakeClientResolvedConfigType {
    }
    /**
        * <p>Amazon HealthLake is a HIPAA eligibile service that allows customers to store,
        *          transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.</p>
        */
    export class HealthLakeClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, HealthLakeClientResolvedConfig> {
            /**
                * The resolved configuration of HealthLakeClient class. This is resolved and normalized from the {@link HealthLakeClientConfig | constructor configuration interface}.
                */
            readonly config: HealthLakeClientResolvedConfig;
            constructor(configuration: HealthLakeClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { HealthLakeServiceException as __BaseException } from "@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/HealthLakeServiceException";
    /**
        * <p>Access is denied. Your account is not authorized to perform this operation.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum CmkType {
            AO_CMK = "AWS_OWNED_KMS_KEY",
            CM_CMK = "CUSTOMER_MANAGED_KMS_KEY"
    }
    /**
        * <p>The Data Store is in a transition state and the user requested action can not be performed.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export enum FHIRVersion {
            R4 = "R4"
    }
    export enum PreloadDataType {
            SYNTHEA = "SYNTHEA"
    }
    /**
        * <p> The input properties for the preloaded Data Store. Only data preloaded from Synthea is supported.</p>
        */
    export interface PreloadDataConfig {
            /**
                * <p>The type of preloaded data. Only Synthea preloaded data is supported.</p>
                */
            PreloadDataType: PreloadDataType | string | undefined;
    }
    export namespace PreloadDataConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PreloadDataConfig) => any;
    }
    /**
        * <p>
        *             The customer-managed-key(CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption.
        *          </p>
        */
    export interface KmsEncryptionConfig {
            /**
                * <p>
                *             The type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.
                *          </p>
                */
            CmkType: CmkType | string | undefined;
            /**
                * <p>
                *             The KMS encryption key id/alias used to encrypt the Data Store contents at rest.
                *          </p>
                */
            KmsKeyId?: string;
    }
    export namespace KmsEncryptionConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: KmsEncryptionConfig) => any;
    }
    /**
        * <p>
        *             The server-side encryption key configuration for a customer provided encryption key.
        *          </p>
        */
    export interface SseConfiguration {
            /**
                * <p>
                *             The KMS encryption configuration used to provide details for data encryption.
                *          </p>
                */
            KmsEncryptionConfig: KmsEncryptionConfig | undefined;
    }
    export namespace SseConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SseConfiguration) => any;
    }
    /**
        * <p>
        *             A tag is a label consisting of a user-defined key and value. The form for tags is {"Key", "Value"}
        *          </p>
        */
    export interface Tag {
            /**
                * <p>
                *             The key portion of a tag. Tag keys are case sensitive.
                *          </p>
                */
            Key: string | undefined;
            /**
                * <p>
                *             The value portion of tag. Tag values are case sensitive.
                *          </p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateFHIRDatastoreRequest {
            /**
                * <p>The user generated name for the Data Store.</p>
                */
            DatastoreName?: string;
            /**
                * <p>The FHIR version of the Data Store. The only supported version is R4.</p>
                */
            DatastoreTypeVersion: FHIRVersion | string | undefined;
            /**
                * <p>
                *             The server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store.
                *          </p>
                */
            SseConfiguration?: SseConfiguration;
            /**
                * <p>Optional parameter to preload data upon creation of the Data Store. Currently, the only
                *          supported preloaded data is synthetic data generated from Synthea.</p>
                */
            PreloadDataConfig?: PreloadDataConfig;
            /**
                * <p>Optional user provided token used for ensuring idempotency.</p>
                */
            ClientToken?: string;
            /**
                * <p>
                *             Resource tags that are applied to a Data Store when it is created.
                *          </p>
                */
            Tags?: Tag[];
    }
    export namespace CreateFHIRDatastoreRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFHIRDatastoreRequest) => any;
    }
    export enum DatastoreStatus {
            ACTIVE = "ACTIVE",
            CREATING = "CREATING",
            DELETED = "DELETED",
            DELETING = "DELETING"
    }
    export interface CreateFHIRDatastoreResponse {
            /**
                * <p>The AWS-generated Data Store id. This id is in the output from the initial Data Store
                *          creation call.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The datastore ARN is generated during the creation of the Data Store and can be found in
                *          the output from the initial Data Store creation call.</p>
                */
            DatastoreArn: string | undefined;
            /**
                * <p>The status of the FHIR Data Store. Possible statuses are â€˜CREATINGâ€™, â€˜ACTIVEâ€™, â€˜DELETINGâ€™,
                *          â€˜DELETEDâ€™.</p>
                */
            DatastoreStatus: DatastoreStatus | string | undefined;
            /**
                * <p>The AWS endpoint for the created Data Store. For preview, only US-east-1 endpoints are
                *          supported.</p>
                */
            DatastoreEndpoint: string | undefined;
    }
    export namespace CreateFHIRDatastoreResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFHIRDatastoreResponse) => any;
    }
    /**
        * <p>Unknown error occurs in the service.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The user has exceeded their maximum number of allowed calls to the given API. </p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>The user input parameter was invalid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    /**
        * <p>The filters applied to Data Store query.</p>
        */
    export interface DatastoreFilter {
            /**
                * <p>Allows the user to filter Data Store results by name.</p>
                */
            DatastoreName?: string;
            /**
                * <p>Allows the user to filter Data Store results by status.</p>
                */
            DatastoreStatus?: DatastoreStatus | string;
            /**
                * <p>A filter that allows the user to set cutoff dates for records. All Data Stores created
                *          before the specified date will be included in the results. </p>
                */
            CreatedBefore?: Date;
            /**
                * <p>A filter that allows the user to set cutoff dates for records. All Data Stores created
                *          after the specified date will be included in the results.</p>
                */
            CreatedAfter?: Date;
    }
    export namespace DatastoreFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DatastoreFilter) => any;
    }
    /**
        * <p>Displays the properties of the Data Store, including the ID, Arn, name, and the status of the Data Store.</p>
        */
    export interface DatastoreProperties {
            /**
                * <p>The AWS-generated ID number for the Data Store.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The Amazon Resource Name used in the creation of the Data Store.</p>
                */
            DatastoreArn: string | undefined;
            /**
                * <p>The user-generated name for the Data Store.</p>
                */
            DatastoreName?: string;
            /**
                * <p>The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.</p>
                */
            DatastoreStatus: DatastoreStatus | string | undefined;
            /**
                * <p>The time that a Data Store was created. </p>
                */
            CreatedAt?: Date;
            /**
                * <p>The FHIR version. Only R4 version data is supported.</p>
                */
            DatastoreTypeVersion: FHIRVersion | string | undefined;
            /**
                * <p>The AWS endpoint for the Data Store. Each Data Store will have it's own endpoint with Data Store ID in the endpoint URL.</p>
                */
            DatastoreEndpoint: string | undefined;
            /**
                * <p>
                *             The server-side encryption key configuration for a customer provided encryption key (CMK).
                *          </p>
                */
            SseConfiguration?: SseConfiguration;
            /**
                * <p>The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.</p>
                */
            PreloadDataConfig?: PreloadDataConfig;
    }
    export namespace DatastoreProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DatastoreProperties) => any;
    }
    export interface DeleteFHIRDatastoreRequest {
            /**
                * <p> The AWS-generated ID for the Data Store to be deleted.</p>
                */
            DatastoreId?: string;
    }
    export namespace DeleteFHIRDatastoreRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFHIRDatastoreRequest) => any;
    }
    export interface DeleteFHIRDatastoreResponse {
            /**
                * <p>The AWS-generated ID for the Data Store to be deleted.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>
                */
            DatastoreArn: string | undefined;
            /**
                * <p>The status of the Data Store that the user has requested to be deleted.
                *       </p>
                */
            DatastoreStatus: DatastoreStatus | string | undefined;
            /**
                * <p>The AWS endpoint for the Data Store the user has requested to be deleted.</p>
                */
            DatastoreEndpoint: string | undefined;
    }
    export namespace DeleteFHIRDatastoreResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFHIRDatastoreResponse) => any;
    }
    /**
        * <p> The requested Data Store was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface DescribeFHIRDatastoreRequest {
            /**
                * <p>The AWS-generated Data Store id. This is part of the â€˜CreateFHIRDatastoreâ€™ output.</p>
                */
            DatastoreId?: string;
    }
    export namespace DescribeFHIRDatastoreRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRDatastoreRequest) => any;
    }
    export interface DescribeFHIRDatastoreResponse {
            /**
                * <p>All properties associated with a Data Store, including the Data Store ID, Data Store ARN,
                *          Data Store name, Data Store status, created at, Data Store type version, and Data Store
                *          endpoint.</p>
                */
            DatastoreProperties: DatastoreProperties | undefined;
    }
    export namespace DescribeFHIRDatastoreResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRDatastoreResponse) => any;
    }
    export interface DescribeFHIRExportJobRequest {
            /**
                * <p>The AWS generated ID for the Data Store from which files are being exported from for an export job.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The AWS generated ID for an export job.</p>
                */
            JobId: string | undefined;
    }
    export namespace DescribeFHIRExportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRExportJobRequest) => any;
    }
    export enum JobStatus {
            COMPLETED = "COMPLETED",
            COMPLETED_WITH_ERRORS = "COMPLETED_WITH_ERRORS",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUBMITTED = "SUBMITTED"
    }
    /**
        * <p>
        *             The configuration of the S3 bucket for either an import or export job. This includes assigning permissions for access.
        *          </p>
        */
    export interface S3Configuration {
            /**
                * <p>
                *             The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.
                *          </p>
                */
            S3Uri: string | undefined;
            /**
                * <p>
                *             The KMS key ID used to access the S3 bucket.
                *          </p>
                */
            KmsKeyId: string | undefined;
    }
    export namespace S3Configuration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Configuration) => any;
    }
    /**
        * <p>The output data configuration that was supplied when the export job was created.</p>
        */
    export type OutputDataConfig = OutputDataConfig.S3ConfigurationMember | OutputDataConfig.$UnknownMember;
    export namespace OutputDataConfig {
            /**
                * <p>
                *             The output data configuration that was supplied when the export job was created.
                *          </p>
                */
            interface S3ConfigurationMember {
                    S3Configuration: S3Configuration;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    S3Configuration?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    S3Configuration: (value: S3Configuration) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: OutputDataConfig, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OutputDataConfig) => any;
    }
    /**
        * <p>The properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>
        */
    export interface ExportJobProperties {
            /**
                * <p>The AWS generated ID for an export job.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The user generated name for an export job.</p>
                */
            JobName?: string;
            /**
                * <p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>
                */
            JobStatus: JobStatus | string | undefined;
            /**
                * <p>The time an export job was initiated.</p>
                */
            SubmitTime: Date | undefined;
            /**
                * <p>The time an export job completed.</p>
                */
            EndTime?: Date;
            /**
                * <p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The output data configuration that was supplied when the export job was created.</p>
                */
            OutputDataConfig: OutputDataConfig | undefined;
            /**
                * <p>The Amazon Resource Name used during the initiation of the job.</p>
                */
            DataAccessRoleArn?: string;
            /**
                * <p>An explanation of any errors that may have occurred during the export job.</p>
                */
            Message?: string;
    }
    export namespace ExportJobProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExportJobProperties) => any;
    }
    export interface DescribeFHIRExportJobResponse {
            /**
                * <p>Displays the properties of the export job, including the ID, Arn, Name, and the status of the job. </p>
                */
            ExportJobProperties: ExportJobProperties | undefined;
    }
    export namespace DescribeFHIRExportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRExportJobResponse) => any;
    }
    export interface DescribeFHIRImportJobRequest {
            /**
                * <p>The AWS-generated ID of the Data Store.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The AWS-generated job ID.</p>
                */
            JobId: string | undefined;
    }
    export namespace DescribeFHIRImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRImportJobRequest) => any;
    }
    /**
        * <p> The input properties for an import job.</p>
        */
    export type InputDataConfig = InputDataConfig.S3UriMember | InputDataConfig.$UnknownMember;
    export namespace InputDataConfig {
            /**
                * <p>The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. </p>
                */
            interface S3UriMember {
                    S3Uri: string;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    S3Uri?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    S3Uri: (value: string) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: InputDataConfig, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InputDataConfig) => any;
    }
    /**
        * <p>Displays the properties of the import job, including the ID, Arn, Name, and the status of the Data Store.</p>
        */
    export interface ImportJobProperties {
            /**
                * <p>The AWS-generated id number for the Import job.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The user-generated name for an Import job.</p>
                */
            JobName?: string;
            /**
                * <p>The job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.</p>
                */
            JobStatus: JobStatus | string | undefined;
            /**
                * <p>The time that the Import job was submitted for processing.</p>
                */
            SubmitTime: Date | undefined;
            /**
                * <p>The time that the Import job was completed.</p>
                */
            EndTime?: Date;
            /**
                * <p>The datastore id used when the Import job was created. </p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The input data configuration that was supplied when the Import job was created.</p>
                */
            InputDataConfig: InputDataConfig | undefined;
            /**
                * <p>The output data configuration that was supplied when the export job was created.</p>
                */
            JobOutputDataConfig?: OutputDataConfig;
            /**
                * <p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.</p>
                */
            DataAccessRoleArn?: string;
            /**
                * <p>An explanation of any errors that may have occurred during the FHIR import job. </p>
                */
            Message?: string;
    }
    export namespace ImportJobProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportJobProperties) => any;
    }
    export interface DescribeFHIRImportJobResponse {
            /**
                * <p>The properties of the Import job request, including the ID, ARN, name, and the status of the job.</p>
                */
            ImportJobProperties: ImportJobProperties | undefined;
    }
    export namespace DescribeFHIRImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeFHIRImportJobResponse) => any;
    }
    export interface ListFHIRDatastoresRequest {
            /**
                * <p>Lists all filters associated with a FHIR Data Store request.</p>
                */
            Filter?: DatastoreFilter;
            /**
                * <p>Fetches the next page of Data Stores when results are paginated.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of Data Stores returned in a single page of a
                *          ListFHIRDatastoresRequest call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListFHIRDatastoresRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRDatastoresRequest) => any;
    }
    export interface ListFHIRDatastoresResponse {
            /**
                * <p>All properties associated with the listed Data Stores.</p>
                */
            DatastorePropertiesList: DatastoreProperties[] | undefined;
            /**
                * <p>Pagination token that can be used to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListFHIRDatastoresResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRDatastoresResponse) => any;
    }
    export interface ListFHIRExportJobsRequest {
            /**
                * <p>
                *             This parameter limits the response to the export job with the specified Data Store ID.
                *          </p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>
                *             A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query.
                *          </p>
                */
            NextToken?: string;
            /**
                * <p>
                *             This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user.
                *          </p>
                */
            MaxResults?: number;
            /**
                * <p>
                *             This parameter limits the response to the export job with the specified job name.
                *          </p>
                */
            JobName?: string;
            /**
                * <p>
                *             This parameter limits the response to the export jobs with the specified job status.
                *          </p>
                */
            JobStatus?: JobStatus | string;
            /**
                * <p>
                *             This parameter limits the response to FHIR export jobs submitted before a user specified date.
                *          </p>
                */
            SubmittedBefore?: Date;
            /**
                * <p>
                *             This parameter limits the response to FHIR export jobs submitted after a user specified date.
                *          </p>
                */
            SubmittedAfter?: Date;
    }
    export namespace ListFHIRExportJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRExportJobsRequest) => any;
    }
    export interface ListFHIRExportJobsResponse {
            /**
                * <p>
                *             The properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job.
                *          </p>
                */
            ExportJobPropertiesList: ExportJobProperties[] | undefined;
            /**
                * <p>
                *             A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query.
                *          </p>
                */
            NextToken?: string;
    }
    export namespace ListFHIRExportJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRExportJobsResponse) => any;
    }
    export interface ListFHIRImportJobsRequest {
            /**
                * <p>
                *             This parameter limits the response to the import job with the specified Data Store ID.
                *          </p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>
                *             A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.
                *          </p>
                */
            NextToken?: string;
            /**
                * <p>
                *             This parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user.
                *          </p>
                */
            MaxResults?: number;
            /**
                * <p>
                *             This parameter limits the response to the import job with the specified job name.
                *          </p>
                */
            JobName?: string;
            /**
                * <p>
                *             This parameter limits the response to the import job with the specified job status.
                *          </p>
                */
            JobStatus?: JobStatus | string;
            /**
                * <p>
                *             This parameter limits the response to FHIR import jobs submitted before a user specified date.
                *          </p>
                */
            SubmittedBefore?: Date;
            /**
                * <p>
                *             This parameter limits the response to FHIR import jobs submitted after a user specified date.
                *          </p>
                */
            SubmittedAfter?: Date;
    }
    export namespace ListFHIRImportJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRImportJobsRequest) => any;
    }
    export interface ListFHIRImportJobsResponse {
            /**
                * <p>
                *             The properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job.
                *          </p>
                */
            ImportJobPropertiesList: ImportJobProperties[] | undefined;
            /**
                * <p>
                *             A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.
                *          </p>
                */
            NextToken?: string;
    }
    export namespace ListFHIRImportJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFHIRImportJobsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>
                *             The Amazon Resource Name(ARN) of the Data Store for which tags are being added.
                *          </p>
                */
            ResourceARN: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>
                *             Returns a list of tags associated with a Data Store.
                *          </p>
                */
            Tags?: Tag[];
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface StartFHIRExportJobRequest {
            /**
                * <p>The user generated name for an export job.</p>
                */
            JobName?: string;
            /**
                * <p>The output data configuration that was supplied when the export job was created.</p>
                */
            OutputDataConfig: OutputDataConfig | undefined;
            /**
                * <p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The Amazon Resource Name used during the initiation of the job.</p>
                */
            DataAccessRoleArn: string | undefined;
            /**
                * <p>An optional user provided token used for ensuring idempotency.</p>
                */
            ClientToken?: string;
    }
    export namespace StartFHIRExportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartFHIRExportJobRequest) => any;
    }
    export interface StartFHIRExportJobResponse {
            /**
                * <p>The AWS generated ID for an export job.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>
                */
            JobStatus: JobStatus | string | undefined;
            /**
                * <p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>
                */
            DatastoreId?: string;
    }
    export namespace StartFHIRExportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartFHIRExportJobResponse) => any;
    }
    export interface StartFHIRImportJobRequest {
            /**
                * <p>The name of the FHIR Import job in the StartFHIRImport job request.</p>
                */
            JobName?: string;
            /**
                * <p>The input properties of the FHIR Import job in the StartFHIRImport job request.</p>
                */
            InputDataConfig: InputDataConfig | undefined;
            /**
                * <p>The output data configuration that was supplied when the export job was created.</p>
                */
            JobOutputDataConfig: OutputDataConfig | undefined;
            /**
                * <p>The AWS-generated Data Store ID.</p>
                */
            DatastoreId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>
                */
            DataAccessRoleArn: string | undefined;
            /**
                * <p>Optional user provided token used for ensuring idempotency.</p>
                */
            ClientToken?: string;
    }
    export namespace StartFHIRImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartFHIRImportJobRequest) => any;
    }
    export interface StartFHIRImportJobResponse {
            /**
                * <p>The AWS-generated job ID.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The status of an import job.</p>
                */
            JobStatus: JobStatus | string | undefined;
            /**
                * <p>The AWS-generated Data Store ID.</p>
                */
            DatastoreId?: string;
    }
    export namespace StartFHIRImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartFHIRImportJobResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>
                *             The Amazon Resource Name(ARN)that gives Amazon HealthLake access to the Data Store which tags are being added to.
                *          </p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>
                *             The user specified key and value pair tags being added to a Data Store.
                *          </p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>
                *             "The Amazon Resource Name(ARN) of the Data Store for which tags are being removed
                *          </p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>
                *             The keys for the tags to be removed from the Healthlake Data Store.
                *          </p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
}

declare module '@aws-sdk/client-healthlake/node_modules/@aws-sdk/client-healthlake/dist-types/models/HealthLakeServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from HealthLake service.
        */
    export class HealthLakeServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

