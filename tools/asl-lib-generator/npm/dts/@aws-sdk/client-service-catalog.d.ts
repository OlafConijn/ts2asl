// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-service-catalog' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptPortfolioShareCommandInput, AcceptPortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AcceptPortfolioShareCommand";
    import { AssociateBudgetWithResourceCommandInput, AssociateBudgetWithResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateBudgetWithResourceCommand";
    import { AssociatePrincipalWithPortfolioCommandInput, AssociatePrincipalWithPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociatePrincipalWithPortfolioCommand";
    import { AssociateProductWithPortfolioCommandInput, AssociateProductWithPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateProductWithPortfolioCommand";
    import { AssociateServiceActionWithProvisioningArtifactCommandInput, AssociateServiceActionWithProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateServiceActionWithProvisioningArtifactCommand";
    import { AssociateTagOptionWithResourceCommandInput, AssociateTagOptionWithResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateTagOptionWithResourceCommand";
    import { BatchAssociateServiceActionWithProvisioningArtifactCommandInput, BatchAssociateServiceActionWithProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchAssociateServiceActionWithProvisioningArtifactCommand";
    import { BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchDisassociateServiceActionFromProvisioningArtifactCommand";
    import { CopyProductCommandInput, CopyProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CopyProductCommand";
    import { CreateConstraintCommandInput, CreateConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateConstraintCommand";
    import { CreatePortfolioCommandInput, CreatePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioCommand";
    import { CreatePortfolioShareCommandInput, CreatePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioShareCommand";
    import { CreateProductCommandInput, CreateProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProductCommand";
    import { CreateProvisionedProductPlanCommandInput, CreateProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisionedProductPlanCommand";
    import { CreateProvisioningArtifactCommandInput, CreateProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisioningArtifactCommand";
    import { CreateServiceActionCommandInput, CreateServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateServiceActionCommand";
    import { CreateTagOptionCommandInput, CreateTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateTagOptionCommand";
    import { DeleteConstraintCommandInput, DeleteConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteConstraintCommand";
    import { DeletePortfolioCommandInput, DeletePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioCommand";
    import { DeletePortfolioShareCommandInput, DeletePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioShareCommand";
    import { DeleteProductCommandInput, DeleteProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProductCommand";
    import { DeleteProvisionedProductPlanCommandInput, DeleteProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisionedProductPlanCommand";
    import { DeleteProvisioningArtifactCommandInput, DeleteProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisioningArtifactCommand";
    import { DeleteServiceActionCommandInput, DeleteServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteServiceActionCommand";
    import { DeleteTagOptionCommandInput, DeleteTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteTagOptionCommand";
    import { DescribeConstraintCommandInput, DescribeConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeConstraintCommand";
    import { DescribeCopyProductStatusCommandInput, DescribeCopyProductStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeCopyProductStatusCommand";
    import { DescribePortfolioCommandInput, DescribePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioCommand";
    import { DescribePortfolioSharesCommandInput, DescribePortfolioSharesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioSharesCommand";
    import { DescribePortfolioShareStatusCommandInput, DescribePortfolioShareStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioShareStatusCommand";
    import { DescribeProductAsAdminCommandInput, DescribeProductAsAdminCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductAsAdminCommand";
    import { DescribeProductCommandInput, DescribeProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductCommand";
    import { DescribeProductViewCommandInput, DescribeProductViewCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductViewCommand";
    import { DescribeProvisionedProductCommandInput, DescribeProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductCommand";
    import { DescribeProvisionedProductPlanCommandInput, DescribeProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductPlanCommand";
    import { DescribeProvisioningArtifactCommandInput, DescribeProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningArtifactCommand";
    import { DescribeProvisioningParametersCommandInput, DescribeProvisioningParametersCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningParametersCommand";
    import { DescribeRecordCommandInput, DescribeRecordCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeRecordCommand";
    import { DescribeServiceActionCommandInput, DescribeServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionCommand";
    import { DescribeServiceActionExecutionParametersCommandInput, DescribeServiceActionExecutionParametersCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionExecutionParametersCommand";
    import { DescribeTagOptionCommandInput, DescribeTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeTagOptionCommand";
    import { DisableAWSOrganizationsAccessCommandInput, DisableAWSOrganizationsAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisableAWSOrganizationsAccessCommand";
    import { DisassociateBudgetFromResourceCommandInput, DisassociateBudgetFromResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateBudgetFromResourceCommand";
    import { DisassociatePrincipalFromPortfolioCommandInput, DisassociatePrincipalFromPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociatePrincipalFromPortfolioCommand";
    import { DisassociateProductFromPortfolioCommandInput, DisassociateProductFromPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateProductFromPortfolioCommand";
    import { DisassociateServiceActionFromProvisioningArtifactCommandInput, DisassociateServiceActionFromProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateServiceActionFromProvisioningArtifactCommand";
    import { DisassociateTagOptionFromResourceCommandInput, DisassociateTagOptionFromResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateTagOptionFromResourceCommand";
    import { EnableAWSOrganizationsAccessCommandInput, EnableAWSOrganizationsAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/EnableAWSOrganizationsAccessCommand";
    import { ExecuteProvisionedProductPlanCommandInput, ExecuteProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductPlanCommand";
    import { ExecuteProvisionedProductServiceActionCommandInput, ExecuteProvisionedProductServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductServiceActionCommand";
    import { GetAWSOrganizationsAccessStatusCommandInput, GetAWSOrganizationsAccessStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetAWSOrganizationsAccessStatusCommand";
    import { GetProvisionedProductOutputsCommandInput, GetProvisionedProductOutputsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetProvisionedProductOutputsCommand";
    import { ImportAsProvisionedProductCommandInput, ImportAsProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ImportAsProvisionedProductCommand";
    import { ListAcceptedPortfolioSharesCommandInput, ListAcceptedPortfolioSharesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListAcceptedPortfolioSharesCommand";
    import { ListBudgetsForResourceCommandInput, ListBudgetsForResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListBudgetsForResourceCommand";
    import { ListConstraintsForPortfolioCommandInput, ListConstraintsForPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListConstraintsForPortfolioCommand";
    import { ListLaunchPathsCommandInput, ListLaunchPathsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListLaunchPathsCommand";
    import { ListOrganizationPortfolioAccessCommandInput, ListOrganizationPortfolioAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListOrganizationPortfolioAccessCommand";
    import { ListPortfolioAccessCommandInput, ListPortfolioAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfolioAccessCommand";
    import { ListPortfoliosCommandInput, ListPortfoliosCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosCommand";
    import { ListPortfoliosForProductCommandInput, ListPortfoliosForProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosForProductCommand";
    import { ListPrincipalsForPortfolioCommandInput, ListPrincipalsForPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPrincipalsForPortfolioCommand";
    import { ListProvisionedProductPlansCommandInput, ListProvisionedProductPlansCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisionedProductPlansCommand";
    import { ListProvisioningArtifactsCommandInput, ListProvisioningArtifactsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsCommand";
    import { ListProvisioningArtifactsForServiceActionCommandInput, ListProvisioningArtifactsForServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsForServiceActionCommand";
    import { ListRecordHistoryCommandInput, ListRecordHistoryCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListRecordHistoryCommand";
    import { ListResourcesForTagOptionCommandInput, ListResourcesForTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListResourcesForTagOptionCommand";
    import { ListServiceActionsCommandInput, ListServiceActionsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsCommand";
    import { ListServiceActionsForProvisioningArtifactCommandInput, ListServiceActionsForProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsForProvisioningArtifactCommand";
    import { ListStackInstancesForProvisionedProductCommandInput, ListStackInstancesForProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListStackInstancesForProvisionedProductCommand";
    import { ListTagOptionsCommandInput, ListTagOptionsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListTagOptionsCommand";
    import { ProvisionProductCommandInput, ProvisionProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ProvisionProductCommand";
    import { RejectPortfolioShareCommandInput, RejectPortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/RejectPortfolioShareCommand";
    import { ScanProvisionedProductsCommandInput, ScanProvisionedProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ScanProvisionedProductsCommand";
    import { SearchProductsAsAdminCommandInput, SearchProductsAsAdminCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsAsAdminCommand";
    import { SearchProductsCommandInput, SearchProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsCommand";
    import { SearchProvisionedProductsCommandInput, SearchProvisionedProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProvisionedProductsCommand";
    import { TerminateProvisionedProductCommandInput, TerminateProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/TerminateProvisionedProductCommand";
    import { UpdateConstraintCommandInput, UpdateConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateConstraintCommand";
    import { UpdatePortfolioCommandInput, UpdatePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioCommand";
    import { UpdatePortfolioShareCommandInput, UpdatePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioShareCommand";
    import { UpdateProductCommandInput, UpdateProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProductCommand";
    import { UpdateProvisionedProductCommandInput, UpdateProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductCommand";
    import { UpdateProvisionedProductPropertiesCommandInput, UpdateProvisionedProductPropertiesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductPropertiesCommand";
    import { UpdateProvisioningArtifactCommandInput, UpdateProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisioningArtifactCommand";
    import { UpdateServiceActionCommandInput, UpdateServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateServiceActionCommand";
    import { UpdateTagOptionCommandInput, UpdateTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateTagOptionCommand";
    import { ServiceCatalogClient } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    /**
        * <fullname>AWS Service Catalog</fullname>
        *          <p>
        *             <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> enables
        *          organizations to create and manage catalogs of IT services that are approved for AWS. To
        *          get the most out of this documentation, you should be familiar with the terminology
        *          discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog
        *          Concepts</a>.</p>
        */
    export class ServiceCatalog extends ServiceCatalogClient {
            /**
                * <p>Accepts an offer to share the specified portfolio.</p>
                */
            acceptPortfolioShare(args: AcceptPortfolioShareCommandInput, options?: __HttpHandlerOptions): Promise<AcceptPortfolioShareCommandOutput>;
            acceptPortfolioShare(args: AcceptPortfolioShareCommandInput, cb: (err: any, data?: AcceptPortfolioShareCommandOutput) => void): void;
            acceptPortfolioShare(args: AcceptPortfolioShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptPortfolioShareCommandOutput) => void): void;
            /**
                * <p>Associates the specified budget with the specified resource.</p>
                */
            associateBudgetWithResource(args: AssociateBudgetWithResourceCommandInput, options?: __HttpHandlerOptions): Promise<AssociateBudgetWithResourceCommandOutput>;
            associateBudgetWithResource(args: AssociateBudgetWithResourceCommandInput, cb: (err: any, data?: AssociateBudgetWithResourceCommandOutput) => void): void;
            associateBudgetWithResource(args: AssociateBudgetWithResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateBudgetWithResourceCommandOutput) => void): void;
            /**
                * <p>Associates the specified principal ARN with the specified portfolio.</p>
                */
            associatePrincipalWithPortfolio(args: AssociatePrincipalWithPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePrincipalWithPortfolioCommandOutput>;
            associatePrincipalWithPortfolio(args: AssociatePrincipalWithPortfolioCommandInput, cb: (err: any, data?: AssociatePrincipalWithPortfolioCommandOutput) => void): void;
            associatePrincipalWithPortfolio(args: AssociatePrincipalWithPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePrincipalWithPortfolioCommandOutput) => void): void;
            /**
                * <p>Associates the specified product with the specified portfolio.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            associateProductWithPortfolio(args: AssociateProductWithPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<AssociateProductWithPortfolioCommandOutput>;
            associateProductWithPortfolio(args: AssociateProductWithPortfolioCommandInput, cb: (err: any, data?: AssociateProductWithPortfolioCommandOutput) => void): void;
            associateProductWithPortfolio(args: AssociateProductWithPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateProductWithPortfolioCommandOutput) => void): void;
            /**
                * <p>Associates a self-service action with a provisioning artifact.</p>
                */
            associateServiceActionWithProvisioningArtifact(args: AssociateServiceActionWithProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<AssociateServiceActionWithProvisioningArtifactCommandOutput>;
            associateServiceActionWithProvisioningArtifact(args: AssociateServiceActionWithProvisioningArtifactCommandInput, cb: (err: any, data?: AssociateServiceActionWithProvisioningArtifactCommandOutput) => void): void;
            associateServiceActionWithProvisioningArtifact(args: AssociateServiceActionWithProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateServiceActionWithProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Associate the specified TagOption with the specified portfolio or product.</p>
                */
            associateTagOptionWithResource(args: AssociateTagOptionWithResourceCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTagOptionWithResourceCommandOutput>;
            associateTagOptionWithResource(args: AssociateTagOptionWithResourceCommandInput, cb: (err: any, data?: AssociateTagOptionWithResourceCommandOutput) => void): void;
            associateTagOptionWithResource(args: AssociateTagOptionWithResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTagOptionWithResourceCommandOutput) => void): void;
            /**
                * <p>Associates multiple self-service actions with provisioning artifacts.</p>
                */
            batchAssociateServiceActionWithProvisioningArtifact(args: BatchAssociateServiceActionWithProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<BatchAssociateServiceActionWithProvisioningArtifactCommandOutput>;
            batchAssociateServiceActionWithProvisioningArtifact(args: BatchAssociateServiceActionWithProvisioningArtifactCommandInput, cb: (err: any, data?: BatchAssociateServiceActionWithProvisioningArtifactCommandOutput) => void): void;
            batchAssociateServiceActionWithProvisioningArtifact(args: BatchAssociateServiceActionWithProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchAssociateServiceActionWithProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Disassociates a batch of self-service actions from the specified provisioning artifact.</p>
                */
            batchDisassociateServiceActionFromProvisioningArtifact(args: BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput>;
            batchDisassociateServiceActionFromProvisioningArtifact(args: BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, cb: (err: any, data?: BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput) => void): void;
            batchDisassociateServiceActionFromProvisioningArtifact(args: BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Copies the specified source product to the specified target product or a new product.</p>
                *          <p>You can copy a product to the same account or another account.
                *          You can copy a product to the same region or another region.</p>
                *          <p>This operation is performed asynchronously. To track the progress of the
                *          operation, use <a>DescribeCopyProductStatus</a>.</p>
                */
            copyProduct(args: CopyProductCommandInput, options?: __HttpHandlerOptions): Promise<CopyProductCommandOutput>;
            copyProduct(args: CopyProductCommandInput, cb: (err: any, data?: CopyProductCommandOutput) => void): void;
            copyProduct(args: CopyProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CopyProductCommandOutput) => void): void;
            /**
                * <p>Creates a constraint.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            createConstraint(args: CreateConstraintCommandInput, options?: __HttpHandlerOptions): Promise<CreateConstraintCommandOutput>;
            createConstraint(args: CreateConstraintCommandInput, cb: (err: any, data?: CreateConstraintCommandOutput) => void): void;
            createConstraint(args: CreateConstraintCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateConstraintCommandOutput) => void): void;
            /**
                * <p>Creates a portfolio.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            createPortfolio(args: CreatePortfolioCommandInput, options?: __HttpHandlerOptions): Promise<CreatePortfolioCommandOutput>;
            createPortfolio(args: CreatePortfolioCommandInput, cb: (err: any, data?: CreatePortfolioCommandOutput) => void): void;
            createPortfolio(args: CreatePortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePortfolioCommandOutput) => void): void;
            /**
                * <p>Shares the specified portfolio with the specified account or organization node.
                *          Shares to an organization node can only be created by the management account of an
                *          organization or by a delegated administrator. You can share portfolios to an organization,
                *          an organizational unit, or a specific account.</p>
                *          <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p>
                *         <p>
                *             <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p>
                *          <p>You can't share a shared resource, including portfolios that contain a shared product.</p>
                *          <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>
                */
            createPortfolioShare(args: CreatePortfolioShareCommandInput, options?: __HttpHandlerOptions): Promise<CreatePortfolioShareCommandOutput>;
            createPortfolioShare(args: CreatePortfolioShareCommandInput, cb: (err: any, data?: CreatePortfolioShareCommandOutput) => void): void;
            createPortfolioShare(args: CreatePortfolioShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePortfolioShareCommandOutput) => void): void;
            /**
                * <p>Creates a product.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                *
                *          <p>The user or role that performs this operation must have the
                *             <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is
                *          required when using the <code>ImportFromPhysicalId</code> template source in the
                *          information data section.</p>
                */
            createProduct(args: CreateProductCommandInput, options?: __HttpHandlerOptions): Promise<CreateProductCommandOutput>;
            createProduct(args: CreateProductCommandInput, cb: (err: any, data?: CreateProductCommandOutput) => void): void;
            createProduct(args: CreateProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProductCommandOutput) => void): void;
            /**
                * <p>Creates a plan. A plan includes the list of resources to be
                *          created (when provisioning a new product) or modified (when updating a provisioned product)
                *          when the plan is executed.</p>
                *          <p>You can create one plan per provisioned product. To create a plan for an existing
                *          provisioned product, the product status must be AVAILBLE or TAINTED.</p>
                *          <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>.
                *          To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>
                */
            createProvisionedProductPlan(args: CreateProvisionedProductPlanCommandInput, options?: __HttpHandlerOptions): Promise<CreateProvisionedProductPlanCommandOutput>;
            createProvisionedProductPlan(args: CreateProvisionedProductPlanCommandInput, cb: (err: any, data?: CreateProvisionedProductPlanCommandOutput) => void): void;
            createProvisionedProductPlan(args: CreateProvisionedProductPlanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProvisionedProductPlanCommandOutput) => void): void;
            /**
                * <p>Creates a provisioning artifact (also known as a version) for the specified product.</p>
                *          <p>You cannot create a provisioning artifact for a product that was shared with you.</p>
                *
                *          <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code>
                *          IAM policy permission. This policy permission is required when using the
                *          <code>ImportFromPhysicalId</code> template source in the information data section.</p>
                */
            createProvisioningArtifact(args: CreateProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<CreateProvisioningArtifactCommandOutput>;
            createProvisioningArtifact(args: CreateProvisioningArtifactCommandInput, cb: (err: any, data?: CreateProvisioningArtifactCommandOutput) => void): void;
            createProvisioningArtifact(args: CreateProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Creates a self-service action.</p>
                */
            createServiceAction(args: CreateServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<CreateServiceActionCommandOutput>;
            createServiceAction(args: CreateServiceActionCommandInput, cb: (err: any, data?: CreateServiceActionCommandOutput) => void): void;
            createServiceAction(args: CreateServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateServiceActionCommandOutput) => void): void;
            /**
                * <p>Creates a TagOption.</p>
                */
            createTagOption(args: CreateTagOptionCommandInput, options?: __HttpHandlerOptions): Promise<CreateTagOptionCommandOutput>;
            createTagOption(args: CreateTagOptionCommandInput, cb: (err: any, data?: CreateTagOptionCommandOutput) => void): void;
            createTagOption(args: CreateTagOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTagOptionCommandOutput) => void): void;
            /**
                * <p>Deletes the specified constraint.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            deleteConstraint(args: DeleteConstraintCommandInput, options?: __HttpHandlerOptions): Promise<DeleteConstraintCommandOutput>;
            deleteConstraint(args: DeleteConstraintCommandInput, cb: (err: any, data?: DeleteConstraintCommandOutput) => void): void;
            deleteConstraint(args: DeleteConstraintCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteConstraintCommandOutput) => void): void;
            /**
                * <p>Deletes the specified portfolio.</p>
                *          <p>You cannot delete a portfolio if it was shared with you or if it has associated
                *          products, users, constraints, or shared accounts.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            deletePortfolio(args: DeletePortfolioCommandInput, options?: __HttpHandlerOptions): Promise<DeletePortfolioCommandOutput>;
            deletePortfolio(args: DeletePortfolioCommandInput, cb: (err: any, data?: DeletePortfolioCommandOutput) => void): void;
            deletePortfolio(args: DeletePortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePortfolioCommandOutput) => void): void;
            /**
                * <p>Stops sharing the specified portfolio with the specified account or organization
                *          node. Shares to an organization node can only be deleted by the management account of an
                *          organization or by a delegated administrator.</p>
                *          <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>
                */
            deletePortfolioShare(args: DeletePortfolioShareCommandInput, options?: __HttpHandlerOptions): Promise<DeletePortfolioShareCommandOutput>;
            deletePortfolioShare(args: DeletePortfolioShareCommandInput, cb: (err: any, data?: DeletePortfolioShareCommandOutput) => void): void;
            deletePortfolioShare(args: DeletePortfolioShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePortfolioShareCommandOutput) => void): void;
            /**
                * <p>Deletes the specified product.</p>
                *          <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            deleteProduct(args: DeleteProductCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProductCommandOutput>;
            deleteProduct(args: DeleteProductCommandInput, cb: (err: any, data?: DeleteProductCommandOutput) => void): void;
            deleteProduct(args: DeleteProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProductCommandOutput) => void): void;
            /**
                * <p>Deletes the specified plan.</p>
                */
            deleteProvisionedProductPlan(args: DeleteProvisionedProductPlanCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProvisionedProductPlanCommandOutput>;
            deleteProvisionedProductPlan(args: DeleteProvisionedProductPlanCommandInput, cb: (err: any, data?: DeleteProvisionedProductPlanCommandOutput) => void): void;
            deleteProvisionedProductPlan(args: DeleteProvisionedProductPlanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProvisionedProductPlanCommandOutput) => void): void;
            /**
                * <p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p>
                *          <p>You cannot delete a provisioning artifact associated with a product that was shared with you.
                *          You cannot delete the last provisioning artifact for a product, because a product must have at
                *          least one provisioning artifact.</p>
                */
            deleteProvisioningArtifact(args: DeleteProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProvisioningArtifactCommandOutput>;
            deleteProvisioningArtifact(args: DeleteProvisioningArtifactCommandInput, cb: (err: any, data?: DeleteProvisioningArtifactCommandOutput) => void): void;
            deleteProvisioningArtifact(args: DeleteProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Deletes a self-service action.</p>
                */
            deleteServiceAction(args: DeleteServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteServiceActionCommandOutput>;
            deleteServiceAction(args: DeleteServiceActionCommandInput, cb: (err: any, data?: DeleteServiceActionCommandOutput) => void): void;
            deleteServiceAction(args: DeleteServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteServiceActionCommandOutput) => void): void;
            /**
                * <p>Deletes the specified TagOption.</p>
                *          <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>
                */
            deleteTagOption(args: DeleteTagOptionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTagOptionCommandOutput>;
            deleteTagOption(args: DeleteTagOptionCommandInput, cb: (err: any, data?: DeleteTagOptionCommandOutput) => void): void;
            deleteTagOption(args: DeleteTagOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTagOptionCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified constraint.</p>
                */
            describeConstraint(args: DescribeConstraintCommandInput, options?: __HttpHandlerOptions): Promise<DescribeConstraintCommandOutput>;
            describeConstraint(args: DescribeConstraintCommandInput, cb: (err: any, data?: DescribeConstraintCommandOutput) => void): void;
            describeConstraint(args: DescribeConstraintCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeConstraintCommandOutput) => void): void;
            /**
                * <p>Gets the status of the specified copy product operation.</p>
                */
            describeCopyProductStatus(args: DescribeCopyProductStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeCopyProductStatusCommandOutput>;
            describeCopyProductStatus(args: DescribeCopyProductStatusCommandInput, cb: (err: any, data?: DescribeCopyProductStatusCommandOutput) => void): void;
            describeCopyProductStatus(args: DescribeCopyProductStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeCopyProductStatusCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified portfolio.</p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            describePortfolio(args: DescribePortfolioCommandInput, options?: __HttpHandlerOptions): Promise<DescribePortfolioCommandOutput>;
            describePortfolio(args: DescribePortfolioCommandInput, cb: (err: any, data?: DescribePortfolioCommandOutput) => void): void;
            describePortfolio(args: DescribePortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePortfolioCommandOutput) => void): void;
            /**
                * <p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p>
                *          <p>You can use this API to determine which accounts or organizational nodes this
                *          portfolio have been shared, whether the recipient entity has imported the share, and
                *          whether TagOptions are included with the share.</p>
                *          <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>
                */
            describePortfolioShares(args: DescribePortfolioSharesCommandInput, options?: __HttpHandlerOptions): Promise<DescribePortfolioSharesCommandOutput>;
            describePortfolioShares(args: DescribePortfolioSharesCommandInput, cb: (err: any, data?: DescribePortfolioSharesCommandOutput) => void): void;
            describePortfolioShares(args: DescribePortfolioSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePortfolioSharesCommandOutput) => void): void;
            /**
                * <p>Gets the status of the specified portfolio share operation. This API can only be called
                *          by the management account in the organization or by a delegated admin.</p>
                */
            describePortfolioShareStatus(args: DescribePortfolioShareStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribePortfolioShareStatusCommandOutput>;
            describePortfolioShareStatus(args: DescribePortfolioShareStatusCommandInput, cb: (err: any, data?: DescribePortfolioShareStatusCommandOutput) => void): void;
            describePortfolioShareStatus(args: DescribePortfolioShareStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePortfolioShareStatusCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified product.</p>
                */
            describeProduct(args: DescribeProductCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProductCommandOutput>;
            describeProduct(args: DescribeProductCommandInput, cb: (err: any, data?: DescribeProductCommandOutput) => void): void;
            describeProduct(args: DescribeProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProductCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified product. This operation is run with administrator access.</p>
                */
            describeProductAsAdmin(args: DescribeProductAsAdminCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProductAsAdminCommandOutput>;
            describeProductAsAdmin(args: DescribeProductAsAdminCommandInput, cb: (err: any, data?: DescribeProductAsAdminCommandOutput) => void): void;
            describeProductAsAdmin(args: DescribeProductAsAdminCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProductAsAdminCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified product.</p>
                */
            describeProductView(args: DescribeProductViewCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProductViewCommandOutput>;
            describeProductView(args: DescribeProductViewCommandInput, cb: (err: any, data?: DescribeProductViewCommandOutput) => void): void;
            describeProductView(args: DescribeProductViewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProductViewCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified provisioned product.</p>
                */
            describeProvisionedProduct(args: DescribeProvisionedProductCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisionedProductCommandOutput>;
            describeProvisionedProduct(args: DescribeProvisionedProductCommandInput, cb: (err: any, data?: DescribeProvisionedProductCommandOutput) => void): void;
            describeProvisionedProduct(args: DescribeProvisionedProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisionedProductCommandOutput) => void): void;
            /**
                * <p>Gets information about the resource changes for the specified plan.</p>
                */
            describeProvisionedProductPlan(args: DescribeProvisionedProductPlanCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisionedProductPlanCommandOutput>;
            describeProvisionedProductPlan(args: DescribeProvisionedProductPlanCommandInput, cb: (err: any, data?: DescribeProvisionedProductPlanCommandOutput) => void): void;
            describeProvisionedProductPlan(args: DescribeProvisionedProductPlanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisionedProductPlanCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified provisioning artifact (also known as a version) for the specified product.</p>
                */
            describeProvisioningArtifact(args: DescribeProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisioningArtifactCommandOutput>;
            describeProvisioningArtifact(args: DescribeProvisioningArtifactCommandInput, cb: (err: any, data?: DescribeProvisioningArtifactCommandOutput) => void): void;
            describeProvisioningArtifact(args: DescribeProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Gets information about the configuration required to provision the specified product using
                *          the specified provisioning artifact.</p>
                *          <p>If the output contains a TagOption key with an empty list of values, there is a
                *          TagOption conflict for that key. The end user cannot take action to fix the conflict, and
                *          launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>,
                *          do not include conflicted TagOption keys as tags, or this causes the error
                *          "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".
                *          Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>
                */
            describeProvisioningParameters(args: DescribeProvisioningParametersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProvisioningParametersCommandOutput>;
            describeProvisioningParameters(args: DescribeProvisioningParametersCommandInput, cb: (err: any, data?: DescribeProvisioningParametersCommandOutput) => void): void;
            describeProvisioningParameters(args: DescribeProvisioningParametersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProvisioningParametersCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified request operation.</p>
                *          <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>,
                *          <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>).
                *       </p>
                *          <note>
                *             <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner
                *       will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to
                *       use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p>
                *          </note>
                */
            describeRecord(args: DescribeRecordCommandInput, options?: __HttpHandlerOptions): Promise<DescribeRecordCommandOutput>;
            describeRecord(args: DescribeRecordCommandInput, cb: (err: any, data?: DescribeRecordCommandOutput) => void): void;
            describeRecord(args: DescribeRecordCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeRecordCommandOutput) => void): void;
            /**
                * <p>Describes a self-service action.</p>
                */
            describeServiceAction(args: DescribeServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeServiceActionCommandOutput>;
            describeServiceAction(args: DescribeServiceActionCommandInput, cb: (err: any, data?: DescribeServiceActionCommandOutput) => void): void;
            describeServiceAction(args: DescribeServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeServiceActionCommandOutput) => void): void;
            /**
                * <p>Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.</p>
                */
            describeServiceActionExecutionParameters(args: DescribeServiceActionExecutionParametersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeServiceActionExecutionParametersCommandOutput>;
            describeServiceActionExecutionParameters(args: DescribeServiceActionExecutionParametersCommandInput, cb: (err: any, data?: DescribeServiceActionExecutionParametersCommandOutput) => void): void;
            describeServiceActionExecutionParameters(args: DescribeServiceActionExecutionParametersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeServiceActionExecutionParametersCommandOutput) => void): void;
            /**
                * <p>Gets information about the specified TagOption.</p>
                */
            describeTagOption(args: DescribeTagOptionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTagOptionCommandOutput>;
            describeTagOption(args: DescribeTagOptionCommandInput, cb: (err: any, data?: DescribeTagOptionCommandOutput) => void): void;
            describeTagOption(args: DescribeTagOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTagOptionCommandOutput) => void): void;
            /**
                * <p>Disable portfolio sharing through AWS Organizations feature. This feature will not
                *          delete your current shares but it will prevent you from creating new shares throughout your
                *          organization. Current shares will not be in sync with your organization structure if it
                *          changes after calling this API. This API can only be called by the management  account in
                *          the organization.</p>
                *          <p>This API can't be invoked if there are active delegated administrators in the organization.</p>
                *          <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>
                */
            disableAWSOrganizationsAccess(args: DisableAWSOrganizationsAccessCommandInput, options?: __HttpHandlerOptions): Promise<DisableAWSOrganizationsAccessCommandOutput>;
            disableAWSOrganizationsAccess(args: DisableAWSOrganizationsAccessCommandInput, cb: (err: any, data?: DisableAWSOrganizationsAccessCommandOutput) => void): void;
            disableAWSOrganizationsAccess(args: DisableAWSOrganizationsAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableAWSOrganizationsAccessCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified budget from the specified resource.</p>
                */
            disassociateBudgetFromResource(args: DisassociateBudgetFromResourceCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateBudgetFromResourceCommandOutput>;
            disassociateBudgetFromResource(args: DisassociateBudgetFromResourceCommandInput, cb: (err: any, data?: DisassociateBudgetFromResourceCommandOutput) => void): void;
            disassociateBudgetFromResource(args: DisassociateBudgetFromResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateBudgetFromResourceCommandOutput) => void): void;
            /**
                * <p>Disassociates a previously associated principal ARN from a specified
                *          portfolio.</p>
                */
            disassociatePrincipalFromPortfolio(args: DisassociatePrincipalFromPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<DisassociatePrincipalFromPortfolioCommandOutput>;
            disassociatePrincipalFromPortfolio(args: DisassociatePrincipalFromPortfolioCommandInput, cb: (err: any, data?: DisassociatePrincipalFromPortfolioCommandOutput) => void): void;
            disassociatePrincipalFromPortfolio(args: DisassociatePrincipalFromPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociatePrincipalFromPortfolioCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified product from the specified portfolio. </p>
                *          <p>A delegated admin is authorized to invoke this command.</p>
                */
            disassociateProductFromPortfolio(args: DisassociateProductFromPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateProductFromPortfolioCommandOutput>;
            disassociateProductFromPortfolio(args: DisassociateProductFromPortfolioCommandInput, cb: (err: any, data?: DisassociateProductFromPortfolioCommandOutput) => void): void;
            disassociateProductFromPortfolio(args: DisassociateProductFromPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateProductFromPortfolioCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified self-service action association from the specified provisioning artifact.</p>
                */
            disassociateServiceActionFromProvisioningArtifact(args: DisassociateServiceActionFromProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateServiceActionFromProvisioningArtifactCommandOutput>;
            disassociateServiceActionFromProvisioningArtifact(args: DisassociateServiceActionFromProvisioningArtifactCommandInput, cb: (err: any, data?: DisassociateServiceActionFromProvisioningArtifactCommandOutput) => void): void;
            disassociateServiceActionFromProvisioningArtifact(args: DisassociateServiceActionFromProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateServiceActionFromProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified TagOption from the specified resource.</p>
                */
            disassociateTagOptionFromResource(args: DisassociateTagOptionFromResourceCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateTagOptionFromResourceCommandOutput>;
            disassociateTagOptionFromResource(args: DisassociateTagOptionFromResourceCommandInput, cb: (err: any, data?: DisassociateTagOptionFromResourceCommandOutput) => void): void;
            disassociateTagOptionFromResource(args: DisassociateTagOptionFromResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateTagOptionFromResourceCommandOutput) => void): void;
            /**
                * <p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service
                *          Catalog to receive updates on your organization in order to sync your shares with the
                *          current structure. This API can only be called by the management  account in the
                *          organization.</p>
                *          <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p>
                *          <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>
                */
            enableAWSOrganizationsAccess(args: EnableAWSOrganizationsAccessCommandInput, options?: __HttpHandlerOptions): Promise<EnableAWSOrganizationsAccessCommandOutput>;
            enableAWSOrganizationsAccess(args: EnableAWSOrganizationsAccessCommandInput, cb: (err: any, data?: EnableAWSOrganizationsAccessCommandOutput) => void): void;
            enableAWSOrganizationsAccess(args: EnableAWSOrganizationsAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableAWSOrganizationsAccessCommandOutput) => void): void;
            /**
                * <p>Provisions or modifies a product based on the resource changes for the specified plan.</p>
                */
            executeProvisionedProductPlan(args: ExecuteProvisionedProductPlanCommandInput, options?: __HttpHandlerOptions): Promise<ExecuteProvisionedProductPlanCommandOutput>;
            executeProvisionedProductPlan(args: ExecuteProvisionedProductPlanCommandInput, cb: (err: any, data?: ExecuteProvisionedProductPlanCommandOutput) => void): void;
            executeProvisionedProductPlan(args: ExecuteProvisionedProductPlanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExecuteProvisionedProductPlanCommandOutput) => void): void;
            /**
                * <p>Executes a self-service action against a provisioned product.</p>
                */
            executeProvisionedProductServiceAction(args: ExecuteProvisionedProductServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<ExecuteProvisionedProductServiceActionCommandOutput>;
            executeProvisionedProductServiceAction(args: ExecuteProvisionedProductServiceActionCommandInput, cb: (err: any, data?: ExecuteProvisionedProductServiceActionCommandOutput) => void): void;
            executeProvisionedProductServiceAction(args: ExecuteProvisionedProductServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExecuteProvisionedProductServiceActionCommandOutput) => void): void;
            /**
                * <p>Get the Access Status for AWS Organization portfolio share feature. This API can only be
                *          called by the management account in the organization or by a delegated admin.</p>
                */
            getAWSOrganizationsAccessStatus(args: GetAWSOrganizationsAccessStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetAWSOrganizationsAccessStatusCommandOutput>;
            getAWSOrganizationsAccessStatus(args: GetAWSOrganizationsAccessStatusCommandInput, cb: (err: any, data?: GetAWSOrganizationsAccessStatusCommandOutput) => void): void;
            getAWSOrganizationsAccessStatus(args: GetAWSOrganizationsAccessStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAWSOrganizationsAccessStatusCommandOutput) => void): void;
            /**
                * <p>This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.</p>
                */
            getProvisionedProductOutputs(args: GetProvisionedProductOutputsCommandInput, options?: __HttpHandlerOptions): Promise<GetProvisionedProductOutputsCommandOutput>;
            getProvisionedProductOutputs(args: GetProvisionedProductOutputsCommandInput, cb: (err: any, data?: GetProvisionedProductOutputsCommandOutput) => void): void;
            getProvisionedProductOutputs(args: GetProvisionedProductOutputsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetProvisionedProductOutputsCommandOutput) => void): void;
            /**
                * <p>Requests the import of a resource as a Service Catalog provisioned product that is
                *          associated to a Service Catalog product and provisioning artifact. Once imported, all
                *          supported Service Catalog governance actions are supported on the provisioned
                *          product.</p>
                *          <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and
                *          non-root nested stacks are not supported.</p>
                *          <p>The CloudFormation stack must have one of the following statuses to be imported:
                *          <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>,
                *          <code>IMPORT_ROLLBACK_COMPLETE</code>.</p>
                *          <p>Import of the resource requires that the CloudFormation stack template matches the
                *          associated Service Catalog product provisioning artifact. </p>
                *
                *          <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code>
                *          and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>
                */
            importAsProvisionedProduct(args: ImportAsProvisionedProductCommandInput, options?: __HttpHandlerOptions): Promise<ImportAsProvisionedProductCommandOutput>;
            importAsProvisionedProduct(args: ImportAsProvisionedProductCommandInput, cb: (err: any, data?: ImportAsProvisionedProductCommandOutput) => void): void;
            importAsProvisionedProduct(args: ImportAsProvisionedProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportAsProvisionedProductCommandOutput) => void): void;
            /**
                * <p>Lists all imported portfolios for which account-to-account shares were accepted by
                *          this account. By specifying the <code>PortfolioShareType</code>, you can list portfolios for which
                *          organizational shares were accepted by this account.</p>
                */
            listAcceptedPortfolioShares(args: ListAcceptedPortfolioSharesCommandInput, options?: __HttpHandlerOptions): Promise<ListAcceptedPortfolioSharesCommandOutput>;
            listAcceptedPortfolioShares(args: ListAcceptedPortfolioSharesCommandInput, cb: (err: any, data?: ListAcceptedPortfolioSharesCommandOutput) => void): void;
            listAcceptedPortfolioShares(args: ListAcceptedPortfolioSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAcceptedPortfolioSharesCommandOutput) => void): void;
            /**
                * <p>Lists all the budgets associated to the specified resource.</p>
                */
            listBudgetsForResource(args: ListBudgetsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListBudgetsForResourceCommandOutput>;
            listBudgetsForResource(args: ListBudgetsForResourceCommandInput, cb: (err: any, data?: ListBudgetsForResourceCommandOutput) => void): void;
            listBudgetsForResource(args: ListBudgetsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBudgetsForResourceCommandOutput) => void): void;
            /**
                * <p>Lists the constraints for the specified portfolio and product.</p>
                */
            listConstraintsForPortfolio(args: ListConstraintsForPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<ListConstraintsForPortfolioCommandOutput>;
            listConstraintsForPortfolio(args: ListConstraintsForPortfolioCommandInput, cb: (err: any, data?: ListConstraintsForPortfolioCommandOutput) => void): void;
            listConstraintsForPortfolio(args: ListConstraintsForPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListConstraintsForPortfolioCommandOutput) => void): void;
            /**
                * <p>Lists the paths to the specified product. A path is how the user
                *          has access to a specified product, and is necessary when provisioning a product. A path
                *          also determines the constraints put on the product.</p>
                */
            listLaunchPaths(args: ListLaunchPathsCommandInput, options?: __HttpHandlerOptions): Promise<ListLaunchPathsCommandOutput>;
            listLaunchPaths(args: ListLaunchPathsCommandInput, cb: (err: any, data?: ListLaunchPathsCommandOutput) => void): void;
            listLaunchPaths(args: ListLaunchPathsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLaunchPathsCommandOutput) => void): void;
            /**
                * <p>Lists the organization nodes that have access to the specified portfolio. This API can
                *          only be called by the management account in the organization or by a delegated
                *          admin.</p>
                *          <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>
                */
            listOrganizationPortfolioAccess(args: ListOrganizationPortfolioAccessCommandInput, options?: __HttpHandlerOptions): Promise<ListOrganizationPortfolioAccessCommandOutput>;
            listOrganizationPortfolioAccess(args: ListOrganizationPortfolioAccessCommandInput, cb: (err: any, data?: ListOrganizationPortfolioAccessCommandOutput) => void): void;
            listOrganizationPortfolioAccess(args: ListOrganizationPortfolioAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOrganizationPortfolioAccessCommandOutput) => void): void;
            /**
                * <p>Lists the account IDs that have access to the specified portfolio.</p>
                *          <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>
                */
            listPortfolioAccess(args: ListPortfolioAccessCommandInput, options?: __HttpHandlerOptions): Promise<ListPortfolioAccessCommandOutput>;
            listPortfolioAccess(args: ListPortfolioAccessCommandInput, cb: (err: any, data?: ListPortfolioAccessCommandOutput) => void): void;
            listPortfolioAccess(args: ListPortfolioAccessCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPortfolioAccessCommandOutput) => void): void;
            /**
                * <p>Lists all portfolios in the catalog.</p>
                */
            listPortfolios(args: ListPortfoliosCommandInput, options?: __HttpHandlerOptions): Promise<ListPortfoliosCommandOutput>;
            listPortfolios(args: ListPortfoliosCommandInput, cb: (err: any, data?: ListPortfoliosCommandOutput) => void): void;
            listPortfolios(args: ListPortfoliosCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPortfoliosCommandOutput) => void): void;
            /**
                * <p>Lists all portfolios that the specified product is associated with.</p>
                */
            listPortfoliosForProduct(args: ListPortfoliosForProductCommandInput, options?: __HttpHandlerOptions): Promise<ListPortfoliosForProductCommandOutput>;
            listPortfoliosForProduct(args: ListPortfoliosForProductCommandInput, cb: (err: any, data?: ListPortfoliosForProductCommandOutput) => void): void;
            listPortfoliosForProduct(args: ListPortfoliosForProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPortfoliosForProductCommandOutput) => void): void;
            /**
                * <p>Lists all principal ARNs associated with the specified portfolio.</p>
                */
            listPrincipalsForPortfolio(args: ListPrincipalsForPortfolioCommandInput, options?: __HttpHandlerOptions): Promise<ListPrincipalsForPortfolioCommandOutput>;
            listPrincipalsForPortfolio(args: ListPrincipalsForPortfolioCommandInput, cb: (err: any, data?: ListPrincipalsForPortfolioCommandOutput) => void): void;
            listPrincipalsForPortfolio(args: ListPrincipalsForPortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPrincipalsForPortfolioCommandOutput) => void): void;
            /**
                * <p>Lists the plans for the specified provisioned product or all plans to which the user has access.</p>
                */
            listProvisionedProductPlans(args: ListProvisionedProductPlansCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisionedProductPlansCommandOutput>;
            listProvisionedProductPlans(args: ListProvisionedProductPlansCommandInput, cb: (err: any, data?: ListProvisionedProductPlansCommandOutput) => void): void;
            listProvisionedProductPlans(args: ListProvisionedProductPlansCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisionedProductPlansCommandOutput) => void): void;
            /**
                * <p>Lists all provisioning artifacts (also known as versions) for the specified product.</p>
                */
            listProvisioningArtifacts(args: ListProvisioningArtifactsCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisioningArtifactsCommandOutput>;
            listProvisioningArtifacts(args: ListProvisioningArtifactsCommandInput, cb: (err: any, data?: ListProvisioningArtifactsCommandOutput) => void): void;
            listProvisioningArtifacts(args: ListProvisioningArtifactsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisioningArtifactsCommandOutput) => void): void;
            /**
                * <p>Lists all provisioning artifacts (also known as versions) for the specified self-service action.</p>
                */
            listProvisioningArtifactsForServiceAction(args: ListProvisioningArtifactsForServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<ListProvisioningArtifactsForServiceActionCommandOutput>;
            listProvisioningArtifactsForServiceAction(args: ListProvisioningArtifactsForServiceActionCommandInput, cb: (err: any, data?: ListProvisioningArtifactsForServiceActionCommandOutput) => void): void;
            listProvisioningArtifactsForServiceAction(args: ListProvisioningArtifactsForServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProvisioningArtifactsForServiceActionCommandOutput) => void): void;
            /**
                * <p>Lists the specified requests or all performed requests.</p>
                */
            listRecordHistory(args: ListRecordHistoryCommandInput, options?: __HttpHandlerOptions): Promise<ListRecordHistoryCommandOutput>;
            listRecordHistory(args: ListRecordHistoryCommandInput, cb: (err: any, data?: ListRecordHistoryCommandOutput) => void): void;
            listRecordHistory(args: ListRecordHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRecordHistoryCommandOutput) => void): void;
            /**
                * <p>Lists the resources associated with the specified TagOption.</p>
                */
            listResourcesForTagOption(args: ListResourcesForTagOptionCommandInput, options?: __HttpHandlerOptions): Promise<ListResourcesForTagOptionCommandOutput>;
            listResourcesForTagOption(args: ListResourcesForTagOptionCommandInput, cb: (err: any, data?: ListResourcesForTagOptionCommandOutput) => void): void;
            listResourcesForTagOption(args: ListResourcesForTagOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourcesForTagOptionCommandOutput) => void): void;
            /**
                * <p>Lists all self-service actions.</p>
                */
            listServiceActions(args: ListServiceActionsCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceActionsCommandOutput>;
            listServiceActions(args: ListServiceActionsCommandInput, cb: (err: any, data?: ListServiceActionsCommandOutput) => void): void;
            listServiceActions(args: ListServiceActionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceActionsCommandOutput) => void): void;
            /**
                * <p>Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.</p>
                */
            listServiceActionsForProvisioningArtifact(args: ListServiceActionsForProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceActionsForProvisioningArtifactCommandOutput>;
            listServiceActionsForProvisioningArtifact(args: ListServiceActionsForProvisioningArtifactCommandInput, cb: (err: any, data?: ListServiceActionsForProvisioningArtifactCommandOutput) => void): void;
            listServiceActionsForProvisioningArtifact(args: ListServiceActionsForProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceActionsForProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. </p>
                */
            listStackInstancesForProvisionedProduct(args: ListStackInstancesForProvisionedProductCommandInput, options?: __HttpHandlerOptions): Promise<ListStackInstancesForProvisionedProductCommandOutput>;
            listStackInstancesForProvisionedProduct(args: ListStackInstancesForProvisionedProductCommandInput, cb: (err: any, data?: ListStackInstancesForProvisionedProductCommandOutput) => void): void;
            listStackInstancesForProvisionedProduct(args: ListStackInstancesForProvisionedProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStackInstancesForProvisionedProductCommandOutput) => void): void;
            /**
                * <p>Lists the specified TagOptions or all TagOptions.</p>
                */
            listTagOptions(args: ListTagOptionsCommandInput, options?: __HttpHandlerOptions): Promise<ListTagOptionsCommandOutput>;
            listTagOptions(args: ListTagOptionsCommandInput, cb: (err: any, data?: ListTagOptionsCommandOutput) => void): void;
            listTagOptions(args: ListTagOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagOptionsCommandOutput) => void): void;
            /**
                * <p>Provisions the specified product.</p>
                *          <p>A provisioned product is a resourced instance of a product.
                *          For example, provisioning a product based on a CloudFormation template launches a
                *          CloudFormation stack and its underlying resources.
                *          You can check the status of this request using <a>DescribeRecord</a>.</p>
                *          <p>If the request contains a tag key with an empty list of values, there is a
                *          tag conflict for that key. Do not include conflicted keys as tags, or this causes
                *          the error "Parameter validation failed: Missing required parameter in
                *          Tags[<i>N</i>]:<i>Value</i>".</p>
                */
            provisionProduct(args: ProvisionProductCommandInput, options?: __HttpHandlerOptions): Promise<ProvisionProductCommandOutput>;
            provisionProduct(args: ProvisionProductCommandInput, cb: (err: any, data?: ProvisionProductCommandOutput) => void): void;
            provisionProduct(args: ProvisionProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ProvisionProductCommandOutput) => void): void;
            /**
                * <p>Rejects an offer to share the specified portfolio.</p>
                */
            rejectPortfolioShare(args: RejectPortfolioShareCommandInput, options?: __HttpHandlerOptions): Promise<RejectPortfolioShareCommandOutput>;
            rejectPortfolioShare(args: RejectPortfolioShareCommandInput, cb: (err: any, data?: RejectPortfolioShareCommandOutput) => void): void;
            rejectPortfolioShare(args: RejectPortfolioShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectPortfolioShareCommandOutput) => void): void;
            /**
                * <p>Lists the provisioned products that are available (not terminated).</p>
                *          <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>
                */
            scanProvisionedProducts(args: ScanProvisionedProductsCommandInput, options?: __HttpHandlerOptions): Promise<ScanProvisionedProductsCommandOutput>;
            scanProvisionedProducts(args: ScanProvisionedProductsCommandInput, cb: (err: any, data?: ScanProvisionedProductsCommandOutput) => void): void;
            scanProvisionedProducts(args: ScanProvisionedProductsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ScanProvisionedProductsCommandOutput) => void): void;
            /**
                * <p>Gets information about the products to which the caller has access.</p>
                */
            searchProducts(args: SearchProductsCommandInput, options?: __HttpHandlerOptions): Promise<SearchProductsCommandOutput>;
            searchProducts(args: SearchProductsCommandInput, cb: (err: any, data?: SearchProductsCommandOutput) => void): void;
            searchProducts(args: SearchProductsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchProductsCommandOutput) => void): void;
            /**
                * <p>Gets information about the products for the specified portfolio or all products.</p>
                */
            searchProductsAsAdmin(args: SearchProductsAsAdminCommandInput, options?: __HttpHandlerOptions): Promise<SearchProductsAsAdminCommandOutput>;
            searchProductsAsAdmin(args: SearchProductsAsAdminCommandInput, cb: (err: any, data?: SearchProductsAsAdminCommandOutput) => void): void;
            searchProductsAsAdmin(args: SearchProductsAsAdminCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchProductsAsAdminCommandOutput) => void): void;
            /**
                * <p>Gets information about the provisioned products that meet the specified criteria.</p>
                */
            searchProvisionedProducts(args: SearchProvisionedProductsCommandInput, options?: __HttpHandlerOptions): Promise<SearchProvisionedProductsCommandOutput>;
            searchProvisionedProducts(args: SearchProvisionedProductsCommandInput, cb: (err: any, data?: SearchProvisionedProductsCommandOutput) => void): void;
            searchProvisionedProducts(args: SearchProvisionedProductsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchProvisionedProductsCommandOutput) => void): void;
            /**
                * <p>Terminates the specified provisioned product.</p>
                *          <p>This operation does not delete any records associated with the provisioned product.</p>
                *          <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
                */
            terminateProvisionedProduct(args: TerminateProvisionedProductCommandInput, options?: __HttpHandlerOptions): Promise<TerminateProvisionedProductCommandOutput>;
            terminateProvisionedProduct(args: TerminateProvisionedProductCommandInput, cb: (err: any, data?: TerminateProvisionedProductCommandOutput) => void): void;
            terminateProvisionedProduct(args: TerminateProvisionedProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TerminateProvisionedProductCommandOutput) => void): void;
            /**
                * <p>Updates the specified constraint.</p>
                */
            updateConstraint(args: UpdateConstraintCommandInput, options?: __HttpHandlerOptions): Promise<UpdateConstraintCommandOutput>;
            updateConstraint(args: UpdateConstraintCommandInput, cb: (err: any, data?: UpdateConstraintCommandOutput) => void): void;
            updateConstraint(args: UpdateConstraintCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateConstraintCommandOutput) => void): void;
            /**
                * <p>Updates the specified portfolio.</p>
                *          <p>You cannot update a product that was shared with you.</p>
                */
            updatePortfolio(args: UpdatePortfolioCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePortfolioCommandOutput>;
            updatePortfolio(args: UpdatePortfolioCommandInput, cb: (err: any, data?: UpdatePortfolioCommandOutput) => void): void;
            updatePortfolio(args: UpdatePortfolioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePortfolioCommandOutput) => void): void;
            /**
                * <p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p>
                *
                *          <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p>
                *
                *          <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p>
                *
                *          <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p>
                *
                *          <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>
                */
            updatePortfolioShare(args: UpdatePortfolioShareCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePortfolioShareCommandOutput>;
            updatePortfolioShare(args: UpdatePortfolioShareCommandInput, cb: (err: any, data?: UpdatePortfolioShareCommandOutput) => void): void;
            updatePortfolioShare(args: UpdatePortfolioShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePortfolioShareCommandOutput) => void): void;
            /**
                * <p>Updates the specified product.</p>
                */
            updateProduct(args: UpdateProductCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProductCommandOutput>;
            updateProduct(args: UpdateProductCommandInput, cb: (err: any, data?: UpdateProductCommandOutput) => void): void;
            updateProduct(args: UpdateProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProductCommandOutput) => void): void;
            /**
                * <p>Requests updates to the configuration of the specified provisioned product.</p>
                *          <p>If there are tags associated with the object, they cannot be updated or added.
                *          Depending on the specific updates requested, this operation can update with no
                *          interruption, with some interruption, or replace the provisioned product entirely.</p>
                *          <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
                */
            updateProvisionedProduct(args: UpdateProvisionedProductCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProvisionedProductCommandOutput>;
            updateProvisionedProduct(args: UpdateProvisionedProductCommandInput, cb: (err: any, data?: UpdateProvisionedProductCommandOutput) => void): void;
            updateProvisionedProduct(args: UpdateProvisionedProductCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProvisionedProductCommandOutput) => void): void;
            /**
                * <p>Requests updates to the properties of the specified provisioned product.</p>
                */
            updateProvisionedProductProperties(args: UpdateProvisionedProductPropertiesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProvisionedProductPropertiesCommandOutput>;
            updateProvisionedProductProperties(args: UpdateProvisionedProductPropertiesCommandInput, cb: (err: any, data?: UpdateProvisionedProductPropertiesCommandOutput) => void): void;
            updateProvisionedProductProperties(args: UpdateProvisionedProductPropertiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProvisionedProductPropertiesCommandOutput) => void): void;
            /**
                * <p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p>
                *          <p>You cannot update a provisioning artifact for a product that was shared with you.</p>
                */
            updateProvisioningArtifact(args: UpdateProvisioningArtifactCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProvisioningArtifactCommandOutput>;
            updateProvisioningArtifact(args: UpdateProvisioningArtifactCommandInput, cb: (err: any, data?: UpdateProvisioningArtifactCommandOutput) => void): void;
            updateProvisioningArtifact(args: UpdateProvisioningArtifactCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProvisioningArtifactCommandOutput) => void): void;
            /**
                * <p>Updates a self-service action.</p>
                */
            updateServiceAction(args: UpdateServiceActionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceActionCommandOutput>;
            updateServiceAction(args: UpdateServiceActionCommandInput, cb: (err: any, data?: UpdateServiceActionCommandOutput) => void): void;
            updateServiceAction(args: UpdateServiceActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceActionCommandOutput) => void): void;
            /**
                * <p>Updates the specified TagOption.</p>
                */
            updateTagOption(args: UpdateTagOptionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTagOptionCommandOutput>;
            updateTagOption(args: UpdateTagOptionCommandInput, cb: (err: any, data?: UpdateTagOptionCommandOutput) => void): void;
            updateTagOption(args: UpdateTagOptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTagOptionCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AcceptPortfolioShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AcceptPortfolioShareInput, AcceptPortfolioShareOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AcceptPortfolioShareCommandInput extends AcceptPortfolioShareInput {
    }
    export interface AcceptPortfolioShareCommandOutput extends AcceptPortfolioShareOutput, __MetadataBearer {
    }
    /**
        * <p>Accepts an offer to share the specified portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AcceptPortfolioShareCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AcceptPortfolioShareCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AcceptPortfolioShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptPortfolioShareCommandInput} for command's `input` shape.
        * @see {@link AcceptPortfolioShareCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AcceptPortfolioShareCommand extends $Command<AcceptPortfolioShareCommandInput, AcceptPortfolioShareCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AcceptPortfolioShareCommandInput;
            constructor(input: AcceptPortfolioShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptPortfolioShareCommandInput, AcceptPortfolioShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateBudgetWithResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateBudgetWithResourceInput, AssociateBudgetWithResourceOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AssociateBudgetWithResourceCommandInput extends AssociateBudgetWithResourceInput {
    }
    export interface AssociateBudgetWithResourceCommandOutput extends AssociateBudgetWithResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Associates the specified budget with the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AssociateBudgetWithResourceCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AssociateBudgetWithResourceCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AssociateBudgetWithResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateBudgetWithResourceCommandInput} for command's `input` shape.
        * @see {@link AssociateBudgetWithResourceCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AssociateBudgetWithResourceCommand extends $Command<AssociateBudgetWithResourceCommandInput, AssociateBudgetWithResourceCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AssociateBudgetWithResourceCommandInput;
            constructor(input: AssociateBudgetWithResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateBudgetWithResourceCommandInput, AssociateBudgetWithResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociatePrincipalWithPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociatePrincipalWithPortfolioInput, AssociatePrincipalWithPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AssociatePrincipalWithPortfolioCommandInput extends AssociatePrincipalWithPortfolioInput {
    }
    export interface AssociatePrincipalWithPortfolioCommandOutput extends AssociatePrincipalWithPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Associates the specified principal ARN with the specified portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AssociatePrincipalWithPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AssociatePrincipalWithPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AssociatePrincipalWithPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociatePrincipalWithPortfolioCommandInput} for command's `input` shape.
        * @see {@link AssociatePrincipalWithPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AssociatePrincipalWithPortfolioCommand extends $Command<AssociatePrincipalWithPortfolioCommandInput, AssociatePrincipalWithPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AssociatePrincipalWithPortfolioCommandInput;
            constructor(input: AssociatePrincipalWithPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociatePrincipalWithPortfolioCommandInput, AssociatePrincipalWithPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateProductWithPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateProductWithPortfolioInput, AssociateProductWithPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AssociateProductWithPortfolioCommandInput extends AssociateProductWithPortfolioInput {
    }
    export interface AssociateProductWithPortfolioCommandOutput extends AssociateProductWithPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Associates the specified product with the specified portfolio.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AssociateProductWithPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AssociateProductWithPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AssociateProductWithPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateProductWithPortfolioCommandInput} for command's `input` shape.
        * @see {@link AssociateProductWithPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AssociateProductWithPortfolioCommand extends $Command<AssociateProductWithPortfolioCommandInput, AssociateProductWithPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AssociateProductWithPortfolioCommandInput;
            constructor(input: AssociateProductWithPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateProductWithPortfolioCommandInput, AssociateProductWithPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateServiceActionWithProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateServiceActionWithProvisioningArtifactInput, AssociateServiceActionWithProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AssociateServiceActionWithProvisioningArtifactCommandInput extends AssociateServiceActionWithProvisioningArtifactInput {
    }
    export interface AssociateServiceActionWithProvisioningArtifactCommandOutput extends AssociateServiceActionWithProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Associates a self-service action with a provisioning artifact.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AssociateServiceActionWithProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AssociateServiceActionWithProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AssociateServiceActionWithProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateServiceActionWithProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link AssociateServiceActionWithProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AssociateServiceActionWithProvisioningArtifactCommand extends $Command<AssociateServiceActionWithProvisioningArtifactCommandInput, AssociateServiceActionWithProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AssociateServiceActionWithProvisioningArtifactCommandInput;
            constructor(input: AssociateServiceActionWithProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateServiceActionWithProvisioningArtifactCommandInput, AssociateServiceActionWithProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateTagOptionWithResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateTagOptionWithResourceInput, AssociateTagOptionWithResourceOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface AssociateTagOptionWithResourceCommandInput extends AssociateTagOptionWithResourceInput {
    }
    export interface AssociateTagOptionWithResourceCommandOutput extends AssociateTagOptionWithResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Associate the specified TagOption with the specified portfolio or product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, AssociateTagOptionWithResourceCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, AssociateTagOptionWithResourceCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new AssociateTagOptionWithResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateTagOptionWithResourceCommandInput} for command's `input` shape.
        * @see {@link AssociateTagOptionWithResourceCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class AssociateTagOptionWithResourceCommand extends $Command<AssociateTagOptionWithResourceCommandInput, AssociateTagOptionWithResourceCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: AssociateTagOptionWithResourceCommandInput;
            constructor(input: AssociateTagOptionWithResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateTagOptionWithResourceCommandInput, AssociateTagOptionWithResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchAssociateServiceActionWithProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { BatchAssociateServiceActionWithProvisioningArtifactInput, BatchAssociateServiceActionWithProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface BatchAssociateServiceActionWithProvisioningArtifactCommandInput extends BatchAssociateServiceActionWithProvisioningArtifactInput {
    }
    export interface BatchAssociateServiceActionWithProvisioningArtifactCommandOutput extends BatchAssociateServiceActionWithProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Associates multiple self-service actions with provisioning artifacts.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, BatchAssociateServiceActionWithProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, BatchAssociateServiceActionWithProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new BatchAssociateServiceActionWithProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchAssociateServiceActionWithProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link BatchAssociateServiceActionWithProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class BatchAssociateServiceActionWithProvisioningArtifactCommand extends $Command<BatchAssociateServiceActionWithProvisioningArtifactCommandInput, BatchAssociateServiceActionWithProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: BatchAssociateServiceActionWithProvisioningArtifactCommandInput;
            constructor(input: BatchAssociateServiceActionWithProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchAssociateServiceActionWithProvisioningArtifactCommandInput, BatchAssociateServiceActionWithProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchDisassociateServiceActionFromProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { BatchDisassociateServiceActionFromProvisioningArtifactInput, BatchDisassociateServiceActionFromProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface BatchDisassociateServiceActionFromProvisioningArtifactCommandInput extends BatchDisassociateServiceActionFromProvisioningArtifactInput {
    }
    export interface BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput extends BatchDisassociateServiceActionFromProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates a batch of self-service actions from the specified provisioning artifact.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, BatchDisassociateServiceActionFromProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, BatchDisassociateServiceActionFromProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new BatchDisassociateServiceActionFromProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchDisassociateServiceActionFromProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class BatchDisassociateServiceActionFromProvisioningArtifactCommand extends $Command<BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: BatchDisassociateServiceActionFromProvisioningArtifactCommandInput;
            constructor(input: BatchDisassociateServiceActionFromProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CopyProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CopyProductInput, CopyProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CopyProductCommandInput extends CopyProductInput {
    }
    export interface CopyProductCommandOutput extends CopyProductOutput, __MetadataBearer {
    }
    /**
        * <p>Copies the specified source product to the specified target product or a new product.</p>
        *          <p>You can copy a product to the same account or another account.
        *          You can copy a product to the same region or another region.</p>
        *          <p>This operation is performed asynchronously. To track the progress of the
        *          operation, use <a>DescribeCopyProductStatus</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CopyProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CopyProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CopyProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CopyProductCommandInput} for command's `input` shape.
        * @see {@link CopyProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CopyProductCommand extends $Command<CopyProductCommandInput, CopyProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CopyProductCommandInput;
            constructor(input: CopyProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CopyProductCommandInput, CopyProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateConstraintCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateConstraintInput, CreateConstraintOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateConstraintCommandInput extends CreateConstraintInput {
    }
    export interface CreateConstraintCommandOutput extends CreateConstraintOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a constraint.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateConstraintCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateConstraintCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateConstraintCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateConstraintCommandInput} for command's `input` shape.
        * @see {@link CreateConstraintCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateConstraintCommand extends $Command<CreateConstraintCommandInput, CreateConstraintCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateConstraintCommandInput;
            constructor(input: CreateConstraintCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateConstraintCommandInput, CreateConstraintCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreatePortfolioInput, CreatePortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreatePortfolioCommandInput extends CreatePortfolioInput {
    }
    export interface CreatePortfolioCommandOutput extends CreatePortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a portfolio.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreatePortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreatePortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreatePortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePortfolioCommandInput} for command's `input` shape.
        * @see {@link CreatePortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreatePortfolioCommand extends $Command<CreatePortfolioCommandInput, CreatePortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreatePortfolioCommandInput;
            constructor(input: CreatePortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePortfolioCommandInput, CreatePortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreatePortfolioShareInput, CreatePortfolioShareOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreatePortfolioShareCommandInput extends CreatePortfolioShareInput {
    }
    export interface CreatePortfolioShareCommandOutput extends CreatePortfolioShareOutput, __MetadataBearer {
    }
    /**
        * <p>Shares the specified portfolio with the specified account or organization node.
        *          Shares to an organization node can only be created by the management account of an
        *          organization or by a delegated administrator. You can share portfolios to an organization,
        *          an organizational unit, or a specific account.</p>
        *          <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p>
        *         <p>
        *             <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p>
        *          <p>You can't share a shared resource, including portfolios that contain a shared product.</p>
        *          <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreatePortfolioShareCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreatePortfolioShareCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreatePortfolioShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePortfolioShareCommandInput} for command's `input` shape.
        * @see {@link CreatePortfolioShareCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreatePortfolioShareCommand extends $Command<CreatePortfolioShareCommandInput, CreatePortfolioShareCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreatePortfolioShareCommandInput;
            constructor(input: CreatePortfolioShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePortfolioShareCommandInput, CreatePortfolioShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateProductInput, CreateProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateProductCommandInput extends CreateProductInput {
    }
    export interface CreateProductCommandOutput extends CreateProductOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a product.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        *
        *          <p>The user or role that performs this operation must have the
        *             <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is
        *          required when using the <code>ImportFromPhysicalId</code> template source in the
        *          information data section.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProductCommandInput} for command's `input` shape.
        * @see {@link CreateProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateProductCommand extends $Command<CreateProductCommandInput, CreateProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateProductCommandInput;
            constructor(input: CreateProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProductCommandInput, CreateProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisionedProductPlanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateProvisionedProductPlanInput, CreateProvisionedProductPlanOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateProvisionedProductPlanCommandInput extends CreateProvisionedProductPlanInput {
    }
    export interface CreateProvisionedProductPlanCommandOutput extends CreateProvisionedProductPlanOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a plan. A plan includes the list of resources to be
        *          created (when provisioning a new product) or modified (when updating a provisioned product)
        *          when the plan is executed.</p>
        *          <p>You can create one plan per provisioned product. To create a plan for an existing
        *          provisioned product, the product status must be AVAILBLE or TAINTED.</p>
        *          <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>.
        *          To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateProvisionedProductPlanCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateProvisionedProductPlanCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateProvisionedProductPlanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProvisionedProductPlanCommandInput} for command's `input` shape.
        * @see {@link CreateProvisionedProductPlanCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateProvisionedProductPlanCommand extends $Command<CreateProvisionedProductPlanCommandInput, CreateProvisionedProductPlanCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateProvisionedProductPlanCommandInput;
            constructor(input: CreateProvisionedProductPlanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisionedProductPlanCommandInput, CreateProvisionedProductPlanCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateProvisioningArtifactInput, CreateProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateProvisioningArtifactCommandInput extends CreateProvisioningArtifactInput {
    }
    export interface CreateProvisioningArtifactCommandOutput extends CreateProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a provisioning artifact (also known as a version) for the specified product.</p>
        *          <p>You cannot create a provisioning artifact for a product that was shared with you.</p>
        *
        *          <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code>
        *          IAM policy permission. This policy permission is required when using the
        *          <code>ImportFromPhysicalId</code> template source in the information data section.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link CreateProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateProvisioningArtifactCommand extends $Command<CreateProvisioningArtifactCommandInput, CreateProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateProvisioningArtifactCommandInput;
            constructor(input: CreateProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningArtifactCommandInput, CreateProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateServiceActionInput, CreateServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateServiceActionCommandInput extends CreateServiceActionInput {
    }
    export interface CreateServiceActionCommandOutput extends CreateServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a self-service action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateServiceActionCommandInput} for command's `input` shape.
        * @see {@link CreateServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateServiceActionCommand extends $Command<CreateServiceActionCommandInput, CreateServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateServiceActionCommandInput;
            constructor(input: CreateServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateServiceActionCommandInput, CreateServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateTagOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateTagOptionInput, CreateTagOptionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface CreateTagOptionCommandInput extends CreateTagOptionInput {
    }
    export interface CreateTagOptionCommandOutput extends CreateTagOptionOutput, __MetadataBearer {
    }
    /**
        * <p>Creates a TagOption.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, CreateTagOptionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, CreateTagOptionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new CreateTagOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTagOptionCommandInput} for command's `input` shape.
        * @see {@link CreateTagOptionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class CreateTagOptionCommand extends $Command<CreateTagOptionCommandInput, CreateTagOptionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: CreateTagOptionCommandInput;
            constructor(input: CreateTagOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTagOptionCommandInput, CreateTagOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteConstraintCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteConstraintInput, DeleteConstraintOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteConstraintCommandInput extends DeleteConstraintInput {
    }
    export interface DeleteConstraintCommandOutput extends DeleteConstraintOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified constraint.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteConstraintCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteConstraintCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteConstraintCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteConstraintCommandInput} for command's `input` shape.
        * @see {@link DeleteConstraintCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteConstraintCommand extends $Command<DeleteConstraintCommandInput, DeleteConstraintCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteConstraintCommandInput;
            constructor(input: DeleteConstraintCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteConstraintCommandInput, DeleteConstraintCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeletePortfolioInput, DeletePortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeletePortfolioCommandInput extends DeletePortfolioInput {
    }
    export interface DeletePortfolioCommandOutput extends DeletePortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified portfolio.</p>
        *          <p>You cannot delete a portfolio if it was shared with you or if it has associated
        *          products, users, constraints, or shared accounts.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeletePortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeletePortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeletePortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePortfolioCommandInput} for command's `input` shape.
        * @see {@link DeletePortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeletePortfolioCommand extends $Command<DeletePortfolioCommandInput, DeletePortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeletePortfolioCommandInput;
            constructor(input: DeletePortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePortfolioCommandInput, DeletePortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeletePortfolioShareInput, DeletePortfolioShareOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeletePortfolioShareCommandInput extends DeletePortfolioShareInput {
    }
    export interface DeletePortfolioShareCommandOutput extends DeletePortfolioShareOutput, __MetadataBearer {
    }
    /**
        * <p>Stops sharing the specified portfolio with the specified account or organization
        *          node. Shares to an organization node can only be deleted by the management account of an
        *          organization or by a delegated administrator.</p>
        *          <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeletePortfolioShareCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeletePortfolioShareCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeletePortfolioShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePortfolioShareCommandInput} for command's `input` shape.
        * @see {@link DeletePortfolioShareCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeletePortfolioShareCommand extends $Command<DeletePortfolioShareCommandInput, DeletePortfolioShareCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeletePortfolioShareCommandInput;
            constructor(input: DeletePortfolioShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePortfolioShareCommandInput, DeletePortfolioShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteProductInput, DeleteProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteProductCommandInput extends DeleteProductInput {
    }
    export interface DeleteProductCommandOutput extends DeleteProductOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified product.</p>
        *          <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProductCommandInput} for command's `input` shape.
        * @see {@link DeleteProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteProductCommand extends $Command<DeleteProductCommandInput, DeleteProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteProductCommandInput;
            constructor(input: DeleteProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProductCommandInput, DeleteProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisionedProductPlanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteProvisionedProductPlanInput, DeleteProvisionedProductPlanOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteProvisionedProductPlanCommandInput extends DeleteProvisionedProductPlanInput {
    }
    export interface DeleteProvisionedProductPlanCommandOutput extends DeleteProvisionedProductPlanOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified plan.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteProvisionedProductPlanCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteProvisionedProductPlanCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteProvisionedProductPlanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProvisionedProductPlanCommandInput} for command's `input` shape.
        * @see {@link DeleteProvisionedProductPlanCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteProvisionedProductPlanCommand extends $Command<DeleteProvisionedProductPlanCommandInput, DeleteProvisionedProductPlanCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteProvisionedProductPlanCommandInput;
            constructor(input: DeleteProvisionedProductPlanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProvisionedProductPlanCommandInput, DeleteProvisionedProductPlanCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteProvisioningArtifactInput, DeleteProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteProvisioningArtifactCommandInput extends DeleteProvisioningArtifactInput {
    }
    export interface DeleteProvisioningArtifactCommandOutput extends DeleteProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p>
        *          <p>You cannot delete a provisioning artifact associated with a product that was shared with you.
        *          You cannot delete the last provisioning artifact for a product, because a product must have at
        *          least one provisioning artifact.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link DeleteProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteProvisioningArtifactCommand extends $Command<DeleteProvisioningArtifactCommandInput, DeleteProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteProvisioningArtifactCommandInput;
            constructor(input: DeleteProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProvisioningArtifactCommandInput, DeleteProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteServiceActionInput, DeleteServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteServiceActionCommandInput extends DeleteServiceActionInput {
    }
    export interface DeleteServiceActionCommandOutput extends DeleteServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes a self-service action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteServiceActionCommandInput} for command's `input` shape.
        * @see {@link DeleteServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteServiceActionCommand extends $Command<DeleteServiceActionCommandInput, DeleteServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteServiceActionCommandInput;
            constructor(input: DeleteServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteServiceActionCommandInput, DeleteServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteTagOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteTagOptionInput, DeleteTagOptionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DeleteTagOptionCommandInput extends DeleteTagOptionInput {
    }
    export interface DeleteTagOptionCommandOutput extends DeleteTagOptionOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified TagOption.</p>
        *          <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DeleteTagOptionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DeleteTagOptionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DeleteTagOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTagOptionCommandInput} for command's `input` shape.
        * @see {@link DeleteTagOptionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DeleteTagOptionCommand extends $Command<DeleteTagOptionCommandInput, DeleteTagOptionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DeleteTagOptionCommandInput;
            constructor(input: DeleteTagOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTagOptionCommandInput, DeleteTagOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeConstraintCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeConstraintInput, DescribeConstraintOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeConstraintCommandInput extends DescribeConstraintInput {
    }
    export interface DescribeConstraintCommandOutput extends DescribeConstraintOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified constraint.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeConstraintCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeConstraintCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeConstraintCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeConstraintCommandInput} for command's `input` shape.
        * @see {@link DescribeConstraintCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeConstraintCommand extends $Command<DescribeConstraintCommandInput, DescribeConstraintCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeConstraintCommandInput;
            constructor(input: DescribeConstraintCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeConstraintCommandInput, DescribeConstraintCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeCopyProductStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeCopyProductStatusInput, DescribeCopyProductStatusOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeCopyProductStatusCommandInput extends DescribeCopyProductStatusInput {
    }
    export interface DescribeCopyProductStatusCommandOutput extends DescribeCopyProductStatusOutput, __MetadataBearer {
    }
    /**
        * <p>Gets the status of the specified copy product operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeCopyProductStatusCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeCopyProductStatusCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeCopyProductStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeCopyProductStatusCommandInput} for command's `input` shape.
        * @see {@link DescribeCopyProductStatusCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeCopyProductStatusCommand extends $Command<DescribeCopyProductStatusCommandInput, DescribeCopyProductStatusCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeCopyProductStatusCommandInput;
            constructor(input: DescribeCopyProductStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeCopyProductStatusCommandInput, DescribeCopyProductStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribePortfolioInput, DescribePortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribePortfolioCommandInput extends DescribePortfolioInput {
    }
    export interface DescribePortfolioCommandOutput extends DescribePortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified portfolio.</p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribePortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribePortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribePortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePortfolioCommandInput} for command's `input` shape.
        * @see {@link DescribePortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribePortfolioCommand extends $Command<DescribePortfolioCommandInput, DescribePortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribePortfolioCommandInput;
            constructor(input: DescribePortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePortfolioCommandInput, DescribePortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioSharesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribePortfolioSharesInput, DescribePortfolioSharesOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribePortfolioSharesCommandInput extends DescribePortfolioSharesInput {
    }
    export interface DescribePortfolioSharesCommandOutput extends DescribePortfolioSharesOutput, __MetadataBearer {
    }
    /**
        * <p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p>
        *          <p>You can use this API to determine which accounts or organizational nodes this
        *          portfolio have been shared, whether the recipient entity has imported the share, and
        *          whether TagOptions are included with the share.</p>
        *          <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribePortfolioSharesCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribePortfolioSharesCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribePortfolioSharesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePortfolioSharesCommandInput} for command's `input` shape.
        * @see {@link DescribePortfolioSharesCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribePortfolioSharesCommand extends $Command<DescribePortfolioSharesCommandInput, DescribePortfolioSharesCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribePortfolioSharesCommandInput;
            constructor(input: DescribePortfolioSharesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePortfolioSharesCommandInput, DescribePortfolioSharesCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioShareStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribePortfolioShareStatusInput, DescribePortfolioShareStatusOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribePortfolioShareStatusCommandInput extends DescribePortfolioShareStatusInput {
    }
    export interface DescribePortfolioShareStatusCommandOutput extends DescribePortfolioShareStatusOutput, __MetadataBearer {
    }
    /**
        * <p>Gets the status of the specified portfolio share operation. This API can only be called
        *          by the management account in the organization or by a delegated admin.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribePortfolioShareStatusCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribePortfolioShareStatusCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribePortfolioShareStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePortfolioShareStatusCommandInput} for command's `input` shape.
        * @see {@link DescribePortfolioShareStatusCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribePortfolioShareStatusCommand extends $Command<DescribePortfolioShareStatusCommandInput, DescribePortfolioShareStatusCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribePortfolioShareStatusCommandInput;
            constructor(input: DescribePortfolioShareStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePortfolioShareStatusCommandInput, DescribePortfolioShareStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductAsAdminCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProductAsAdminInput, DescribeProductAsAdminOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProductAsAdminCommandInput extends DescribeProductAsAdminInput {
    }
    export interface DescribeProductAsAdminCommandOutput extends DescribeProductAsAdminOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified product. This operation is run with administrator access.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProductAsAdminCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProductAsAdminCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProductAsAdminCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProductAsAdminCommandInput} for command's `input` shape.
        * @see {@link DescribeProductAsAdminCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProductAsAdminCommand extends $Command<DescribeProductAsAdminCommandInput, DescribeProductAsAdminCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProductAsAdminCommandInput;
            constructor(input: DescribeProductAsAdminCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProductAsAdminCommandInput, DescribeProductAsAdminCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProductInput, DescribeProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProductCommandInput extends DescribeProductInput {
    }
    export interface DescribeProductCommandOutput extends DescribeProductOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProductCommandInput} for command's `input` shape.
        * @see {@link DescribeProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProductCommand extends $Command<DescribeProductCommandInput, DescribeProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProductCommandInput;
            constructor(input: DescribeProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProductCommandInput, DescribeProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductViewCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProductViewInput, DescribeProductViewOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProductViewCommandInput extends DescribeProductViewInput {
    }
    export interface DescribeProductViewCommandOutput extends DescribeProductViewOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProductViewCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProductViewCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProductViewCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProductViewCommandInput} for command's `input` shape.
        * @see {@link DescribeProductViewCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProductViewCommand extends $Command<DescribeProductViewCommandInput, DescribeProductViewCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProductViewCommandInput;
            constructor(input: DescribeProductViewCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProductViewCommandInput, DescribeProductViewCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProvisionedProductInput, DescribeProvisionedProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProvisionedProductCommandInput extends DescribeProvisionedProductInput {
    }
    export interface DescribeProvisionedProductCommandOutput extends DescribeProvisionedProductOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified provisioned product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProvisionedProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProvisionedProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProvisionedProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisionedProductCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisionedProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProvisionedProductCommand extends $Command<DescribeProvisionedProductCommandInput, DescribeProvisionedProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProvisionedProductCommandInput;
            constructor(input: DescribeProvisionedProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisionedProductCommandInput, DescribeProvisionedProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductPlanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProvisionedProductPlanInput, DescribeProvisionedProductPlanOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProvisionedProductPlanCommandInput extends DescribeProvisionedProductPlanInput {
    }
    export interface DescribeProvisionedProductPlanCommandOutput extends DescribeProvisionedProductPlanOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the resource changes for the specified plan.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProvisionedProductPlanCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProvisionedProductPlanCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProvisionedProductPlanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisionedProductPlanCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisionedProductPlanCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProvisionedProductPlanCommand extends $Command<DescribeProvisionedProductPlanCommandInput, DescribeProvisionedProductPlanCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProvisionedProductPlanCommandInput;
            constructor(input: DescribeProvisionedProductPlanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisionedProductPlanCommandInput, DescribeProvisionedProductPlanCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProvisioningArtifactInput, DescribeProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProvisioningArtifactCommandInput extends DescribeProvisioningArtifactInput {
    }
    export interface DescribeProvisioningArtifactCommandOutput extends DescribeProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified provisioning artifact (also known as a version) for the specified product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProvisioningArtifactCommand extends $Command<DescribeProvisioningArtifactCommandInput, DescribeProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProvisioningArtifactCommandInput;
            constructor(input: DescribeProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisioningArtifactCommandInput, DescribeProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningParametersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeProvisioningParametersInput, DescribeProvisioningParametersOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeProvisioningParametersCommandInput extends DescribeProvisioningParametersInput {
    }
    export interface DescribeProvisioningParametersCommandOutput extends DescribeProvisioningParametersOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the configuration required to provision the specified product using
        *          the specified provisioning artifact.</p>
        *          <p>If the output contains a TagOption key with an empty list of values, there is a
        *          TagOption conflict for that key. The end user cannot take action to fix the conflict, and
        *          launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>,
        *          do not include conflicted TagOption keys as tags, or this causes the error
        *          "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".
        *          Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeProvisioningParametersCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeProvisioningParametersCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeProvisioningParametersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProvisioningParametersCommandInput} for command's `input` shape.
        * @see {@link DescribeProvisioningParametersCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeProvisioningParametersCommand extends $Command<DescribeProvisioningParametersCommandInput, DescribeProvisioningParametersCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeProvisioningParametersCommandInput;
            constructor(input: DescribeProvisioningParametersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProvisioningParametersCommandInput, DescribeProvisioningParametersCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeRecordCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeRecordInput, DescribeRecordOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeRecordCommandInput extends DescribeRecordInput {
    }
    export interface DescribeRecordCommandOutput extends DescribeRecordOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified request operation.</p>
        *          <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>,
        *          <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>).
        *       </p>
        *          <note>
        *             <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner
        *       will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to
        *       use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeRecordCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeRecordCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeRecordCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeRecordCommandInput} for command's `input` shape.
        * @see {@link DescribeRecordCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeRecordCommand extends $Command<DescribeRecordCommandInput, DescribeRecordCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeRecordCommandInput;
            constructor(input: DescribeRecordCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeRecordCommandInput, DescribeRecordCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeServiceActionInput, DescribeServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeServiceActionCommandInput extends DescribeServiceActionInput {
    }
    export interface DescribeServiceActionCommandOutput extends DescribeServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Describes a self-service action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeServiceActionCommandInput} for command's `input` shape.
        * @see {@link DescribeServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeServiceActionCommand extends $Command<DescribeServiceActionCommandInput, DescribeServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeServiceActionCommandInput;
            constructor(input: DescribeServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeServiceActionCommandInput, DescribeServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionExecutionParametersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeServiceActionExecutionParametersInput, DescribeServiceActionExecutionParametersOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeServiceActionExecutionParametersCommandInput extends DescribeServiceActionExecutionParametersInput {
    }
    export interface DescribeServiceActionExecutionParametersCommandOutput extends DescribeServiceActionExecutionParametersOutput, __MetadataBearer {
    }
    /**
        * <p>Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeServiceActionExecutionParametersCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeServiceActionExecutionParametersCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeServiceActionExecutionParametersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeServiceActionExecutionParametersCommandInput} for command's `input` shape.
        * @see {@link DescribeServiceActionExecutionParametersCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeServiceActionExecutionParametersCommand extends $Command<DescribeServiceActionExecutionParametersCommandInput, DescribeServiceActionExecutionParametersCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeServiceActionExecutionParametersCommandInput;
            constructor(input: DescribeServiceActionExecutionParametersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeServiceActionExecutionParametersCommandInput, DescribeServiceActionExecutionParametersCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeTagOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeTagOptionInput, DescribeTagOptionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DescribeTagOptionCommandInput extends DescribeTagOptionInput {
    }
    export interface DescribeTagOptionCommandOutput extends DescribeTagOptionOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the specified TagOption.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DescribeTagOptionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DescribeTagOptionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DescribeTagOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTagOptionCommandInput} for command's `input` shape.
        * @see {@link DescribeTagOptionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DescribeTagOptionCommand extends $Command<DescribeTagOptionCommandInput, DescribeTagOptionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DescribeTagOptionCommandInput;
            constructor(input: DescribeTagOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTagOptionCommandInput, DescribeTagOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisableAWSOrganizationsAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisableAWSOrganizationsAccessInput, DisableAWSOrganizationsAccessOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisableAWSOrganizationsAccessCommandInput extends DisableAWSOrganizationsAccessInput {
    }
    export interface DisableAWSOrganizationsAccessCommandOutput extends DisableAWSOrganizationsAccessOutput, __MetadataBearer {
    }
    /**
        * <p>Disable portfolio sharing through AWS Organizations feature. This feature will not
        *          delete your current shares but it will prevent you from creating new shares throughout your
        *          organization. Current shares will not be in sync with your organization structure if it
        *          changes after calling this API. This API can only be called by the management  account in
        *          the organization.</p>
        *          <p>This API can't be invoked if there are active delegated administrators in the organization.</p>
        *          <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisableAWSOrganizationsAccessCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisableAWSOrganizationsAccessCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisableAWSOrganizationsAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisableAWSOrganizationsAccessCommandInput} for command's `input` shape.
        * @see {@link DisableAWSOrganizationsAccessCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisableAWSOrganizationsAccessCommand extends $Command<DisableAWSOrganizationsAccessCommandInput, DisableAWSOrganizationsAccessCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisableAWSOrganizationsAccessCommandInput;
            constructor(input: DisableAWSOrganizationsAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableAWSOrganizationsAccessCommandInput, DisableAWSOrganizationsAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateBudgetFromResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateBudgetFromResourceInput, DisassociateBudgetFromResourceOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisassociateBudgetFromResourceCommandInput extends DisassociateBudgetFromResourceInput {
    }
    export interface DisassociateBudgetFromResourceCommandOutput extends DisassociateBudgetFromResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified budget from the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisassociateBudgetFromResourceCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisassociateBudgetFromResourceCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisassociateBudgetFromResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateBudgetFromResourceCommandInput} for command's `input` shape.
        * @see {@link DisassociateBudgetFromResourceCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisassociateBudgetFromResourceCommand extends $Command<DisassociateBudgetFromResourceCommandInput, DisassociateBudgetFromResourceCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisassociateBudgetFromResourceCommandInput;
            constructor(input: DisassociateBudgetFromResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateBudgetFromResourceCommandInput, DisassociateBudgetFromResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociatePrincipalFromPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociatePrincipalFromPortfolioInput, DisassociatePrincipalFromPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisassociatePrincipalFromPortfolioCommandInput extends DisassociatePrincipalFromPortfolioInput {
    }
    export interface DisassociatePrincipalFromPortfolioCommandOutput extends DisassociatePrincipalFromPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates a previously associated principal ARN from a specified
        *          portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisassociatePrincipalFromPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisassociatePrincipalFromPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisassociatePrincipalFromPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociatePrincipalFromPortfolioCommandInput} for command's `input` shape.
        * @see {@link DisassociatePrincipalFromPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisassociatePrincipalFromPortfolioCommand extends $Command<DisassociatePrincipalFromPortfolioCommandInput, DisassociatePrincipalFromPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisassociatePrincipalFromPortfolioCommandInput;
            constructor(input: DisassociatePrincipalFromPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociatePrincipalFromPortfolioCommandInput, DisassociatePrincipalFromPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateProductFromPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateProductFromPortfolioInput, DisassociateProductFromPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisassociateProductFromPortfolioCommandInput extends DisassociateProductFromPortfolioInput {
    }
    export interface DisassociateProductFromPortfolioCommandOutput extends DisassociateProductFromPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified product from the specified portfolio. </p>
        *          <p>A delegated admin is authorized to invoke this command.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisassociateProductFromPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisassociateProductFromPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisassociateProductFromPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateProductFromPortfolioCommandInput} for command's `input` shape.
        * @see {@link DisassociateProductFromPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisassociateProductFromPortfolioCommand extends $Command<DisassociateProductFromPortfolioCommandInput, DisassociateProductFromPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisassociateProductFromPortfolioCommandInput;
            constructor(input: DisassociateProductFromPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateProductFromPortfolioCommandInput, DisassociateProductFromPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateServiceActionFromProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateServiceActionFromProvisioningArtifactInput, DisassociateServiceActionFromProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisassociateServiceActionFromProvisioningArtifactCommandInput extends DisassociateServiceActionFromProvisioningArtifactInput {
    }
    export interface DisassociateServiceActionFromProvisioningArtifactCommandOutput extends DisassociateServiceActionFromProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified self-service action association from the specified provisioning artifact.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisassociateServiceActionFromProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisassociateServiceActionFromProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisassociateServiceActionFromProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateServiceActionFromProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link DisassociateServiceActionFromProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisassociateServiceActionFromProvisioningArtifactCommand extends $Command<DisassociateServiceActionFromProvisioningArtifactCommandInput, DisassociateServiceActionFromProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisassociateServiceActionFromProvisioningArtifactCommandInput;
            constructor(input: DisassociateServiceActionFromProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateServiceActionFromProvisioningArtifactCommandInput, DisassociateServiceActionFromProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateTagOptionFromResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateTagOptionFromResourceInput, DisassociateTagOptionFromResourceOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface DisassociateTagOptionFromResourceCommandInput extends DisassociateTagOptionFromResourceInput {
    }
    export interface DisassociateTagOptionFromResourceCommandOutput extends DisassociateTagOptionFromResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified TagOption from the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, DisassociateTagOptionFromResourceCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, DisassociateTagOptionFromResourceCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new DisassociateTagOptionFromResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateTagOptionFromResourceCommandInput} for command's `input` shape.
        * @see {@link DisassociateTagOptionFromResourceCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class DisassociateTagOptionFromResourceCommand extends $Command<DisassociateTagOptionFromResourceCommandInput, DisassociateTagOptionFromResourceCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: DisassociateTagOptionFromResourceCommandInput;
            constructor(input: DisassociateTagOptionFromResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateTagOptionFromResourceCommandInput, DisassociateTagOptionFromResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/EnableAWSOrganizationsAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { EnableAWSOrganizationsAccessInput, EnableAWSOrganizationsAccessOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface EnableAWSOrganizationsAccessCommandInput extends EnableAWSOrganizationsAccessInput {
    }
    export interface EnableAWSOrganizationsAccessCommandOutput extends EnableAWSOrganizationsAccessOutput, __MetadataBearer {
    }
    /**
        * <p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service
        *          Catalog to receive updates on your organization in order to sync your shares with the
        *          current structure. This API can only be called by the management  account in the
        *          organization.</p>
        *          <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p>
        *          <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, EnableAWSOrganizationsAccessCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, EnableAWSOrganizationsAccessCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new EnableAWSOrganizationsAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link EnableAWSOrganizationsAccessCommandInput} for command's `input` shape.
        * @see {@link EnableAWSOrganizationsAccessCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class EnableAWSOrganizationsAccessCommand extends $Command<EnableAWSOrganizationsAccessCommandInput, EnableAWSOrganizationsAccessCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: EnableAWSOrganizationsAccessCommandInput;
            constructor(input: EnableAWSOrganizationsAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<EnableAWSOrganizationsAccessCommandInput, EnableAWSOrganizationsAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductPlanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ExecuteProvisionedProductPlanInput, ExecuteProvisionedProductPlanOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ExecuteProvisionedProductPlanCommandInput extends ExecuteProvisionedProductPlanInput {
    }
    export interface ExecuteProvisionedProductPlanCommandOutput extends ExecuteProvisionedProductPlanOutput, __MetadataBearer {
    }
    /**
        * <p>Provisions or modifies a product based on the resource changes for the specified plan.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ExecuteProvisionedProductPlanCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ExecuteProvisionedProductPlanCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ExecuteProvisionedProductPlanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ExecuteProvisionedProductPlanCommandInput} for command's `input` shape.
        * @see {@link ExecuteProvisionedProductPlanCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ExecuteProvisionedProductPlanCommand extends $Command<ExecuteProvisionedProductPlanCommandInput, ExecuteProvisionedProductPlanCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ExecuteProvisionedProductPlanCommandInput;
            constructor(input: ExecuteProvisionedProductPlanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ExecuteProvisionedProductPlanCommandInput, ExecuteProvisionedProductPlanCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ExecuteProvisionedProductServiceActionInput, ExecuteProvisionedProductServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ExecuteProvisionedProductServiceActionCommandInput extends ExecuteProvisionedProductServiceActionInput {
    }
    export interface ExecuteProvisionedProductServiceActionCommandOutput extends ExecuteProvisionedProductServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Executes a self-service action against a provisioned product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ExecuteProvisionedProductServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ExecuteProvisionedProductServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ExecuteProvisionedProductServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ExecuteProvisionedProductServiceActionCommandInput} for command's `input` shape.
        * @see {@link ExecuteProvisionedProductServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ExecuteProvisionedProductServiceActionCommand extends $Command<ExecuteProvisionedProductServiceActionCommandInput, ExecuteProvisionedProductServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ExecuteProvisionedProductServiceActionCommandInput;
            constructor(input: ExecuteProvisionedProductServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ExecuteProvisionedProductServiceActionCommandInput, ExecuteProvisionedProductServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetAWSOrganizationsAccessStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAWSOrganizationsAccessStatusInput, GetAWSOrganizationsAccessStatusOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface GetAWSOrganizationsAccessStatusCommandInput extends GetAWSOrganizationsAccessStatusInput {
    }
    export interface GetAWSOrganizationsAccessStatusCommandOutput extends GetAWSOrganizationsAccessStatusOutput, __MetadataBearer {
    }
    /**
        * <p>Get the Access Status for AWS Organization portfolio share feature. This API can only be
        *          called by the management account in the organization or by a delegated admin.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, GetAWSOrganizationsAccessStatusCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, GetAWSOrganizationsAccessStatusCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new GetAWSOrganizationsAccessStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAWSOrganizationsAccessStatusCommandInput} for command's `input` shape.
        * @see {@link GetAWSOrganizationsAccessStatusCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class GetAWSOrganizationsAccessStatusCommand extends $Command<GetAWSOrganizationsAccessStatusCommandInput, GetAWSOrganizationsAccessStatusCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: GetAWSOrganizationsAccessStatusCommandInput;
            constructor(input: GetAWSOrganizationsAccessStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAWSOrganizationsAccessStatusCommandInput, GetAWSOrganizationsAccessStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetProvisionedProductOutputsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetProvisionedProductOutputsInput, GetProvisionedProductOutputsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface GetProvisionedProductOutputsCommandInput extends GetProvisionedProductOutputsInput {
    }
    export interface GetProvisionedProductOutputsCommandOutput extends GetProvisionedProductOutputsOutput, __MetadataBearer {
    }
    /**
        * <p>This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, GetProvisionedProductOutputsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, GetProvisionedProductOutputsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new GetProvisionedProductOutputsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetProvisionedProductOutputsCommandInput} for command's `input` shape.
        * @see {@link GetProvisionedProductOutputsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class GetProvisionedProductOutputsCommand extends $Command<GetProvisionedProductOutputsCommandInput, GetProvisionedProductOutputsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: GetProvisionedProductOutputsCommandInput;
            constructor(input: GetProvisionedProductOutputsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetProvisionedProductOutputsCommandInput, GetProvisionedProductOutputsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ImportAsProvisionedProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ImportAsProvisionedProductInput, ImportAsProvisionedProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ImportAsProvisionedProductCommandInput extends ImportAsProvisionedProductInput {
    }
    export interface ImportAsProvisionedProductCommandOutput extends ImportAsProvisionedProductOutput, __MetadataBearer {
    }
    /**
        * <p>Requests the import of a resource as a Service Catalog provisioned product that is
        *          associated to a Service Catalog product and provisioning artifact. Once imported, all
        *          supported Service Catalog governance actions are supported on the provisioned
        *          product.</p>
        *          <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and
        *          non-root nested stacks are not supported.</p>
        *          <p>The CloudFormation stack must have one of the following statuses to be imported:
        *          <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>,
        *          <code>IMPORT_ROLLBACK_COMPLETE</code>.</p>
        *          <p>Import of the resource requires that the CloudFormation stack template matches the
        *          associated Service Catalog product provisioning artifact. </p>
        *
        *          <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code>
        *          and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ImportAsProvisionedProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ImportAsProvisionedProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ImportAsProvisionedProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ImportAsProvisionedProductCommandInput} for command's `input` shape.
        * @see {@link ImportAsProvisionedProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ImportAsProvisionedProductCommand extends $Command<ImportAsProvisionedProductCommandInput, ImportAsProvisionedProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ImportAsProvisionedProductCommandInput;
            constructor(input: ImportAsProvisionedProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportAsProvisionedProductCommandInput, ImportAsProvisionedProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListAcceptedPortfolioSharesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAcceptedPortfolioSharesInput, ListAcceptedPortfolioSharesOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListAcceptedPortfolioSharesCommandInput extends ListAcceptedPortfolioSharesInput {
    }
    export interface ListAcceptedPortfolioSharesCommandOutput extends ListAcceptedPortfolioSharesOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all imported portfolios for which account-to-account shares were accepted by
        *          this account. By specifying the <code>PortfolioShareType</code>, you can list portfolios for which
        *          organizational shares were accepted by this account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListAcceptedPortfolioSharesCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListAcceptedPortfolioSharesCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListAcceptedPortfolioSharesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAcceptedPortfolioSharesCommandInput} for command's `input` shape.
        * @see {@link ListAcceptedPortfolioSharesCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListAcceptedPortfolioSharesCommand extends $Command<ListAcceptedPortfolioSharesCommandInput, ListAcceptedPortfolioSharesCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListAcceptedPortfolioSharesCommandInput;
            constructor(input: ListAcceptedPortfolioSharesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAcceptedPortfolioSharesCommandInput, ListAcceptedPortfolioSharesCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListBudgetsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListBudgetsForResourceInput, ListBudgetsForResourceOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListBudgetsForResourceCommandInput extends ListBudgetsForResourceInput {
    }
    export interface ListBudgetsForResourceCommandOutput extends ListBudgetsForResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all the budgets associated to the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListBudgetsForResourceCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListBudgetsForResourceCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListBudgetsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBudgetsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListBudgetsForResourceCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListBudgetsForResourceCommand extends $Command<ListBudgetsForResourceCommandInput, ListBudgetsForResourceCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListBudgetsForResourceCommandInput;
            constructor(input: ListBudgetsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBudgetsForResourceCommandInput, ListBudgetsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListConstraintsForPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListConstraintsForPortfolioInput, ListConstraintsForPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListConstraintsForPortfolioCommandInput extends ListConstraintsForPortfolioInput {
    }
    export interface ListConstraintsForPortfolioCommandOutput extends ListConstraintsForPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the constraints for the specified portfolio and product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListConstraintsForPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListConstraintsForPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListConstraintsForPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListConstraintsForPortfolioCommandInput} for command's `input` shape.
        * @see {@link ListConstraintsForPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListConstraintsForPortfolioCommand extends $Command<ListConstraintsForPortfolioCommandInput, ListConstraintsForPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListConstraintsForPortfolioCommandInput;
            constructor(input: ListConstraintsForPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListConstraintsForPortfolioCommandInput, ListConstraintsForPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListLaunchPathsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListLaunchPathsInput, ListLaunchPathsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListLaunchPathsCommandInput extends ListLaunchPathsInput {
    }
    export interface ListLaunchPathsCommandOutput extends ListLaunchPathsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the paths to the specified product. A path is how the user
        *          has access to a specified product, and is necessary when provisioning a product. A path
        *          also determines the constraints put on the product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListLaunchPathsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListLaunchPathsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListLaunchPathsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListLaunchPathsCommandInput} for command's `input` shape.
        * @see {@link ListLaunchPathsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListLaunchPathsCommand extends $Command<ListLaunchPathsCommandInput, ListLaunchPathsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListLaunchPathsCommandInput;
            constructor(input: ListLaunchPathsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListLaunchPathsCommandInput, ListLaunchPathsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListOrganizationPortfolioAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListOrganizationPortfolioAccessInput, ListOrganizationPortfolioAccessOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListOrganizationPortfolioAccessCommandInput extends ListOrganizationPortfolioAccessInput {
    }
    export interface ListOrganizationPortfolioAccessCommandOutput extends ListOrganizationPortfolioAccessOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the organization nodes that have access to the specified portfolio. This API can
        *          only be called by the management account in the organization or by a delegated
        *          admin.</p>
        *          <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListOrganizationPortfolioAccessCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListOrganizationPortfolioAccessCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListOrganizationPortfolioAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOrganizationPortfolioAccessCommandInput} for command's `input` shape.
        * @see {@link ListOrganizationPortfolioAccessCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListOrganizationPortfolioAccessCommand extends $Command<ListOrganizationPortfolioAccessCommandInput, ListOrganizationPortfolioAccessCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListOrganizationPortfolioAccessCommandInput;
            constructor(input: ListOrganizationPortfolioAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOrganizationPortfolioAccessCommandInput, ListOrganizationPortfolioAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfolioAccessCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPortfolioAccessInput, ListPortfolioAccessOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListPortfolioAccessCommandInput extends ListPortfolioAccessInput {
    }
    export interface ListPortfolioAccessCommandOutput extends ListPortfolioAccessOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the account IDs that have access to the specified portfolio.</p>
        *          <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListPortfolioAccessCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListPortfolioAccessCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListPortfolioAccessCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPortfolioAccessCommandInput} for command's `input` shape.
        * @see {@link ListPortfolioAccessCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListPortfolioAccessCommand extends $Command<ListPortfolioAccessCommandInput, ListPortfolioAccessCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListPortfolioAccessCommandInput;
            constructor(input: ListPortfolioAccessCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPortfolioAccessCommandInput, ListPortfolioAccessCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPortfoliosInput, ListPortfoliosOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListPortfoliosCommandInput extends ListPortfoliosInput {
    }
    export interface ListPortfoliosCommandOutput extends ListPortfoliosOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all portfolios in the catalog.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListPortfoliosCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListPortfoliosCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListPortfoliosCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPortfoliosCommandInput} for command's `input` shape.
        * @see {@link ListPortfoliosCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListPortfoliosCommand extends $Command<ListPortfoliosCommandInput, ListPortfoliosCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListPortfoliosCommandInput;
            constructor(input: ListPortfoliosCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPortfoliosCommandInput, ListPortfoliosCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosForProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPortfoliosForProductInput, ListPortfoliosForProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListPortfoliosForProductCommandInput extends ListPortfoliosForProductInput {
    }
    export interface ListPortfoliosForProductCommandOutput extends ListPortfoliosForProductOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all portfolios that the specified product is associated with.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListPortfoliosForProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListPortfoliosForProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListPortfoliosForProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPortfoliosForProductCommandInput} for command's `input` shape.
        * @see {@link ListPortfoliosForProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListPortfoliosForProductCommand extends $Command<ListPortfoliosForProductCommandInput, ListPortfoliosForProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListPortfoliosForProductCommandInput;
            constructor(input: ListPortfoliosForProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPortfoliosForProductCommandInput, ListPortfoliosForProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPrincipalsForPortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListPrincipalsForPortfolioInput, ListPrincipalsForPortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListPrincipalsForPortfolioCommandInput extends ListPrincipalsForPortfolioInput {
    }
    export interface ListPrincipalsForPortfolioCommandOutput extends ListPrincipalsForPortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all principal ARNs associated with the specified portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListPrincipalsForPortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListPrincipalsForPortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListPrincipalsForPortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPrincipalsForPortfolioCommandInput} for command's `input` shape.
        * @see {@link ListPrincipalsForPortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListPrincipalsForPortfolioCommand extends $Command<ListPrincipalsForPortfolioCommandInput, ListPrincipalsForPortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListPrincipalsForPortfolioCommandInput;
            constructor(input: ListPrincipalsForPortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPrincipalsForPortfolioCommandInput, ListPrincipalsForPortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisionedProductPlansCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListProvisionedProductPlansInput, ListProvisionedProductPlansOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListProvisionedProductPlansCommandInput extends ListProvisionedProductPlansInput {
    }
    export interface ListProvisionedProductPlansCommandOutput extends ListProvisionedProductPlansOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the plans for the specified provisioned product or all plans to which the user has access.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListProvisionedProductPlansCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListProvisionedProductPlansCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListProvisionedProductPlansCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisionedProductPlansCommandInput} for command's `input` shape.
        * @see {@link ListProvisionedProductPlansCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListProvisionedProductPlansCommand extends $Command<ListProvisionedProductPlansCommandInput, ListProvisionedProductPlansCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListProvisionedProductPlansCommandInput;
            constructor(input: ListProvisionedProductPlansCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisionedProductPlansCommandInput, ListProvisionedProductPlansCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListProvisioningArtifactsInput, ListProvisioningArtifactsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListProvisioningArtifactsCommandInput extends ListProvisioningArtifactsInput {
    }
    export interface ListProvisioningArtifactsCommandOutput extends ListProvisioningArtifactsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all provisioning artifacts (also known as versions) for the specified product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListProvisioningArtifactsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListProvisioningArtifactsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListProvisioningArtifactsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisioningArtifactsCommandInput} for command's `input` shape.
        * @see {@link ListProvisioningArtifactsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListProvisioningArtifactsCommand extends $Command<ListProvisioningArtifactsCommandInput, ListProvisioningArtifactsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListProvisioningArtifactsCommandInput;
            constructor(input: ListProvisioningArtifactsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisioningArtifactsCommandInput, ListProvisioningArtifactsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsForServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListProvisioningArtifactsForServiceActionInput, ListProvisioningArtifactsForServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListProvisioningArtifactsForServiceActionCommandInput extends ListProvisioningArtifactsForServiceActionInput {
    }
    export interface ListProvisioningArtifactsForServiceActionCommandOutput extends ListProvisioningArtifactsForServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all provisioning artifacts (also known as versions) for the specified self-service action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListProvisioningArtifactsForServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListProvisioningArtifactsForServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListProvisioningArtifactsForServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProvisioningArtifactsForServiceActionCommandInput} for command's `input` shape.
        * @see {@link ListProvisioningArtifactsForServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListProvisioningArtifactsForServiceActionCommand extends $Command<ListProvisioningArtifactsForServiceActionCommandInput, ListProvisioningArtifactsForServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListProvisioningArtifactsForServiceActionCommandInput;
            constructor(input: ListProvisioningArtifactsForServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProvisioningArtifactsForServiceActionCommandInput, ListProvisioningArtifactsForServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListRecordHistoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRecordHistoryInput, ListRecordHistoryOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListRecordHistoryCommandInput extends ListRecordHistoryInput {
    }
    export interface ListRecordHistoryCommandOutput extends ListRecordHistoryOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the specified requests or all performed requests.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListRecordHistoryCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListRecordHistoryCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListRecordHistoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRecordHistoryCommandInput} for command's `input` shape.
        * @see {@link ListRecordHistoryCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListRecordHistoryCommand extends $Command<ListRecordHistoryCommandInput, ListRecordHistoryCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListRecordHistoryCommandInput;
            constructor(input: ListRecordHistoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRecordHistoryCommandInput, ListRecordHistoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListResourcesForTagOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourcesForTagOptionInput, ListResourcesForTagOptionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListResourcesForTagOptionCommandInput extends ListResourcesForTagOptionInput {
    }
    export interface ListResourcesForTagOptionCommandOutput extends ListResourcesForTagOptionOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the resources associated with the specified TagOption.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListResourcesForTagOptionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListResourcesForTagOptionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListResourcesForTagOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourcesForTagOptionCommandInput} for command's `input` shape.
        * @see {@link ListResourcesForTagOptionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListResourcesForTagOptionCommand extends $Command<ListResourcesForTagOptionCommandInput, ListResourcesForTagOptionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListResourcesForTagOptionCommandInput;
            constructor(input: ListResourcesForTagOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourcesForTagOptionCommandInput, ListResourcesForTagOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceActionsInput, ListServiceActionsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListServiceActionsCommandInput extends ListServiceActionsInput {
    }
    export interface ListServiceActionsCommandOutput extends ListServiceActionsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists all self-service actions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListServiceActionsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListServiceActionsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListServiceActionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceActionsCommandInput} for command's `input` shape.
        * @see {@link ListServiceActionsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListServiceActionsCommand extends $Command<ListServiceActionsCommandInput, ListServiceActionsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListServiceActionsCommandInput;
            constructor(input: ListServiceActionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceActionsCommandInput, ListServiceActionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsForProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceActionsForProvisioningArtifactInput, ListServiceActionsForProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListServiceActionsForProvisioningArtifactCommandInput extends ListServiceActionsForProvisioningArtifactInput {
    }
    export interface ListServiceActionsForProvisioningArtifactCommandOutput extends ListServiceActionsForProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListServiceActionsForProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListServiceActionsForProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListServiceActionsForProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceActionsForProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link ListServiceActionsForProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListServiceActionsForProvisioningArtifactCommand extends $Command<ListServiceActionsForProvisioningArtifactCommandInput, ListServiceActionsForProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListServiceActionsForProvisioningArtifactCommandInput;
            constructor(input: ListServiceActionsForProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceActionsForProvisioningArtifactCommandInput, ListServiceActionsForProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListStackInstancesForProvisionedProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListStackInstancesForProvisionedProductInput, ListStackInstancesForProvisionedProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListStackInstancesForProvisionedProductCommandInput extends ListStackInstancesForProvisionedProductInput {
    }
    export interface ListStackInstancesForProvisionedProductCommandOutput extends ListStackInstancesForProvisionedProductOutput, __MetadataBearer {
    }
    /**
        * <p>Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListStackInstancesForProvisionedProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListStackInstancesForProvisionedProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListStackInstancesForProvisionedProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListStackInstancesForProvisionedProductCommandInput} for command's `input` shape.
        * @see {@link ListStackInstancesForProvisionedProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListStackInstancesForProvisionedProductCommand extends $Command<ListStackInstancesForProvisionedProductCommandInput, ListStackInstancesForProvisionedProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListStackInstancesForProvisionedProductCommandInput;
            constructor(input: ListStackInstancesForProvisionedProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListStackInstancesForProvisionedProductCommandInput, ListStackInstancesForProvisionedProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListTagOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagOptionsInput, ListTagOptionsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ListTagOptionsCommandInput extends ListTagOptionsInput {
    }
    export interface ListTagOptionsCommandOutput extends ListTagOptionsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the specified TagOptions or all TagOptions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ListTagOptionsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ListTagOptionsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ListTagOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagOptionsCommandInput} for command's `input` shape.
        * @see {@link ListTagOptionsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ListTagOptionsCommand extends $Command<ListTagOptionsCommandInput, ListTagOptionsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ListTagOptionsCommandInput;
            constructor(input: ListTagOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagOptionsCommandInput, ListTagOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ProvisionProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ProvisionProductInput, ProvisionProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ProvisionProductCommandInput extends ProvisionProductInput {
    }
    export interface ProvisionProductCommandOutput extends ProvisionProductOutput, __MetadataBearer {
    }
    /**
        * <p>Provisions the specified product.</p>
        *          <p>A provisioned product is a resourced instance of a product.
        *          For example, provisioning a product based on a CloudFormation template launches a
        *          CloudFormation stack and its underlying resources.
        *          You can check the status of this request using <a>DescribeRecord</a>.</p>
        *          <p>If the request contains a tag key with an empty list of values, there is a
        *          tag conflict for that key. Do not include conflicted keys as tags, or this causes
        *          the error "Parameter validation failed: Missing required parameter in
        *          Tags[<i>N</i>]:<i>Value</i>".</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ProvisionProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ProvisionProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ProvisionProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ProvisionProductCommandInput} for command's `input` shape.
        * @see {@link ProvisionProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ProvisionProductCommand extends $Command<ProvisionProductCommandInput, ProvisionProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ProvisionProductCommandInput;
            constructor(input: ProvisionProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ProvisionProductCommandInput, ProvisionProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/RejectPortfolioShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RejectPortfolioShareInput, RejectPortfolioShareOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface RejectPortfolioShareCommandInput extends RejectPortfolioShareInput {
    }
    export interface RejectPortfolioShareCommandOutput extends RejectPortfolioShareOutput, __MetadataBearer {
    }
    /**
        * <p>Rejects an offer to share the specified portfolio.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, RejectPortfolioShareCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, RejectPortfolioShareCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new RejectPortfolioShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RejectPortfolioShareCommandInput} for command's `input` shape.
        * @see {@link RejectPortfolioShareCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class RejectPortfolioShareCommand extends $Command<RejectPortfolioShareCommandInput, RejectPortfolioShareCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: RejectPortfolioShareCommandInput;
            constructor(input: RejectPortfolioShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectPortfolioShareCommandInput, RejectPortfolioShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ScanProvisionedProductsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ScanProvisionedProductsInput, ScanProvisionedProductsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface ScanProvisionedProductsCommandInput extends ScanProvisionedProductsInput {
    }
    export interface ScanProvisionedProductsCommandOutput extends ScanProvisionedProductsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the provisioned products that are available (not terminated).</p>
        *          <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, ScanProvisionedProductsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, ScanProvisionedProductsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new ScanProvisionedProductsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ScanProvisionedProductsCommandInput} for command's `input` shape.
        * @see {@link ScanProvisionedProductsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class ScanProvisionedProductsCommand extends $Command<ScanProvisionedProductsCommandInput, ScanProvisionedProductsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: ScanProvisionedProductsCommandInput;
            constructor(input: ScanProvisionedProductsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ScanProvisionedProductsCommandInput, ScanProvisionedProductsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsAsAdminCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SearchProductsAsAdminInput, SearchProductsAsAdminOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface SearchProductsAsAdminCommandInput extends SearchProductsAsAdminInput {
    }
    export interface SearchProductsAsAdminCommandOutput extends SearchProductsAsAdminOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the products for the specified portfolio or all products.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, SearchProductsAsAdminCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, SearchProductsAsAdminCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new SearchProductsAsAdminCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchProductsAsAdminCommandInput} for command's `input` shape.
        * @see {@link SearchProductsAsAdminCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class SearchProductsAsAdminCommand extends $Command<SearchProductsAsAdminCommandInput, SearchProductsAsAdminCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: SearchProductsAsAdminCommandInput;
            constructor(input: SearchProductsAsAdminCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchProductsAsAdminCommandInput, SearchProductsAsAdminCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SearchProductsInput, SearchProductsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface SearchProductsCommandInput extends SearchProductsInput {
    }
    export interface SearchProductsCommandOutput extends SearchProductsOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the products to which the caller has access.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, SearchProductsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, SearchProductsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new SearchProductsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchProductsCommandInput} for command's `input` shape.
        * @see {@link SearchProductsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class SearchProductsCommand extends $Command<SearchProductsCommandInput, SearchProductsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: SearchProductsCommandInput;
            constructor(input: SearchProductsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchProductsCommandInput, SearchProductsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProvisionedProductsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { SearchProvisionedProductsInput, SearchProvisionedProductsOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface SearchProvisionedProductsCommandInput extends SearchProvisionedProductsInput {
    }
    export interface SearchProvisionedProductsCommandOutput extends SearchProvisionedProductsOutput, __MetadataBearer {
    }
    /**
        * <p>Gets information about the provisioned products that meet the specified criteria.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, SearchProvisionedProductsCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, SearchProvisionedProductsCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new SearchProvisionedProductsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchProvisionedProductsCommandInput} for command's `input` shape.
        * @see {@link SearchProvisionedProductsCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class SearchProvisionedProductsCommand extends $Command<SearchProvisionedProductsCommandInput, SearchProvisionedProductsCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: SearchProvisionedProductsCommandInput;
            constructor(input: SearchProvisionedProductsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchProvisionedProductsCommandInput, SearchProvisionedProductsCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/TerminateProvisionedProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TerminateProvisionedProductInput, TerminateProvisionedProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface TerminateProvisionedProductCommandInput extends TerminateProvisionedProductInput {
    }
    export interface TerminateProvisionedProductCommandOutput extends TerminateProvisionedProductOutput, __MetadataBearer {
    }
    /**
        * <p>Terminates the specified provisioned product.</p>
        *          <p>This operation does not delete any records associated with the provisioned product.</p>
        *          <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, TerminateProvisionedProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, TerminateProvisionedProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new TerminateProvisionedProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TerminateProvisionedProductCommandInput} for command's `input` shape.
        * @see {@link TerminateProvisionedProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class TerminateProvisionedProductCommand extends $Command<TerminateProvisionedProductCommandInput, TerminateProvisionedProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: TerminateProvisionedProductCommandInput;
            constructor(input: TerminateProvisionedProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TerminateProvisionedProductCommandInput, TerminateProvisionedProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateConstraintCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateConstraintInput, UpdateConstraintOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateConstraintCommandInput extends UpdateConstraintInput {
    }
    export interface UpdateConstraintCommandOutput extends UpdateConstraintOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified constraint.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateConstraintCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateConstraintCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateConstraintCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateConstraintCommandInput} for command's `input` shape.
        * @see {@link UpdateConstraintCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateConstraintCommand extends $Command<UpdateConstraintCommandInput, UpdateConstraintCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateConstraintCommandInput;
            constructor(input: UpdateConstraintCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateConstraintCommandInput, UpdateConstraintCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdatePortfolioInput, UpdatePortfolioOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdatePortfolioCommandInput extends UpdatePortfolioInput {
    }
    export interface UpdatePortfolioCommandOutput extends UpdatePortfolioOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified portfolio.</p>
        *          <p>You cannot update a product that was shared with you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdatePortfolioCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdatePortfolioCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdatePortfolioCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePortfolioCommandInput} for command's `input` shape.
        * @see {@link UpdatePortfolioCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdatePortfolioCommand extends $Command<UpdatePortfolioCommandInput, UpdatePortfolioCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdatePortfolioCommandInput;
            constructor(input: UpdatePortfolioCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePortfolioCommandInput, UpdatePortfolioCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioShareCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdatePortfolioShareInput, UpdatePortfolioShareOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdatePortfolioShareCommandInput extends UpdatePortfolioShareInput {
    }
    export interface UpdatePortfolioShareCommandOutput extends UpdatePortfolioShareOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p>
        *
        *          <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p>
        *
        *          <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p>
        *
        *          <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p>
        *
        *          <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdatePortfolioShareCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdatePortfolioShareCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdatePortfolioShareCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePortfolioShareCommandInput} for command's `input` shape.
        * @see {@link UpdatePortfolioShareCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdatePortfolioShareCommand extends $Command<UpdatePortfolioShareCommandInput, UpdatePortfolioShareCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdatePortfolioShareCommandInput;
            constructor(input: UpdatePortfolioShareCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePortfolioShareCommandInput, UpdatePortfolioShareCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateProductInput, UpdateProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateProductCommandInput extends UpdateProductInput {
    }
    export interface UpdateProductCommandOutput extends UpdateProductOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProductCommandInput} for command's `input` shape.
        * @see {@link UpdateProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateProductCommand extends $Command<UpdateProductCommandInput, UpdateProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateProductCommandInput;
            constructor(input: UpdateProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProductCommandInput, UpdateProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateProvisionedProductInput, UpdateProvisionedProductOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateProvisionedProductCommandInput extends UpdateProvisionedProductInput {
    }
    export interface UpdateProvisionedProductCommandOutput extends UpdateProvisionedProductOutput, __MetadataBearer {
    }
    /**
        * <p>Requests updates to the configuration of the specified provisioned product.</p>
        *          <p>If there are tags associated with the object, they cannot be updated or added.
        *          Depending on the specific updates requested, this operation can update with no
        *          interruption, with some interruption, or replace the provisioned product entirely.</p>
        *          <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateProvisionedProductCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateProvisionedProductCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateProvisionedProductCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProvisionedProductCommandInput} for command's `input` shape.
        * @see {@link UpdateProvisionedProductCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateProvisionedProductCommand extends $Command<UpdateProvisionedProductCommandInput, UpdateProvisionedProductCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateProvisionedProductCommandInput;
            constructor(input: UpdateProvisionedProductCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProvisionedProductCommandInput, UpdateProvisionedProductCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductPropertiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateProvisionedProductPropertiesInput, UpdateProvisionedProductPropertiesOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateProvisionedProductPropertiesCommandInput extends UpdateProvisionedProductPropertiesInput {
    }
    export interface UpdateProvisionedProductPropertiesCommandOutput extends UpdateProvisionedProductPropertiesOutput, __MetadataBearer {
    }
    /**
        * <p>Requests updates to the properties of the specified provisioned product.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateProvisionedProductPropertiesCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateProvisionedProductPropertiesCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateProvisionedProductPropertiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProvisionedProductPropertiesCommandInput} for command's `input` shape.
        * @see {@link UpdateProvisionedProductPropertiesCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateProvisionedProductPropertiesCommand extends $Command<UpdateProvisionedProductPropertiesCommandInput, UpdateProvisionedProductPropertiesCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateProvisionedProductPropertiesCommandInput;
            constructor(input: UpdateProvisionedProductPropertiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProvisionedProductPropertiesCommandInput, UpdateProvisionedProductPropertiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisioningArtifactCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateProvisioningArtifactInput, UpdateProvisioningArtifactOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateProvisioningArtifactCommandInput extends UpdateProvisioningArtifactInput {
    }
    export interface UpdateProvisioningArtifactCommandOutput extends UpdateProvisioningArtifactOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p>
        *          <p>You cannot update a provisioning artifact for a product that was shared with you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateProvisioningArtifactCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateProvisioningArtifactCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateProvisioningArtifactCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProvisioningArtifactCommandInput} for command's `input` shape.
        * @see {@link UpdateProvisioningArtifactCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateProvisioningArtifactCommand extends $Command<UpdateProvisioningArtifactCommandInput, UpdateProvisioningArtifactCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateProvisioningArtifactCommandInput;
            constructor(input: UpdateProvisioningArtifactCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProvisioningArtifactCommandInput, UpdateProvisioningArtifactCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateServiceActionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServiceActionInput, UpdateServiceActionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateServiceActionCommandInput extends UpdateServiceActionInput {
    }
    export interface UpdateServiceActionCommandOutput extends UpdateServiceActionOutput, __MetadataBearer {
    }
    /**
        * <p>Updates a self-service action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateServiceActionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateServiceActionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateServiceActionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceActionCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceActionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateServiceActionCommand extends $Command<UpdateServiceActionCommandInput, UpdateServiceActionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateServiceActionCommandInput;
            constructor(input: UpdateServiceActionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceActionCommandInput, UpdateServiceActionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateTagOptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateTagOptionInput, UpdateTagOptionOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0";
    import { ServiceCatalogClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient";
    export interface UpdateTagOptionCommandInput extends UpdateTagOptionInput {
    }
    export interface UpdateTagOptionCommandOutput extends UpdateTagOptionOutput, __MetadataBearer {
    }
    /**
        * <p>Updates the specified TagOption.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ServiceCatalogClient, UpdateTagOptionCommand } from "@aws-sdk/client-service-catalog"; // ES Modules import
        * // const { ServiceCatalogClient, UpdateTagOptionCommand } = require("@aws-sdk/client-service-catalog"); // CommonJS import
        * const client = new ServiceCatalogClient(config);
        * const command = new UpdateTagOptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateTagOptionCommandInput} for command's `input` shape.
        * @see {@link UpdateTagOptionCommandOutput} for command's `response` shape.
        * @see {@link ServiceCatalogClientResolvedConfig | config} for ServiceCatalogClient's `config` shape.
        *
        */
    export class UpdateTagOptionCommand extends $Command<UpdateTagOptionCommandInput, UpdateTagOptionCommandOutput, ServiceCatalogClientResolvedConfig> {
            readonly input: UpdateTagOptionCommandInput;
            constructor(input: UpdateTagOptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ServiceCatalogClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateTagOptionCommandInput, UpdateTagOptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/ServiceCatalogClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptPortfolioShareCommandInput, AcceptPortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AcceptPortfolioShareCommand";
    import { AssociateBudgetWithResourceCommandInput, AssociateBudgetWithResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateBudgetWithResourceCommand";
    import { AssociatePrincipalWithPortfolioCommandInput, AssociatePrincipalWithPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociatePrincipalWithPortfolioCommand";
    import { AssociateProductWithPortfolioCommandInput, AssociateProductWithPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateProductWithPortfolioCommand";
    import { AssociateServiceActionWithProvisioningArtifactCommandInput, AssociateServiceActionWithProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateServiceActionWithProvisioningArtifactCommand";
    import { AssociateTagOptionWithResourceCommandInput, AssociateTagOptionWithResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/AssociateTagOptionWithResourceCommand";
    import { BatchAssociateServiceActionWithProvisioningArtifactCommandInput, BatchAssociateServiceActionWithProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchAssociateServiceActionWithProvisioningArtifactCommand";
    import { BatchDisassociateServiceActionFromProvisioningArtifactCommandInput, BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/BatchDisassociateServiceActionFromProvisioningArtifactCommand";
    import { CopyProductCommandInput, CopyProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CopyProductCommand";
    import { CreateConstraintCommandInput, CreateConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateConstraintCommand";
    import { CreatePortfolioCommandInput, CreatePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioCommand";
    import { CreatePortfolioShareCommandInput, CreatePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreatePortfolioShareCommand";
    import { CreateProductCommandInput, CreateProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProductCommand";
    import { CreateProvisionedProductPlanCommandInput, CreateProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisionedProductPlanCommand";
    import { CreateProvisioningArtifactCommandInput, CreateProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateProvisioningArtifactCommand";
    import { CreateServiceActionCommandInput, CreateServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateServiceActionCommand";
    import { CreateTagOptionCommandInput, CreateTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/CreateTagOptionCommand";
    import { DeleteConstraintCommandInput, DeleteConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteConstraintCommand";
    import { DeletePortfolioCommandInput, DeletePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioCommand";
    import { DeletePortfolioShareCommandInput, DeletePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeletePortfolioShareCommand";
    import { DeleteProductCommandInput, DeleteProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProductCommand";
    import { DeleteProvisionedProductPlanCommandInput, DeleteProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisionedProductPlanCommand";
    import { DeleteProvisioningArtifactCommandInput, DeleteProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteProvisioningArtifactCommand";
    import { DeleteServiceActionCommandInput, DeleteServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteServiceActionCommand";
    import { DeleteTagOptionCommandInput, DeleteTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DeleteTagOptionCommand";
    import { DescribeConstraintCommandInput, DescribeConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeConstraintCommand";
    import { DescribeCopyProductStatusCommandInput, DescribeCopyProductStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeCopyProductStatusCommand";
    import { DescribePortfolioCommandInput, DescribePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioCommand";
    import { DescribePortfolioSharesCommandInput, DescribePortfolioSharesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioSharesCommand";
    import { DescribePortfolioShareStatusCommandInput, DescribePortfolioShareStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribePortfolioShareStatusCommand";
    import { DescribeProductAsAdminCommandInput, DescribeProductAsAdminCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductAsAdminCommand";
    import { DescribeProductCommandInput, DescribeProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductCommand";
    import { DescribeProductViewCommandInput, DescribeProductViewCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProductViewCommand";
    import { DescribeProvisionedProductCommandInput, DescribeProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductCommand";
    import { DescribeProvisionedProductPlanCommandInput, DescribeProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisionedProductPlanCommand";
    import { DescribeProvisioningArtifactCommandInput, DescribeProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningArtifactCommand";
    import { DescribeProvisioningParametersCommandInput, DescribeProvisioningParametersCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeProvisioningParametersCommand";
    import { DescribeRecordCommandInput, DescribeRecordCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeRecordCommand";
    import { DescribeServiceActionCommandInput, DescribeServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionCommand";
    import { DescribeServiceActionExecutionParametersCommandInput, DescribeServiceActionExecutionParametersCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeServiceActionExecutionParametersCommand";
    import { DescribeTagOptionCommandInput, DescribeTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DescribeTagOptionCommand";
    import { DisableAWSOrganizationsAccessCommandInput, DisableAWSOrganizationsAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisableAWSOrganizationsAccessCommand";
    import { DisassociateBudgetFromResourceCommandInput, DisassociateBudgetFromResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateBudgetFromResourceCommand";
    import { DisassociatePrincipalFromPortfolioCommandInput, DisassociatePrincipalFromPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociatePrincipalFromPortfolioCommand";
    import { DisassociateProductFromPortfolioCommandInput, DisassociateProductFromPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateProductFromPortfolioCommand";
    import { DisassociateServiceActionFromProvisioningArtifactCommandInput, DisassociateServiceActionFromProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateServiceActionFromProvisioningArtifactCommand";
    import { DisassociateTagOptionFromResourceCommandInput, DisassociateTagOptionFromResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/DisassociateTagOptionFromResourceCommand";
    import { EnableAWSOrganizationsAccessCommandInput, EnableAWSOrganizationsAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/EnableAWSOrganizationsAccessCommand";
    import { ExecuteProvisionedProductPlanCommandInput, ExecuteProvisionedProductPlanCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductPlanCommand";
    import { ExecuteProvisionedProductServiceActionCommandInput, ExecuteProvisionedProductServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ExecuteProvisionedProductServiceActionCommand";
    import { GetAWSOrganizationsAccessStatusCommandInput, GetAWSOrganizationsAccessStatusCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetAWSOrganizationsAccessStatusCommand";
    import { GetProvisionedProductOutputsCommandInput, GetProvisionedProductOutputsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/GetProvisionedProductOutputsCommand";
    import { ImportAsProvisionedProductCommandInput, ImportAsProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ImportAsProvisionedProductCommand";
    import { ListAcceptedPortfolioSharesCommandInput, ListAcceptedPortfolioSharesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListAcceptedPortfolioSharesCommand";
    import { ListBudgetsForResourceCommandInput, ListBudgetsForResourceCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListBudgetsForResourceCommand";
    import { ListConstraintsForPortfolioCommandInput, ListConstraintsForPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListConstraintsForPortfolioCommand";
    import { ListLaunchPathsCommandInput, ListLaunchPathsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListLaunchPathsCommand";
    import { ListOrganizationPortfolioAccessCommandInput, ListOrganizationPortfolioAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListOrganizationPortfolioAccessCommand";
    import { ListPortfolioAccessCommandInput, ListPortfolioAccessCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfolioAccessCommand";
    import { ListPortfoliosCommandInput, ListPortfoliosCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosCommand";
    import { ListPortfoliosForProductCommandInput, ListPortfoliosForProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPortfoliosForProductCommand";
    import { ListPrincipalsForPortfolioCommandInput, ListPrincipalsForPortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListPrincipalsForPortfolioCommand";
    import { ListProvisionedProductPlansCommandInput, ListProvisionedProductPlansCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisionedProductPlansCommand";
    import { ListProvisioningArtifactsCommandInput, ListProvisioningArtifactsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsCommand";
    import { ListProvisioningArtifactsForServiceActionCommandInput, ListProvisioningArtifactsForServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListProvisioningArtifactsForServiceActionCommand";
    import { ListRecordHistoryCommandInput, ListRecordHistoryCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListRecordHistoryCommand";
    import { ListResourcesForTagOptionCommandInput, ListResourcesForTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListResourcesForTagOptionCommand";
    import { ListServiceActionsCommandInput, ListServiceActionsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsCommand";
    import { ListServiceActionsForProvisioningArtifactCommandInput, ListServiceActionsForProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListServiceActionsForProvisioningArtifactCommand";
    import { ListStackInstancesForProvisionedProductCommandInput, ListStackInstancesForProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListStackInstancesForProvisionedProductCommand";
    import { ListTagOptionsCommandInput, ListTagOptionsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ListTagOptionsCommand";
    import { ProvisionProductCommandInput, ProvisionProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ProvisionProductCommand";
    import { RejectPortfolioShareCommandInput, RejectPortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/RejectPortfolioShareCommand";
    import { ScanProvisionedProductsCommandInput, ScanProvisionedProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/ScanProvisionedProductsCommand";
    import { SearchProductsAsAdminCommandInput, SearchProductsAsAdminCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsAsAdminCommand";
    import { SearchProductsCommandInput, SearchProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProductsCommand";
    import { SearchProvisionedProductsCommandInput, SearchProvisionedProductsCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/SearchProvisionedProductsCommand";
    import { TerminateProvisionedProductCommandInput, TerminateProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/TerminateProvisionedProductCommand";
    import { UpdateConstraintCommandInput, UpdateConstraintCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateConstraintCommand";
    import { UpdatePortfolioCommandInput, UpdatePortfolioCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioCommand";
    import { UpdatePortfolioShareCommandInput, UpdatePortfolioShareCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdatePortfolioShareCommand";
    import { UpdateProductCommandInput, UpdateProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProductCommand";
    import { UpdateProvisionedProductCommandInput, UpdateProvisionedProductCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductCommand";
    import { UpdateProvisionedProductPropertiesCommandInput, UpdateProvisionedProductPropertiesCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisionedProductPropertiesCommand";
    import { UpdateProvisioningArtifactCommandInput, UpdateProvisioningArtifactCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateProvisioningArtifactCommand";
    import { UpdateServiceActionCommandInput, UpdateServiceActionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateServiceActionCommand";
    import { UpdateTagOptionCommandInput, UpdateTagOptionCommandOutput } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/commands/UpdateTagOptionCommand";
    export type ServiceInputTypes = AcceptPortfolioShareCommandInput | AssociateBudgetWithResourceCommandInput | AssociatePrincipalWithPortfolioCommandInput | AssociateProductWithPortfolioCommandInput | AssociateServiceActionWithProvisioningArtifactCommandInput | AssociateTagOptionWithResourceCommandInput | BatchAssociateServiceActionWithProvisioningArtifactCommandInput | BatchDisassociateServiceActionFromProvisioningArtifactCommandInput | CopyProductCommandInput | CreateConstraintCommandInput | CreatePortfolioCommandInput | CreatePortfolioShareCommandInput | CreateProductCommandInput | CreateProvisionedProductPlanCommandInput | CreateProvisioningArtifactCommandInput | CreateServiceActionCommandInput | CreateTagOptionCommandInput | DeleteConstraintCommandInput | DeletePortfolioCommandInput | DeletePortfolioShareCommandInput | DeleteProductCommandInput | DeleteProvisionedProductPlanCommandInput | DeleteProvisioningArtifactCommandInput | DeleteServiceActionCommandInput | DeleteTagOptionCommandInput | DescribeConstraintCommandInput | DescribeCopyProductStatusCommandInput | DescribePortfolioCommandInput | DescribePortfolioShareStatusCommandInput | DescribePortfolioSharesCommandInput | DescribeProductAsAdminCommandInput | DescribeProductCommandInput | DescribeProductViewCommandInput | DescribeProvisionedProductCommandInput | DescribeProvisionedProductPlanCommandInput | DescribeProvisioningArtifactCommandInput | DescribeProvisioningParametersCommandInput | DescribeRecordCommandInput | DescribeServiceActionCommandInput | DescribeServiceActionExecutionParametersCommandInput | DescribeTagOptionCommandInput | DisableAWSOrganizationsAccessCommandInput | DisassociateBudgetFromResourceCommandInput | DisassociatePrincipalFromPortfolioCommandInput | DisassociateProductFromPortfolioCommandInput | DisassociateServiceActionFromProvisioningArtifactCommandInput | DisassociateTagOptionFromResourceCommandInput | EnableAWSOrganizationsAccessCommandInput | ExecuteProvisionedProductPlanCommandInput | ExecuteProvisionedProductServiceActionCommandInput | GetAWSOrganizationsAccessStatusCommandInput | GetProvisionedProductOutputsCommandInput | ImportAsProvisionedProductCommandInput | ListAcceptedPortfolioSharesCommandInput | ListBudgetsForResourceCommandInput | ListConstraintsForPortfolioCommandInput | ListLaunchPathsCommandInput | ListOrganizationPortfolioAccessCommandInput | ListPortfolioAccessCommandInput | ListPortfoliosCommandInput | ListPortfoliosForProductCommandInput | ListPrincipalsForPortfolioCommandInput | ListProvisionedProductPlansCommandInput | ListProvisioningArtifactsCommandInput | ListProvisioningArtifactsForServiceActionCommandInput | ListRecordHistoryCommandInput | ListResourcesForTagOptionCommandInput | ListServiceActionsCommandInput | ListServiceActionsForProvisioningArtifactCommandInput | ListStackInstancesForProvisionedProductCommandInput | ListTagOptionsCommandInput | ProvisionProductCommandInput | RejectPortfolioShareCommandInput | ScanProvisionedProductsCommandInput | SearchProductsAsAdminCommandInput | SearchProductsCommandInput | SearchProvisionedProductsCommandInput | TerminateProvisionedProductCommandInput | UpdateConstraintCommandInput | UpdatePortfolioCommandInput | UpdatePortfolioShareCommandInput | UpdateProductCommandInput | UpdateProvisionedProductCommandInput | UpdateProvisionedProductPropertiesCommandInput | UpdateProvisioningArtifactCommandInput | UpdateServiceActionCommandInput | UpdateTagOptionCommandInput;
    export type ServiceOutputTypes = AcceptPortfolioShareCommandOutput | AssociateBudgetWithResourceCommandOutput | AssociatePrincipalWithPortfolioCommandOutput | AssociateProductWithPortfolioCommandOutput | AssociateServiceActionWithProvisioningArtifactCommandOutput | AssociateTagOptionWithResourceCommandOutput | BatchAssociateServiceActionWithProvisioningArtifactCommandOutput | BatchDisassociateServiceActionFromProvisioningArtifactCommandOutput | CopyProductCommandOutput | CreateConstraintCommandOutput | CreatePortfolioCommandOutput | CreatePortfolioShareCommandOutput | CreateProductCommandOutput | CreateProvisionedProductPlanCommandOutput | CreateProvisioningArtifactCommandOutput | CreateServiceActionCommandOutput | CreateTagOptionCommandOutput | DeleteConstraintCommandOutput | DeletePortfolioCommandOutput | DeletePortfolioShareCommandOutput | DeleteProductCommandOutput | DeleteProvisionedProductPlanCommandOutput | DeleteProvisioningArtifactCommandOutput | DeleteServiceActionCommandOutput | DeleteTagOptionCommandOutput | DescribeConstraintCommandOutput | DescribeCopyProductStatusCommandOutput | DescribePortfolioCommandOutput | DescribePortfolioShareStatusCommandOutput | DescribePortfolioSharesCommandOutput | DescribeProductAsAdminCommandOutput | DescribeProductCommandOutput | DescribeProductViewCommandOutput | DescribeProvisionedProductCommandOutput | DescribeProvisionedProductPlanCommandOutput | DescribeProvisioningArtifactCommandOutput | DescribeProvisioningParametersCommandOutput | DescribeRecordCommandOutput | DescribeServiceActionCommandOutput | DescribeServiceActionExecutionParametersCommandOutput | DescribeTagOptionCommandOutput | DisableAWSOrganizationsAccessCommandOutput | DisassociateBudgetFromResourceCommandOutput | DisassociatePrincipalFromPortfolioCommandOutput | DisassociateProductFromPortfolioCommandOutput | DisassociateServiceActionFromProvisioningArtifactCommandOutput | DisassociateTagOptionFromResourceCommandOutput | EnableAWSOrganizationsAccessCommandOutput | ExecuteProvisionedProductPlanCommandOutput | ExecuteProvisionedProductServiceActionCommandOutput | GetAWSOrganizationsAccessStatusCommandOutput | GetProvisionedProductOutputsCommandOutput | ImportAsProvisionedProductCommandOutput | ListAcceptedPortfolioSharesCommandOutput | ListBudgetsForResourceCommandOutput | ListConstraintsForPortfolioCommandOutput | ListLaunchPathsCommandOutput | ListOrganizationPortfolioAccessCommandOutput | ListPortfolioAccessCommandOutput | ListPortfoliosCommandOutput | ListPortfoliosForProductCommandOutput | ListPrincipalsForPortfolioCommandOutput | ListProvisionedProductPlansCommandOutput | ListProvisioningArtifactsCommandOutput | ListProvisioningArtifactsForServiceActionCommandOutput | ListRecordHistoryCommandOutput | ListResourcesForTagOptionCommandOutput | ListServiceActionsCommandOutput | ListServiceActionsForProvisioningArtifactCommandOutput | ListStackInstancesForProvisionedProductCommandOutput | ListTagOptionsCommandOutput | ProvisionProductCommandOutput | RejectPortfolioShareCommandOutput | ScanProvisionedProductsCommandOutput | SearchProductsAsAdminCommandOutput | SearchProductsCommandOutput | SearchProvisionedProductsCommandOutput | TerminateProvisionedProductCommandOutput | UpdateConstraintCommandOutput | UpdatePortfolioCommandOutput | UpdatePortfolioShareCommandOutput | UpdateProductCommandOutput | UpdateProvisionedProductCommandOutput | UpdateProvisionedProductPropertiesCommandOutput | UpdateProvisioningArtifactCommandOutput | UpdateServiceActionCommandOutput | UpdateTagOptionCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ServiceCatalogClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ServiceCatalogClient class constructor that set the region, credentials and other options.
        */
    export interface ServiceCatalogClientConfig extends ServiceCatalogClientConfigType {
    }
    type ServiceCatalogClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ServiceCatalogClient class. This is resolved and normalized from the {@link ServiceCatalogClientConfig | constructor configuration interface}.
        */
    export interface ServiceCatalogClientResolvedConfig extends ServiceCatalogClientResolvedConfigType {
    }
    /**
        * <fullname>AWS Service Catalog</fullname>
        *          <p>
        *             <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> enables
        *          organizations to create and manage catalogs of IT services that are approved for AWS. To
        *          get the most out of this documentation, you should be familiar with the terminology
        *          discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog
        *          Concepts</a>.</p>
        */
    export class ServiceCatalogClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ServiceCatalogClientResolvedConfig> {
            /**
                * The resolved configuration of ServiceCatalogClient class. This is resolved and normalized from the {@link ServiceCatalogClientConfig | constructor configuration interface}.
                */
            readonly config: ServiceCatalogClientResolvedConfig;
            constructor(configuration: ServiceCatalogClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ServiceCatalogServiceException as __BaseException } from "@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/ServiceCatalogServiceException";
    export enum PortfolioShareType {
            AWS_ORGANIZATIONS = "AWS_ORGANIZATIONS",
            AWS_SERVICECATALOG = "AWS_SERVICECATALOG",
            IMPORTED = "IMPORTED"
    }
    export interface AcceptPortfolioShareInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The type of shared portfolios to accept. The default is to accept imported portfolios.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AWS_ORGANIZATIONS</code> - Accept portfolios shared by the management account of your
                *                organization.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IMPORTED</code> - Accept imported portfolios.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p>
                *             </li>
                *          </ul>
                *          <p>For example, <code>aws servicecatalog accept-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code>
                *          </p>
                */
            PortfolioShareType?: PortfolioShareType | string;
    }
    export namespace AcceptPortfolioShareInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptPortfolioShareInput) => any;
    }
    export interface AcceptPortfolioShareOutput {
    }
    export namespace AcceptPortfolioShareOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptPortfolioShareOutput) => any;
    }
    /**
        * <p>One or more parameters provided to the operation are not valid.</p>
        */
    export class InvalidParametersException extends __BaseException {
            readonly name: "InvalidParametersException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParametersException, __BaseException>);
    }
    /**
        * <p>The current limits of the service would have been exceeded by this operation. Decrease your
        *          resource use or increase your service limits and retry the operation.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>The specified resource was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export enum AccessLevelFilterKey {
            ACCOUNT = "Account",
            ROLE = "Role",
            USER = "User"
    }
    /**
        * <p>The access level to use to filter results.</p>
        */
    export interface AccessLevelFilter {
            /**
                * <p>The access level.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>Account</code> - Filter results based on the account.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>Role</code> - Filter results based on the federated role of the specified user.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>User</code> - Filter results based on the specified user.</p>
                *             </li>
                *          </ul>
                */
            Key?: AccessLevelFilterKey | string;
            /**
                * <p>The user to which the access level applies. The only supported value is <code>Self</code>.</p>
                */
            Value?: string;
    }
    export namespace AccessLevelFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccessLevelFilter) => any;
    }
    export enum AccessStatus {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED",
            UNDER_CHANGE = "UNDER_CHANGE"
    }
    /**
        * <p>Information about a tag. A tag is a key-value pair. Tags are propagated
        *          to the resources created when provisioning a product.</p>
        */
    export interface Tag {
            /**
                * <p>The tag key.</p>
                */
            Key: string | undefined;
            /**
                * <p>The value for this key.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface AssociateBudgetWithResourceInput {
            /**
                * <p>The name of the budget you want to associate.</p>
                */
            BudgetName: string | undefined;
            /**
                * <p> The resource identifier. Either a portfolio-id or a product-id.</p>
                */
            ResourceId: string | undefined;
    }
    export namespace AssociateBudgetWithResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateBudgetWithResourceInput) => any;
    }
    export interface AssociateBudgetWithResourceOutput {
    }
    export namespace AssociateBudgetWithResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateBudgetWithResourceOutput) => any;
    }
    /**
        * <p>The specified resource is a duplicate.</p>
        */
    export class DuplicateResourceException extends __BaseException {
            readonly name: "DuplicateResourceException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DuplicateResourceException, __BaseException>);
    }
    export enum PrincipalType {
            IAM = "IAM"
    }
    export interface AssociatePrincipalWithPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The ARN of the principal (IAM user, role, or group).</p>
                */
            PrincipalARN: string | undefined;
            /**
                * <p>The principal type. The supported value is <code>IAM</code>.</p>
                */
            PrincipalType: PrincipalType | string | undefined;
    }
    export namespace AssociatePrincipalWithPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePrincipalWithPortfolioInput) => any;
    }
    export interface AssociatePrincipalWithPortfolioOutput {
    }
    export namespace AssociatePrincipalWithPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePrincipalWithPortfolioOutput) => any;
    }
    export interface AssociateProductWithPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The identifier of the source portfolio.</p>
                */
            SourcePortfolioId?: string;
    }
    export namespace AssociateProductWithPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateProductWithPortfolioInput) => any;
    }
    export interface AssociateProductWithPortfolioOutput {
    }
    export namespace AssociateProductWithPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateProductWithPortfolioOutput) => any;
    }
    export interface AssociateServiceActionWithProvisioningArtifactInput {
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace AssociateServiceActionWithProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateServiceActionWithProvisioningArtifactInput) => any;
    }
    export interface AssociateServiceActionWithProvisioningArtifactOutput {
    }
    export namespace AssociateServiceActionWithProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateServiceActionWithProvisioningArtifactOutput) => any;
    }
    export interface AssociateTagOptionWithResourceInput {
            /**
                * <p>The resource identifier.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The TagOption identifier.</p>
                */
            TagOptionId: string | undefined;
    }
    export namespace AssociateTagOptionWithResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateTagOptionWithResourceInput) => any;
    }
    export interface AssociateTagOptionWithResourceOutput {
    }
    export namespace AssociateTagOptionWithResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateTagOptionWithResourceOutput) => any;
    }
    /**
        * <p>An attempt was made to modify a resource that is in a state that is not valid.
        *          Check your resources to ensure that they are in valid states before retrying the operation.</p>
        */
    export class InvalidStateException extends __BaseException {
            readonly name: "InvalidStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidStateException, __BaseException>);
    }
    /**
        * <p>An operation requiring TagOptions failed because the TagOptions migration process has
        *          not been performed for this account. Please use the AWS console to perform the migration
        *          process before retrying the operation.</p>
        */
    export class TagOptionNotMigratedException extends __BaseException {
            readonly name: "TagOptionNotMigratedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TagOptionNotMigratedException, __BaseException>);
    }
    /**
        * <p>A self-service action association consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.</p>
        */
    export interface ServiceActionAssociation {
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId: string | undefined;
    }
    export namespace ServiceActionAssociation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceActionAssociation) => any;
    }
    export interface BatchAssociateServiceActionWithProvisioningArtifactInput {
            /**
                * <p>One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.</p>
                */
            ServiceActionAssociations: ServiceActionAssociation[] | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace BatchAssociateServiceActionWithProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchAssociateServiceActionWithProvisioningArtifactInput) => any;
    }
    export enum ServiceActionAssociationErrorCode {
            DuplicateResourceException = "DUPLICATE_RESOURCE",
            InternalFailure = "INTERNAL_FAILURE",
            LimitExceededException = "LIMIT_EXCEEDED",
            ResourceNotFoundException = "RESOURCE_NOT_FOUND",
            ThrottlingException = "THROTTLING"
    }
    /**
        * <p>An object containing information about the error, along with identifying information about the self-service action and its associations.</p>
        */
    export interface FailedServiceActionAssociation {
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId?: string;
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId?: string;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The error code. Valid values are listed below.</p>
                */
            ErrorCode?: ServiceActionAssociationErrorCode | string;
            /**
                * <p>A text description of the error.</p>
                */
            ErrorMessage?: string;
    }
    export namespace FailedServiceActionAssociation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FailedServiceActionAssociation) => any;
    }
    export interface BatchAssociateServiceActionWithProvisioningArtifactOutput {
            /**
                * <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
                */
            FailedServiceActionAssociations?: FailedServiceActionAssociation[];
    }
    export namespace BatchAssociateServiceActionWithProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchAssociateServiceActionWithProvisioningArtifactOutput) => any;
    }
    export interface BatchDisassociateServiceActionFromProvisioningArtifactInput {
            /**
                * <p>One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.</p>
                */
            ServiceActionAssociations: ServiceActionAssociation[] | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace BatchDisassociateServiceActionFromProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDisassociateServiceActionFromProvisioningArtifactInput) => any;
    }
    export interface BatchDisassociateServiceActionFromProvisioningArtifactOutput {
            /**
                * <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
                */
            FailedServiceActionAssociations?: FailedServiceActionAssociation[];
    }
    export namespace BatchDisassociateServiceActionFromProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDisassociateServiceActionFromProvisioningArtifactOutput) => any;
    }
    export enum CopyOption {
            CopyTags = "CopyTags"
    }
    export enum ProvisioningArtifactPropertyName {
            Id = "Id"
    }
    export interface CopyProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the source product.</p>
                */
            SourceProductArn: string | undefined;
            /**
                * <p>The identifier of the target product. By default, a new product is created.</p>
                */
            TargetProductId?: string;
            /**
                * <p>A name for the target product. The default is the name of the source product.</p>
                */
            TargetProductName?: string;
            /**
                * <p>The identifiers of the provisioning artifacts (also known as versions) of the product to copy.
                *          By default, all provisioning artifacts are copied.</p>
                */
            SourceProvisioningArtifactIdentifiers?: Record<string, string>[];
            /**
                * <p>The copy options. If the value is <code>CopyTags</code>, the tags from the source
                *          product are copied to the target product.</p>
                */
            CopyOptions?: (CopyOption | string)[];
            /**
                * <p> A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request. </p>
                */
            IdempotencyToken?: string;
    }
    export namespace CopyProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CopyProductInput) => any;
    }
    export interface CopyProductOutput {
            /**
                * <p>The token to use to track the progress of the operation.</p>
                */
            CopyProductToken?: string;
    }
    export namespace CopyProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CopyProductOutput) => any;
    }
    export interface CreateConstraintInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p>
                *          <dl>
                *             <dt>LAUNCH</dt>
                *             <dd>
                *                <p>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code> but can't use both.</p>
                *                <p>Specify the <code>RoleArn</code> property as follows:</p>
                *                <p>
                *                   <code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code>
                *                </p>
                *                <p>Specify the <code>LocalRoleName</code> property as follows:</p>
                *                <p>
                *                   <code>{"LocalRoleName": "SCBasicLaunchRole"}</code>
                *                </p>
                *                <p>If you specify the <code>LocalRoleName</code> property, when an account uses the launch constraint, the IAM role with that name in the account will be used. This allows launch-role constraints to be
                *                account-agnostic so the administrator can create fewer resources per shared account.</p>
                *                <note>
                *                   <p>The given role name must exist in the account used to create the launch constraint and the account of the user who launches a product with this launch constraint.</p>
                *                </note>
                *                <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p>
                *                <p>You also cannot have more than one <code>LAUNCH</code> constraint on a product and portfolio.</p>
                *             </dd>
                *             <dt>NOTIFICATION</dt>
                *             <dd>
                *                <p>Specify the <code>NotificationArns</code> property as follows:</p>
                *                <p>
                *                   <code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code>
                *                </p>
                *             </dd>
                *             <dt>RESOURCE_UPDATE</dt>
                *             <dd>
                *                <p>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</p>
                *                <p>
                *                   <code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code>
                *                </p>
                *                <p>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p>
                *             </dd>
                *             <dt>STACKSET</dt>
                *             <dd>
                *                <p>Specify the <code>Parameters</code> property as follows:</p>
                *                <p>
                *                   <code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList": [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code>
                *                </p>
                *                <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p>
                *                <p>You also cannot have more than one <code>STACKSET</code> constraint on a product and portfolio.</p>
                *                <p>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation stack set.</p>
                *             </dd>
                *             <dt>TEMPLATE</dt>
                *             <dd>
                *                <p>Specify the <code>Rules</code> property. For more information, see
                *                   <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p>
                *             </dd>
                *          </dl>
                */
            Parameters: string | undefined;
            /**
                * <p>The type of constraint.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>LAUNCH</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>NOTIFICATION</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>RESOURCE_UPDATE</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>STACKSET</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TEMPLATE</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Type: string | undefined;
            /**
                * <p>The description of the constraint.</p>
                */
            Description?: string;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace CreateConstraintInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConstraintInput) => any;
    }
    /**
        * <p>Information about a constraint.</p>
        */
    export interface ConstraintDetail {
            /**
                * <p>The identifier of the constraint.</p>
                */
            ConstraintId?: string;
            /**
                * <p>The type of constraint.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>LAUNCH</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>NOTIFICATION</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>STACKSET</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TEMPLATE</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Type?: string;
            /**
                * <p>The description of the constraint.</p>
                */
            Description?: string;
            /**
                * <p>The owner of the constraint.</p>
                */
            Owner?: string;
            /**
                * <p>The identifier of the product the constraint applies to. Note that a constraint applies to a specific instance of a product within a certain portfolio.</p>
                */
            ProductId?: string;
            /**
                * <p>The identifier of the portfolio the product resides in. The constraint applies only to the instance of the product that lives within this portfolio.</p>
                */
            PortfolioId?: string;
    }
    export namespace ConstraintDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConstraintDetail) => any;
    }
    export enum Status {
            AVAILABLE = "AVAILABLE",
            CREATING = "CREATING",
            FAILED = "FAILED"
    }
    export interface CreateConstraintOutput {
            /**
                * <p>Information about the constraint.</p>
                */
            ConstraintDetail?: ConstraintDetail;
            /**
                * <p>The constraint parameters.</p>
                */
            ConstraintParameters?: string;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace CreateConstraintOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateConstraintOutput) => any;
    }
    export interface CreatePortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The name to use for display purposes.</p>
                */
            DisplayName: string | undefined;
            /**
                * <p>The description of the portfolio.</p>
                */
            Description?: string;
            /**
                * <p>The name of the portfolio provider.</p>
                */
            ProviderName: string | undefined;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Tag[];
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace CreatePortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortfolioInput) => any;
    }
    /**
        * <p>Information about a portfolio.</p>
        */
    export interface PortfolioDetail {
            /**
                * <p>The portfolio identifier.</p>
                */
            Id?: string;
            /**
                * <p>The ARN assigned to the portfolio.</p>
                */
            ARN?: string;
            /**
                * <p>The name to use for display purposes.</p>
                */
            DisplayName?: string;
            /**
                * <p>The description of the portfolio.</p>
                */
            Description?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The name of the portfolio provider.</p>
                */
            ProviderName?: string;
    }
    export namespace PortfolioDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PortfolioDetail) => any;
    }
    export interface CreatePortfolioOutput {
            /**
                * <p>Information about the portfolio.</p>
                */
            PortfolioDetail?: PortfolioDetail;
            /**
                * <p>Information about the tags associated with the portfolio.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreatePortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortfolioOutput) => any;
    }
    export enum OrganizationNodeType {
            ACCOUNT = "ACCOUNT",
            ORGANIZATION = "ORGANIZATION",
            ORGANIZATIONAL_UNIT = "ORGANIZATIONAL_UNIT"
    }
    /**
        * <p>Information about the organization node.</p>
        */
    export interface OrganizationNode {
            /**
                * <p>The organization node type.</p>
                */
            Type?: OrganizationNodeType | string;
            /**
                * <p>The identifier of the organization node.</p>
                */
            Value?: string;
    }
    export namespace OrganizationNode {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationNode) => any;
    }
    export interface CreatePortfolioShareInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The AWS account ID. For example, <code>123456789012</code>.</p>
                */
            AccountId?: string;
            /**
                * <p>The organization node to whom you are going to share. If <code>OrganizationNode</code>
                *          is passed in, <code>PortfolioShare</code> will be created for the node an
                *          ListOrganizationPortfolioAccessd its children (when applies), and a
                *             <code>PortfolioShareToken</code> will be returned in the output in order for the
                *          administrator to monitor the status of the <code>PortfolioShare</code> creation
                *          process.</p>
                */
            OrganizationNode?: OrganizationNode;
            /**
                * <p>Enables or disables <code>TagOptions </code> sharing when creating the portfolio share. If this flag is not provided, TagOptions sharing is disabled.</p>
                */
            ShareTagOptions?: boolean;
    }
    export namespace CreatePortfolioShareInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortfolioShareInput) => any;
    }
    export interface CreatePortfolioShareOutput {
            /**
                * <p>The portfolio shares a unique identifier that only returns if the portfolio is shared to an organization node.</p>
                */
            PortfolioShareToken?: string;
    }
    export namespace CreatePortfolioShareOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortfolioShareOutput) => any;
    }
    /**
        * <p>The operation is not supported.</p>
        */
    export class OperationNotSupportedException extends __BaseException {
            readonly name: "OperationNotSupportedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OperationNotSupportedException, __BaseException>);
    }
    export enum ProductType {
            CLOUD_FORMATION_TEMPLATE = "CLOUD_FORMATION_TEMPLATE",
            MARKETPLACE = "MARKETPLACE"
    }
    export enum ProvisioningArtifactType {
            CLOUD_FORMATION_TEMPLATE = "CLOUD_FORMATION_TEMPLATE",
            MARKETPLACE_AMI = "MARKETPLACE_AMI",
            MARKETPLACE_CAR = "MARKETPLACE_CAR"
    }
    /**
        * <p>Information about a provisioning artifact (also known as a version) for a product.</p>
        */
    export interface ProvisioningArtifactProperties {
            /**
                * <p>The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.</p>
                */
            Name?: string;
            /**
                * <p>The description of the provisioning artifact, including how it differs from the previous provisioning artifact.</p>
                */
            Description?: string;
            /**
                * <p>Specify the template source with one of the following options, but not both.
                *          Keys accepted: [ <code>LoadTemplateFromURL</code>, <code>ImportFromPhysicalId</code> ]</p>
                *          <p>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format as follows:</p>
                *          <p>
                *             <code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code>
                *          </p>
                *          <p>
                *             <code>ImportFromPhysicalId</code>: The physical id of the resource that contains the
                *          template. Currently only supports CloudFormation stack arn. Specify the physical id in JSON
                *          format as follows: <code>ImportFromPhysicalId: “arn:aws:cloudformation:[us-east-1]:[accountId]:stack/[StackName]/[resourceId]</code>
                *          </p>
                */
            Info: Record<string, string> | undefined;
            /**
                * <p>The type of provisioning artifact.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p>
                *             </li>
                *          </ul>
                */
            Type?: ProvisioningArtifactType | string;
            /**
                * <p>If set to true, AWS Service Catalog stops validating the specified provisioning artifact even if it is invalid.</p>
                */
            DisableTemplateValidation?: boolean;
    }
    export namespace ProvisioningArtifactProperties {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactProperties) => any;
    }
    export interface CreateProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The name of the product.</p>
                */
            Name: string | undefined;
            /**
                * <p>The owner of the product.</p>
                */
            Owner: string | undefined;
            /**
                * <p>The description of the product.</p>
                */
            Description?: string;
            /**
                * <p>The distributor of the product.</p>
                */
            Distributor?: string;
            /**
                * <p>The support information about the product.</p>
                */
            SupportDescription?: string;
            /**
                * <p>The contact email for product support.</p>
                */
            SupportEmail?: string;
            /**
                * <p>The contact URL for product support.</p>
                *          <p>
                *             <code>^https?:\/\// </code>/ is the pattern used to validate SupportUrl.</p>
                */
            SupportUrl?: string;
            /**
                * <p>The type of product.</p>
                */
            ProductType: ProductType | string | undefined;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The configuration of the provisioning artifact. </p>
                */
            ProvisioningArtifactParameters: ProvisioningArtifactProperties | undefined;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace CreateProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProductInput) => any;
    }
    /**
        * <p>Summary information about a product view.</p>
        */
    export interface ProductViewSummary {
            /**
                * <p>The product view identifier.</p>
                */
            Id?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the product.</p>
                */
            Name?: string;
            /**
                * <p>The owner of the product. Contact the product administrator for the significance of
                *          this value.</p>
                */
            Owner?: string;
            /**
                * <p>Short description of the product.</p>
                */
            ShortDescription?: string;
            /**
                * <p>The product type. Contact the product administrator for the significance of this
                *          value. If this value is <code>MARKETPLACE</code>, the product was created by AWS
                *          Marketplace.</p>
                */
            Type?: ProductType | string;
            /**
                * <p>The distributor of the product. Contact the product administrator for the
                *          significance of this value.</p>
                */
            Distributor?: string;
            /**
                * <p>Indicates whether the product has a default path.
                *          If the product does not have a default path, call <a>ListLaunchPaths</a>
                *          to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is not
                *          required, and the output of <a>ProductViewSummary</a> can be used directly with
                *          <a>DescribeProvisioningParameters</a>.</p>
                */
            HasDefaultPath?: boolean;
            /**
                * <p>The email contact information to obtain support for this Product.</p>
                */
            SupportEmail?: string;
            /**
                * <p>The description of the support for this Product.</p>
                */
            SupportDescription?: string;
            /**
                * <p>The URL information to obtain support for this Product.</p>
                */
            SupportUrl?: string;
    }
    export namespace ProductViewSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProductViewSummary) => any;
    }
    /**
        * <p>Information about a product view.</p>
        */
    export interface ProductViewDetail {
            /**
                * <p>Summary information about the product view.</p>
                */
            ProductViewSummary?: ProductViewSummary;
            /**
                * <p>The status of the product.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AVAILABLE</code> - The product is ready for use.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>CREATING</code> - Product creation has started; the product is not ready for use.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FAILED</code> - An action failed.</p>
                *             </li>
                *          </ul>
                */
            Status?: Status | string;
            /**
                * <p>The ARN of the product.</p>
                */
            ProductARN?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
    }
    export namespace ProductViewDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProductViewDetail) => any;
    }
    export enum ProvisioningArtifactGuidance {
            DEFAULT = "DEFAULT",
            DEPRECATED = "DEPRECATED"
    }
    /**
        * <p>Information about a provisioning artifact (also known as a version) for a product.</p>
        */
    export interface ProvisioningArtifactDetail {
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            Id?: string;
            /**
                * <p>The name of the provisioning artifact.</p>
                */
            Name?: string;
            /**
                * <p>The description of the provisioning artifact.</p>
                */
            Description?: string;
            /**
                * <p>The type of provisioning artifact.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p>
                *             </li>
                *          </ul>
                */
            Type?: ProvisioningArtifactType | string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>Indicates whether the product version is active.</p>
                */
            Active?: boolean;
            /**
                * <p>Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.</p>
                */
            Guidance?: ProvisioningArtifactGuidance | string;
    }
    export namespace ProvisioningArtifactDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactDetail) => any;
    }
    export interface CreateProductOutput {
            /**
                * <p>Information about the product view.</p>
                */
            ProductViewDetail?: ProductViewDetail;
            /**
                * <p>Information about the provisioning artifact. </p>
                */
            ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
            /**
                * <p>Information about the tags associated with the product.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProductOutput) => any;
    }
    export enum ProvisionedProductPlanType {
            CLOUDFORMATION = "CLOUDFORMATION"
    }
    /**
        * <p>The parameter key-value pair used to update a provisioned product.</p>
        */
    export interface UpdateProvisioningParameter {
            /**
                * <p>The parameter key.</p>
                */
            Key?: string;
            /**
                * <p>The parameter value.</p>
                */
            Value?: string;
            /**
                * <p>If set to true, <code>Value</code> is ignored and the previous parameter value is kept.</p>
                */
            UsePreviousValue?: boolean;
    }
    export namespace UpdateProvisioningParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningParameter) => any;
    }
    export interface CreateProvisionedProductPlanInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The name of the plan.</p>
                */
            PlanName: string | undefined;
            /**
                * <p>The plan type.</p>
                */
            PlanType: ProvisionedProductPlanType | string | undefined;
            /**
                * <p>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related
                *          events.</p>
                */
            NotificationArns?: string[];
            /**
                * <p>The path identifier of the product. This value is optional if the product
                *          has a default path, and required if the product has more than one path.
                *          To list the paths for a product, use <a>ListLaunchPaths</a>.</p>
                */
            PathId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>A user-friendly name for the provisioned product. This value must be
                *          unique for the AWS account and cannot be updated after the product is provisioned.</p>
                */
            ProvisionedProductName: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>Parameters specified by the administrator that are required for provisioning the
                *          product.</p>
                */
            ProvisioningParameters?: UpdateProvisioningParameter[];
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
            /**
                * <p>One or more tags.</p>
                *          <p>If the plan is for an existing provisioned product, the product must have a <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateProvisionedProductPlanInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisionedProductPlanInput) => any;
    }
    export interface CreateProvisionedProductPlanOutput {
            /**
                * <p>The name of the plan.</p>
                */
            PlanName?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProvisionProductId?: string;
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            ProvisionedProductName?: string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
    }
    export namespace CreateProvisionedProductPlanOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisionedProductPlanOutput) => any;
    }
    export interface CreateProvisioningArtifactInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The configuration for the provisioning artifact.</p>
                */
            Parameters: ProvisioningArtifactProperties | undefined;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace CreateProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningArtifactInput) => any;
    }
    export interface CreateProvisioningArtifactOutput {
            /**
                * <p>Information about the provisioning artifact.</p>
                */
            ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
            /**
                * <p>Specify the template source with one of the following options, but not both. Keys
                *          accepted: [ <code>LoadTemplateFromURL</code>, <code>ImportFromPhysicalId</code> ].</p>
                *          <p>The URL of the CloudFormation template in Amazon S3, in JSON format. </p>
                *          <p>
                *             <code>LoadTemplateFromURL</code>
                *          </p>
                *          <p>Use the URL of the CloudFormation template in Amazon S3 in JSON format.</p>
                *          <p>
                *             <code>ImportFromPhysicalId</code>
                *          </p>
                *          <p>Use the physical id of the resource that contains the template; currently supports
                *          CloudFormation stack ARN.</p>
                */
            Info?: Record<string, string>;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace CreateProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProvisioningArtifactOutput) => any;
    }
    export enum ServiceActionDefinitionKey {
            AssumeRole = "AssumeRole",
            Name = "Name",
            Parameters = "Parameters",
            Version = "Version"
    }
    export enum ServiceActionDefinitionType {
            SsmAutomation = "SSM_AUTOMATION"
    }
    export interface CreateServiceActionInput {
            /**
                * <p>The self-service action name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The service action definition type. For example, <code>SSM_AUTOMATION</code>.</p>
                */
            DefinitionType: ServiceActionDefinitionType | string | undefined;
            /**
                * <p>The self-service action definition. Can be one of the following:</p>
                *          <dl>
                *             <dt>Name</dt>
                *             <dd>
                *                <p>The name of the AWS Systems Manager document (SSM document). For example, <code>AWS-RestartEC2Instance</code>.</p>
                *                <p>If you are using a shared SSM document, you must provide the ARN instead of the name.</p>
                *             </dd>
                *             <dt>Version</dt>
                *             <dd>
                *                <p>The AWS Systems Manager automation document version. For example, <code>"Version": "1"</code>
                *                </p>
                *             </dd>
                *             <dt>AssumeRole</dt>
                *             <dd>
                *                <p>The Amazon Resource Name (ARN) of the role that performs the self-service actions on your behalf. For example, <code>"AssumeRole": "arn:aws:iam::12345678910:role/ActionRole"</code>.</p>
                *                <p>To reuse the provisioned product launch role, set to <code>"AssumeRole": "LAUNCH_ROLE"</code>.</p>
                *             </dd>
                *             <dt>Parameters</dt>
                *             <dd>
                *                <p>The list of parameters in JSON format.</p>
                *                <p>For example: <code>[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]</code> or <code>[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]</code>.</p>
                *             </dd>
                *          </dl>
                */
            Definition: Record<string, string> | undefined;
            /**
                * <p>The self-service action description.</p>
                */
            Description?: string;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace CreateServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceActionInput) => any;
    }
    /**
        * <p>Detailed information about the self-service action.</p>
        */
    export interface ServiceActionSummary {
            /**
                * <p>The self-service action identifier.</p>
                */
            Id?: string;
            /**
                * <p>The self-service action name.</p>
                */
            Name?: string;
            /**
                * <p>The self-service action description.</p>
                */
            Description?: string;
            /**
                * <p>The self-service action definition type. For example, <code>SSM_AUTOMATION</code>.</p>
                */
            DefinitionType?: ServiceActionDefinitionType | string;
    }
    export namespace ServiceActionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceActionSummary) => any;
    }
    /**
        * <p>An object containing detailed information about the self-service action.</p>
        */
    export interface ServiceActionDetail {
            /**
                * <p>Summary information about the self-service action.</p>
                */
            ServiceActionSummary?: ServiceActionSummary;
            /**
                * <p>A map that defines the self-service action.</p>
                */
            Definition?: Record<string, string>;
    }
    export namespace ServiceActionDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceActionDetail) => any;
    }
    export interface CreateServiceActionOutput {
            /**
                * <p>An object containing information about the self-service action.</p>
                */
            ServiceActionDetail?: ServiceActionDetail;
    }
    export namespace CreateServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceActionOutput) => any;
    }
    export interface CreateTagOptionInput {
            /**
                * <p>The TagOption key.</p>
                */
            Key: string | undefined;
            /**
                * <p>The TagOption value.</p>
                */
            Value: string | undefined;
    }
    export namespace CreateTagOptionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTagOptionInput) => any;
    }
    /**
        * <p>Information about a TagOption.</p>
        */
    export interface TagOptionDetail {
            /**
                * <p>The TagOption key.</p>
                */
            Key?: string;
            /**
                * <p>The TagOption value.</p>
                */
            Value?: string;
            /**
                * <p>The TagOption active state.</p>
                */
            Active?: boolean;
            /**
                * <p>The TagOption identifier.</p>
                */
            Id?: string;
            /**
                * <p>The AWS account Id of the owner account that created the TagOption.</p>
                */
            Owner?: string;
    }
    export namespace TagOptionDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagOptionDetail) => any;
    }
    export interface CreateTagOptionOutput {
            /**
                * <p>Information about the TagOption.</p>
                */
            TagOptionDetail?: TagOptionDetail;
    }
    export namespace CreateTagOptionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTagOptionOutput) => any;
    }
    export interface DeleteConstraintInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the constraint.</p>
                */
            Id: string | undefined;
    }
    export namespace DeleteConstraintInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConstraintInput) => any;
    }
    export interface DeleteConstraintOutput {
    }
    export namespace DeleteConstraintOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteConstraintOutput) => any;
    }
    export interface DeletePortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DeletePortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortfolioInput) => any;
    }
    export interface DeletePortfolioOutput {
    }
    export namespace DeletePortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortfolioOutput) => any;
    }
    /**
        * <p>A resource that is currently in use. Ensure that the resource is not in use and retry the operation.</p>
        */
    export class ResourceInUseException extends __BaseException {
            readonly name: "ResourceInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceInUseException, __BaseException>);
    }
    export interface DeletePortfolioShareInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The AWS account ID.</p>
                */
            AccountId?: string;
            /**
                * <p>The organization node to whom you are going to stop sharing.</p>
                */
            OrganizationNode?: OrganizationNode;
    }
    export namespace DeletePortfolioShareInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortfolioShareInput) => any;
    }
    export interface DeletePortfolioShareOutput {
            /**
                * <p>The portfolio share unique identifier. This will only be returned if delete is made to an organization node.</p>
                */
            PortfolioShareToken?: string;
    }
    export namespace DeletePortfolioShareOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortfolioShareOutput) => any;
    }
    export interface DeleteProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DeleteProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProductInput) => any;
    }
    export interface DeleteProductOutput {
    }
    export namespace DeleteProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProductOutput) => any;
    }
    export interface DeleteProvisionedProductPlanInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId: string | undefined;
            /**
                * <p>If set to true, AWS Service Catalog stops managing the specified provisioned product even
                *          if it cannot delete the underlying resources.</p>
                */
            IgnoreErrors?: boolean;
    }
    export namespace DeleteProvisionedProductPlanInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisionedProductPlanInput) => any;
    }
    export interface DeleteProvisionedProductPlanOutput {
    }
    export namespace DeleteProvisionedProductPlanOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisionedProductPlanOutput) => any;
    }
    export interface DeleteProvisioningArtifactInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId: string | undefined;
    }
    export namespace DeleteProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningArtifactInput) => any;
    }
    export interface DeleteProvisioningArtifactOutput {
    }
    export namespace DeleteProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProvisioningArtifactOutput) => any;
    }
    export interface DeleteServiceActionInput {
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            Id: string | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace DeleteServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceActionInput) => any;
    }
    export interface DeleteServiceActionOutput {
    }
    export namespace DeleteServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceActionOutput) => any;
    }
    export interface DeleteTagOptionInput {
            /**
                * <p>The TagOption identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DeleteTagOptionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTagOptionInput) => any;
    }
    export interface DeleteTagOptionOutput {
    }
    export namespace DeleteTagOptionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTagOptionOutput) => any;
    }
    export interface DescribeConstraintInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the constraint.</p>
                */
            Id: string | undefined;
    }
    export namespace DescribeConstraintInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeConstraintInput) => any;
    }
    export interface DescribeConstraintOutput {
            /**
                * <p>Information about the constraint.</p>
                */
            ConstraintDetail?: ConstraintDetail;
            /**
                * <p>The constraint parameters.</p>
                */
            ConstraintParameters?: string;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace DescribeConstraintOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeConstraintOutput) => any;
    }
    export interface DescribeCopyProductStatusInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The token for the copy product operation. This token is returned by <a>CopyProduct</a>.</p>
                */
            CopyProductToken: string | undefined;
    }
    export namespace DescribeCopyProductStatusInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCopyProductStatusInput) => any;
    }
    export enum CopyProductStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    export interface DescribeCopyProductStatusOutput {
            /**
                * <p>The status of the copy product operation.</p>
                */
            CopyProductStatus?: CopyProductStatus | string;
            /**
                * <p>The identifier of the copied product.</p>
                */
            TargetProductId?: string;
            /**
                * <p>The status message.</p>
                */
            StatusDetail?: string;
    }
    export namespace DescribeCopyProductStatusOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeCopyProductStatusOutput) => any;
    }
    export interface DescribePortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DescribePortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioInput) => any;
    }
    /**
        * <p>Information about a budget.</p>
        */
    export interface BudgetDetail {
            /**
                * <p>Name of the associated budget.</p>
                */
            BudgetName?: string;
    }
    export namespace BudgetDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BudgetDetail) => any;
    }
    export interface DescribePortfolioOutput {
            /**
                * <p>Information about the portfolio.</p>
                */
            PortfolioDetail?: PortfolioDetail;
            /**
                * <p>Information about the tags associated with the portfolio.</p>
                */
            Tags?: Tag[];
            /**
                * <p>Information about the TagOptions associated with the portfolio.</p>
                */
            TagOptions?: TagOptionDetail[];
            /**
                * <p>Information about the associated budgets.</p>
                */
            Budgets?: BudgetDetail[];
    }
    export namespace DescribePortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioOutput) => any;
    }
    export enum DescribePortfolioShareType {
            ACCOUNT = "ACCOUNT",
            ORGANIZATION = "ORGANIZATION",
            ORGANIZATIONAL_UNIT = "ORGANIZATIONAL_UNIT",
            ORGANIZATION_MEMBER_ACCOUNT = "ORGANIZATION_MEMBER_ACCOUNT"
    }
    export interface DescribePortfolioSharesInput {
            /**
                * <p>The unique identifier of the portfolio for which shares will be retrieved.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The type of portfolio share to summarize. This field acts as a filter on the type of portfolio share, which can be one of the following:</p>
                *          <p>1. <code>ACCOUNT</code> - Represents an external account to account share.</p>
                *          <p>2. <code>ORGANIZATION</code> - Represents a share to an organization. This share is available to every account in the organization.</p>
                *          <p>3. <code>ORGANIZATIONAL_UNIT</code> - Represents a share to an organizational unit.</p>
                *          <p>4. <code>ORGANIZATION_MEMBER_ACCOUNT</code> - Represents a share to an account in the organization.</p>
                */
            Type: DescribePortfolioShareType | string | undefined;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace DescribePortfolioSharesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioSharesInput) => any;
    }
    /**
        * <p>Information about the portfolio share.</p>
        */
    export interface PortfolioShareDetail {
            /**
                * <p>The identifier of the recipient entity that received the portfolio share.
                *          The recipient entities can be one of the following:
                *       </p>
                *          <p>1. An external account.</p>
                *          <p>2. An organziation member account.</p>
                *          <p>3. An organzational unit (OU).</p>
                *          <p>4. The organization itself. (This shares with every account in the organization).</p>
                */
            PrincipalId?: string;
            /**
                * <p>The type of the portfolio share.</p>
                */
            Type?: DescribePortfolioShareType | string;
            /**
                * <p>Indicates whether the shared portfolio is imported by the recipient account. If the recipient is in an organization node, the share is automatically imported, and the field is always set to true.</p>
                */
            Accepted?: boolean;
            /**
                * <p>Indicates whether TagOptions sharing is enabled or disabled for the portfolio share.</p>
                */
            ShareTagOptions?: boolean;
    }
    export namespace PortfolioShareDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PortfolioShareDetail) => any;
    }
    export interface DescribePortfolioSharesOutput {
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
            /**
                * <p>Summaries about each of the portfolio shares.</p>
                */
            PortfolioShareDetails?: PortfolioShareDetail[];
    }
    export namespace DescribePortfolioSharesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioSharesOutput) => any;
    }
    export interface DescribePortfolioShareStatusInput {
            /**
                * <p>The token for the portfolio share operation. This token is returned either by CreatePortfolioShare or by DeletePortfolioShare.</p>
                */
            PortfolioShareToken: string | undefined;
    }
    export namespace DescribePortfolioShareStatusInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioShareStatusInput) => any;
    }
    /**
        * <p>Errors that occurred during the portfolio share operation.</p>
        */
    export interface ShareError {
            /**
                * <p>List of accounts impacted by the error.</p>
                */
            Accounts?: string[];
            /**
                * <p>Information about the error.</p>
                */
            Message?: string;
            /**
                * <p>Error type that happened when processing the operation.</p>
                */
            Error?: string;
    }
    export namespace ShareError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ShareError) => any;
    }
    /**
        * <p>Information about the portfolio share operation.</p>
        */
    export interface ShareDetails {
            /**
                * <p>List of accounts for whom the operation succeeded.</p>
                */
            SuccessfulShares?: string[];
            /**
                * <p>List of errors.</p>
                */
            ShareErrors?: ShareError[];
    }
    export namespace ShareDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ShareDetails) => any;
    }
    export enum ShareStatus {
            COMPLETED = "COMPLETED",
            COMPLETED_WITH_ERRORS = "COMPLETED_WITH_ERRORS",
            ERROR = "ERROR",
            IN_PROGRESS = "IN_PROGRESS",
            NOT_STARTED = "NOT_STARTED"
    }
    export interface DescribePortfolioShareStatusOutput {
            /**
                * <p>The token for the portfolio share operation. For example, <code>share-6v24abcdefghi</code>.</p>
                */
            PortfolioShareToken?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId?: string;
            /**
                * <p>Organization node identifier. It can be either account id, organizational unit id or organization id.</p>
                */
            OrganizationNodeValue?: string;
            /**
                * <p>Status of the portfolio share operation.</p>
                */
            Status?: ShareStatus | string;
            /**
                * <p>Information about the portfolio share operation.</p>
                */
            ShareDetails?: ShareDetails;
    }
    export namespace DescribePortfolioShareStatusOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortfolioShareStatusOutput) => any;
    }
    export interface DescribeProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            Id?: string;
            /**
                * <p>The product name.</p>
                */
            Name?: string;
    }
    export namespace DescribeProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductInput) => any;
    }
    /**
        * <p>A launch path object.</p>
        */
    export interface LaunchPath {
            /**
                * <p>The identifier of the launch path.</p>
                */
            Id?: string;
            /**
                * <p>The name of the launch path.</p>
                */
            Name?: string;
    }
    export namespace LaunchPath {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LaunchPath) => any;
    }
    /**
        * <p>Information about a provisioning artifact. A provisioning artifact is also known as a product version.</p>
        */
    export interface ProvisioningArtifact {
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            Id?: string;
            /**
                * <p>The name of the provisioning artifact.</p>
                */
            Name?: string;
            /**
                * <p>The description of the provisioning artifact.</p>
                */
            Description?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.</p>
                */
            Guidance?: ProvisioningArtifactGuidance | string;
    }
    export namespace ProvisioningArtifact {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifact) => any;
    }
    export interface DescribeProductOutput {
            /**
                * <p>Summary information about the product view.</p>
                */
            ProductViewSummary?: ProductViewSummary;
            /**
                * <p>Information about the provisioning artifacts for the specified product.</p>
                */
            ProvisioningArtifacts?: ProvisioningArtifact[];
            /**
                * <p>Information about the associated budgets.</p>
                */
            Budgets?: BudgetDetail[];
            /**
                * <p>Information about the associated launch paths.</p>
                */
            LaunchPaths?: LaunchPath[];
    }
    export namespace DescribeProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductOutput) => any;
    }
    export interface DescribeProductAsAdminInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            Id?: string;
            /**
                * <p>The product name.</p>
                */
            Name?: string;
            /**
                * <p>The unique identifier of the shared portfolio that the specified product is associated
                *          with.</p>
                *          <p>You can provide this parameter to retrieve the shared TagOptions associated with the
                *          product. If this parameter is provided and if TagOptions sharing is enabled in the
                *          portfolio share, the API returns both local and shared TagOptions associated with the
                *          product. Otherwise only local TagOptions will be returned. </p>
                */
            SourcePortfolioId?: string;
    }
    export namespace DescribeProductAsAdminInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductAsAdminInput) => any;
    }
    /**
        * <p>Summary information about a provisioning artifact (also known as a version) for a product.</p>
        */
    export interface ProvisioningArtifactSummary {
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            Id?: string;
            /**
                * <p>The name of the provisioning artifact.</p>
                */
            Name?: string;
            /**
                * <p>The description of the provisioning artifact.</p>
                */
            Description?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The metadata for the provisioning artifact. This is used with AWS Marketplace products.</p>
                */
            ProvisioningArtifactMetadata?: Record<string, string>;
    }
    export namespace ProvisioningArtifactSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactSummary) => any;
    }
    export interface DescribeProductAsAdminOutput {
            /**
                * <p>Information about the product view.</p>
                */
            ProductViewDetail?: ProductViewDetail;
            /**
                * <p>Information about the provisioning artifacts (also known as versions) for the specified product.</p>
                */
            ProvisioningArtifactSummaries?: ProvisioningArtifactSummary[];
            /**
                * <p>Information about the tags associated with the product.</p>
                */
            Tags?: Tag[];
            /**
                * <p>Information about the TagOptions associated with the product.</p>
                */
            TagOptions?: TagOptionDetail[];
            /**
                * <p>Information about the associated budgets.</p>
                */
            Budgets?: BudgetDetail[];
    }
    export namespace DescribeProductAsAdminOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductAsAdminOutput) => any;
    }
    export interface DescribeProductViewInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product view identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DescribeProductViewInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductViewInput) => any;
    }
    export interface DescribeProductViewOutput {
            /**
                * <p>Summary information about the product.</p>
                */
            ProductViewSummary?: ProductViewSummary;
            /**
                * <p>Information about the provisioning artifacts for the product.</p>
                */
            ProvisioningArtifacts?: ProvisioningArtifact[];
    }
    export namespace DescribeProductViewOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProductViewOutput) => any;
    }
    /**
        * DescribeProvisionedProductAPI input structure.
        *
        *         AcceptLanguage - [Optional]
        *         The language code for localization.
        *
        *         Id - [Optional]
        *         The provisioned product identifier.
        *
        *         Name - [Optional]
        *         Another provisioned product identifier. Customers must provide either Id or Name.
        */
    export interface DescribeProvisionedProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The provisioned product identifier. You must provide the name or ID, but not both.</p>
                *          <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>
                */
            Id?: string;
            /**
                * <p>The name of the provisioned product. You must provide the name or ID, but not both.</p>
                *          <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>
                */
            Name?: string;
    }
    export namespace DescribeProvisionedProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisionedProductInput) => any;
    }
    /**
        * <p>Information about a CloudWatch dashboard.</p>
        */
    export interface CloudWatchDashboard {
            /**
                * <p>The name of the CloudWatch dashboard.</p>
                */
            Name?: string;
    }
    export namespace CloudWatchDashboard {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudWatchDashboard) => any;
    }
    export enum ProvisionedProductStatus {
            AVAILABLE = "AVAILABLE",
            ERROR = "ERROR",
            PLAN_IN_PROGRESS = "PLAN_IN_PROGRESS",
            TAINTED = "TAINTED",
            UNDER_CHANGE = "UNDER_CHANGE"
    }
    /**
        * <p>Information about a provisioned product.</p>
        */
    export interface ProvisionedProductDetail {
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            Name?: string;
            /**
                * <p>The ARN of the provisioned product.</p>
                */
            Arn?: string;
            /**
                * <p>The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.</p>
                */
            Type?: string;
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            Id?: string;
            /**
                * <p>The current status of the provisioned product.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most
                *                recent operation succeeded and completed.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results.
                *                Wait for an <code>AVAILABLE</code> status before performing operations.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has
                *                completed the requested operation but is not exactly what was requested. For example, a
                *                request to update to a new version failed and the stack rolled back to the current version.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running.
                *                For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product,
                *                but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an <code>AVAILABLE</code> status before performing operations.</p>
                *             </li>
                *          </ul>
                */
            Status?: ProvisionedProductStatus | string;
            /**
                * <p>The current status message of the provisioned product.</p>
                */
            StatusMessage?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
            /**
                * <p>The record identifier of the last request performed on this provisioned product.</p>
                */
            LastRecordId?: string;
            /**
                * <p>The record identifier of the last request performed on this provisioned product of the following types:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                ProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                UpdateProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                ExecuteProvisionedProductPlan
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                TerminateProvisionedProduct
                *             </p>
                *             </li>
                *          </ul>
                */
            LastProvisioningRecordId?: string;
            /**
                * <p>The record identifier of the last successful request performed on this provisioned product of the following types:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                ProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                UpdateProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                ExecuteProvisionedProductPlan
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                TerminateProvisionedProduct
                *             </p>
                *             </li>
                *          </ul>
                */
            LastSuccessfulProvisioningRecordId?: string;
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId?: string;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The ARN of the launch role associated with the provisioned product.</p>
                */
            LaunchRoleArn?: string;
    }
    export namespace ProvisionedProductDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedProductDetail) => any;
    }
    export interface DescribeProvisionedProductOutput {
            /**
                * <p>Information about the provisioned product.</p>
                */
            ProvisionedProductDetail?: ProvisionedProductDetail;
            /**
                * <p>Any CloudWatch dashboards that were created when provisioning the product.</p>
                */
            CloudWatchDashboards?: CloudWatchDashboard[];
    }
    export namespace DescribeProvisionedProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisionedProductOutput) => any;
    }
    export interface DescribeProvisionedProductPlanInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace DescribeProvisionedProductPlanInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisionedProductPlanInput) => any;
    }
    export enum ProvisionedProductPlanStatus {
            CREATE_FAILED = "CREATE_FAILED",
            CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
            CREATE_SUCCESS = "CREATE_SUCCESS",
            EXECUTE_FAILED = "EXECUTE_FAILED",
            EXECUTE_IN_PROGRESS = "EXECUTE_IN_PROGRESS",
            EXECUTE_SUCCESS = "EXECUTE_SUCCESS"
    }
    /**
        * <p>Information about a plan.</p>
        */
    export interface ProvisionedProductPlanDetails {
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The path identifier of the product. This value is optional if the product
                *          has a default path, and required if the product has more than one path.
                *          To list the paths for a product, use <a>ListLaunchPaths</a>.</p>
                */
            PathId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the plan.</p>
                */
            PlanName?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProvisionProductId?: string;
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            ProvisionProductName?: string;
            /**
                * <p>The plan type.</p>
                */
            PlanType?: ProvisionedProductPlanType | string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The status.</p>
                */
            Status?: ProvisionedProductPlanStatus | string;
            /**
                * <p>The time when the plan was last updated.</p>
                */
            UpdatedTime?: Date;
            /**
                * <p>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related
                *          events.</p>
                */
            NotificationArns?: string[];
            /**
                * <p>Parameters specified by the administrator that are required for provisioning the
                *          product.</p>
                */
            ProvisioningParameters?: UpdateProvisioningParameter[];
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The status message.</p>
                */
            StatusMessage?: string;
    }
    export namespace ProvisionedProductPlanDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedProductPlanDetails) => any;
    }
    export enum ChangeAction {
            ADD = "ADD",
            MODIFY = "MODIFY",
            REMOVE = "REMOVE"
    }
    export enum EvaluationType {
            DYNAMIC = "DYNAMIC",
            STATIC = "STATIC"
    }
    export enum ResourceAttribute {
            CREATIONPOLICY = "CREATIONPOLICY",
            DELETIONPOLICY = "DELETIONPOLICY",
            METADATA = "METADATA",
            PROPERTIES = "PROPERTIES",
            TAGS = "TAGS",
            UPDATEPOLICY = "UPDATEPOLICY"
    }
    export enum RequiresRecreation {
            ALWAYS = "ALWAYS",
            CONDITIONALLY = "CONDITIONALLY",
            NEVER = "NEVER"
    }
    /**
        * <p>Information about a change to a resource attribute.</p>
        */
    export interface ResourceTargetDefinition {
            /**
                * <p>The attribute to be changed.</p>
                */
            Attribute?: ResourceAttribute | string;
            /**
                * <p>If the attribute is <code>Properties</code>, the value is the name of the property.
                *          Otherwise, the value is null.</p>
                */
            Name?: string;
            /**
                * <p>If the attribute is <code>Properties</code>, indicates whether a change to this property
                *          causes the resource to be re-created.</p>
                */
            RequiresRecreation?: RequiresRecreation | string;
    }
    export namespace ResourceTargetDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceTargetDefinition) => any;
    }
    /**
        * <p>Information about a change to a resource attribute.</p>
        */
    export interface ResourceChangeDetail {
            /**
                * <p>Information about the resource attribute to be modified.</p>
                */
            Target?: ResourceTargetDefinition;
            /**
                * <p>For static evaluations, the value of the resource attribute will change and the new value is known.
                *          For dynamic evaluations, the value might change, and any new value will be determined when the plan is updated.</p>
                */
            Evaluation?: EvaluationType | string;
            /**
                * <p>The ID of the entity that caused the change.</p>
                */
            CausingEntity?: string;
    }
    export namespace ResourceChangeDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceChangeDetail) => any;
    }
    export enum Replacement {
            CONDITIONAL = "CONDITIONAL",
            FALSE = "FALSE",
            TRUE = "TRUE"
    }
    /**
        * <p>Information about a resource change that will occur when a plan is executed.</p>
        */
    export interface ResourceChange {
            /**
                * <p>The change action.</p>
                */
            Action?: ChangeAction | string;
            /**
                * <p>The ID of the resource, as defined in the CloudFormation template.</p>
                */
            LogicalResourceId?: string;
            /**
                * <p>The ID of the resource, if it was already created.</p>
                */
            PhysicalResourceId?: string;
            /**
                * <p>The type of resource.</p>
                */
            ResourceType?: string;
            /**
                * <p>If the change type is <code>Modify</code>, indicates whether the existing resource
                *          is deleted and replaced with a new one.</p>
                */
            Replacement?: Replacement | string;
            /**
                * <p>The change scope.</p>
                */
            Scope?: (ResourceAttribute | string)[];
            /**
                * <p>Information about the resource changes.</p>
                */
            Details?: ResourceChangeDetail[];
    }
    export namespace ResourceChange {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceChange) => any;
    }
    export interface DescribeProvisionedProductPlanOutput {
            /**
                * <p>Information about the plan.</p>
                */
            ProvisionedProductPlanDetails?: ProvisionedProductPlanDetails;
            /**
                * <p>Information about the resource changes that will occur when the plan is executed.</p>
                */
            ResourceChanges?: ResourceChange[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace DescribeProvisionedProductPlanOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisionedProductPlanOutput) => any;
    }
    export interface DescribeProvisioningArtifactInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The provisioning artifact name.</p>
                */
            ProvisioningArtifactName?: string;
            /**
                * <p>The product name.</p>
                */
            ProductName?: string;
            /**
                * <p>Indicates whether a verbose level of detail is enabled.</p>
                */
            Verbose?: boolean;
    }
    export namespace DescribeProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningArtifactInput) => any;
    }
    export interface DescribeProvisioningArtifactOutput {
            /**
                * <p>Information about the provisioning artifact.</p>
                */
            ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
            /**
                * <p>The URL of the CloudFormation template in Amazon S3.</p>
                */
            Info?: Record<string, string>;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace DescribeProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningArtifactOutput) => any;
    }
    export interface DescribeProvisioningParametersInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier. You must provide the product name or ID, but not both.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the product. You must provide the name or ID, but not both.</p>
                */
            ProductName?: string;
            /**
                * <p>The identifier of the provisioning artifact. You must provide the name or ID, but not both.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The name of the provisioning artifact. You must provide the name or ID, but not both.</p>
                */
            ProvisioningArtifactName?: string;
            /**
                * <p>The path identifier of the product. This value is optional if the product
                *          has a default path, and required if the product has more than one path.
                *          To list the paths for a product, use <a>ListLaunchPaths</a>. You must provide the name or ID, but not both.</p>
                */
            PathId?: string;
            /**
                * <p>The name of the path. You must provide the name or ID, but not both.</p>
                */
            PathName?: string;
    }
    export namespace DescribeProvisioningParametersInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningParametersInput) => any;
    }
    /**
        * <p>Summary information about a constraint.</p>
        */
    export interface ConstraintSummary {
            /**
                * <p>The type of constraint.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>LAUNCH</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>NOTIFICATION</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>STACKSET</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TEMPLATE</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Type?: string;
            /**
                * <p>The description of the constraint.</p>
                */
            Description?: string;
    }
    export namespace ConstraintSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConstraintSummary) => any;
    }
    /**
        * <p>Provisioning artifact output.</p>
        */
    export interface ProvisioningArtifactOutput {
            /**
                * <p>The provisioning artifact output key.</p>
                */
            Key?: string;
            /**
                * <p>Description of the provisioning artifact output key.</p>
                */
            Description?: string;
    }
    export namespace ProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactOutput) => any;
    }
    /**
        * <p>The constraints that the administrator has put on the parameter.</p>
        */
    export interface ParameterConstraints {
            /**
                * <p>The values that the administrator has allowed for the parameter.</p>
                */
            AllowedValues?: string[];
            /**
                * <p>A regular expression that represents the patterns that allow for <code>String</code> types. The pattern must match the entire parameter value provided.</p>
                */
            AllowedPattern?: string;
            /**
                * <p>A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of <code>[A-Za-z0-9]+</code> displays the following error message when the user specifies an invalid value:</p>
                *
                *          <p>
                *             <code>Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+</code>
                *          </p>
                *
                *          <p>By adding a constraint description, such as must only contain letters (uppercase and lowercase) and numbers, you can display the following customized error message:</p>
                *
                *          <p>
                *             <code>Malformed input-Parameter MyParameter must only contain uppercase and lowercase letters and numbers.</code>
                *          </p>
                */
            ConstraintDescription?: string;
            /**
                * <p>An integer value that determines the largest number of characters you want to allow for <code>String</code> types. </p>
                */
            MaxLength?: string;
            /**
                * <p>An integer value that determines the smallest number of characters you want to allow for <code>String</code> types.</p>
                */
            MinLength?: string;
            /**
                * <p>A numeric value that determines the largest numeric value you want to allow for <code>Number</code> types.</p>
                */
            MaxValue?: string;
            /**
                * <p>A numeric value that determines the smallest numeric value you want to allow for <code>Number</code> types. </p>
                */
            MinValue?: string;
    }
    export namespace ParameterConstraints {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ParameterConstraints) => any;
    }
    /**
        * <p>Information about a parameter used to provision a product.</p>
        */
    export interface ProvisioningArtifactParameter {
            /**
                * <p>The parameter key.</p>
                */
            ParameterKey?: string;
            /**
                * <p>The default value.</p>
                */
            DefaultValue?: string;
            /**
                * <p>The parameter type.</p>
                */
            ParameterType?: string;
            /**
                * <p>If this value is true, the value for this parameter is obfuscated from view when the
                *          parameter is retrieved. This parameter is used to hide sensitive information.</p>
                */
            IsNoEcho?: boolean;
            /**
                * <p>The description of the parameter.</p>
                */
            Description?: string;
            /**
                * <p>Constraints that the administrator has put on a parameter.</p>
                */
            ParameterConstraints?: ParameterConstraints;
    }
    export namespace ProvisioningArtifactParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactParameter) => any;
    }
    /**
        * <p>The user-defined preferences that will be applied during product provisioning, unless overridden by <code>ProvisioningPreferences</code> or <code>UpdateProvisioningPreferences</code>.</p>
        *          <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a> in the <i>AWS CloudFormation User Guide</i>.</p>
        */
    export interface ProvisioningArtifactPreferences {
            /**
                * <p>One or more AWS accounts where stack instances are deployed from the stack set. These accounts can be scoped in <code>ProvisioningPreferences$StackSetAccounts</code> and <code>UpdateProvisioningPreferences$StackSetAccounts</code>.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                */
            StackSetAccounts?: string[];
            /**
                * <p>One or more AWS Regions where stack instances are deployed from the stack set. These regions can be scoped in <code>ProvisioningPreferences$StackSetRegions</code> and <code>UpdateProvisioningPreferences$StackSetRegions</code>.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                */
            StackSetRegions?: string[];
    }
    export namespace ProvisioningArtifactPreferences {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactPreferences) => any;
    }
    /**
        * <p>Summary information about a TagOption.</p>
        */
    export interface TagOptionSummary {
            /**
                * <p>The TagOption key.</p>
                */
            Key?: string;
            /**
                * <p>The TagOption value.</p>
                */
            Values?: string[];
    }
    export namespace TagOptionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagOptionSummary) => any;
    }
    /**
        * <p>Additional information provided by the administrator.</p>
        */
    export interface UsageInstruction {
            /**
                * <p>The usage instruction type for the value.</p>
                */
            Type?: string;
            /**
                * <p>The usage instruction value for this type.</p>
                */
            Value?: string;
    }
    export namespace UsageInstruction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UsageInstruction) => any;
    }
    export interface DescribeProvisioningParametersOutput {
            /**
                * <p>Information about the parameters used to provision the product.</p>
                */
            ProvisioningArtifactParameters?: ProvisioningArtifactParameter[];
            /**
                * <p>Information about the constraints used to provision the product.</p>
                */
            ConstraintSummaries?: ConstraintSummary[];
            /**
                * <p>Any additional metadata specifically related to the provisioning of the product. For
                *          example, see the <code>Version</code> field of the CloudFormation template.</p>
                */
            UsageInstructions?: UsageInstruction[];
            /**
                * <p>Information about the TagOptions associated with the resource.</p>
                */
            TagOptions?: TagOptionSummary[];
            /**
                * <p>An object that contains information about preferences, such as regions and accounts, for the provisioning artifact.</p>
                */
            ProvisioningArtifactPreferences?: ProvisioningArtifactPreferences;
            /**
                * @deprecated
                *
                * <p>The output of the provisioning artifact.</p>
                */
            ProvisioningArtifactOutputs?: ProvisioningArtifactOutput[];
            /**
                * <p>A list of the keys and descriptions of the outputs. These outputs can be referenced from a provisioned product launched from this provisioning artifact.</p>
                */
            ProvisioningArtifactOutputKeys?: ProvisioningArtifactOutput[];
    }
    export namespace DescribeProvisioningParametersOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProvisioningParametersOutput) => any;
    }
    export interface DescribeRecordInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The record identifier of the provisioned product. This identifier is returned by the
                *          request operation.</p>
                */
            Id: string | undefined;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace DescribeRecordInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRecordInput) => any;
    }
    /**
        * <p>The error code and description resulting from an operation.</p>
        */
    export interface RecordError {
            /**
                * <p>The numeric value of the error.</p>
                */
            Code?: string;
            /**
                * <p>The description of the error.</p>
                */
            Description?: string;
    }
    export namespace RecordError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecordError) => any;
    }
    /**
        * <p>Information about a tag, which is a key-value pair.</p>
        */
    export interface RecordTag {
            /**
                * <p>The key for this tag.</p>
                */
            Key?: string;
            /**
                * <p>The value for this tag.</p>
                */
            Value?: string;
    }
    export namespace RecordTag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecordTag) => any;
    }
    export enum RecordStatus {
            CREATED = "CREATED",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            IN_PROGRESS_IN_ERROR = "IN_PROGRESS_IN_ERROR",
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>Information about a request operation.</p>
        */
    export interface RecordDetail {
            /**
                * <p>The identifier of the record.</p>
                */
            RecordId?: string;
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            ProvisionedProductName?: string;
            /**
                * <p>The status of the provisioned product.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CREATED</code> - The request was created but the operation has not started.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IN_PROGRESS</code> - The requested operation is in progress.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the
                *             requested operation failed and some remediation is occurring. For example, a rollback.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>SUCCEEDED</code> - The requested operation has successfully completed.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FAILED</code> - The requested operation has unsuccessfully completed.
                *             Investigate using the error messages returned.</p>
                *             </li>
                *          </ul>
                */
            Status?: RecordStatus | string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>The time when the record was last updated.</p>
                */
            UpdatedTime?: Date;
            /**
                * <p>The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.</p>
                */
            ProvisionedProductType?: string;
            /**
                * <p>The record type.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>PROVISION_PRODUCT</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>UPDATE_PROVISIONED_PRODUCT</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TERMINATE_PROVISIONED_PRODUCT</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            RecordType?: string;
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            ProvisionedProductId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The path identifier.</p>
                */
            PathId?: string;
            /**
                * <p>The errors that occurred.</p>
                */
            RecordErrors?: RecordError[];
            /**
                * <p>One or more tags.</p>
                */
            RecordTags?: RecordTag[];
            /**
                * <p>The ARN of the launch role associated with the provisioned product.</p>
                */
            LaunchRoleArn?: string;
    }
    export namespace RecordDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecordDetail) => any;
    }
    /**
        * <p>The output for the product created as the result of a request. For example, the output for
        *          a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.</p>
        */
    export interface RecordOutput {
            /**
                * <p>The output key.</p>
                */
            OutputKey?: string;
            /**
                * <p>The output value.</p>
                */
            OutputValue?: string;
            /**
                * <p>The description of the output.</p>
                */
            Description?: string;
    }
    export namespace RecordOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecordOutput) => any;
    }
    export interface DescribeRecordOutput {
            /**
                * <p>Information about the product.</p>
                */
            RecordDetail?: RecordDetail;
            /**
                * <p>Information about the product created as the result of a request. For example, the output for
                *          a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.</p>
                */
            RecordOutputs?: RecordOutput[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace DescribeRecordOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeRecordOutput) => any;
    }
    export interface DescribeServiceActionInput {
            /**
                * <p>The self-service action identifier.</p>
                */
            Id: string | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace DescribeServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceActionInput) => any;
    }
    export interface DescribeServiceActionOutput {
            /**
                * <p>Detailed information about the self-service action.</p>
                */
            ServiceActionDetail?: ServiceActionDetail;
    }
    export namespace DescribeServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceActionOutput) => any;
    }
    export interface DescribeServiceActionExecutionParametersInput {
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            ProvisionedProductId: string | undefined;
            /**
                * <p>The self-service action identifier.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace DescribeServiceActionExecutionParametersInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceActionExecutionParametersInput) => any;
    }
    /**
        * <p>Details of an execution parameter value that is passed to a self-service action when executed on a provisioned product.</p>
        */
    export interface ExecutionParameter {
            /**
                * <p>The name of the execution parameter.</p>
                */
            Name?: string;
            /**
                * <p>The execution parameter type.</p>
                */
            Type?: string;
            /**
                * <p>The default values for the execution parameter.</p>
                */
            DefaultValues?: string[];
    }
    export namespace ExecutionParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExecutionParameter) => any;
    }
    export interface DescribeServiceActionExecutionParametersOutput {
            /**
                * <p>The parameters of the self-service action.</p>
                */
            ServiceActionParameters?: ExecutionParameter[];
    }
    export namespace DescribeServiceActionExecutionParametersOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServiceActionExecutionParametersOutput) => any;
    }
    export interface DescribeTagOptionInput {
            /**
                * <p>The TagOption identifier.</p>
                */
            Id: string | undefined;
    }
    export namespace DescribeTagOptionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTagOptionInput) => any;
    }
    export interface DescribeTagOptionOutput {
            /**
                * <p>Information about the TagOption.</p>
                */
            TagOptionDetail?: TagOptionDetail;
    }
    export namespace DescribeTagOptionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTagOptionOutput) => any;
    }
    export interface DisableAWSOrganizationsAccessInput {
    }
    export namespace DisableAWSOrganizationsAccessInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisableAWSOrganizationsAccessInput) => any;
    }
    export interface DisableAWSOrganizationsAccessOutput {
    }
    export namespace DisableAWSOrganizationsAccessOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisableAWSOrganizationsAccessOutput) => any;
    }
    export interface DisassociateBudgetFromResourceInput {
            /**
                * <p>The name of the budget you want to disassociate.</p>
                */
            BudgetName: string | undefined;
            /**
                * <p>The resource identifier you want to disassociate from. Either a portfolio-id or a product-id.</p>
                */
            ResourceId: string | undefined;
    }
    export namespace DisassociateBudgetFromResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateBudgetFromResourceInput) => any;
    }
    export interface DisassociateBudgetFromResourceOutput {
    }
    export namespace DisassociateBudgetFromResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateBudgetFromResourceOutput) => any;
    }
    export interface DisassociatePrincipalFromPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The ARN of the principal (IAM user, role, or group).</p>
                */
            PrincipalARN: string | undefined;
    }
    export namespace DisassociatePrincipalFromPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePrincipalFromPortfolioInput) => any;
    }
    export interface DisassociatePrincipalFromPortfolioOutput {
    }
    export namespace DisassociatePrincipalFromPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePrincipalFromPortfolioOutput) => any;
    }
    export interface DisassociateProductFromPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
    }
    export namespace DisassociateProductFromPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateProductFromPortfolioInput) => any;
    }
    export interface DisassociateProductFromPortfolioOutput {
    }
    export namespace DisassociateProductFromPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateProductFromPortfolioOutput) => any;
    }
    export interface DisassociateServiceActionFromProvisioningArtifactInput {
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace DisassociateServiceActionFromProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateServiceActionFromProvisioningArtifactInput) => any;
    }
    export interface DisassociateServiceActionFromProvisioningArtifactOutput {
    }
    export namespace DisassociateServiceActionFromProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateServiceActionFromProvisioningArtifactOutput) => any;
    }
    export interface DisassociateTagOptionFromResourceInput {
            /**
                * <p>The resource identifier.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The TagOption identifier.</p>
                */
            TagOptionId: string | undefined;
    }
    export namespace DisassociateTagOptionFromResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateTagOptionFromResourceInput) => any;
    }
    export interface DisassociateTagOptionFromResourceOutput {
    }
    export namespace DisassociateTagOptionFromResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateTagOptionFromResourceOutput) => any;
    }
    export interface EnableAWSOrganizationsAccessInput {
    }
    export namespace EnableAWSOrganizationsAccessInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableAWSOrganizationsAccessInput) => any;
    }
    export interface EnableAWSOrganizationsAccessOutput {
    }
    export namespace EnableAWSOrganizationsAccessOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnableAWSOrganizationsAccessOutput) => any;
    }
    export interface ExecuteProvisionedProductPlanInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId: string | undefined;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace ExecuteProvisionedProductPlanInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExecuteProvisionedProductPlanInput) => any;
    }
    export interface ExecuteProvisionedProductPlanOutput {
            /**
                * <p>Information about the result of provisioning the product.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace ExecuteProvisionedProductPlanOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExecuteProvisionedProductPlanOutput) => any;
    }
    export interface ExecuteProvisionedProductServiceActionInput {
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            ProvisionedProductId: string | undefined;
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>An idempotency token that uniquely identifies the execute request.</p>
                */
            ExecuteToken?: string;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>A map of all self-service action parameters and their values. If a provided parameter is of a special type, such as <code>TARGET</code>, the provided value will
                *             override the default value generated by AWS Service Catalog. If the parameters field is not provided, no additional parameters are passed and default values will be used for
                *             any special parameters such as <code>TARGET</code>.</p>
                */
            Parameters?: Record<string, string[]>;
    }
    export namespace ExecuteProvisionedProductServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExecuteProvisionedProductServiceActionInput) => any;
    }
    export interface ExecuteProvisionedProductServiceActionOutput {
            /**
                * <p>An object containing detailed information about the result of provisioning the product.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace ExecuteProvisionedProductServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExecuteProvisionedProductServiceActionOutput) => any;
    }
    export interface GetAWSOrganizationsAccessStatusInput {
    }
    export namespace GetAWSOrganizationsAccessStatusInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAWSOrganizationsAccessStatusInput) => any;
    }
    export interface GetAWSOrganizationsAccessStatusOutput {
            /**
                * <p>The status of the portfolio share feature.</p>
                */
            AccessStatus?: AccessStatus | string;
    }
    export namespace GetAWSOrganizationsAccessStatusOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAWSOrganizationsAccessStatusOutput) => any;
    }
    export interface GetProvisionedProductOutputsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the provisioned product that you want the outputs from.</p>
                */
            ProvisionedProductId?: string;
            /**
                * <p>The name of the provisioned product that you want the outputs from.</p>
                */
            ProvisionedProductName?: string;
            /**
                * <p>The list of keys that the API should return with their values. If none are provided, the API will return all outputs of the provisioned product.</p>
                */
            OutputKeys?: string[];
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace GetProvisionedProductOutputsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProvisionedProductOutputsInput) => any;
    }
    export interface GetProvisionedProductOutputsOutput {
            /**
                * <p>Information about the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.
                *       </p>
                */
            Outputs?: RecordOutput[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace GetProvisionedProductOutputsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProvisionedProductOutputsOutput) => any;
    }
    export interface ImportAsProvisionedProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>The user-friendly name of the provisioned product. The value must be unique for the AWS
                *          account. The name cannot be updated after the product is provisioned. </p>
                */
            ProvisionedProductName: string | undefined;
            /**
                * <p>The unique identifier of the resource to be imported. It only currently supports
                *          CloudFormation stack IDs.</p>
                */
            PhysicalId: string | undefined;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace ImportAsProvisionedProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAsProvisionedProductInput) => any;
    }
    export interface ImportAsProvisionedProductOutput {
            /**
                * <p>Information about a request operation.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace ImportAsProvisionedProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportAsProvisionedProductOutput) => any;
    }
    export interface ListAcceptedPortfolioSharesInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The type of shared portfolios to list. The default is to list imported portfolios.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AWS_ORGANIZATIONS</code> - List portfolios accepted and shared via organizational sharing by the management account or delegated administrator of your organization.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>AWS_SERVICECATALOG</code> - Deprecated type.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IMPORTED</code> - List imported portfolios that have been accepted and
                *                shared through account-to-account sharing.</p>
                *             </li>
                *          </ul>
                */
            PortfolioShareType?: PortfolioShareType | string;
    }
    export namespace ListAcceptedPortfolioSharesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAcceptedPortfolioSharesInput) => any;
    }
    export interface ListAcceptedPortfolioSharesOutput {
            /**
                * <p>Information about the portfolios.</p>
                */
            PortfolioDetails?: PortfolioDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListAcceptedPortfolioSharesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAcceptedPortfolioSharesOutput) => any;
    }
    export interface ListBudgetsForResourceInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The resource identifier.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListBudgetsForResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBudgetsForResourceInput) => any;
    }
    export interface ListBudgetsForResourceOutput {
            /**
                * <p>Information about the associated budgets.</p>
                */
            Budgets?: BudgetDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListBudgetsForResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBudgetsForResourceOutput) => any;
    }
    export interface ListConstraintsForPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListConstraintsForPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConstraintsForPortfolioInput) => any;
    }
    export interface ListConstraintsForPortfolioOutput {
            /**
                * <p>Information about the constraints.</p>
                */
            ConstraintDetails?: ConstraintDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListConstraintsForPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListConstraintsForPortfolioOutput) => any;
    }
    export interface ListLaunchPathsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListLaunchPathsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLaunchPathsInput) => any;
    }
    /**
        * <p>Summary information about a product path for a user.</p>
        */
    export interface LaunchPathSummary {
            /**
                * <p>The identifier of the product path.</p>
                */
            Id?: string;
            /**
                * <p>The constraints on the portfolio-product relationship.</p>
                */
            ConstraintSummaries?: ConstraintSummary[];
            /**
                * <p>The tags associated with this product path.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The name of the portfolio that contains the product. </p>
                */
            Name?: string;
    }
    export namespace LaunchPathSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LaunchPathSummary) => any;
    }
    export interface ListLaunchPathsOutput {
            /**
                * <p>Information about the launch path.</p>
                */
            LaunchPathSummaries?: LaunchPathSummary[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListLaunchPathsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLaunchPathsOutput) => any;
    }
    export interface ListOrganizationPortfolioAccessInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier. For example, <code>port-2abcdext3y5fk</code>.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The organization node type that will be returned in the output.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ORGANIZATION</code> - Organization that has access to the portfolio. </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ORGANIZATIONAL_UNIT</code> - Organizational unit that has access to the portfolio within your organization.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ACCOUNT</code> - Account that has access to the portfolio within your organization.</p>
                *             </li>
                *          </ul>
                */
            OrganizationNodeType: OrganizationNodeType | string | undefined;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace ListOrganizationPortfolioAccessInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationPortfolioAccessInput) => any;
    }
    export interface ListOrganizationPortfolioAccessOutput {
            /**
                * <p>Displays information about the organization nodes.</p>
                */
            OrganizationNodes?: OrganizationNode[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListOrganizationPortfolioAccessOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationPortfolioAccessOutput) => any;
    }
    export interface ListPortfolioAccessInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The ID of an organization node the portfolio is shared with. All children of this node with an inherited portfolio share will be returned.</p>
                */
            OrganizationParentId?: string;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace ListPortfolioAccessInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfolioAccessInput) => any;
    }
    export interface ListPortfolioAccessOutput {
            /**
                * <p>Information about the AWS accounts with access to the portfolio.</p>
                */
            AccountIds?: string[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListPortfolioAccessOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfolioAccessOutput) => any;
    }
    export interface ListPortfoliosInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace ListPortfoliosInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfoliosInput) => any;
    }
    export interface ListPortfoliosOutput {
            /**
                * <p>Information about the portfolios.</p>
                */
            PortfolioDetails?: PortfolioDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListPortfoliosOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfoliosOutput) => any;
    }
    export interface ListPortfoliosForProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace ListPortfoliosForProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfoliosForProductInput) => any;
    }
    export interface ListPortfoliosForProductOutput {
            /**
                * <p>Information about the portfolios.</p>
                */
            PortfolioDetails?: PortfolioDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListPortfoliosForProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortfoliosForProductOutput) => any;
    }
    export interface ListPrincipalsForPortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListPrincipalsForPortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalsForPortfolioInput) => any;
    }
    /**
        * <p>Information about a principal.</p>
        */
    export interface Principal {
            /**
                * <p>The ARN of the principal (IAM user, role, or group).</p>
                */
            PrincipalARN?: string;
            /**
                * <p>The principal type. The supported value is <code>IAM</code>.</p>
                */
            PrincipalType?: PrincipalType | string;
    }
    export namespace Principal {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Principal) => any;
    }
    export interface ListPrincipalsForPortfolioOutput {
            /**
                * <p>The IAM principals (users or roles) associated with the portfolio.</p>
                */
            Principals?: Principal[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListPrincipalsForPortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPrincipalsForPortfolioOutput) => any;
    }
    export interface ListProvisionedProductPlansInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProvisionProductId?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The access level to use to obtain results. The default is <code>User</code>.</p>
                */
            AccessLevelFilter?: AccessLevelFilter;
    }
    export namespace ListProvisionedProductPlansInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisionedProductPlansInput) => any;
    }
    /**
        * <p>Summary information about a plan.</p>
        */
    export interface ProvisionedProductPlanSummary {
            /**
                * <p>The name of the plan.</p>
                */
            PlanName?: string;
            /**
                * <p>The plan identifier.</p>
                */
            PlanId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProvisionProductId?: string;
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            ProvisionProductName?: string;
            /**
                * <p>The plan type.</p>
                */
            PlanType?: ProvisionedProductPlanType | string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
    }
    export namespace ProvisionedProductPlanSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedProductPlanSummary) => any;
    }
    export interface ListProvisionedProductPlansOutput {
            /**
                * <p>Information about the plans.</p>
                */
            ProvisionedProductPlans?: ProvisionedProductPlanSummary[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListProvisionedProductPlansOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisionedProductPlansOutput) => any;
    }
    export interface ListProvisioningArtifactsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
    }
    export namespace ListProvisioningArtifactsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningArtifactsInput) => any;
    }
    export interface ListProvisioningArtifactsOutput {
            /**
                * <p>Information about the provisioning artifacts.</p>
                */
            ProvisioningArtifactDetails?: ProvisioningArtifactDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListProvisioningArtifactsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningArtifactsOutput) => any;
    }
    export interface ListProvisioningArtifactsForServiceActionInput {
            /**
                * <p>The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.</p>
                */
            ServiceActionId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace ListProvisioningArtifactsForServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningArtifactsForServiceActionInput) => any;
    }
    /**
        * <p>An object that contains summary information about a product view and a provisioning artifact.</p>
        */
    export interface ProvisioningArtifactView {
            /**
                * <p>Summary information about a product view.</p>
                */
            ProductViewSummary?: ProductViewSummary;
            /**
                * <p>Information about a provisioning artifact. A provisioning artifact is also known as a product version.</p>
                */
            ProvisioningArtifact?: ProvisioningArtifact;
    }
    export namespace ProvisioningArtifactView {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningArtifactView) => any;
    }
    export interface ListProvisioningArtifactsForServiceActionOutput {
            /**
                * <p>An array of objects with information about product views and provisioning artifacts.</p>
                */
            ProvisioningArtifactViews?: ProvisioningArtifactView[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListProvisioningArtifactsForServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProvisioningArtifactsForServiceActionOutput) => any;
    }
    /**
        * <p>The search filter to use when listing history records.</p>
        */
    export interface ListRecordHistorySearchFilter {
            /**
                * <p>The filter key.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>product</code> - Filter results based on the specified product identifier.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>provisionedproduct</code> - Filter results based on the provisioned product identifier.</p>
                *             </li>
                *          </ul>
                */
            Key?: string;
            /**
                * <p>The filter value.</p>
                */
            Value?: string;
    }
    export namespace ListRecordHistorySearchFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRecordHistorySearchFilter) => any;
    }
    export interface ListRecordHistoryInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The access level to use to obtain results. The default is <code>User</code>.</p>
                */
            AccessLevelFilter?: AccessLevelFilter;
            /**
                * <p>The search filter to scope the results.</p>
                */
            SearchFilter?: ListRecordHistorySearchFilter;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListRecordHistoryInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRecordHistoryInput) => any;
    }
    export interface ListRecordHistoryOutput {
            /**
                * <p>The records, in reverse chronological order.</p>
                */
            RecordDetails?: RecordDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListRecordHistoryOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRecordHistoryOutput) => any;
    }
    export interface ListResourcesForTagOptionInput {
            /**
                * <p>The TagOption identifier.</p>
                */
            TagOptionId: string | undefined;
            /**
                * <p>The resource type.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>Portfolio</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>Product</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            ResourceType?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListResourcesForTagOptionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesForTagOptionInput) => any;
    }
    /**
        * <p>Information about a resource.</p>
        */
    export interface ResourceDetail {
            /**
                * <p>The identifier of the resource.</p>
                */
            Id?: string;
            /**
                * <p>The ARN of the resource.</p>
                */
            ARN?: string;
            /**
                * <p>The name of the resource.</p>
                */
            Name?: string;
            /**
                * <p>The description of the resource.</p>
                */
            Description?: string;
            /**
                * <p>The creation time of the resource.</p>
                */
            CreatedTime?: Date;
    }
    export namespace ResourceDetail {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceDetail) => any;
    }
    export interface ListResourcesForTagOptionOutput {
            /**
                * <p>Information about the resources.</p>
                */
            ResourceDetails?: ResourceDetail[];
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListResourcesForTagOptionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesForTagOptionOutput) => any;
    }
    export interface ListServiceActionsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListServiceActionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceActionsInput) => any;
    }
    export interface ListServiceActionsOutput {
            /**
                * <p>An object containing information about the service actions associated with the provisioning artifact.</p>
                */
            ServiceActionSummaries?: ServiceActionSummary[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListServiceActionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceActionsOutput) => any;
    }
    export interface ListServiceActionsForProvisioningArtifactInput {
            /**
                * <p>The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace ListServiceActionsForProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceActionsForProvisioningArtifactInput) => any;
    }
    export interface ListServiceActionsForProvisioningArtifactOutput {
            /**
                * <p>An object containing information about the self-service actions associated with the provisioning artifact.</p>
                */
            ServiceActionSummaries?: ServiceActionSummary[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListServiceActionsForProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceActionsForProvisioningArtifactOutput) => any;
    }
    export interface ListStackInstancesForProvisionedProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            ProvisionedProductId: string | undefined;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
    }
    export namespace ListStackInstancesForProvisionedProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStackInstancesForProvisionedProductInput) => any;
    }
    export enum StackInstanceStatus {
            CURRENT = "CURRENT",
            INOPERABLE = "INOPERABLE",
            OUTDATED = "OUTDATED"
    }
    /**
        * <p>An AWS CloudFormation stack, in a specific account and region, that's part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given region. A stack instance can exist without a stack—for example, if the stack couldn't be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, as well as the ID of the actual stack and the stack status. </p>
        */
    export interface StackInstance {
            /**
                * <p>The name of the AWS account that the stack instance is associated with.</p>
                */
            Account?: string;
            /**
                * <p>The name of the AWS region that the stack instance is associated with.</p>
                */
            Region?: string;
            /**
                * <p>The status of the stack instance, in terms of its synchronization with its associated stack set. </p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>INOPERABLE</code>: A <code>DeleteStackInstances</code> operation has failed and left the stack in an unstable state. Stacks in this state are excluded from further <code>UpdateStackSet</code> operations. You might need to perform a <code>DeleteStackInstances</code> operation, with <code>RetainStacks</code> set to true, to delete the stack instance, and then delete the stack manually. </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>OUTDATED</code>: The stack isn't currently up to date with the stack set because either
                *             the associated stack failed during a <code>CreateStackSet</code> or <code>UpdateStackSet</code> operation,
                *             or the stack was part of a <code>CreateStackSet</code> or <code>UpdateStackSet</code> operation that failed or was stopped before the stack was created or updated.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>CURRENT</code>: The stack is currently up to date with the stack set.</p>
                *             </li>
                *          </ul>
                */
            StackInstanceStatus?: StackInstanceStatus | string;
    }
    export namespace StackInstance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StackInstance) => any;
    }
    export interface ListStackInstancesForProvisionedProductOutput {
            /**
                * <p>List of stack instances.</p>
                */
            StackInstances?: StackInstance[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ListStackInstancesForProvisionedProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStackInstancesForProvisionedProductOutput) => any;
    }
    /**
        * <p>Filters to use when listing TagOptions.</p>
        */
    export interface ListTagOptionsFilters {
            /**
                * <p>The TagOption key.</p>
                */
            Key?: string;
            /**
                * <p>The TagOption value.</p>
                */
            Value?: string;
            /**
                * <p>The active state.</p>
                */
            Active?: boolean;
    }
    export namespace ListTagOptionsFilters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagOptionsFilters) => any;
    }
    export interface ListTagOptionsInput {
            /**
                * <p>The search filters. If no search filters are specified, the output includes all TagOptions.</p>
                */
            Filters?: ListTagOptionsFilters;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListTagOptionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagOptionsInput) => any;
    }
    export interface ListTagOptionsOutput {
            /**
                * <p>Information about the TagOptions.</p>
                */
            TagOptionDetails?: TagOptionDetail[];
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ListTagOptionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagOptionsOutput) => any;
    }
    /**
        * <p>Information about a parameter used to provision a product.</p>
        */
    export interface ProvisioningParameter {
            /**
                * <p>The parameter key.</p>
                */
            Key?: string;
            /**
                * <p>The parameter value.</p>
                */
            Value?: string;
    }
    export namespace ProvisioningParameter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningParameter) => any;
    }
    /**
        * <p>The user-defined preferences that will be applied when updating a provisioned
        *          product. Not all preferences are applicable to all provisioned product type</p>
        *          <p>One or more AWS accounts that will have access to the provisioned product.</p>
        *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
        *          <p>The AWS accounts specified should be within the list of accounts in the
        *             <code>STACKSET</code> constraint. To get the list of accounts in the
        *             <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code>
        *          operation.</p>
        *          <p>If no values are specified, the default value is all accounts from the
        *             <code>STACKSET</code> constraint.</p>
        */
    export interface ProvisioningPreferences {
            /**
                * <p>One or more AWS accounts where the provisioned product will be available.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>The specified accounts should be within the list of accounts from the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p>
                *          <p>If no values are specified, the default value is all acounts from the <code>STACKSET</code> constraint.</p>
                */
            StackSetAccounts?: string[];
            /**
                * <p>One or more AWS Regions where the provisioned product will be available.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p>
                *          <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>
                */
            StackSetRegions?: string[];
            /**
                * <p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>
                *          <p>The default value is <code>0</code> if no value is specified.</p>
                */
            StackSetFailureToleranceCount?: number;
            /**
                * <p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</p>
                *          <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>
                */
            StackSetFailureTolerancePercentage?: number;
            /**
                * <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p>
                *          <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>
                */
            StackSetMaxConcurrencyCount?: number;
            /**
                * <p>The maximum percentage of accounts in which to perform this operation at one time.</p>
                *          <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p>
                *          <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>
                */
            StackSetMaxConcurrencyPercentage?: number;
    }
    export namespace ProvisioningPreferences {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisioningPreferences) => any;
    }
    export interface ProvisionProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier. You must provide the name or ID, but not both.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the product. You must provide the name or ID, but not both.</p>
                */
            ProductName?: string;
            /**
                * <p>The identifier of the provisioning artifact. You must provide the name or ID, but not both.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The name of the provisioning artifact. You must provide the name or ID, but not both.</p>
                */
            ProvisioningArtifactName?: string;
            /**
                * <p>The path identifier of the product. This value is optional if the product
                *          has a default path, and required if the product has more than one path.
                *          To list the paths for a product, use <a>ListLaunchPaths</a>. You must provide the name or ID, but not both.</p>
                */
            PathId?: string;
            /**
                * <p>The name of the path. You must provide the name or ID, but not both.</p>
                */
            PathName?: string;
            /**
                * <p>A user-friendly name for the provisioned product. This value must be
                *          unique for the AWS account and cannot be updated after the product is provisioned.</p>
                */
            ProvisionedProductName: string | undefined;
            /**
                * <p>Parameters specified by the administrator that are required for provisioning the
                *          product.</p>
                */
            ProvisioningParameters?: ProvisioningParameter[];
            /**
                * <p>An object that contains information about the provisioning preferences for a stack set.</p>
                */
            ProvisioningPreferences?: ProvisioningPreferences;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Tag[];
            /**
                * <p>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related
                *          events.</p>
                */
            NotificationArns?: string[];
            /**
                * <p>An idempotency token that uniquely identifies the provisioning request.</p>
                */
            ProvisionToken?: string;
    }
    export namespace ProvisionProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionProductInput) => any;
    }
    export interface ProvisionProductOutput {
            /**
                * <p>Information about the result of provisioning the product.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace ProvisionProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionProductOutput) => any;
    }
    export interface RejectPortfolioShareInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The type of shared portfolios to reject. The default is to reject imported portfolios.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AWS_ORGANIZATIONS</code> - Reject portfolios shared by the management account of your
                *                organization.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IMPORTED</code> - Reject imported portfolios.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p>
                *             </li>
                *          </ul>
                *          <p>For example, <code>aws servicecatalog reject-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code>
                *          </p>
                */
            PortfolioShareType?: PortfolioShareType | string;
    }
    export namespace RejectPortfolioShareInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectPortfolioShareInput) => any;
    }
    export interface RejectPortfolioShareOutput {
    }
    export namespace RejectPortfolioShareOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectPortfolioShareOutput) => any;
    }
    export interface ScanProvisionedProductsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The access level to use to obtain results. The default is <code>User</code>.</p>
                */
            AccessLevelFilter?: AccessLevelFilter;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace ScanProvisionedProductsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ScanProvisionedProductsInput) => any;
    }
    export interface ScanProvisionedProductsOutput {
            /**
                * <p>Information about the provisioned products.</p>
                */
            ProvisionedProducts?: ProvisionedProductDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace ScanProvisionedProductsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ScanProvisionedProductsOutput) => any;
    }
    export enum ProductViewFilterBy {
            FullTextSearch = "FullTextSearch",
            Owner = "Owner",
            ProductType = "ProductType",
            SourceProductId = "SourceProductId"
    }
    export enum ProductViewSortBy {
            CreationDate = "CreationDate",
            Title = "Title",
            VersionCount = "VersionCount"
    }
    export enum SortOrder {
            ASCENDING = "ASCENDING",
            DESCENDING = "DESCENDING"
    }
    export interface SearchProductsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The search filters. If no search filters are specified, the output includes
                *          all products to which the caller has access.</p>
                */
            Filters?: Record<string, string[]>;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The sort field. If no value is specified, the results are not sorted.</p>
                */
            SortBy?: ProductViewSortBy | string;
            /**
                * <p>The sort order. If no value is specified, the results are not sorted.</p>
                */
            SortOrder?: SortOrder | string;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace SearchProductsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProductsInput) => any;
    }
    /**
        * <p>A single product view aggregation value/count pair, containing metadata about each
        *          product to which the calling user has access.</p>
        */
    export interface ProductViewAggregationValue {
            /**
                * <p>The value of the product view aggregation.</p>
                */
            Value?: string;
            /**
                * <p>An approximate count of the products that match the value.</p>
                */
            ApproximateCount?: number;
    }
    export namespace ProductViewAggregationValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProductViewAggregationValue) => any;
    }
    export interface SearchProductsOutput {
            /**
                * <p>Information about the product views.</p>
                */
            ProductViewSummaries?: ProductViewSummary[];
            /**
                * <p>The product view aggregations.</p>
                */
            ProductViewAggregations?: Record<string, ProductViewAggregationValue[]>;
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace SearchProductsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProductsOutput) => any;
    }
    export enum ProductSource {
            ACCOUNT = "ACCOUNT"
    }
    export interface SearchProductsAsAdminInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            PortfolioId?: string;
            /**
                * <p>The search filters. If no search filters are specified, the output includes all products
                *          to which the administrator has access.</p>
                */
            Filters?: Record<string, string[]>;
            /**
                * <p>The sort field. If no value is specified, the results are not sorted.</p>
                */
            SortBy?: ProductViewSortBy | string;
            /**
                * <p>The sort order. If no value is specified, the results are not sorted.</p>
                */
            SortOrder?: SortOrder | string;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>Access level of the source of the product.</p>
                */
            ProductSource?: ProductSource | string;
    }
    export namespace SearchProductsAsAdminInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProductsAsAdminInput) => any;
    }
    export interface SearchProductsAsAdminOutput {
            /**
                * <p>Information about the product views.</p>
                */
            ProductViewDetails?: ProductViewDetail[];
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace SearchProductsAsAdminOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProductsAsAdminOutput) => any;
    }
    export enum ProvisionedProductViewFilterBy {
            SearchQuery = "SearchQuery"
    }
    export interface SearchProvisionedProductsInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The access level to use to obtain results. The default is <code>User</code>.</p>
                */
            AccessLevelFilter?: AccessLevelFilter;
            /**
                * <p>The search filters.</p>
                *          <p>When the key is <code>SearchQuery</code>, the searchable fields are <code>arn</code>,
                *          <code>createdTime</code>, <code>id</code>, <code>lastRecordId</code>,
                *          <code>idempotencyToken</code>, <code>name</code>, <code>physicalId</code>, <code>productId</code>,
                *          <code>provisioningArtifact</code>, <code>type</code>, <code>status</code>,
                *          <code>tags</code>, <code>userArn</code>, <code>userArnSession</code>, <code>lastProvisioningRecordId</code>, <code>lastSuccessfulProvisioningRecordId</code>,
                *          <code>productName</code>, and <code>provisioningArtifactName</code>.</p>
                *          <p>Example: <code>"SearchQuery":["status:AVAILABLE"]</code>
                *          </p>
                */
            Filters?: Record<string, string[]>;
            /**
                * <p>The sort field. If no value is specified, the results are not sorted. The valid values are <code>arn</code>, <code>id</code>, <code>name</code>,
                *          and <code>lastRecordId</code>.</p>
                */
            SortBy?: string;
            /**
                * <p>The sort order. If no value is specified, the results are not sorted.</p>
                */
            SortOrder?: SortOrder | string;
            /**
                * <p>The maximum number of items to return with this call.</p>
                */
            PageSize?: number;
            /**
                * <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
                */
            PageToken?: string;
    }
    export namespace SearchProvisionedProductsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProvisionedProductsInput) => any;
    }
    /**
        * <p>Information about a provisioned product.</p>
        */
    export interface ProvisionedProductAttribute {
            /**
                * <p>The user-friendly name of the provisioned product.</p>
                */
            Name?: string;
            /**
                * <p>The ARN of the provisioned product.</p>
                */
            Arn?: string;
            /**
                * <p>The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.</p>
                */
            Type?: string;
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            Id?: string;
            /**
                * <p>The current status of the provisioned product.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most
                *                recent operation succeeded and completed.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results.
                *                Wait for an <code>AVAILABLE</code> status before performing operations.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has
                *                completed the requested operation but is not exactly what was requested. For example, a
                *                request to update to a new version failed and the stack rolled back to the current version.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running.
                *                For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product,
                *                 but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an <code>AVAILABLE</code> status before performing operations.</p>
                *             </li>
                *          </ul>
                */
            Status?: ProvisionedProductStatus | string;
            /**
                * <p>The current status message of the provisioned product.</p>
                */
            StatusMessage?: string;
            /**
                * <p>The UTC time stamp of the creation time.</p>
                */
            CreatedTime?: Date;
            /**
                * <p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
                *   the same response is returned for each repeated request.</p>
                */
            IdempotencyToken?: string;
            /**
                * <p>The record identifier of the last request performed on this provisioned product.</p>
                */
            LastRecordId?: string;
            /**
                * <p>The record identifier of the last request performed on this provisioned product of the following types:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                ProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                UpdateProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                ExecuteProvisionedProductPlan
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                TerminateProvisionedProduct
                *             </p>
                *             </li>
                *          </ul>
                */
            LastProvisioningRecordId?: string;
            /**
                * <p>The record identifier of the last successful request performed on this provisioned product of the following types:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                ProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                UpdateProvisionedProduct
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                ExecuteProvisionedProductPlan
                *             </p>
                *             </li>
                *             <li>
                *                <p>
                *                TerminateProvisionedProduct
                *             </p>
                *             </li>
                *          </ul>
                */
            LastSuccessfulProvisioningRecordId?: string;
            /**
                * <p>One or more tags.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The assigned identifier for the resource, such as an EC2 instance ID or an S3 bucket name.</p>
                */
            PhysicalId?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the product.</p>
                */
            ProductName?: string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The name of the provisioning artifact.</p>
                */
            ProvisioningArtifactName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM user.</p>
                */
            UserArn?: string;
            /**
                * <p>The ARN of the IAM user in the session. This ARN might contain a session ID.</p>
                */
            UserArnSession?: string;
    }
    export namespace ProvisionedProductAttribute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedProductAttribute) => any;
    }
    export interface SearchProvisionedProductsOutput {
            /**
                * <p>Information about the provisioned products.</p>
                */
            ProvisionedProducts?: ProvisionedProductAttribute[];
            /**
                * <p>The number of provisioned products found.</p>
                */
            TotalResultsCount?: number;
            /**
                * <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
                */
            NextPageToken?: string;
    }
    export namespace SearchProvisionedProductsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchProvisionedProductsOutput) => any;
    }
    export interface TerminateProvisionedProductInput {
            /**
                * <p>The name of the provisioned product. You cannot specify both
                *          <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.</p>
                */
            ProvisionedProductName?: string;
            /**
                * <p>The identifier of the provisioned product. You cannot specify both
                *          <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.</p>
                */
            ProvisionedProductId?: string;
            /**
                * <p>An idempotency token that uniquely identifies the termination request. This token is
                *          only valid during the termination process. After the provisioned product is terminated,
                *          subsequent requests to terminate the same provisioned product always return
                *          <b>ResourceNotFound</b>.</p>
                */
            TerminateToken?: string;
            /**
                * <p>If set to true, AWS Service Catalog stops managing the specified provisioned product even
                *          if it cannot delete the underlying resources.</p>
                */
            IgnoreErrors?: boolean;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>When this boolean parameter is set to true, the <code>TerminateProvisionedProduct</code> API deletes
                *          the Service Catalog provisioned product. However, it does not remove the CloudFormation
                *          stack, stack set, or the underlying resources of the deleted provisioned product. The
                *          default value is false.</p>
                */
            RetainPhysicalResources?: boolean;
    }
    export namespace TerminateProvisionedProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TerminateProvisionedProductInput) => any;
    }
    export interface TerminateProvisionedProductOutput {
            /**
                * <p>Information about the result of this request.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace TerminateProvisionedProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TerminateProvisionedProductOutput) => any;
    }
    export interface UpdateConstraintInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the constraint.</p>
                */
            Id: string | undefined;
            /**
                * <p>The updated description of the constraint.</p>
                */
            Description?: string;
            /**
                * <p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p>
                *          <dl>
                *             <dt>LAUNCH</dt>
                *             <dd>
                *                <p>You are required to specify either the <code>RoleArn</code> or the <code>LocalRoleName</code> but can't use both.</p>
                *                <p>Specify the <code>RoleArn</code> property as follows:</p>
                *                <p>
                *                   <code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code>
                *                </p>
                *                <p>Specify the <code>LocalRoleName</code> property as follows:</p>
                *                <p>
                *                   <code>{"LocalRoleName": "SCBasicLaunchRole"}</code>
                *                </p>
                *                <p>If you specify the <code>LocalRoleName</code> property, when an account uses the launch constraint, the IAM role with that name in the account will be used. This allows launch-role constraints to be
                *                   account-agnostic so the administrator can create fewer resources per shared account.</p>
                *                <note>
                *                   <p>The given role name must exist in the account used to create the launch constraint and the account of the user who launches a product with this launch constraint.</p>
                *                </note>
                *                <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p>
                *                <p>You also cannot have more than one <code>LAUNCH</code> constraint on a product and portfolio.</p>
                *             </dd>
                *             <dt>NOTIFICATION</dt>
                *             <dd>
                *                <p>Specify the <code>NotificationArns</code> property as follows:</p>
                *                <p>
                *                   <code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code>
                *                </p>
                *             </dd>
                *             <dt>RESOURCE_UPDATE</dt>
                *             <dd>
                *                <p>Specify the <code>TagUpdatesOnProvisionedProduct</code> property as follows:</p>
                *                <p>
                *                   <code>{"Version":"2.0","Properties":{"TagUpdateOnProvisionedProduct":"String"}}</code>
                *                </p>
                *                <p>The <code>TagUpdatesOnProvisionedProduct</code> property accepts a string value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p>
                *             </dd>
                *             <dt>STACKSET</dt>
                *             <dd>
                *                <p>Specify the <code>Parameters</code> property as follows:</p>
                *                <p>
                *                   <code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList": [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code>
                *                </p>
                *                <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p>
                *                <p>You also cannot have more than one <code>STACKSET</code> constraint on a product and portfolio.</p>
                *                <p>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation stack set.</p>
                *             </dd>
                *             <dt>TEMPLATE</dt>
                *             <dd>
                *                <p>Specify the <code>Rules</code> property. For more information, see
                *                   <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p>
                *             </dd>
                *          </dl>
                */
            Parameters?: string;
    }
    export namespace UpdateConstraintInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateConstraintInput) => any;
    }
    export interface UpdateConstraintOutput {
            /**
                * <p>Information about the constraint.</p>
                */
            ConstraintDetail?: ConstraintDetail;
            /**
                * <p>The constraint parameters.</p>
                */
            ConstraintParameters?: string;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace UpdateConstraintOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateConstraintOutput) => any;
    }
    export interface UpdatePortfolioInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The portfolio identifier.</p>
                */
            Id: string | undefined;
            /**
                * <p>The name to use for display purposes.</p>
                */
            DisplayName?: string;
            /**
                * <p>The updated description of the portfolio.</p>
                */
            Description?: string;
            /**
                * <p>The updated name of the portfolio provider.</p>
                */
            ProviderName?: string;
            /**
                * <p>The tags to add.</p>
                */
            AddTags?: Tag[];
            /**
                * <p>The tags to remove.</p>
                */
            RemoveTags?: string[];
    }
    export namespace UpdatePortfolioInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortfolioInput) => any;
    }
    export interface UpdatePortfolioOutput {
            /**
                * <p>Information about the portfolio.</p>
                */
            PortfolioDetail?: PortfolioDetail;
            /**
                * <p>Information about the tags associated with the portfolio.</p>
                */
            Tags?: Tag[];
    }
    export namespace UpdatePortfolioOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortfolioOutput) => any;
    }
    export interface UpdatePortfolioShareInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The unique identifier of the portfolio for which the share will be updated.</p>
                */
            PortfolioId: string | undefined;
            /**
                * <p>The AWS Account Id of the recipient account. This field is required when updating an external account to account type share.</p>
                */
            AccountId?: string;
            /**
                * <p>Information about the organization node.</p>
                */
            OrganizationNode?: OrganizationNode;
            /**
                * <p>A flag to enable or disable TagOptions sharing for the portfolio share. If this field is not provided, the current state of TagOptions sharing on the portfolio share will not be modified.</p>
                */
            ShareTagOptions?: boolean;
    }
    export namespace UpdatePortfolioShareInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortfolioShareInput) => any;
    }
    export interface UpdatePortfolioShareOutput {
            /**
                * <p>The token that tracks the status of the <code>UpdatePortfolioShare</code> operation for external account to account or  organizational type sharing.</p>
                */
            PortfolioShareToken?: string;
            /**
                * <p>The status of <code>UpdatePortfolioShare</code> operation.
                *          You can also obtain the operation status using <code>DescribePortfolioShareStatus</code> API.
                *       </p>
                */
            Status?: ShareStatus | string;
    }
    export namespace UpdatePortfolioShareOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortfolioShareOutput) => any;
    }
    export interface UpdateProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            Id: string | undefined;
            /**
                * <p>The updated product name.</p>
                */
            Name?: string;
            /**
                * <p>The updated owner of the product.</p>
                */
            Owner?: string;
            /**
                * <p>The updated description of the product.</p>
                */
            Description?: string;
            /**
                * <p>The updated distributor of the product.</p>
                */
            Distributor?: string;
            /**
                * <p>The updated support description for the product.</p>
                */
            SupportDescription?: string;
            /**
                * <p>The updated support email for the product.</p>
                */
            SupportEmail?: string;
            /**
                * <p>The updated support URL for the product.</p>
                */
            SupportUrl?: string;
            /**
                * <p>The tags to add to the product.</p>
                */
            AddTags?: Tag[];
            /**
                * <p>The tags to remove from the product.</p>
                */
            RemoveTags?: string[];
    }
    export namespace UpdateProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProductInput) => any;
    }
    export interface UpdateProductOutput {
            /**
                * <p>Information about the product view.</p>
                */
            ProductViewDetail?: ProductViewDetail;
            /**
                * <p>Information about the tags associated with the product.</p>
                */
            Tags?: Tag[];
    }
    export namespace UpdateProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProductOutput) => any;
    }
    export type StackSetOperationType = "CREATE" | "DELETE" | "UPDATE";
    /**
        * <p>The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.</p>
        */
    export interface UpdateProvisioningPreferences {
            /**
                * <p>One or more AWS accounts that will have access to the provisioned product.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p>
                *          <p>If no values are specified, the default value is all accounts from the <code>STACKSET</code> constraint.</p>
                */
            StackSetAccounts?: string[];
            /**
                * <p>One or more AWS Regions where the provisioned product will be available.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p>
                *          <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>
                */
            StackSetRegions?: string[];
            /**
                * <p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>
                *          <p>The default value is <code>0</code> if no value is specified.</p>
                */
            StackSetFailureToleranceCount?: number;
            /**
                * <p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions.</p>
                *          <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>
                */
            StackSetFailureTolerancePercentage?: number;
            /**
                * <p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p>
                *          <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>
                */
            StackSetMaxConcurrencyCount?: number;
            /**
                * <p>The maximum percentage of accounts in which to perform this operation at one time.</p>
                *          <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p>
                *          <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>
                */
            StackSetMaxConcurrencyPercentage?: number;
            /**
                * <p>Determines what action AWS Service Catalog performs to a stack set or a stack instance represented by the provisioned product. The default value is <code>UPDATE</code> if nothing is specified.</p>
                *          <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
                *          <dl>
                *             <dt>CREATE</dt>
                *             <dd>
                *                <p>Creates a new stack instance in the stack set represented by the provisioned product. In this case, only new stack instances are created based on accounts and regions; if new ProductId or ProvisioningArtifactID are passed, they will be ignored.</p>
                *             </dd>
                *             <dt>UPDATE</dt>
                *             <dd>
                *                <p>Updates the stack set represented by the provisioned product and also its stack instances.</p>
                *             </dd>
                *             <dt>DELETE</dt>
                *             <dd>
                *                <p>Deletes a stack instance in the stack set represented by the provisioned product.</p>
                *             </dd>
                *          </dl>
                */
            StackSetOperationType?: StackSetOperationType | string;
    }
    export namespace UpdateProvisioningPreferences {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningPreferences) => any;
    }
    export interface UpdateProvisionedProductInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The name of the provisioned product. You cannot specify both
                *          <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.</p>
                */
            ProvisionedProductName?: string;
            /**
                * <p>The identifier of the provisioned product. You must provide the name or ID, but not both.</p>
                */
            ProvisionedProductId?: string;
            /**
                * <p>The identifier of the product. You must provide the name or ID, but not both.</p>
                */
            ProductId?: string;
            /**
                * <p>The name of the product. You must provide the name or ID, but not both.</p>
                */
            ProductName?: string;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId?: string;
            /**
                * <p>The name of the provisioning artifact. You must provide the name or ID, but not both.</p>
                */
            ProvisioningArtifactName?: string;
            /**
                * <p>The path identifier. This value is optional if the product
                *          has a default path, and required if the product has more than one path. You must provide the name or ID, but not both.</p>
                */
            PathId?: string;
            /**
                * <p>The name of the path. You must provide the name or ID, but not both.</p>
                */
            PathName?: string;
            /**
                * <p>The new parameters.</p>
                */
            ProvisioningParameters?: UpdateProvisioningParameter[];
            /**
                * <p>An object that contains information about the provisioning preferences for a stack set.</p>
                */
            ProvisioningPreferences?: UpdateProvisioningPreferences;
            /**
                * <p>One or more tags. Requires the product to have <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The idempotency token that uniquely identifies the provisioning update request.</p>
                */
            UpdateToken?: string;
    }
    export namespace UpdateProvisionedProductInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisionedProductInput) => any;
    }
    export interface UpdateProvisionedProductOutput {
            /**
                * <p>Information about the result of the request.</p>
                */
            RecordDetail?: RecordDetail;
    }
    export namespace UpdateProvisionedProductOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisionedProductOutput) => any;
    }
    export enum PropertyKey {
            LaunchRole = "LAUNCH_ROLE",
            Owner = "OWNER"
    }
    export interface UpdateProvisionedProductPropertiesInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The identifier of the provisioned product.</p>
                */
            ProvisionedProductId: string | undefined;
            /**
                * <p>A map that contains the provisioned product properties to be updated.</p>
                *          <p>The <code>LAUNCH_ROLE</code> key accepts role ARNs. This key allows an
                *          administrator to call <code>UpdateProvisionedProductProperties</code> to update the launch
                *          role that is associated with a provisioned product. This role is used when an end user
                *          calls a provisioning operation such as <code>UpdateProvisionedProduct</code>,
                *             <code>TerminateProvisionedProduct</code>, or
                *             <code>ExecuteProvisionedProductServiceAction</code>. Only a role ARN is valid. A user ARN is invalid. </p>
                *
                *          <p>The <code>OWNER</code> key accepts user ARNs and role ARNs. The owner is the user
                *          that has permission to see, update, terminate, and execute service actions in the
                *          provisioned product.</p>
                *          <p>The administrator can change the owner of a provisioned product to another IAM user within the same account. Both end user owners and
                *          administrators can see ownership history of the provisioned product using the <code>ListRecordHistory</code> API. The new owner can
                *       describe all past records for the provisioned product using the <code>DescribeRecord</code> API. The previous owner can no longer use <code>DescribeRecord</code>,
                *       but can still see the product's history from when he was an owner using <code>ListRecordHistory</code>.</p>
                *          <p>If a provisioned product ownership is assigned to an end user, they can see and perform any action through the API or
                *          Service Catalog console such as update, terminate, and execute service actions.
                *          If an end user provisions a product and the owner is updated to someone else, they will no longer be able to see or perform any actions through
                *          API or the Service Catalog console on that provisioned product.</p>
                */
            ProvisionedProductProperties: Record<string, string> | undefined;
            /**
                * <p>The idempotency token that uniquely identifies the provisioning product update request.</p>
                */
            IdempotencyToken?: string;
    }
    export namespace UpdateProvisionedProductPropertiesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisionedProductPropertiesInput) => any;
    }
    export interface UpdateProvisionedProductPropertiesOutput {
            /**
                * <p>The provisioned product identifier.</p>
                */
            ProvisionedProductId?: string;
            /**
                * <p>A map that contains the properties updated.</p>
                */
            ProvisionedProductProperties?: Record<string, string>;
            /**
                * <p>The identifier of the record.</p>
                */
            RecordId?: string;
            /**
                * <p>The status of the request.</p>
                */
            Status?: RecordStatus | string;
    }
    export namespace UpdateProvisionedProductPropertiesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisionedProductPropertiesOutput) => any;
    }
    export interface UpdateProvisioningArtifactInput {
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
            /**
                * <p>The product identifier.</p>
                */
            ProductId: string | undefined;
            /**
                * <p>The identifier of the provisioning artifact.</p>
                */
            ProvisioningArtifactId: string | undefined;
            /**
                * <p>The updated name of the provisioning artifact.</p>
                */
            Name?: string;
            /**
                * <p>The updated description of the provisioning artifact.</p>
                */
            Description?: string;
            /**
                * <p>Indicates whether the product version is active.</p>
                *          <p>Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact.</p>
                */
            Active?: boolean;
            /**
                * <p>Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.</p>
                *          <p>The <code>DEFAULT</code> value indicates that the product version is active.</p>
                *          <p>The administrator can set the guidance to <code>DEPRECATED</code> to inform
                *           users that the product version is deprecated. Users are able to make updates to a provisioned product
                *           of a deprecated version but cannot launch new provisioned products using a deprecated version.</p>
                */
            Guidance?: ProvisioningArtifactGuidance | string;
    }
    export namespace UpdateProvisioningArtifactInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningArtifactInput) => any;
    }
    export interface UpdateProvisioningArtifactOutput {
            /**
                * <p>Information about the provisioning artifact.</p>
                */
            ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
            /**
                * <p>The URL of the CloudFormation template in Amazon S3.</p>
                */
            Info?: Record<string, string>;
            /**
                * <p>The status of the current request.</p>
                */
            Status?: Status | string;
    }
    export namespace UpdateProvisioningArtifactOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProvisioningArtifactOutput) => any;
    }
    export interface UpdateServiceActionInput {
            /**
                * <p>The self-service action identifier.</p>
                */
            Id: string | undefined;
            /**
                * <p>The self-service action name.</p>
                */
            Name?: string;
            /**
                * <p>A map that defines the self-service action.</p>
                */
            Definition?: Record<string, string>;
            /**
                * <p>The self-service action description.</p>
                */
            Description?: string;
            /**
                * <p>The language code.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>en</code> - English (default)</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>jp</code> - Japanese</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>zh</code> - Chinese</p>
                *             </li>
                *          </ul>
                */
            AcceptLanguage?: string;
    }
    export namespace UpdateServiceActionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceActionInput) => any;
    }
    export interface UpdateServiceActionOutput {
            /**
                * <p>Detailed information about the self-service action.</p>
                */
            ServiceActionDetail?: ServiceActionDetail;
    }
    export namespace UpdateServiceActionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceActionOutput) => any;
    }
    export interface UpdateTagOptionInput {
            /**
                * <p>The TagOption identifier.</p>
                */
            Id: string | undefined;
            /**
                * <p>The updated value.</p>
                */
            Value?: string;
            /**
                * <p>The updated active state.</p>
                */
            Active?: boolean;
    }
    export namespace UpdateTagOptionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTagOptionInput) => any;
    }
    export interface UpdateTagOptionOutput {
            /**
                * <p>Information about the TagOption.</p>
                */
            TagOptionDetail?: TagOptionDetail;
    }
    export namespace UpdateTagOptionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTagOptionOutput) => any;
    }
}

declare module '@aws-sdk/client-service-catalog/node_modules/@aws-sdk/client-service-catalog/dist-types/models/ServiceCatalogServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from ServiceCatalog service.
        */
    export class ServiceCatalogServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

