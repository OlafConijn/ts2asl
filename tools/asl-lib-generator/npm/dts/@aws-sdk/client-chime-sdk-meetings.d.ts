// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-chime-sdk-meetings' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClient } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchCreateAttendeeCommand";
    import { BatchUpdateAttendeeCapabilitiesExceptCommandInput, BatchUpdateAttendeeCapabilitiesExceptCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchUpdateAttendeeCapabilitiesExceptCommand";
    import { CreateAttendeeCommandInput, CreateAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateAttendeeCommand";
    import { CreateMeetingCommandInput, CreateMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingCommand";
    import { CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingWithAttendeesCommand";
    import { DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteAttendeeCommand";
    import { DeleteMeetingCommandInput, DeleteMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteMeetingCommand";
    import { GetAttendeeCommandInput, GetAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetAttendeeCommand";
    import { GetMeetingCommandInput, GetMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetMeetingCommand";
    import { ListAttendeesCommandInput, ListAttendeesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/ListAttendeesCommand";
    import { StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StartMeetingTranscriptionCommand";
    import { StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StopMeetingTranscriptionCommand";
    import { UpdateAttendeeCapabilitiesCommandInput, UpdateAttendeeCapabilitiesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/UpdateAttendeeCapabilitiesCommand";
    /**
        * <p>The Amazon Chime SDK meetings APIs in this section allow software developers to create Amazon Chime SDK meetings, set the AWS Regions for meetings, create and manage users, and send and
        *             receive meeting notifications. For more information about the meeting APIs, see <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Meetings.html">Amazon Chime SDK meetings</a>.</p>
        */
    export class ChimeSDKMeetings extends ChimeSDKMeetingsClient {
            /**
                * <p>Creates up to 100 attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>
                */
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<BatchCreateAttendeeCommandOutput>;
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, cb: (err: any, data?: BatchCreateAttendeeCommandOutput) => void): void;
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchCreateAttendeeCommandOutput) => void): void;
            /**
                * <p>Updates <code>AttendeeCapabilities</code> except the capabilities listed in an <code>ExcludedAttendeeIds</code> table.</p>
                *
                *         <note>
                *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
                *             .</p>
                *          </note>
                *
                *         <p>When using capabilities, be aware of these corner cases:</p>
                *         <ul>
                *             <li>
                *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
                *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
                *                     to receive and you set your <code>content</code> capability to not receive.</p>
                *             </li>
                *             <li>
                *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
                *             </li>
                *             <li>
                *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
                *             </li>
                *          </ul>
                */
            batchUpdateAttendeeCapabilitiesExcept(args: BatchUpdateAttendeeCapabilitiesExceptCommandInput, options?: __HttpHandlerOptions): Promise<BatchUpdateAttendeeCapabilitiesExceptCommandOutput>;
            batchUpdateAttendeeCapabilitiesExcept(args: BatchUpdateAttendeeCapabilitiesExceptCommandInput, cb: (err: any, data?: BatchUpdateAttendeeCapabilitiesExceptCommandOutput) => void): void;
            batchUpdateAttendeeCapabilitiesExcept(args: BatchUpdateAttendeeCapabilitiesExceptCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchUpdateAttendeeCapabilitiesExceptCommandOutput) => void): void;
            /**
                * <p>
                *            Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *            in the
                *            <i>Amazon Chime Developer Guide</i>.
                *        </p>
                */
            createAttendee(args: CreateAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<CreateAttendeeCommandOutput>;
            createAttendee(args: CreateAttendeeCommandInput, cb: (err: any, data?: CreateAttendeeCommandOutput) => void): void;
            createAttendee(args: CreateAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAttendeeCommandOutput) => void): void;
            /**
                * <p>Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
                *            in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *            in the
                *            <i>Amazon Chime Developer Guide</i>.
                *        </p>
                */
            createMeeting(args: CreateMeetingCommandInput, options?: __HttpHandlerOptions): Promise<CreateMeetingCommandOutput>;
            createMeeting(args: CreateMeetingCommandInput, cb: (err: any, data?: CreateMeetingCommandOutput) => void): void;
            createMeeting(args: CreateMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMeetingCommandOutput) => void): void;
            /**
                * <p>
                *            Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
                *            in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *            in the <i>Amazon Chime Developer Guide</i>.
                *        </p>
                */
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, options?: __HttpHandlerOptions): Promise<CreateMeetingWithAttendeesCommandOutput>;
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, cb: (err: any, data?: CreateMeetingWithAttendeesCommandOutput) => void): void;
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMeetingWithAttendeesCommandOutput) => void): void;
            /**
                * <p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their
                *            <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *            in the <i>Amazon Chime Developer Guide</i>.</p>
                */
            deleteAttendee(args: DeleteAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAttendeeCommandOutput>;
            deleteAttendee(args: DeleteAttendeeCommandInput, cb: (err: any, data?: DeleteAttendeeCommandOutput) => void): void;
            deleteAttendee(args: DeleteAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAttendeeCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from
                *            joining the meeting. For more information about the Amazon Chime SDK, see
                *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the
                *            <i>Amazon Chime Developer Guide</i>.</p>
                */
            deleteMeeting(args: DeleteMeetingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMeetingCommandOutput>;
            deleteMeeting(args: DeleteMeetingCommandInput, cb: (err: any, data?: DeleteMeetingCommandOutput) => void): void;
            deleteMeeting(args: DeleteMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMeetingCommandOutput) => void): void;
            /**
                * <p>
                *             Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see
                *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *             in the <i>Amazon Chime Developer Guide</i>.
                *         </p>
                */
            getAttendee(args: GetAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<GetAttendeeCommandOutput>;
            getAttendee(args: GetAttendeeCommandInput, cb: (err: any, data?: GetAttendeeCommandOutput) => void): void;
            getAttendee(args: GetAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAttendeeCommandOutput) => void): void;
            /**
                * <p>Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see
                *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *             in the <i>Amazon Chime Developer Guide</i>.</p>
                */
            getMeeting(args: GetMeetingCommandInput, options?: __HttpHandlerOptions): Promise<GetMeetingCommandOutput>;
            getMeeting(args: GetMeetingCommandInput, cb: (err: any, data?: GetMeetingCommandOutput) => void): void;
            getMeeting(args: GetMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMeetingCommandOutput) => void): void;
            /**
                * <p>
                *             Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                *             in the <i>Amazon Chime Developer Guide</i>.
                *         </p>
                */
            listAttendees(args: ListAttendeesCommandInput, options?: __HttpHandlerOptions): Promise<ListAttendeesCommandOutput>;
            listAttendees(args: ListAttendeesCommandInput, cb: (err: any, data?: ListAttendeesCommandOutput) => void): void;
            listAttendees(args: ListAttendeesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAttendeesCommandOutput) => void): void;
            /**
                * <p>Starts transcription for the specified <code>meetingId</code>.</p>
                */
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, options?: __HttpHandlerOptions): Promise<StartMeetingTranscriptionCommandOutput>;
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, cb: (err: any, data?: StartMeetingTranscriptionCommandOutput) => void): void;
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartMeetingTranscriptionCommandOutput) => void): void;
            /**
                * <p>Stops transcription for the specified <code>meetingId</code>.</p>
                */
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, options?: __HttpHandlerOptions): Promise<StopMeetingTranscriptionCommandOutput>;
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, cb: (err: any, data?: StopMeetingTranscriptionCommandOutput) => void): void;
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopMeetingTranscriptionCommandOutput) => void): void;
            /**
                * <p>The capabilties that you want to update.</p>
                *         <note>
                *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
                *             .</p>
                *          </note>
                *
                *         <p>When using capabilities, be aware of these corner cases:</p>
                *         <ul>
                *             <li>
                *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
                *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
                *                     to receive and you set your <code>content</code> capability to not receive.</p>
                *             </li>
                *             <li>
                *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
                *             </li>
                *             <li>
                *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
                *             </li>
                *          </ul>
                */
            updateAttendeeCapabilities(args: UpdateAttendeeCapabilitiesCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAttendeeCapabilitiesCommandOutput>;
            updateAttendeeCapabilities(args: UpdateAttendeeCapabilitiesCommandInput, cb: (err: any, data?: UpdateAttendeeCapabilitiesCommandOutput) => void): void;
            updateAttendeeCapabilities(args: UpdateAttendeeCapabilitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAttendeeCapabilitiesCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchCreateAttendeeCommand";
    import { BatchUpdateAttendeeCapabilitiesExceptCommandInput, BatchUpdateAttendeeCapabilitiesExceptCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchUpdateAttendeeCapabilitiesExceptCommand";
    import { CreateAttendeeCommandInput, CreateAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateAttendeeCommand";
    import { CreateMeetingCommandInput, CreateMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingCommand";
    import { CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingWithAttendeesCommand";
    import { DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteAttendeeCommand";
    import { DeleteMeetingCommandInput, DeleteMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteMeetingCommand";
    import { GetAttendeeCommandInput, GetAttendeeCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetAttendeeCommand";
    import { GetMeetingCommandInput, GetMeetingCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetMeetingCommand";
    import { ListAttendeesCommandInput, ListAttendeesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/ListAttendeesCommand";
    import { StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StartMeetingTranscriptionCommand";
    import { StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StopMeetingTranscriptionCommand";
    import { UpdateAttendeeCapabilitiesCommandInput, UpdateAttendeeCapabilitiesCommandOutput } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/UpdateAttendeeCapabilitiesCommand";
    export type ServiceInputTypes = BatchCreateAttendeeCommandInput | BatchUpdateAttendeeCapabilitiesExceptCommandInput | CreateAttendeeCommandInput | CreateMeetingCommandInput | CreateMeetingWithAttendeesCommandInput | DeleteAttendeeCommandInput | DeleteMeetingCommandInput | GetAttendeeCommandInput | GetMeetingCommandInput | ListAttendeesCommandInput | StartMeetingTranscriptionCommandInput | StopMeetingTranscriptionCommandInput | UpdateAttendeeCapabilitiesCommandInput;
    export type ServiceOutputTypes = BatchCreateAttendeeCommandOutput | BatchUpdateAttendeeCapabilitiesExceptCommandOutput | CreateAttendeeCommandOutput | CreateMeetingCommandOutput | CreateMeetingWithAttendeesCommandOutput | DeleteAttendeeCommandOutput | DeleteMeetingCommandOutput | GetAttendeeCommandOutput | GetMeetingCommandOutput | ListAttendeesCommandOutput | StartMeetingTranscriptionCommandOutput | StopMeetingTranscriptionCommandOutput | UpdateAttendeeCapabilitiesCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ChimeSDKMeetingsClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ChimeSDKMeetingsClient class constructor that set the region, credentials and other options.
        */
    export interface ChimeSDKMeetingsClientConfig extends ChimeSDKMeetingsClientConfigType {
    }
    type ChimeSDKMeetingsClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ChimeSDKMeetingsClient class. This is resolved and normalized from the {@link ChimeSDKMeetingsClientConfig | constructor configuration interface}.
        */
    export interface ChimeSDKMeetingsClientResolvedConfig extends ChimeSDKMeetingsClientResolvedConfigType {
    }
    /**
        * <p>The Amazon Chime SDK meetings APIs in this section allow software developers to create Amazon Chime SDK meetings, set the AWS Regions for meetings, create and manage users, and send and
        *             receive meeting notifications. For more information about the meeting APIs, see <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Meetings.html">Amazon Chime SDK meetings</a>.</p>
        */
    export class ChimeSDKMeetingsClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ChimeSDKMeetingsClientResolvedConfig> {
            /**
                * The resolved configuration of ChimeSDKMeetingsClient class. This is resolved and normalized from the {@link ChimeSDKMeetingsClientConfig | constructor configuration interface}.
                */
            readonly config: ChimeSDKMeetingsClientResolvedConfig;
            constructor(configuration: ChimeSDKMeetingsClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchCreateAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { BatchCreateAttendeeRequest, BatchCreateAttendeeResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface BatchCreateAttendeeCommandInput extends BatchCreateAttendeeRequest {
    }
    export interface BatchCreateAttendeeCommandOutput extends BatchCreateAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>Creates up to 100 attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, BatchCreateAttendeeCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, BatchCreateAttendeeCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new BatchCreateAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchCreateAttendeeCommandInput} for command's `input` shape.
        * @see {@link BatchCreateAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class BatchCreateAttendeeCommand extends $Command<BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: BatchCreateAttendeeCommandInput;
            constructor(input: BatchCreateAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/BatchUpdateAttendeeCapabilitiesExceptCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { BatchUpdateAttendeeCapabilitiesExceptRequest } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface BatchUpdateAttendeeCapabilitiesExceptCommandInput extends BatchUpdateAttendeeCapabilitiesExceptRequest {
    }
    export interface BatchUpdateAttendeeCapabilitiesExceptCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates <code>AttendeeCapabilities</code> except the capabilities listed in an <code>ExcludedAttendeeIds</code> table.</p>
        *
        *         <note>
        *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
        *             .</p>
        *          </note>
        *
        *         <p>When using capabilities, be aware of these corner cases:</p>
        *         <ul>
        *             <li>
        *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
        *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
        *                     to receive and you set your <code>content</code> capability to not receive.</p>
        *             </li>
        *             <li>
        *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
        *             </li>
        *             <li>
        *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, BatchUpdateAttendeeCapabilitiesExceptCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, BatchUpdateAttendeeCapabilitiesExceptCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new BatchUpdateAttendeeCapabilitiesExceptCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchUpdateAttendeeCapabilitiesExceptCommandInput} for command's `input` shape.
        * @see {@link BatchUpdateAttendeeCapabilitiesExceptCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class BatchUpdateAttendeeCapabilitiesExceptCommand extends $Command<BatchUpdateAttendeeCapabilitiesExceptCommandInput, BatchUpdateAttendeeCapabilitiesExceptCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: BatchUpdateAttendeeCapabilitiesExceptCommandInput;
            constructor(input: BatchUpdateAttendeeCapabilitiesExceptCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchUpdateAttendeeCapabilitiesExceptCommandInput, BatchUpdateAttendeeCapabilitiesExceptCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { CreateAttendeeRequest, CreateAttendeeResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface CreateAttendeeCommandInput extends CreateAttendeeRequest {
    }
    export interface CreateAttendeeCommandOutput extends CreateAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>
        *            Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *            in the
        *            <i>Amazon Chime Developer Guide</i>.
        *        </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, CreateAttendeeCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, CreateAttendeeCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new CreateAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAttendeeCommandInput} for command's `input` shape.
        * @see {@link CreateAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class CreateAttendeeCommand extends $Command<CreateAttendeeCommandInput, CreateAttendeeCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: CreateAttendeeCommandInput;
            constructor(input: CreateAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAttendeeCommandInput, CreateAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { CreateMeetingRequest, CreateMeetingResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface CreateMeetingCommandInput extends CreateMeetingRequest {
    }
    export interface CreateMeetingCommandOutput extends CreateMeetingResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
        *            in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *            in the
        *            <i>Amazon Chime Developer Guide</i>.
        *        </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, CreateMeetingCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, CreateMeetingCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new CreateMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMeetingCommandInput} for command's `input` shape.
        * @see {@link CreateMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class CreateMeetingCommand extends $Command<CreateMeetingCommandInput, CreateMeetingCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: CreateMeetingCommandInput;
            constructor(input: CreateMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMeetingCommandInput, CreateMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/CreateMeetingWithAttendeesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { CreateMeetingWithAttendeesRequest, CreateMeetingWithAttendeesResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface CreateMeetingWithAttendeesCommandInput extends CreateMeetingWithAttendeesRequest {
    }
    export interface CreateMeetingWithAttendeesCommandOutput extends CreateMeetingWithAttendeesResponse, __MetadataBearer {
    }
    /**
        * <p>
        *            Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
        *            in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *            in the <i>Amazon Chime Developer Guide</i>.
        *        </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, CreateMeetingWithAttendeesCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, CreateMeetingWithAttendeesCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new CreateMeetingWithAttendeesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMeetingWithAttendeesCommandInput} for command's `input` shape.
        * @see {@link CreateMeetingWithAttendeesCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class CreateMeetingWithAttendeesCommand extends $Command<CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: CreateMeetingWithAttendeesCommandInput;
            constructor(input: CreateMeetingWithAttendeesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { DeleteAttendeeRequest } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface DeleteAttendeeCommandInput extends DeleteAttendeeRequest {
    }
    export interface DeleteAttendeeCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their
        *            <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *            in the <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, DeleteAttendeeCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, DeleteAttendeeCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new DeleteAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAttendeeCommandInput} for command's `input` shape.
        * @see {@link DeleteAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class DeleteAttendeeCommand extends $Command<DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: DeleteAttendeeCommandInput;
            constructor(input: DeleteAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/DeleteMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { DeleteMeetingRequest } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface DeleteMeetingCommandInput extends DeleteMeetingRequest {
    }
    export interface DeleteMeetingCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from
        *            joining the meeting. For more information about the Amazon Chime SDK, see
        *            <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the
        *            <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, DeleteMeetingCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, DeleteMeetingCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new DeleteMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMeetingCommandInput} for command's `input` shape.
        * @see {@link DeleteMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class DeleteMeetingCommand extends $Command<DeleteMeetingCommandInput, DeleteMeetingCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: DeleteMeetingCommandInput;
            constructor(input: DeleteMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMeetingCommandInput, DeleteMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { GetAttendeeRequest, GetAttendeeResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface GetAttendeeCommandInput extends GetAttendeeRequest {
    }
    export interface GetAttendeeCommandOutput extends GetAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see
        *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *             in the <i>Amazon Chime Developer Guide</i>.
        *         </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, GetAttendeeCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, GetAttendeeCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new GetAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAttendeeCommandInput} for command's `input` shape.
        * @see {@link GetAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class GetAttendeeCommand extends $Command<GetAttendeeCommandInput, GetAttendeeCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: GetAttendeeCommandInput;
            constructor(input: GetAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAttendeeCommandInput, GetAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/GetMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { GetMeetingRequest, GetMeetingResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface GetMeetingCommandInput extends GetMeetingRequest {
    }
    export interface GetMeetingCommandOutput extends GetMeetingResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see
        *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *             in the <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, GetMeetingCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, GetMeetingCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new GetMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMeetingCommandInput} for command's `input` shape.
        * @see {@link GetMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class GetMeetingCommand extends $Command<GetMeetingCommandInput, GetMeetingCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: GetMeetingCommandInput;
            constructor(input: GetMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMeetingCommandInput, GetMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/ListAttendeesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { ListAttendeesRequest, ListAttendeesResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface ListAttendeesCommandInput extends ListAttendeesRequest {
    }
    export interface ListAttendeesCommandOutput extends ListAttendeesResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        *             <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        *             in the <i>Amazon Chime Developer Guide</i>.
        *         </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, ListAttendeesCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, ListAttendeesCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new ListAttendeesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAttendeesCommandInput} for command's `input` shape.
        * @see {@link ListAttendeesCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class ListAttendeesCommand extends $Command<ListAttendeesCommandInput, ListAttendeesCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: ListAttendeesCommandInput;
            constructor(input: ListAttendeesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAttendeesCommandInput, ListAttendeesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StartMeetingTranscriptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { StartMeetingTranscriptionRequest } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface StartMeetingTranscriptionCommandInput extends StartMeetingTranscriptionRequest {
    }
    export interface StartMeetingTranscriptionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Starts transcription for the specified <code>meetingId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, StartMeetingTranscriptionCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, StartMeetingTranscriptionCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new StartMeetingTranscriptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartMeetingTranscriptionCommandInput} for command's `input` shape.
        * @see {@link StartMeetingTranscriptionCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class StartMeetingTranscriptionCommand extends $Command<StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: StartMeetingTranscriptionCommandInput;
            constructor(input: StartMeetingTranscriptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/StopMeetingTranscriptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { StopMeetingTranscriptionRequest } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface StopMeetingTranscriptionCommandInput extends StopMeetingTranscriptionRequest {
    }
    export interface StopMeetingTranscriptionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Stops transcription for the specified <code>meetingId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, StopMeetingTranscriptionCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, StopMeetingTranscriptionCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new StopMeetingTranscriptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopMeetingTranscriptionCommandInput} for command's `input` shape.
        * @see {@link StopMeetingTranscriptionCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class StopMeetingTranscriptionCommand extends $Command<StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: StopMeetingTranscriptionCommandInput;
            constructor(input: StopMeetingTranscriptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/commands/UpdateAttendeeCapabilitiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeSDKMeetingsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/ChimeSDKMeetingsClient";
    import { UpdateAttendeeCapabilitiesRequest, UpdateAttendeeCapabilitiesResponse } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0";
    export interface UpdateAttendeeCapabilitiesCommandInput extends UpdateAttendeeCapabilitiesRequest {
    }
    export interface UpdateAttendeeCapabilitiesCommandOutput extends UpdateAttendeeCapabilitiesResponse, __MetadataBearer {
    }
    /**
        * <p>The capabilties that you want to update.</p>
        *         <note>
        *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
        *             .</p>
        *          </note>
        *
        *         <p>When using capabilities, be aware of these corner cases:</p>
        *         <ul>
        *             <li>
        *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
        *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
        *                     to receive and you set your <code>content</code> capability to not receive.</p>
        *             </li>
        *             <li>
        *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
        *             </li>
        *             <li>
        *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeSDKMeetingsClient, UpdateAttendeeCapabilitiesCommand } from "@aws-sdk/client-chime-sdk-meetings"; // ES Modules import
        * // const { ChimeSDKMeetingsClient, UpdateAttendeeCapabilitiesCommand } = require("@aws-sdk/client-chime-sdk-meetings"); // CommonJS import
        * const client = new ChimeSDKMeetingsClient(config);
        * const command = new UpdateAttendeeCapabilitiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAttendeeCapabilitiesCommandInput} for command's `input` shape.
        * @see {@link UpdateAttendeeCapabilitiesCommandOutput} for command's `response` shape.
        * @see {@link ChimeSDKMeetingsClientResolvedConfig | config} for ChimeSDKMeetingsClient's `config` shape.
        *
        */
    export class UpdateAttendeeCapabilitiesCommand extends $Command<UpdateAttendeeCapabilitiesCommandInput, UpdateAttendeeCapabilitiesCommandOutput, ChimeSDKMeetingsClientResolvedConfig> {
            readonly input: UpdateAttendeeCapabilitiesCommandInput;
            constructor(input: UpdateAttendeeCapabilitiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeSDKMeetingsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAttendeeCapabilitiesCommandInput, UpdateAttendeeCapabilitiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ChimeSDKMeetingsServiceException as __BaseException } from "@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/ChimeSDKMeetingsServiceException";
    export enum MediaCapabilities {
            NONE = "None",
            RECEIVE = "Receive",
            SEND = "Send",
            SEND_RECEIVE = "SendReceive"
    }
    /**
        * <p>The media capabilities of an attendee: audio, video, or content. </p>
        *         <note>
        *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
        *             .</p>
        *          </note>
        *
        *         <p>When using capabilities, be aware of these corner cases:</p>
        *         <ul>
        *             <li>
        *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
        *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
        *                     to receive and you set your <code>content</code> capability to not receive.</p>
        *             </li>
        *             <li>
        *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
        *             </li>
        *             <li>
        *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
        *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
        *             </li>
        *          </ul>
        */
    export interface AttendeeCapabilities {
            /**
                * <p>The audio capability assigned to an attendee.</p>
                */
            Audio: MediaCapabilities | string | undefined;
            /**
                * <p>The video capability assigned to an attendee.</p>
                */
            Video: MediaCapabilities | string | undefined;
            /**
                * <p>The content capability assigned to an attendee.</p>
                */
            Content: MediaCapabilities | string | undefined;
    }
    export namespace AttendeeCapabilities {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttendeeCapabilities) => any;
    }
    /**
        * <p>An Amazon Chime SDK meeting attendee. Includes a unique
        *            <code>AttendeeId</code> and <code>JoinToken</code>. The
        *            <code>JoinToken</code>
        *            allows a client to authenticate and join as the specified attendee. The
        *            <code>JoinToken</code>
        *            expires when the meeting ends, or when
        *            <a>DeleteAttendee</a>
        *            is called. After that, the attendee is unable to join the meeting.
        *        </p>
        *
        *          <p>We recommend securely transferring each <code>JoinToken</code> from your server application
        *            to the client so that no other client has access to the token except for the one
        *            authorized to represent the attendee.</p>
        */
    export interface Attendee {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId?: string;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId?: string;
            /**
                * <p>The join token used by the Amazon Chime SDK attendee.</p>
                */
            JoinToken?: string;
            /**
                * <p>The capabilities assigned to an attendee: audio, video, or content.</p>
                *         <note>
                *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
                *             .</p>
                *          </note>
                *
                *         <p>When using capabilities, be aware of these corner cases:</p>
                *         <ul>
                *             <li>
                *                 <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
                *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
                *                     to receive and you set your <code>content</code> capability to not receive.</p>
                *             </li>
                *             <li>
                *                 <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
                *             </li>
                *             <li>
                *                 <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
                *             </li>
                *          </ul>
                */
            Capabilities?: AttendeeCapabilities;
    }
    export namespace Attendee {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attendee) => any;
    }
    /**
        * <p>A structure that contains one or more attendee IDs.</p>
        */
    export interface AttendeeIdItem {
            /**
                * <p>A list of one or more attendee IDs.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace AttendeeIdItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttendeeIdItem) => any;
    }
    export enum MeetingFeatureStatus {
            AVAILABLE = "AVAILABLE",
            UNAVAILABLE = "UNAVAILABLE"
    }
    /**
        * <p>An optional category of meeting features that contains audio-specific configurations, such as operating parameters for Amazon Voice Focus. </p>
        */
    export interface AudioFeatures {
            /**
                * <p>Makes echo reduction available to clients who connect to the meeting.</p>
                */
            EchoReduction?: MeetingFeatureStatus | string;
    }
    export namespace AudioFeatures {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AudioFeatures) => any;
    }
    /**
        * <p>The input parameters don't match the service's restrictions.</p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    /**
        * <p>The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.</p>
        */
    export interface CreateAttendeeRequestItem {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId: string | undefined;
            /**
                * <p>A list of one or more capabilities.</p>
                */
            Capabilities?: AttendeeCapabilities;
    }
    export namespace CreateAttendeeRequestItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeRequestItem) => any;
    }
    export interface BatchCreateAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK ID of the meeting to which you're adding attendees.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The attendee information, including attendees' IDs and join tokens.</p>
                */
            Attendees: CreateAttendeeRequestItem[] | undefined;
    }
    export namespace BatchCreateAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateAttendeeRequest) => any;
    }
    /**
        * <p>The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.</p>
        */
    export interface CreateAttendeeError {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace CreateAttendeeError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeError) => any;
    }
    export interface BatchCreateAttendeeResponse {
            /**
                * <p>The attendee information, including attendees' IDs and join tokens.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>
                */
            Errors?: CreateAttendeeError[];
    }
    export namespace BatchCreateAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateAttendeeResponse) => any;
    }
    /**
        * <p>The client is permanently forbidden from making the request.</p>
        */
    export class ForbiddenException extends __BaseException {
            readonly name: "ForbiddenException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
    }
    /**
        * <p>The request exceeds the resource limit.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>One or more of the resources in the request does not exist in the system.</p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request ID associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    /**
        * <p>The service encountered an unexpected error.</p>
        */
    export class ServiceFailureException extends __BaseException {
            readonly name: "ServiceFailureException";
            readonly $fault: "server";
            Code?: string;
            Message?: string;
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceFailureException, __BaseException>);
    }
    /**
        * <p>The service is currently unavailable.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * <p>The number of seconds the caller should wait before retrying.</p>
                */
            RetryAfterSeconds?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>The number of customer requests exceeds the request rate limit.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>The user isn't authorized to request a resource.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    /**
        * <p>The request was well-formed but was unable to be followed due to semantic errors.</p>
        */
    export class UnprocessableEntityException extends __BaseException {
            readonly name: "UnprocessableEntityException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            /**
                * <p>The request id associated with the call responsible for the exception.</p>
                */
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnprocessableEntityException, __BaseException>);
    }
    export interface BatchUpdateAttendeeCapabilitiesExceptRequest {
            /**
                * <p>The ID of the meeting associated with the update request.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The <code>AttendeeIDs</code> that you want to exclude from one or more capabilities.</p>
                */
            ExcludedAttendeeIds: AttendeeIdItem[] | undefined;
            /**
                * <p>The capabilities (<code>audio</code>, <code>video</code>, or <code>content</code>) that you want to update.</p>
                */
            Capabilities: AttendeeCapabilities | undefined;
    }
    export namespace BatchUpdateAttendeeCapabilitiesExceptRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUpdateAttendeeCapabilitiesExceptRequest) => any;
    }
    /**
        * <p>Multiple instances of the same request have been made simultaneously.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Code?: string;
            Message?: string;
            RequestId?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export interface CreateAttendeeRequest {
            /**
                * <p>The unique ID of the meeting.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId: string | undefined;
            /**
                * <p>The capabilities (<code>audio</code>, <code>video</code>, or <code>content</code>) that you want to grant an attendee. If you don't specify capabilities, all users have send and receive capabilities on
                *             all media channels by default.</p>
                *
                *         <note>
                *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
                *             .</p>
                *          </note>
                *
                *             <p>When using capabilities, be aware of these corner cases:</p>
                *             <ul>
                *             <li>
                *                     <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
                *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
                *                     to receive and you set your <code>content</code> capability to not receive.</p>
                *                 </li>
                *             <li>
                *                     <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
                *                 </li>
                *             <li>
                *                     <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
                *                    and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
                *                 </li>
                *          </ul>
                */
            Capabilities?: AttendeeCapabilities;
    }
    export namespace CreateAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeRequest) => any;
    }
    export interface CreateAttendeeResponse {
            /**
                * <p>The attendee information, including attendee ID and join token.</p>
                */
            Attendee?: Attendee;
    }
    export namespace CreateAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeResponse) => any;
    }
    /**
        * <p>The configuration settings of the features available to a meeting.></p>
        */
    export interface MeetingFeaturesConfiguration {
            /**
                * <p>The configuration settings for the audio features available to a meeting. </p>
                */
            Audio?: AudioFeatures;
    }
    export namespace MeetingFeaturesConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MeetingFeaturesConfiguration) => any;
    }
    /**
        * <p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>
        */
    export interface NotificationsConfiguration {
            /**
                * <p>The ARN of the AWS Lambda function in the notifications configuration.</p>
                */
            LambdaFunctionArn?: string;
            /**
                * <p>The ARN of the SNS topic.</p>
                */
            SnsTopicArn?: string;
            /**
                * <p>The ARN of the SQS queue.</p>
                */
            SqsQueueArn?: string;
    }
    export namespace NotificationsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NotificationsConfiguration) => any;
    }
    export interface CreateMeetingRequest {
            /**
                * <p>The unique identifier for the client request. Use a different token for different meetings.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The Region in which to create the meeting.</p>
                *
                *          <p>
                *            Available values:
                *            <code>af-south-1</code>,
                *            <code>ap-northeast-1</code>,
                *            <code>ap-northeast-2</code>,
                *            <code>ap-south-1</code>,
                *            <code>ap-southeast-1</code>,
                *            <code>ap-southeast-2</code>,
                *            <code>ca-central-1</code>,
                *            <code>eu-central-1</code>,
                *            <code>eu-north-1</code>,
                *            <code>eu-south-1</code>,
                *            <code>eu-west-1</code>,
                *            <code>eu-west-2</code>,
                *            <code>eu-west-3</code>,
                *            <code>sa-east-1</code>,
                *            <code>us-east-1</code>,
                *            <code>us-east-2</code>,
                *            <code>us-west-1</code>,
                *            <code>us-west-2</code>.
                *        </p>
                *          <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>
                */
            MediaRegion: string | undefined;
            /**
                * <p>Reserved.</p>
                */
            MeetingHostId?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId: string | undefined;
            /**
                * <p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>
                */
            NotificationsConfiguration?: NotificationsConfiguration;
            /**
                * <p>Lists the audio and video features enabled for a meeting, such as echo reduction.</p>
                */
            MeetingFeatures?: MeetingFeaturesConfiguration;
            /**
                * <p>When specified, replicates the media from the primary meeting to the new meeting.</p>
                */
            PrimaryMeetingId?: string;
            /**
                * <p>A consistent and opaque identifier, created and maintained by the builder to represent a segment of their users.</p>
                */
            TenantIds?: string[];
    }
    export namespace CreateMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingRequest) => any;
    }
    /**
        * <p>A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.</p>
        */
    export interface MediaPlacement {
            /**
                * <p>The audio host URL.</p>
                */
            AudioHostUrl?: string;
            /**
                * <p>The audio fallback URL.</p>
                */
            AudioFallbackUrl?: string;
            /**
                * <p>The signaling URL.</p>
                */
            SignalingUrl?: string;
            /**
                * <p>The turn control URL.</p>
                */
            TurnControlUrl?: string;
            /**
                * <p>The screen data URL.</p>
                */
            ScreenDataUrl?: string;
            /**
                * <p>The screen viewing URL.</p>
                */
            ScreenViewingUrl?: string;
            /**
                * <p>The screen sharing URL.</p>
                */
            ScreenSharingUrl?: string;
            /**
                * <p>The event ingestion URL.</p>
                */
            EventIngestionUrl?: string;
    }
    export namespace MediaPlacement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MediaPlacement) => any;
    }
    /**
        * <p>A meeting created using the Amazon Chime SDK.</p>
        */
    export interface Meeting {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId?: string;
            /**
                * <p>Reserved.</p>
                */
            MeetingHostId?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId?: string;
            /**
                * <p>The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>,
                *             <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>,
                *             <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>,
                *             <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>,
                *             <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>,
                *             <code>us-west-1</code>, <code>us-west-2</code>.</p>
                *         <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>
                */
            MediaRegion?: string;
            /**
                * <p>The media placement for the meeting.</p>
                */
            MediaPlacement?: MediaPlacement;
            /**
                * <p>The features available to a meeting, such as Amazon Voice Focus.</p>
                */
            MeetingFeatures?: MeetingFeaturesConfiguration;
            /**
                * <p>When specified, replicates the media from the primary meeting to this meeting.</p>
                */
            PrimaryMeetingId?: string;
            /**
                * <p>Array of strings.</p>
                */
            TenantIds?: string[];
    }
    export namespace Meeting {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Meeting) => any;
    }
    export interface CreateMeetingResponse {
            /**
                * <p>The meeting information, including the meeting ID and
                *            <code>MediaPlacement</code>.</p>
                */
            Meeting?: Meeting;
    }
    export namespace CreateMeetingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingResponse) => any;
    }
    export interface CreateMeetingWithAttendeesRequest {
            /**
                * <p>The unique identifier for the client request. Use a different token for different meetings.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The Region in which to create the meeting.</p>
                *
                *          <p>
                *            Available values:
                *            <code>af-south-1</code>,
                *            <code>ap-northeast-1</code>,
                *            <code>ap-northeast-2</code>,
                *            <code>ap-south-1</code>,
                *            <code>ap-southeast-1</code>,
                *            <code>ap-southeast-2</code>,
                *            <code>ca-central-1</code>,
                *            <code>eu-central-1</code>,
                *            <code>eu-north-1</code>,
                *            <code>eu-south-1</code>,
                *            <code>eu-west-1</code>,
                *            <code>eu-west-2</code>,
                *            <code>eu-west-3</code>,
                *            <code>sa-east-1</code>,
                *            <code>us-east-1</code>,
                *            <code>us-east-2</code>,
                *            <code>us-west-1</code>,
                *            <code>us-west-2</code>.
                *        </p>
                *          <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>
                */
            MediaRegion: string | undefined;
            /**
                * <p>Reserved.</p>
                */
            MeetingHostId?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId: string | undefined;
            /**
                * <p>Lists the audio and video features enabled for a meeting, such as echo reduction.</p>
                */
            MeetingFeatures?: MeetingFeaturesConfiguration;
            /**
                * <p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>
                */
            NotificationsConfiguration?: NotificationsConfiguration;
            /**
                * <p>The attendee information, including attendees' IDs and join tokens.</p>
                */
            Attendees: CreateAttendeeRequestItem[] | undefined;
            /**
                * <p>When specified, replicates the media from the primary meeting to the new meeting.</p>
                */
            PrimaryMeetingId?: string;
            /**
                * <p>A consistent and opaque identifier, created and maintained by the builder to represent a segment of their users.</p>
                */
            TenantIds?: string[];
    }
    export namespace CreateMeetingWithAttendeesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingWithAttendeesRequest) => any;
    }
    export interface CreateMeetingWithAttendeesResponse {
            /**
                * <p>The meeting information, including the meeting ID and
                *            <code>MediaPlacement</code>.</p>
                */
            Meeting?: Meeting;
            /**
                * <p>The attendee information, including attendees' IDs and join tokens.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>
                */
            Errors?: CreateAttendeeError[];
    }
    export namespace CreateMeetingWithAttendeesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingWithAttendeesResponse) => any;
    }
    export interface DeleteAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace DeleteAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAttendeeRequest) => any;
    }
    export interface DeleteMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace DeleteMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMeetingRequest) => any;
    }
    export interface GetAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace GetAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttendeeRequest) => any;
    }
    export interface GetAttendeeResponse {
            /**
                * <p>The Amazon Chime SDK attendee information.</p>
                */
            Attendee?: Attendee;
    }
    export namespace GetAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttendeeResponse) => any;
    }
    export interface GetMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace GetMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMeetingRequest) => any;
    }
    export interface GetMeetingResponse {
            /**
                * <p>The Amazon Chime SDK meeting information.</p>
                */
            Meeting?: Meeting;
    }
    export namespace GetMeetingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMeetingResponse) => any;
    }
    export interface ListAttendeesRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAttendeesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeesRequest) => any;
    }
    export interface ListAttendeesResponse {
            /**
                * <p>The Amazon Chime SDK attendee information.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListAttendeesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeesResponse) => any;
    }
    export enum TranscribeMedicalContentIdentificationType {
            PHI = "PHI"
    }
    export enum TranscribeMedicalLanguageCode {
            EN_US = "en-US"
    }
    export enum TranscribeMedicalRegion {
            AP_SOUTHEAST_2 = "ap-southeast-2",
            AUTO = "auto",
            CA_CENTRAL_1 = "ca-central-1",
            EU_WEST_1 = "eu-west-1",
            US_EAST_1 = "us-east-1",
            US_EAST_2 = "us-east-2",
            US_WEST_2 = "us-west-2"
    }
    export enum TranscribeMedicalSpecialty {
            CARDIOLOGY = "CARDIOLOGY",
            NEUROLOGY = "NEUROLOGY",
            ONCOLOGY = "ONCOLOGY",
            PRIMARYCARE = "PRIMARYCARE",
            RADIOLOGY = "RADIOLOGY",
            UROLOGY = "UROLOGY"
    }
    export enum TranscribeMedicalType {
            CONVERSATION = "CONVERSATION",
            DICTATION = "DICTATION"
    }
    /**
        * <p>Settings specific to the Amazon Transcribe Medical engine.</p>
        */
    export interface EngineTranscribeMedicalSettings {
            /**
                * <p>The language code specified for the Amazon Transcribe Medical engine.</p>
                */
            LanguageCode: TranscribeMedicalLanguageCode | string | undefined;
            /**
                * <p>The specialty specified for the Amazon Transcribe Medical engine.</p>
                */
            Specialty: TranscribeMedicalSpecialty | string | undefined;
            /**
                * <p>The type of transcription.</p>
                */
            Type: TranscribeMedicalType | string | undefined;
            /**
                * <p>The name of the vocabulary passed to Amazon Transcribe Medical.</p>
                */
            VocabularyName?: string;
            /**
                * <p>The AWS Region passed to Amazon Transcribe Medical. If you don't specify a Region, Amazon Chime uses the meeting's Region. </p>
                */
            Region?: TranscribeMedicalRegion | string;
            /**
                * <p>Set this field to <code>PHI</code> to identify personal health information in the transcription output.</p>
                */
            ContentIdentificationType?: TranscribeMedicalContentIdentificationType | string;
    }
    export namespace EngineTranscribeMedicalSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EngineTranscribeMedicalSettings) => any;
    }
    export enum TranscribeContentIdentificationType {
            PII = "PII"
    }
    export enum TranscribeContentRedactionType {
            PII = "PII"
    }
    export enum TranscribeLanguageCode {
            DE_DE = "de-DE",
            EN_AU = "en-AU",
            EN_GB = "en-GB",
            EN_US = "en-US",
            ES_US = "es-US",
            FR_CA = "fr-CA",
            FR_FR = "fr-FR",
            IT_IT = "it-IT",
            JA_JP = "ja-JP",
            KO_KR = "ko-KR",
            PT_BR = "pt-BR",
            ZH_CN = "zh-CN"
    }
    export enum TranscribePartialResultsStability {
            HIGH = "high",
            LOW = "low",
            MEDIUM = "medium"
    }
    export enum TranscribeRegion {
            AP_NORTHEAST_1 = "ap-northeast-1",
            AP_NORTHEAST_2 = "ap-northeast-2",
            AP_SOUTHEAST_2 = "ap-southeast-2",
            AUTO = "auto",
            CA_CENTRAL_1 = "ca-central-1",
            EU_CENTRAL_1 = "eu-central-1",
            EU_WEST_1 = "eu-west-1",
            EU_WEST_2 = "eu-west-2",
            SA_EAST_1 = "sa-east-1",
            US_EAST_1 = "us-east-1",
            US_EAST_2 = "us-east-2",
            US_GOV_WEST_1 = "us-gov-west-1",
            US_WEST_2 = "us-west-2"
    }
    export enum TranscribeVocabularyFilterMethod {
            MASK = "mask",
            REMOVE = "remove",
            TAG = "tag"
    }
    /**
        * <p>Settings specific to the Amazon Transcribe engine.</p>
        */
    export interface EngineTranscribeSettings {
            /**
                * <p>The language code specified for the Amazon Transcribe engine.</p>
                */
            LanguageCode?: TranscribeLanguageCode | string;
            /**
                * <p>The filtering method passed to Amazon Transcribe.</p>
                */
            VocabularyFilterMethod?: TranscribeVocabularyFilterMethod | string;
            /**
                * <p>The name of the vocabulary filter passed to Amazon Transcribe.</p>
                */
            VocabularyFilterName?: string;
            /**
                * <p>The name of the vocabulary passed to Amazon Transcribe.</p>
                */
            VocabularyName?: string;
            /**
                * <p>The AWS Region passed to Amazon Transcribe. If you don't specify a Region, Amazon Chime uses the meeting's Region.</p>
                */
            Region?: TranscribeRegion | string;
            /**
                * <p>Generates partial transcription results that are less likely to change as meeting attendees speak. It does so by only allowing the last few words from the partial results to change.</p>
                */
            EnablePartialResultsStabilization?: boolean;
            /**
                * <p>The stabity level of a partial results transcription. Determines how stable you want the transcription results to be. A higher level means the transcription results are less likely to change.</p>
                */
            PartialResultsStability?: TranscribePartialResultsStability | string;
            /**
                * <p>Set this field to <code>PII</code> to identify personally identifiable information in the transcription output.</p>
                */
            ContentIdentificationType?: TranscribeContentIdentificationType | string;
            /**
                * <p>Set this field to <code>PII</code> to redact personally identifiable information in the transcription output. Content redaction is performed only upon complete transcription of the audio segments.</p>
                *
                *             <p>You can’t set <code>ContentRedactionType</code> and <code>ContentIdentificationType</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>
                */
            ContentRedactionType?: TranscribeContentRedactionType | string;
            /**
                * <p>Lists the PII entity types you want to identify or redact. To specify entity types, you must enable <code>ContentIdentificationType</code> or <code>ContentRedactionType</code>.</p>
                *
                *         <p>
                *             <code>PIIEntityTypes</code> must be comma-separated. The available values are:
                *             <code>BANK_ACCOUNT_NUMBER</code>, <code>BANK_ROUTING, CREDIT_DEBIT_NUMBER</code>, <code>CREDIT_DEBIT_CVV</code>, <code>CREDIT_DEBIT_EXPIRY</code>, <code>PIN</code>, <code>EMAIL</code>,
                *             <code>ADDRESS</code>, <code>NAME</code>, <code>PHONE</code>, <code>SSN</code>, and <code>ALL</code>.</p>
                *
                *         <p>
                *             <code>PiiEntityTypes</code> is an optional parameter with a default value of <code>ALL</code>.</p>
                */
            PiiEntityTypes?: string;
            /**
                * <p>The name of the language model used during transcription.</p>
                */
            LanguageModelName?: string;
            /**
                * <p>Automatically identifies the language spoken in media files.</p>
                */
            IdentifyLanguage?: boolean;
            /**
                * <p>Language codes for the languages that you want to identify. You must provide at least 2 codes.</p>
                */
            LanguageOptions?: string;
            /**
                * <p>Language code for the preferred language.</p>
                */
            PreferredLanguage?: TranscribeLanguageCode | string;
    }
    export namespace EngineTranscribeSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EngineTranscribeSettings) => any;
    }
    /**
        * <p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.</p>
        */
    export interface TranscriptionConfiguration {
            /**
                * <p>The transcription configuration settings passed to Amazon Transcribe.</p>
                */
            EngineTranscribeSettings?: EngineTranscribeSettings;
            /**
                * <p>The transcription configuration settings passed to Amazon Transcribe Medical.</p>
                */
            EngineTranscribeMedicalSettings?: EngineTranscribeMedicalSettings;
    }
    export namespace TranscriptionConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TranscriptionConfiguration) => any;
    }
    export interface StartMeetingTranscriptionRequest {
            /**
                * <p>The unique ID of the meeting being transcribed.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or
                *             <code>EngineTranscribeMedicalSettings</code>.</p>
                */
            TranscriptionConfiguration: TranscriptionConfiguration | undefined;
    }
    export namespace StartMeetingTranscriptionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMeetingTranscriptionRequest) => any;
    }
    export interface StopMeetingTranscriptionRequest {
            /**
                * <p>The unique ID of the meeting for which you stop transcription.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace StopMeetingTranscriptionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopMeetingTranscriptionRequest) => any;
    }
    export interface UpdateAttendeeCapabilitiesRequest {
            /**
                * <p>The ID of the meeting associated with the update request.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The ID of the attendee associated with the update request.</p>
                */
            AttendeeId: string | undefined;
            /**
                * <p>The capabilties that you want to update.</p>
                */
            Capabilities: AttendeeCapabilities | undefined;
    }
    export namespace UpdateAttendeeCapabilitiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAttendeeCapabilitiesRequest) => any;
    }
    export interface UpdateAttendeeCapabilitiesResponse {
            /**
                * <p>The updated attendee data.</p>
                */
            Attendee?: Attendee;
    }
    export namespace UpdateAttendeeCapabilitiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAttendeeCapabilitiesResponse) => any;
    }
}

declare module '@aws-sdk/client-chime-sdk-meetings/node_modules/@aws-sdk/client-chime-sdk-meetings/dist-types/models/ChimeSDKMeetingsServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from ChimeSDKMeetings service.
        */
    export class ChimeSDKMeetingsServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

