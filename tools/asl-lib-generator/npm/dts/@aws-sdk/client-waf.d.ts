// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-waf' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateByteMatchSetCommandInput, CreateByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateByteMatchSetCommand";
    import { CreateGeoMatchSetCommandInput, CreateGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateGeoMatchSetCommand";
    import { CreateIPSetCommandInput, CreateIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateIPSetCommand";
    import { CreateRateBasedRuleCommandInput, CreateRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRateBasedRuleCommand";
    import { CreateRegexMatchSetCommandInput, CreateRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexMatchSetCommand";
    import { CreateRegexPatternSetCommandInput, CreateRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexPatternSetCommand";
    import { CreateRuleCommandInput, CreateRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleCommand";
    import { CreateRuleGroupCommandInput, CreateRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleGroupCommand";
    import { CreateSizeConstraintSetCommandInput, CreateSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSizeConstraintSetCommand";
    import { CreateSqlInjectionMatchSetCommandInput, CreateSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSqlInjectionMatchSetCommand";
    import { CreateWebACLCommandInput, CreateWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLCommand";
    import { CreateWebACLMigrationStackCommandInput, CreateWebACLMigrationStackCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLMigrationStackCommand";
    import { CreateXssMatchSetCommandInput, CreateXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateXssMatchSetCommand";
    import { DeleteByteMatchSetCommandInput, DeleteByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteByteMatchSetCommand";
    import { DeleteGeoMatchSetCommandInput, DeleteGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteGeoMatchSetCommand";
    import { DeleteIPSetCommandInput, DeleteIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteIPSetCommand";
    import { DeleteLoggingConfigurationCommandInput, DeleteLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteLoggingConfigurationCommand";
    import { DeletePermissionPolicyCommandInput, DeletePermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeletePermissionPolicyCommand";
    import { DeleteRateBasedRuleCommandInput, DeleteRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRateBasedRuleCommand";
    import { DeleteRegexMatchSetCommandInput, DeleteRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexMatchSetCommand";
    import { DeleteRegexPatternSetCommandInput, DeleteRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexPatternSetCommand";
    import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleCommand";
    import { DeleteRuleGroupCommandInput, DeleteRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleGroupCommand";
    import { DeleteSizeConstraintSetCommandInput, DeleteSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSizeConstraintSetCommand";
    import { DeleteSqlInjectionMatchSetCommandInput, DeleteSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSqlInjectionMatchSetCommand";
    import { DeleteWebACLCommandInput, DeleteWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteWebACLCommand";
    import { DeleteXssMatchSetCommandInput, DeleteXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteXssMatchSetCommand";
    import { GetByteMatchSetCommandInput, GetByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetByteMatchSetCommand";
    import { GetChangeTokenCommandInput, GetChangeTokenCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenCommand";
    import { GetChangeTokenStatusCommandInput, GetChangeTokenStatusCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenStatusCommand";
    import { GetGeoMatchSetCommandInput, GetGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetGeoMatchSetCommand";
    import { GetIPSetCommandInput, GetIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetIPSetCommand";
    import { GetLoggingConfigurationCommandInput, GetLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetLoggingConfigurationCommand";
    import { GetPermissionPolicyCommandInput, GetPermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetPermissionPolicyCommand";
    import { GetRateBasedRuleCommandInput, GetRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleCommand";
    import { GetRateBasedRuleManagedKeysCommandInput, GetRateBasedRuleManagedKeysCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleManagedKeysCommand";
    import { GetRegexMatchSetCommandInput, GetRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexMatchSetCommand";
    import { GetRegexPatternSetCommandInput, GetRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexPatternSetCommand";
    import { GetRuleCommandInput, GetRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleCommand";
    import { GetRuleGroupCommandInput, GetRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleGroupCommand";
    import { GetSampledRequestsCommandInput, GetSampledRequestsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSampledRequestsCommand";
    import { GetSizeConstraintSetCommandInput, GetSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSizeConstraintSetCommand";
    import { GetSqlInjectionMatchSetCommandInput, GetSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSqlInjectionMatchSetCommand";
    import { GetWebACLCommandInput, GetWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetWebACLCommand";
    import { GetXssMatchSetCommandInput, GetXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetXssMatchSetCommand";
    import { ListActivatedRulesInRuleGroupCommandInput, ListActivatedRulesInRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListActivatedRulesInRuleGroupCommand";
    import { ListByteMatchSetsCommandInput, ListByteMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListByteMatchSetsCommand";
    import { ListGeoMatchSetsCommandInput, ListGeoMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListGeoMatchSetsCommand";
    import { ListIPSetsCommandInput, ListIPSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListIPSetsCommand";
    import { ListLoggingConfigurationsCommandInput, ListLoggingConfigurationsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListLoggingConfigurationsCommand";
    import { ListRateBasedRulesCommandInput, ListRateBasedRulesCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRateBasedRulesCommand";
    import { ListRegexMatchSetsCommandInput, ListRegexMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexMatchSetsCommand";
    import { ListRegexPatternSetsCommandInput, ListRegexPatternSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexPatternSetsCommand";
    import { ListRuleGroupsCommandInput, ListRuleGroupsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRuleGroupsCommand";
    import { ListRulesCommandInput, ListRulesCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRulesCommand";
    import { ListSizeConstraintSetsCommandInput, ListSizeConstraintSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSizeConstraintSetsCommand";
    import { ListSqlInjectionMatchSetsCommandInput, ListSqlInjectionMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSqlInjectionMatchSetsCommand";
    import { ListSubscribedRuleGroupsCommandInput, ListSubscribedRuleGroupsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSubscribedRuleGroupsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebACLsCommandInput, ListWebACLsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListWebACLsCommand";
    import { ListXssMatchSetsCommandInput, ListXssMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListXssMatchSetsCommand";
    import { PutLoggingConfigurationCommandInput, PutLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutLoggingConfigurationCommand";
    import { PutPermissionPolicyCommandInput, PutPermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutPermissionPolicyCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UntagResourceCommand";
    import { UpdateByteMatchSetCommandInput, UpdateByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateByteMatchSetCommand";
    import { UpdateGeoMatchSetCommandInput, UpdateGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateGeoMatchSetCommand";
    import { UpdateIPSetCommandInput, UpdateIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateIPSetCommand";
    import { UpdateRateBasedRuleCommandInput, UpdateRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRateBasedRuleCommand";
    import { UpdateRegexMatchSetCommandInput, UpdateRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexMatchSetCommand";
    import { UpdateRegexPatternSetCommandInput, UpdateRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexPatternSetCommand";
    import { UpdateRuleCommandInput, UpdateRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleCommand";
    import { UpdateRuleGroupCommandInput, UpdateRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleGroupCommand";
    import { UpdateSizeConstraintSetCommandInput, UpdateSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSizeConstraintSetCommand";
    import { UpdateSqlInjectionMatchSetCommandInput, UpdateSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSqlInjectionMatchSetCommand";
    import { UpdateWebACLCommandInput, UpdateWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateWebACLCommand";
    import { UpdateXssMatchSetCommandInput, UpdateXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateXssMatchSetCommand";
    import { WAFClient } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 	        <p>This is the <i>AWS WAF Classic API Reference</i> for using AWS WAF Classic with Amazon CloudFront. The AWS WAF Classic actions and data types listed in the reference are available for protecting Amazon CloudFront distributions. You can use these actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide is for developers who need detailed information about the AWS WAF Classic API actions,
        * 	      data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the
        * 	      <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
        */
    export class WAF extends WAFClient {
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates a <code>ByteMatchSet</code>. You then use <a>UpdateByteMatchSet</a> to identify the part of a
                * 			web request that you want AWS WAF to inspect, such as the values of the <code>User-Agent</code> header or the query string.
                * 			For example, you can create a <code>ByteMatchSet</code> that matches any requests with <code>User-Agent</code> headers
                * 			that contain the string <code>BadBot</code>. You can then configure AWS WAF to reject those requests.</p>
                * 		       <p>To create and configure a <code>ByteMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateByteMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateByteMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateByteMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateByteMatchSet</a> request to specify the part of the request that you want AWS WAF to inspect
                * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createByteMatchSet(args: CreateByteMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateByteMatchSetCommandOutput>;
            createByteMatchSet(args: CreateByteMatchSetCommandInput, cb: (err: any, data?: CreateByteMatchSetCommandOutput) => void): void;
            createByteMatchSet(args: CreateByteMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateByteMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Creates an <a>GeoMatchSet</a>, which you use to specify which web requests you want to allow or block based on the country
                * 			that the requests originate from. For example, if you're receiving a lot of requests from one or more countries and you want to block the requests, you can create an <code>GeoMatchSet</code> that contains those countries and then configure AWS WAF to block the requests. </p>
                * 		       <p>To create and configure a <code>GeoMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateGeoMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateGeoMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateGeoMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateGeoMatchSetSet</code> request to specify the countries that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createGeoMatchSet(args: CreateGeoMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateGeoMatchSetCommandOutput>;
            createGeoMatchSet(args: CreateGeoMatchSetCommandInput, cb: (err: any, data?: CreateGeoMatchSetCommandOutput) => void): void;
            createGeoMatchSet(args: CreateGeoMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateGeoMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates an <a>IPSet</a>, which you use to specify which web requests
                *          that
                *          you want to allow or block based on the IP addresses that the requests
                *          originate from. For example, if you're receiving a lot of requests from one or more
                *          individual IP addresses or one or more ranges of IP addresses and you want to block the
                *          requests, you can create an <code>IPSet</code> that contains those IP addresses and then
                *          configure AWS WAF to block the requests. </p>
                * 		       <p>To create and configure an <code>IPSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateIPSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateIPSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateIPSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateIPSet</code> request to specify the IP addresses that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createIPSet(args: CreateIPSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateIPSetCommandOutput>;
            createIPSet(args: CreateIPSetCommandInput, cb: (err: any, data?: CreateIPSetCommandOutput) => void): void;
            createIPSet(args: CreateIPSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateIPSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Creates a <a>RateBasedRule</a>. The <code>RateBasedRule</code> contains a
                *             <code>RateLimit</code>, which specifies the maximum number of requests that AWS WAF allows
                *                 from a specified IP address in a five-minute period.
                *                 The <code>RateBasedRule</code> also
                *          contains the <code>IPSet</code> objects, <code>ByteMatchSet</code> objects, and other
                *          predicates that identify the requests that you want to count or block if these requests
                *          exceed the <code>RateLimit</code>.</p>
                *          <p>If you add more than one predicate to a <code>RateBasedRule</code>, a request not
                *          only must exceed the <code>RateLimit</code>, but it also must match all the
                *          conditions to be counted or blocked. For example, suppose you add the following to a
                *             <code>RateBasedRule</code>:</p>
                *          <ul>
                *             <li>
                *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
                *                   <code>User-Agent</code> header</p>
                *             </li>
                *          </ul>
                *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
                *          <p>You then add the <code>RateBasedRule</code> to a <code>WebACL</code> and specify that
                *          you want to block requests that meet the conditions in the rule. For a request to be
                *          blocked, it must come from the IP address 192.0.2.44 <i>and</i> the
                *             <code>User-Agent</code> header in the request must contain the value
                *          <code>BadBot</code>. Further, requests that match these two conditions must be received at
                *          a rate of more than 1,000 requests every five minutes. If both conditions are met and the
                *          rate is exceeded, AWS WAF blocks the requests. If the rate drops below 1,000 for a
                *          five-minute period, AWS WAF no longer blocks the requests.</p>
                *
                * 		       <p>As a second example, suppose you want to limit requests to a particular page on your site. To do this, you could add the following to a
                *             <code>RateBasedRule</code>:</p>
                *
                *
                *          <ul>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> with <code>FieldToMatch</code> of <code>URI</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>PositionalConstraint</code> of <code>STARTS_WITH</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>TargetString</code> of <code>login</code>
                *                </p>
                *             </li>
                *          </ul>
                *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
                *          <p>By adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you could limit requests to your login page without affecting the rest of your site.</p>
                *
                *
                *          <p>To create and configure a <code>RateBasedRule</code>, perform the following
                *          steps:</p>
                *          <ol>
                *             <li>
                *                <p>Create and update the predicates that you want to include in the rule. For more
                *                information, see <a>CreateByteMatchSet</a>, <a>CreateIPSet</a>,
                *                and <a>CreateSqlInjectionMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
                *                in the <code>ChangeToken</code> parameter of a <code>CreateRule</code>
                *                request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateRateBasedRule</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the
                *                   <code>ChangeToken</code> parameter of an <a>UpdateRule</a>
                *                request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRateBasedRule</code> request to specify the predicates
                *                that you want to include in the rule.</p>
                *             </li>
                *             <li>
                *                <p>Create and update a <code>WebACL</code> that contains the
                *                   <code>RateBasedRule</code>. For more information, see <a>CreateWebACL</a>.</p>
                *             </li>
                *          </ol>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests,
                *          see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer
                *             Guide</a>.</p>
                */
            createRateBasedRule(args: CreateRateBasedRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateRateBasedRuleCommandOutput>;
            createRateBasedRule(args: CreateRateBasedRuleCommandInput, cb: (err: any, data?: CreateRateBasedRuleCommandOutput) => void): void;
            createRateBasedRule(args: CreateRateBasedRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRateBasedRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Creates a <a>RegexMatchSet</a>. You then use <a>UpdateRegexMatchSet</a> to identify the part of a
                *          web request that you want AWS WAF to inspect, such as the values of the <code>User-Agent</code> header or the query string.
                *          For example, you can create a <code>RegexMatchSet</code> that contains a <code>RegexMatchTuple</code> that looks for any requests with <code>User-Agent</code> headers
                *          that match a <code>RegexPatternSet</code> with pattern <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
                *          <p>To create and configure a <code>RegexMatchSet</code>, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                *                   <code>CreateRegexMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateRegexMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                *                   <code>UpdateRegexMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateRegexMatchSet</a> request to specify the part of the request that you want AWS WAF to inspect
                *                   (for example, the header or the URI) and the value, using a <code>RegexPatternSet</code>, that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                *             <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createRegexMatchSet(args: CreateRegexMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateRegexMatchSetCommandOutput>;
            createRegexMatchSet(args: CreateRegexMatchSetCommandInput, cb: (err: any, data?: CreateRegexMatchSetCommandOutput) => void): void;
            createRegexMatchSet(args: CreateRegexMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRegexMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Creates a <code>RegexPatternSet</code>. You then use <a>UpdateRegexPatternSet</a> to specify the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
                * 		       <p>To create and configure a <code>RegexPatternSet</code>, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                *                   <code>CreateRegexPatternSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateRegexPatternSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                *                   <code>UpdateRegexPatternSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateRegexPatternSet</a> request to specify the string that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                *             <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createRegexPatternSet(args: CreateRegexPatternSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateRegexPatternSetCommandOutput>;
            createRegexPatternSet(args: CreateRegexPatternSetCommandInput, cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void): void;
            createRegexPatternSet(args: CreateRegexPatternSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates a <code>Rule</code>, which contains the <code>IPSet</code> objects,
                *             <code>ByteMatchSet</code> objects, and other predicates that identify the requests that
                *          you want to block. If you add more than one predicate to a <code>Rule</code>, a request
                *          must match all of the specifications to be allowed or blocked. For example, suppose
                *          that
                *          you add the following to a <code>Rule</code>:</p>
                * 		       <ul>
                *             <li>
                *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the <code>User-Agent</code> header</p>
                *             </li>
                *          </ul>
                * 		       <p>You then add the <code>Rule</code> to a <code>WebACL</code> and specify that you want to blocks requests that satisfy the <code>Rule</code>.
                * 			For a request to be blocked, it must come from the IP address 192.0.2.44 <i>and</i> the <code>User-Agent</code> header in the request
                * 			must contain the value <code>BadBot</code>.</p>
                * 		       <p>To create and configure a <code>Rule</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create and update the predicates that you want to include in the <code>Rule</code>. For more information, see
                * 				<a>CreateByteMatchSet</a>, <a>CreateIPSet</a>, and <a>CreateSqlInjectionMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateRule</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateRule</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateRule</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRule</code> request to specify the predicates that you want to include in the <code>Rule</code>.</p>
                *             </li>
                *             <li>
                *                <p>Create and update a <code>WebACL</code> that contains the <code>Rule</code>. For more information, see <a>CreateWebACL</a>.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createRule(args: CreateRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateRuleCommandOutput>;
            createRule(args: CreateRuleCommandInput, cb: (err: any, data?: CreateRuleCommandOutput) => void): void;
            createRule(args: CreateRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Creates a <code>RuleGroup</code>. A rule group is a collection of predefined rules that you add to a web ACL. You use <a>UpdateRuleGroup</a> to add rules to the rule group.</p>
                * 	        <p>Rule groups are subject to the following limits:</p>
                * 	        <ul>
                *             <li>
                *                <p>Three rule groups per account. You can request an increase to this limit by contacting customer support.</p>
                *             </li>
                *             <li>
                *                <p>One rule group per web ACL.</p>
                *             </li>
                *             <li>
                *                <p>Ten rules per rule group.</p>
                *             </li>
                *          </ul>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                *          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createRuleGroup(args: CreateRuleGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateRuleGroupCommandOutput>;
            createRuleGroup(args: CreateRuleGroupCommandInput, cb: (err: any, data?: CreateRuleGroupCommandOutput) => void): void;
            createRuleGroup(args: CreateRuleGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRuleGroupCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates a <code>SizeConstraintSet</code>. You then use <a>UpdateSizeConstraintSet</a> to identify the part of a
                * 			web request that you want AWS WAF to check for length, such as the length of the <code>User-Agent</code> header or the length of the query string.
                * 			For example, you can create a <code>SizeConstraintSet</code> that matches any requests that have a query string that is longer than 100 bytes.
                * 			You can then configure AWS WAF to reject those requests.</p>
                * 		       <p>To create and configure a <code>SizeConstraintSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateSizeConstraintSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateSizeConstraintSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateSizeConstraintSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateSizeConstraintSet</a> request to specify the part of the request that you want AWS WAF to inspect
                * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createSizeConstraintSet(args: CreateSizeConstraintSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateSizeConstraintSetCommandOutput>;
            createSizeConstraintSet(args: CreateSizeConstraintSetCommandInput, cb: (err: any, data?: CreateSizeConstraintSetCommandOutput) => void): void;
            createSizeConstraintSet(args: CreateSizeConstraintSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSizeConstraintSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates a <a>SqlInjectionMatchSet</a>, which you use to allow, block, or count requests that contain snippets of SQL code in a
                * 			specified part of web requests. AWS WAF searches for character sequences that are likely to be malicious strings.</p>
                * 		       <p>To create and configure a <code>SqlInjectionMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateSqlInjectionMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateSqlInjectionMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateSqlInjectionMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateSqlInjectionMatchSet</a> request to specify the parts of web requests in which you want to
                * 				allow, block, or count malicious SQL code.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createSqlInjectionMatchSet(args: CreateSqlInjectionMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateSqlInjectionMatchSetCommandOutput>;
            createSqlInjectionMatchSet(args: CreateSqlInjectionMatchSetCommandInput, cb: (err: any, data?: CreateSqlInjectionMatchSetCommandOutput) => void): void;
            createSqlInjectionMatchSet(args: CreateSqlInjectionMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSqlInjectionMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates a <code>WebACL</code>, which contains the <code>Rules</code> that identify the CloudFront web requests that you want to allow, block, or count.
                * 			AWS WAF evaluates <code>Rules</code> in order based on the value of <code>Priority</code> for each <code>Rule</code>.</p>
                * 		       <p>You also specify a default action, either <code>ALLOW</code> or <code>BLOCK</code>. If a web request doesn't match
                * 			any of the <code>Rules</code> in a <code>WebACL</code>, AWS WAF responds to the request with the default action. </p>
                * 		       <p>To create and configure a <code>WebACL</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create and update the <code>ByteMatchSet</code> objects and other predicates that you want to include in <code>Rules</code>.
                * 				For more information, see <a>CreateByteMatchSet</a>, <a>UpdateByteMatchSet</a>, <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
                * 				<a>CreateSqlInjectionMatchSet</a>, and <a>UpdateSqlInjectionMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Create and update the <code>Rules</code> that you want to include in the <code>WebACL</code>. For more information, see
                * 				<a>CreateRule</a> and <a>UpdateRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateWebACL</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateWebACL</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateWebACL</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateWebACL</a> request to specify the <code>Rules</code> that you want to include in the <code>WebACL</code>,
                * 				to specify the default action, and to associate the <code>WebACL</code> with a CloudFront distribution.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createWebACL(args: CreateWebACLCommandInput, options?: __HttpHandlerOptions): Promise<CreateWebACLCommandOutput>;
            createWebACL(args: CreateWebACLCommandInput, cb: (err: any, data?: CreateWebACLCommandOutput) => void): void;
            createWebACL(args: CreateWebACLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWebACLCommandOutput) => void): void;
            /**
                * <p>Creates an AWS CloudFormation WAFV2 template for the specified web ACL in the specified Amazon S3 bucket.
                *            Then, in CloudFormation, you create a stack from the template, to create the web ACL and its resources in AWS WAFV2.
                *            Use this to migrate your AWS WAF Classic web ACL to the latest version of AWS WAF.</p>
                *          <p>This is part of a larger migration procedure for web ACLs from AWS WAF Classic to the latest version of AWS WAF.
                *            For the full procedure, including caveats and manual steps to complete
                *            the migration and switch over to the new web ACL, see
                *            <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-migrating-from-classic.html">Migrating your AWS WAF Classic resources to AWS WAF</a> in the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF
                *   Developer Guide</a>.  </p>
                */
            createWebACLMigrationStack(args: CreateWebACLMigrationStackCommandInput, options?: __HttpHandlerOptions): Promise<CreateWebACLMigrationStackCommandOutput>;
            createWebACLMigrationStack(args: CreateWebACLMigrationStackCommandInput, cb: (err: any, data?: CreateWebACLMigrationStackCommandOutput) => void): void;
            createWebACLMigrationStack(args: CreateWebACLMigrationStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWebACLMigrationStackCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Creates an <a>XssMatchSet</a>, which you use to allow, block, or count requests that contain cross-site scripting attacks
                * 			in the specified part of web requests. AWS WAF searches for character sequences that are likely to be malicious strings.</p>
                * 		       <p>To create and configure an <code>XssMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>CreateXssMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>CreateXssMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateXssMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateXssMatchSet</a> request to specify the parts of web requests in which you want to
                * 				allow, block, or count cross-site scripting attacks.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            createXssMatchSet(args: CreateXssMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<CreateXssMatchSetCommandOutput>;
            createXssMatchSet(args: CreateXssMatchSetCommandInput, cb: (err: any, data?: CreateXssMatchSetCommandOutput) => void): void;
            createXssMatchSet(args: CreateXssMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateXssMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes a <a>ByteMatchSet</a>. You can't delete a <code>ByteMatchSet</code> if it's still used in any <code>Rules</code>
                * 			or if it still includes any <a>ByteMatchTuple</a> objects (any filters).</p>
                * 		       <p>If you just want to remove a <code>ByteMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete a <code>ByteMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>ByteMatchSet</code> to remove filters, if any. For more information, see <a>UpdateByteMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteByteMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteByteMatchSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteByteMatchSet(args: DeleteByteMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteByteMatchSetCommandOutput>;
            deleteByteMatchSet(args: DeleteByteMatchSetCommandInput, cb: (err: any, data?: DeleteByteMatchSetCommandOutput) => void): void;
            deleteByteMatchSet(args: DeleteByteMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteByteMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes a <a>GeoMatchSet</a>. You can't delete a <code>GeoMatchSet</code> if it's still used in any <code>Rules</code> or
                * 			if it still includes any countries.</p>
                * 		       <p>If you just want to remove a <code>GeoMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete a <code>GeoMatchSet</code> from AWS WAF, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>GeoMatchSet</code> to remove any countries. For more information, see <a>UpdateGeoMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteGeoMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteGeoMatchSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteGeoMatchSet(args: DeleteGeoMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteGeoMatchSetCommandOutput>;
            deleteGeoMatchSet(args: DeleteGeoMatchSetCommandInput, cb: (err: any, data?: DeleteGeoMatchSetCommandOutput) => void): void;
            deleteGeoMatchSet(args: DeleteGeoMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteGeoMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes an <a>IPSet</a>. You can't delete an <code>IPSet</code> if it's still used in any <code>Rules</code> or
                * 			if it still includes any IP addresses.</p>
                * 		       <p>If you just want to remove an <code>IPSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete an <code>IPSet</code> from AWS WAF, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>IPSet</code> to remove IP address ranges, if any. For more information, see <a>UpdateIPSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteIPSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteIPSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteIPSet(args: DeleteIPSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteIPSetCommandOutput>;
            deleteIPSet(args: DeleteIPSetCommandInput, cb: (err: any, data?: DeleteIPSetCommandOutput) => void): void;
            deleteIPSet(args: DeleteIPSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteIPSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes the <a>LoggingConfiguration</a> from the specified web
                *          ACL.</p>
                */
            deleteLoggingConfiguration(args: DeleteLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLoggingConfigurationCommandOutput>;
            deleteLoggingConfiguration(args: DeleteLoggingConfigurationCommandInput, cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void): void;
            deleteLoggingConfiguration(args: DeleteLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes an IAM policy from the specified RuleGroup.</p>
                *          <p>The user making the request must be the owner of the RuleGroup.</p>
                */
            deletePermissionPolicy(args: DeletePermissionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeletePermissionPolicyCommandOutput>;
            deletePermissionPolicy(args: DeletePermissionPolicyCommandInput, cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void): void;
            deletePermissionPolicy(args: DeletePermissionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes a <a>RateBasedRule</a>. You can't delete a rule if
                *          it's still used in any <code>WebACL</code> objects or if it still includes any predicates,
                *          such as <code>ByteMatchSet</code> objects.</p>
                *          <p>If you just want to remove a rule from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
                *          <p>To permanently delete a <code>RateBasedRule</code> from AWS WAF, perform the following
                *          steps:</p>
                *          <ol>
                *             <li>
                *                <p>Update the <code>RateBasedRule</code> to remove predicates, if any. For more
                *                information, see <a>UpdateRateBasedRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
                *                in the <code>ChangeToken</code> parameter of a <code>DeleteRateBasedRule</code>
                *                request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteRateBasedRule</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteRateBasedRule(args: DeleteRateBasedRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRateBasedRuleCommandOutput>;
            deleteRateBasedRule(args: DeleteRateBasedRuleCommandInput, cb: (err: any, data?: DeleteRateBasedRuleCommandOutput) => void): void;
            deleteRateBasedRule(args: DeleteRateBasedRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRateBasedRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes a <a>RegexMatchSet</a>. You can't delete a <code>RegexMatchSet</code> if it's still used in any <code>Rules</code>
                *         or if it still includes any <code>RegexMatchTuples</code> objects (any filters).</p>
                * 		       <p>If you just want to remove a <code>RegexMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete a <code>RegexMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>RegexMatchSet</code> to remove filters, if any. For more information, see <a>UpdateRegexMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteRegexMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteRegexMatchSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteRegexMatchSet(args: DeleteRegexMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRegexMatchSetCommandOutput>;
            deleteRegexMatchSet(args: DeleteRegexMatchSetCommandInput, cb: (err: any, data?: DeleteRegexMatchSetCommandOutput) => void): void;
            deleteRegexMatchSet(args: DeleteRegexMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRegexMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes a <a>RegexPatternSet</a>. You can't delete a <code>RegexPatternSet</code> if it's still used in any <code>RegexMatchSet</code>
                *          or if the <code>RegexPatternSet</code> is not empty. </p>
                */
            deleteRegexPatternSet(args: DeleteRegexPatternSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRegexPatternSetCommandOutput>;
            deleteRegexPatternSet(args: DeleteRegexPatternSetCommandInput, cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void): void;
            deleteRegexPatternSet(args: DeleteRegexPatternSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes a <a>Rule</a>. You can't delete a <code>Rule</code> if it's still used in any <code>WebACL</code>
                * 			objects or if it still includes any predicates, such as <code>ByteMatchSet</code> objects.</p>
                * 		       <p>If you just want to remove a <code>Rule</code> from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
                * 		       <p>To permanently delete a <code>Rule</code> from AWS WAF, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>Rule</code> to remove predicates, if any. For more information, see <a>UpdateRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteRule</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteRule</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteRule(args: DeleteRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRuleCommandOutput>;
            deleteRule(args: DeleteRuleCommandInput, cb: (err: any, data?: DeleteRuleCommandOutput) => void): void;
            deleteRule(args: DeleteRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Permanently deletes a <a>RuleGroup</a>. You can't delete a <code>RuleGroup</code> if it's still used in any <code>WebACL</code>
                *          objects or if it still includes any rules.</p>
                *          <p>If you just want to remove a <code>RuleGroup</code> from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
                *          <p>To permanently delete a <code>RuleGroup</code> from AWS WAF, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Update the <code>RuleGroup</code> to remove rules, if any. For more information, see <a>UpdateRuleGroup</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                *                <code>DeleteRuleGroup</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteRuleGroup</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteRuleGroup(args: DeleteRuleGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRuleGroupCommandOutput>;
            deleteRuleGroup(args: DeleteRuleGroupCommandInput, cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void): void;
            deleteRuleGroup(args: DeleteRuleGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes a <a>SizeConstraintSet</a>. You can't delete a <code>SizeConstraintSet</code> if it's still used in any <code>Rules</code>
                * 			or if it still includes any <a>SizeConstraint</a> objects (any filters).</p>
                * 		       <p>If you just want to remove a <code>SizeConstraintSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete a <code>SizeConstraintSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>SizeConstraintSet</code> to remove filters, if any. For more information, see <a>UpdateSizeConstraintSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteSizeConstraintSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteSizeConstraintSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteSizeConstraintSet(args: DeleteSizeConstraintSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSizeConstraintSetCommandOutput>;
            deleteSizeConstraintSet(args: DeleteSizeConstraintSetCommandInput, cb: (err: any, data?: DeleteSizeConstraintSetCommandOutput) => void): void;
            deleteSizeConstraintSet(args: DeleteSizeConstraintSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSizeConstraintSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes a <a>SqlInjectionMatchSet</a>. You can't delete a <code>SqlInjectionMatchSet</code> if it's
                * 			still used in any <code>Rules</code> or if it still contains any <a>SqlInjectionMatchTuple</a> objects.</p>
                * 		       <p>If you just want to remove a <code>SqlInjectionMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete a <code>SqlInjectionMatchSet</code> from AWS WAF, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>SqlInjectionMatchSet</code> to remove filters, if any. For more information, see
                * 				<a>UpdateSqlInjectionMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteSqlInjectionMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteSqlInjectionMatchSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteSqlInjectionMatchSet(args: DeleteSqlInjectionMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSqlInjectionMatchSetCommandOutput>;
            deleteSqlInjectionMatchSet(args: DeleteSqlInjectionMatchSetCommandInput, cb: (err: any, data?: DeleteSqlInjectionMatchSetCommandOutput) => void): void;
            deleteSqlInjectionMatchSet(args: DeleteSqlInjectionMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSqlInjectionMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes a <a>WebACL</a>. You can't delete a <code>WebACL</code> if it still contains any <code>Rules</code>.</p>
                * 		       <p>To delete a <code>WebACL</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>WebACL</code> to remove <code>Rules</code>, if any. For more information, see <a>UpdateWebACL</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteWebACL</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteWebACL</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteWebACL(args: DeleteWebACLCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWebACLCommandOutput>;
            deleteWebACL(args: DeleteWebACLCommandInput, cb: (err: any, data?: DeleteWebACLCommandOutput) => void): void;
            deleteWebACL(args: DeleteWebACLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWebACLCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Permanently deletes an <a>XssMatchSet</a>. You can't delete an <code>XssMatchSet</code> if it's
                * 			still used in any <code>Rules</code> or if it still contains any <a>XssMatchTuple</a> objects.</p>
                * 		       <p>If you just want to remove an <code>XssMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
                * 		       <p>To permanently delete an <code>XssMatchSet</code> from AWS WAF, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Update the <code>XssMatchSet</code> to remove filters, if any. For more information, see
                * 				<a>UpdateXssMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
                * 				<code>DeleteXssMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit a <code>DeleteXssMatchSet</code> request.</p>
                *             </li>
                *          </ol>
                */
            deleteXssMatchSet(args: DeleteXssMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteXssMatchSetCommandOutput>;
            deleteXssMatchSet(args: DeleteXssMatchSetCommandInput, cb: (err: any, data?: DeleteXssMatchSetCommandOutput) => void): void;
            deleteXssMatchSet(args: DeleteXssMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteXssMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>ByteMatchSet</a> specified by <code>ByteMatchSetId</code>.</p>
                */
            getByteMatchSet(args: GetByteMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<GetByteMatchSetCommandOutput>;
            getByteMatchSet(args: GetByteMatchSetCommandInput, cb: (err: any, data?: GetByteMatchSetCommandOutput) => void): void;
            getByteMatchSet(args: GetByteMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetByteMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete request. Change tokens ensure that your application doesn't submit conflicting requests to AWS WAF.</p>
                * 		       <p>Each create, update, or delete request must use a unique change token. If your application submits a <code>GetChangeToken</code> request
                * 			and then submits a second <code>GetChangeToken</code> request before submitting a create, update, or delete request, the second
                * 			<code>GetChangeToken</code> request returns the same value as the first <code>GetChangeToken</code> request.</p>
                * 		       <p>When you use a change token in a create, update, or delete request, the status of the change token changes to <code>PENDING</code>,
                * 			which indicates that AWS WAF is propagating the change to all AWS WAF servers. Use <code>GetChangeTokenStatus</code> to determine the
                * 			status of your change token.</p>
                */
            getChangeToken(args: GetChangeTokenCommandInput, options?: __HttpHandlerOptions): Promise<GetChangeTokenCommandOutput>;
            getChangeToken(args: GetChangeTokenCommandInput, cb: (err: any, data?: GetChangeTokenCommandOutput) => void): void;
            getChangeToken(args: GetChangeTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetChangeTokenCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the status of a <code>ChangeToken</code> that you got by calling <a>GetChangeToken</a>. <code>ChangeTokenStatus</code> is
                * 			one of the following values:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>PROVISIONED</code>: You requested the change token by calling <code>GetChangeToken</code>, but you haven't used it yet
                * 				in a call to create, update, or delete an AWS WAF object.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>PENDING</code>: AWS WAF is propagating the create, update, or delete request to all AWS WAF servers.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>INSYNC</code>: Propagation is complete.</p>
                *             </li>
                *          </ul>
                */
            getChangeTokenStatus(args: GetChangeTokenStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetChangeTokenStatusCommandOutput>;
            getChangeTokenStatus(args: GetChangeTokenStatusCommandInput, cb: (err: any, data?: GetChangeTokenStatusCommandOutput) => void): void;
            getChangeTokenStatus(args: GetChangeTokenStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetChangeTokenStatusCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the <a>GeoMatchSet</a> that is specified by <code>GeoMatchSetId</code>.</p>
                */
            getGeoMatchSet(args: GetGeoMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<GetGeoMatchSetCommandOutput>;
            getGeoMatchSet(args: GetGeoMatchSetCommandInput, cb: (err: any, data?: GetGeoMatchSetCommandOutput) => void): void;
            getGeoMatchSet(args: GetGeoMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetGeoMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>IPSet</a> that is specified by <code>IPSetId</code>.</p>
                */
            getIPSet(args: GetIPSetCommandInput, options?: __HttpHandlerOptions): Promise<GetIPSetCommandOutput>;
            getIPSet(args: GetIPSetCommandInput, cb: (err: any, data?: GetIPSetCommandOutput) => void): void;
            getIPSet(args: GetIPSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetIPSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the <a>LoggingConfiguration</a> for the specified web ACL.</p>
                */
            getLoggingConfiguration(args: GetLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetLoggingConfigurationCommandOutput>;
            getLoggingConfiguration(args: GetLoggingConfigurationCommandInput, cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void): void;
            getLoggingConfiguration(args: GetLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the IAM policy attached to the RuleGroup.</p>
                */
            getPermissionPolicy(args: GetPermissionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetPermissionPolicyCommandOutput>;
            getPermissionPolicy(args: GetPermissionPolicyCommandInput, cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void): void;
            getPermissionPolicy(args: GetPermissionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the <a>RateBasedRule</a> that is specified by the
                *             <code>RuleId</code> that you included in the <code>GetRateBasedRule</code>
                *          request.</p>
                */
            getRateBasedRule(args: GetRateBasedRuleCommandInput, options?: __HttpHandlerOptions): Promise<GetRateBasedRuleCommandOutput>;
            getRateBasedRule(args: GetRateBasedRuleCommandInput, cb: (err: any, data?: GetRateBasedRuleCommandOutput) => void): void;
            getRateBasedRule(args: GetRateBasedRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRateBasedRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of IP addresses currently being blocked by the <a>RateBasedRule</a> that is specified by the <code>RuleId</code>. The maximum
                *          number of managed keys that will be blocked is 10,000. If more than 10,000 addresses exceed
                *          the rate limit, the 10,000 addresses with the highest rates will be blocked.</p>
                */
            getRateBasedRuleManagedKeys(args: GetRateBasedRuleManagedKeysCommandInput, options?: __HttpHandlerOptions): Promise<GetRateBasedRuleManagedKeysCommandOutput>;
            getRateBasedRuleManagedKeys(args: GetRateBasedRuleManagedKeysCommandInput, cb: (err: any, data?: GetRateBasedRuleManagedKeysCommandOutput) => void): void;
            getRateBasedRuleManagedKeys(args: GetRateBasedRuleManagedKeysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRateBasedRuleManagedKeysCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the <a>RegexMatchSet</a> specified by <code>RegexMatchSetId</code>.</p>
                */
            getRegexMatchSet(args: GetRegexMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<GetRegexMatchSetCommandOutput>;
            getRegexMatchSet(args: GetRegexMatchSetCommandInput, cb: (err: any, data?: GetRegexMatchSetCommandOutput) => void): void;
            getRegexMatchSet(args: GetRegexMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRegexMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *         <p>Returns the <a>RegexPatternSet</a> specified by <code>RegexPatternSetId</code>.</p>
                */
            getRegexPatternSet(args: GetRegexPatternSetCommandInput, options?: __HttpHandlerOptions): Promise<GetRegexPatternSetCommandOutput>;
            getRegexPatternSet(args: GetRegexPatternSetCommandInput, cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void): void;
            getRegexPatternSet(args: GetRegexPatternSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>Rule</a> that is specified by the <code>RuleId</code> that you included in the <code>GetRule</code> request.</p>
                */
            getRule(args: GetRuleCommandInput, options?: __HttpHandlerOptions): Promise<GetRuleCommandOutput>;
            getRule(args: GetRuleCommandInput, cb: (err: any, data?: GetRuleCommandOutput) => void): void;
            getRule(args: GetRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns the <a>RuleGroup</a> that is specified by the <code>RuleGroupId</code> that you included in the <code>GetRuleGroup</code> request.</p>
                * 	        <p>To view the rules in a rule group, use <a>ListActivatedRulesInRuleGroup</a>.</p>
                */
            getRuleGroup(args: GetRuleGroupCommandInput, options?: __HttpHandlerOptions): Promise<GetRuleGroupCommandOutput>;
            getRuleGroup(args: GetRuleGroupCommandInput, cb: (err: any, data?: GetRuleGroupCommandOutput) => void): void;
            getRuleGroup(args: GetRuleGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRuleGroupCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests that your AWS resource received during a time range that you choose. You can specify a sample size of up to 500 requests, and you can specify any time range in the previous three hours.</p>
                * 		       <p>
                *             <code>GetSampledRequests</code> returns a time range, which is usually the time range that you specified. However, if your resource
                * 			(such as a CloudFront distribution) received 5,000 requests before the specified time range elapsed, <code>GetSampledRequests</code>
                * 			returns an updated time range. This new time range indicates the actual period during which AWS WAF selected the requests in the sample.</p>
                */
            getSampledRequests(args: GetSampledRequestsCommandInput, options?: __HttpHandlerOptions): Promise<GetSampledRequestsCommandOutput>;
            getSampledRequests(args: GetSampledRequestsCommandInput, cb: (err: any, data?: GetSampledRequestsCommandOutput) => void): void;
            getSampledRequests(args: GetSampledRequestsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSampledRequestsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>SizeConstraintSet</a> specified by <code>SizeConstraintSetId</code>.</p>
                */
            getSizeConstraintSet(args: GetSizeConstraintSetCommandInput, options?: __HttpHandlerOptions): Promise<GetSizeConstraintSetCommandOutput>;
            getSizeConstraintSet(args: GetSizeConstraintSetCommandInput, cb: (err: any, data?: GetSizeConstraintSetCommandOutput) => void): void;
            getSizeConstraintSet(args: GetSizeConstraintSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSizeConstraintSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>SqlInjectionMatchSet</a> that is specified by <code>SqlInjectionMatchSetId</code>.</p>
                */
            getSqlInjectionMatchSet(args: GetSqlInjectionMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<GetSqlInjectionMatchSetCommandOutput>;
            getSqlInjectionMatchSet(args: GetSqlInjectionMatchSetCommandInput, cb: (err: any, data?: GetSqlInjectionMatchSetCommandOutput) => void): void;
            getSqlInjectionMatchSet(args: GetSqlInjectionMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSqlInjectionMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>WebACL</a> that is specified by <code>WebACLId</code>.</p>
                */
            getWebACL(args: GetWebACLCommandInput, options?: __HttpHandlerOptions): Promise<GetWebACLCommandOutput>;
            getWebACL(args: GetWebACLCommandInput, cb: (err: any, data?: GetWebACLCommandOutput) => void): void;
            getWebACL(args: GetWebACLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetWebACLCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns the <a>XssMatchSet</a> that is specified by <code>XssMatchSetId</code>.</p>
                */
            getXssMatchSet(args: GetXssMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<GetXssMatchSetCommandOutput>;
            getXssMatchSet(args: GetXssMatchSetCommandInput, cb: (err: any, data?: GetXssMatchSetCommandOutput) => void): void;
            getXssMatchSet(args: GetXssMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetXssMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>ActivatedRule</a> objects.</p>
                */
            listActivatedRulesInRuleGroup(args: ListActivatedRulesInRuleGroupCommandInput, options?: __HttpHandlerOptions): Promise<ListActivatedRulesInRuleGroupCommandOutput>;
            listActivatedRulesInRuleGroup(args: ListActivatedRulesInRuleGroupCommandInput, cb: (err: any, data?: ListActivatedRulesInRuleGroupCommandOutput) => void): void;
            listActivatedRulesInRuleGroup(args: ListActivatedRulesInRuleGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListActivatedRulesInRuleGroupCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>ByteMatchSetSummary</a> objects.</p>
                */
            listByteMatchSets(args: ListByteMatchSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListByteMatchSetsCommandOutput>;
            listByteMatchSets(args: ListByteMatchSetsCommandInput, cb: (err: any, data?: ListByteMatchSetsCommandOutput) => void): void;
            listByteMatchSets(args: ListByteMatchSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListByteMatchSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>GeoMatchSetSummary</a> objects in the response.</p>
                */
            listGeoMatchSets(args: ListGeoMatchSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListGeoMatchSetsCommandOutput>;
            listGeoMatchSets(args: ListGeoMatchSetsCommandInput, cb: (err: any, data?: ListGeoMatchSetsCommandOutput) => void): void;
            listGeoMatchSets(args: ListGeoMatchSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGeoMatchSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>IPSetSummary</a> objects in the response.</p>
                */
            listIPSets(args: ListIPSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListIPSetsCommandOutput>;
            listIPSets(args: ListIPSetsCommandInput, cb: (err: any, data?: ListIPSetsCommandOutput) => void): void;
            listIPSets(args: ListIPSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListIPSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>LoggingConfiguration</a> objects.</p>
                */
            listLoggingConfigurations(args: ListLoggingConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListLoggingConfigurationsCommandOutput>;
            listLoggingConfigurations(args: ListLoggingConfigurationsCommandInput, cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void): void;
            listLoggingConfigurations(args: ListLoggingConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>RuleSummary</a> objects.</p>
                */
            listRateBasedRules(args: ListRateBasedRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListRateBasedRulesCommandOutput>;
            listRateBasedRules(args: ListRateBasedRulesCommandInput, cb: (err: any, data?: ListRateBasedRulesCommandOutput) => void): void;
            listRateBasedRules(args: ListRateBasedRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRateBasedRulesCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>RegexMatchSetSummary</a> objects.</p>
                */
            listRegexMatchSets(args: ListRegexMatchSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListRegexMatchSetsCommandOutput>;
            listRegexMatchSets(args: ListRegexMatchSetsCommandInput, cb: (err: any, data?: ListRegexMatchSetsCommandOutput) => void): void;
            listRegexMatchSets(args: ListRegexMatchSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRegexMatchSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>RegexPatternSetSummary</a> objects.</p>
                */
            listRegexPatternSets(args: ListRegexPatternSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListRegexPatternSetsCommandOutput>;
            listRegexPatternSets(args: ListRegexPatternSetsCommandInput, cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void): void;
            listRegexPatternSets(args: ListRegexPatternSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>RuleGroup</a> objects.</p>
                */
            listRuleGroups(args: ListRuleGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListRuleGroupsCommandOutput>;
            listRuleGroups(args: ListRuleGroupsCommandInput, cb: (err: any, data?: ListRuleGroupsCommandOutput) => void): void;
            listRuleGroups(args: ListRuleGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRuleGroupsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>RuleSummary</a> objects.</p>
                */
            listRules(args: ListRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListRulesCommandOutput>;
            listRules(args: ListRulesCommandInput, cb: (err: any, data?: ListRulesCommandOutput) => void): void;
            listRules(args: ListRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRulesCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>SizeConstraintSetSummary</a> objects.</p>
                */
            listSizeConstraintSets(args: ListSizeConstraintSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListSizeConstraintSetsCommandOutput>;
            listSizeConstraintSets(args: ListSizeConstraintSetsCommandInput, cb: (err: any, data?: ListSizeConstraintSetsCommandOutput) => void): void;
            listSizeConstraintSets(args: ListSizeConstraintSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSizeConstraintSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>SqlInjectionMatchSet</a> objects.</p>
                */
            listSqlInjectionMatchSets(args: ListSqlInjectionMatchSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListSqlInjectionMatchSetsCommandOutput>;
            listSqlInjectionMatchSets(args: ListSqlInjectionMatchSetsCommandInput, cb: (err: any, data?: ListSqlInjectionMatchSetsCommandOutput) => void): void;
            listSqlInjectionMatchSets(args: ListSqlInjectionMatchSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSqlInjectionMatchSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Returns an array of <a>RuleGroup</a> objects that you are subscribed to.</p>
                */
            listSubscribedRuleGroups(args: ListSubscribedRuleGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListSubscribedRuleGroupsCommandOutput>;
            listSubscribedRuleGroups(args: ListSubscribedRuleGroupsCommandInput, cb: (err: any, data?: ListSubscribedRuleGroupsCommandOutput) => void): void;
            listSubscribedRuleGroups(args: ListSubscribedRuleGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSubscribedRuleGroupsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *         <p>Retrieves the tags associated with the specified AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
                *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>WebACLSummary</a> objects in the response.</p>
                */
            listWebACLs(args: ListWebACLsCommandInput, options?: __HttpHandlerOptions): Promise<ListWebACLsCommandOutput>;
            listWebACLs(args: ListWebACLsCommandInput, cb: (err: any, data?: ListWebACLsCommandOutput) => void): void;
            listWebACLs(args: ListWebACLsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWebACLsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Returns an array of <a>XssMatchSet</a> objects.</p>
                */
            listXssMatchSets(args: ListXssMatchSetsCommandInput, options?: __HttpHandlerOptions): Promise<ListXssMatchSetsCommandOutput>;
            listXssMatchSets(args: ListXssMatchSetsCommandInput, cb: (err: any, data?: ListXssMatchSetsCommandOutput) => void): void;
            listXssMatchSets(args: ListXssMatchSetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListXssMatchSetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Associates a <a>LoggingConfiguration</a> with a specified web ACL.</p>
                * 	        <p>You can access information about all traffic that AWS WAF inspects using the following
                *          steps:</p>
                * 	        <ol>
                *             <li>
                *                <p>Create an Amazon Kinesis Data
                *                Firehose. </p>
                * 	              <p>Create the data firehose with a PUT source and in the region that you are operating. However, if you are capturing logs for Amazon CloudFront, always create the firehose in US East (N. Virginia). </p>
                * 	              <note>
                *                   <p>Do not create the data firehose using a <code>Kinesis stream</code> as your source.</p>
                *                </note>
                *             </li>
                *             <li>
                *                <p>Associate that firehose to your web ACL using a <code>PutLoggingConfiguration</code> request.</p>
                *             </li>
                *          </ol>
                *
                *          <p>When you successfully enable logging using a <code>PutLoggingConfiguration</code> request, AWS WAF will create a service linked role with the necessary permissions to write logs to the Amazon Kinesis Data Firehose.  For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging.html">Logging Web ACL Traffic Information</a> in the <i>AWS WAF Developer Guide</i>.</p>
                */
            putLoggingConfiguration(args: PutLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutLoggingConfigurationCommandOutput>;
            putLoggingConfiguration(args: PutLoggingConfigurationCommandInput, cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void): void;
            putLoggingConfiguration(args: PutLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Attaches an IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.</p>
                *          <p>The <code>PutPermissionPolicy</code> is subject to the following restrictions:</p>
                *          <ul>
                *             <li>
                *                <p>You can attach only one policy with each <code>PutPermissionPolicy</code> request.</p>
                *             </li>
                *             <li>
                *                <p>The policy must include an <code>Effect</code>, <code>Action</code> and <code>Principal</code>. </p>
                *             </li>
                *             <li>
                *
                *                <p>
                *                   <code>Effect</code> must specify <code>Allow</code>.</p>
                *             </li>
                *             <li>
                *                <p>The <code>Action</code> in the policy must be <code>waf:UpdateWebACL</code>, <code>waf-regional:UpdateWebACL</code>, <code>waf:GetRuleGroup</code> and <code>waf-regional:GetRuleGroup</code> . Any extra or wildcard actions in the policy will be rejected.</p>
                *             </li>
                *             <li>
                *                <p>The policy cannot include a <code>Resource</code> parameter.</p>
                *             </li>
                *             <li>
                *                <p>The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup must exist in the same region.</p>
                *             </li>
                *             <li>
                *                <p>The user making the request must be the owner of the RuleGroup.</p>
                *             </li>
                *             <li>
                *                <p>Your policy must be composed using IAM Policy version 2012-10-17.</p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">IAM Policies</a>.  </p>
                *
                *          <p>An example of a valid policy parameter is shown in the Examples section below.</p>
                */
            putPermissionPolicy(args: PutPermissionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutPermissionPolicyCommandOutput>;
            putPermissionPolicy(args: PutPermissionPolicyCommandInput, cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void): void;
            putPermissionPolicy(args: PutPermissionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *         <p>Associates tags with the specified AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
                *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can use this action to tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p></p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>ByteMatchTuple</a> objects (filters) in a <a>ByteMatchSet</a>. For each <code>ByteMatchTuple</code> object,
                * 			you specify the following values: </p>
                * 		       <ul>
                *             <li>
                *                <p>Whether to insert or delete the object from the array. If you want to change a <code>ByteMatchSetUpdate</code> object,
                * 				you delete the existing object and add a new one.</p>
                *             </li>
                *             <li>
                *                <p>The part of a web request that you want AWS WAF to inspect, such as a query string or the value of the <code>User-Agent</code> header. </p>
                *             </li>
                *             <li>
                *                <p>The bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to look for. For more information, including how you specify
                * 				the values for the AWS WAF API and the AWS CLI or SDKs, see <code>TargetString</code> in the <a>ByteMatchTuple</a> data type. </p>
                *             </li>
                *             <li>
                *                <p>Where to look, such as at the beginning or the end of a query string.</p>
                *             </li>
                *             <li>
                *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
                *             </li>
                *          </ul>
                * 		       <p>For example, you can add a <code>ByteMatchSetUpdate</code> object that matches web requests in which <code>User-Agent</code> headers contain
                * 			the string <code>BadBot</code>. You can then configure AWS WAF to block those requests.</p>
                * 		       <p>To create and configure a <code>ByteMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create a <code>ByteMatchSet.</code> For more information, see <a>CreateByteMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateByteMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateByteMatchSet</code> request to specify the part of the request that you want AWS WAF to inspect
                * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateByteMatchSet(args: UpdateByteMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateByteMatchSetCommandOutput>;
            updateByteMatchSet(args: UpdateByteMatchSetCommandInput, cb: (err: any, data?: UpdateByteMatchSetCommandOutput) => void): void;
            updateByteMatchSet(args: UpdateByteMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateByteMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <a>GeoMatchConstraint</a> objects in an <code>GeoMatchSet</code>. For each <code>GeoMatchConstraint</code> object,
                * 			you specify the following values: </p>
                * 		       <ul>
                *             <li>
                *                       <p>Whether to insert or delete the object from the array. If you want to change an <code>GeoMatchConstraint</code> object, you delete the existing object and add a new one.</p>
                *                   </li>
                *             <li>
                * 				           <p>The <code>Type</code>. The only valid value for <code>Type</code> is <code>Country</code>.</p>
                * 				        </li>
                *             <li>
                *                <p>The <code>Value</code>, which is a two character code for the country to add to the <code>GeoMatchConstraint</code> object. Valid codes are listed in <a>GeoMatchConstraint$Value</a>.</p>
                *             </li>
                *          </ul>
                *
                * 		       <p>To create and configure an <code>GeoMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Submit a <a>CreateGeoMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateGeoMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateGeoMatchSet</code> request to specify the country that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>When you update an <code>GeoMatchSet</code>, you specify the country that you want to add and/or the country that you want to delete.
                * 			If you want to change a country, you delete the existing country and add the new one.</p>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateGeoMatchSet(args: UpdateGeoMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateGeoMatchSetCommandOutput>;
            updateGeoMatchSet(args: UpdateGeoMatchSetCommandInput, cb: (err: any, data?: UpdateGeoMatchSetCommandOutput) => void): void;
            updateGeoMatchSet(args: UpdateGeoMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateGeoMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <a>IPSetDescriptor</a> objects in an
                *          <code>IPSet</code>. For each <code>IPSetDescriptor</code> object, you specify the following
                *          values: </p>
                *          <ul>
                *             <li>
                *                <p>Whether to insert or delete the object from the array. If you want to change an
                *                   <code>IPSetDescriptor</code> object, you delete the existing object and add a new
                *                one.</p>
                *             </li>
                *             <li>
                *                <p>The IP address version, <code>IPv4</code> or <code>IPv6</code>. </p>
                *             </li>
                *             <li>
                *                <p>The IP address in CIDR notation, for example, <code>192.0.2.0/24</code> (for
                *                the range of IP addresses from <code>192.0.2.0</code> to <code>192.0.2.255</code>) or
                *                   <code>192.0.2.44/32</code> (for the individual IP address
                *                <code>192.0.2.44</code>). </p>
                *             </li>
                *          </ul>
                *          <p>AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32. AWS
                *          WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128. For more
                *          information about CIDR notation, see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
                *             Inter-Domain Routing</a>.</p>
                *          <p>IPv6 addresses can be represented using any of the following formats:</p>
                *          <ul>
                *             <li>
                *                <p>1111:0000:0000:0000:0000:0000:0000:0111/128</p>
                *             </li>
                *             <li>
                *                <p>1111:0:0:0:0:0:0:0111/128</p>
                *             </li>
                *             <li>
                *                <p>1111::0111/128</p>
                *             </li>
                *             <li>
                *                <p>1111::111/128</p>
                *             </li>
                *          </ul>
                *          <p>You use an <code>IPSet</code> to specify which web requests you want to allow or
                *          block based on the IP addresses that the requests originated from. For example, if you're
                *          receiving a lot of requests from one or a small number of IP addresses and you want to
                *          block the requests, you can create an <code>IPSet</code> that specifies those IP addresses,
                *          and then configure AWS WAF to block the requests. </p>
                *          <p>To create and configure an <code>IPSet</code>, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Submit a <a>CreateIPSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
                *                in the <code>ChangeToken</code> parameter of an <a>UpdateIPSet</a>
                *                request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateIPSet</code> request to specify the IP addresses that you
                *                want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                *          <p>When you update an <code>IPSet</code>, you specify the IP addresses that you want to
                *          add and/or the IP addresses that you want to delete. If you want to change an IP address,
                *          you delete the existing IP address and add the new one.</p>
                *          <p>You can insert a maximum of 1000 addresses in a single
                *          request.</p>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP
                *          requests, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
                *             Developer Guide</a>.</p>
                */
            updateIPSet(args: UpdateIPSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateIPSetCommandOutput>;
            updateIPSet(args: UpdateIPSetCommandInput, cb: (err: any, data?: UpdateIPSetCommandOutput) => void): void;
            updateIPSet(args: UpdateIPSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateIPSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <a>Predicate</a> objects in a rule and updates the
                *             <code>RateLimit</code> in the rule. </p>
                *          <p>Each <code>Predicate</code> object identifies a predicate, such as a <a>ByteMatchSet</a> or an <a>IPSet</a>, that specifies the web requests
                *          that you want to block or count. The <code>RateLimit</code> specifies the number of
                *          requests every five minutes that triggers the rule.</p>
                *          <p>If you add more than one predicate to a <code>RateBasedRule</code>, a request must
                *          match all the predicates and exceed the <code>RateLimit</code> to be counted or blocked.
                *          For example, suppose you add the following to a <code>RateBasedRule</code>:</p>
                *          <ul>
                *             <li>
                *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
                *                   <code>User-Agent</code> header</p>
                *             </li>
                *          </ul>
                *          <p>Further, you specify a
                *             <code>RateLimit</code> of 1,000.</p>
                *          <p>You then add the <code>RateBasedRule</code> to a <code>WebACL</code> and specify that
                *          you want to block requests that satisfy the rule. For a request to be blocked, it must come
                *          from the IP address 192.0.2.44 <i>and</i> the <code>User-Agent</code> header
                *          in the request must contain the value <code>BadBot</code>. Further, requests that match
                *          these two conditions much be received at a rate of more than 1,000 every five minutes. If
                *          the rate drops below this limit, AWS WAF no longer blocks the requests.</p>
                *
                * 		       <p>As a second example, suppose you want to limit requests to a particular page on your site. To do this, you could add the following to a
                *             <code>RateBasedRule</code>:</p>
                *
                *
                *          <ul>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> with <code>FieldToMatch</code> of <code>URI</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>PositionalConstraint</code> of <code>STARTS_WITH</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>A <code>TargetString</code> of <code>login</code>
                *                </p>
                *             </li>
                *          </ul>
                *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
                *          <p>By adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you could limit requests to your login page without affecting the rest of your site.</p>
                */
            updateRateBasedRule(args: UpdateRateBasedRuleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRateBasedRuleCommandOutput>;
            updateRateBasedRule(args: UpdateRateBasedRuleCommandInput, cb: (err: any, data?: UpdateRateBasedRuleCommandOutput) => void): void;
            updateRateBasedRule(args: UpdateRateBasedRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRateBasedRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <a>RegexMatchTuple</a> objects (filters) in a <a>RegexMatchSet</a>. For each <code>RegexMatchSetUpdate</code> object,
                * 			you specify the following values: </p>
                * 		       <ul>
                *             <li>
                *                <p>Whether to insert or delete the object from the array. If you want to change a <code>RegexMatchSetUpdate</code> object,
                * 				you delete the existing object and add a new one.</p>
                *             </li>
                *             <li>
                *                <p>The part of a web request that you want AWS WAF to inspectupdate, such as a query string or the value of the <code>User-Agent</code> header. </p>
                *             </li>
                *             <li>
                *                <p>The identifier of the pattern (a regular expression) that you want AWS WAF to look for. For more information, see <a>RegexPatternSet</a>. </p>
                *             </li>
                *             <li>
                *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
                *             </li>
                *          </ul>
                * 		       <p> For example, you can create a <code>RegexPatternSet</code> that matches any requests with <code>User-Agent</code> headers
                *          that contain the string <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
                * 		       <p>To create and configure a <code>RegexMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create a <code>RegexMatchSet.</code> For more information, see <a>CreateRegexMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateRegexMatchSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRegexMatchSet</code> request to specify the part of the request that you want AWS WAF to inspect
                * 				(for example, the header or the URI) and the identifier of the <code>RegexPatternSet</code> that contain the regular expression patters you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateRegexMatchSet(args: UpdateRegexMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRegexMatchSetCommandOutput>;
            updateRegexMatchSet(args: UpdateRegexMatchSetCommandInput, cb: (err: any, data?: UpdateRegexMatchSetCommandOutput) => void): void;
            updateRegexMatchSet(args: UpdateRegexMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRegexMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <code>RegexPatternString</code> objects in a <a>RegexPatternSet</a>. For each <code>RegexPatternString</code> object,
                * 			you specify the following values: </p>
                * 		       <ul>
                *             <li>
                * 			            <p>Whether to insert or delete the <code>RegexPatternString</code>.</p>
                *             </li>
                *             <li>
                *                <p>The regular expression pattern that you want to insert or delete. For more information, see <a>RegexPatternSet</a>. </p>
                *             </li>
                *          </ul>
                * 		       <p> For example, you can create a <code>RegexPatternString</code> such as <code>B[a@]dB[o0]t</code>. AWS WAF will match this <code>RegexPatternString</code> to:</p>
                *                 <ul>
                *             <li>
                * 				           <p>BadBot</p>
                * 				        </li>
                *             <li>
                * 				           <p>BadB0t</p>
                * 				        </li>
                *             <li>
                * 				           <p>B@dBot</p>
                * 				        </li>
                *             <li>
                * 				           <p>B@dB0t</p>
                * 				        </li>
                *          </ul>
                * 		       <p>To create and configure a <code>RegexPatternSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create a <code>RegexPatternSet.</code> For more information, see <a>CreateRegexPatternSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateRegexPatternSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRegexPatternSet</code> request to specify the regular expression pattern that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateRegexPatternSet(args: UpdateRegexPatternSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRegexPatternSetCommandOutput>;
            updateRegexPatternSet(args: UpdateRegexPatternSetCommandInput, cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void): void;
            updateRegexPatternSet(args: UpdateRegexPatternSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>Predicate</a> objects in a <code>Rule</code>. Each
                *             <code>Predicate</code> object identifies a predicate, such as a <a>ByteMatchSet</a> or an <a>IPSet</a>, that specifies the web requests
                *          that you want to allow, block, or count. If you add more than one predicate to a
                *             <code>Rule</code>, a request must match all of the specifications to be allowed,
                *          blocked, or counted. For example, suppose
                *          that
                *          you add the following to a <code>Rule</code>: </p>
                * 		       <ul>
                *             <li>
                *                <p>A <code>ByteMatchSet</code> that matches the value <code>BadBot</code> in the <code>User-Agent</code> header</p>
                *             </li>
                *             <li>
                *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44</code>
                *                </p>
                *             </li>
                *          </ul>
                * 		       <p>You then add the <code>Rule</code> to a <code>WebACL</code> and specify that you want to block requests that satisfy the <code>Rule</code>.
                * 			For a request to be blocked, the <code>User-Agent</code> header in the request must contain the value <code>BadBot</code>
                * 			         <i>and</i> the request must originate from the IP address 192.0.2.44.</p>
                * 		       <p>To create and configure a <code>Rule</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create and update the predicates that you want to include in the <code>Rule</code>.</p>
                *             </li>
                *             <li>
                *                <p>Create the <code>Rule</code>. See <a>CreateRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateRule</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRule</code> request to add predicates to the <code>Rule</code>.</p>
                *             </li>
                *             <li>
                *                <p>Create and update a <code>WebACL</code> that contains the <code>Rule</code>. See <a>CreateWebACL</a>.</p>
                *             </li>
                *          </ol>
                * 		       <p>If you want to replace one <code>ByteMatchSet</code> or <code>IPSet</code> with another, you delete the existing one and
                * 			add the new one.</p>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateRule(args: UpdateRuleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRuleCommandOutput>;
            updateRule(args: UpdateRuleCommandInput, cb: (err: any, data?: UpdateRuleCommandOutput) => void): void;
            updateRule(args: UpdateRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRuleCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                *          <p>Inserts or deletes <a>ActivatedRule</a> objects in a <code>RuleGroup</code>.</p>
                * 	        <p>You can only insert <code>REGULAR</code> rules into a rule group.</p>
                *          <p>You can have a maximum of ten rules per rule group.</p>
                *
                *
                *          <p>To create and configure a <code>RuleGroup</code>, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Create and update the <code>Rules</code> that you want to include in the <code>RuleGroup</code>. See <a>CreateRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                *                <a>UpdateRuleGroup</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateRuleGroup</code> request to add <code>Rules</code> to the <code>RuleGroup</code>.</p>
                *             </li>
                *             <li>
                *                <p>Create and update a <code>WebACL</code> that contains the <code>RuleGroup</code>. See <a>CreateWebACL</a>.</p>
                *             </li>
                *          </ol>
                *          <p>If you want to replace one <code>Rule</code> with another, you delete the existing one and
                *          add the new one.</p>
                *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                *          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateRuleGroup(args: UpdateRuleGroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRuleGroupCommandOutput>;
            updateRuleGroup(args: UpdateRuleGroupCommandInput, cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void): void;
            updateRuleGroup(args: UpdateRuleGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>SizeConstraint</a> objects (filters) in a <a>SizeConstraintSet</a>. For each <code>SizeConstraint</code> object,
                * 			you specify the following values: </p>
                * 		       <ul>
                *             <li>
                *                <p>Whether to insert or delete the object from the array. If you want to change a <code>SizeConstraintSetUpdate</code> object,
                * 				you delete the existing object and add a new one.</p>
                *             </li>
                *             <li>
                *                <p>The part of a web request that you want AWS WAF to evaluate, such as the length of a query string or the length of the
                * 				<code>User-Agent</code> header.</p>
                *             </li>
                *             <li>
                *                <p>Whether to perform any transformations on the request, such as converting it to lowercase, before checking its length.
                * 				Note that transformations of the request body are not supported because the AWS resource forwards only the first <code>8192</code> bytes
                * 				of your request to AWS WAF.</p>
                * 				           <p>You can only specify a single type of TextTransformation.</p>
                *             </li>
                *             <li>
                *                <p>A <code>ComparisonOperator</code> used for evaluating the selected part of the request against the specified <code>Size</code>, such as
                * 				equals, greater than, less than, and so on.</p>
                *             </li>
                *             <li>
                *                <p>The length, in bytes, that you want AWS WAF to watch for in selected part of the request. The length is computed after applying the transformation.</p>
                *             </li>
                *          </ul>
                * 		       <p>For example, you can add a <code>SizeConstraintSetUpdate</code> object that matches web requests in which the length of the
                * 			<code>User-Agent</code> header is greater than 100 bytes. You can then configure AWS WAF to block those requests.</p>
                * 		  	    <p>To create and configure a <code>SizeConstraintSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create a <code>SizeConstraintSet.</code> For more information, see <a>CreateSizeConstraintSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<code>UpdateSizeConstraintSet</code> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateSizeConstraintSet</code> request to specify the part of the request that you want AWS WAF to inspect
                * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateSizeConstraintSet(args: UpdateSizeConstraintSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSizeConstraintSetCommandOutput>;
            updateSizeConstraintSet(args: UpdateSizeConstraintSetCommandInput, cb: (err: any, data?: UpdateSizeConstraintSetCommandOutput) => void): void;
            updateSizeConstraintSet(args: UpdateSizeConstraintSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSizeConstraintSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>SqlInjectionMatchTuple</a> objects (filters) in a <a>SqlInjectionMatchSet</a>.
                * 			For each <code>SqlInjectionMatchTuple</code> object, you specify the following values:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>Action</code>: Whether to insert the object into or delete the object from the array. To change a
                * 				<code>SqlInjectionMatchTuple</code>, you delete the existing object and add a new one.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FieldToMatch</code>: The part of web requests that you want AWS WAF to inspect and, if you want AWS WAF to inspect a header or custom query parameter,
                * 				the name of the header or parameter.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TextTransformation</code>: Which text transformation, if any, to perform on the web request before
                * 				inspecting the request for snippets of malicious SQL code.</p>
                * 				           <p>You can only specify a single type of  TextTransformation.</p>
                *             </li>
                *          </ul>
                * 		       <p>You use <code>SqlInjectionMatchSet</code> objects to specify which CloudFront
                *          requests that
                *          you want to allow, block, or count. For example, if you're receiving
                *          requests that contain snippets of SQL code in the query string and you want to block the
                *          requests, you can create a <code>SqlInjectionMatchSet</code> with the applicable settings,
                *          and then configure AWS WAF to block the requests. </p>
                * 		       <p>To create and configure a <code>SqlInjectionMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Submit a <a>CreateSqlInjectionMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateIPSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateSqlInjectionMatchSet</code> request to specify the parts of web requests that you want AWS WAF to
                * 				inspect for snippets of SQL code.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateSqlInjectionMatchSet(args: UpdateSqlInjectionMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSqlInjectionMatchSetCommandOutput>;
            updateSqlInjectionMatchSet(args: UpdateSqlInjectionMatchSetCommandInput, cb: (err: any, data?: UpdateSqlInjectionMatchSetCommandOutput) => void): void;
            updateSqlInjectionMatchSet(args: UpdateSqlInjectionMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSqlInjectionMatchSetCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>ActivatedRule</a> objects in a <code>WebACL</code>. Each <code>Rule</code> identifies
                * 			web requests that you want to allow, block, or count. When you update a <code>WebACL</code>, you specify the following values:</p>
                * 		       <ul>
                *             <li>
                *                <p>A default action for the <code>WebACL</code>, either <code>ALLOW</code> or <code>BLOCK</code>.
                * 				AWS WAF performs the default action if a request doesn't match the criteria in any of the <code>Rules</code> in a <code>WebACL</code>.</p>
                *             </li>
                *             <li>
                *                <p>The <code>Rules</code> that you want to add
                *                or
                *                delete. If you want to replace one <code>Rule</code> with another, you delete the
                *                existing <code>Rule</code> and add the new one.</p>
                *             </li>
                *             <li>
                *                <p>For each <code>Rule</code>, whether you want AWS WAF to allow requests, block requests, or count requests that match
                * 				the conditions in the <code>Rule</code>.</p>
                *             </li>
                *             <li>
                *                <p>The order in which you want AWS WAF to evaluate the <code>Rules</code> in a
                *                   <code>WebACL</code>. If you add more than one <code>Rule</code> to a
                *                   <code>WebACL</code>, AWS WAF evaluates each request against the <code>Rules</code>
                *                in order based on the value of <code>Priority</code>. (The <code>Rule</code> that has
                *                the lowest value for <code>Priority</code> is evaluated first.) When a web request
                *                matches all
                *                the
                *                predicates (such as <code>ByteMatchSets</code> and <code>IPSets</code>) in a
                *                   <code>Rule</code>, AWS WAF immediately takes the corresponding action, allow or
                *                block, and doesn't evaluate the request against the remaining <code>Rules</code> in
                *                the <code>WebACL</code>, if any. </p>
                *             </li>
                *          </ul>
                *
                * 		       <p>To create and configure a <code>WebACL</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Create and update the predicates that you want to include in <code>Rules</code>.
                * 				For more information, see <a>CreateByteMatchSet</a>, <a>UpdateByteMatchSet</a>, <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
                * 				<a>CreateSqlInjectionMatchSet</a>, and <a>UpdateSqlInjectionMatchSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Create and update the <code>Rules</code> that you want to include in the <code>WebACL</code>. For more information, see
                * 				<a>CreateRule</a> and <a>UpdateRule</a>.</p>
                *             </li>
                *             <li>
                *                <p>Create a <code>WebACL</code>. See <a>CreateWebACL</a>.</p>
                *             </li>
                *             <li>
                *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateWebACL</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateWebACL</code> request to specify the <code>Rules</code>
                *                that you want to include in the <code>WebACL</code>, to specify the default action,
                *                and to associate the <code>WebACL</code> with a CloudFront distribution. </p>
                *                <p>The <code>ActivatedRule</code> can be a rule group. If you specify a rule group
                *                as your
                *                <code>ActivatedRule</code>
                *                ,
                *                you can exclude specific rules from that rule group.</p>
                *                <p>If you already have a rule group associated with a web ACL and want to submit
                *                an <code>UpdateWebACL</code> request to exclude certain rules from that rule group,
                *                you must first remove the rule group from the web ACL, the re-insert it again,
                *                specifying the excluded rules.
                *                For details,
                *                see
                *                   <a>ActivatedRule$ExcludedRules</a>
                *                .
                *                </p>
                *             </li>
                *          </ol>
                *          <p>Be aware that if you try to add a RATE_BASED rule to a web ACL without setting the rule type when first creating the rule, the  <a>UpdateWebACL</a> request will fail because the request tries to add a REGULAR rule (the default rule type) with the specified ID, which does not exist. 		</p>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateWebACL(args: UpdateWebACLCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWebACLCommandOutput>;
            updateWebACL(args: UpdateWebACLCommandInput, cb: (err: any, data?: UpdateWebACLCommandOutput) => void): void;
            updateWebACL(args: UpdateWebACLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWebACLCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This is <b>AWS WAF Classic</b> documentation. For
                *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
                *       WAF Classic</a> in the developer guide.</p>
                *             <p>
                *                <b>For the latest version of AWS
                *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
                *          </note>
                * 		       <p>Inserts or deletes <a>XssMatchTuple</a> objects (filters) in an <a>XssMatchSet</a>.
                * 			For each <code>XssMatchTuple</code> object, you specify the following values:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>Action</code>: Whether to insert the object into or delete the object from the
                *                array. To change an
                *                <code>XssMatchTuple</code>, you delete the existing object and add a new
                *                one.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FieldToMatch</code>: The part of web requests that you want AWS WAF to inspect and, if you want AWS WAF to inspect a header or custom query parameter,
                * 				the name of the header or parameter.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TextTransformation</code>: Which text transformation, if any, to perform on the web request before
                * 				inspecting the request for cross-site scripting attacks.</p>
                * 				           <p>You can only specify a single type of TextTransformation.</p>
                *             </li>
                *          </ul>
                * 		       <p>You use <code>XssMatchSet</code> objects to specify which CloudFront requests
                *          that
                *          you want to allow, block, or count. For example, if you're receiving
                *          requests that contain cross-site scripting attacks in the request body and you want to
                *          block the requests, you can create an <code>XssMatchSet</code> with the applicable
                *          settings, and then configure AWS WAF to block the requests. </p>
                * 		       <p>To create and configure an <code>XssMatchSet</code>, perform the following steps:</p>
                * 		       <ol>
                *             <li>
                *                <p>Submit a <a>CreateXssMatchSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
                * 				<a>UpdateIPSet</a> request.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <code>UpdateXssMatchSet</code> request to specify the parts of web requests that you want AWS WAF to
                * 				inspect for cross-site scripting attacks.</p>
                *             </li>
                *          </ol>
                * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
                * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
                */
            updateXssMatchSet(args: UpdateXssMatchSetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateXssMatchSetCommandOutput>;
            updateXssMatchSet(args: UpdateXssMatchSetCommandInput, cb: (err: any, data?: UpdateXssMatchSetCommandOutput) => void): void;
            updateXssMatchSet(args: UpdateXssMatchSetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateXssMatchSetCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateByteMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateByteMatchSetRequest, CreateByteMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateByteMatchSetCommandInput extends CreateByteMatchSetRequest {
    }
    export interface CreateByteMatchSetCommandOutput extends CreateByteMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates a <code>ByteMatchSet</code>. You then use <a>UpdateByteMatchSet</a> to identify the part of a
        * 			web request that you want AWS WAF to inspect, such as the values of the <code>User-Agent</code> header or the query string.
        * 			For example, you can create a <code>ByteMatchSet</code> that matches any requests with <code>User-Agent</code> headers
        * 			that contain the string <code>BadBot</code>. You can then configure AWS WAF to reject those requests.</p>
        * 		       <p>To create and configure a <code>ByteMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateByteMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateByteMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateByteMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateByteMatchSet</a> request to specify the part of the request that you want AWS WAF to inspect
        * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateByteMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateByteMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateByteMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateByteMatchSetCommandInput} for command's `input` shape.
        * @see {@link CreateByteMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateByteMatchSetCommand extends $Command<CreateByteMatchSetCommandInput, CreateByteMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateByteMatchSetCommandInput;
            constructor(input: CreateByteMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateByteMatchSetCommandInput, CreateByteMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateGeoMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateGeoMatchSetRequest, CreateGeoMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateGeoMatchSetCommandInput extends CreateGeoMatchSetRequest {
    }
    export interface CreateGeoMatchSetCommandOutput extends CreateGeoMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Creates an <a>GeoMatchSet</a>, which you use to specify which web requests you want to allow or block based on the country
        * 			that the requests originate from. For example, if you're receiving a lot of requests from one or more countries and you want to block the requests, you can create an <code>GeoMatchSet</code> that contains those countries and then configure AWS WAF to block the requests. </p>
        * 		       <p>To create and configure a <code>GeoMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateGeoMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateGeoMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateGeoMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateGeoMatchSetSet</code> request to specify the countries that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateGeoMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateGeoMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateGeoMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateGeoMatchSetCommandInput} for command's `input` shape.
        * @see {@link CreateGeoMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateGeoMatchSetCommand extends $Command<CreateGeoMatchSetCommandInput, CreateGeoMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateGeoMatchSetCommandInput;
            constructor(input: CreateGeoMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateGeoMatchSetCommandInput, CreateGeoMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateIPSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateIPSetRequest, CreateIPSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateIPSetCommandInput extends CreateIPSetRequest {
    }
    export interface CreateIPSetCommandOutput extends CreateIPSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates an <a>IPSet</a>, which you use to specify which web requests
        *          that
        *          you want to allow or block based on the IP addresses that the requests
        *          originate from. For example, if you're receiving a lot of requests from one or more
        *          individual IP addresses or one or more ranges of IP addresses and you want to block the
        *          requests, you can create an <code>IPSet</code> that contains those IP addresses and then
        *          configure AWS WAF to block the requests. </p>
        * 		       <p>To create and configure an <code>IPSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateIPSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateIPSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateIPSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateIPSet</code> request to specify the IP addresses that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateIPSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateIPSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateIPSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateIPSetCommandInput} for command's `input` shape.
        * @see {@link CreateIPSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateIPSetCommand extends $Command<CreateIPSetCommandInput, CreateIPSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateIPSetCommandInput;
            constructor(input: CreateIPSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateIPSetCommandInput, CreateIPSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRateBasedRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRateBasedRuleRequest, CreateRateBasedRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateRateBasedRuleCommandInput extends CreateRateBasedRuleRequest {
    }
    export interface CreateRateBasedRuleCommandOutput extends CreateRateBasedRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Creates a <a>RateBasedRule</a>. The <code>RateBasedRule</code> contains a
        *             <code>RateLimit</code>, which specifies the maximum number of requests that AWS WAF allows
        *                 from a specified IP address in a five-minute period.
        *                 The <code>RateBasedRule</code> also
        *          contains the <code>IPSet</code> objects, <code>ByteMatchSet</code> objects, and other
        *          predicates that identify the requests that you want to count or block if these requests
        *          exceed the <code>RateLimit</code>.</p>
        *          <p>If you add more than one predicate to a <code>RateBasedRule</code>, a request not
        *          only must exceed the <code>RateLimit</code>, but it also must match all the
        *          conditions to be counted or blocked. For example, suppose you add the following to a
        *             <code>RateBasedRule</code>:</p>
        *          <ul>
        *             <li>
        *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
        *                   <code>User-Agent</code> header</p>
        *             </li>
        *          </ul>
        *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
        *          <p>You then add the <code>RateBasedRule</code> to a <code>WebACL</code> and specify that
        *          you want to block requests that meet the conditions in the rule. For a request to be
        *          blocked, it must come from the IP address 192.0.2.44 <i>and</i> the
        *             <code>User-Agent</code> header in the request must contain the value
        *          <code>BadBot</code>. Further, requests that match these two conditions must be received at
        *          a rate of more than 1,000 requests every five minutes. If both conditions are met and the
        *          rate is exceeded, AWS WAF blocks the requests. If the rate drops below 1,000 for a
        *          five-minute period, AWS WAF no longer blocks the requests.</p>
        *
        * 		       <p>As a second example, suppose you want to limit requests to a particular page on your site. To do this, you could add the following to a
        *             <code>RateBasedRule</code>:</p>
        *
        *
        *          <ul>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> with <code>FieldToMatch</code> of <code>URI</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>PositionalConstraint</code> of <code>STARTS_WITH</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>TargetString</code> of <code>login</code>
        *                </p>
        *             </li>
        *          </ul>
        *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
        *          <p>By adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you could limit requests to your login page without affecting the rest of your site.</p>
        *
        *
        *          <p>To create and configure a <code>RateBasedRule</code>, perform the following
        *          steps:</p>
        *          <ol>
        *             <li>
        *                <p>Create and update the predicates that you want to include in the rule. For more
        *                information, see <a>CreateByteMatchSet</a>, <a>CreateIPSet</a>,
        *                and <a>CreateSqlInjectionMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
        *                in the <code>ChangeToken</code> parameter of a <code>CreateRule</code>
        *                request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateRateBasedRule</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the
        *                   <code>ChangeToken</code> parameter of an <a>UpdateRule</a>
        *                request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRateBasedRule</code> request to specify the predicates
        *                that you want to include in the rule.</p>
        *             </li>
        *             <li>
        *                <p>Create and update a <code>WebACL</code> that contains the
        *                   <code>RateBasedRule</code>. For more information, see <a>CreateWebACL</a>.</p>
        *             </li>
        *          </ol>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests,
        *          see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer
        *             Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateRateBasedRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateRateBasedRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateRateBasedRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRateBasedRuleCommandInput} for command's `input` shape.
        * @see {@link CreateRateBasedRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateRateBasedRuleCommand extends $Command<CreateRateBasedRuleCommandInput, CreateRateBasedRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateRateBasedRuleCommandInput;
            constructor(input: CreateRateBasedRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRateBasedRuleCommandInput, CreateRateBasedRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRegexMatchSetRequest, CreateRegexMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateRegexMatchSetCommandInput extends CreateRegexMatchSetRequest {
    }
    export interface CreateRegexMatchSetCommandOutput extends CreateRegexMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Creates a <a>RegexMatchSet</a>. You then use <a>UpdateRegexMatchSet</a> to identify the part of a
        *          web request that you want AWS WAF to inspect, such as the values of the <code>User-Agent</code> header or the query string.
        *          For example, you can create a <code>RegexMatchSet</code> that contains a <code>RegexMatchTuple</code> that looks for any requests with <code>User-Agent</code> headers
        *          that match a <code>RegexPatternSet</code> with pattern <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
        *          <p>To create and configure a <code>RegexMatchSet</code>, perform the following steps:</p>
        *          <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        *                   <code>CreateRegexMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateRegexMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        *                   <code>UpdateRegexMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateRegexMatchSet</a> request to specify the part of the request that you want AWS WAF to inspect
        *                   (for example, the header or the URI) and the value, using a <code>RegexPatternSet</code>, that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        *             <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateRegexMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateRegexMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateRegexMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRegexMatchSetCommandInput} for command's `input` shape.
        * @see {@link CreateRegexMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateRegexMatchSetCommand extends $Command<CreateRegexMatchSetCommandInput, CreateRegexMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateRegexMatchSetCommandInput;
            constructor(input: CreateRegexMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRegexMatchSetCommandInput, CreateRegexMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexPatternSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRegexPatternSetRequest, CreateRegexPatternSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateRegexPatternSetCommandInput extends CreateRegexPatternSetRequest {
    }
    export interface CreateRegexPatternSetCommandOutput extends CreateRegexPatternSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Creates a <code>RegexPatternSet</code>. You then use <a>UpdateRegexPatternSet</a> to specify the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
        * 		       <p>To create and configure a <code>RegexPatternSet</code>, perform the following steps:</p>
        *          <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        *                   <code>CreateRegexPatternSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateRegexPatternSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        *                   <code>UpdateRegexPatternSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateRegexPatternSet</a> request to specify the string that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        *             <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateRegexPatternSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateRegexPatternSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateRegexPatternSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRegexPatternSetCommandInput} for command's `input` shape.
        * @see {@link CreateRegexPatternSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateRegexPatternSetCommand extends $Command<CreateRegexPatternSetCommandInput, CreateRegexPatternSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateRegexPatternSetCommandInput;
            constructor(input: CreateRegexPatternSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRegexPatternSetCommandInput, CreateRegexPatternSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRuleRequest, CreateRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateRuleCommandInput extends CreateRuleRequest {
    }
    export interface CreateRuleCommandOutput extends CreateRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates a <code>Rule</code>, which contains the <code>IPSet</code> objects,
        *             <code>ByteMatchSet</code> objects, and other predicates that identify the requests that
        *          you want to block. If you add more than one predicate to a <code>Rule</code>, a request
        *          must match all of the specifications to be allowed or blocked. For example, suppose
        *          that
        *          you add the following to a <code>Rule</code>:</p>
        * 		       <ul>
        *             <li>
        *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the <code>User-Agent</code> header</p>
        *             </li>
        *          </ul>
        * 		       <p>You then add the <code>Rule</code> to a <code>WebACL</code> and specify that you want to blocks requests that satisfy the <code>Rule</code>.
        * 			For a request to be blocked, it must come from the IP address 192.0.2.44 <i>and</i> the <code>User-Agent</code> header in the request
        * 			must contain the value <code>BadBot</code>.</p>
        * 		       <p>To create and configure a <code>Rule</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create and update the predicates that you want to include in the <code>Rule</code>. For more information, see
        * 				<a>CreateByteMatchSet</a>, <a>CreateIPSet</a>, and <a>CreateSqlInjectionMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateRule</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateRule</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateRule</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRule</code> request to specify the predicates that you want to include in the <code>Rule</code>.</p>
        *             </li>
        *             <li>
        *                <p>Create and update a <code>WebACL</code> that contains the <code>Rule</code>. For more information, see <a>CreateWebACL</a>.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRuleCommandInput} for command's `input` shape.
        * @see {@link CreateRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateRuleCommand extends $Command<CreateRuleCommandInput, CreateRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateRuleCommandInput;
            constructor(input: CreateRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRuleCommandInput, CreateRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRuleGroupRequest, CreateRuleGroupResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateRuleGroupCommandInput extends CreateRuleGroupRequest {
    }
    export interface CreateRuleGroupCommandOutput extends CreateRuleGroupResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Creates a <code>RuleGroup</code>. A rule group is a collection of predefined rules that you add to a web ACL. You use <a>UpdateRuleGroup</a> to add rules to the rule group.</p>
        * 	        <p>Rule groups are subject to the following limits:</p>
        * 	        <ul>
        *             <li>
        *                <p>Three rule groups per account. You can request an increase to this limit by contacting customer support.</p>
        *             </li>
        *             <li>
        *                <p>One rule group per web ACL.</p>
        *             </li>
        *             <li>
        *                <p>Ten rules per rule group.</p>
        *             </li>
        *          </ul>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        *          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateRuleGroupCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateRuleGroupCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateRuleGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRuleGroupCommandInput} for command's `input` shape.
        * @see {@link CreateRuleGroupCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateRuleGroupCommand extends $Command<CreateRuleGroupCommandInput, CreateRuleGroupCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateRuleGroupCommandInput;
            constructor(input: CreateRuleGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRuleGroupCommandInput, CreateRuleGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSizeConstraintSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateSizeConstraintSetRequest, CreateSizeConstraintSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateSizeConstraintSetCommandInput extends CreateSizeConstraintSetRequest {
    }
    export interface CreateSizeConstraintSetCommandOutput extends CreateSizeConstraintSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates a <code>SizeConstraintSet</code>. You then use <a>UpdateSizeConstraintSet</a> to identify the part of a
        * 			web request that you want AWS WAF to check for length, such as the length of the <code>User-Agent</code> header or the length of the query string.
        * 			For example, you can create a <code>SizeConstraintSet</code> that matches any requests that have a query string that is longer than 100 bytes.
        * 			You can then configure AWS WAF to reject those requests.</p>
        * 		       <p>To create and configure a <code>SizeConstraintSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateSizeConstraintSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateSizeConstraintSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateSizeConstraintSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateSizeConstraintSet</a> request to specify the part of the request that you want AWS WAF to inspect
        * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateSizeConstraintSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateSizeConstraintSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateSizeConstraintSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSizeConstraintSetCommandInput} for command's `input` shape.
        * @see {@link CreateSizeConstraintSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateSizeConstraintSetCommand extends $Command<CreateSizeConstraintSetCommandInput, CreateSizeConstraintSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateSizeConstraintSetCommandInput;
            constructor(input: CreateSizeConstraintSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSizeConstraintSetCommandInput, CreateSizeConstraintSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSqlInjectionMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateSqlInjectionMatchSetRequest, CreateSqlInjectionMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateSqlInjectionMatchSetCommandInput extends CreateSqlInjectionMatchSetRequest {
    }
    export interface CreateSqlInjectionMatchSetCommandOutput extends CreateSqlInjectionMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates a <a>SqlInjectionMatchSet</a>, which you use to allow, block, or count requests that contain snippets of SQL code in a
        * 			specified part of web requests. AWS WAF searches for character sequences that are likely to be malicious strings.</p>
        * 		       <p>To create and configure a <code>SqlInjectionMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateSqlInjectionMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateSqlInjectionMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateSqlInjectionMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateSqlInjectionMatchSet</a> request to specify the parts of web requests in which you want to
        * 				allow, block, or count malicious SQL code.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateSqlInjectionMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateSqlInjectionMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateSqlInjectionMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSqlInjectionMatchSetCommandInput} for command's `input` shape.
        * @see {@link CreateSqlInjectionMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateSqlInjectionMatchSetCommand extends $Command<CreateSqlInjectionMatchSetCommandInput, CreateSqlInjectionMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateSqlInjectionMatchSetCommandInput;
            constructor(input: CreateSqlInjectionMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSqlInjectionMatchSetCommandInput, CreateSqlInjectionMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateWebACLRequest, CreateWebACLResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateWebACLCommandInput extends CreateWebACLRequest {
    }
    export interface CreateWebACLCommandOutput extends CreateWebACLResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates a <code>WebACL</code>, which contains the <code>Rules</code> that identify the CloudFront web requests that you want to allow, block, or count.
        * 			AWS WAF evaluates <code>Rules</code> in order based on the value of <code>Priority</code> for each <code>Rule</code>.</p>
        * 		       <p>You also specify a default action, either <code>ALLOW</code> or <code>BLOCK</code>. If a web request doesn't match
        * 			any of the <code>Rules</code> in a <code>WebACL</code>, AWS WAF responds to the request with the default action. </p>
        * 		       <p>To create and configure a <code>WebACL</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create and update the <code>ByteMatchSet</code> objects and other predicates that you want to include in <code>Rules</code>.
        * 				For more information, see <a>CreateByteMatchSet</a>, <a>UpdateByteMatchSet</a>, <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
        * 				<a>CreateSqlInjectionMatchSet</a>, and <a>UpdateSqlInjectionMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Create and update the <code>Rules</code> that you want to include in the <code>WebACL</code>. For more information, see
        * 				<a>CreateRule</a> and <a>UpdateRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateWebACL</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateWebACL</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateWebACL</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateWebACL</a> request to specify the <code>Rules</code> that you want to include in the <code>WebACL</code>,
        * 				to specify the default action, and to associate the <code>WebACL</code> with a CloudFront distribution.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateWebACLCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateWebACLCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateWebACLCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateWebACLCommandInput} for command's `input` shape.
        * @see {@link CreateWebACLCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateWebACLCommand extends $Command<CreateWebACLCommandInput, CreateWebACLCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateWebACLCommandInput;
            constructor(input: CreateWebACLCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWebACLCommandInput, CreateWebACLCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLMigrationStackCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateWebACLMigrationStackRequest, CreateWebACLMigrationStackResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateWebACLMigrationStackCommandInput extends CreateWebACLMigrationStackRequest {
    }
    export interface CreateWebACLMigrationStackCommandOutput extends CreateWebACLMigrationStackResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an AWS CloudFormation WAFV2 template for the specified web ACL in the specified Amazon S3 bucket.
        *            Then, in CloudFormation, you create a stack from the template, to create the web ACL and its resources in AWS WAFV2.
        *            Use this to migrate your AWS WAF Classic web ACL to the latest version of AWS WAF.</p>
        *          <p>This is part of a larger migration procedure for web ACLs from AWS WAF Classic to the latest version of AWS WAF.
        *            For the full procedure, including caveats and manual steps to complete
        *            the migration and switch over to the new web ACL, see
        *            <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-migrating-from-classic.html">Migrating your AWS WAF Classic resources to AWS WAF</a> in the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF
        *   Developer Guide</a>.  </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateWebACLMigrationStackCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateWebACLMigrationStackCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateWebACLMigrationStackCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateWebACLMigrationStackCommandInput} for command's `input` shape.
        * @see {@link CreateWebACLMigrationStackCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateWebACLMigrationStackCommand extends $Command<CreateWebACLMigrationStackCommandInput, CreateWebACLMigrationStackCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateWebACLMigrationStackCommandInput;
            constructor(input: CreateWebACLMigrationStackCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWebACLMigrationStackCommandInput, CreateWebACLMigrationStackCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateXssMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateXssMatchSetRequest, CreateXssMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface CreateXssMatchSetCommandInput extends CreateXssMatchSetRequest {
    }
    export interface CreateXssMatchSetCommandOutput extends CreateXssMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Creates an <a>XssMatchSet</a>, which you use to allow, block, or count requests that contain cross-site scripting attacks
        * 			in the specified part of web requests. AWS WAF searches for character sequences that are likely to be malicious strings.</p>
        * 		       <p>To create and configure an <code>XssMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>CreateXssMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>CreateXssMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateXssMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <a>UpdateXssMatchSet</a> request to specify the parts of web requests in which you want to
        * 				allow, block, or count cross-site scripting attacks.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, CreateXssMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, CreateXssMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new CreateXssMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateXssMatchSetCommandInput} for command's `input` shape.
        * @see {@link CreateXssMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class CreateXssMatchSetCommand extends $Command<CreateXssMatchSetCommandInput, CreateXssMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: CreateXssMatchSetCommandInput;
            constructor(input: CreateXssMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateXssMatchSetCommandInput, CreateXssMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteByteMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteByteMatchSetRequest, DeleteByteMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteByteMatchSetCommandInput extends DeleteByteMatchSetRequest {
    }
    export interface DeleteByteMatchSetCommandOutput extends DeleteByteMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes a <a>ByteMatchSet</a>. You can't delete a <code>ByteMatchSet</code> if it's still used in any <code>Rules</code>
        * 			or if it still includes any <a>ByteMatchTuple</a> objects (any filters).</p>
        * 		       <p>If you just want to remove a <code>ByteMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete a <code>ByteMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>ByteMatchSet</code> to remove filters, if any. For more information, see <a>UpdateByteMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteByteMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteByteMatchSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteByteMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteByteMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteByteMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteByteMatchSetCommandInput} for command's `input` shape.
        * @see {@link DeleteByteMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteByteMatchSetCommand extends $Command<DeleteByteMatchSetCommandInput, DeleteByteMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteByteMatchSetCommandInput;
            constructor(input: DeleteByteMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteByteMatchSetCommandInput, DeleteByteMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteGeoMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteGeoMatchSetRequest, DeleteGeoMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteGeoMatchSetCommandInput extends DeleteGeoMatchSetRequest {
    }
    export interface DeleteGeoMatchSetCommandOutput extends DeleteGeoMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes a <a>GeoMatchSet</a>. You can't delete a <code>GeoMatchSet</code> if it's still used in any <code>Rules</code> or
        * 			if it still includes any countries.</p>
        * 		       <p>If you just want to remove a <code>GeoMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete a <code>GeoMatchSet</code> from AWS WAF, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>GeoMatchSet</code> to remove any countries. For more information, see <a>UpdateGeoMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteGeoMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteGeoMatchSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteGeoMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteGeoMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteGeoMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteGeoMatchSetCommandInput} for command's `input` shape.
        * @see {@link DeleteGeoMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteGeoMatchSetCommand extends $Command<DeleteGeoMatchSetCommandInput, DeleteGeoMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteGeoMatchSetCommandInput;
            constructor(input: DeleteGeoMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteGeoMatchSetCommandInput, DeleteGeoMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteIPSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteIPSetRequest, DeleteIPSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteIPSetCommandInput extends DeleteIPSetRequest {
    }
    export interface DeleteIPSetCommandOutput extends DeleteIPSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes an <a>IPSet</a>. You can't delete an <code>IPSet</code> if it's still used in any <code>Rules</code> or
        * 			if it still includes any IP addresses.</p>
        * 		       <p>If you just want to remove an <code>IPSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete an <code>IPSet</code> from AWS WAF, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>IPSet</code> to remove IP address ranges, if any. For more information, see <a>UpdateIPSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteIPSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteIPSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteIPSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteIPSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteIPSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteIPSetCommandInput} for command's `input` shape.
        * @see {@link DeleteIPSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteIPSetCommand extends $Command<DeleteIPSetCommandInput, DeleteIPSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteIPSetCommandInput;
            constructor(input: DeleteIPSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteIPSetCommandInput, DeleteIPSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteLoggingConfigurationRequest, DeleteLoggingConfigurationResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteLoggingConfigurationCommandInput extends DeleteLoggingConfigurationRequest {
    }
    export interface DeleteLoggingConfigurationCommandOutput extends DeleteLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes the <a>LoggingConfiguration</a> from the specified web
        *          ACL.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteLoggingConfigurationCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteLoggingConfigurationCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteLoggingConfigurationCommand extends $Command<DeleteLoggingConfigurationCommandInput, DeleteLoggingConfigurationCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteLoggingConfigurationCommandInput;
            constructor(input: DeleteLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteLoggingConfigurationCommandInput, DeleteLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeletePermissionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeletePermissionPolicyRequest, DeletePermissionPolicyResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeletePermissionPolicyCommandInput extends DeletePermissionPolicyRequest {
    }
    export interface DeletePermissionPolicyCommandOutput extends DeletePermissionPolicyResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes an IAM policy from the specified RuleGroup.</p>
        *          <p>The user making the request must be the owner of the RuleGroup.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeletePermissionPolicyCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeletePermissionPolicyCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeletePermissionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePermissionPolicyCommandInput} for command's `input` shape.
        * @see {@link DeletePermissionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeletePermissionPolicyCommand extends $Command<DeletePermissionPolicyCommandInput, DeletePermissionPolicyCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeletePermissionPolicyCommandInput;
            constructor(input: DeletePermissionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePermissionPolicyCommandInput, DeletePermissionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRateBasedRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRateBasedRuleRequest, DeleteRateBasedRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteRateBasedRuleCommandInput extends DeleteRateBasedRuleRequest {
    }
    export interface DeleteRateBasedRuleCommandOutput extends DeleteRateBasedRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes a <a>RateBasedRule</a>. You can't delete a rule if
        *          it's still used in any <code>WebACL</code> objects or if it still includes any predicates,
        *          such as <code>ByteMatchSet</code> objects.</p>
        *          <p>If you just want to remove a rule from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
        *          <p>To permanently delete a <code>RateBasedRule</code> from AWS WAF, perform the following
        *          steps:</p>
        *          <ol>
        *             <li>
        *                <p>Update the <code>RateBasedRule</code> to remove predicates, if any. For more
        *                information, see <a>UpdateRateBasedRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
        *                in the <code>ChangeToken</code> parameter of a <code>DeleteRateBasedRule</code>
        *                request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteRateBasedRule</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteRateBasedRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteRateBasedRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteRateBasedRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRateBasedRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteRateBasedRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteRateBasedRuleCommand extends $Command<DeleteRateBasedRuleCommandInput, DeleteRateBasedRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteRateBasedRuleCommandInput;
            constructor(input: DeleteRateBasedRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRateBasedRuleCommandInput, DeleteRateBasedRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRegexMatchSetRequest, DeleteRegexMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteRegexMatchSetCommandInput extends DeleteRegexMatchSetRequest {
    }
    export interface DeleteRegexMatchSetCommandOutput extends DeleteRegexMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes a <a>RegexMatchSet</a>. You can't delete a <code>RegexMatchSet</code> if it's still used in any <code>Rules</code>
        *         or if it still includes any <code>RegexMatchTuples</code> objects (any filters).</p>
        * 		       <p>If you just want to remove a <code>RegexMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete a <code>RegexMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>RegexMatchSet</code> to remove filters, if any. For more information, see <a>UpdateRegexMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteRegexMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteRegexMatchSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteRegexMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteRegexMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteRegexMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRegexMatchSetCommandInput} for command's `input` shape.
        * @see {@link DeleteRegexMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteRegexMatchSetCommand extends $Command<DeleteRegexMatchSetCommandInput, DeleteRegexMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteRegexMatchSetCommandInput;
            constructor(input: DeleteRegexMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRegexMatchSetCommandInput, DeleteRegexMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexPatternSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRegexPatternSetRequest, DeleteRegexPatternSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteRegexPatternSetCommandInput extends DeleteRegexPatternSetRequest {
    }
    export interface DeleteRegexPatternSetCommandOutput extends DeleteRegexPatternSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes a <a>RegexPatternSet</a>. You can't delete a <code>RegexPatternSet</code> if it's still used in any <code>RegexMatchSet</code>
        *          or if the <code>RegexPatternSet</code> is not empty. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteRegexPatternSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteRegexPatternSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteRegexPatternSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRegexPatternSetCommandInput} for command's `input` shape.
        * @see {@link DeleteRegexPatternSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteRegexPatternSetCommand extends $Command<DeleteRegexPatternSetCommandInput, DeleteRegexPatternSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteRegexPatternSetCommandInput;
            constructor(input: DeleteRegexPatternSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRegexPatternSetCommandInput, DeleteRegexPatternSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRuleRequest, DeleteRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteRuleCommandInput extends DeleteRuleRequest {
    }
    export interface DeleteRuleCommandOutput extends DeleteRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes a <a>Rule</a>. You can't delete a <code>Rule</code> if it's still used in any <code>WebACL</code>
        * 			objects or if it still includes any predicates, such as <code>ByteMatchSet</code> objects.</p>
        * 		       <p>If you just want to remove a <code>Rule</code> from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
        * 		       <p>To permanently delete a <code>Rule</code> from AWS WAF, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>Rule</code> to remove predicates, if any. For more information, see <a>UpdateRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteRule</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteRule</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteRuleCommand extends $Command<DeleteRuleCommandInput, DeleteRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteRuleCommandInput;
            constructor(input: DeleteRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRuleCommandInput, DeleteRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRuleGroupRequest, DeleteRuleGroupResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteRuleGroupCommandInput extends DeleteRuleGroupRequest {
    }
    export interface DeleteRuleGroupCommandOutput extends DeleteRuleGroupResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Permanently deletes a <a>RuleGroup</a>. You can't delete a <code>RuleGroup</code> if it's still used in any <code>WebACL</code>
        *          objects or if it still includes any rules.</p>
        *          <p>If you just want to remove a <code>RuleGroup</code> from a <code>WebACL</code>, use <a>UpdateWebACL</a>.</p>
        *          <p>To permanently delete a <code>RuleGroup</code> from AWS WAF, perform the following steps:</p>
        *          <ol>
        *             <li>
        *                <p>Update the <code>RuleGroup</code> to remove rules, if any. For more information, see <a>UpdateRuleGroup</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        *                <code>DeleteRuleGroup</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteRuleGroup</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteRuleGroupCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteRuleGroupCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteRuleGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRuleGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteRuleGroupCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteRuleGroupCommand extends $Command<DeleteRuleGroupCommandInput, DeleteRuleGroupCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteRuleGroupCommandInput;
            constructor(input: DeleteRuleGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRuleGroupCommandInput, DeleteRuleGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSizeConstraintSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteSizeConstraintSetRequest, DeleteSizeConstraintSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteSizeConstraintSetCommandInput extends DeleteSizeConstraintSetRequest {
    }
    export interface DeleteSizeConstraintSetCommandOutput extends DeleteSizeConstraintSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes a <a>SizeConstraintSet</a>. You can't delete a <code>SizeConstraintSet</code> if it's still used in any <code>Rules</code>
        * 			or if it still includes any <a>SizeConstraint</a> objects (any filters).</p>
        * 		       <p>If you just want to remove a <code>SizeConstraintSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete a <code>SizeConstraintSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>SizeConstraintSet</code> to remove filters, if any. For more information, see <a>UpdateSizeConstraintSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteSizeConstraintSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteSizeConstraintSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteSizeConstraintSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteSizeConstraintSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteSizeConstraintSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSizeConstraintSetCommandInput} for command's `input` shape.
        * @see {@link DeleteSizeConstraintSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteSizeConstraintSetCommand extends $Command<DeleteSizeConstraintSetCommandInput, DeleteSizeConstraintSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteSizeConstraintSetCommandInput;
            constructor(input: DeleteSizeConstraintSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSizeConstraintSetCommandInput, DeleteSizeConstraintSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSqlInjectionMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteSqlInjectionMatchSetRequest, DeleteSqlInjectionMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteSqlInjectionMatchSetCommandInput extends DeleteSqlInjectionMatchSetRequest {
    }
    export interface DeleteSqlInjectionMatchSetCommandOutput extends DeleteSqlInjectionMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes a <a>SqlInjectionMatchSet</a>. You can't delete a <code>SqlInjectionMatchSet</code> if it's
        * 			still used in any <code>Rules</code> or if it still contains any <a>SqlInjectionMatchTuple</a> objects.</p>
        * 		       <p>If you just want to remove a <code>SqlInjectionMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete a <code>SqlInjectionMatchSet</code> from AWS WAF, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>SqlInjectionMatchSet</code> to remove filters, if any. For more information, see
        * 				<a>UpdateSqlInjectionMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteSqlInjectionMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteSqlInjectionMatchSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteSqlInjectionMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteSqlInjectionMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteSqlInjectionMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSqlInjectionMatchSetCommandInput} for command's `input` shape.
        * @see {@link DeleteSqlInjectionMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteSqlInjectionMatchSetCommand extends $Command<DeleteSqlInjectionMatchSetCommandInput, DeleteSqlInjectionMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteSqlInjectionMatchSetCommandInput;
            constructor(input: DeleteSqlInjectionMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSqlInjectionMatchSetCommandInput, DeleteSqlInjectionMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteWebACLCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteWebACLRequest, DeleteWebACLResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteWebACLCommandInput extends DeleteWebACLRequest {
    }
    export interface DeleteWebACLCommandOutput extends DeleteWebACLResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes a <a>WebACL</a>. You can't delete a <code>WebACL</code> if it still contains any <code>Rules</code>.</p>
        * 		       <p>To delete a <code>WebACL</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>WebACL</code> to remove <code>Rules</code>, if any. For more information, see <a>UpdateWebACL</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteWebACL</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteWebACL</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteWebACLCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteWebACLCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteWebACLCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteWebACLCommandInput} for command's `input` shape.
        * @see {@link DeleteWebACLCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteWebACLCommand extends $Command<DeleteWebACLCommandInput, DeleteWebACLCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteWebACLCommandInput;
            constructor(input: DeleteWebACLCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteWebACLCommandInput, DeleteWebACLCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteXssMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteXssMatchSetRequest, DeleteXssMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface DeleteXssMatchSetCommandInput extends DeleteXssMatchSetRequest {
    }
    export interface DeleteXssMatchSetCommandOutput extends DeleteXssMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Permanently deletes an <a>XssMatchSet</a>. You can't delete an <code>XssMatchSet</code> if it's
        * 			still used in any <code>Rules</code> or if it still contains any <a>XssMatchTuple</a> objects.</p>
        * 		       <p>If you just want to remove an <code>XssMatchSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        * 		       <p>To permanently delete an <code>XssMatchSet</code> from AWS WAF, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Update the <code>XssMatchSet</code> to remove filters, if any. For more information, see
        * 				<a>UpdateXssMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of a
        * 				<code>DeleteXssMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit a <code>DeleteXssMatchSet</code> request.</p>
        *             </li>
        *          </ol>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, DeleteXssMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, DeleteXssMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new DeleteXssMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteXssMatchSetCommandInput} for command's `input` shape.
        * @see {@link DeleteXssMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class DeleteXssMatchSetCommand extends $Command<DeleteXssMatchSetCommandInput, DeleteXssMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: DeleteXssMatchSetCommandInput;
            constructor(input: DeleteXssMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteXssMatchSetCommandInput, DeleteXssMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetByteMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetByteMatchSetRequest, GetByteMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetByteMatchSetCommandInput extends GetByteMatchSetRequest {
    }
    export interface GetByteMatchSetCommandOutput extends GetByteMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>ByteMatchSet</a> specified by <code>ByteMatchSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetByteMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetByteMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetByteMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetByteMatchSetCommandInput} for command's `input` shape.
        * @see {@link GetByteMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetByteMatchSetCommand extends $Command<GetByteMatchSetCommandInput, GetByteMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetByteMatchSetCommandInput;
            constructor(input: GetByteMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetByteMatchSetCommandInput, GetByteMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetChangeTokenRequest, GetChangeTokenResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetChangeTokenCommandInput extends GetChangeTokenRequest {
    }
    export interface GetChangeTokenCommandOutput extends GetChangeTokenResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete request. Change tokens ensure that your application doesn't submit conflicting requests to AWS WAF.</p>
        * 		       <p>Each create, update, or delete request must use a unique change token. If your application submits a <code>GetChangeToken</code> request
        * 			and then submits a second <code>GetChangeToken</code> request before submitting a create, update, or delete request, the second
        * 			<code>GetChangeToken</code> request returns the same value as the first <code>GetChangeToken</code> request.</p>
        * 		       <p>When you use a change token in a create, update, or delete request, the status of the change token changes to <code>PENDING</code>,
        * 			which indicates that AWS WAF is propagating the change to all AWS WAF servers. Use <code>GetChangeTokenStatus</code> to determine the
        * 			status of your change token.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetChangeTokenCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetChangeTokenCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetChangeTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetChangeTokenCommandInput} for command's `input` shape.
        * @see {@link GetChangeTokenCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetChangeTokenCommand extends $Command<GetChangeTokenCommandInput, GetChangeTokenCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetChangeTokenCommandInput;
            constructor(input: GetChangeTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetChangeTokenCommandInput, GetChangeTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetChangeTokenStatusRequest, GetChangeTokenStatusResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetChangeTokenStatusCommandInput extends GetChangeTokenStatusRequest {
    }
    export interface GetChangeTokenStatusCommandOutput extends GetChangeTokenStatusResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the status of a <code>ChangeToken</code> that you got by calling <a>GetChangeToken</a>. <code>ChangeTokenStatus</code> is
        * 			one of the following values:</p>
        * 		       <ul>
        *             <li>
        *                <p>
        *                   <code>PROVISIONED</code>: You requested the change token by calling <code>GetChangeToken</code>, but you haven't used it yet
        * 				in a call to create, update, or delete an AWS WAF object.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>PENDING</code>: AWS WAF is propagating the create, update, or delete request to all AWS WAF servers.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>INSYNC</code>: Propagation is complete.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetChangeTokenStatusCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetChangeTokenStatusCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetChangeTokenStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetChangeTokenStatusCommandInput} for command's `input` shape.
        * @see {@link GetChangeTokenStatusCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetChangeTokenStatusCommand extends $Command<GetChangeTokenStatusCommandInput, GetChangeTokenStatusCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetChangeTokenStatusCommandInput;
            constructor(input: GetChangeTokenStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetChangeTokenStatusCommandInput, GetChangeTokenStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetGeoMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetGeoMatchSetRequest, GetGeoMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetGeoMatchSetCommandInput extends GetGeoMatchSetRequest {
    }
    export interface GetGeoMatchSetCommandOutput extends GetGeoMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the <a>GeoMatchSet</a> that is specified by <code>GeoMatchSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetGeoMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetGeoMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetGeoMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetGeoMatchSetCommandInput} for command's `input` shape.
        * @see {@link GetGeoMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetGeoMatchSetCommand extends $Command<GetGeoMatchSetCommandInput, GetGeoMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetGeoMatchSetCommandInput;
            constructor(input: GetGeoMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetGeoMatchSetCommandInput, GetGeoMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetIPSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetIPSetRequest, GetIPSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetIPSetCommandInput extends GetIPSetRequest {
    }
    export interface GetIPSetCommandOutput extends GetIPSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>IPSet</a> that is specified by <code>IPSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetIPSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetIPSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetIPSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetIPSetCommandInput} for command's `input` shape.
        * @see {@link GetIPSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetIPSetCommand extends $Command<GetIPSetCommandInput, GetIPSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetIPSetCommandInput;
            constructor(input: GetIPSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetIPSetCommandInput, GetIPSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetLoggingConfigurationRequest, GetLoggingConfigurationResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetLoggingConfigurationCommandInput extends GetLoggingConfigurationRequest {
    }
    export interface GetLoggingConfigurationCommandOutput extends GetLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the <a>LoggingConfiguration</a> for the specified web ACL.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetLoggingConfigurationCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetLoggingConfigurationCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetLoggingConfigurationCommand extends $Command<GetLoggingConfigurationCommandInput, GetLoggingConfigurationCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetLoggingConfigurationCommandInput;
            constructor(input: GetLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetLoggingConfigurationCommandInput, GetLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetPermissionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetPermissionPolicyRequest, GetPermissionPolicyResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetPermissionPolicyCommandInput extends GetPermissionPolicyRequest {
    }
    export interface GetPermissionPolicyCommandOutput extends GetPermissionPolicyResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the IAM policy attached to the RuleGroup.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetPermissionPolicyCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetPermissionPolicyCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetPermissionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPermissionPolicyCommandInput} for command's `input` shape.
        * @see {@link GetPermissionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetPermissionPolicyCommand extends $Command<GetPermissionPolicyCommandInput, GetPermissionPolicyCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetPermissionPolicyCommandInput;
            constructor(input: GetPermissionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPermissionPolicyCommandInput, GetPermissionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRateBasedRuleRequest, GetRateBasedRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRateBasedRuleCommandInput extends GetRateBasedRuleRequest {
    }
    export interface GetRateBasedRuleCommandOutput extends GetRateBasedRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the <a>RateBasedRule</a> that is specified by the
        *             <code>RuleId</code> that you included in the <code>GetRateBasedRule</code>
        *          request.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRateBasedRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRateBasedRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRateBasedRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRateBasedRuleCommandInput} for command's `input` shape.
        * @see {@link GetRateBasedRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRateBasedRuleCommand extends $Command<GetRateBasedRuleCommandInput, GetRateBasedRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRateBasedRuleCommandInput;
            constructor(input: GetRateBasedRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRateBasedRuleCommandInput, GetRateBasedRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleManagedKeysCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRateBasedRuleManagedKeysRequest, GetRateBasedRuleManagedKeysResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRateBasedRuleManagedKeysCommandInput extends GetRateBasedRuleManagedKeysRequest {
    }
    export interface GetRateBasedRuleManagedKeysCommandOutput extends GetRateBasedRuleManagedKeysResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of IP addresses currently being blocked by the <a>RateBasedRule</a> that is specified by the <code>RuleId</code>. The maximum
        *          number of managed keys that will be blocked is 10,000. If more than 10,000 addresses exceed
        *          the rate limit, the 10,000 addresses with the highest rates will be blocked.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRateBasedRuleManagedKeysCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRateBasedRuleManagedKeysCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRateBasedRuleManagedKeysCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRateBasedRuleManagedKeysCommandInput} for command's `input` shape.
        * @see {@link GetRateBasedRuleManagedKeysCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRateBasedRuleManagedKeysCommand extends $Command<GetRateBasedRuleManagedKeysCommandInput, GetRateBasedRuleManagedKeysCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRateBasedRuleManagedKeysCommandInput;
            constructor(input: GetRateBasedRuleManagedKeysCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRateBasedRuleManagedKeysCommandInput, GetRateBasedRuleManagedKeysCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRegexMatchSetRequest, GetRegexMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRegexMatchSetCommandInput extends GetRegexMatchSetRequest {
    }
    export interface GetRegexMatchSetCommandOutput extends GetRegexMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the <a>RegexMatchSet</a> specified by <code>RegexMatchSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRegexMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRegexMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRegexMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRegexMatchSetCommandInput} for command's `input` shape.
        * @see {@link GetRegexMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRegexMatchSetCommand extends $Command<GetRegexMatchSetCommandInput, GetRegexMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRegexMatchSetCommandInput;
            constructor(input: GetRegexMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRegexMatchSetCommandInput, GetRegexMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexPatternSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRegexPatternSetRequest, GetRegexPatternSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRegexPatternSetCommandInput extends GetRegexPatternSetRequest {
    }
    export interface GetRegexPatternSetCommandOutput extends GetRegexPatternSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *         <p>Returns the <a>RegexPatternSet</a> specified by <code>RegexPatternSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRegexPatternSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRegexPatternSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRegexPatternSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRegexPatternSetCommandInput} for command's `input` shape.
        * @see {@link GetRegexPatternSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRegexPatternSetCommand extends $Command<GetRegexPatternSetCommandInput, GetRegexPatternSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRegexPatternSetCommandInput;
            constructor(input: GetRegexPatternSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRegexPatternSetCommandInput, GetRegexPatternSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRuleRequest, GetRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRuleCommandInput extends GetRuleRequest {
    }
    export interface GetRuleCommandOutput extends GetRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>Rule</a> that is specified by the <code>RuleId</code> that you included in the <code>GetRule</code> request.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRuleCommandInput} for command's `input` shape.
        * @see {@link GetRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRuleCommand extends $Command<GetRuleCommandInput, GetRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRuleCommandInput;
            constructor(input: GetRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRuleCommandInput, GetRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRuleGroupRequest, GetRuleGroupResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetRuleGroupCommandInput extends GetRuleGroupRequest {
    }
    export interface GetRuleGroupCommandOutput extends GetRuleGroupResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns the <a>RuleGroup</a> that is specified by the <code>RuleGroupId</code> that you included in the <code>GetRuleGroup</code> request.</p>
        * 	        <p>To view the rules in a rule group, use <a>ListActivatedRulesInRuleGroup</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetRuleGroupCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetRuleGroupCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetRuleGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRuleGroupCommandInput} for command's `input` shape.
        * @see {@link GetRuleGroupCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetRuleGroupCommand extends $Command<GetRuleGroupCommandInput, GetRuleGroupCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetRuleGroupCommandInput;
            constructor(input: GetRuleGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRuleGroupCommandInput, GetRuleGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSampledRequestsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetSampledRequestsRequest, GetSampledRequestsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetSampledRequestsCommandInput extends GetSampledRequestsRequest {
    }
    export interface GetSampledRequestsCommandOutput extends GetSampledRequestsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests that your AWS resource received during a time range that you choose. You can specify a sample size of up to 500 requests, and you can specify any time range in the previous three hours.</p>
        * 		       <p>
        *             <code>GetSampledRequests</code> returns a time range, which is usually the time range that you specified. However, if your resource
        * 			(such as a CloudFront distribution) received 5,000 requests before the specified time range elapsed, <code>GetSampledRequests</code>
        * 			returns an updated time range. This new time range indicates the actual period during which AWS WAF selected the requests in the sample.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetSampledRequestsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetSampledRequestsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetSampledRequestsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSampledRequestsCommandInput} for command's `input` shape.
        * @see {@link GetSampledRequestsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetSampledRequestsCommand extends $Command<GetSampledRequestsCommandInput, GetSampledRequestsCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetSampledRequestsCommandInput;
            constructor(input: GetSampledRequestsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSampledRequestsCommandInput, GetSampledRequestsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSizeConstraintSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetSizeConstraintSetRequest, GetSizeConstraintSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetSizeConstraintSetCommandInput extends GetSizeConstraintSetRequest {
    }
    export interface GetSizeConstraintSetCommandOutput extends GetSizeConstraintSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>SizeConstraintSet</a> specified by <code>SizeConstraintSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetSizeConstraintSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetSizeConstraintSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetSizeConstraintSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSizeConstraintSetCommandInput} for command's `input` shape.
        * @see {@link GetSizeConstraintSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetSizeConstraintSetCommand extends $Command<GetSizeConstraintSetCommandInput, GetSizeConstraintSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetSizeConstraintSetCommandInput;
            constructor(input: GetSizeConstraintSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSizeConstraintSetCommandInput, GetSizeConstraintSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSqlInjectionMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetSqlInjectionMatchSetRequest, GetSqlInjectionMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetSqlInjectionMatchSetCommandInput extends GetSqlInjectionMatchSetRequest {
    }
    export interface GetSqlInjectionMatchSetCommandOutput extends GetSqlInjectionMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>SqlInjectionMatchSet</a> that is specified by <code>SqlInjectionMatchSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetSqlInjectionMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetSqlInjectionMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetSqlInjectionMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSqlInjectionMatchSetCommandInput} for command's `input` shape.
        * @see {@link GetSqlInjectionMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetSqlInjectionMatchSetCommand extends $Command<GetSqlInjectionMatchSetCommandInput, GetSqlInjectionMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetSqlInjectionMatchSetCommandInput;
            constructor(input: GetSqlInjectionMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSqlInjectionMatchSetCommandInput, GetSqlInjectionMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetWebACLCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetWebACLRequest, GetWebACLResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetWebACLCommandInput extends GetWebACLRequest {
    }
    export interface GetWebACLCommandOutput extends GetWebACLResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>WebACL</a> that is specified by <code>WebACLId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetWebACLCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetWebACLCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetWebACLCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetWebACLCommandInput} for command's `input` shape.
        * @see {@link GetWebACLCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetWebACLCommand extends $Command<GetWebACLCommandInput, GetWebACLCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetWebACLCommandInput;
            constructor(input: GetWebACLCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetWebACLCommandInput, GetWebACLCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetXssMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetXssMatchSetRequest, GetXssMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface GetXssMatchSetCommandInput extends GetXssMatchSetRequest {
    }
    export interface GetXssMatchSetCommandOutput extends GetXssMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns the <a>XssMatchSet</a> that is specified by <code>XssMatchSetId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, GetXssMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, GetXssMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new GetXssMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetXssMatchSetCommandInput} for command's `input` shape.
        * @see {@link GetXssMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class GetXssMatchSetCommand extends $Command<GetXssMatchSetCommandInput, GetXssMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: GetXssMatchSetCommandInput;
            constructor(input: GetXssMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetXssMatchSetCommandInput, GetXssMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListActivatedRulesInRuleGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListActivatedRulesInRuleGroupRequest, ListActivatedRulesInRuleGroupResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListActivatedRulesInRuleGroupCommandInput extends ListActivatedRulesInRuleGroupRequest {
    }
    export interface ListActivatedRulesInRuleGroupCommandOutput extends ListActivatedRulesInRuleGroupResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>ActivatedRule</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListActivatedRulesInRuleGroupCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListActivatedRulesInRuleGroupCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListActivatedRulesInRuleGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListActivatedRulesInRuleGroupCommandInput} for command's `input` shape.
        * @see {@link ListActivatedRulesInRuleGroupCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListActivatedRulesInRuleGroupCommand extends $Command<ListActivatedRulesInRuleGroupCommandInput, ListActivatedRulesInRuleGroupCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListActivatedRulesInRuleGroupCommandInput;
            constructor(input: ListActivatedRulesInRuleGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListActivatedRulesInRuleGroupCommandInput, ListActivatedRulesInRuleGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListByteMatchSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListByteMatchSetsRequest, ListByteMatchSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListByteMatchSetsCommandInput extends ListByteMatchSetsRequest {
    }
    export interface ListByteMatchSetsCommandOutput extends ListByteMatchSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>ByteMatchSetSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListByteMatchSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListByteMatchSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListByteMatchSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListByteMatchSetsCommandInput} for command's `input` shape.
        * @see {@link ListByteMatchSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListByteMatchSetsCommand extends $Command<ListByteMatchSetsCommandInput, ListByteMatchSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListByteMatchSetsCommandInput;
            constructor(input: ListByteMatchSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListByteMatchSetsCommandInput, ListByteMatchSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListGeoMatchSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListGeoMatchSetsRequest, ListGeoMatchSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListGeoMatchSetsCommandInput extends ListGeoMatchSetsRequest {
    }
    export interface ListGeoMatchSetsCommandOutput extends ListGeoMatchSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>GeoMatchSetSummary</a> objects in the response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListGeoMatchSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListGeoMatchSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListGeoMatchSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGeoMatchSetsCommandInput} for command's `input` shape.
        * @see {@link ListGeoMatchSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListGeoMatchSetsCommand extends $Command<ListGeoMatchSetsCommandInput, ListGeoMatchSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListGeoMatchSetsCommandInput;
            constructor(input: ListGeoMatchSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGeoMatchSetsCommandInput, ListGeoMatchSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListIPSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListIPSetsRequest, ListIPSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListIPSetsCommandInput extends ListIPSetsRequest {
    }
    export interface ListIPSetsCommandOutput extends ListIPSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>IPSetSummary</a> objects in the response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListIPSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListIPSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListIPSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListIPSetsCommandInput} for command's `input` shape.
        * @see {@link ListIPSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListIPSetsCommand extends $Command<ListIPSetsCommandInput, ListIPSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListIPSetsCommandInput;
            constructor(input: ListIPSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListIPSetsCommandInput, ListIPSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListLoggingConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListLoggingConfigurationsRequest, ListLoggingConfigurationsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListLoggingConfigurationsCommandInput extends ListLoggingConfigurationsRequest {
    }
    export interface ListLoggingConfigurationsCommandOutput extends ListLoggingConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>LoggingConfiguration</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListLoggingConfigurationsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListLoggingConfigurationsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListLoggingConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListLoggingConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListLoggingConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListLoggingConfigurationsCommand extends $Command<ListLoggingConfigurationsCommandInput, ListLoggingConfigurationsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListLoggingConfigurationsCommandInput;
            constructor(input: ListLoggingConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListLoggingConfigurationsCommandInput, ListLoggingConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRateBasedRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRateBasedRulesRequest, ListRateBasedRulesResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListRateBasedRulesCommandInput extends ListRateBasedRulesRequest {
    }
    export interface ListRateBasedRulesCommandOutput extends ListRateBasedRulesResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>RuleSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListRateBasedRulesCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListRateBasedRulesCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListRateBasedRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRateBasedRulesCommandInput} for command's `input` shape.
        * @see {@link ListRateBasedRulesCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListRateBasedRulesCommand extends $Command<ListRateBasedRulesCommandInput, ListRateBasedRulesCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListRateBasedRulesCommandInput;
            constructor(input: ListRateBasedRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRateBasedRulesCommandInput, ListRateBasedRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexMatchSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRegexMatchSetsRequest, ListRegexMatchSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListRegexMatchSetsCommandInput extends ListRegexMatchSetsRequest {
    }
    export interface ListRegexMatchSetsCommandOutput extends ListRegexMatchSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>RegexMatchSetSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListRegexMatchSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListRegexMatchSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListRegexMatchSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRegexMatchSetsCommandInput} for command's `input` shape.
        * @see {@link ListRegexMatchSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListRegexMatchSetsCommand extends $Command<ListRegexMatchSetsCommandInput, ListRegexMatchSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListRegexMatchSetsCommandInput;
            constructor(input: ListRegexMatchSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRegexMatchSetsCommandInput, ListRegexMatchSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexPatternSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRegexPatternSetsRequest, ListRegexPatternSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListRegexPatternSetsCommandInput extends ListRegexPatternSetsRequest {
    }
    export interface ListRegexPatternSetsCommandOutput extends ListRegexPatternSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>RegexPatternSetSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListRegexPatternSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListRegexPatternSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListRegexPatternSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRegexPatternSetsCommandInput} for command's `input` shape.
        * @see {@link ListRegexPatternSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListRegexPatternSetsCommand extends $Command<ListRegexPatternSetsCommandInput, ListRegexPatternSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListRegexPatternSetsCommandInput;
            constructor(input: ListRegexPatternSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRegexPatternSetsCommandInput, ListRegexPatternSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRuleGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRuleGroupsRequest, ListRuleGroupsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListRuleGroupsCommandInput extends ListRuleGroupsRequest {
    }
    export interface ListRuleGroupsCommandOutput extends ListRuleGroupsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>RuleGroup</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListRuleGroupsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListRuleGroupsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListRuleGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRuleGroupsCommandInput} for command's `input` shape.
        * @see {@link ListRuleGroupsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListRuleGroupsCommand extends $Command<ListRuleGroupsCommandInput, ListRuleGroupsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListRuleGroupsCommandInput;
            constructor(input: ListRuleGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRuleGroupsCommandInput, ListRuleGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRulesRequest, ListRulesResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListRulesCommandInput extends ListRulesRequest {
    }
    export interface ListRulesCommandOutput extends ListRulesResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>RuleSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListRulesCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListRulesCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRulesCommandInput} for command's `input` shape.
        * @see {@link ListRulesCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListRulesCommand extends $Command<ListRulesCommandInput, ListRulesCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListRulesCommandInput;
            constructor(input: ListRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRulesCommandInput, ListRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSizeConstraintSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSizeConstraintSetsRequest, ListSizeConstraintSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListSizeConstraintSetsCommandInput extends ListSizeConstraintSetsRequest {
    }
    export interface ListSizeConstraintSetsCommandOutput extends ListSizeConstraintSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>SizeConstraintSetSummary</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListSizeConstraintSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListSizeConstraintSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListSizeConstraintSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSizeConstraintSetsCommandInput} for command's `input` shape.
        * @see {@link ListSizeConstraintSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListSizeConstraintSetsCommand extends $Command<ListSizeConstraintSetsCommandInput, ListSizeConstraintSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListSizeConstraintSetsCommandInput;
            constructor(input: ListSizeConstraintSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSizeConstraintSetsCommandInput, ListSizeConstraintSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSqlInjectionMatchSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSqlInjectionMatchSetsRequest, ListSqlInjectionMatchSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListSqlInjectionMatchSetsCommandInput extends ListSqlInjectionMatchSetsRequest {
    }
    export interface ListSqlInjectionMatchSetsCommandOutput extends ListSqlInjectionMatchSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>SqlInjectionMatchSet</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListSqlInjectionMatchSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListSqlInjectionMatchSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListSqlInjectionMatchSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSqlInjectionMatchSetsCommandInput} for command's `input` shape.
        * @see {@link ListSqlInjectionMatchSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListSqlInjectionMatchSetsCommand extends $Command<ListSqlInjectionMatchSetsCommandInput, ListSqlInjectionMatchSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListSqlInjectionMatchSetsCommandInput;
            constructor(input: ListSqlInjectionMatchSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSqlInjectionMatchSetsCommandInput, ListSqlInjectionMatchSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSubscribedRuleGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSubscribedRuleGroupsRequest, ListSubscribedRuleGroupsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListSubscribedRuleGroupsCommandInput extends ListSubscribedRuleGroupsRequest {
    }
    export interface ListSubscribedRuleGroupsCommandOutput extends ListSubscribedRuleGroupsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returns an array of <a>RuleGroup</a> objects that you are subscribed to.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListSubscribedRuleGroupsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListSubscribedRuleGroupsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListSubscribedRuleGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSubscribedRuleGroupsCommandInput} for command's `input` shape.
        * @see {@link ListSubscribedRuleGroupsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListSubscribedRuleGroupsCommand extends $Command<ListSubscribedRuleGroupsCommandInput, ListSubscribedRuleGroupsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListSubscribedRuleGroupsCommandInput;
            constructor(input: ListSubscribedRuleGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSubscribedRuleGroupsCommandInput, ListSubscribedRuleGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *         <p>Retrieves the tags associated with the specified AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
        *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListTagsForResourceCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListTagsForResourceCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListWebACLsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListWebACLsRequest, ListWebACLsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListWebACLsCommandInput extends ListWebACLsRequest {
    }
    export interface ListWebACLsCommandOutput extends ListWebACLsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>WebACLSummary</a> objects in the response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListWebACLsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListWebACLsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListWebACLsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListWebACLsCommandInput} for command's `input` shape.
        * @see {@link ListWebACLsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListWebACLsCommand extends $Command<ListWebACLsCommandInput, ListWebACLsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListWebACLsCommandInput;
            constructor(input: ListWebACLsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListWebACLsCommandInput, ListWebACLsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListXssMatchSetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListXssMatchSetsRequest, ListXssMatchSetsResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface ListXssMatchSetsCommandInput extends ListXssMatchSetsRequest {
    }
    export interface ListXssMatchSetsCommandOutput extends ListXssMatchSetsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returns an array of <a>XssMatchSet</a> objects.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, ListXssMatchSetsCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, ListXssMatchSetsCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new ListXssMatchSetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListXssMatchSetsCommandInput} for command's `input` shape.
        * @see {@link ListXssMatchSetsCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class ListXssMatchSetsCommand extends $Command<ListXssMatchSetsCommandInput, ListXssMatchSetsCommandOutput, WAFClientResolvedConfig> {
            readonly input: ListXssMatchSetsCommandInput;
            constructor(input: ListXssMatchSetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListXssMatchSetsCommandInput, ListXssMatchSetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutLoggingConfigurationRequest, PutLoggingConfigurationResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface PutLoggingConfigurationCommandInput extends PutLoggingConfigurationRequest {
    }
    export interface PutLoggingConfigurationCommandOutput extends PutLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Associates a <a>LoggingConfiguration</a> with a specified web ACL.</p>
        * 	        <p>You can access information about all traffic that AWS WAF inspects using the following
        *          steps:</p>
        * 	        <ol>
        *             <li>
        *                <p>Create an Amazon Kinesis Data
        *                Firehose. </p>
        * 	              <p>Create the data firehose with a PUT source and in the region that you are operating. However, if you are capturing logs for Amazon CloudFront, always create the firehose in US East (N. Virginia). </p>
        * 	              <note>
        *                   <p>Do not create the data firehose using a <code>Kinesis stream</code> as your source.</p>
        *                </note>
        *             </li>
        *             <li>
        *                <p>Associate that firehose to your web ACL using a <code>PutLoggingConfiguration</code> request.</p>
        *             </li>
        *          </ol>
        *
        *          <p>When you successfully enable logging using a <code>PutLoggingConfiguration</code> request, AWS WAF will create a service linked role with the necessary permissions to write logs to the Amazon Kinesis Data Firehose.  For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging.html">Logging Web ACL Traffic Information</a> in the <i>AWS WAF Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, PutLoggingConfigurationCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, PutLoggingConfigurationCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new PutLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class PutLoggingConfigurationCommand extends $Command<PutLoggingConfigurationCommandInput, PutLoggingConfigurationCommandOutput, WAFClientResolvedConfig> {
            readonly input: PutLoggingConfigurationCommandInput;
            constructor(input: PutLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutLoggingConfigurationCommandInput, PutLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutPermissionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutPermissionPolicyRequest, PutPermissionPolicyResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface PutPermissionPolicyCommandInput extends PutPermissionPolicyRequest {
    }
    export interface PutPermissionPolicyCommandOutput extends PutPermissionPolicyResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Attaches an IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.</p>
        *          <p>The <code>PutPermissionPolicy</code> is subject to the following restrictions:</p>
        *          <ul>
        *             <li>
        *                <p>You can attach only one policy with each <code>PutPermissionPolicy</code> request.</p>
        *             </li>
        *             <li>
        *                <p>The policy must include an <code>Effect</code>, <code>Action</code> and <code>Principal</code>. </p>
        *             </li>
        *             <li>
        *
        *                <p>
        *                   <code>Effect</code> must specify <code>Allow</code>.</p>
        *             </li>
        *             <li>
        *                <p>The <code>Action</code> in the policy must be <code>waf:UpdateWebACL</code>, <code>waf-regional:UpdateWebACL</code>, <code>waf:GetRuleGroup</code> and <code>waf-regional:GetRuleGroup</code> . Any extra or wildcard actions in the policy will be rejected.</p>
        *             </li>
        *             <li>
        *                <p>The policy cannot include a <code>Resource</code> parameter.</p>
        *             </li>
        *             <li>
        *                <p>The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup must exist in the same region.</p>
        *             </li>
        *             <li>
        *                <p>The user making the request must be the owner of the RuleGroup.</p>
        *             </li>
        *             <li>
        *                <p>Your policy must be composed using IAM Policy version 2012-10-17.</p>
        *             </li>
        *          </ul>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">IAM Policies</a>.  </p>
        *
        *          <p>An example of a valid policy parameter is shown in the Examples section below.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, PutPermissionPolicyCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, PutPermissionPolicyCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new PutPermissionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutPermissionPolicyCommandInput} for command's `input` shape.
        * @see {@link PutPermissionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class PutPermissionPolicyCommand extends $Command<PutPermissionPolicyCommandInput, PutPermissionPolicyCommandOutput, WAFClientResolvedConfig> {
            readonly input: PutPermissionPolicyCommandInput;
            constructor(input: PutPermissionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutPermissionPolicyCommandInput, PutPermissionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *         <p>Associates tags with the specified AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
        *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can use this action to tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, TagResourceCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, TagResourceCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, WAFClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p></p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UntagResourceCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UntagResourceCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, WAFClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateByteMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateByteMatchSetRequest, UpdateByteMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateByteMatchSetCommandInput extends UpdateByteMatchSetRequest {
    }
    export interface UpdateByteMatchSetCommandOutput extends UpdateByteMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>ByteMatchTuple</a> objects (filters) in a <a>ByteMatchSet</a>. For each <code>ByteMatchTuple</code> object,
        * 			you specify the following values: </p>
        * 		       <ul>
        *             <li>
        *                <p>Whether to insert or delete the object from the array. If you want to change a <code>ByteMatchSetUpdate</code> object,
        * 				you delete the existing object and add a new one.</p>
        *             </li>
        *             <li>
        *                <p>The part of a web request that you want AWS WAF to inspect, such as a query string or the value of the <code>User-Agent</code> header. </p>
        *             </li>
        *             <li>
        *                <p>The bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to look for. For more information, including how you specify
        * 				the values for the AWS WAF API and the AWS CLI or SDKs, see <code>TargetString</code> in the <a>ByteMatchTuple</a> data type. </p>
        *             </li>
        *             <li>
        *                <p>Where to look, such as at the beginning or the end of a query string.</p>
        *             </li>
        *             <li>
        *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
        *             </li>
        *          </ul>
        * 		       <p>For example, you can add a <code>ByteMatchSetUpdate</code> object that matches web requests in which <code>User-Agent</code> headers contain
        * 			the string <code>BadBot</code>. You can then configure AWS WAF to block those requests.</p>
        * 		       <p>To create and configure a <code>ByteMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create a <code>ByteMatchSet.</code> For more information, see <a>CreateByteMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateByteMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateByteMatchSet</code> request to specify the part of the request that you want AWS WAF to inspect
        * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateByteMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateByteMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateByteMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateByteMatchSetCommandInput} for command's `input` shape.
        * @see {@link UpdateByteMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateByteMatchSetCommand extends $Command<UpdateByteMatchSetCommandInput, UpdateByteMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateByteMatchSetCommandInput;
            constructor(input: UpdateByteMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateByteMatchSetCommandInput, UpdateByteMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateGeoMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateGeoMatchSetRequest, UpdateGeoMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateGeoMatchSetCommandInput extends UpdateGeoMatchSetRequest {
    }
    export interface UpdateGeoMatchSetCommandOutput extends UpdateGeoMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <a>GeoMatchConstraint</a> objects in an <code>GeoMatchSet</code>. For each <code>GeoMatchConstraint</code> object,
        * 			you specify the following values: </p>
        * 		       <ul>
        *             <li>
        *                       <p>Whether to insert or delete the object from the array. If you want to change an <code>GeoMatchConstraint</code> object, you delete the existing object and add a new one.</p>
        *                   </li>
        *             <li>
        * 				           <p>The <code>Type</code>. The only valid value for <code>Type</code> is <code>Country</code>.</p>
        * 				        </li>
        *             <li>
        *                <p>The <code>Value</code>, which is a two character code for the country to add to the <code>GeoMatchConstraint</code> object. Valid codes are listed in <a>GeoMatchConstraint$Value</a>.</p>
        *             </li>
        *          </ul>
        *
        * 		       <p>To create and configure an <code>GeoMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Submit a <a>CreateGeoMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateGeoMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateGeoMatchSet</code> request to specify the country that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>When you update an <code>GeoMatchSet</code>, you specify the country that you want to add and/or the country that you want to delete.
        * 			If you want to change a country, you delete the existing country and add the new one.</p>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateGeoMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateGeoMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateGeoMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateGeoMatchSetCommandInput} for command's `input` shape.
        * @see {@link UpdateGeoMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateGeoMatchSetCommand extends $Command<UpdateGeoMatchSetCommandInput, UpdateGeoMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateGeoMatchSetCommandInput;
            constructor(input: UpdateGeoMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateGeoMatchSetCommandInput, UpdateGeoMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateIPSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateIPSetRequest, UpdateIPSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateIPSetCommandInput extends UpdateIPSetRequest {
    }
    export interface UpdateIPSetCommandOutput extends UpdateIPSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <a>IPSetDescriptor</a> objects in an
        *          <code>IPSet</code>. For each <code>IPSetDescriptor</code> object, you specify the following
        *          values: </p>
        *          <ul>
        *             <li>
        *                <p>Whether to insert or delete the object from the array. If you want to change an
        *                   <code>IPSetDescriptor</code> object, you delete the existing object and add a new
        *                one.</p>
        *             </li>
        *             <li>
        *                <p>The IP address version, <code>IPv4</code> or <code>IPv6</code>. </p>
        *             </li>
        *             <li>
        *                <p>The IP address in CIDR notation, for example, <code>192.0.2.0/24</code> (for
        *                the range of IP addresses from <code>192.0.2.0</code> to <code>192.0.2.255</code>) or
        *                   <code>192.0.2.44/32</code> (for the individual IP address
        *                <code>192.0.2.44</code>). </p>
        *             </li>
        *          </ul>
        *          <p>AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32. AWS
        *          WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128. For more
        *          information about CIDR notation, see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
        *             Inter-Domain Routing</a>.</p>
        *          <p>IPv6 addresses can be represented using any of the following formats:</p>
        *          <ul>
        *             <li>
        *                <p>1111:0000:0000:0000:0000:0000:0000:0111/128</p>
        *             </li>
        *             <li>
        *                <p>1111:0:0:0:0:0:0:0111/128</p>
        *             </li>
        *             <li>
        *                <p>1111::0111/128</p>
        *             </li>
        *             <li>
        *                <p>1111::111/128</p>
        *             </li>
        *          </ul>
        *          <p>You use an <code>IPSet</code> to specify which web requests you want to allow or
        *          block based on the IP addresses that the requests originated from. For example, if you're
        *          receiving a lot of requests from one or a small number of IP addresses and you want to
        *          block the requests, you can create an <code>IPSet</code> that specifies those IP addresses,
        *          and then configure AWS WAF to block the requests. </p>
        *          <p>To create and configure an <code>IPSet</code>, perform the following steps:</p>
        *          <ol>
        *             <li>
        *                <p>Submit a <a>CreateIPSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide
        *                in the <code>ChangeToken</code> parameter of an <a>UpdateIPSet</a>
        *                request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateIPSet</code> request to specify the IP addresses that you
        *                want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        *          <p>When you update an <code>IPSet</code>, you specify the IP addresses that you want to
        *          add and/or the IP addresses that you want to delete. If you want to change an IP address,
        *          you delete the existing IP address and add the new one.</p>
        *          <p>You can insert a maximum of 1000 addresses in a single
        *          request.</p>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP
        *          requests, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        *             Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateIPSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateIPSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateIPSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateIPSetCommandInput} for command's `input` shape.
        * @see {@link UpdateIPSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateIPSetCommand extends $Command<UpdateIPSetCommandInput, UpdateIPSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateIPSetCommandInput;
            constructor(input: UpdateIPSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateIPSetCommandInput, UpdateIPSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRateBasedRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRateBasedRuleRequest, UpdateRateBasedRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateRateBasedRuleCommandInput extends UpdateRateBasedRuleRequest {
    }
    export interface UpdateRateBasedRuleCommandOutput extends UpdateRateBasedRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <a>Predicate</a> objects in a rule and updates the
        *             <code>RateLimit</code> in the rule. </p>
        *          <p>Each <code>Predicate</code> object identifies a predicate, such as a <a>ByteMatchSet</a> or an <a>IPSet</a>, that specifies the web requests
        *          that you want to block or count. The <code>RateLimit</code> specifies the number of
        *          requests every five minutes that triggers the rule.</p>
        *          <p>If you add more than one predicate to a <code>RateBasedRule</code>, a request must
        *          match all the predicates and exceed the <code>RateLimit</code> to be counted or blocked.
        *          For example, suppose you add the following to a <code>RateBasedRule</code>:</p>
        *          <ul>
        *             <li>
        *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44/32</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
        *                   <code>User-Agent</code> header</p>
        *             </li>
        *          </ul>
        *          <p>Further, you specify a
        *             <code>RateLimit</code> of 1,000.</p>
        *          <p>You then add the <code>RateBasedRule</code> to a <code>WebACL</code> and specify that
        *          you want to block requests that satisfy the rule. For a request to be blocked, it must come
        *          from the IP address 192.0.2.44 <i>and</i> the <code>User-Agent</code> header
        *          in the request must contain the value <code>BadBot</code>. Further, requests that match
        *          these two conditions much be received at a rate of more than 1,000 every five minutes. If
        *          the rate drops below this limit, AWS WAF no longer blocks the requests.</p>
        *
        * 		       <p>As a second example, suppose you want to limit requests to a particular page on your site. To do this, you could add the following to a
        *             <code>RateBasedRule</code>:</p>
        *
        *
        *          <ul>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> with <code>FieldToMatch</code> of <code>URI</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>PositionalConstraint</code> of <code>STARTS_WITH</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>TargetString</code> of <code>login</code>
        *                </p>
        *             </li>
        *          </ul>
        *          <p>Further, you specify a <code>RateLimit</code> of 1,000.</p>
        *          <p>By adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you could limit requests to your login page without affecting the rest of your site.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateRateBasedRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateRateBasedRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateRateBasedRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRateBasedRuleCommandInput} for command's `input` shape.
        * @see {@link UpdateRateBasedRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateRateBasedRuleCommand extends $Command<UpdateRateBasedRuleCommandInput, UpdateRateBasedRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateRateBasedRuleCommandInput;
            constructor(input: UpdateRateBasedRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRateBasedRuleCommandInput, UpdateRateBasedRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRegexMatchSetRequest, UpdateRegexMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateRegexMatchSetCommandInput extends UpdateRegexMatchSetRequest {
    }
    export interface UpdateRegexMatchSetCommandOutput extends UpdateRegexMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <a>RegexMatchTuple</a> objects (filters) in a <a>RegexMatchSet</a>. For each <code>RegexMatchSetUpdate</code> object,
        * 			you specify the following values: </p>
        * 		       <ul>
        *             <li>
        *                <p>Whether to insert or delete the object from the array. If you want to change a <code>RegexMatchSetUpdate</code> object,
        * 				you delete the existing object and add a new one.</p>
        *             </li>
        *             <li>
        *                <p>The part of a web request that you want AWS WAF to inspectupdate, such as a query string or the value of the <code>User-Agent</code> header. </p>
        *             </li>
        *             <li>
        *                <p>The identifier of the pattern (a regular expression) that you want AWS WAF to look for. For more information, see <a>RegexPatternSet</a>. </p>
        *             </li>
        *             <li>
        *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
        *             </li>
        *          </ul>
        * 		       <p> For example, you can create a <code>RegexPatternSet</code> that matches any requests with <code>User-Agent</code> headers
        *          that contain the string <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
        * 		       <p>To create and configure a <code>RegexMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create a <code>RegexMatchSet.</code> For more information, see <a>CreateRegexMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateRegexMatchSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRegexMatchSet</code> request to specify the part of the request that you want AWS WAF to inspect
        * 				(for example, the header or the URI) and the identifier of the <code>RegexPatternSet</code> that contain the regular expression patters you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateRegexMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateRegexMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateRegexMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRegexMatchSetCommandInput} for command's `input` shape.
        * @see {@link UpdateRegexMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateRegexMatchSetCommand extends $Command<UpdateRegexMatchSetCommandInput, UpdateRegexMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateRegexMatchSetCommandInput;
            constructor(input: UpdateRegexMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRegexMatchSetCommandInput, UpdateRegexMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexPatternSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRegexPatternSetRequest, UpdateRegexPatternSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateRegexPatternSetCommandInput extends UpdateRegexPatternSetRequest {
    }
    export interface UpdateRegexPatternSetCommandOutput extends UpdateRegexPatternSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <code>RegexPatternString</code> objects in a <a>RegexPatternSet</a>. For each <code>RegexPatternString</code> object,
        * 			you specify the following values: </p>
        * 		       <ul>
        *             <li>
        * 			            <p>Whether to insert or delete the <code>RegexPatternString</code>.</p>
        *             </li>
        *             <li>
        *                <p>The regular expression pattern that you want to insert or delete. For more information, see <a>RegexPatternSet</a>. </p>
        *             </li>
        *          </ul>
        * 		       <p> For example, you can create a <code>RegexPatternString</code> such as <code>B[a@]dB[o0]t</code>. AWS WAF will match this <code>RegexPatternString</code> to:</p>
        *                 <ul>
        *             <li>
        * 				           <p>BadBot</p>
        * 				        </li>
        *             <li>
        * 				           <p>BadB0t</p>
        * 				        </li>
        *             <li>
        * 				           <p>B@dBot</p>
        * 				        </li>
        *             <li>
        * 				           <p>B@dB0t</p>
        * 				        </li>
        *          </ul>
        * 		       <p>To create and configure a <code>RegexPatternSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create a <code>RegexPatternSet.</code> For more information, see <a>CreateRegexPatternSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateRegexPatternSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRegexPatternSet</code> request to specify the regular expression pattern that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateRegexPatternSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateRegexPatternSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateRegexPatternSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRegexPatternSetCommandInput} for command's `input` shape.
        * @see {@link UpdateRegexPatternSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateRegexPatternSetCommand extends $Command<UpdateRegexPatternSetCommandInput, UpdateRegexPatternSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateRegexPatternSetCommandInput;
            constructor(input: UpdateRegexPatternSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRegexPatternSetCommandInput, UpdateRegexPatternSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRuleRequest, UpdateRuleResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateRuleCommandInput extends UpdateRuleRequest {
    }
    export interface UpdateRuleCommandOutput extends UpdateRuleResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>Predicate</a> objects in a <code>Rule</code>. Each
        *             <code>Predicate</code> object identifies a predicate, such as a <a>ByteMatchSet</a> or an <a>IPSet</a>, that specifies the web requests
        *          that you want to allow, block, or count. If you add more than one predicate to a
        *             <code>Rule</code>, a request must match all of the specifications to be allowed,
        *          blocked, or counted. For example, suppose
        *          that
        *          you add the following to a <code>Rule</code>: </p>
        * 		       <ul>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> that matches the value <code>BadBot</code> in the <code>User-Agent</code> header</p>
        *             </li>
        *             <li>
        *                <p>An <code>IPSet</code> that matches the IP address <code>192.0.2.44</code>
        *                </p>
        *             </li>
        *          </ul>
        * 		       <p>You then add the <code>Rule</code> to a <code>WebACL</code> and specify that you want to block requests that satisfy the <code>Rule</code>.
        * 			For a request to be blocked, the <code>User-Agent</code> header in the request must contain the value <code>BadBot</code>
        * 			         <i>and</i> the request must originate from the IP address 192.0.2.44.</p>
        * 		       <p>To create and configure a <code>Rule</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create and update the predicates that you want to include in the <code>Rule</code>.</p>
        *             </li>
        *             <li>
        *                <p>Create the <code>Rule</code>. See <a>CreateRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateRule</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRule</code> request to add predicates to the <code>Rule</code>.</p>
        *             </li>
        *             <li>
        *                <p>Create and update a <code>WebACL</code> that contains the <code>Rule</code>. See <a>CreateWebACL</a>.</p>
        *             </li>
        *          </ol>
        * 		       <p>If you want to replace one <code>ByteMatchSet</code> or <code>IPSet</code> with another, you delete the existing one and
        * 			add the new one.</p>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateRuleCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateRuleCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRuleCommandInput} for command's `input` shape.
        * @see {@link UpdateRuleCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateRuleCommand extends $Command<UpdateRuleCommandInput, UpdateRuleCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateRuleCommandInput;
            constructor(input: UpdateRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRuleCommandInput, UpdateRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRuleGroupRequest, UpdateRuleGroupResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateRuleGroupCommandInput extends UpdateRuleGroupRequest {
    }
    export interface UpdateRuleGroupCommandOutput extends UpdateRuleGroupResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Inserts or deletes <a>ActivatedRule</a> objects in a <code>RuleGroup</code>.</p>
        * 	        <p>You can only insert <code>REGULAR</code> rules into a rule group.</p>
        *          <p>You can have a maximum of ten rules per rule group.</p>
        *
        *
        *          <p>To create and configure a <code>RuleGroup</code>, perform the following steps:</p>
        *          <ol>
        *             <li>
        *                <p>Create and update the <code>Rules</code> that you want to include in the <code>RuleGroup</code>. See <a>CreateRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        *                <a>UpdateRuleGroup</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateRuleGroup</code> request to add <code>Rules</code> to the <code>RuleGroup</code>.</p>
        *             </li>
        *             <li>
        *                <p>Create and update a <code>WebACL</code> that contains the <code>RuleGroup</code>. See <a>CreateWebACL</a>.</p>
        *             </li>
        *          </ol>
        *          <p>If you want to replace one <code>Rule</code> with another, you delete the existing one and
        *          add the new one.</p>
        *          <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        *          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateRuleGroupCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateRuleGroupCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateRuleGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRuleGroupCommandInput} for command's `input` shape.
        * @see {@link UpdateRuleGroupCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateRuleGroupCommand extends $Command<UpdateRuleGroupCommandInput, UpdateRuleGroupCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateRuleGroupCommandInput;
            constructor(input: UpdateRuleGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRuleGroupCommandInput, UpdateRuleGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSizeConstraintSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateSizeConstraintSetRequest, UpdateSizeConstraintSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateSizeConstraintSetCommandInput extends UpdateSizeConstraintSetRequest {
    }
    export interface UpdateSizeConstraintSetCommandOutput extends UpdateSizeConstraintSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>SizeConstraint</a> objects (filters) in a <a>SizeConstraintSet</a>. For each <code>SizeConstraint</code> object,
        * 			you specify the following values: </p>
        * 		       <ul>
        *             <li>
        *                <p>Whether to insert or delete the object from the array. If you want to change a <code>SizeConstraintSetUpdate</code> object,
        * 				you delete the existing object and add a new one.</p>
        *             </li>
        *             <li>
        *                <p>The part of a web request that you want AWS WAF to evaluate, such as the length of a query string or the length of the
        * 				<code>User-Agent</code> header.</p>
        *             </li>
        *             <li>
        *                <p>Whether to perform any transformations on the request, such as converting it to lowercase, before checking its length.
        * 				Note that transformations of the request body are not supported because the AWS resource forwards only the first <code>8192</code> bytes
        * 				of your request to AWS WAF.</p>
        * 				           <p>You can only specify a single type of TextTransformation.</p>
        *             </li>
        *             <li>
        *                <p>A <code>ComparisonOperator</code> used for evaluating the selected part of the request against the specified <code>Size</code>, such as
        * 				equals, greater than, less than, and so on.</p>
        *             </li>
        *             <li>
        *                <p>The length, in bytes, that you want AWS WAF to watch for in selected part of the request. The length is computed after applying the transformation.</p>
        *             </li>
        *          </ul>
        * 		       <p>For example, you can add a <code>SizeConstraintSetUpdate</code> object that matches web requests in which the length of the
        * 			<code>User-Agent</code> header is greater than 100 bytes. You can then configure AWS WAF to block those requests.</p>
        * 		  	    <p>To create and configure a <code>SizeConstraintSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create a <code>SizeConstraintSet.</code> For more information, see <a>CreateSizeConstraintSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<code>UpdateSizeConstraintSet</code> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateSizeConstraintSet</code> request to specify the part of the request that you want AWS WAF to inspect
        * 				(for example, the header or the URI) and the value that you want AWS WAF to watch for.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateSizeConstraintSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateSizeConstraintSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateSizeConstraintSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSizeConstraintSetCommandInput} for command's `input` shape.
        * @see {@link UpdateSizeConstraintSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateSizeConstraintSetCommand extends $Command<UpdateSizeConstraintSetCommandInput, UpdateSizeConstraintSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateSizeConstraintSetCommandInput;
            constructor(input: UpdateSizeConstraintSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSizeConstraintSetCommandInput, UpdateSizeConstraintSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSqlInjectionMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateSqlInjectionMatchSetRequest, UpdateSqlInjectionMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateSqlInjectionMatchSetCommandInput extends UpdateSqlInjectionMatchSetRequest {
    }
    export interface UpdateSqlInjectionMatchSetCommandOutput extends UpdateSqlInjectionMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>SqlInjectionMatchTuple</a> objects (filters) in a <a>SqlInjectionMatchSet</a>.
        * 			For each <code>SqlInjectionMatchTuple</code> object, you specify the following values:</p>
        * 		       <ul>
        *             <li>
        *                <p>
        *                   <code>Action</code>: Whether to insert the object into or delete the object from the array. To change a
        * 				<code>SqlInjectionMatchTuple</code>, you delete the existing object and add a new one.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>FieldToMatch</code>: The part of web requests that you want AWS WAF to inspect and, if you want AWS WAF to inspect a header or custom query parameter,
        * 				the name of the header or parameter.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>TextTransformation</code>: Which text transformation, if any, to perform on the web request before
        * 				inspecting the request for snippets of malicious SQL code.</p>
        * 				           <p>You can only specify a single type of  TextTransformation.</p>
        *             </li>
        *          </ul>
        * 		       <p>You use <code>SqlInjectionMatchSet</code> objects to specify which CloudFront
        *          requests that
        *          you want to allow, block, or count. For example, if you're receiving
        *          requests that contain snippets of SQL code in the query string and you want to block the
        *          requests, you can create a <code>SqlInjectionMatchSet</code> with the applicable settings,
        *          and then configure AWS WAF to block the requests. </p>
        * 		       <p>To create and configure a <code>SqlInjectionMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Submit a <a>CreateSqlInjectionMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateIPSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateSqlInjectionMatchSet</code> request to specify the parts of web requests that you want AWS WAF to
        * 				inspect for snippets of SQL code.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateSqlInjectionMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateSqlInjectionMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateSqlInjectionMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSqlInjectionMatchSetCommandInput} for command's `input` shape.
        * @see {@link UpdateSqlInjectionMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateSqlInjectionMatchSetCommand extends $Command<UpdateSqlInjectionMatchSetCommandInput, UpdateSqlInjectionMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateSqlInjectionMatchSetCommandInput;
            constructor(input: UpdateSqlInjectionMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSqlInjectionMatchSetCommandInput, UpdateSqlInjectionMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateWebACLCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateWebACLRequest, UpdateWebACLResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateWebACLCommandInput extends UpdateWebACLRequest {
    }
    export interface UpdateWebACLCommandOutput extends UpdateWebACLResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>ActivatedRule</a> objects in a <code>WebACL</code>. Each <code>Rule</code> identifies
        * 			web requests that you want to allow, block, or count. When you update a <code>WebACL</code>, you specify the following values:</p>
        * 		       <ul>
        *             <li>
        *                <p>A default action for the <code>WebACL</code>, either <code>ALLOW</code> or <code>BLOCK</code>.
        * 				AWS WAF performs the default action if a request doesn't match the criteria in any of the <code>Rules</code> in a <code>WebACL</code>.</p>
        *             </li>
        *             <li>
        *                <p>The <code>Rules</code> that you want to add
        *                or
        *                delete. If you want to replace one <code>Rule</code> with another, you delete the
        *                existing <code>Rule</code> and add the new one.</p>
        *             </li>
        *             <li>
        *                <p>For each <code>Rule</code>, whether you want AWS WAF to allow requests, block requests, or count requests that match
        * 				the conditions in the <code>Rule</code>.</p>
        *             </li>
        *             <li>
        *                <p>The order in which you want AWS WAF to evaluate the <code>Rules</code> in a
        *                   <code>WebACL</code>. If you add more than one <code>Rule</code> to a
        *                   <code>WebACL</code>, AWS WAF evaluates each request against the <code>Rules</code>
        *                in order based on the value of <code>Priority</code>. (The <code>Rule</code> that has
        *                the lowest value for <code>Priority</code> is evaluated first.) When a web request
        *                matches all
        *                the
        *                predicates (such as <code>ByteMatchSets</code> and <code>IPSets</code>) in a
        *                   <code>Rule</code>, AWS WAF immediately takes the corresponding action, allow or
        *                block, and doesn't evaluate the request against the remaining <code>Rules</code> in
        *                the <code>WebACL</code>, if any. </p>
        *             </li>
        *          </ul>
        *
        * 		       <p>To create and configure a <code>WebACL</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Create and update the predicates that you want to include in <code>Rules</code>.
        * 				For more information, see <a>CreateByteMatchSet</a>, <a>UpdateByteMatchSet</a>, <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
        * 				<a>CreateSqlInjectionMatchSet</a>, and <a>UpdateSqlInjectionMatchSet</a>.</p>
        *             </li>
        *             <li>
        *                <p>Create and update the <code>Rules</code> that you want to include in the <code>WebACL</code>. For more information, see
        * 				<a>CreateRule</a> and <a>UpdateRule</a>.</p>
        *             </li>
        *             <li>
        *                <p>Create a <code>WebACL</code>. See <a>CreateWebACL</a>.</p>
        *             </li>
        *             <li>
        *                <p>Use <code>GetChangeToken</code> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateWebACL</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateWebACL</code> request to specify the <code>Rules</code>
        *                that you want to include in the <code>WebACL</code>, to specify the default action,
        *                and to associate the <code>WebACL</code> with a CloudFront distribution. </p>
        *                <p>The <code>ActivatedRule</code> can be a rule group. If you specify a rule group
        *                as your
        *                <code>ActivatedRule</code>
        *                ,
        *                you can exclude specific rules from that rule group.</p>
        *                <p>If you already have a rule group associated with a web ACL and want to submit
        *                an <code>UpdateWebACL</code> request to exclude certain rules from that rule group,
        *                you must first remove the rule group from the web ACL, the re-insert it again,
        *                specifying the excluded rules.
        *                For details,
        *                see
        *                   <a>ActivatedRule$ExcludedRules</a>
        *                .
        *                </p>
        *             </li>
        *          </ol>
        *          <p>Be aware that if you try to add a RATE_BASED rule to a web ACL without setting the rule type when first creating the rule, the  <a>UpdateWebACL</a> request will fail because the request tries to add a REGULAR rule (the default rule type) with the specified ID, which does not exist. 		</p>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateWebACLCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateWebACLCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateWebACLCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateWebACLCommandInput} for command's `input` shape.
        * @see {@link UpdateWebACLCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateWebACLCommand extends $Command<UpdateWebACLCommandInput, UpdateWebACLCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateWebACLCommandInput;
            constructor(input: UpdateWebACLCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateWebACLCommandInput, UpdateWebACLCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateXssMatchSetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateXssMatchSetRequest, UpdateXssMatchSetResponse } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient";
    export interface UpdateXssMatchSetCommandInput extends UpdateXssMatchSetRequest {
    }
    export interface UpdateXssMatchSetCommandOutput extends UpdateXssMatchSetResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Inserts or deletes <a>XssMatchTuple</a> objects (filters) in an <a>XssMatchSet</a>.
        * 			For each <code>XssMatchTuple</code> object, you specify the following values:</p>
        * 		       <ul>
        *             <li>
        *                <p>
        *                   <code>Action</code>: Whether to insert the object into or delete the object from the
        *                array. To change an
        *                <code>XssMatchTuple</code>, you delete the existing object and add a new
        *                one.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>FieldToMatch</code>: The part of web requests that you want AWS WAF to inspect and, if you want AWS WAF to inspect a header or custom query parameter,
        * 				the name of the header or parameter.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>TextTransformation</code>: Which text transformation, if any, to perform on the web request before
        * 				inspecting the request for cross-site scripting attacks.</p>
        * 				           <p>You can only specify a single type of TextTransformation.</p>
        *             </li>
        *          </ul>
        * 		       <p>You use <code>XssMatchSet</code> objects to specify which CloudFront requests
        *          that
        *          you want to allow, block, or count. For example, if you're receiving
        *          requests that contain cross-site scripting attacks in the request body and you want to
        *          block the requests, you can create an <code>XssMatchSet</code> with the applicable
        *          settings, and then configure AWS WAF to block the requests. </p>
        * 		       <p>To create and configure an <code>XssMatchSet</code>, perform the following steps:</p>
        * 		       <ol>
        *             <li>
        *                <p>Submit a <a>CreateXssMatchSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Use <a>GetChangeToken</a> to get the change token that you provide in the <code>ChangeToken</code> parameter of an
        * 				<a>UpdateIPSet</a> request.</p>
        *             </li>
        *             <li>
        *                <p>Submit an <code>UpdateXssMatchSet</code> request to specify the parts of web requests that you want AWS WAF to
        * 				inspect for cross-site scripting attacks.</p>
        *             </li>
        *          </ol>
        * 		       <p>For more information about how to use the AWS WAF API to allow or block HTTP requests, see the
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF Developer Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WAFClient, UpdateXssMatchSetCommand } from "@aws-sdk/client-waf"; // ES Modules import
        * // const { WAFClient, UpdateXssMatchSetCommand } = require("@aws-sdk/client-waf"); // CommonJS import
        * const client = new WAFClient(config);
        * const command = new UpdateXssMatchSetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateXssMatchSetCommandInput} for command's `input` shape.
        * @see {@link UpdateXssMatchSetCommandOutput} for command's `response` shape.
        * @see {@link WAFClientResolvedConfig | config} for WAFClient's `config` shape.
        *
        */
    export class UpdateXssMatchSetCommand extends $Command<UpdateXssMatchSetCommandInput, UpdateXssMatchSetCommandOutput, WAFClientResolvedConfig> {
            readonly input: UpdateXssMatchSetCommandInput;
            constructor(input: UpdateXssMatchSetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WAFClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateXssMatchSetCommandInput, UpdateXssMatchSetCommandOutput>;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/WAFClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateByteMatchSetCommandInput, CreateByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateByteMatchSetCommand";
    import { CreateGeoMatchSetCommandInput, CreateGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateGeoMatchSetCommand";
    import { CreateIPSetCommandInput, CreateIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateIPSetCommand";
    import { CreateRateBasedRuleCommandInput, CreateRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRateBasedRuleCommand";
    import { CreateRegexMatchSetCommandInput, CreateRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexMatchSetCommand";
    import { CreateRegexPatternSetCommandInput, CreateRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRegexPatternSetCommand";
    import { CreateRuleCommandInput, CreateRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleCommand";
    import { CreateRuleGroupCommandInput, CreateRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateRuleGroupCommand";
    import { CreateSizeConstraintSetCommandInput, CreateSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSizeConstraintSetCommand";
    import { CreateSqlInjectionMatchSetCommandInput, CreateSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateSqlInjectionMatchSetCommand";
    import { CreateWebACLCommandInput, CreateWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLCommand";
    import { CreateWebACLMigrationStackCommandInput, CreateWebACLMigrationStackCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateWebACLMigrationStackCommand";
    import { CreateXssMatchSetCommandInput, CreateXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/CreateXssMatchSetCommand";
    import { DeleteByteMatchSetCommandInput, DeleteByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteByteMatchSetCommand";
    import { DeleteGeoMatchSetCommandInput, DeleteGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteGeoMatchSetCommand";
    import { DeleteIPSetCommandInput, DeleteIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteIPSetCommand";
    import { DeleteLoggingConfigurationCommandInput, DeleteLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteLoggingConfigurationCommand";
    import { DeletePermissionPolicyCommandInput, DeletePermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeletePermissionPolicyCommand";
    import { DeleteRateBasedRuleCommandInput, DeleteRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRateBasedRuleCommand";
    import { DeleteRegexMatchSetCommandInput, DeleteRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexMatchSetCommand";
    import { DeleteRegexPatternSetCommandInput, DeleteRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRegexPatternSetCommand";
    import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleCommand";
    import { DeleteRuleGroupCommandInput, DeleteRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteRuleGroupCommand";
    import { DeleteSizeConstraintSetCommandInput, DeleteSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSizeConstraintSetCommand";
    import { DeleteSqlInjectionMatchSetCommandInput, DeleteSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteSqlInjectionMatchSetCommand";
    import { DeleteWebACLCommandInput, DeleteWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteWebACLCommand";
    import { DeleteXssMatchSetCommandInput, DeleteXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/DeleteXssMatchSetCommand";
    import { GetByteMatchSetCommandInput, GetByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetByteMatchSetCommand";
    import { GetChangeTokenCommandInput, GetChangeTokenCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenCommand";
    import { GetChangeTokenStatusCommandInput, GetChangeTokenStatusCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetChangeTokenStatusCommand";
    import { GetGeoMatchSetCommandInput, GetGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetGeoMatchSetCommand";
    import { GetIPSetCommandInput, GetIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetIPSetCommand";
    import { GetLoggingConfigurationCommandInput, GetLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetLoggingConfigurationCommand";
    import { GetPermissionPolicyCommandInput, GetPermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetPermissionPolicyCommand";
    import { GetRateBasedRuleCommandInput, GetRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleCommand";
    import { GetRateBasedRuleManagedKeysCommandInput, GetRateBasedRuleManagedKeysCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRateBasedRuleManagedKeysCommand";
    import { GetRegexMatchSetCommandInput, GetRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexMatchSetCommand";
    import { GetRegexPatternSetCommandInput, GetRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRegexPatternSetCommand";
    import { GetRuleCommandInput, GetRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleCommand";
    import { GetRuleGroupCommandInput, GetRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetRuleGroupCommand";
    import { GetSampledRequestsCommandInput, GetSampledRequestsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSampledRequestsCommand";
    import { GetSizeConstraintSetCommandInput, GetSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSizeConstraintSetCommand";
    import { GetSqlInjectionMatchSetCommandInput, GetSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetSqlInjectionMatchSetCommand";
    import { GetWebACLCommandInput, GetWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetWebACLCommand";
    import { GetXssMatchSetCommandInput, GetXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/GetXssMatchSetCommand";
    import { ListActivatedRulesInRuleGroupCommandInput, ListActivatedRulesInRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListActivatedRulesInRuleGroupCommand";
    import { ListByteMatchSetsCommandInput, ListByteMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListByteMatchSetsCommand";
    import { ListGeoMatchSetsCommandInput, ListGeoMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListGeoMatchSetsCommand";
    import { ListIPSetsCommandInput, ListIPSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListIPSetsCommand";
    import { ListLoggingConfigurationsCommandInput, ListLoggingConfigurationsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListLoggingConfigurationsCommand";
    import { ListRateBasedRulesCommandInput, ListRateBasedRulesCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRateBasedRulesCommand";
    import { ListRegexMatchSetsCommandInput, ListRegexMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexMatchSetsCommand";
    import { ListRegexPatternSetsCommandInput, ListRegexPatternSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRegexPatternSetsCommand";
    import { ListRuleGroupsCommandInput, ListRuleGroupsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRuleGroupsCommand";
    import { ListRulesCommandInput, ListRulesCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListRulesCommand";
    import { ListSizeConstraintSetsCommandInput, ListSizeConstraintSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSizeConstraintSetsCommand";
    import { ListSqlInjectionMatchSetsCommandInput, ListSqlInjectionMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSqlInjectionMatchSetsCommand";
    import { ListSubscribedRuleGroupsCommandInput, ListSubscribedRuleGroupsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListSubscribedRuleGroupsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListTagsForResourceCommand";
    import { ListWebACLsCommandInput, ListWebACLsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListWebACLsCommand";
    import { ListXssMatchSetsCommandInput, ListXssMatchSetsCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/ListXssMatchSetsCommand";
    import { PutLoggingConfigurationCommandInput, PutLoggingConfigurationCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutLoggingConfigurationCommand";
    import { PutPermissionPolicyCommandInput, PutPermissionPolicyCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/PutPermissionPolicyCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UntagResourceCommand";
    import { UpdateByteMatchSetCommandInput, UpdateByteMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateByteMatchSetCommand";
    import { UpdateGeoMatchSetCommandInput, UpdateGeoMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateGeoMatchSetCommand";
    import { UpdateIPSetCommandInput, UpdateIPSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateIPSetCommand";
    import { UpdateRateBasedRuleCommandInput, UpdateRateBasedRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRateBasedRuleCommand";
    import { UpdateRegexMatchSetCommandInput, UpdateRegexMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexMatchSetCommand";
    import { UpdateRegexPatternSetCommandInput, UpdateRegexPatternSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRegexPatternSetCommand";
    import { UpdateRuleCommandInput, UpdateRuleCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleCommand";
    import { UpdateRuleGroupCommandInput, UpdateRuleGroupCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateRuleGroupCommand";
    import { UpdateSizeConstraintSetCommandInput, UpdateSizeConstraintSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSizeConstraintSetCommand";
    import { UpdateSqlInjectionMatchSetCommandInput, UpdateSqlInjectionMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateSqlInjectionMatchSetCommand";
    import { UpdateWebACLCommandInput, UpdateWebACLCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateWebACLCommand";
    import { UpdateXssMatchSetCommandInput, UpdateXssMatchSetCommandOutput } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/commands/UpdateXssMatchSetCommand";
    export type ServiceInputTypes = CreateByteMatchSetCommandInput | CreateGeoMatchSetCommandInput | CreateIPSetCommandInput | CreateRateBasedRuleCommandInput | CreateRegexMatchSetCommandInput | CreateRegexPatternSetCommandInput | CreateRuleCommandInput | CreateRuleGroupCommandInput | CreateSizeConstraintSetCommandInput | CreateSqlInjectionMatchSetCommandInput | CreateWebACLCommandInput | CreateWebACLMigrationStackCommandInput | CreateXssMatchSetCommandInput | DeleteByteMatchSetCommandInput | DeleteGeoMatchSetCommandInput | DeleteIPSetCommandInput | DeleteLoggingConfigurationCommandInput | DeletePermissionPolicyCommandInput | DeleteRateBasedRuleCommandInput | DeleteRegexMatchSetCommandInput | DeleteRegexPatternSetCommandInput | DeleteRuleCommandInput | DeleteRuleGroupCommandInput | DeleteSizeConstraintSetCommandInput | DeleteSqlInjectionMatchSetCommandInput | DeleteWebACLCommandInput | DeleteXssMatchSetCommandInput | GetByteMatchSetCommandInput | GetChangeTokenCommandInput | GetChangeTokenStatusCommandInput | GetGeoMatchSetCommandInput | GetIPSetCommandInput | GetLoggingConfigurationCommandInput | GetPermissionPolicyCommandInput | GetRateBasedRuleCommandInput | GetRateBasedRuleManagedKeysCommandInput | GetRegexMatchSetCommandInput | GetRegexPatternSetCommandInput | GetRuleCommandInput | GetRuleGroupCommandInput | GetSampledRequestsCommandInput | GetSizeConstraintSetCommandInput | GetSqlInjectionMatchSetCommandInput | GetWebACLCommandInput | GetXssMatchSetCommandInput | ListActivatedRulesInRuleGroupCommandInput | ListByteMatchSetsCommandInput | ListGeoMatchSetsCommandInput | ListIPSetsCommandInput | ListLoggingConfigurationsCommandInput | ListRateBasedRulesCommandInput | ListRegexMatchSetsCommandInput | ListRegexPatternSetsCommandInput | ListRuleGroupsCommandInput | ListRulesCommandInput | ListSizeConstraintSetsCommandInput | ListSqlInjectionMatchSetsCommandInput | ListSubscribedRuleGroupsCommandInput | ListTagsForResourceCommandInput | ListWebACLsCommandInput | ListXssMatchSetsCommandInput | PutLoggingConfigurationCommandInput | PutPermissionPolicyCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateByteMatchSetCommandInput | UpdateGeoMatchSetCommandInput | UpdateIPSetCommandInput | UpdateRateBasedRuleCommandInput | UpdateRegexMatchSetCommandInput | UpdateRegexPatternSetCommandInput | UpdateRuleCommandInput | UpdateRuleGroupCommandInput | UpdateSizeConstraintSetCommandInput | UpdateSqlInjectionMatchSetCommandInput | UpdateWebACLCommandInput | UpdateXssMatchSetCommandInput;
    export type ServiceOutputTypes = CreateByteMatchSetCommandOutput | CreateGeoMatchSetCommandOutput | CreateIPSetCommandOutput | CreateRateBasedRuleCommandOutput | CreateRegexMatchSetCommandOutput | CreateRegexPatternSetCommandOutput | CreateRuleCommandOutput | CreateRuleGroupCommandOutput | CreateSizeConstraintSetCommandOutput | CreateSqlInjectionMatchSetCommandOutput | CreateWebACLCommandOutput | CreateWebACLMigrationStackCommandOutput | CreateXssMatchSetCommandOutput | DeleteByteMatchSetCommandOutput | DeleteGeoMatchSetCommandOutput | DeleteIPSetCommandOutput | DeleteLoggingConfigurationCommandOutput | DeletePermissionPolicyCommandOutput | DeleteRateBasedRuleCommandOutput | DeleteRegexMatchSetCommandOutput | DeleteRegexPatternSetCommandOutput | DeleteRuleCommandOutput | DeleteRuleGroupCommandOutput | DeleteSizeConstraintSetCommandOutput | DeleteSqlInjectionMatchSetCommandOutput | DeleteWebACLCommandOutput | DeleteXssMatchSetCommandOutput | GetByteMatchSetCommandOutput | GetChangeTokenCommandOutput | GetChangeTokenStatusCommandOutput | GetGeoMatchSetCommandOutput | GetIPSetCommandOutput | GetLoggingConfigurationCommandOutput | GetPermissionPolicyCommandOutput | GetRateBasedRuleCommandOutput | GetRateBasedRuleManagedKeysCommandOutput | GetRegexMatchSetCommandOutput | GetRegexPatternSetCommandOutput | GetRuleCommandOutput | GetRuleGroupCommandOutput | GetSampledRequestsCommandOutput | GetSizeConstraintSetCommandOutput | GetSqlInjectionMatchSetCommandOutput | GetWebACLCommandOutput | GetXssMatchSetCommandOutput | ListActivatedRulesInRuleGroupCommandOutput | ListByteMatchSetsCommandOutput | ListGeoMatchSetsCommandOutput | ListIPSetsCommandOutput | ListLoggingConfigurationsCommandOutput | ListRateBasedRulesCommandOutput | ListRegexMatchSetsCommandOutput | ListRegexPatternSetsCommandOutput | ListRuleGroupsCommandOutput | ListRulesCommandOutput | ListSizeConstraintSetsCommandOutput | ListSqlInjectionMatchSetsCommandOutput | ListSubscribedRuleGroupsCommandOutput | ListTagsForResourceCommandOutput | ListWebACLsCommandOutput | ListXssMatchSetsCommandOutput | PutLoggingConfigurationCommandOutput | PutPermissionPolicyCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateByteMatchSetCommandOutput | UpdateGeoMatchSetCommandOutput | UpdateIPSetCommandOutput | UpdateRateBasedRuleCommandOutput | UpdateRegexMatchSetCommandOutput | UpdateRegexPatternSetCommandOutput | UpdateRuleCommandOutput | UpdateRuleGroupCommandOutput | UpdateSizeConstraintSetCommandOutput | UpdateSqlInjectionMatchSetCommandOutput | UpdateWebACLCommandOutput | UpdateXssMatchSetCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type WAFClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of WAFClient class constructor that set the region, credentials and other options.
        */
    export interface WAFClientConfig extends WAFClientConfigType {
    }
    type WAFClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of WAFClient class. This is resolved and normalized from the {@link WAFClientConfig | constructor configuration interface}.
        */
    export interface WAFClientResolvedConfig extends WAFClientResolvedConfigType {
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 	        <p>This is the <i>AWS WAF Classic API Reference</i> for using AWS WAF Classic with Amazon CloudFront. The AWS WAF Classic actions and data types listed in the reference are available for protecting Amazon CloudFront distributions. You can use these actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide is for developers who need detailed information about the AWS WAF Classic API actions,
        * 	      data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the
        * 	      <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
        */
    export class WAFClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, WAFClientResolvedConfig> {
            /**
                * The resolved configuration of WAFClient class. This is resolved and normalized from the {@link WAFClientConfig | constructor configuration interface}.
                */
            readonly config: WAFClientResolvedConfig;
            constructor(configuration: WAFClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { WAFServiceException as __BaseException } from "@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/WAFServiceException";
    export enum WafActionType {
            ALLOW = "ALLOW",
            BLOCK = "BLOCK",
            COUNT = "COUNT"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>For the action that is associated with a rule in a <code>WebACL</code>, specifies the action that you want AWS WAF to perform when a
        * 			web request matches all of the conditions in a rule. For the default action in a <code>WebACL</code>, specifies the action that you want
        * 			AWS WAF to take when a web request doesn't match all of the conditions in any of the rules in a <code>WebACL</code>. </p>
        */
    export interface WafAction {
            /**
                * <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>ALLOW</code>: AWS WAF allows requests</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>BLOCK</code>: AWS WAF blocks requests</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule.
                * 				AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code>
                * 				for the default action for a <code>WebACL</code>.</p>
                *             </li>
                *          </ul>
                */
            Type: WafActionType | string | undefined;
    }
    export namespace WafAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WafAction) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The rule to exclude from a rule group. This is applicable only when the
        *             <code>ActivatedRule</code> refers to a <code>RuleGroup</code>. The rule must belong to
        *          the <code>RuleGroup</code> that is specified by the <code>ActivatedRule</code>. </p>
        */
    export interface ExcludedRule {
            /**
                * <p>The unique identifier for the rule to exclude from the rule group.</p>
                */
            RuleId: string | undefined;
    }
    export namespace ExcludedRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExcludedRule) => any;
    }
    export enum WafOverrideActionType {
            COUNT = "COUNT",
            NONE = "NONE"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The action to take if any rule within the <code>RuleGroup</code> matches a request. </p>
        */
    export interface WafOverrideAction {
            /**
                * <p>
                *             <code>COUNT</code> overrides the action specified by the individual rule within a <code>RuleGroup</code> . If set to <code>NONE</code>, the rule's action will take place.</p>
                */
            Type: WafOverrideActionType | string | undefined;
    }
    export namespace WafOverrideAction {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WafOverrideAction) => any;
    }
    export enum WafRuleType {
            GROUP = "GROUP",
            RATE_BASED = "RATE_BASED",
            REGULAR = "REGULAR"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The <code>ActivatedRule</code> object in an <a>UpdateWebACL</a> request specifies a <code>Rule</code> that you want to insert or delete,
        * 			the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code>
        * 			(<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
        * 		       <p>To specify whether to insert or delete a <code>Rule</code>, use the <code>Action</code> parameter in the <a>WebACLUpdate</a> data type.</p>
        */
    export interface ActivatedRule {
            /**
                * <p>Specifies the order in which the <code>Rules</code> in a <code>WebACL</code> are evaluated. Rules with a lower value for
                * 			<code>Priority</code> are evaluated before <code>Rules</code> with a higher value. The value must be a unique integer. If you add multiple
                * 			<code>Rules</code> to a <code>WebACL</code>, the values don't need to be consecutive.</p>
                */
            Priority: number | undefined;
            /**
                * <p>The <code>RuleId</code> for a <code>Rule</code>. You use <code>RuleId</code> to get more information about a <code>Rule</code> (see <a>GetRule</a>),
                * 			update a <code>Rule</code> (see <a>UpdateRule</a>), insert a <code>Rule</code> into a <code>WebACL</code> or delete a
                * 			one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>Rule</code> from AWS WAF (see <a>DeleteRule</a>).</p>
                * 		       <p>
                *             <code>RuleId</code> is returned by <a>CreateRule</a> and by <a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the <code>Rule</code>.
                * 			Valid values for <code>Action</code> include the following:</p>
                * 			      <ul>
                *             <li>
                *                <p>
                *                   <code>ALLOW</code>: CloudFront responds with the requested object.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>BLOCK</code>: CloudFront responds with an HTTP 403 (Forbidden) status code.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COUNT</code>: AWS WAF increments a counter of requests that match the conditions in the rule and then continues to
                * 					inspect the web request based on the remaining rules in the web ACL. </p>
                *             </li>
                *          </ul>
                * 	        <p>
                *             <code>ActivatedRule|OverrideAction</code> applies only when updating or adding a
                *             <code>RuleGroup</code> to a <code>WebACL</code>. In this
                *          case,
                *          you do not use <code>ActivatedRule|Action</code>. For all other update requests,
                *             <code>ActivatedRule|Action</code> is used instead of
                *             <code>ActivatedRule|OverrideAction</code>.</p>
                */
            Action?: WafAction;
            /**
                * <p>Use the <code>OverrideAction</code> to test your <code>RuleGroup</code>.</p>
                *          <p>Any rule in a <code>RuleGroup</code> can potentially block a request. If you set the <code>OverrideAction</code> to <code>None</code>, the <code>RuleGroup</code> will block a request if any individual rule in the <code>RuleGroup</code> matches the request and is configured to block that request. However if you first want to test the <code>RuleGroup</code>, set the  <code>OverrideAction</code> to <code>Count</code>. The <code>RuleGroup</code> will then override any block action specified by individual rules contained within the group. Instead of blocking matching requests, those requests will be counted. You can view a record of counted requests using  <a>GetSampledRequests</a>. </p>
                * 	        <p>
                *             <code>ActivatedRule|OverrideAction</code> applies only when updating or adding a <code>RuleGroup</code> to a <code>WebACL</code>. In this case you do not use <code>ActivatedRule|Action</code>.  For all other update requests, <code>ActivatedRule|Action</code> is used instead of <code>ActivatedRule|OverrideAction</code>.</p>
                */
            OverrideAction?: WafOverrideAction;
            /**
                * <p>The rule type, either <code>REGULAR</code>, as defined by <a>Rule</a>, <code>RATE_BASED</code>, as defined by <a>RateBasedRule</a>, or <code>GROUP</code>, as defined by <a>RuleGroup</a>. The default is REGULAR. Although this field is optional, be aware that if you try to add a RATE_BASED rule to a web ACL without setting the type, the  <a>UpdateWebACL</a> request will fail because the request tries to add a REGULAR rule with the specified ID, which does not exist.
                * 			</p>
                */
            Type?: WafRuleType | string;
            /**
                * <p>An array of rules to exclude from a rule group. This is applicable only when the <code>ActivatedRule</code> refers to a <code>RuleGroup</code>.</p>
                *          <p>Sometimes it is necessary to troubleshoot rule groups that are blocking traffic
                *          unexpectedly (false positives). One troubleshooting technique is to identify the specific
                *          rule within the rule group that is blocking the legitimate traffic and then disable
                *          (exclude) that particular rule. You can exclude rules from both your own rule groups and
                *          AWS Marketplace rule groups that have been associated with a web ACL.</p>
                *          <p>Specifying <code>ExcludedRules</code> does not remove those rules from the rule group.
                *          Rather, it changes the action for the rules to <code>COUNT</code>. Therefore, requests that
                *          match an <code>ExcludedRule</code> are counted but not blocked. The <code>RuleGroup</code>
                *          owner will receive COUNT metrics for each <code>ExcludedRule</code>.</p>
                *          <p>If you want to exclude rules from a rule group that is already associated with a web ACL, perform the following steps:</p>
                *          <ol>
                *             <li>
                *                <p>Use the AWS WAF logs to identify the IDs of the rules that you want to exclude.
                *                For more information about the logs, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging.html">Logging Web ACL Traffic
                *                   Information</a>.</p>
                *             </li>
                *             <li>
                *                <p>Submit an <a>UpdateWebACL</a> request that has two actions:</p>
                *                <ul>
                *                   <li>
                *                      <p>The first action
                *                      deletes
                *                      the existing rule group from the web ACL. That is, in the <a>UpdateWebACL</a> request, the first <code>Updates:Action</code>
                *                      should be <code>DELETE</code> and <code>Updates:ActivatedRule:RuleId</code>
                *                      should be the rule group that contains the rules that you want to
                *                      exclude.</p>
                *                   </li>
                *                   <li>
                *                      <p>The second action
                *                      inserts
                *                      the same rule group back in, but specifying the rules to exclude. That is, the
                *                      second <code>Updates:Action</code> should be <code>INSERT</code>,
                *                         <code>Updates:ActivatedRule:RuleId</code> should be the rule group that you
                *                      just removed, and <code>ExcludedRules</code> should contain the rules that you
                *                      want to exclude.</p>
                *                   </li>
                *                </ul>
                *
                *             </li>
                *          </ol>
                */
            ExcludedRules?: ExcludedRule[];
    }
    export namespace ActivatedRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ActivatedRule) => any;
    }
    export interface CreateByteMatchSetRequest {
            /**
                * <p>A friendly name or description of the <a>ByteMatchSet</a>. You can't change <code>Name</code> after you create a
                * 			<code>ByteMatchSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateByteMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateByteMatchSetRequest) => any;
    }
    export enum MatchFieldType {
            ALL_QUERY_ARGS = "ALL_QUERY_ARGS",
            BODY = "BODY",
            HEADER = "HEADER",
            METHOD = "METHOD",
            QUERY_STRING = "QUERY_STRING",
            SINGLE_QUERY_ARG = "SINGLE_QUERY_ARG",
            URI = "URI"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies where in a web request to look for <code>TargetString</code>.</p>
        */
    export interface FieldToMatch {
            /**
                * <p>The part of the web request that you want AWS WAF to search for a specified string. Parts of a request that you can search include the following:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>HEADER</code>: A specified request header, for example, the value of the <code>User-Agent</code> or <code>Referer</code> header.
                * 				If you choose <code>HEADER</code> for the type, specify the name of the header in <code>Data</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>METHOD</code>: The HTTP method, which indicated the type of operation that the request is asking the origin to perform.
                * 				Amazon CloudFront supports the following methods: <code>DELETE</code>, <code>GET</code>, <code>HEAD</code>, <code>OPTIONS</code>, <code>PATCH</code>,
                * 				<code>POST</code>, and <code>PUT</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>QUERY_STRING</code>: A query string, which is the part of a URL that appears after a <code>?</code> character, if any.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>URI</code>: The part of a web request that identifies a resource, for example, <code>/images/daily-ad.jpg</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>BODY</code>: The part of a request that contains any additional data that you want to send to your web server
                * 				as the HTTP request body, such as data from a form. The request body immediately follows the request headers.
                * 				Note that only the first <code>8192</code> bytes of the request body are forwarded to AWS WAF for inspection.
                * 				To allow or block requests based on the length of the body, you can create a size constraint set.
                * 				For more information, see <a>CreateSizeConstraintSet</a>. </p>
                *             </li>
                *             <li>
                * 		             <p>
                * 		                <code>SINGLE_QUERY_ARG</code>: The parameter in the query string that you will inspect, such as <i>UserName</i> or <i>SalesRegion</i>. The maximum length for <code>SINGLE_QUERY_ARG</code> is 30 characters.</p>
                * 		          </li>
                *             <li>
                * 		             <p>
                * 		                <code>ALL_QUERY_ARGS</code>: Similar to <code>SINGLE_QUERY_ARG</code>, but rather than inspecting a single parameter, AWS WAF will inspect all parameters within the query for the value or regex pattern that you specify in
                * 		             <code>TargetString</code>.</p>
                * 		          </li>
                *          </ul>
                */
            Type: MatchFieldType | string | undefined;
            /**
                * <p>When the value of <code>Type</code> is <code>HEADER</code>, enter the name of the header that you want AWS WAF to search,
                * 			for example, <code>User-Agent</code> or <code>Referer</code>. The name of the header is not case sensitive.</p>
                * 	        <p>When the value of <code>Type</code> is <code>SINGLE_QUERY_ARG</code>, enter the name of the parameter that you want AWS WAF to search,
                * 	        for example, <code>UserName</code> or <code>SalesRegion</code>. The parameter name is not case sensitive.</p>
                * 	        <p>If the value of <code>Type</code> is any other value, omit <code>Data</code>.</p>
                */
            Data?: string;
    }
    export namespace FieldToMatch {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FieldToMatch) => any;
    }
    export enum PositionalConstraint {
            CONTAINS = "CONTAINS",
            CONTAINS_WORD = "CONTAINS_WORD",
            ENDS_WITH = "ENDS_WITH",
            EXACTLY = "EXACTLY",
            STARTS_WITH = "STARTS_WITH"
    }
    export enum TextTransformation {
            CMD_LINE = "CMD_LINE",
            COMPRESS_WHITE_SPACE = "COMPRESS_WHITE_SPACE",
            HTML_ENTITY_DECODE = "HTML_ENTITY_DECODE",
            LOWERCASE = "LOWERCASE",
            NONE = "NONE",
            URL_DECODE = "URL_DECODE"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings.</p>
        */
    export interface ByteMatchTuple {
            /**
                * <p>The part of a web request that you want AWS WAF to search, such as a specified header or a query string. For more information, see
                * 			<a>FieldToMatch</a>.</p>
                */
            FieldToMatch: FieldToMatch | undefined;
            /**
                * <p>The value that you want AWS WAF to search for. AWS WAF searches for the specified string in the part of web requests that you
                * 			specified in <code>FieldToMatch</code>. The maximum length of the value is 50 bytes.</p>
                * 		       <p>Valid values depend on the values that you specified for <code>FieldToMatch</code>:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>HEADER</code>: The value that you want AWS WAF to search for in the request header that you specified in
                * 				<a>FieldToMatch</a>, for example, the value of the <code>User-Agent</code> or <code>Referer</code> header.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>METHOD</code>: The HTTP method, which indicates the type of operation specified in the request.
                * 				CloudFront supports the following methods: <code>DELETE</code>, <code>GET</code>, <code>HEAD</code>, <code>OPTIONS</code>,
                * 				<code>PATCH</code>, <code>POST</code>, and <code>PUT</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>QUERY_STRING</code>: The value that you want AWS WAF to search for in the query string, which is the part
                * 				of a URL that appears after a <code>?</code> character.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>URI</code>: The value that you want AWS WAF to search for in the part of a URL that identifies a resource,
                * 				for example, <code>/images/daily-ad.jpg</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>BODY</code>: The part of a request that contains any additional data that you want to send to your web server
                * 				as the HTTP request body, such as data from a form. The request body immediately follows the request headers.
                * 				Note that only the first <code>8192</code> bytes of the request body are forwarded to AWS WAF for inspection.
                * 				To allow or block requests based on the length of the body, you can create a size constraint set.
                * 				For more information, see <a>CreateSizeConstraintSet</a>. </p>
                *             </li>
                *             <li>
                * 		             <p>
                * 		                <code>SINGLE_QUERY_ARG</code>: The parameter in the query string that you will inspect, such as <i>UserName</i> or <i>SalesRegion</i>. The maximum length for <code>SINGLE_QUERY_ARG</code> is 30 characters.</p>
                * 		          </li>
                *             <li>
                * 		             <p>
                *                   <code>ALL_QUERY_ARGS</code>: Similar to <code>SINGLE_QUERY_ARG</code>, but instead of
                *                inspecting a single parameter, AWS WAF inspects all parameters within the query
                *                string for the value or regex pattern that you specify in
                *                <code>TargetString</code>.</p>
                * 		          </li>
                *          </ul>
                *
                * 		       <p>If <code>TargetString</code> includes alphabetic characters A-Z and a-z, note that the value is case sensitive.</p>
                * 		       <p>
                *             <b>If you're using the AWS WAF API</b>
                *          </p>
                * 		       <p>Specify a base64-encoded version of the value. The maximum length of the value before you base64-encode it is 50 bytes.</p>
                * 		       <p>For example, suppose the value of <code>Type</code> is <code>HEADER</code> and the
                *          value of <code>Data</code> is <code>User-Agent</code>. If you want to search the
                *             <code>User-Agent</code> header for the value <code>BadBot</code>, you base64-encode
                *             <code>BadBot</code> using MIME
                *          base64-encoding
                *          and include the resulting value, <code>QmFkQm90</code>, in the value of
                *             <code>TargetString</code>.</p>
                * 		       <p>
                *             <b>If you're using the AWS CLI or one of the AWS SDKs</b>
                *          </p>
                * 		       <p>The value that you want AWS WAF to search for. The SDK automatically base64 encodes the value.</p>
                */
            TargetString: Uint8Array | undefined;
            /**
                * <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                * 			If you specify a transformation, AWS WAF performs the transformation on <code>FieldToMatch</code> before inspecting it for a match.</p>
                *          <p>You can only specify a single type of TextTransformation.</p>
                * 		       <p>
                *             <b>CMD_LINE</b>
                *          </p>
                * 		       <p>When you're concerned that attackers are injecting an operating system command line
                *          command and using unusual formatting to disguise some or all of the command, use this
                *          option to perform the following transformations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Delete the following characters: \ " ' ^</p>
                *             </li>
                *             <li>
                *                <p>Delete spaces before the following characters: / (</p>
                *             </li>
                *             <li>
                *                <p>Replace the following characters with a space: , ;</p>
                *             </li>
                *             <li>
                *                <p>Replace multiple spaces with one space</p>
                *             </li>
                *             <li>
                *                <p>Convert uppercase letters (A-Z) to lowercase (a-z)</p>
                *             </li>
                *          </ul>
                *
                * 		       <p>
                *             <b>COMPRESS_WHITE_SPACE</b>
                *          </p>
                * 		       <p>Use this option to replace the following characters with a space character (decimal 32):</p>
                * 		       <ul>
                *             <li>
                *                <p>\f, formfeed, decimal 12</p>
                *             </li>
                *             <li>
                *                <p>\t, tab, decimal 9</p>
                *             </li>
                *             <li>
                *                <p>\n, newline, decimal 10</p>
                *             </li>
                *             <li>
                *                <p>\r, carriage return, decimal 13</p>
                *             </li>
                *             <li>
                *                <p>\v, vertical tab, decimal 11</p>
                *             </li>
                *             <li>
                *                <p>non-breaking space, decimal 160</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <code>COMPRESS_WHITE_SPACE</code> also replaces multiple spaces with one space.</p>
                * 		       <p>
                *             <b>HTML_ENTITY_DECODE</b>
                *          </p>
                * 		       <p>Use this option to replace HTML-encoded characters with unencoded characters. <code>HTML_ENTITY_DECODE</code> performs
                * 			the following operations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Replaces <code>(ampersand)quot;</code> with <code>"</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)nbsp;</code> with a non-breaking space, decimal 160</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)lt;</code> with a "less than" symbol</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)gt;</code> with <code>></code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in hexadecimal format, <code>(ampersand)#xhhhh;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in decimal format, <code>(ampersand)#nnnn;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>LOWERCASE</b>
                *          </p>
                * 		       <p>Use this option to convert uppercase letters (A-Z) to lowercase (a-z).</p>
                * 		       <p>
                *             <b>URL_DECODE</b>
                *          </p>
                * 		       <p>Use this option to decode a URL-encoded value.</p>
                * 		       <p>
                *             <b>NONE</b>
                *          </p>
                * 		       <p>Specify <code>NONE</code> if you don't want to perform any text transformations.</p>
                */
            TextTransformation: TextTransformation | string | undefined;
            /**
                * <p>Within the portion of a web request that you want to search (for example, in the query string, if any), specify where you want AWS WAF to search. Valid values include the following:</p>
                * 		       <p>
                *             <b>CONTAINS</b>
                *          </p>
                * 		       <p>The specified part of the web request must include the value of <code>TargetString</code>, but the location doesn't matter.</p>
                * 		       <p>
                *             <b>CONTAINS_WORD</b>
                *          </p>
                * 		       <p>The specified part of the web request must include the value of <code>TargetString</code>, and
                * 			<code>TargetString</code> must contain only alphanumeric characters or underscore (A-Z, a-z, 0-9, or _). In addition,
                * 			<code>TargetString</code> must be a word, which means one of the following:</p>
                * 			      <ul>
                *             <li>
                *                <p>
                *                   <code>TargetString</code> exactly matches the value of the specified part of the web request, such as the value of a
                * 					header.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TargetString</code> is at the beginning of the specified part of the web request and is followed by a character
                * 					other than an alphanumeric character or underscore (_), for example, <code>BadBot;</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TargetString</code> is at the end of the specified part of the web request and is preceded by a character
                * 					other than an alphanumeric character or underscore (_), for example, <code>;BadBot</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TargetString</code> is in the middle of the specified part of the web request and is preceded and followed
                * 					by characters other than alphanumeric characters or underscore (_), for example, <code>-BadBot;</code>.</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>EXACTLY</b>
                *          </p>
                * 		       <p>The value of the specified part of the web request must exactly match the value of <code>TargetString</code>.</p>
                * 		       <p>
                *             <b>STARTS_WITH</b>
                *          </p>
                * 		       <p>The value of <code>TargetString</code> must appear at the beginning of the specified part of the web request.</p>
                * 		       <p>
                *             <b>ENDS_WITH</b>
                *          </p>
                * 		       <p>The value of <code>TargetString</code> must appear at the end of the specified part of the web request.</p>
                */
            PositionalConstraint: PositionalConstraint | string | undefined;
    }
    export namespace ByteMatchTuple {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ByteMatchTuple) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>In a <a>GetByteMatchSet</a> request, <code>ByteMatchSet</code> is a complex type that contains the <code>ByteMatchSetId</code> and
        * 			<code>Name</code> of a <code>ByteMatchSet</code>, and the values that you specified when you updated the <code>ByteMatchSet</code>. </p>
        * 		       <p>A complex type that contains <code>ByteMatchTuple</code> objects, which specify the parts of web requests that you
        * 			want AWS WAF to inspect and the values that you want AWS WAF to search for. If a <code>ByteMatchSet</code> contains more than one
        * 			<code>ByteMatchTuple</code> object, a request needs to match the settings in only one <code>ByteMatchTuple</code>
        * 			to be considered a match.</p>
        */
    export interface ByteMatchSet {
            /**
                * <p>The <code>ByteMatchSetId</code> for a <code>ByteMatchSet</code>. You use <code>ByteMatchSetId</code> to get information about a
                * 			<code>ByteMatchSet</code> (see <a>GetByteMatchSet</a>), update a <code>ByteMatchSet</code> (see <a>UpdateByteMatchSet</a>),
                * 			insert a <code>ByteMatchSet</code> into a <code>Rule</code> or delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and
                * 			delete a <code>ByteMatchSet</code> from AWS WAF (see <a>DeleteByteMatchSet</a>).</p>
                * 		       <p>
                *             <code>ByteMatchSetId</code> is returned by <a>CreateByteMatchSet</a> and by <a>ListByteMatchSets</a>.</p>
                */
            ByteMatchSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>ByteMatchSet</a>. You can't change <code>Name</code> after you create a <code>ByteMatchSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Specifies the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings.</p>
                */
            ByteMatchTuples: ByteMatchTuple[] | undefined;
    }
    export namespace ByteMatchSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ByteMatchSet) => any;
    }
    export interface CreateByteMatchSetResponse {
            /**
                * <p>A <a>ByteMatchSet</a> that contains no <code>ByteMatchTuple</code> objects.</p>
                */
            ByteMatchSet?: ByteMatchSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateByteMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateByteMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateByteMatchSetResponse) => any;
    }
    /**
        * <p>The name specified is invalid.</p>
        */
    export class WAFDisallowedNameException extends __BaseException {
            readonly name: "WAFDisallowedNameException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFDisallowedNameException, __BaseException>);
    }
    /**
        * <p>The operation failed because of a system problem, even though the request was valid. Retry your request.</p>
        */
    export class WAFInternalErrorException extends __BaseException {
            readonly name: "WAFInternalErrorException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInternalErrorException, __BaseException>);
    }
    /**
        * <p>The operation failed because you tried to create, update, or delete an object by using an invalid account identifier.</p>
        */
    export class WAFInvalidAccountException extends __BaseException {
            readonly name: "WAFInvalidAccountException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInvalidAccountException, __BaseException>);
    }
    export enum ParameterExceptionField {
            BYTE_MATCH_FIELD_TYPE = "BYTE_MATCH_FIELD_TYPE",
            BYTE_MATCH_POSITIONAL_CONSTRAINT = "BYTE_MATCH_POSITIONAL_CONSTRAINT",
            BYTE_MATCH_TEXT_TRANSFORMATION = "BYTE_MATCH_TEXT_TRANSFORMATION",
            CHANGE_ACTION = "CHANGE_ACTION",
            GEO_MATCH_LOCATION_TYPE = "GEO_MATCH_LOCATION_TYPE",
            GEO_MATCH_LOCATION_VALUE = "GEO_MATCH_LOCATION_VALUE",
            IPSET_TYPE = "IPSET_TYPE",
            NEXT_MARKER = "NEXT_MARKER",
            PREDICATE_TYPE = "PREDICATE_TYPE",
            RATE_KEY = "RATE_KEY",
            RESOURCE_ARN = "RESOURCE_ARN",
            RULE_TYPE = "RULE_TYPE",
            SIZE_CONSTRAINT_COMPARISON_OPERATOR = "SIZE_CONSTRAINT_COMPARISON_OPERATOR",
            SQL_INJECTION_MATCH_FIELD_TYPE = "SQL_INJECTION_MATCH_FIELD_TYPE",
            TAGS = "TAGS",
            TAG_KEYS = "TAG_KEYS",
            WAF_ACTION = "WAF_ACTION",
            WAF_OVERRIDE_ACTION = "WAF_OVERRIDE_ACTION"
    }
    export enum ParameterExceptionReason {
            ILLEGAL_ARGUMENT = "ILLEGAL_ARGUMENT",
            ILLEGAL_COMBINATION = "ILLEGAL_COMBINATION",
            INVALID_OPTION = "INVALID_OPTION",
            INVALID_TAG_KEY = "INVALID_TAG_KEY"
    }
    /**
        * <p>The operation failed because AWS WAF didn't recognize a parameter in the request. For example:</p>
        * 			      <ul>
        *             <li>
        *                <p>You specified an invalid parameter name.</p>
        *             </li>
        *             <li>
        *                <p>You specified an invalid value.</p>
        *             </li>
        *             <li>
        *                <p>You tried to update an object (<code>ByteMatchSet</code>, <code>IPSet</code>, <code>Rule</code>, or <code>WebACL</code>)
        * 					using an action other than <code>INSERT</code> or <code>DELETE</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to create a <code>WebACL</code> with a <code>DefaultAction</code>
        *                   <code>Type</code> other than
        * 					<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>.</p>
        *             </li>
        *             <li>
        * 		 	           <p>You tried to create a <code>RateBasedRule</code> with a <code>RateKey</code> value other than <code>IP</code>.</p>
        * 		          </li>
        *             <li>
        *                <p>You tried to update a <code>WebACL</code> with a <code>WafAction</code>
        *                   <code>Type</code> other than
        * 					<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to update a <code>ByteMatchSet</code> with a <code>FieldToMatch</code>
        *                   <code>Type</code> other than
        * 					HEADER, METHOD, QUERY_STRING, URI, or BODY.</p>
        *             </li>
        *             <li>
        *                <p>You tried to update a <code>ByteMatchSet</code> with a <code>Field</code> of <code>HEADER</code>
        * 					but no value for <code>Data</code>.</p>
        *             </li>
        *             <li>
        * 			   		       <p>Your request references an ARN that is malformed, or corresponds to a resource with which a web ACL cannot be associated.</p>
        * 			   	     </li>
        *          </ul>
        */
    export class WAFInvalidParameterException extends __BaseException {
            readonly name: "WAFInvalidParameterException";
            readonly $fault: "client";
            field?: ParameterExceptionField | string;
            parameter?: string;
            reason?: ParameterExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInvalidParameterException, __BaseException>);
    }
    /**
        * <p>The operation exceeds a resource limit, for example, the maximum number of <code>WebACL</code> objects that you can create
        * 			for an AWS account. For more information, see
        * 			<a href="https://docs.aws.amazon.com/waf/latest/developerguide/limits.html">Limits</a> in the <i>AWS WAF Developer Guide</i>.</p>
        */
    export class WAFLimitsExceededException extends __BaseException {
            readonly name: "WAFLimitsExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFLimitsExceededException, __BaseException>);
    }
    /**
        * <p>The operation failed because you tried to create, update, or delete an object by using a change token that has already been used.</p>
        */
    export class WAFStaleDataException extends __BaseException {
            readonly name: "WAFStaleDataException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFStaleDataException, __BaseException>);
    }
    export interface CreateGeoMatchSetRequest {
            /**
                * <p>A friendly name or description of the <a>GeoMatchSet</a>. You can't change <code>Name</code> after you create the <code>GeoMatchSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateGeoMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGeoMatchSetRequest) => any;
    }
    export enum GeoMatchConstraintType {
            Country = "Country"
    }
    export enum GeoMatchConstraintValue {
            AD = "AD",
            AE = "AE",
            AF = "AF",
            AG = "AG",
            AI = "AI",
            AL = "AL",
            AM = "AM",
            AO = "AO",
            AQ = "AQ",
            AR = "AR",
            AS = "AS",
            AT = "AT",
            AU = "AU",
            AW = "AW",
            AX = "AX",
            AZ = "AZ",
            BA = "BA",
            BB = "BB",
            BD = "BD",
            BE = "BE",
            BF = "BF",
            BG = "BG",
            BH = "BH",
            BI = "BI",
            BJ = "BJ",
            BL = "BL",
            BM = "BM",
            BN = "BN",
            BO = "BO",
            BQ = "BQ",
            BR = "BR",
            BS = "BS",
            BT = "BT",
            BV = "BV",
            BW = "BW",
            BY = "BY",
            BZ = "BZ",
            CA = "CA",
            CC = "CC",
            CD = "CD",
            CF = "CF",
            CG = "CG",
            CH = "CH",
            CI = "CI",
            CK = "CK",
            CL = "CL",
            CM = "CM",
            CN = "CN",
            CO = "CO",
            CR = "CR",
            CU = "CU",
            CV = "CV",
            CW = "CW",
            CX = "CX",
            CY = "CY",
            CZ = "CZ",
            DE = "DE",
            DJ = "DJ",
            DK = "DK",
            DM = "DM",
            DO = "DO",
            DZ = "DZ",
            EC = "EC",
            EE = "EE",
            EG = "EG",
            EH = "EH",
            ER = "ER",
            ES = "ES",
            ET = "ET",
            FI = "FI",
            FJ = "FJ",
            FK = "FK",
            FM = "FM",
            FO = "FO",
            FR = "FR",
            GA = "GA",
            GB = "GB",
            GD = "GD",
            GE = "GE",
            GF = "GF",
            GG = "GG",
            GH = "GH",
            GI = "GI",
            GL = "GL",
            GM = "GM",
            GN = "GN",
            GP = "GP",
            GQ = "GQ",
            GR = "GR",
            GS = "GS",
            GT = "GT",
            GU = "GU",
            GW = "GW",
            GY = "GY",
            HK = "HK",
            HM = "HM",
            HN = "HN",
            HR = "HR",
            HT = "HT",
            HU = "HU",
            ID = "ID",
            IE = "IE",
            IL = "IL",
            IM = "IM",
            IN = "IN",
            IO = "IO",
            IQ = "IQ",
            IR = "IR",
            IS = "IS",
            IT = "IT",
            JE = "JE",
            JM = "JM",
            JO = "JO",
            JP = "JP",
            KE = "KE",
            KG = "KG",
            KH = "KH",
            KI = "KI",
            KM = "KM",
            KN = "KN",
            KP = "KP",
            KR = "KR",
            KW = "KW",
            KY = "KY",
            KZ = "KZ",
            LA = "LA",
            LB = "LB",
            LC = "LC",
            LI = "LI",
            LK = "LK",
            LR = "LR",
            LS = "LS",
            LT = "LT",
            LU = "LU",
            LV = "LV",
            LY = "LY",
            MA = "MA",
            MC = "MC",
            MD = "MD",
            ME = "ME",
            MF = "MF",
            MG = "MG",
            MH = "MH",
            MK = "MK",
            ML = "ML",
            MM = "MM",
            MN = "MN",
            MO = "MO",
            MP = "MP",
            MQ = "MQ",
            MR = "MR",
            MS = "MS",
            MT = "MT",
            MU = "MU",
            MV = "MV",
            MW = "MW",
            MX = "MX",
            MY = "MY",
            MZ = "MZ",
            NA = "NA",
            NC = "NC",
            NE = "NE",
            NF = "NF",
            NG = "NG",
            NI = "NI",
            NL = "NL",
            NO = "NO",
            NP = "NP",
            NR = "NR",
            NU = "NU",
            NZ = "NZ",
            OM = "OM",
            PA = "PA",
            PE = "PE",
            PF = "PF",
            PG = "PG",
            PH = "PH",
            PK = "PK",
            PL = "PL",
            PM = "PM",
            PN = "PN",
            PR = "PR",
            PS = "PS",
            PT = "PT",
            PW = "PW",
            PY = "PY",
            QA = "QA",
            RE = "RE",
            RO = "RO",
            RS = "RS",
            RU = "RU",
            RW = "RW",
            SA = "SA",
            SB = "SB",
            SC = "SC",
            SD = "SD",
            SE = "SE",
            SG = "SG",
            SH = "SH",
            SI = "SI",
            SJ = "SJ",
            SK = "SK",
            SL = "SL",
            SM = "SM",
            SN = "SN",
            SO = "SO",
            SR = "SR",
            SS = "SS",
            ST = "ST",
            SV = "SV",
            SX = "SX",
            SY = "SY",
            SZ = "SZ",
            TC = "TC",
            TD = "TD",
            TF = "TF",
            TG = "TG",
            TH = "TH",
            TJ = "TJ",
            TK = "TK",
            TL = "TL",
            TM = "TM",
            TN = "TN",
            TO = "TO",
            TR = "TR",
            TT = "TT",
            TV = "TV",
            TW = "TW",
            TZ = "TZ",
            UA = "UA",
            UG = "UG",
            UM = "UM",
            US = "US",
            UY = "UY",
            UZ = "UZ",
            VA = "VA",
            VC = "VC",
            VE = "VE",
            VG = "VG",
            VI = "VI",
            VN = "VN",
            VU = "VU",
            WF = "WF",
            WS = "WS",
            YE = "YE",
            YT = "YT",
            ZA = "ZA",
            ZM = "ZM",
            ZW = "ZW"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The country from which web requests originate that you want AWS WAF to search for.</p>
        */
    export interface GeoMatchConstraint {
            /**
                * <p>The type of geographical area you want AWS WAF to search for. Currently <code>Country</code> is the only valid value.</p>
                */
            Type: GeoMatchConstraintType | string | undefined;
            /**
                * <p>The country that you want AWS WAF to search for.</p>
                */
            Value: GeoMatchConstraintValue | string | undefined;
    }
    export namespace GeoMatchConstraint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeoMatchConstraint) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Contains one or more countries that AWS WAF will search for.</p>
        */
    export interface GeoMatchSet {
            /**
                * <p>The <code>GeoMatchSetId</code> for an <code>GeoMatchSet</code>. You use <code>GeoMatchSetId</code> to get information about a
                * 			<code>GeoMatchSet</code> (see <a>GeoMatchSet</a>), update a <code>GeoMatchSet</code> (see <a>UpdateGeoMatchSet</a>), insert a <code>GeoMatchSet</code> into a <code>Rule</code> or delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete a <code>GeoMatchSet</code> from AWS WAF (see <a>DeleteGeoMatchSet</a>).</p>
                * 		       <p>
                *             <code>GeoMatchSetId</code> is returned by <a>CreateGeoMatchSet</a> and by <a>ListGeoMatchSets</a>.</p>
                */
            GeoMatchSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>GeoMatchSet</a>. You can't change the name of an <code>GeoMatchSet</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>An array of <a>GeoMatchConstraint</a> objects, which contain the country that you want AWS WAF to search for.</p>
                */
            GeoMatchConstraints: GeoMatchConstraint[] | undefined;
    }
    export namespace GeoMatchSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeoMatchSet) => any;
    }
    export interface CreateGeoMatchSetResponse {
            /**
                * <p>The <a>GeoMatchSet</a> returned in the <code>CreateGeoMatchSet</code> response. The <code>GeoMatchSet</code> contains no <code>GeoMatchConstraints</code>.</p>
                */
            GeoMatchSet?: GeoMatchSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateGeoMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateGeoMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGeoMatchSetResponse) => any;
    }
    export interface CreateIPSetRequest {
            /**
                * <p>A friendly name or description of the <a>IPSet</a>. You can't change <code>Name</code> after you create the <code>IPSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateIPSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateIPSetRequest) => any;
    }
    export enum IPSetDescriptorType {
            IPV4 = "IPV4",
            IPV6 = "IPV6"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the IP address type (<code>IPV4</code> or <code>IPV6</code>) and the IP address range (in CIDR format) that web requests originate from.</p>
        */
    export interface IPSetDescriptor {
            /**
                * <p>Specify <code>IPV4</code> or <code>IPV6</code>.</p>
                */
            Type: IPSetDescriptorType | string | undefined;
            /**
                * <p>Specify an IPv4 address by using CIDR notation. For example:</p>
                * 		       <ul>
                *             <li>
                *                <p>To configure AWS WAF to allow, block, or count requests that originated from the IP address 192.0.2.44, specify <code>192.0.2.44/32</code>.</p>
                *             </li>
                *             <li>
                *                <p>To configure AWS WAF to allow, block, or count requests that originated from IP addresses from 192.0.2.0 to 192.0.2.255, specify
                * 				<code>192.0.2.0/24</code>.</p>
                *             </li>
                *          </ul>
                *
                * 	        <p>For more information about CIDR notation, see the Wikipedia entry
                * 	      <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless Inter-Domain Routing</a>.</p>
                * 	        <p>Specify an IPv6 address by using CIDR notation. For example:</p>
                * 	        <ul>
                *             <li>
                * 	              <p>To configure AWS WAF to allow, block, or count requests that originated from the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify <code>1111:0000:0000:0000:0000:0000:0000:0111/128</code>.</p>
                * 	           </li>
                *             <li>
                * 	              <p>To configure AWS WAF to allow, block, or count requests that originated from IP addresses 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify <code>1111:0000:0000:0000:0000:0000:0000:0000/64</code>.</p>
                * 	           </li>
                *          </ul>
                */
            Value: string | undefined;
    }
    export namespace IPSetDescriptor {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IPSetDescriptor) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 	        <p>Contains one or more IP addresses or blocks of IP addresses specified in Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32.  AWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128.</p>
        * 	        <p>To specify an individual IP address, you specify the four-part IP address followed by a
        *             <code>/32</code>, for example, 192.0.2.0/32. To block a range of IP addresses, you can
        *          specify /8 or any range between /16 through /32 (for IPv4) or /24, /32, /48, /56, /64, or
        *          /128 (for IPv6). For more information about CIDR notation, see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
        *             Inter-Domain Routing</a>. </p>
        */
    export interface IPSet {
            /**
                * <p>The <code>IPSetId</code> for an <code>IPSet</code>. You use <code>IPSetId</code> to get information about an
                * 			<code>IPSet</code> (see <a>GetIPSet</a>), update an <code>IPSet</code> (see <a>UpdateIPSet</a>),
                * 			insert an <code>IPSet</code> into a <code>Rule</code> or delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and
                * 			delete an <code>IPSet</code> from AWS WAF (see <a>DeleteIPSet</a>).</p>
                * 		       <p>
                *             <code>IPSetId</code> is returned by <a>CreateIPSet</a> and by <a>ListIPSets</a>.</p>
                */
            IPSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>IPSet</a>. You can't change the name of an <code>IPSet</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>The IP address type (<code>IPV4</code> or <code>IPV6</code>) and the IP address range (in CIDR notation) that web requests originate from.
                * 			If the <code>WebACL</code> is associated with a CloudFront distribution and the viewer did not use an HTTP proxy or a load balancer to send the request, this is the value of the c-ip field in the CloudFront access logs.</p>
                */
            IPSetDescriptors: IPSetDescriptor[] | undefined;
    }
    export namespace IPSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IPSet) => any;
    }
    export interface CreateIPSetResponse {
            /**
                * <p>The <a>IPSet</a> returned in the <code>CreateIPSet</code> response.</p>
                */
            IPSet?: IPSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateIPSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateIPSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateIPSetResponse) => any;
    }
    export enum RateKey {
            IP = "IP"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *         <p>A tag associated with an AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
        *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
        */
    export interface Tag {
            /**
                * <p></p>
                */
            Key: string | undefined;
            /**
                * <p></p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateRateBasedRuleRequest {
            /**
                * <p>A friendly name or description of the <a>RateBasedRule</a>. You can't
                *          change the name of a <code>RateBasedRule</code> after you create it.</p>
                */
            Name: string | undefined;
            /**
                * <p>A friendly name or description for the metrics for this <code>RateBasedRule</code>.
                *           The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *           whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the
                *             <code>RateBasedRule</code>.</p>
                */
            MetricName: string | undefined;
            /**
                * <p>The field that AWS WAF uses to determine if requests are likely arriving from a single
                *          source and thus subject to rate monitoring. The only valid value for <code>RateKey</code>
                *          is <code>IP</code>. <code>IP</code> indicates that requests that arrive from the same IP
                *          address are subject to the <code>RateLimit</code> that is specified in
                *          the <code>RateBasedRule</code>.</p>
                */
            RateKey: RateKey | string | undefined;
            /**
                * <p>The maximum number of requests, which have an identical value in the field that is
                *          specified by <code>RateKey</code>, allowed in a five-minute period. If the number of
                *          requests exceeds the <code>RateLimit</code> and the other predicates specified in the rule
                *          are also met, AWS WAF triggers the action that is specified for this rule.</p>
                */
            RateLimit: number | undefined;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the
                *             <code>CreateRateBasedRule</code> request. You can also use this value to query the
                *          status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p></p>
                */
            Tags?: Tag[];
    }
    export namespace CreateRateBasedRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRateBasedRuleRequest) => any;
    }
    export enum PredicateType {
            BYTE_MATCH = "ByteMatch",
            GEO_MATCH = "GeoMatch",
            IP_MATCH = "IPMatch",
            REGEX_MATCH = "RegexMatch",
            SIZE_CONSTRAINT = "SizeConstraint",
            SQL_INJECTION_MATCH = "SqlInjectionMatch",
            XSS_MATCH = "XssMatch"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 	        <p>Specifies the <a>ByteMatchSet</a>, <a>IPSet</a>, <a>SqlInjectionMatchSet</a>, <a>XssMatchSet</a>, <a>RegexMatchSet</a>,  <a>GeoMatchSet</a>, and <a>SizeConstraintSet</a> objects
        * 			that you want to add to a <code>Rule</code> and, for each object, indicates whether you want to negate the settings, for example, requests that do
        * 			NOT originate from the IP address 192.0.2.44. </p>
        */
    export interface Predicate {
            /**
                * <p>Set <code>Negated</code> to <code>False</code> if you want AWS WAF to allow, block, or count requests based on the settings in the
                * 		       specified <a>ByteMatchSet</a>, <a>IPSet</a>, <a>SqlInjectionMatchSet</a>, <a>XssMatchSet</a>, <a>RegexMatchSet</a>,  <a>GeoMatchSet</a>,  or <a>SizeConstraintSet</a>.
                * 			For example, if an <code>IPSet</code> includes the IP address <code>192.0.2.44</code>, AWS WAF will allow or block requests based on that IP address.</p>
                * 		       <p>Set <code>Negated</code> to <code>True</code> if you want AWS WAF to allow or block a request based on the negation
                * 		       of the settings in the <a>ByteMatchSet</a>, <a>IPSet</a>, <a>SqlInjectionMatchSet</a>, <a>XssMatchSet</a>, <a>RegexMatchSet</a>,  <a>GeoMatchSet</a>, or <a>SizeConstraintSet</a>.
                * 			For example, if an <code>IPSet</code> includes the IP address <code>192.0.2.44</code>, AWS WAF will allow, block, or count requests based on
                * 			all IP addresses <i>except</i>
                *             <code>192.0.2.44</code>.</p>
                */
            Negated: boolean | undefined;
            /**
                * <p>The type of predicate in a <code>Rule</code>, such as <code>ByteMatch</code> or <code>IPSet</code>.</p>
                */
            Type: PredicateType | string | undefined;
            /**
                * <p>A unique identifier for a predicate in a <code>Rule</code>, such as <code>ByteMatchSetId</code> or <code>IPSetId</code>.
                * 			The ID is returned by the corresponding <code>Create</code> or <code>List</code> command.</p>
                */
            DataId: string | undefined;
    }
    export namespace Predicate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Predicate) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>A <code>RateBasedRule</code> is identical to a regular <a>Rule</a>, with
        *          one addition: a <code>RateBasedRule</code> counts the number of requests that arrive from a
        *          specified IP address every five minutes. For example, based on recent requests that you've
        *          seen from an attacker, you might create a <code>RateBasedRule</code> that includes the
        *          following conditions: </p>
        *          <ul>
        *             <li>
        *                <p>The requests come from 192.0.2.44.</p>
        *             </li>
        *             <li>
        *                <p>They contain the value <code>BadBot</code> in the <code>User-Agent</code>
        *                header.</p>
        *             </li>
        *          </ul>
        *          <p>In the rule, you also define the rate limit as 1,000.</p>
        *          <p>Requests that meet both of these conditions and exceed 1,000 requests every five
        *          minutes trigger the rule's action (block or count), which is defined in the web
        *          ACL.</p>
        */
    export interface RateBasedRule {
            /**
                * <p>A unique identifier for a <code>RateBasedRule</code>. You use <code>RuleId</code> to
                *          get more information about a <code>RateBasedRule</code> (see <a>GetRateBasedRule</a>), update a <code>RateBasedRule</code> (see <a>UpdateRateBasedRule</a>), insert a <code>RateBasedRule</code> into a
                *             <code>WebACL</code> or delete one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>RateBasedRule</code> from AWS WAF (see <a>DeleteRateBasedRule</a>).</p>
                */
            RuleId: string | undefined;
            /**
                * <p>A friendly name or description for a <code>RateBasedRule</code>. You can't change the
                *          name of a <code>RateBasedRule</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>A friendly name or description for the metrics for a <code>RateBasedRule</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the
                *             <code>RateBasedRule</code>.</p>
                */
            MetricName?: string;
            /**
                * <p>The <code>Predicates</code> object contains one <code>Predicate</code> element for
                *          each <a>ByteMatchSet</a>, <a>IPSet</a>, or <a>SqlInjectionMatchSet</a> object that you want to include in a
                *             <code>RateBasedRule</code>.</p>
                */
            MatchPredicates: Predicate[] | undefined;
            /**
                * <p>The field that AWS WAF uses to determine if requests are likely arriving from single
                *          source and thus subject to rate monitoring. The only valid value for <code>RateKey</code>
                *          is <code>IP</code>. <code>IP</code> indicates that requests arriving from the same IP
                *          address are subject to the <code>RateLimit</code> that is specified in the
                *             <code>RateBasedRule</code>.</p>
                */
            RateKey: RateKey | string | undefined;
            /**
                * <p>The maximum number of requests, which have an identical value in the field specified
                *          by the <code>RateKey</code>, allowed in a five-minute period. If the number of requests
                *          exceeds the <code>RateLimit</code> and the other predicates specified in the rule are also
                *          met, AWS WAF triggers the action that is specified for this rule.</p>
                */
            RateLimit: number | undefined;
    }
    export namespace RateBasedRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RateBasedRule) => any;
    }
    export interface CreateRateBasedRuleResponse {
            /**
                * <p>The <a>RateBasedRule</a>
                *          that is returned in the <code>CreateRateBasedRule</code> response.</p>
                */
            Rule?: RateBasedRule;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the
                *             <code>CreateRateBasedRule</code> request. You can also use this value to query the
                *          status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateRateBasedRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRateBasedRuleResponse) => any;
    }
    /**
        * <p></p>
        */
    export class WAFBadRequestException extends __BaseException {
            readonly name: "WAFBadRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFBadRequestException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class WAFTagOperationException extends __BaseException {
            readonly name: "WAFTagOperationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFTagOperationException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class WAFTagOperationInternalErrorException extends __BaseException {
            readonly name: "WAFTagOperationInternalErrorException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFTagOperationInternalErrorException, __BaseException>);
    }
    export interface CreateRegexMatchSetRequest {
            /**
                * <p>A friendly name or description of the <a>RegexMatchSet</a>. You can't change <code>Name</code> after you create a
                * 			<code>RegexMatchSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateRegexMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRegexMatchSetRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. Each <code>RegexMatchTuple</code> object contains: </p>
        * 		       <ul>
        *             <li>
        *                <p>The part of a web request that you want AWS WAF to inspect, such as a query string or the value of the <code>User-Agent</code> header. </p>
        *             </li>
        *             <li>
        *                <p>The identifier of the pattern (a regular expression) that you want AWS WAF to look for. For more information, see <a>RegexPatternSet</a>. </p>
        *             </li>
        *             <li>
        *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
        * 			         </li>
        *          </ul>
        */
    export interface RegexMatchTuple {
            /**
                * <p>Specifies where in a web request to look for the <code>RegexPatternSet</code>.</p>
                */
            FieldToMatch: FieldToMatch | undefined;
            /**
                * <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                * 			If you specify a transformation, AWS WAF performs the transformation on <code>RegexPatternSet</code> before inspecting a request for a match.</p>
                *          <p>You can only specify a single type of TextTransformation.</p>
                * 		       <p>
                *             <b>CMD_LINE</b>
                *          </p>
                * 		       <p>When you're concerned that attackers are injecting an operating system commandline command and using unusual formatting to disguise some or all of the command, use this option to perform the following transformations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Delete the following characters: \ " ' ^</p>
                *             </li>
                *             <li>
                *                <p>Delete spaces before the following characters: / (</p>
                *             </li>
                *             <li>
                *                <p>Replace the following characters with a space: , ;</p>
                *             </li>
                *             <li>
                *                <p>Replace multiple spaces with one space</p>
                *             </li>
                *             <li>
                *                <p>Convert uppercase letters (A-Z) to lowercase (a-z)</p>
                *             </li>
                *          </ul>
                *
                * 		       <p>
                *             <b>COMPRESS_WHITE_SPACE</b>
                *          </p>
                * 		       <p>Use this option to replace the following characters with a space character (decimal 32):</p>
                * 		       <ul>
                *             <li>
                *                <p>\f, formfeed, decimal 12</p>
                *             </li>
                *             <li>
                *                <p>\t, tab, decimal 9</p>
                *             </li>
                *             <li>
                *                <p>\n, newline, decimal 10</p>
                *             </li>
                *             <li>
                *                <p>\r, carriage return, decimal 13</p>
                *             </li>
                *             <li>
                *                <p>\v, vertical tab, decimal 11</p>
                *             </li>
                *             <li>
                *                <p>non-breaking space, decimal 160</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <code>COMPRESS_WHITE_SPACE</code> also replaces multiple spaces with one space.</p>
                * 		       <p>
                *             <b>HTML_ENTITY_DECODE</b>
                *          </p>
                * 		       <p>Use this option to replace HTML-encoded characters with unencoded characters. <code>HTML_ENTITY_DECODE</code> performs
                * 			the following operations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Replaces <code>(ampersand)quot;</code> with <code>"</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)nbsp;</code> with a non-breaking space, decimal 160</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)lt;</code> with a "less than" symbol</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)gt;</code> with <code>></code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in hexadecimal format, <code>(ampersand)#xhhhh;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in decimal format, <code>(ampersand)#nnnn;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>LOWERCASE</b>
                *          </p>
                * 		       <p>Use this option to convert uppercase letters (A-Z) to lowercase (a-z).</p>
                * 		       <p>
                *             <b>URL_DECODE</b>
                *          </p>
                * 		       <p>Use this option to decode a URL-encoded value.</p>
                * 		       <p>
                *             <b>NONE</b>
                *          </p>
                * 		       <p>Specify <code>NONE</code> if you don't want to perform any text transformations.</p>
                */
            TextTransformation: TextTransformation | string | undefined;
            /**
                * <p>The <code>RegexPatternSetId</code> for a <code>RegexPatternSet</code>. You use <code>RegexPatternSetId</code> to get information about a
                * 			<code>RegexPatternSet</code> (see <a>GetRegexPatternSet</a>), update a <code>RegexPatternSet</code> (see <a>UpdateRegexPatternSet</a>),
                * 			insert a <code>RegexPatternSet</code> into a <code>RegexMatchSet</code> or delete one from a <code>RegexMatchSet</code> (see <a>UpdateRegexMatchSet</a>), and
                * 			delete an <code>RegexPatternSet</code> from AWS WAF (see <a>DeleteRegexPatternSet</a>).</p>
                * 		       <p>
                * 		          <code>RegexPatternSetId</code> is returned by <a>CreateRegexPatternSet</a> and by <a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
    }
    export namespace RegexMatchTuple {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexMatchTuple) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>In a <a>GetRegexMatchSet</a> request, <code>RegexMatchSet</code> is a complex type that contains the <code>RegexMatchSetId</code> and
        * 			<code>Name</code> of a <code>RegexMatchSet</code>, and the values that you specified when you updated the <code>RegexMatchSet</code>.</p>
        *          <p> The values are contained in a <code>RegexMatchTuple</code> object, which specify the parts of web requests that you want AWS WAF to inspect and the values that you want AWS WAF to search for. If a <code>RegexMatchSet</code> contains more than one
        * 			<code>RegexMatchTuple</code> object, a request needs to match the settings in only one <code>ByteMatchTuple</code>
        * 			to be considered a match.</p>
        */
    export interface RegexMatchSet {
            /**
                * <p>The <code>RegexMatchSetId</code> for a <code>RegexMatchSet</code>. You use <code>RegexMatchSetId</code> to get information about a
                * 			<code>RegexMatchSet</code> (see <a>GetRegexMatchSet</a>), update a <code>RegexMatchSet</code> (see <a>UpdateRegexMatchSet</a>),
                * 			insert a <code>RegexMatchSet</code> into a <code>Rule</code> or delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and
                * 			delete a <code>RegexMatchSet</code> from AWS WAF (see <a>DeleteRegexMatchSet</a>).</p>
                * 		       <p>
                *             <code>RegexMatchSetId</code> is returned by <a>CreateRegexMatchSet</a> and by <a>ListRegexMatchSets</a>.</p>
                */
            RegexMatchSetId?: string;
            /**
                * <p>A friendly name or description of the <a>RegexMatchSet</a>. You can't change <code>Name</code> after you create a
                * 			<code>RegexMatchSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Contains an array of <a>RegexMatchTuple</a> objects. Each <code>RegexMatchTuple</code>
                * 				object contains: </p>
                * 		       <ul>
                *             <li>
                *                <p>The part of a web request that you want AWS WAF to inspect, such as a query string or the value of the <code>User-Agent</code> header. </p>
                *             </li>
                *             <li>
                *                <p>The identifier of the pattern (a regular expression) that you want AWS WAF to look for. For more information, see <a>RegexPatternSet</a>.</p>
                *             </li>
                *             <li>
                *                <p>Whether to perform any conversions on the request, such as converting it to lowercase, before inspecting it for the specified string.</p>
                * 			         </li>
                *          </ul>
                */
            RegexMatchTuples?: RegexMatchTuple[];
    }
    export namespace RegexMatchSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexMatchSet) => any;
    }
    export interface CreateRegexMatchSetResponse {
            /**
                * <p>A <a>RegexMatchSet</a> that contains no <code>RegexMatchTuple</code> objects.</p>
                */
            RegexMatchSet?: RegexMatchSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateRegexMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateRegexMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRegexMatchSetResponse) => any;
    }
    export interface CreateRegexPatternSetRequest {
            /**
                * <p>A friendly name or description of the <a>RegexPatternSet</a>. You can't change <code>Name</code> after you create a
                * 			<code>RegexPatternSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateRegexPatternSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRegexPatternSetRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The <code>RegexPatternSet</code> specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject those requests.</p>
        */
    export interface RegexPatternSet {
            /**
                * <p>The identifier for the <code>RegexPatternSet</code>. You use <code>RegexPatternSetId</code> to get information about a <code>RegexPatternSet</code>,
                *          update a <code>RegexPatternSet</code>, remove a <code>RegexPatternSet</code> from a <code>RegexMatchSet</code>, and delete a <code>RegexPatternSet</code> from AWS WAF.</p>
                *          <p>
                *             <code>RegexMatchSetId</code> is returned by <a>CreateRegexPatternSet</a> and by <a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>RegexPatternSet</a>. You can't change <code>Name</code> after you create a <code>RegexPatternSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Specifies the regular expression (regex) patterns that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
                */
            RegexPatternStrings: string[] | undefined;
    }
    export namespace RegexPatternSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexPatternSet) => any;
    }
    export interface CreateRegexPatternSetResponse {
            /**
                * <p>A <a>RegexPatternSet</a> that contains no objects.</p>
                */
            RegexPatternSet?: RegexPatternSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateRegexPatternSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateRegexPatternSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRegexPatternSetResponse) => any;
    }
    export interface CreateRuleRequest {
            /**
                * <p>A friendly name or description of the <a>Rule</a>. You can't change the name of a <code>Rule</code> after you create it.</p>
                */
            Name: string | undefined;
            /**
                * <p>A friendly name or description for the metrics for this <code>Rule</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                * 	        whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the
                *             <code>Rule</code>.</p>
                */
            MetricName: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p></p>
                */
            Tags?: Tag[];
    }
    export namespace CreateRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>A combination of <a>ByteMatchSet</a>, <a>IPSet</a>, and/or <a>SqlInjectionMatchSet</a> objects that identify the web requests that you
        * 			want to allow, block, or count. For example, you might create a <code>Rule</code> that includes the following predicates:</p>
        * 		       <ul>
        *             <li>
        *                <p>An <code>IPSet</code> that causes AWS WAF to search for web requests that originate from the IP address <code>192.0.2.44</code>
        *                </p>
        *             </li>
        *             <li>
        *                <p>A <code>ByteMatchSet</code> that causes AWS WAF to search for web requests for which the value of the <code>User-Agent</code>
        * 				header is <code>BadBot</code>.</p>
        *             </li>
        *          </ul>
        * 		       <p>To match the settings in this <code>Rule</code>, a request must originate from <code>192.0.2.44</code> AND include a <code>User-Agent</code>
        * 			header for which the value is <code>BadBot</code>.</p>
        */
    export interface Rule {
            /**
                * <p>A unique identifier for a <code>Rule</code>. You use <code>RuleId</code> to get more information about a <code>Rule</code> (see <a>GetRule</a>),
                * 			update a <code>Rule</code> (see <a>UpdateRule</a>), insert a <code>Rule</code> into a <code>WebACL</code> or delete a
                * 			one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>Rule</code> from AWS WAF (see <a>DeleteRule</a>).</p>
                * 		       <p>
                *             <code>RuleId</code> is returned by <a>CreateRule</a> and by <a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>The friendly name or description for the <code>Rule</code>. You can't change the name of a <code>Rule</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>A friendly name or description for the metrics for this <code>Rule</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change <code>MetricName</code> after you create the <code>Rule</code>.</p>
                */
            MetricName?: string;
            /**
                * <p>The <code>Predicates</code> object contains one <code>Predicate</code> element for each <a>ByteMatchSet</a>, <a>IPSet</a>, or
                * 			<a>SqlInjectionMatchSet</a> object that you want to include in a <code>Rule</code>.</p>
                */
            Predicates: Predicate[] | undefined;
    }
    export namespace Rule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Rule) => any;
    }
    export interface CreateRuleResponse {
            /**
                * <p>The <a>Rule</a> returned in the <code>CreateRule</code> response.</p>
                */
            Rule?: Rule;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateRule</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleResponse) => any;
    }
    export interface CreateRuleGroupRequest {
            /**
                * <p>A friendly name or description of the <a>RuleGroup</a>. You can't change <code>Name</code> after you create a
                *          <code>RuleGroup</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
                */
            MetricName: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p></p>
                */
            Tags?: Tag[];
    }
    export namespace CreateRuleGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleGroupRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>A collection of predefined rules that you can add to a web ACL.</p>
        * 	        <p>Rule groups are subject to the following limits:</p>
        * 	        <ul>
        *             <li>
        *                <p>Three rule groups per account. You can request an increase to this limit by contacting customer support.</p>
        *             </li>
        *             <li>
        *                <p>One rule group per web ACL.</p>
        *             </li>
        *             <li>
        *                <p>Ten rules per rule group.</p>
        *             </li>
        *          </ul>
        */
    export interface RuleGroup {
            /**
                * <p>A unique identifier for a <code>RuleGroup</code>. You use <code>RuleGroupId</code> to get more information about a <code>RuleGroup</code> (see <a>GetRuleGroup</a>),
                *          update a <code>RuleGroup</code> (see <a>UpdateRuleGroup</a>), insert a <code>RuleGroup</code> into a <code>WebACL</code> or delete a
                *          one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>RuleGroup</code> from AWS WAF (see <a>DeleteRuleGroup</a>).</p>
                *          <p>
                *             <code>RuleGroupId</code> is returned by <a>CreateRuleGroup</a> and by <a>ListRuleGroups</a>.</p>
                */
            RuleGroupId: string | undefined;
            /**
                * <p>The friendly name or description for the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
                */
            MetricName?: string;
    }
    export namespace RuleGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroup) => any;
    }
    export interface CreateRuleGroupResponse {
            /**
                * <p>An empty  <a>RuleGroup</a>.</p>
                */
            RuleGroup?: RuleGroup;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateRuleGroup</code> request. You can also use this value
                *          to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateRuleGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleGroupResponse) => any;
    }
    export interface CreateSizeConstraintSetRequest {
            /**
                * <p>A friendly name or description of the <a>SizeConstraintSet</a>. You can't change <code>Name</code> after you create a
                * 			<code>SizeConstraintSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateSizeConstraintSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSizeConstraintSetRequest) => any;
    }
    export enum ComparisonOperator {
            EQ = "EQ",
            GE = "GE",
            GT = "GT",
            LE = "LE",
            LT = "LT",
            NE = "NE"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies a constraint on the size of a part of the web request. AWS WAF uses the <code>Size</code>, <code>ComparisonOperator</code>, and <code>FieldToMatch</code> to build
        * 			an expression in the form of "<code>Size</code>
        *             <code>ComparisonOperator</code> size in bytes of <code>FieldToMatch</code>". If that expression is true, the
        * 			<code>SizeConstraint</code> is considered to match.</p>
        */
    export interface SizeConstraint {
            /**
                * <p>Specifies where in a web request to look for the size constraint.</p>
                */
            FieldToMatch: FieldToMatch | undefined;
            /**
                * <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                * 			If you specify a transformation, AWS WAF performs the transformation on <code>FieldToMatch</code> before inspecting it for a match.</p>
                *          <p>You can only specify a single type of TextTransformation.</p>
                * 		       <p>Note that if you choose <code>BODY</code> for the value of <code>Type</code>, you must choose <code>NONE</code> for <code>TextTransformation</code>
                * 			because CloudFront forwards only the first 8192 bytes for inspection. </p>
                * 		       <p>
                *             <b>NONE</b>
                *          </p>
                * 		       <p>Specify <code>NONE</code> if you don't want to perform any text transformations.</p>
                * 		       <p>
                *             <b>CMD_LINE</b>
                *          </p>
                * 		       <p>When you're concerned that attackers are injecting an operating system command line command and using unusual formatting to disguise some or all of the command, use this option to perform the following transformations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Delete the following characters: \ " ' ^</p>
                *             </li>
                *             <li>
                *                <p>Delete spaces before the following characters: / (</p>
                *             </li>
                *             <li>
                *                <p>Replace the following characters with a space: , ;</p>
                *             </li>
                *             <li>
                *                <p>Replace multiple spaces with one space</p>
                *             </li>
                *             <li>
                *                <p>Convert uppercase letters (A-Z) to lowercase (a-z)</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>COMPRESS_WHITE_SPACE</b>
                *          </p>
                * 		       <p>Use this option to replace the following characters with a space character (decimal 32):</p>
                * 		       <ul>
                *             <li>
                *                <p>\f, formfeed, decimal 12</p>
                *             </li>
                *             <li>
                *                <p>\t, tab, decimal 9</p>
                *             </li>
                *             <li>
                *                <p>\n, newline, decimal 10</p>
                *             </li>
                *             <li>
                *                <p>\r, carriage return, decimal 13</p>
                *             </li>
                *             <li>
                *                <p>\v, vertical tab, decimal 11</p>
                *             </li>
                *             <li>
                *                <p>non-breaking space, decimal 160</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <code>COMPRESS_WHITE_SPACE</code> also replaces multiple spaces with one space.</p>
                * 		       <p>
                *             <b>HTML_ENTITY_DECODE</b>
                *          </p>
                * 		       <p>Use this option to replace HTML-encoded characters with unencoded characters. <code>HTML_ENTITY_DECODE</code> performs
                * 			the following operations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Replaces <code>(ampersand)quot;</code> with <code>"</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)nbsp;</code> with a non-breaking space, decimal 160</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)lt;</code> with a "less than" symbol</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)gt;</code> with <code>></code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in hexadecimal format, <code>(ampersand)#xhhhh;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in decimal format, <code>(ampersand)#nnnn;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>LOWERCASE</b>
                *          </p>
                * 		       <p>Use this option to convert uppercase letters (A-Z) to lowercase (a-z).</p>
                * 		       <p>
                *             <b>URL_DECODE</b>
                *          </p>
                * 		       <p>Use this option to decode a URL-encoded value.</p>
                */
            TextTransformation: TextTransformation | string | undefined;
            /**
                * <p>The type of comparison you want AWS WAF to perform. AWS WAF uses this in combination with the provided <code>Size</code> and <code>FieldToMatch</code>
                * 			to build an expression in the form of "<code>Size</code>
                *             <code>ComparisonOperator</code> size in bytes of <code>FieldToMatch</code>". If that expression
                * 			is true, the <code>SizeConstraint</code> is considered to match.</p>
                * 		       <p>
                *             <b>EQ</b>: Used to test if the <code>Size</code> is equal to the size of the <code>FieldToMatch</code>
                *          </p>
                * 		       <p>
                *             <b>NE</b>: Used to test if the <code>Size</code> is not equal to the size of the <code>FieldToMatch</code>
                *          </p>
                * 		       <p>
                *             <b>LE</b>: Used to test if the <code>Size</code> is less than or equal to the size of the <code>FieldToMatch</code>
                *          </p>
                * 		       <p>
                *             <b>LT</b>: Used to test if the <code>Size</code> is strictly less than the size of the <code>FieldToMatch</code>
                *          </p>
                * 		       <p>
                *             <b>GE</b>: Used to test if the <code>Size</code> is greater than or equal to the size of the <code>FieldToMatch</code>
                *          </p>
                * 		       <p>
                *             <b>GT</b>: Used to test if the <code>Size</code> is strictly greater than the size of the <code>FieldToMatch</code>
                *          </p>
                */
            ComparisonOperator: ComparisonOperator | string | undefined;
            /**
                * <p>The size in bytes that you want AWS WAF to compare against the size of the specified <code>FieldToMatch</code>. AWS WAF uses this in combination
                * 			with <code>ComparisonOperator</code> and <code>FieldToMatch</code> to build an expression in the form of "<code>Size</code>
                *             <code>ComparisonOperator</code> size
                * 			in bytes of <code>FieldToMatch</code>". If that expression is true, the <code>SizeConstraint</code> is considered to match.</p>
                * 		       <p>Valid values for size are 0 - 21474836480 bytes (0 - 20 GB).</p>
                * 		       <p>If you specify <code>URI</code> for the value of <code>Type</code>, the / in the URI counts as one character.
                * 			For example, the URI <code>/logo.jpg</code> is nine characters long.</p>
                */
            Size: number | undefined;
    }
    export namespace SizeConstraint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SizeConstraint) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>A complex type that contains <code>SizeConstraint</code> objects, which specify the parts of web requests that you
        * 			want AWS WAF to inspect the size of. If a <code>SizeConstraintSet</code> contains more than one <code>SizeConstraint</code>
        * 			object, a request only needs to match one constraint to be considered a match.</p>
        */
    export interface SizeConstraintSet {
            /**
                * <p>A unique identifier for a <code>SizeConstraintSet</code>. You use <code>SizeConstraintSetId</code> to get information about a
                * 			<code>SizeConstraintSet</code> (see <a>GetSizeConstraintSet</a>), update a <code>SizeConstraintSet</code>
                * 			(see <a>UpdateSizeConstraintSet</a>), insert a <code>SizeConstraintSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete a <code>SizeConstraintSet</code> from AWS WAF
                * 			(see <a>DeleteSizeConstraintSet</a>).</p>
                * 		       <p>
                *             <code>SizeConstraintSetId</code> is returned by <a>CreateSizeConstraintSet</a> and by <a>ListSizeConstraintSets</a>.</p>
                */
            SizeConstraintSetId: string | undefined;
            /**
                * <p>The name, if any, of the <code>SizeConstraintSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Specifies the parts of web requests that you want to inspect the size of.</p>
                */
            SizeConstraints: SizeConstraint[] | undefined;
    }
    export namespace SizeConstraintSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SizeConstraintSet) => any;
    }
    export interface CreateSizeConstraintSetResponse {
            /**
                * <p>A <a>SizeConstraintSet</a> that contains no <code>SizeConstraint</code> objects.</p>
                */
            SizeConstraintSet?: SizeConstraintSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateSizeConstraintSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateSizeConstraintSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSizeConstraintSetResponse) => any;
    }
    /**
        * <p>A request to create a <a>SqlInjectionMatchSet</a>.</p>
        */
    export interface CreateSqlInjectionMatchSetRequest {
            /**
                * <p>A friendly name or description for the <a>SqlInjectionMatchSet</a> that you're creating. You can't change <code>Name</code>
                * 			after you create the <code>SqlInjectionMatchSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateSqlInjectionMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSqlInjectionMatchSetRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the part of a web request that you want AWS WAF to inspect for snippets of malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.</p>
        */
    export interface SqlInjectionMatchTuple {
            /**
                * <p>Specifies where in a web request to look for snippets of malicious SQL code.</p>
                */
            FieldToMatch: FieldToMatch | undefined;
            /**
                * <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                * 			If you specify a transformation, AWS WAF performs the transformation on <code>FieldToMatch</code> before inspecting it for a match.</p>
                *          <p>You can only specify a single type of TextTransformation.</p>
                * 		       <p>
                *             <b>CMD_LINE</b>
                *          </p>
                * 		       <p>When you're concerned that attackers are injecting an operating system command line
                *          command and using unusual formatting to disguise some or all of the command, use this
                *          option to perform the following transformations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Delete the following characters: \ " ' ^</p>
                *             </li>
                *             <li>
                *                <p>Delete spaces before the following characters: / (</p>
                *             </li>
                *             <li>
                *                <p>Replace the following characters with a space: , ;</p>
                *             </li>
                *             <li>
                *                <p>Replace multiple spaces with one space</p>
                *             </li>
                *             <li>
                *                <p>Convert uppercase letters (A-Z) to lowercase (a-z)</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>COMPRESS_WHITE_SPACE</b>
                *          </p>
                * 		       <p>Use this option to replace the following characters with a space character (decimal 32):</p>
                * 		       <ul>
                *             <li>
                *                <p>\f, formfeed, decimal 12</p>
                *             </li>
                *             <li>
                *                <p>\t, tab, decimal 9</p>
                *             </li>
                *             <li>
                *                <p>\n, newline, decimal 10</p>
                *             </li>
                *             <li>
                *                <p>\r, carriage return, decimal 13</p>
                *             </li>
                *             <li>
                *                <p>\v, vertical tab, decimal 11</p>
                *             </li>
                *             <li>
                *                <p>non-breaking space, decimal 160</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <code>COMPRESS_WHITE_SPACE</code> also replaces multiple spaces with one space.</p>
                * 		       <p>
                *             <b>HTML_ENTITY_DECODE</b>
                *          </p>
                * 		       <p>Use this option to replace HTML-encoded characters with unencoded characters. <code>HTML_ENTITY_DECODE</code> performs
                * 			the following operations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Replaces <code>(ampersand)quot;</code> with <code>"</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)nbsp;</code> with a non-breaking space, decimal 160</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)lt;</code> with a "less than" symbol</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)gt;</code> with <code>></code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in hexadecimal format, <code>(ampersand)#xhhhh;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in decimal format, <code>(ampersand)#nnnn;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>LOWERCASE</b>
                *          </p>
                * 		       <p>Use this option to convert uppercase letters (A-Z) to lowercase (a-z).</p>
                * 		       <p>
                *             <b>URL_DECODE</b>
                *          </p>
                * 		       <p>Use this option to decode a URL-encoded value.</p>
                * 		       <p>
                *             <b>NONE</b>
                *          </p>
                * 		       <p>Specify <code>NONE</code> if you don't want to perform any text transformations.</p>
                */
            TextTransformation: TextTransformation | string | undefined;
    }
    export namespace SqlInjectionMatchTuple {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SqlInjectionMatchTuple) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>A complex type that contains <code>SqlInjectionMatchTuple</code> objects, which specify the parts of web requests that you
        * 			want AWS WAF to inspect for snippets of malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header. If a
        * 			<code>SqlInjectionMatchSet</code> contains more than one <code>SqlInjectionMatchTuple</code> object, a request needs to
        * 			include snippets of SQL code in only one of the specified parts of the request to be considered a match.</p>
        */
    export interface SqlInjectionMatchSet {
            /**
                * <p>A unique identifier for a <code>SqlInjectionMatchSet</code>. You use <code>SqlInjectionMatchSetId</code> to get information about a
                * 			<code>SqlInjectionMatchSet</code> (see <a>GetSqlInjectionMatchSet</a>), update a <code>SqlInjectionMatchSet</code>
                * 			(see <a>UpdateSqlInjectionMatchSet</a>), insert a <code>SqlInjectionMatchSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete a <code>SqlInjectionMatchSet</code> from AWS WAF
                * 			(see <a>DeleteSqlInjectionMatchSet</a>).</p>
                * 		       <p>
                *             <code>SqlInjectionMatchSetId</code> is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
                */
            SqlInjectionMatchSetId: string | undefined;
            /**
                * <p>The name, if any, of the <code>SqlInjectionMatchSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Specifies the parts of web requests that you want to inspect for snippets of malicious SQL code.</p>
                */
            SqlInjectionMatchTuples: SqlInjectionMatchTuple[] | undefined;
    }
    export namespace SqlInjectionMatchSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SqlInjectionMatchSet) => any;
    }
    /**
        * <p>The response to a <code>CreateSqlInjectionMatchSet</code> request.</p>
        */
    export interface CreateSqlInjectionMatchSetResponse {
            /**
                * <p>A <a>SqlInjectionMatchSet</a>.</p>
                */
            SqlInjectionMatchSet?: SqlInjectionMatchSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateSqlInjectionMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateSqlInjectionMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSqlInjectionMatchSetResponse) => any;
    }
    export interface CreateWebACLRequest {
            /**
                * <p>A friendly name or description of the <a>WebACL</a>. You can't change <code>Name</code> after you create the <code>WebACL</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>A friendly name or description for the metrics for this <code>WebACL</code>.The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                * 	        whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change <code>MetricName</code> after you create the
                *             <code>WebACL</code>.</p>
                */
            MetricName: string | undefined;
            /**
                * <p>The action that you want  AWS WAF to take when a request doesn't match the criteria specified in any of the <code>Rule</code>
                * 			objects that are associated with the <code>WebACL</code>.</p>
                */
            DefaultAction: WafAction | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p></p>
                */
            Tags?: Tag[];
    }
    export namespace CreateWebACLRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebACLRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Contains the <code>Rules</code> that identify the requests that you want to allow, block, or count. In a <code>WebACL</code>, you also specify a
        * 			default action (<code>ALLOW</code> or <code>BLOCK</code>), and the action for each <code>Rule</code> that you add to a
        * 			<code>WebACL</code>, for example, block requests from specified IP addresses or block requests from specified referrers.
        * 			You also associate the <code>WebACL</code> with a CloudFront distribution to identify the requests that you want AWS WAF to filter.
        * 			If you add more than one <code>Rule</code> to a <code>WebACL</code>, a request needs to match only one of the specifications
        * 			to be allowed, blocked, or counted. For more information, see <a>UpdateWebACL</a>.</p>
        */
    export interface WebACL {
            /**
                * <p>A unique identifier for a <code>WebACL</code>. You use <code>WebACLId</code> to get information about a <code>WebACL</code>
                * 			(see <a>GetWebACL</a>), update a <code>WebACL</code> (see <a>UpdateWebACL</a>), and delete a <code>WebACL</code> from AWS WAF
                * 			(see <a>DeleteWebACL</a>).</p>
                * 		       <p>
                *             <code>WebACLId</code> is returned by <a>CreateWebACL</a> and by <a>ListWebACLs</a>.</p>
                */
            WebACLId: string | undefined;
            /**
                * <p>A friendly name or description of the <code>WebACL</code>. You can't change the name of a <code>WebACL</code> after you create it.</p>
                */
            Name?: string;
            /**
                * <p>A friendly name or description for the metrics for this <code>WebACL</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change <code>MetricName</code> after you create the <code>WebACL</code>.</p>
                */
            MetricName?: string;
            /**
                * <p>The action to perform if none of the <code>Rules</code> contained in the <code>WebACL</code> match. The action is specified by the
                * 			<a>WafAction</a> object.</p>
                */
            DefaultAction: WafAction | undefined;
            /**
                * <p>An array that contains the action for each <code>Rule</code> in a <code>WebACL</code>, the priority of the <code>Rule</code>,
                * 			and the ID of the <code>Rule</code>.</p>
                */
            Rules: ActivatedRule[] | undefined;
            /**
                * <p>Tha Amazon Resource Name (ARN) of the web ACL.</p>
                */
            WebACLArn?: string;
    }
    export namespace WebACL {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WebACL) => any;
    }
    export interface CreateWebACLResponse {
            /**
                * <p>The <a>WebACL</a> returned in the <code>CreateWebACL</code> response.</p>
                */
            WebACL?: WebACL;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateWebACL</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateWebACLResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebACLResponse) => any;
    }
    export interface CreateWebACLMigrationStackRequest {
            /**
                * <p>The UUID of the WAF Classic web ACL that you want to migrate to WAF v2.</p>
                */
            WebACLId: string | undefined;
            /**
                * <p>The name of the Amazon S3 bucket to store the CloudFormation template in. The S3 bucket must be
                *            configured as follows for the migration:  </p>
                *          <ul>
                *             <li>
                *                <p>The bucket name must start with <code>aws-waf-migration-</code>. For example, <code>aws-waf-migration-my-web-acl</code>.</p>
                *             </li>
                *             <li>
                *                <p>The bucket must be in the Region where you are deploying the template. For example, for a web ACL in us-west-2, you must use an Amazon S3 bucket in us-west-2 and you must deploy the template stack to us-west-2. </p>
                *             </li>
                *             <li>
                *                <p>The bucket policies must permit the migration process to write data. For listings of the
                *        bucket policies, see the Examples section. </p>
                *            </li>
                *          </ul>
                */
            S3BucketName: string | undefined;
            /**
                * <p>Indicates whether to exclude entities that can't be migrated or to stop the migration.
                *            Set this to true to ignore unsupported entities in the web ACL during the migration. Otherwise, if AWS WAF encounters unsupported
                *            entities, it stops the process and throws an exception. </p>
                */
            IgnoreUnsupportedType: boolean | undefined;
    }
    export namespace CreateWebACLMigrationStackRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebACLMigrationStackRequest) => any;
    }
    export interface CreateWebACLMigrationStackResponse {
            /**
                * <p>The URL of the template created in Amazon S3. </p>
                */
            S3ObjectUrl: string | undefined;
    }
    export namespace CreateWebACLMigrationStackResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebACLMigrationStackResponse) => any;
    }
    export enum MigrationErrorType {
            ENTITY_NOT_FOUND = "ENTITY_NOT_FOUND",
            ENTITY_NOT_SUPPORTED = "ENTITY_NOT_SUPPORTED",
            S3_BUCKET_INVALID_REGION = "S3_BUCKET_INVALID_REGION",
            S3_BUCKET_NOT_ACCESSIBLE = "S3_BUCKET_NOT_ACCESSIBLE",
            S3_BUCKET_NOT_FOUND = "S3_BUCKET_NOT_FOUND",
            S3_BUCKET_NO_PERMISSION = "S3_BUCKET_NO_PERMISSION",
            S3_INTERNAL_ERROR = "S3_INTERNAL_ERROR"
    }
    /**
        * <p>The operation failed due to a problem with the migration. The failure cause is provided in the exception, in the <code>MigrationErrorType</code>: </p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <code>ENTITY_NOT_SUPPORTED</code> - The web ACL has an unsupported entity but the <code>IgnoreUnsupportedType</code> is not set to true.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>ENTITY_NOT_FOUND</code> - The web ACL doesn't exist.  </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>S3_BUCKET_NO_PERMISSION</code> - You don't have permission to perform the <code>PutObject</code> action to the specified Amazon S3 bucket.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>S3_BUCKET_NOT_ACCESSIBLE</code> - The bucket policy doesn't allow AWS WAF to perform the <code>PutObject</code> action in the bucket.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>S3_BUCKET_NOT_FOUND</code> - The S3 bucket doesn't exist. </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>S3_BUCKET_INVALID_REGION</code> - The S3 bucket is not in the same Region as the web ACL.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>S3_INTERNAL_ERROR</code> - AWS WAF failed to create the template in the S3 bucket for another reason.</p>
        *             </li>
        *          </ul>
        */
    export class WAFEntityMigrationException extends __BaseException {
            readonly name: "WAFEntityMigrationException";
            readonly $fault: "client";
            MigrationErrorType?: MigrationErrorType | string;
            MigrationErrorReason?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFEntityMigrationException, __BaseException>);
    }
    /**
        * <p>The operation failed because there was nothing to do. For example:</p>
        * 			      <ul>
        *             <li>
        *                <p>You tried to remove a <code>Rule</code> from a <code>WebACL</code>, but the <code>Rule</code> isn't in the specified <code>WebACL</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to remove an IP address from an <code>IPSet</code>, but the IP address isn't in the specified <code>IPSet</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to remove a <code>ByteMatchTuple</code> from a <code>ByteMatchSet</code>, but the <code>ByteMatchTuple</code>
        * 					isn't in the specified <code>WebACL</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to add a <code>Rule</code> to a <code>WebACL</code>, but the <code>Rule</code> already exists in the
        * 					specified <code>WebACL</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to add a <code>ByteMatchTuple</code> to a <code>ByteMatchSet</code>, but the <code>ByteMatchTuple</code>
        *                already exists in the specified <code>WebACL</code>.</p>
        *             </li>
        *          </ul>
        */
    export class WAFInvalidOperationException extends __BaseException {
            readonly name: "WAFInvalidOperationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInvalidOperationException, __BaseException>);
    }
    /**
        * <p>The operation failed because the referenced object doesn't exist.</p>
        */
    export class WAFNonexistentItemException extends __BaseException {
            readonly name: "WAFNonexistentItemException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFNonexistentItemException, __BaseException>);
    }
    /**
        * <p>A request to create an <a>XssMatchSet</a>.</p>
        */
    export interface CreateXssMatchSetRequest {
            /**
                * <p>A friendly name or description for the <a>XssMatchSet</a> that you're creating. You can't change <code>Name</code>
                * 			after you create the <code>XssMatchSet</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace CreateXssMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateXssMatchSetRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the part of a web request that you want AWS WAF to inspect for cross-site scripting attacks and, if you want AWS WAF to inspect a header, the name of the header.</p>
        */
    export interface XssMatchTuple {
            /**
                * <p>Specifies where in a web request to look for cross-site scripting attacks.</p>
                */
            FieldToMatch: FieldToMatch | undefined;
            /**
                * <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
                * 			If you specify a transformation, AWS WAF performs the transformation on <code>FieldToMatch</code> before inspecting it for a match.</p>
                *          <p>You can only specify a single type of TextTransformation.</p>
                * 		       <p>
                *             <b>CMD_LINE</b>
                *          </p>
                * 		       <p>When you're concerned that attackers are injecting an operating system command line
                *          command and using unusual formatting to disguise some or all of the command, use this
                *          option to perform the following transformations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Delete the following characters: \ " ' ^</p>
                *             </li>
                *             <li>
                *                <p>Delete spaces before the following characters: / (</p>
                *             </li>
                *             <li>
                *                <p>Replace the following characters with a space: , ;</p>
                *             </li>
                *             <li>
                *                <p>Replace multiple spaces with one space</p>
                *             </li>
                *             <li>
                *                <p>Convert uppercase letters (A-Z) to lowercase (a-z)</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>COMPRESS_WHITE_SPACE</b>
                *          </p>
                * 		       <p>Use this option to replace the following characters with a space character (decimal 32):</p>
                * 		       <ul>
                *             <li>
                *                <p>\f, formfeed, decimal 12</p>
                *             </li>
                *             <li>
                *                <p>\t, tab, decimal 9</p>
                *             </li>
                *             <li>
                *                <p>\n, newline, decimal 10</p>
                *             </li>
                *             <li>
                *                <p>\r, carriage return, decimal 13</p>
                *             </li>
                *             <li>
                *                <p>\v, vertical tab, decimal 11</p>
                *             </li>
                *             <li>
                *                <p>non-breaking space, decimal 160</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <code>COMPRESS_WHITE_SPACE</code> also replaces multiple spaces with one space.</p>
                * 		       <p>
                *             <b>HTML_ENTITY_DECODE</b>
                *          </p>
                * 		       <p>Use this option to replace HTML-encoded characters with unencoded characters. <code>HTML_ENTITY_DECODE</code> performs
                * 			the following operations:</p>
                * 		       <ul>
                *             <li>
                *                <p>Replaces <code>(ampersand)quot;</code> with <code>"</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)nbsp;</code> with a non-breaking space, decimal 160</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)lt;</code> with a "less than" symbol</p>
                *             </li>
                *             <li>
                *                <p>Replaces <code>(ampersand)gt;</code> with <code>></code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in hexadecimal format, <code>(ampersand)#xhhhh;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *             <li>
                *                <p>Replaces characters that are represented in decimal format, <code>(ampersand)#nnnn;</code>, with the corresponding
                * 				characters</p>
                *             </li>
                *          </ul>
                * 		       <p>
                *             <b>LOWERCASE</b>
                *          </p>
                * 		       <p>Use this option to convert uppercase letters (A-Z) to lowercase (a-z).</p>
                * 		       <p>
                *             <b>URL_DECODE</b>
                *          </p>
                * 		       <p>Use this option to decode a URL-encoded value.</p>
                * 		       <p>
                *             <b>NONE</b>
                *          </p>
                * 		       <p>Specify <code>NONE</code> if you don't want to perform any text transformations.</p>
                */
            TextTransformation: TextTransformation | string | undefined;
    }
    export namespace XssMatchTuple {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: XssMatchTuple) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>A complex type that contains <code>XssMatchTuple</code> objects, which specify the parts of web requests that you
        * 			want AWS WAF to inspect for cross-site scripting attacks and, if you want AWS WAF to inspect a header, the name of the header. If a
        * 			<code>XssMatchSet</code> contains more than one <code>XssMatchTuple</code> object, a request needs to
        * 			include cross-site scripting attacks in only one of the specified parts of the request to be considered a match.</p>
        */
    export interface XssMatchSet {
            /**
                * <p>A unique identifier for an <code>XssMatchSet</code>. You use <code>XssMatchSetId</code> to get information about an
                * 			<code>XssMatchSet</code> (see <a>GetXssMatchSet</a>), update an <code>XssMatchSet</code>
                * 			(see <a>UpdateXssMatchSet</a>), insert an <code>XssMatchSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete an <code>XssMatchSet</code> from AWS WAF
                * 			(see <a>DeleteXssMatchSet</a>).</p>
                * 		       <p>
                *             <code>XssMatchSetId</code> is returned by <a>CreateXssMatchSet</a> and by <a>ListXssMatchSets</a>.</p>
                */
            XssMatchSetId: string | undefined;
            /**
                * <p>The name, if any, of the <code>XssMatchSet</code>.</p>
                */
            Name?: string;
            /**
                * <p>Specifies the parts of web requests that you want to inspect for cross-site scripting attacks.</p>
                */
            XssMatchTuples: XssMatchTuple[] | undefined;
    }
    export namespace XssMatchSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: XssMatchSet) => any;
    }
    /**
        * <p>The response to a <code>CreateXssMatchSet</code> request.</p>
        */
    export interface CreateXssMatchSetResponse {
            /**
                * <p>An <a>XssMatchSet</a>.</p>
                */
            XssMatchSet?: XssMatchSet;
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>CreateXssMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace CreateXssMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateXssMatchSetResponse) => any;
    }
    export interface DeleteByteMatchSetRequest {
            /**
                * <p>The <code>ByteMatchSetId</code> of the <a>ByteMatchSet</a> that you want to delete. <code>ByteMatchSetId</code> is returned by <a>CreateByteMatchSet</a> and by
                * 			<a>ListByteMatchSets</a>.</p>
                */
            ByteMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteByteMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteByteMatchSetRequest) => any;
    }
    export interface DeleteByteMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteByteMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteByteMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteByteMatchSetResponse) => any;
    }
    /**
        * <p>The operation failed because you tried to delete an object that isn't empty. For example:</p>
        * 		       <ul>
        *             <li>
        *                <p>You tried to delete a <code>WebACL</code> that still contains one or more <code>Rule</code> objects.</p>
        *             </li>
        *             <li>
        *                <p>You tried to delete a <code>Rule</code> that still contains one or more <code>ByteMatchSet</code> objects
        * 				or other predicates.</p>
        *             </li>
        *             <li>
        *                <p>You tried to delete a <code>ByteMatchSet</code> that contains one or more <code>ByteMatchTuple</code> objects.</p>
        *             </li>
        *             <li>
        *                <p>You tried to delete an <code>IPSet</code> that references one or more IP addresses.</p>
        *             </li>
        *          </ul>
        */
    export class WAFNonEmptyEntityException extends __BaseException {
            readonly name: "WAFNonEmptyEntityException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFNonEmptyEntityException, __BaseException>);
    }
    /**
        * <p>The operation failed because you tried to delete an object that is still in use. For example:</p>
        * 		       <ul>
        *             <li>
        *                <p>You tried to delete a <code>ByteMatchSet</code> that is still referenced by a <code>Rule</code>.</p>
        *             </li>
        *             <li>
        *                <p>You tried to delete a <code>Rule</code> that is still referenced by a <code>WebACL</code>.</p>
        *             </li>
        *          </ul>
        */
    export class WAFReferencedItemException extends __BaseException {
            readonly name: "WAFReferencedItemException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFReferencedItemException, __BaseException>);
    }
    export interface DeleteGeoMatchSetRequest {
            /**
                * <p>The <code>GeoMatchSetID</code> of the <a>GeoMatchSet</a> that you want to delete. <code>GeoMatchSetId</code> is returned by <a>CreateGeoMatchSet</a> and by
                * 			<a>ListGeoMatchSets</a>.</p>
                */
            GeoMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteGeoMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGeoMatchSetRequest) => any;
    }
    export interface DeleteGeoMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteGeoMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteGeoMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGeoMatchSetResponse) => any;
    }
    export interface DeleteIPSetRequest {
            /**
                * <p>The <code>IPSetId</code> of the <a>IPSet</a> that you want to delete. <code>IPSetId</code> is returned by <a>CreateIPSet</a> and by
                * 			<a>ListIPSets</a>.</p>
                */
            IPSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteIPSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteIPSetRequest) => any;
    }
    export interface DeleteIPSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteIPSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteIPSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteIPSetResponse) => any;
    }
    export interface DeleteLoggingConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the web ACL from which you want to delete the <a>LoggingConfiguration</a>.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace DeleteLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteLoggingConfigurationRequest) => any;
    }
    export interface DeleteLoggingConfigurationResponse {
    }
    export namespace DeleteLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteLoggingConfigurationResponse) => any;
    }
    export interface DeletePermissionPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the RuleGroup from which you want to delete the policy.</p>
                *          <p>The user making the request must be the owner of the RuleGroup.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace DeletePermissionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePermissionPolicyRequest) => any;
    }
    export interface DeletePermissionPolicyResponse {
    }
    export namespace DeletePermissionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePermissionPolicyResponse) => any;
    }
    export interface DeleteRateBasedRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <a>RateBasedRule</a> that you want to
                *          delete. <code>RuleId</code> is returned by <a>CreateRateBasedRule</a> and by
                *             <a>ListRateBasedRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteRateBasedRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRateBasedRuleRequest) => any;
    }
    export interface DeleteRateBasedRuleResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the
                *             <code>DeleteRateBasedRule</code> request. You can also use this value to query the
                *          status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteRateBasedRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRateBasedRuleResponse) => any;
    }
    export interface DeleteRegexMatchSetRequest {
            /**
                * <p>The <code>RegexMatchSetId</code> of the <a>RegexMatchSet</a> that you want to delete. <code>RegexMatchSetId</code> is returned by <a>CreateRegexMatchSet</a> and by
                * 			<a>ListRegexMatchSets</a>.</p>
                */
            RegexMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteRegexMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegexMatchSetRequest) => any;
    }
    export interface DeleteRegexMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteRegexMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteRegexMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegexMatchSetResponse) => any;
    }
    export interface DeleteRegexPatternSetRequest {
            /**
                * <p>The <code>RegexPatternSetId</code> of the <a>RegexPatternSet</a> that you want to delete. <code>RegexPatternSetId</code> is returned by <a>CreateRegexPatternSet</a> and by
                * 			<a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteRegexPatternSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegexPatternSetRequest) => any;
    }
    export interface DeleteRegexPatternSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteRegexPatternSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteRegexPatternSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRegexPatternSetResponse) => any;
    }
    export interface DeleteRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <a>Rule</a> that you want to delete. <code>RuleId</code> is returned by <a>CreateRule</a> and by
                * 			<a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleRequest) => any;
    }
    export interface DeleteRuleResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteRule</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleResponse) => any;
    }
    export interface DeleteRuleGroupRequest {
            /**
                * <p>The <code>RuleGroupId</code> of the <a>RuleGroup</a> that you want to delete. <code>RuleGroupId</code> is returned by <a>CreateRuleGroup</a> and by
                *          <a>ListRuleGroups</a>.</p>
                */
            RuleGroupId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteRuleGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleGroupRequest) => any;
    }
    export interface DeleteRuleGroupResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteRuleGroup</code> request. You can also use this value
                *          to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteRuleGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleGroupResponse) => any;
    }
    export interface DeleteSizeConstraintSetRequest {
            /**
                * <p>The <code>SizeConstraintSetId</code> of the <a>SizeConstraintSet</a> that you want to delete. <code>SizeConstraintSetId</code>
                * 			is returned by <a>CreateSizeConstraintSet</a> and by <a>ListSizeConstraintSets</a>.</p>
                */
            SizeConstraintSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteSizeConstraintSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSizeConstraintSetRequest) => any;
    }
    export interface DeleteSizeConstraintSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteSizeConstraintSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteSizeConstraintSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSizeConstraintSetResponse) => any;
    }
    /**
        * <p>A request to delete a <a>SqlInjectionMatchSet</a> from AWS WAF.</p>
        */
    export interface DeleteSqlInjectionMatchSetRequest {
            /**
                * <p>The <code>SqlInjectionMatchSetId</code> of the <a>SqlInjectionMatchSet</a> that you want to delete.
                * 			<code>SqlInjectionMatchSetId</code> is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
                */
            SqlInjectionMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteSqlInjectionMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSqlInjectionMatchSetRequest) => any;
    }
    /**
        * <p>The response to a request to delete a <a>SqlInjectionMatchSet</a> from AWS WAF.</p>
        */
    export interface DeleteSqlInjectionMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteSqlInjectionMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteSqlInjectionMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSqlInjectionMatchSetResponse) => any;
    }
    export interface DeleteWebACLRequest {
            /**
                * <p>The <code>WebACLId</code> of the <a>WebACL</a> that you want to delete. <code>WebACLId</code> is returned by <a>CreateWebACL</a> and by
                * 			<a>ListWebACLs</a>.</p>
                */
            WebACLId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteWebACLRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteWebACLRequest) => any;
    }
    export interface DeleteWebACLResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteWebACL</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteWebACLResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteWebACLResponse) => any;
    }
    /**
        * <p>A request to delete an <a>XssMatchSet</a> from AWS WAF.</p>
        */
    export interface DeleteXssMatchSetRequest {
            /**
                * <p>The <code>XssMatchSetId</code> of the <a>XssMatchSet</a> that you want to delete.
                * 			<code>XssMatchSetId</code> is returned by <a>CreateXssMatchSet</a> and by <a>ListXssMatchSets</a>.</p>
                */
            XssMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace DeleteXssMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteXssMatchSetRequest) => any;
    }
    /**
        * <p>The response to a request to delete an <a>XssMatchSet</a> from AWS WAF.</p>
        */
    export interface DeleteXssMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>DeleteXssMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace DeleteXssMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteXssMatchSetResponse) => any;
    }
    export interface GetByteMatchSetRequest {
            /**
                * <p>The <code>ByteMatchSetId</code> of the <a>ByteMatchSet</a> that you want to get. <code>ByteMatchSetId</code> is returned by
                * 			<a>CreateByteMatchSet</a> and by <a>ListByteMatchSets</a>.</p>
                */
            ByteMatchSetId: string | undefined;
    }
    export namespace GetByteMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetByteMatchSetRequest) => any;
    }
    export interface GetByteMatchSetResponse {
            /**
                * <p>Information about the <a>ByteMatchSet</a> that you specified in the <code>GetByteMatchSet</code> request. For more information, see the
                * 			following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>ByteMatchSet</a>: Contains <code>ByteMatchSetId</code>, <code>ByteMatchTuples</code>, and <code>Name</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>ByteMatchTuples</code>: Contains an array of <a>ByteMatchTuple</a> objects. Each <code>ByteMatchTuple</code>
                * 				object contains <a>FieldToMatch</a>, <code>PositionalConstraint</code>, <code>TargetString</code>,
                * 				and <code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            ByteMatchSet?: ByteMatchSet;
    }
    export namespace GetByteMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetByteMatchSetResponse) => any;
    }
    export interface GetChangeTokenRequest {
    }
    export namespace GetChangeTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChangeTokenRequest) => any;
    }
    export interface GetChangeTokenResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used in the request. Use this value in a <code>GetChangeTokenStatus</code> request
                * 			to get the current status of the request. </p>
                */
            ChangeToken?: string;
    }
    export namespace GetChangeTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChangeTokenResponse) => any;
    }
    export interface GetChangeTokenStatusRequest {
            /**
                * <p>The change token for which you want to get the status. This change token was previously returned in the <code>GetChangeToken</code> response.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace GetChangeTokenStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChangeTokenStatusRequest) => any;
    }
    export enum ChangeTokenStatus {
            INSYNC = "INSYNC",
            PENDING = "PENDING",
            PROVISIONED = "PROVISIONED"
    }
    export interface GetChangeTokenStatusResponse {
            /**
                * <p>The status of the change token.</p>
                */
            ChangeTokenStatus?: ChangeTokenStatus | string;
    }
    export namespace GetChangeTokenStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChangeTokenStatusResponse) => any;
    }
    export interface GetGeoMatchSetRequest {
            /**
                * <p>The <code>GeoMatchSetId</code> of the <a>GeoMatchSet</a> that you want to get. <code>GeoMatchSetId</code> is returned by <a>CreateGeoMatchSet</a> and by
                * 			<a>ListGeoMatchSets</a>.</p>
                */
            GeoMatchSetId: string | undefined;
    }
    export namespace GetGeoMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetGeoMatchSetRequest) => any;
    }
    export interface GetGeoMatchSetResponse {
            /**
                * <p>Information about the <a>GeoMatchSet</a> that you specified in the <code>GetGeoMatchSet</code> request. This includes the <code>Type</code>, which for a <code>GeoMatchContraint</code> is always <code>Country</code>, as well as the <code>Value</code>, which is the identifier for a specific country.</p>
                */
            GeoMatchSet?: GeoMatchSet;
    }
    export namespace GetGeoMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetGeoMatchSetResponse) => any;
    }
    export interface GetIPSetRequest {
            /**
                * <p>The <code>IPSetId</code> of the <a>IPSet</a> that you want to get. <code>IPSetId</code> is returned by <a>CreateIPSet</a> and by
                * 			<a>ListIPSets</a>.</p>
                */
            IPSetId: string | undefined;
    }
    export namespace GetIPSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetIPSetRequest) => any;
    }
    export interface GetIPSetResponse {
            /**
                * <p>Information about the <a>IPSet</a> that you specified in the <code>GetIPSet</code> request. For more information, see the
                * 			following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>IPSet</a>: Contains <code>IPSetDescriptors</code>, <code>IPSetId</code>, and <code>Name</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IPSetDescriptors</code>: Contains an array of <a>IPSetDescriptor</a> objects. Each <code>IPSetDescriptor</code>
                * 				object contains <code>Type</code> and <code>Value</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            IPSet?: IPSet;
    }
    export namespace GetIPSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetIPSetResponse) => any;
    }
    export interface GetLoggingConfigurationRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the web ACL for which you want to get the <a>LoggingConfiguration</a>.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace GetLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetLoggingConfigurationRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>The Amazon Kinesis Data Firehose, <code>RedactedFields</code>
        *          information, and the web ACL Amazon Resource Name (ARN).</p>
        */
    export interface LoggingConfiguration {
            /**
                * <p>The Amazon Resource Name (ARN) of the web ACL that you want to associate with
                *             <code>LogDestinationConfigs</code>.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>An array of Amazon Kinesis Data Firehose ARNs.</p>
                */
            LogDestinationConfigs: string[] | undefined;
            /**
                * <p>The parts of the request that you want redacted from the logs. For
                *          example,
                *          if you redact the cookie field, the cookie field in the firehose will be
                *             <code>xxx</code>. </p>
                */
            RedactedFields?: FieldToMatch[];
    }
    export namespace LoggingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingConfiguration) => any;
    }
    export interface GetLoggingConfigurationResponse {
            /**
                * <p>The <a>LoggingConfiguration</a> for the specified web ACL.</p>
                */
            LoggingConfiguration?: LoggingConfiguration;
    }
    export namespace GetLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetLoggingConfigurationResponse) => any;
    }
    export interface GetPermissionPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the RuleGroup for which you want to get the policy.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace GetPermissionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPermissionPolicyRequest) => any;
    }
    export interface GetPermissionPolicyResponse {
            /**
                * <p>The IAM policy attached to the specified RuleGroup.</p>
                */
            Policy?: string;
    }
    export namespace GetPermissionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPermissionPolicyResponse) => any;
    }
    export interface GetRateBasedRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <a>RateBasedRule</a> that you want to get.
                *             <code>RuleId</code> is returned by <a>CreateRateBasedRule</a> and by <a>ListRateBasedRules</a>.</p>
                */
            RuleId: string | undefined;
    }
    export namespace GetRateBasedRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRateBasedRuleRequest) => any;
    }
    export interface GetRateBasedRuleResponse {
            /**
                * <p>Information about the <a>RateBasedRule</a> that you specified in the
                *             <code>GetRateBasedRule</code> request.</p>
                */
            Rule?: RateBasedRule;
    }
    export namespace GetRateBasedRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRateBasedRuleResponse) => any;
    }
    export interface GetRateBasedRuleManagedKeysRequest {
            /**
                * <p>The <code>RuleId</code> of the <a>RateBasedRule</a> for which you want to
                *          get a list of <code>ManagedKeys</code>. <code>RuleId</code> is returned by <a>CreateRateBasedRule</a> and by <a>ListRateBasedRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>A null value and not currently used. Do not include this in your request.</p>
                */
            NextMarker?: string;
    }
    export namespace GetRateBasedRuleManagedKeysRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRateBasedRuleManagedKeysRequest) => any;
    }
    export interface GetRateBasedRuleManagedKeysResponse {
            /**
                * <p>An array of IP addresses that currently are blocked by the specified <a>RateBasedRule</a>. </p>
                */
            ManagedKeys?: string[];
            /**
                * <p>A null value and not currently used.</p>
                */
            NextMarker?: string;
    }
    export namespace GetRateBasedRuleManagedKeysResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRateBasedRuleManagedKeysResponse) => any;
    }
    export interface GetRegexMatchSetRequest {
            /**
                * <p>The <code>RegexMatchSetId</code> of the <a>RegexMatchSet</a> that you want to get. <code>RegexMatchSetId</code> is returned by
                * 			<a>CreateRegexMatchSet</a> and by <a>ListRegexMatchSets</a>.</p>
                */
            RegexMatchSetId: string | undefined;
    }
    export namespace GetRegexMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegexMatchSetRequest) => any;
    }
    export interface GetRegexMatchSetResponse {
            /**
                * <p>Information about the <a>RegexMatchSet</a> that you specified in the <code>GetRegexMatchSet</code> request. For more information, see <a>RegexMatchTuple</a>.</p>
                */
            RegexMatchSet?: RegexMatchSet;
    }
    export namespace GetRegexMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegexMatchSetResponse) => any;
    }
    export interface GetRegexPatternSetRequest {
            /**
                * <p>The <code>RegexPatternSetId</code> of the <a>RegexPatternSet</a> that you want to get. <code>RegexPatternSetId</code> is returned by
                * 			<a>CreateRegexPatternSet</a> and by <a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
    }
    export namespace GetRegexPatternSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegexPatternSetRequest) => any;
    }
    export interface GetRegexPatternSetResponse {
            /**
                * <p>Information about the <a>RegexPatternSet</a> that you specified in the <code>GetRegexPatternSet</code> request, including the identifier of the pattern set and the regular expression patterns you want AWS WAF to search for. </p>
                */
            RegexPatternSet?: RegexPatternSet;
    }
    export namespace GetRegexPatternSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRegexPatternSetResponse) => any;
    }
    export interface GetRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <a>Rule</a> that you want to get. <code>RuleId</code> is returned by <a>CreateRule</a> and by
                * 			<a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
    }
    export namespace GetRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleRequest) => any;
    }
    export interface GetRuleResponse {
            /**
                * <p>Information about the <a>Rule</a> that you specified in the <code>GetRule</code> request.
                * 			For more information, see the following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>Rule</a>: Contains <code>MetricName</code>, <code>Name</code>, an array of <code>Predicate</code> objects,
                * 				and <code>RuleId</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>Predicate</a>: Each <code>Predicate</code> object contains <code>DataId</code>, <code>Negated</code>, and
                * 				<code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Rule?: Rule;
    }
    export namespace GetRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleResponse) => any;
    }
    export interface GetRuleGroupRequest {
            /**
                * <p>The <code>RuleGroupId</code> of the <a>RuleGroup</a> that you want to get. <code>RuleGroupId</code> is returned by <a>CreateRuleGroup</a> and by
                *          <a>ListRuleGroups</a>.</p>
                */
            RuleGroupId: string | undefined;
    }
    export namespace GetRuleGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleGroupRequest) => any;
    }
    export interface GetRuleGroupResponse {
            /**
                * <p>Information about the <a>RuleGroup</a> that you specified in the <code>GetRuleGroup</code> request. </p>
                */
            RuleGroup?: RuleGroup;
    }
    export namespace GetRuleGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleGroupResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>In a <a>GetSampledRequests</a> request, the <code>StartTime</code> and <code>EndTime</code> objects specify the time range
        * 			for which you want AWS WAF to return a sample of web requests.</p>
        *                     <p>You must specify the times in Coordinated Universal Time (UTC) format. UTC format includes the special
        *                         designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>. </p>
        * 		       <p>In a <a>GetSampledRequests</a> response, the <code>StartTime</code> and <code>EndTime</code> objects specify the time range
        * 			for which AWS WAF actually returned a sample of web requests. AWS WAF gets the specified number of requests from among the first
        * 			5,000 requests that your AWS resource receives during the specified time period. If your resource receives more than 5,000
        * 			requests during that period, AWS WAF stops sampling after the 5,000th request. In that case, <code>EndTime</code>
        * 			is the time that AWS WAF received the 5,000th request. </p>
        */
    export interface TimeWindow {
            /**
                * <p>The beginning of the time range from which you want <code>GetSampledRequests</code> to return a sample of the
                *                   requests that your AWS resource received. You must specify the date and time in Coordinated Universal Time (UTC) format.
                *                   UTC format includes the special designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>.
                *                       You can specify any time range in the previous three hours.</p>
                */
            StartTime: Date | undefined;
            /**
                * <p>The end of the time range from which you want <code>GetSampledRequests</code> to return a sample of the
                *                   requests that your AWS resource received. You must specify the date and time in Coordinated Universal Time (UTC) format.
                *                   UTC format includes the special designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>.
                *                       You can specify any time range in the previous three hours.</p>
                */
            EndTime: Date | undefined;
    }
    export namespace TimeWindow {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimeWindow) => any;
    }
    export interface GetSampledRequestsRequest {
            /**
                * <p>The <code>WebACLId</code> of the <code>WebACL</code> for which you want <code>GetSampledRequests</code> to return a sample of requests.</p>
                */
            WebAclId: string | undefined;
            /**
                * <p>
                *             <code>RuleId</code> is one of three values:</p>
                * 			      <ul>
                *             <li>
                * 				           <p>The <code>RuleId</code> of the <code>Rule</code> or the <code>RuleGroupId</code> of the <code>RuleGroup</code> for which you want <code>GetSampledRequests</code> to return a sample of requests.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>Default_Action</code>, which causes <code>GetSampledRequests</code> to return a sample of the requests that
                * 					didn't match any of the rules in the specified <code>WebACL</code>.</p>
                *             </li>
                *          </ul>
                */
            RuleId: string | undefined;
            /**
                * <p>The start date and time and the end date and time of the range for which you want <code>GetSampledRequests</code> to return a
                *                         sample of requests. You must specify the times in Coordinated Universal Time (UTC) format. UTC format includes the special
                *                         designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>. You can specify any time range in the previous three hours.</p>
                */
            TimeWindow: TimeWindow | undefined;
            /**
                * <p>The number of requests that you want AWS WAF to return from among the first 5,000 requests that your AWS resource received
                * 			during the time range. If your resource received fewer requests than the value of <code>MaxItems</code>, <code>GetSampledRequests</code>
                * 			returns information about all of them. </p>
                */
            MaxItems: number | undefined;
    }
    export namespace GetSampledRequestsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSampledRequestsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The response from a <a>GetSampledRequests</a> request includes an <code>HTTPHeader</code> complex type that
        * 			appears as <code>Headers</code> in the response syntax. <code>HTTPHeader</code> contains the names and values of
        * 			all of the headers that appear in one of the web requests that were returned by <code>GetSampledRequests</code>. </p>
        */
    export interface HTTPHeader {
            /**
                * <p>The name of one of the headers in the sampled web request.</p>
                */
            Name?: string;
            /**
                * <p>The value of one of the headers in the sampled web request.</p>
                */
            Value?: string;
    }
    export namespace HTTPHeader {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HTTPHeader) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The response from a <a>GetSampledRequests</a> request includes an <code>HTTPRequest</code> complex type that
        * 			appears as <code>Request</code> in the response syntax. <code>HTTPRequest</code> contains information about
        * 			one of the web requests that were returned by <code>GetSampledRequests</code>. </p>
        */
    export interface HTTPRequest {
            /**
                * <p>The IP address that the request originated from. If the <code>WebACL</code> is associated with a CloudFront distribution,
                * 			this is the value of one of the following fields in CloudFront access logs:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <code>c-ip</code>, if the viewer did not use an HTTP proxy or a load balancer to send the request</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>x-forwarded-for</code>, if the viewer did use an HTTP proxy or a load balancer to send the request</p>
                *             </li>
                *          </ul>
                */
            ClientIP?: string;
            /**
                * <p>The two-letter country code for the country that the request originated from. For a current list of country codes,
                * 			see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a>.</p>
                */
            Country?: string;
            /**
                * <p>The part of a web request that identifies the resource, for example, <code>/images/daily-ad.jpg</code>.</p>
                */
            URI?: string;
            /**
                * <p>The HTTP method specified in the sampled web request. CloudFront supports the following methods: <code>DELETE</code>,
                * 			<code>GET</code>, <code>HEAD</code>, <code>OPTIONS</code>, <code>PATCH</code>, <code>POST</code>, and <code>PUT</code>. </p>
                */
            Method?: string;
            /**
                * <p>The HTTP version specified in the sampled web request, for example, <code>HTTP/1.1</code>.</p>
                */
            HTTPVersion?: string;
            /**
                * <p>A complex type that contains two values for each header in the sampled web request: the name of the header and the value of the header.</p>
                */
            Headers?: HTTPHeader[];
    }
    export namespace HTTPRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: HTTPRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The response from a <a>GetSampledRequests</a> request includes a <code>SampledHTTPRequests</code> complex type that
        * 			appears as <code>SampledRequests</code> in the response syntax. <code>SampledHTTPRequests</code> contains one
        * 			<code>SampledHTTPRequest</code> object for each web request that is returned by <code>GetSampledRequests</code>.</p>
        */
    export interface SampledHTTPRequest {
            /**
                * <p>A complex type that contains detailed information about the request.</p>
                */
            Request: HTTPRequest | undefined;
            /**
                * <p>A value that indicates how one result in the response relates proportionally to other results in the response.
                * 			A result that has a weight of <code>2</code> represents roughly twice as many CloudFront web requests as a result
                * 			that has a weight of <code>1</code>.</p>
                */
            Weight: number | undefined;
            /**
                * <p>The time at which AWS WAF received the request from your AWS resource, in Unix time format (in seconds).</p>
                */
            Timestamp?: Date;
            /**
                * <p>The action for the <code>Rule</code> that the request matched: <code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>.</p>
                */
            Action?: string;
            /**
                * <p>This value is returned if the <code>GetSampledRequests</code>  request specifies the ID of a <code>RuleGroup</code> rather than the ID of an individual rule. <code>RuleWithinRuleGroup</code> is the rule within the specified <code>RuleGroup</code> that matched the request listed in the response.</p>
                */
            RuleWithinRuleGroup?: string;
    }
    export namespace SampledHTTPRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SampledHTTPRequest) => any;
    }
    export interface GetSampledRequestsResponse {
            /**
                * <p>A complex type that contains detailed information about each of the requests in the sample.</p>
                */
            SampledRequests?: SampledHTTPRequest[];
            /**
                * <p>The total number of requests from which <code>GetSampledRequests</code> got a sample of <code>MaxItems</code> requests.
                * 			If <code>PopulationSize</code> is less than <code>MaxItems</code>, the sample includes every request that your AWS resource
                * 			received during the specified time range.</p>
                */
            PopulationSize?: number;
            /**
                * <p>Usually, <code>TimeWindow</code> is the time range that you specified in the <code>GetSampledRequests</code> request. However,
                * 			if your AWS resource received more than 5,000 requests during the time range that you specified in the request,
                * 			<code>GetSampledRequests</code> returns the time range for the first 5,000 requests. Times are in Coordinated Universal Time (UTC) format.</p>
                */
            TimeWindow?: TimeWindow;
    }
    export namespace GetSampledRequestsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSampledRequestsResponse) => any;
    }
    export interface GetSizeConstraintSetRequest {
            /**
                * <p>The <code>SizeConstraintSetId</code> of the <a>SizeConstraintSet</a> that you want to get. <code>SizeConstraintSetId</code> is returned by
                * 			<a>CreateSizeConstraintSet</a> and by <a>ListSizeConstraintSets</a>.</p>
                */
            SizeConstraintSetId: string | undefined;
    }
    export namespace GetSizeConstraintSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSizeConstraintSetRequest) => any;
    }
    export interface GetSizeConstraintSetResponse {
            /**
                * <p>Information about the <a>SizeConstraintSet</a> that you specified in the <code>GetSizeConstraintSet</code> request. For more information, see the
                * 			following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>SizeConstraintSet</a>: Contains <code>SizeConstraintSetId</code>, <code>SizeConstraints</code>, and <code>Name</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>SizeConstraints</code>: Contains an array of <a>SizeConstraint</a> objects. Each <code>SizeConstraint</code>
                * 				object contains <a>FieldToMatch</a>, <code>TextTransformation</code>, <code>ComparisonOperator</code>,
                * 				and <code>Size</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            SizeConstraintSet?: SizeConstraintSet;
    }
    export namespace GetSizeConstraintSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSizeConstraintSetResponse) => any;
    }
    /**
        * <p>A request to get a <a>SqlInjectionMatchSet</a>.</p>
        */
    export interface GetSqlInjectionMatchSetRequest {
            /**
                * <p>The <code>SqlInjectionMatchSetId</code> of the <a>SqlInjectionMatchSet</a> that you want to get. <code>SqlInjectionMatchSetId</code>
                * 			is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
                */
            SqlInjectionMatchSetId: string | undefined;
    }
    export namespace GetSqlInjectionMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSqlInjectionMatchSetRequest) => any;
    }
    /**
        * <p>The response to a <a>GetSqlInjectionMatchSet</a> request.</p>
        */
    export interface GetSqlInjectionMatchSetResponse {
            /**
                * <p>Information about the <a>SqlInjectionMatchSet</a> that you specified in the <code>GetSqlInjectionMatchSet</code> request.
                * 			For more information, see the following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>SqlInjectionMatchSet</a>: Contains <code>Name</code>, <code>SqlInjectionMatchSetId</code>, and an array of
                * 				<code>SqlInjectionMatchTuple</code> objects</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>SqlInjectionMatchTuple</a>: Each <code>SqlInjectionMatchTuple</code> object contains <code>FieldToMatch</code> and
                * 				<code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            SqlInjectionMatchSet?: SqlInjectionMatchSet;
    }
    export namespace GetSqlInjectionMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSqlInjectionMatchSetResponse) => any;
    }
    export interface GetWebACLRequest {
            /**
                * <p>The <code>WebACLId</code> of the <a>WebACL</a> that you want to get. <code>WebACLId</code> is returned by <a>CreateWebACL</a> and by
                * 			<a>ListWebACLs</a>.</p>
                */
            WebACLId: string | undefined;
    }
    export namespace GetWebACLRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetWebACLRequest) => any;
    }
    export interface GetWebACLResponse {
            /**
                * <p>Information about the <a>WebACL</a> that you specified in the <code>GetWebACL</code> request.
                * 			For more information, see the following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>WebACL</a>: Contains <code>DefaultAction</code>, <code>MetricName</code>, <code>Name</code>, an array of
                * 				<code>Rule</code> objects, and <code>WebACLId</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DefaultAction</code> (Data type is <a>WafAction</a>): Contains <code>Type</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>Rules</code>: Contains an array of <code>ActivatedRule</code> objects, which contain <code>Action</code>,
                * 				<code>Priority</code>, and <code>RuleId</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>Action</code>: Contains <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            WebACL?: WebACL;
    }
    export namespace GetWebACLResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetWebACLResponse) => any;
    }
    /**
        * <p>A request to get an <a>XssMatchSet</a>.</p>
        */
    export interface GetXssMatchSetRequest {
            /**
                * <p>The <code>XssMatchSetId</code> of the <a>XssMatchSet</a> that you want to get. <code>XssMatchSetId</code>
                * 			is returned by <a>CreateXssMatchSet</a> and by <a>ListXssMatchSets</a>.</p>
                */
            XssMatchSetId: string | undefined;
    }
    export namespace GetXssMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetXssMatchSetRequest) => any;
    }
    /**
        * <p>The response to a <a>GetXssMatchSet</a> request.</p>
        */
    export interface GetXssMatchSetResponse {
            /**
                * <p>Information about the <a>XssMatchSet</a> that you specified in the <code>GetXssMatchSet</code> request.
                * 			For more information, see the following topics:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>XssMatchSet</a>: Contains <code>Name</code>, <code>XssMatchSetId</code>, and an array of
                * 				<code>XssMatchTuple</code> objects</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>XssMatchTuple</a>: Each <code>XssMatchTuple</code> object contains <code>FieldToMatch</code> and
                * 				<code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            XssMatchSet?: XssMatchSet;
    }
    export namespace GetXssMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetXssMatchSetResponse) => any;
    }
    export interface ListActivatedRulesInRuleGroupRequest {
            /**
                * <p>The <code>RuleGroupId</code> of the <a>RuleGroup</a> for which you want to get a list of <a>ActivatedRule</a> objects.</p>
                */
            RuleGroupId?: string;
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>ActivatedRules</code> than the value of <code>Limit</code>,
                *          AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>ActivatedRules</code>.
                *          For the second and subsequent <code>ListActivatedRulesInRuleGroup</code> requests, specify the value of <code>NextMarker</code>
                *          from the previous response to get information about another batch of <code>ActivatedRules</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>ActivatedRules</code> that you want AWS WAF to return for this request. If you have more <code>ActivatedRules</code> than the number that you specify for <code>Limit</code>, the response includes a
                *          <code>NextMarker</code> value that you can use to get another batch of <code>ActivatedRules</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListActivatedRulesInRuleGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListActivatedRulesInRuleGroupRequest) => any;
    }
    export interface ListActivatedRulesInRuleGroupResponse {
            /**
                * <p>If you have more <code>ActivatedRules</code> than the number that you specified for <code>Limit</code> in the request, the response includes a <code>NextMarker</code> value. To list more <code>ActivatedRules</code>, submit another <code>ListActivatedRulesInRuleGroup</code> request, and specify the <code>NextMarker</code> value from the response in the <code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <code>ActivatedRules</code> objects.</p>
                */
            ActivatedRules?: ActivatedRule[];
    }
    export namespace ListActivatedRulesInRuleGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListActivatedRulesInRuleGroupResponse) => any;
    }
    export interface ListByteMatchSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>ByteMatchSets</code> than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>ByteMatchSets</code>.
                * 			For the second and subsequent <code>ListByteMatchSets</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>ByteMatchSets</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>ByteMatchSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>ByteMatchSets</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>ByteMatchSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListByteMatchSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListByteMatchSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Returned by <a>ListByteMatchSets</a>. Each <code>ByteMatchSetSummary</code> object includes the <code>Name</code> and
        * 			<code>ByteMatchSetId</code> for one <a>ByteMatchSet</a>.</p>
        */
    export interface ByteMatchSetSummary {
            /**
                * <p>The <code>ByteMatchSetId</code> for a <code>ByteMatchSet</code>. You use <code>ByteMatchSetId</code> to get information about a <code>ByteMatchSet</code>,
                * 			update a <code>ByteMatchSet</code>, remove a <code>ByteMatchSet</code> from a <code>Rule</code>, and delete a <code>ByteMatchSet</code> from AWS WAF.</p>
                * 		       <p>
                *             <code>ByteMatchSetId</code> is returned by <a>CreateByteMatchSet</a> and by <a>ListByteMatchSets</a>.</p>
                */
            ByteMatchSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>ByteMatchSet</a>. You can't change <code>Name</code> after you create a <code>ByteMatchSet</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace ByteMatchSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ByteMatchSetSummary) => any;
    }
    export interface ListByteMatchSetsResponse {
            /**
                * <p>If you have more <code>ByteMatchSet</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>ByteMatchSet</code> objects, submit another
                * 			<code>ListByteMatchSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>ByteMatchSetSummary</a> objects.</p>
                */
            ByteMatchSets?: ByteMatchSetSummary[];
    }
    export namespace ListByteMatchSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListByteMatchSetsResponse) => any;
    }
    export interface ListGeoMatchSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>GeoMatchSet</code>s than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>GeoMatchSet</code> objects.
                * 			For the second and subsequent <code>ListGeoMatchSets</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>GeoMatchSet</code> objects.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>GeoMatchSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>GeoMatchSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>GeoMatchSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListGeoMatchSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGeoMatchSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Contains the identifier and the name of the <code>GeoMatchSet</code>.</p>
        */
    export interface GeoMatchSetSummary {
            /**
                * <p>The <code>GeoMatchSetId</code> for an <a>GeoMatchSet</a>. You can use <code>GeoMatchSetId</code> in a <a>GetGeoMatchSet</a> request to get detailed	information about an <a>GeoMatchSet</a>.</p>
                */
            GeoMatchSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>GeoMatchSet</a>. You can't change the name of an <code>GeoMatchSet</code> after you create it.</p>
                */
            Name: string | undefined;
    }
    export namespace GeoMatchSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeoMatchSetSummary) => any;
    }
    export interface ListGeoMatchSetsResponse {
            /**
                * <p>If you have more <code>GeoMatchSet</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>GeoMatchSet</code> objects, submit another
                * 			<code>ListGeoMatchSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>GeoMatchSetSummary</a> objects.</p>
                */
            GeoMatchSets?: GeoMatchSetSummary[];
    }
    export namespace ListGeoMatchSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGeoMatchSetsResponse) => any;
    }
    export interface ListIPSetsRequest {
            /**
                * <p>AWS WAF returns a <code>NextMarker</code> value in the response that allows you to
                *          list another group of <code>IPSets</code>. For the second and subsequent
                *             <code>ListIPSets</code> requests, specify the value of <code>NextMarker</code> from the
                *          previous response to get information about another batch of <code>IPSets</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>IPSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>IPSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>IPSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListIPSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIPSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Contains the identifier and the name of the <code>IPSet</code>.</p>
        */
    export interface IPSetSummary {
            /**
                * <p>The <code>IPSetId</code> for an <a>IPSet</a>. You can use <code>IPSetId</code> in a <a>GetIPSet</a> request to get detailed
                * 			information about an <a>IPSet</a>.</p>
                */
            IPSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>IPSet</a>. You can't change the name of an <code>IPSet</code> after you create it.</p>
                */
            Name: string | undefined;
    }
    export namespace IPSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IPSetSummary) => any;
    }
    export interface ListIPSetsResponse {
            /**
                * <p>To list more <code>IPSet</code> objects, submit another <code>ListIPSets</code>
                *          request, and in the next request use the <code>NextMarker</code> response value as the
                *             <code>NextMarker</code> value.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>IPSetSummary</a> objects.</p>
                */
            IPSets?: IPSetSummary[];
    }
    export namespace ListIPSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListIPSetsResponse) => any;
    }
    export interface ListLoggingConfigurationsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>LoggingConfigurations</code> than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>LoggingConfigurations</code>.
                * 			For the second and subsequent <code>ListLoggingConfigurations</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>ListLoggingConfigurations</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>LoggingConfigurations</code> that you want AWS WAF to return for this request. If you have more <code>LoggingConfigurations</code> than the number that you specify for <code>Limit</code>, the response includes a <code>NextMarker</code> value that you can use to get another batch of <code>LoggingConfigurations</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListLoggingConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLoggingConfigurationsRequest) => any;
    }
    export interface ListLoggingConfigurationsResponse {
            /**
                * <p>An array of <a>LoggingConfiguration</a> objects.</p>
                */
            LoggingConfigurations?: LoggingConfiguration[];
            /**
                * <p>If you have more <code>LoggingConfigurations</code> than the number that you specified for <code>Limit</code> in the request, the response includes a <code>NextMarker</code> value. To list more <code>LoggingConfigurations</code>, submit another <code>ListLoggingConfigurations</code> request, and specify the <code>NextMarker</code> value from the response in the <code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
    }
    export namespace ListLoggingConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListLoggingConfigurationsResponse) => any;
    }
    export interface ListRateBasedRulesRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>Rules</code>
                *          than the value of <code>Limit</code>, AWS WAF returns a <code>NextMarker</code> value in the
                *          response that allows you to list another group of <code>Rules</code>. For the second and
                *          subsequent <code>ListRateBasedRules</code> requests, specify the value of
                *             <code>NextMarker</code> from the previous response to get information about another
                *          batch of <code>Rules</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>Rules</code> that you want AWS WAF to return for this
                *          request. If you have more <code>Rules</code> than the number that you specify for
                *             <code>Limit</code>, the response includes a <code>NextMarker</code> value that you can
                *          use to get another batch of <code>Rules</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListRateBasedRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRateBasedRulesRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Contains the identifier and the friendly name or description of the <code>Rule</code>.</p>
        */
    export interface RuleSummary {
            /**
                * <p>A unique identifier for a <code>Rule</code>. You use <code>RuleId</code> to get more information about a <code>Rule</code> (see <a>GetRule</a>),
                * 			update a <code>Rule</code> (see <a>UpdateRule</a>), insert a <code>Rule</code> into a <code>WebACL</code> or delete
                * 			one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>Rule</code> from AWS WAF (see <a>DeleteRule</a>).</p>
                * 		       <p>
                *             <code>RuleId</code> is returned by <a>CreateRule</a> and by <a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>Rule</a>. You can't change the name of a <code>Rule</code> after you create it.</p>
                */
            Name: string | undefined;
    }
    export namespace RuleSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleSummary) => any;
    }
    export interface ListRateBasedRulesResponse {
            /**
                * <p>If you have more <code>Rules</code> than the number that you specified for
                *             <code>Limit</code> in the request, the response includes a <code>NextMarker</code>
                *          value. To list more <code>Rules</code>, submit another <code>ListRateBasedRules</code>
                *          request, and specify the <code>NextMarker</code> value from the response in the
                *             <code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RuleSummary</a> objects.</p>
                */
            Rules?: RuleSummary[];
    }
    export namespace ListRateBasedRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRateBasedRulesResponse) => any;
    }
    export interface ListRegexMatchSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>RegexMatchSet</code> objects than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>ByteMatchSets</code>.
                * 			For the second and subsequent <code>ListRegexMatchSets</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>RegexMatchSet</code> objects.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>RegexMatchSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>RegexMatchSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>RegexMatchSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListRegexMatchSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegexMatchSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returned by <a>ListRegexMatchSets</a>. Each <code>RegexMatchSetSummary</code> object includes the <code>Name</code> and
        * 			<code>RegexMatchSetId</code> for one <a>RegexMatchSet</a>.</p>
        */
    export interface RegexMatchSetSummary {
            /**
                * <p>The <code>RegexMatchSetId</code> for a <code>RegexMatchSet</code>. You use <code>RegexMatchSetId</code> to get information about a <code>RegexMatchSet</code>,
                * 			update a <code>RegexMatchSet</code>, remove a <code>RegexMatchSet</code> from a <code>Rule</code>, and delete a <code>RegexMatchSet</code> from AWS WAF.</p>
                * 		       <p>
                *             <code>RegexMatchSetId</code> is returned by <a>CreateRegexMatchSet</a> and by <a>ListRegexMatchSets</a>.</p>
                */
            RegexMatchSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>RegexMatchSet</a>. You can't change <code>Name</code> after you create a <code>RegexMatchSet</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace RegexMatchSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexMatchSetSummary) => any;
    }
    export interface ListRegexMatchSetsResponse {
            /**
                * <p>If you have more <code>RegexMatchSet</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>RegexMatchSet</code> objects, submit another
                * 			<code>ListRegexMatchSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RegexMatchSetSummary</a> objects.</p>
                */
            RegexMatchSets?: RegexMatchSetSummary[];
    }
    export namespace ListRegexMatchSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegexMatchSetsResponse) => any;
    }
    export interface ListRegexPatternSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>RegexPatternSet</code> objects than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>RegexPatternSet</code> objects.
                * 			For the second and subsequent <code>ListRegexPatternSets</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>RegexPatternSet</code> objects.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>RegexPatternSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>RegexPatternSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>RegexPatternSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListRegexPatternSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegexPatternSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Returned by <a>ListRegexPatternSets</a>. Each <code>RegexPatternSetSummary</code> object includes the <code>Name</code> and
        *          <code>RegexPatternSetId</code> for one <a>RegexPatternSet</a>.</p>
        */
    export interface RegexPatternSetSummary {
            /**
                * <p>The <code>RegexPatternSetId</code> for a <code>RegexPatternSet</code>. You use <code>RegexPatternSetId</code> to get information about a <code>RegexPatternSet</code>,
                *          update a <code>RegexPatternSet</code>, remove a <code>RegexPatternSet</code> from a <code>RegexMatchSet</code>, and delete a <code>RegexPatternSet</code> from AWS WAF.</p>
                *          <p>
                *             <code>RegexPatternSetId</code> is returned by <a>CreateRegexPatternSet</a> and by <a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>RegexPatternSet</a>. You can't change <code>Name</code> after you create a <code>RegexPatternSet</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace RegexPatternSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexPatternSetSummary) => any;
    }
    export interface ListRegexPatternSetsResponse {
            /**
                * <p>If you have more <code>RegexPatternSet</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>RegexPatternSet</code> objects, submit another
                * 			<code>ListRegexPatternSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RegexPatternSetSummary</a> objects.</p>
                */
            RegexPatternSets?: RegexPatternSetSummary[];
    }
    export namespace ListRegexPatternSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegexPatternSetsResponse) => any;
    }
    export interface ListRuleGroupsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>RuleGroups</code> than the value of <code>Limit</code>,
                *          AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>RuleGroups</code>.
                *          For the second and subsequent <code>ListRuleGroups</code> requests, specify the value of <code>NextMarker</code>
                *          from the previous response to get information about another batch of <code>RuleGroups</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>RuleGroups</code> that you want AWS WAF to return for this request. If you have more <code>RuleGroups</code> than the number that you specify for <code>Limit</code>, the response includes a <code>NextMarker</code> value that you can use to get another batch of <code>RuleGroups</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListRuleGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRuleGroupsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Contains the identifier and the friendly name or description of the <code>RuleGroup</code>.</p>
        */
    export interface RuleGroupSummary {
            /**
                * <p>A unique identifier for a <code>RuleGroup</code>. You use <code>RuleGroupId</code> to get more information about a <code>RuleGroup</code> (see <a>GetRuleGroup</a>),
                *          update a <code>RuleGroup</code> (see <a>UpdateRuleGroup</a>), insert a <code>RuleGroup</code> into a <code>WebACL</code> or delete
                *          one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>RuleGroup</code> from AWS WAF (see <a>DeleteRuleGroup</a>).</p>
                *          <p>
                *             <code>RuleGroupId</code> is returned by <a>CreateRuleGroup</a> and by <a>ListRuleGroups</a>.</p>
                */
            RuleGroupId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>RuleGroup</a>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
                */
            Name: string | undefined;
    }
    export namespace RuleGroupSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroupSummary) => any;
    }
    export interface ListRuleGroupsResponse {
            /**
                * <p>If you have more <code>RuleGroups</code> than the number that you specified for <code>Limit</code> in the request, the response includes a <code>NextMarker</code> value. To list more <code>RuleGroups</code>, submit another <code>ListRuleGroups</code> request, and specify the <code>NextMarker</code> value from the response in the <code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RuleGroup</a> objects.</p>
                */
            RuleGroups?: RuleGroupSummary[];
    }
    export namespace ListRuleGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRuleGroupsResponse) => any;
    }
    export interface ListRulesRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>Rules</code> than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>Rules</code>.
                * 			For the second and subsequent <code>ListRules</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>Rules</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>Rules</code> that you want AWS WAF to return for this request. If you have more 			<code>Rules</code> than the number that you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>Rules</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesRequest) => any;
    }
    export interface ListRulesResponse {
            /**
                * <p>If you have more <code>Rules</code> than the number that you specified for <code>Limit</code> in the request, 			the response includes a <code>NextMarker</code> value. To list more <code>Rules</code>, submit another
                * 			<code>ListRules</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RuleSummary</a> objects.</p>
                */
            Rules?: RuleSummary[];
    }
    export namespace ListRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesResponse) => any;
    }
    export interface ListSizeConstraintSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>SizeConstraintSets</code> than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of <code>SizeConstraintSets</code>.
                * 			For the second and subsequent <code>ListSizeConstraintSets</code> requests, specify the value of <code>NextMarker</code> 			from the previous response to get information about another batch of <code>SizeConstraintSets</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>SizeConstraintSet</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>SizeConstraintSets</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>SizeConstraintSet</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListSizeConstraintSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSizeConstraintSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The <code>Id</code> and <code>Name</code> of a <code>SizeConstraintSet</code>.</p>
        */
    export interface SizeConstraintSetSummary {
            /**
                * <p>A unique identifier for a <code>SizeConstraintSet</code>. You use <code>SizeConstraintSetId</code> to get information about a
                * 			<code>SizeConstraintSet</code> (see <a>GetSizeConstraintSet</a>), update a <code>SizeConstraintSet</code>
                * 			(see <a>UpdateSizeConstraintSet</a>), insert a <code>SizeConstraintSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete a <code>SizeConstraintSet</code> from AWS WAF
                * 			(see <a>DeleteSizeConstraintSet</a>).</p>
                * 		       <p>
                *             <code>SizeConstraintSetId</code> is returned by <a>CreateSizeConstraintSet</a> and by <a>ListSizeConstraintSets</a>.</p>
                */
            SizeConstraintSetId: string | undefined;
            /**
                * <p>The name of the <code>SizeConstraintSet</code>, if any.</p>
                */
            Name: string | undefined;
    }
    export namespace SizeConstraintSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SizeConstraintSetSummary) => any;
    }
    export interface ListSizeConstraintSetsResponse {
            /**
                * <p>If you have more <code>SizeConstraintSet</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>SizeConstraintSet</code> objects, submit another
                * 			<code>ListSizeConstraintSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>SizeConstraintSetSummary</a> objects.</p>
                */
            SizeConstraintSets?: SizeConstraintSetSummary[];
    }
    export namespace ListSizeConstraintSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSizeConstraintSetsResponse) => any;
    }
    /**
        * <p>A request to list the <a>SqlInjectionMatchSet</a> objects created by the current AWS account.</p>
        */
    export interface ListSqlInjectionMatchSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <a>SqlInjectionMatchSet</a> objects than the value of
                * 			<code>Limit</code>, AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of
                * 			<code>SqlInjectionMatchSets</code>. For the second and subsequent <code>ListSqlInjectionMatchSets</code> requests, specify the
                * 			value of <code>NextMarker</code> from the previous response to get information about another batch of <code>SqlInjectionMatchSets</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <a>SqlInjectionMatchSet</a> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>SqlInjectionMatchSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>Rules</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListSqlInjectionMatchSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSqlInjectionMatchSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The <code>Id</code> and <code>Name</code> of a <code>SqlInjectionMatchSet</code>.</p>
        */
    export interface SqlInjectionMatchSetSummary {
            /**
                * <p>A unique identifier for a <code>SqlInjectionMatchSet</code>. You use <code>SqlInjectionMatchSetId</code> to get information about a
                * 			<code>SqlInjectionMatchSet</code> (see <a>GetSqlInjectionMatchSet</a>), update a <code>SqlInjectionMatchSet</code>
                * 			(see <a>UpdateSqlInjectionMatchSet</a>), insert a <code>SqlInjectionMatchSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete a <code>SqlInjectionMatchSet</code> from AWS WAF
                * 			(see <a>DeleteSqlInjectionMatchSet</a>).</p>
                * 		       <p>
                *             <code>SqlInjectionMatchSetId</code> is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
                */
            SqlInjectionMatchSetId: string | undefined;
            /**
                * <p>The name of the <code>SqlInjectionMatchSet</code>, if any, specified by <code>Id</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace SqlInjectionMatchSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SqlInjectionMatchSetSummary) => any;
    }
    /**
        * <p>The response to a <a>ListSqlInjectionMatchSets</a> request.</p>
        */
    export interface ListSqlInjectionMatchSetsResponse {
            /**
                * <p>If you have more <a>SqlInjectionMatchSet</a> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>SqlInjectionMatchSet</code> objects, submit another
                * 			<code>ListSqlInjectionMatchSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>SqlInjectionMatchSetSummary</a> objects.</p>
                */
            SqlInjectionMatchSets?: SqlInjectionMatchSetSummary[];
    }
    export namespace ListSqlInjectionMatchSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSqlInjectionMatchSetsResponse) => any;
    }
    export interface ListSubscribedRuleGroupsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>ByteMatchSets</code>subscribed rule groups than the value of <code>Limit</code>,
                * 			AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of subscribed rule groups.
                * 			For the second and subsequent <code>ListSubscribedRuleGroupsRequest</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of subscribed rule groups.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of subscribed rule groups that you want AWS WAF to return for this request. If you have more
                * 			objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of objects.</p>
                */
            Limit?: number;
    }
    export namespace ListSubscribedRuleGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSubscribedRuleGroupsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>A summary of the rule groups you are subscribed to.</p>
        */
    export interface SubscribedRuleGroupSummary {
            /**
                * <p>A unique identifier for a <code>RuleGroup</code>.</p>
                */
            RuleGroupId: string | undefined;
            /**
                * <p>A friendly name or description of the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
                */
            Name: string | undefined;
            /**
                * <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
                *          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
                */
            MetricName: string | undefined;
    }
    export namespace SubscribedRuleGroupSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SubscribedRuleGroupSummary) => any;
    }
    export interface ListSubscribedRuleGroupsResponse {
            /**
                * <p>If you have more objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more objects, submit another
                * 			<code>ListSubscribedRuleGroups</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>RuleGroup</a> objects.</p>
                */
            RuleGroups?: SubscribedRuleGroupSummary[];
    }
    export namespace ListSubscribedRuleGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSubscribedRuleGroupsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p></p>
                */
            NextMarker?: string;
            /**
                * <p></p>
                */
            Limit?: number;
            /**
                * <p></p>
                */
            ResourceARN: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *         <p>Information for a tag associated with an AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p>
        *         <p>Tagging is only available through the API, SDKs, and CLI. You can't manage or view tags through the AWS WAF Classic console. You can tag the AWS resources that you manage through AWS WAF Classic: web ACLs, rule groups, and rules.  </p>
        */
    export interface TagInfoForResource {
            /**
                * <p></p>
                */
            ResourceARN?: string;
            /**
                * <p></p>
                */
            TagList?: Tag[];
    }
    export namespace TagInfoForResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagInfoForResource) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p></p>
                */
            NextMarker?: string;
            /**
                * <p></p>
                */
            TagInfoForResource?: TagInfoForResource;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListWebACLsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <code>WebACL</code> objects than the number that you specify
                * 			for <code>Limit</code>, AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of
                * 			<code>WebACL</code> objects. For the second and subsequent <code>ListWebACLs</code> requests, specify the value of <code>NextMarker</code>
                * 			from the previous response to get information about another batch of <code>WebACL</code> objects.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <code>WebACL</code> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>WebACL</code> objects than the number that you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>WebACL</code> objects.</p>
                */
            Limit?: number;
    }
    export namespace ListWebACLsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebACLsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Contains the identifier and the name or description of the <a>WebACL</a>.</p>
        */
    export interface WebACLSummary {
            /**
                * <p>A unique identifier for a <code>WebACL</code>. You use <code>WebACLId</code> to get information about a <code>WebACL</code>
                * 			(see <a>GetWebACL</a>), update a <code>WebACL</code> (see <a>UpdateWebACL</a>), and delete a <code>WebACL</code> from AWS WAF
                * 			(see <a>DeleteWebACL</a>).</p>
                * 		       <p>
                *             <code>WebACLId</code> is returned by <a>CreateWebACL</a> and by <a>ListWebACLs</a>.</p>
                */
            WebACLId: string | undefined;
            /**
                * <p>A friendly name or description of the <a>WebACL</a>. You can't change the name of a <code>WebACL</code> after you create it.</p>
                */
            Name: string | undefined;
    }
    export namespace WebACLSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WebACLSummary) => any;
    }
    export interface ListWebACLsResponse {
            /**
                * <p>If you have more <code>WebACL</code> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>WebACL</code> objects, submit another
                * 			<code>ListWebACLs</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>WebACLSummary</a> objects.</p>
                */
            WebACLs?: WebACLSummary[];
    }
    export namespace ListWebACLsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListWebACLsResponse) => any;
    }
    /**
        * <p>A request to list the <a>XssMatchSet</a> objects created by the current AWS account.</p>
        */
    export interface ListXssMatchSetsRequest {
            /**
                * <p>If you specify a value for <code>Limit</code> and you have more <a>XssMatchSet</a> objects than the value of
                * 			<code>Limit</code>, AWS WAF returns a <code>NextMarker</code> value in the response that allows you to list another group of
                * 			<code>XssMatchSets</code>. For the second and subsequent <code>ListXssMatchSets</code> requests, specify the
                * 			value of <code>NextMarker</code> from the previous response to get information about another batch of <code>XssMatchSets</code>.</p>
                */
            NextMarker?: string;
            /**
                * <p>Specifies the number of <a>XssMatchSet</a> objects that you want AWS WAF to return for this request. If you have more
                * 			<code>XssMatchSet</code> objects than the number you specify for <code>Limit</code>, the response includes a
                * 			<code>NextMarker</code> value that you can use to get another batch of <code>Rules</code>.</p>
                */
            Limit?: number;
    }
    export namespace ListXssMatchSetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListXssMatchSetsRequest) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>The <code>Id</code> and <code>Name</code> of an <code>XssMatchSet</code>.</p>
        */
    export interface XssMatchSetSummary {
            /**
                * <p>A unique identifier for an <code>XssMatchSet</code>. You use <code>XssMatchSetId</code> to get information about a
                * 			<code>XssMatchSet</code> (see <a>GetXssMatchSet</a>), update an <code>XssMatchSet</code>
                * 			(see <a>UpdateXssMatchSet</a>), insert an <code>XssMatchSet</code> into a <code>Rule</code> or
                * 			delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and delete an <code>XssMatchSet</code> from AWS WAF
                * 			(see <a>DeleteXssMatchSet</a>).</p>
                * 		       <p>
                *             <code>XssMatchSetId</code> is returned by <a>CreateXssMatchSet</a> and by <a>ListXssMatchSets</a>.</p>
                */
            XssMatchSetId: string | undefined;
            /**
                * <p>The name of the <code>XssMatchSet</code>, if any, specified by <code>Id</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace XssMatchSetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: XssMatchSetSummary) => any;
    }
    /**
        * <p>The response to a <a>ListXssMatchSets</a> request.</p>
        */
    export interface ListXssMatchSetsResponse {
            /**
                * <p>If you have more <a>XssMatchSet</a> objects than the number that you specified for <code>Limit</code> in the request,
                * 			the response includes a <code>NextMarker</code> value. To list more <code>XssMatchSet</code> objects, submit another
                * 			<code>ListXssMatchSets</code> request, and specify the <code>NextMarker</code> value from the response in the
                * 			<code>NextMarker</code> value in the next request.</p>
                */
            NextMarker?: string;
            /**
                * <p>An array of <a>XssMatchSetSummary</a> objects.</p>
                */
            XssMatchSets?: XssMatchSetSummary[];
    }
    export namespace ListXssMatchSetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListXssMatchSetsResponse) => any;
    }
    export interface PutLoggingConfigurationRequest {
            /**
                * <p>The Amazon Kinesis Data Firehose that contains the inspected traffic
                *          information, the redacted fields details, and the Amazon Resource Name (ARN) of the web ACL
                *          to monitor.</p>
                *          <note>
                *             <p>When specifying <code>Type</code> in <code>RedactedFields</code>, you must use one of
                *             the following values: <code>URI</code>, <code>QUERY_STRING</code>, <code>HEADER</code>,
                *             or <code>METHOD</code>.</p>
                *          </note>
                */
            LoggingConfiguration: LoggingConfiguration | undefined;
    }
    export namespace PutLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutLoggingConfigurationRequest) => any;
    }
    export interface PutLoggingConfigurationResponse {
            /**
                * <p>The <a>LoggingConfiguration</a> that you submitted in the request.</p>
                */
            LoggingConfiguration?: LoggingConfiguration;
    }
    export namespace PutLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutLoggingConfigurationResponse) => any;
    }
    /**
        * <p>AWS WAF is not able to access the service linked role. This can be caused by a previous <code>PutLoggingConfiguration</code> request, which can lock the service linked role for about 20 seconds. Please try your request again. The service linked role can also be locked by a previous <code>DeleteServiceLinkedRole</code> request, which can lock the role for 15 minutes or more. If you recently made a <code>DeleteServiceLinkedRole</code>, wait at least 15 minutes and try the request again. If you receive this same exception again, you will have to wait additional time until the role is unlocked.</p>
        */
    export class WAFServiceLinkedRoleErrorException extends __BaseException {
            readonly name: "WAFServiceLinkedRoleErrorException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFServiceLinkedRoleErrorException, __BaseException>);
    }
    export interface PutPermissionPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the RuleGroup to which you want to attach the policy.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The policy to attach to the specified RuleGroup.</p>
                */
            Policy: string | undefined;
    }
    export namespace PutPermissionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutPermissionPolicyRequest) => any;
    }
    export interface PutPermissionPolicyResponse {
    }
    export namespace PutPermissionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutPermissionPolicyResponse) => any;
    }
    /**
        * <p>The operation failed because the specified policy is not in the proper format. </p>
        *          <p>The policy is subject to the following restrictions:</p>
        *          <ul>
        *             <li>
        *                <p>You can attach only one policy with each <code>PutPermissionPolicy</code> request.</p>
        *             </li>
        *             <li>
        *                <p>The policy must include an <code>Effect</code>, <code>Action</code> and <code>Principal</code>. </p>
        *             </li>
        *             <li>
        *
        *                <p>
        *                   <code>Effect</code> must specify <code>Allow</code>.</p>
        *             </li>
        *             <li>
        *                <p>The <code>Action</code> in the policy must be <code>waf:UpdateWebACL</code>, <code>waf-regional:UpdateWebACL</code>, <code>waf:GetRuleGroup</code> and <code>waf-regional:GetRuleGroup</code> . Any extra or wildcard actions in the policy will be rejected.</p>
        *             </li>
        *             <li>
        *                <p>The policy cannot include a <code>Resource</code> parameter.</p>
        *             </li>
        *             <li>
        *                <p>The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup must exist in the same region.</p>
        *             </li>
        *             <li>
        *                <p>The user making the request must be the owner of the RuleGroup.</p>
        *             </li>
        *             <li>
        *                <p>Your policy must be composed using IAM Policy version 2012-10-17.</p>
        *             </li>
        *          </ul>
        */
    export class WAFInvalidPermissionPolicyException extends __BaseException {
            readonly name: "WAFInvalidPermissionPolicyException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInvalidPermissionPolicyException, __BaseException>);
    }
    export interface TagResourceRequest {
            /**
                * <p></p>
                */
            ResourceARN: string | undefined;
            /**
                * <p></p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p></p>
                */
            ResourceARN: string | undefined;
            /**
                * <p></p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export enum ChangeAction {
            DELETE = "DELETE",
            INSERT = "INSERT"
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>In an <a>UpdateByteMatchSet</a> request, <code>ByteMatchSetUpdate</code> specifies whether to insert or delete a
        * 			<a>ByteMatchTuple</a> and includes the settings for the <code>ByteMatchTuple</code>.</p>
        */
    export interface ByteMatchSetUpdate {
            /**
                * <p>Specifies whether to insert or delete a <a>ByteMatchTuple</a>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Information about the part of a web request that you want AWS WAF to inspect and the value that you want AWS WAF to search for.
                * 			If you specify <code>DELETE</code> for the value of <code>Action</code>, the <code>ByteMatchTuple</code> values must
                * 			exactly match the values in the <code>ByteMatchTuple</code> that you want to delete from the <code>ByteMatchSet</code>.</p>
                */
            ByteMatchTuple: ByteMatchTuple | undefined;
    }
    export namespace ByteMatchSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ByteMatchSetUpdate) => any;
    }
    export interface UpdateByteMatchSetRequest {
            /**
                * <p>The <code>ByteMatchSetId</code> of the <a>ByteMatchSet</a> that you want to update. <code>ByteMatchSetId</code> is returned by <a>CreateByteMatchSet</a> and by
                * 			<a>ListByteMatchSets</a>.</p>
                */
            ByteMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>ByteMatchSetUpdate</code> objects that you want to insert into or delete from a <a>ByteMatchSet</a>.
                * 			For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>ByteMatchSetUpdate</a>: Contains <code>Action</code> and <code>ByteMatchTuple</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>ByteMatchTuple</a>: Contains <code>FieldToMatch</code>, <code>PositionalConstraint</code>, <code>TargetString</code>,
                * 				and <code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates: ByteMatchSetUpdate[] | undefined;
    }
    export namespace UpdateByteMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateByteMatchSetRequest) => any;
    }
    export interface UpdateByteMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateByteMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateByteMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateByteMatchSetResponse) => any;
    }
    /**
        * <p>The operation failed because you tried to add an object to or delete an object from another object that doesn't exist. For example:</p>
        * 		       <ul>
        *             <li>
        *                <p>You tried to add a <code>Rule</code> to or delete a <code>Rule</code> from a <code>WebACL</code> that doesn't exist.</p>
        *             </li>
        *             <li>
        *                <p>You tried to add a <code>ByteMatchSet</code> to or delete a <code>ByteMatchSet</code> from a <code>Rule</code> that doesn't exist.</p>
        *             </li>
        *             <li>
        *                <p>You tried to add an IP address to or delete an IP address from an <code>IPSet</code> that doesn't exist.</p>
        *             </li>
        *             <li>
        *                <p>You tried to add a <code>ByteMatchTuple</code> to or delete a <code>ByteMatchTuple</code> from a <code>ByteMatchSet</code>
        * 				that doesn't exist.</p>
        *             </li>
        *          </ul>
        */
    export class WAFNonexistentContainerException extends __BaseException {
            readonly name: "WAFNonexistentContainerException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFNonexistentContainerException, __BaseException>);
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Specifies the type of update to perform to an <a>GeoMatchSet</a> with <a>UpdateGeoMatchSet</a>.</p>
        */
    export interface GeoMatchSetUpdate {
            /**
                * <p>Specifies whether to insert or delete a country with <a>UpdateGeoMatchSet</a>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>The country from which web requests originate that you want AWS WAF to search for.</p>
                */
            GeoMatchConstraint: GeoMatchConstraint | undefined;
    }
    export namespace GeoMatchSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeoMatchSetUpdate) => any;
    }
    export interface UpdateGeoMatchSetRequest {
            /**
                * <p>The <code>GeoMatchSetId</code> of the <a>GeoMatchSet</a> that you want to update. <code>GeoMatchSetId</code> is returned by <a>CreateGeoMatchSet</a> and by
                * 			<a>ListGeoMatchSets</a>.</p>
                */
            GeoMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>GeoMatchSetUpdate</code> objects that you want to insert into or delete from an <a>GeoMatchSet</a>.
                * 			For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>GeoMatchSetUpdate</a>: Contains <code>Action</code> and <code>GeoMatchConstraint</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>GeoMatchConstraint</a>: Contains <code>Type</code> and <code>Value</code>
                *                </p>
                * 			            <p>You can have only one <code>Type</code> and <code>Value</code> per <code>GeoMatchConstraint</code>. To add multiple countries, include multiple <code>GeoMatchSetUpdate</code> objects in your request.</p>
                *             </li>
                *          </ul>
                */
            Updates: GeoMatchSetUpdate[] | undefined;
    }
    export namespace UpdateGeoMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGeoMatchSetRequest) => any;
    }
    export interface UpdateGeoMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateGeoMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateGeoMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGeoMatchSetResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the type of update to perform to an <a>IPSet</a> with <a>UpdateIPSet</a>.</p>
        */
    export interface IPSetUpdate {
            /**
                * <p>Specifies whether to insert or delete an IP address with <a>UpdateIPSet</a>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>The IP address type (<code>IPV4</code> or <code>IPV6</code>) and the IP address range (in CIDR notation) that web requests originate from.</p>
                */
            IPSetDescriptor: IPSetDescriptor | undefined;
    }
    export namespace IPSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IPSetUpdate) => any;
    }
    export interface UpdateIPSetRequest {
            /**
                * <p>The <code>IPSetId</code> of the <a>IPSet</a> that you want to update. <code>IPSetId</code> is returned by <a>CreateIPSet</a> and by
                * 			<a>ListIPSets</a>.</p>
                */
            IPSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>IPSetUpdate</code> objects that you want to insert into or delete from an <a>IPSet</a>.
                * 			For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>IPSetUpdate</a>: Contains <code>Action</code> and <code>IPSetDescriptor</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>IPSetDescriptor</a>: Contains <code>Type</code> and <code>Value</code>
                *                </p>
                *             </li>
                *          </ul>
                * 	        <p>You can insert a maximum of 1000 addresses in a single request.</p>
                */
            Updates: IPSetUpdate[] | undefined;
    }
    export namespace UpdateIPSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIPSetRequest) => any;
    }
    export interface UpdateIPSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateIPSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateIPSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateIPSetResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies a <code>Predicate</code> (such as an <code>IPSet</code>) and indicates whether you want to add it to a
        * 			<code>Rule</code> or delete it from a <code>Rule</code>.</p>
        */
    export interface RuleUpdate {
            /**
                * <p>Specify <code>INSERT</code> to add a <code>Predicate</code> to a <code>Rule</code>. Use <code>DELETE</code> to remove a
                * 			<code>Predicate</code> from a <code>Rule</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>The ID of the <code>Predicate</code> (such as an <code>IPSet</code>) that you want to add to a <code>Rule</code>.</p>
                */
            Predicate: Predicate | undefined;
    }
    export namespace RuleUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleUpdate) => any;
    }
    export interface UpdateRateBasedRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <code>RateBasedRule</code> that you want to update.
                *             <code>RuleId</code> is returned by <code>CreateRateBasedRule</code> and by <a>ListRateBasedRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>RuleUpdate</code> objects that you want to insert into or delete
                *          from a <a>RateBasedRule</a>. </p>
                */
            Updates: RuleUpdate[] | undefined;
            /**
                * <p>The maximum number of requests, which have an identical value in the field specified by the <code>RateKey</code>, allowed in a
                *          five-minute period. If the number of requests exceeds the <code>RateLimit</code> and the other
                *          predicates specified in the rule are also met,
                *          AWS WAF triggers the action that is specified for this rule.</p>
                */
            RateLimit: number | undefined;
    }
    export namespace UpdateRateBasedRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRateBasedRuleRequest) => any;
    }
    export interface UpdateRateBasedRuleResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the
                *             <code>UpdateRateBasedRule</code> request. You can also use this value to query the
                *          status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateRateBasedRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRateBasedRuleResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>In an <a>UpdateRegexMatchSet</a> request, <code>RegexMatchSetUpdate</code> specifies whether to insert or delete a
        *          <a>RegexMatchTuple</a> and includes the settings for the <code>RegexMatchTuple</code>.</p>
        */
    export interface RegexMatchSetUpdate {
            /**
                * <p>Specifies whether to insert or delete a <a>RegexMatchTuple</a>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Information about the part of a web request that you want AWS WAF to inspect and the identifier of the regular expression (regex) pattern that you want AWS WAF to search for.
                *          If you specify <code>DELETE</code> for the value of <code>Action</code>, the <code>RegexMatchTuple</code> values must
                *          exactly match the values in the <code>RegexMatchTuple</code> that you want to delete from the <code>RegexMatchSet</code>.</p>
                */
            RegexMatchTuple: RegexMatchTuple | undefined;
    }
    export namespace RegexMatchSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexMatchSetUpdate) => any;
    }
    export interface UpdateRegexMatchSetRequest {
            /**
                * <p>The <code>RegexMatchSetId</code> of the <a>RegexMatchSet</a> that you want to update. <code>RegexMatchSetId</code> is returned by <a>CreateRegexMatchSet</a> and by
                * 			<a>ListRegexMatchSets</a>.</p>
                */
            RegexMatchSetId: string | undefined;
            /**
                * <p>An array of <code>RegexMatchSetUpdate</code> objects that you want to insert into or delete from a <a>RegexMatchSet</a>.
                * 			For more information, see <a>RegexMatchTuple</a>.</p>
                */
            Updates: RegexMatchSetUpdate[] | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace UpdateRegexMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRegexMatchSetRequest) => any;
    }
    export interface UpdateRegexMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateRegexMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateRegexMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRegexMatchSetResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>In an <a>UpdateRegexPatternSet</a> request, <code>RegexPatternSetUpdate</code> specifies whether to insert or delete a
        *          <code>RegexPatternString</code> and includes the settings for the <code>RegexPatternString</code>.</p>
        */
    export interface RegexPatternSetUpdate {
            /**
                * <p>Specifies whether to insert or delete a <code>RegexPatternString</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
                */
            RegexPatternString: string | undefined;
    }
    export namespace RegexPatternSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegexPatternSetUpdate) => any;
    }
    export interface UpdateRegexPatternSetRequest {
            /**
                * <p>The <code>RegexPatternSetId</code> of the <a>RegexPatternSet</a> that you want to update. <code>RegexPatternSetId</code> is returned by <a>CreateRegexPatternSet</a> and by
                * 			<a>ListRegexPatternSets</a>.</p>
                */
            RegexPatternSetId: string | undefined;
            /**
                * <p>An array of <code>RegexPatternSetUpdate</code> objects that you want to insert into or delete from a <a>RegexPatternSet</a>.</p>
                */
            Updates: RegexPatternSetUpdate[] | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace UpdateRegexPatternSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRegexPatternSetRequest) => any;
    }
    export interface UpdateRegexPatternSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateRegexPatternSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateRegexPatternSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRegexPatternSetResponse) => any;
    }
    /**
        * <p>The regular expression (regex) you specified in <code>RegexPatternString</code> is invalid.</p>
        */
    export class WAFInvalidRegexPatternException extends __BaseException {
            readonly name: "WAFInvalidRegexPatternException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFInvalidRegexPatternException, __BaseException>);
    }
    export interface UpdateRuleRequest {
            /**
                * <p>The <code>RuleId</code> of the <code>Rule</code> that you want to update. <code>RuleId</code> is returned by
                * 			<code>CreateRule</code> and by <a>ListRules</a>.</p>
                */
            RuleId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>RuleUpdate</code> objects that you want to insert into or delete from a
                * 			<a>Rule</a>. For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>RuleUpdate</a>: Contains <code>Action</code> and <code>Predicate</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>Predicate</a>: Contains <code>DataId</code>, <code>Negated</code>, and <code>Type</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates: RuleUpdate[] | undefined;
    }
    export namespace UpdateRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleRequest) => any;
    }
    export interface UpdateRuleResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateRule</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        *          <p>Specifies an <code>ActivatedRule</code> and indicates whether you want to add it to a
        *          <code>RuleGroup</code> or delete it from a <code>RuleGroup</code>.</p>
        */
    export interface RuleGroupUpdate {
            /**
                * <p>Specify <code>INSERT</code> to add an <code>ActivatedRule</code> to a <code>RuleGroup</code>. Use <code>DELETE</code> to remove an
                *          <code>ActivatedRule</code> from a <code>RuleGroup</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>The <code>ActivatedRule</code> object specifies a <code>Rule</code> that you want to insert or delete,
                *          the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code>
                *          (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
                */
            ActivatedRule: ActivatedRule | undefined;
    }
    export namespace RuleGroupUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleGroupUpdate) => any;
    }
    export interface UpdateRuleGroupRequest {
            /**
                * <p>The <code>RuleGroupId</code> of the <a>RuleGroup</a> that you want to update. <code>RuleGroupId</code> is returned by <a>CreateRuleGroup</a> and by
                *          <a>ListRuleGroups</a>.</p>
                */
            RuleGroupId: string | undefined;
            /**
                * <p>An array of <code>RuleGroupUpdate</code> objects that you want to insert into or delete from a
                *          <a>RuleGroup</a>.</p>
                * 		       <p>You can only insert <code>REGULAR</code> rules into a rule group.</p>
                * 		       <p>
                *             <code>ActivatedRule|OverrideAction</code> applies only when updating or adding a <code>RuleGroup</code> to a <code>WebACL</code>. In this case you do not use <code>ActivatedRule|Action</code>.  For all other update requests, <code>ActivatedRule|Action</code> is used instead of <code>ActivatedRule|OverrideAction</code>.</p>
                */
            Updates: RuleGroupUpdate[] | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
    }
    export namespace UpdateRuleGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleGroupRequest) => any;
    }
    export interface UpdateRuleGroupResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateRuleGroup</code> request. You can also use this value
                *          to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateRuleGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleGroupResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the part of a web request that you want to inspect the size of and indicates whether you want to
        * 			add the specification to a <a>SizeConstraintSet</a> or delete it from a <code>SizeConstraintSet</code>.</p>
        */
    export interface SizeConstraintSetUpdate {
            /**
                * <p>Specify <code>INSERT</code> to add a <a>SizeConstraintSetUpdate</a> to a <a>SizeConstraintSet</a>.
                * 			Use <code>DELETE</code> to remove a <code>SizeConstraintSetUpdate</code> from a <code>SizeConstraintSet</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Specifies a constraint on the size of a part of the web request. AWS WAF uses the <code>Size</code>, <code>ComparisonOperator</code>, and <code>FieldToMatch</code> to build
                * 			an expression in the form of "<code>Size</code>
                *             <code>ComparisonOperator</code> size in bytes of <code>FieldToMatch</code>". If that expression is true, the
                * 			<code>SizeConstraint</code> is considered to match.</p>
                */
            SizeConstraint: SizeConstraint | undefined;
    }
    export namespace SizeConstraintSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SizeConstraintSetUpdate) => any;
    }
    export interface UpdateSizeConstraintSetRequest {
            /**
                * <p>The <code>SizeConstraintSetId</code> of the <a>SizeConstraintSet</a> that you want to update. <code>SizeConstraintSetId</code>
                * 			is returned by <a>CreateSizeConstraintSet</a> and by <a>ListSizeConstraintSets</a>.</p>
                */
            SizeConstraintSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>SizeConstraintSetUpdate</code> objects that you want to insert into or delete from a <a>SizeConstraintSet</a>.
                * 			For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>SizeConstraintSetUpdate</a>: Contains <code>Action</code> and <code>SizeConstraint</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>SizeConstraint</a>: Contains <code>FieldToMatch</code>, <code>TextTransformation</code>, <code>ComparisonOperator</code>,
                * 				and <code>Size</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates: SizeConstraintSetUpdate[] | undefined;
    }
    export namespace UpdateSizeConstraintSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSizeConstraintSetRequest) => any;
    }
    export interface UpdateSizeConstraintSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateSizeConstraintSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateSizeConstraintSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSizeConstraintSetResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the part of a web request that you want to inspect for snippets of malicious SQL code and indicates whether you want to
        * 			add the specification to a <a>SqlInjectionMatchSet</a> or delete it from a <code>SqlInjectionMatchSet</code>.</p>
        */
    export interface SqlInjectionMatchSetUpdate {
            /**
                * <p>Specify <code>INSERT</code> to add a <a>SqlInjectionMatchSetUpdate</a> to a <a>SqlInjectionMatchSet</a>.
                * 			Use <code>DELETE</code> to remove a <code>SqlInjectionMatchSetUpdate</code> from a <code>SqlInjectionMatchSet</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Specifies the part of a web request that you want AWS WAF to inspect for snippets of malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.</p>
                */
            SqlInjectionMatchTuple: SqlInjectionMatchTuple | undefined;
    }
    export namespace SqlInjectionMatchSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SqlInjectionMatchSetUpdate) => any;
    }
    /**
        * <p>A request to update a <a>SqlInjectionMatchSet</a>.</p>
        */
    export interface UpdateSqlInjectionMatchSetRequest {
            /**
                * <p>The <code>SqlInjectionMatchSetId</code> of the <code>SqlInjectionMatchSet</code> that you want to update.
                * 			<code>SqlInjectionMatchSetId</code> is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
                */
            SqlInjectionMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>SqlInjectionMatchSetUpdate</code> objects that you want to insert into or delete from a
                * 			<a>SqlInjectionMatchSet</a>. For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>SqlInjectionMatchSetUpdate</a>: Contains <code>Action</code> and <code>SqlInjectionMatchTuple</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>SqlInjectionMatchTuple</a>: Contains <code>FieldToMatch</code> and <code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates: SqlInjectionMatchSetUpdate[] | undefined;
    }
    export namespace UpdateSqlInjectionMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSqlInjectionMatchSetRequest) => any;
    }
    /**
        * <p>The response to an <a>UpdateSqlInjectionMatchSets</a> request.</p>
        */
    export interface UpdateSqlInjectionMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateSqlInjectionMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateSqlInjectionMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSqlInjectionMatchSetResponse) => any;
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies whether to insert a <code>Rule</code> into or delete a <code>Rule</code> from a <code>WebACL</code>.</p>
        */
    export interface WebACLUpdate {
            /**
                * <p>Specifies whether to insert a <code>Rule</code> into or delete a <code>Rule</code> from a <code>WebACL</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>The <code>ActivatedRule</code> object in an <a>UpdateWebACL</a> request specifies a <code>Rule</code> that you want to insert or delete,
                *          the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code>
                *          (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
                */
            ActivatedRule: ActivatedRule | undefined;
    }
    export namespace WebACLUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: WebACLUpdate) => any;
    }
    export interface UpdateWebACLRequest {
            /**
                * <p>The <code>WebACLId</code> of the <a>WebACL</a> that you want to update. <code>WebACLId</code> is returned by <a>CreateWebACL</a> and by
                * 			<a>ListWebACLs</a>.</p>
                */
            WebACLId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of updates to make to the <a>WebACL</a>.</p>
                * 		       <p>An array of <code>WebACLUpdate</code> objects that you want to insert into or delete from a
                * 			<a>WebACL</a>. For more information, see the applicable data types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>WebACLUpdate</a>: Contains <code>Action</code> and <code>ActivatedRule</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>ActivatedRule</a>: Contains <code>Action</code>,
                *                   <code>OverrideAction</code>, <code>Priority</code>, <code>RuleId</code>, and
                *                   <code>Type</code>. <code>ActivatedRule|OverrideAction</code> applies only when
                *                updating or adding a <code>RuleGroup</code> to a <code>WebACL</code>. In this
                *                case,
                *                you do not use <code>ActivatedRule|Action</code>. For all other update requests,
                *                   <code>ActivatedRule|Action</code> is used instead of
                *                   <code>ActivatedRule|OverrideAction</code>. </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>WafAction</a>: Contains <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates?: WebACLUpdate[];
            /**
                * <p>A default action for the web ACL, either ALLOW or BLOCK. AWS WAF performs the default
                *          action if a request doesn't match the criteria in any of the rules in a web ACL.</p>
                */
            DefaultAction?: WafAction;
    }
    export namespace UpdateWebACLRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateWebACLRequest) => any;
    }
    export interface UpdateWebACLResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateWebACL</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateWebACLResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateWebACLResponse) => any;
    }
    /**
        * <p>The specified subscription does not exist.</p>
        */
    export class WAFSubscriptionNotFoundException extends __BaseException {
            readonly name: "WAFSubscriptionNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<WAFSubscriptionNotFoundException, __BaseException>);
    }
    /**
        * <note>
        *             <p>This is <b>AWS WAF Classic</b> documentation. For
        *       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
        *       WAF Classic</a> in the developer guide.</p>
        *             <p>
        *                <b>For the latest version of AWS
        *       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
        *          </note>
        * 		       <p>Specifies the part of a web request that you want to inspect for cross-site scripting attacks and indicates whether you want to
        * 			add the specification to an <a>XssMatchSet</a> or delete it from an <code>XssMatchSet</code>.</p>
        */
    export interface XssMatchSetUpdate {
            /**
                * <p>Specify <code>INSERT</code> to add an
                *          <a>XssMatchSetUpdate</a> to an <a>XssMatchSet</a>. Use
                *             <code>DELETE</code> to remove an
                *          <code>XssMatchSetUpdate</code> from an <code>XssMatchSet</code>.</p>
                */
            Action: ChangeAction | string | undefined;
            /**
                * <p>Specifies the part of a web request that you want AWS WAF to inspect for cross-site scripting attacks and, if you want AWS WAF to inspect a header, the name of the header.</p>
                */
            XssMatchTuple: XssMatchTuple | undefined;
    }
    export namespace XssMatchSetUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: XssMatchSetUpdate) => any;
    }
    /**
        * <p>A request to update an <a>XssMatchSet</a>.</p>
        */
    export interface UpdateXssMatchSetRequest {
            /**
                * <p>The <code>XssMatchSetId</code> of the <code>XssMatchSet</code> that you want to update.
                * 			<code>XssMatchSetId</code> is returned by <a>CreateXssMatchSet</a> and by <a>ListXssMatchSets</a>.</p>
                */
            XssMatchSetId: string | undefined;
            /**
                * <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
                */
            ChangeToken: string | undefined;
            /**
                * <p>An array of <code>XssMatchSetUpdate</code> objects that you want to insert into or
                *          delete from an
                *          <a>XssMatchSet</a>. For more information, see the applicable data
                *          types:</p>
                * 		       <ul>
                *             <li>
                *                <p>
                *                   <a>XssMatchSetUpdate</a>: Contains <code>Action</code> and <code>XssMatchTuple</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>XssMatchTuple</a>: Contains <code>FieldToMatch</code> and <code>TextTransformation</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            Updates: XssMatchSetUpdate[] | undefined;
    }
    export namespace UpdateXssMatchSetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateXssMatchSetRequest) => any;
    }
    /**
        * <p>The response to an <a>UpdateXssMatchSets</a> request.</p>
        */
    export interface UpdateXssMatchSetResponse {
            /**
                * <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateXssMatchSet</code> request. You can also use this value
                * 			to query the status of the request. For more information, see <a>GetChangeTokenStatus</a>.</p>
                */
            ChangeToken?: string;
    }
    export namespace UpdateXssMatchSetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateXssMatchSetResponse) => any;
    }
}

declare module '@aws-sdk/client-waf/node_modules/@aws-sdk/client-waf/dist-types/models/WAFServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from WAF service.
        */
    export class WAFServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

