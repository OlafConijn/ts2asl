// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   @aws-sdk/smithy-client

declare module '@aws-sdk/client-chime' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { ChimeClient } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { AssociatePhoneNumbersWithVoiceConnectorCommandInput, AssociatePhoneNumbersWithVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorCommand";
    import { AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorGroupCommand";
    import { AssociatePhoneNumberWithUserCommandInput, AssociatePhoneNumberWithUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumberWithUserCommand";
    import { AssociateSigninDelegateGroupsWithAccountCommandInput, AssociateSigninDelegateGroupsWithAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociateSigninDelegateGroupsWithAccountCommand";
    import { BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateAttendeeCommand";
    import { BatchCreateChannelMembershipCommandInput, BatchCreateChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateChannelMembershipCommand";
    import { BatchCreateRoomMembershipCommandInput, BatchCreateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateRoomMembershipCommand";
    import { BatchDeletePhoneNumberCommandInput, BatchDeletePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchDeletePhoneNumberCommand";
    import { BatchSuspendUserCommandInput, BatchSuspendUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchSuspendUserCommand";
    import { BatchUnsuspendUserCommandInput, BatchUnsuspendUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUnsuspendUserCommand";
    import { BatchUpdatePhoneNumberCommandInput, BatchUpdatePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdatePhoneNumberCommand";
    import { BatchUpdateUserCommandInput, BatchUpdateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdateUserCommand";
    import { CreateAccountCommandInput, CreateAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAccountCommand";
    import { CreateAppInstanceAdminCommandInput, CreateAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceAdminCommand";
    import { CreateAppInstanceCommandInput, CreateAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceCommand";
    import { CreateAppInstanceUserCommandInput, CreateAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceUserCommand";
    import { CreateAttendeeCommandInput, CreateAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAttendeeCommand";
    import { CreateBotCommandInput, CreateBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateBotCommand";
    import { CreateChannelBanCommandInput, CreateChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelBanCommand";
    import { CreateChannelCommandInput, CreateChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelCommand";
    import { CreateChannelMembershipCommandInput, CreateChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelMembershipCommand";
    import { CreateChannelModeratorCommandInput, CreateChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelModeratorCommand";
    import { CreateMediaCapturePipelineCommandInput, CreateMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMediaCapturePipelineCommand";
    import { CreateMeetingCommandInput, CreateMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingCommand";
    import { CreateMeetingDialOutCommandInput, CreateMeetingDialOutCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingDialOutCommand";
    import { CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingWithAttendeesCommand";
    import { CreatePhoneNumberOrderCommandInput, CreatePhoneNumberOrderCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreatePhoneNumberOrderCommand";
    import { CreateProxySessionCommandInput, CreateProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateProxySessionCommand";
    import { CreateRoomCommandInput, CreateRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomCommand";
    import { CreateRoomMembershipCommandInput, CreateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomMembershipCommand";
    import { CreateSipMediaApplicationCallCommandInput, CreateSipMediaApplicationCallCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCallCommand";
    import { CreateSipMediaApplicationCommandInput, CreateSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCommand";
    import { CreateSipRuleCommandInput, CreateSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipRuleCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateUserCommand";
    import { CreateVoiceConnectorCommandInput, CreateVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorCommand";
    import { CreateVoiceConnectorGroupCommandInput, CreateVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorGroupCommand";
    import { DeleteAccountCommandInput, DeleteAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAccountCommand";
    import { DeleteAppInstanceAdminCommandInput, DeleteAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceAdminCommand";
    import { DeleteAppInstanceCommandInput, DeleteAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceCommand";
    import { DeleteAppInstanceStreamingConfigurationsCommandInput, DeleteAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceStreamingConfigurationsCommand";
    import { DeleteAppInstanceUserCommandInput, DeleteAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceUserCommand";
    import { DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAttendeeCommand";
    import { DeleteChannelBanCommandInput, DeleteChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelBanCommand";
    import { DeleteChannelCommandInput, DeleteChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelCommand";
    import { DeleteChannelMembershipCommandInput, DeleteChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMembershipCommand";
    import { DeleteChannelMessageCommandInput, DeleteChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMessageCommand";
    import { DeleteChannelModeratorCommandInput, DeleteChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelModeratorCommand";
    import { DeleteEventsConfigurationCommandInput, DeleteEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteEventsConfigurationCommand";
    import { DeleteMediaCapturePipelineCommandInput, DeleteMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMediaCapturePipelineCommand";
    import { DeleteMeetingCommandInput, DeleteMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMeetingCommand";
    import { DeletePhoneNumberCommandInput, DeletePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeletePhoneNumberCommand";
    import { DeleteProxySessionCommandInput, DeleteProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteProxySessionCommand";
    import { DeleteRoomCommandInput, DeleteRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomCommand";
    import { DeleteRoomMembershipCommandInput, DeleteRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomMembershipCommand";
    import { DeleteSipMediaApplicationCommandInput, DeleteSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipMediaApplicationCommand";
    import { DeleteSipRuleCommandInput, DeleteSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipRuleCommand";
    import { DeleteVoiceConnectorCommandInput, DeleteVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorCommand";
    import { DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorEmergencyCallingConfigurationCommand";
    import { DeleteVoiceConnectorGroupCommandInput, DeleteVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorGroupCommand";
    import { DeleteVoiceConnectorOriginationCommandInput, DeleteVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorOriginationCommand";
    import { DeleteVoiceConnectorProxyCommandInput, DeleteVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorProxyCommand";
    import { DeleteVoiceConnectorStreamingConfigurationCommandInput, DeleteVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorStreamingConfigurationCommand";
    import { DeleteVoiceConnectorTerminationCommandInput, DeleteVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCommand";
    import { DeleteVoiceConnectorTerminationCredentialsCommandInput, DeleteVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCredentialsCommand";
    import { DescribeAppInstanceAdminCommandInput, DescribeAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceAdminCommand";
    import { DescribeAppInstanceCommandInput, DescribeAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceCommand";
    import { DescribeAppInstanceUserCommandInput, DescribeAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceUserCommand";
    import { DescribeChannelBanCommandInput, DescribeChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelBanCommand";
    import { DescribeChannelCommandInput, DescribeChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelCommand";
    import { DescribeChannelMembershipCommandInput, DescribeChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipCommand";
    import { DescribeChannelMembershipForAppInstanceUserCommandInput, DescribeChannelMembershipForAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipForAppInstanceUserCommand";
    import { DescribeChannelModeratedByAppInstanceUserCommandInput, DescribeChannelModeratedByAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratedByAppInstanceUserCommand";
    import { DescribeChannelModeratorCommandInput, DescribeChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratorCommand";
    import { DisassociatePhoneNumberFromUserCommandInput, DisassociatePhoneNumberFromUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumberFromUserCommand";
    import { DisassociatePhoneNumbersFromVoiceConnectorCommandInput, DisassociatePhoneNumbersFromVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorCommand";
    import { DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorGroupCommand";
    import { DisassociateSigninDelegateGroupsFromAccountCommandInput, DisassociateSigninDelegateGroupsFromAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociateSigninDelegateGroupsFromAccountCommand";
    import { GetAccountCommandInput, GetAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountCommand";
    import { GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountSettingsCommand";
    import { GetAppInstanceRetentionSettingsCommandInput, GetAppInstanceRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceRetentionSettingsCommand";
    import { GetAppInstanceStreamingConfigurationsCommandInput, GetAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceStreamingConfigurationsCommand";
    import { GetAttendeeCommandInput, GetAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAttendeeCommand";
    import { GetBotCommandInput, GetBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetBotCommand";
    import { GetChannelMessageCommandInput, GetChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetChannelMessageCommand";
    import { GetEventsConfigurationCommandInput, GetEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetEventsConfigurationCommand";
    import { GetGlobalSettingsCommandInput, GetGlobalSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetGlobalSettingsCommand";
    import { GetMediaCapturePipelineCommandInput, GetMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMediaCapturePipelineCommand";
    import { GetMeetingCommandInput, GetMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMeetingCommand";
    import { GetMessagingSessionEndpointCommandInput, GetMessagingSessionEndpointCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMessagingSessionEndpointCommand";
    import { GetPhoneNumberCommandInput, GetPhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberCommand";
    import { GetPhoneNumberOrderCommandInput, GetPhoneNumberOrderCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberOrderCommand";
    import { GetPhoneNumberSettingsCommandInput, GetPhoneNumberSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberSettingsCommand";
    import { GetProxySessionCommandInput, GetProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetProxySessionCommand";
    import { GetRetentionSettingsCommandInput, GetRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRetentionSettingsCommand";
    import { GetRoomCommandInput, GetRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRoomCommand";
    import { GetSipMediaApplicationCommandInput, GetSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationCommand";
    import { GetSipMediaApplicationLoggingConfigurationCommandInput, GetSipMediaApplicationLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationLoggingConfigurationCommand";
    import { GetSipRuleCommandInput, GetSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipRuleCommand";
    import { GetUserCommandInput, GetUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserCommand";
    import { GetUserSettingsCommandInput, GetUserSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserSettingsCommand";
    import { GetVoiceConnectorCommandInput, GetVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorCommand";
    import { GetVoiceConnectorEmergencyCallingConfigurationCommandInput, GetVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorEmergencyCallingConfigurationCommand";
    import { GetVoiceConnectorGroupCommandInput, GetVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorGroupCommand";
    import { GetVoiceConnectorLoggingConfigurationCommandInput, GetVoiceConnectorLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorLoggingConfigurationCommand";
    import { GetVoiceConnectorOriginationCommandInput, GetVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorOriginationCommand";
    import { GetVoiceConnectorProxyCommandInput, GetVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorProxyCommand";
    import { GetVoiceConnectorStreamingConfigurationCommandInput, GetVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorStreamingConfigurationCommand";
    import { GetVoiceConnectorTerminationCommandInput, GetVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationCommand";
    import { GetVoiceConnectorTerminationHealthCommandInput, GetVoiceConnectorTerminationHealthCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationHealthCommand";
    import { InviteUsersCommandInput, InviteUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/InviteUsersCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAccountsCommand";
    import { ListAppInstanceAdminsCommandInput, ListAppInstanceAdminsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceAdminsCommand";
    import { ListAppInstancesCommandInput, ListAppInstancesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstancesCommand";
    import { ListAppInstanceUsersCommandInput, ListAppInstanceUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceUsersCommand";
    import { ListAttendeesCommandInput, ListAttendeesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeesCommand";
    import { ListAttendeeTagsCommandInput, ListAttendeeTagsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeeTagsCommand";
    import { ListBotsCommandInput, ListBotsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListBotsCommand";
    import { ListChannelBansCommandInput, ListChannelBansCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelBansCommand";
    import { ListChannelMembershipsCommandInput, ListChannelMembershipsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsCommand";
    import { ListChannelMembershipsForAppInstanceUserCommandInput, ListChannelMembershipsForAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsForAppInstanceUserCommand";
    import { ListChannelMessagesCommandInput, ListChannelMessagesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMessagesCommand";
    import { ListChannelModeratorsCommandInput, ListChannelModeratorsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelModeratorsCommand";
    import { ListChannelsCommandInput, ListChannelsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsCommand";
    import { ListChannelsModeratedByAppInstanceUserCommandInput, ListChannelsModeratedByAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsModeratedByAppInstanceUserCommand";
    import { ListMediaCapturePipelinesCommandInput, ListMediaCapturePipelinesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMediaCapturePipelinesCommand";
    import { ListMeetingsCommandInput, ListMeetingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingsCommand";
    import { ListMeetingTagsCommandInput, ListMeetingTagsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingTagsCommand";
    import { ListPhoneNumberOrdersCommandInput, ListPhoneNumberOrdersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumberOrdersCommand";
    import { ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumbersCommand";
    import { ListProxySessionsCommandInput, ListProxySessionsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListProxySessionsCommand";
    import { ListRoomMembershipsCommandInput, ListRoomMembershipsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomMembershipsCommand";
    import { ListRoomsCommandInput, ListRoomsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomsCommand";
    import { ListSipMediaApplicationsCommandInput, ListSipMediaApplicationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipMediaApplicationsCommand";
    import { ListSipRulesCommandInput, ListSipRulesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipRulesCommand";
    import { ListSupportedPhoneNumberCountriesCommandInput, ListSupportedPhoneNumberCountriesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSupportedPhoneNumberCountriesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListTagsForResourceCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListUsersCommand";
    import { ListVoiceConnectorGroupsCommandInput, ListVoiceConnectorGroupsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorGroupsCommand";
    import { ListVoiceConnectorsCommandInput, ListVoiceConnectorsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorsCommand";
    import { ListVoiceConnectorTerminationCredentialsCommandInput, ListVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorTerminationCredentialsCommand";
    import { LogoutUserCommandInput, LogoutUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/LogoutUserCommand";
    import { PutAppInstanceRetentionSettingsCommandInput, PutAppInstanceRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceRetentionSettingsCommand";
    import { PutAppInstanceStreamingConfigurationsCommandInput, PutAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceStreamingConfigurationsCommand";
    import { PutEventsConfigurationCommandInput, PutEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutEventsConfigurationCommand";
    import { PutRetentionSettingsCommandInput, PutRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutRetentionSettingsCommand";
    import { PutSipMediaApplicationLoggingConfigurationCommandInput, PutSipMediaApplicationLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutSipMediaApplicationLoggingConfigurationCommand";
    import { PutVoiceConnectorEmergencyCallingConfigurationCommandInput, PutVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorEmergencyCallingConfigurationCommand";
    import { PutVoiceConnectorLoggingConfigurationCommandInput, PutVoiceConnectorLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorLoggingConfigurationCommand";
    import { PutVoiceConnectorOriginationCommandInput, PutVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorOriginationCommand";
    import { PutVoiceConnectorProxyCommandInput, PutVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorProxyCommand";
    import { PutVoiceConnectorStreamingConfigurationCommandInput, PutVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorStreamingConfigurationCommand";
    import { PutVoiceConnectorTerminationCommandInput, PutVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCommand";
    import { PutVoiceConnectorTerminationCredentialsCommandInput, PutVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCredentialsCommand";
    import { RedactChannelMessageCommandInput, RedactChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactChannelMessageCommand";
    import { RedactConversationMessageCommandInput, RedactConversationMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactConversationMessageCommand";
    import { RedactRoomMessageCommandInput, RedactRoomMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactRoomMessageCommand";
    import { RegenerateSecurityTokenCommandInput, RegenerateSecurityTokenCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RegenerateSecurityTokenCommand";
    import { ResetPersonalPINCommandInput, ResetPersonalPINCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ResetPersonalPINCommand";
    import { RestorePhoneNumberCommandInput, RestorePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RestorePhoneNumberCommand";
    import { SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SearchAvailablePhoneNumbersCommand";
    import { SendChannelMessageCommandInput, SendChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SendChannelMessageCommand";
    import { StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StartMeetingTranscriptionCommand";
    import { StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StopMeetingTranscriptionCommand";
    import { TagAttendeeCommandInput, TagAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagAttendeeCommand";
    import { TagMeetingCommandInput, TagMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagMeetingCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagResourceCommand";
    import { UntagAttendeeCommandInput, UntagAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagAttendeeCommand";
    import { UntagMeetingCommandInput, UntagMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagMeetingCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountCommandInput, UpdateAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountCommand";
    import { UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountSettingsCommand";
    import { UpdateAppInstanceCommandInput, UpdateAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceCommand";
    import { UpdateAppInstanceUserCommandInput, UpdateAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceUserCommand";
    import { UpdateBotCommandInput, UpdateBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateBotCommand";
    import { UpdateChannelCommandInput, UpdateChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelCommand";
    import { UpdateChannelMessageCommandInput, UpdateChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelMessageCommand";
    import { UpdateChannelReadMarkerCommandInput, UpdateChannelReadMarkerCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelReadMarkerCommand";
    import { UpdateGlobalSettingsCommandInput, UpdateGlobalSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateGlobalSettingsCommand";
    import { UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberCommand";
    import { UpdatePhoneNumberSettingsCommandInput, UpdatePhoneNumberSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberSettingsCommand";
    import { UpdateProxySessionCommandInput, UpdateProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateProxySessionCommand";
    import { UpdateRoomCommandInput, UpdateRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomCommand";
    import { UpdateRoomMembershipCommandInput, UpdateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomMembershipCommand";
    import { UpdateSipMediaApplicationCallCommandInput, UpdateSipMediaApplicationCallCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCallCommand";
    import { UpdateSipMediaApplicationCommandInput, UpdateSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCommand";
    import { UpdateSipRuleCommandInput, UpdateSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipRuleCommand";
    import { UpdateUserCommandInput, UpdateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserCommand";
    import { UpdateUserSettingsCommandInput, UpdateUserSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserSettingsCommand";
    import { UpdateVoiceConnectorCommandInput, UpdateVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorCommand";
    import { UpdateVoiceConnectorGroupCommandInput, UpdateVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorGroupCommand";
    /**
        * <p>The Amazon Chime API (application programming interface) is designed for developers to
        *             perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice
        *             Connectors. This guide provides detailed information about the Amazon Chime API,
        *             including operations, types, inputs and outputs, and error codes. It also includes API actions for use with the Amazon Chime SDK, which developers use to build their own communication applications. For more information about the
        *             Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">
        *                 Using the Amazon Chime SDK
        *             </a> in the <i>Amazon Chime Developer Guide</i>.</p>
        *          <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the
        *     AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p>
        *          <dl>
        *             <dt>Using an AWS SDK</dt>
        *             <dd>
        *                <p>
        * You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the
        * <a href="http://aws.amazon.com/developer/">AWS Developer Center</a>.
        * </p>
        *             </dd>
        *             <dt>Using the AWS CLI</dt>
        *             <dd>
        *                <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see
        * <a href="https://docs.aws.amazon.com/cli/latest/userguide/installing.html">Installing the AWS Command Line Interface</a>
        * in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the
        * <a href="https://docs.aws.amazon.com/cli/latest/reference/chime/index.html">Amazon Chime commands</a> in the
        *     <i>AWS CLI Command Reference</i>.
        * </p>
        *             </dd>
        *             <dt>Using REST APIs</dt>
        *             <dd>
        *                <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see
        * <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>
        * in the <i>Amazon Web Services General Reference</i>.</p>
        *
        *                <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p>
        *             </dd>
        *          </dl>
        *
        *          <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see
        * <a href="https://docs.aws.amazon.com/chime/latest/ag/security-iam.html">Identity and Access Management for Amazon Chime</a>
        * in the <i>Amazon Chime Administration Guide</i>.</p>
        */
    export class Chime extends ChimeClient {
            /**
                * <p>Associates phone numbers with the specified Amazon Chime Voice Connector.</p>
                */
            associatePhoneNumbersWithVoiceConnector(args: AssociatePhoneNumbersWithVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePhoneNumbersWithVoiceConnectorCommandOutput>;
            associatePhoneNumbersWithVoiceConnector(args: AssociatePhoneNumbersWithVoiceConnectorCommandInput, cb: (err: any, data?: AssociatePhoneNumbersWithVoiceConnectorCommandOutput) => void): void;
            associatePhoneNumbersWithVoiceConnector(args: AssociatePhoneNumbersWithVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePhoneNumbersWithVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Associates phone numbers with the specified Amazon Chime Voice Connector group.</p>
                */
            associatePhoneNumbersWithVoiceConnectorGroup(args: AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput>;
            associatePhoneNumbersWithVoiceConnectorGroup(args: AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, cb: (err: any, data?: AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput) => void): void;
            associatePhoneNumbersWithVoiceConnectorGroup(args: AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput) => void): void;
            /**
                * <p>Associates a phone number with the specified Amazon Chime user.</p>
                */
            associatePhoneNumberWithUser(args: AssociatePhoneNumberWithUserCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePhoneNumberWithUserCommandOutput>;
            associatePhoneNumberWithUser(args: AssociatePhoneNumberWithUserCommandInput, cb: (err: any, data?: AssociatePhoneNumberWithUserCommandOutput) => void): void;
            associatePhoneNumberWithUser(args: AssociatePhoneNumberWithUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePhoneNumberWithUserCommandOutput) => void): void;
            /**
                * <p>Associates the specified sign-in delegate groups with the specified Amazon Chime account.</p>
                */
            associateSigninDelegateGroupsWithAccount(args: AssociateSigninDelegateGroupsWithAccountCommandInput, options?: __HttpHandlerOptions): Promise<AssociateSigninDelegateGroupsWithAccountCommandOutput>;
            associateSigninDelegateGroupsWithAccount(args: AssociateSigninDelegateGroupsWithAccountCommandInput, cb: (err: any, data?: AssociateSigninDelegateGroupsWithAccountCommandOutput) => void): void;
            associateSigninDelegateGroupsWithAccount(args: AssociateSigninDelegateGroupsWithAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateSigninDelegateGroupsWithAccountCommandOutput) => void): void;
            /**
                * <p>
                * Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>.
                * </p>
                */
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<BatchCreateAttendeeCommandOutput>;
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, cb: (err: any, data?: BatchCreateAttendeeCommandOutput) => void): void;
            batchCreateAttendee(args: BatchCreateAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchCreateAttendeeCommandOutput) => void): void;
            /**
                * <p>Adds a specified number of users to a channel.</p>
                */
            batchCreateChannelMembership(args: BatchCreateChannelMembershipCommandInput, options?: __HttpHandlerOptions): Promise<BatchCreateChannelMembershipCommandOutput>;
            batchCreateChannelMembership(args: BatchCreateChannelMembershipCommandInput, cb: (err: any, data?: BatchCreateChannelMembershipCommandOutput) => void): void;
            batchCreateChannelMembership(args: BatchCreateChannelMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchCreateChannelMembershipCommandOutput) => void): void;
            /**
                * <p>Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.</p>
                */
            batchCreateRoomMembership(args: BatchCreateRoomMembershipCommandInput, options?: __HttpHandlerOptions): Promise<BatchCreateRoomMembershipCommandOutput>;
            batchCreateRoomMembership(args: BatchCreateRoomMembershipCommandInput, cb: (err: any, data?: BatchCreateRoomMembershipCommandOutput) => void): void;
            batchCreateRoomMembership(args: BatchCreateRoomMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchCreateRoomMembershipCommandOutput) => void): void;
            /**
                * <p>
                * Moves phone numbers into the
                * <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted.
                * </p>
                *
                *          <p>
                * Phone numbers remain in the
                * <b>Deletion queue</b> for 7 days before they are deleted permanently.
                * </p>
                */
            batchDeletePhoneNumber(args: BatchDeletePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<BatchDeletePhoneNumberCommandOutput>;
            batchDeletePhoneNumber(args: BatchDeletePhoneNumberCommandInput, cb: (err: any, data?: BatchDeletePhoneNumberCommandOutput) => void): void;
            batchDeletePhoneNumber(args: BatchDeletePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDeletePhoneNumberCommandOutput) => void): void;
            /**
                * <p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime
                *             account. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration
                *                 Guide</i>.</p>
                *
                *          <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they
                *             can continue to use Amazon Chime as free users. To remove the suspension from suspended
                *                 <code>Team</code> account users, invite them to the <code>Team</code> account again.
                *             You can use the <a>InviteUsers</a> action to do so.</p>
                *
                *          <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of
                *             Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action.</p>
                *
                *          <p>
                * To sign out users without suspending them, use the
                * <a>LogoutUser</a>
                * action.
                * </p>
                */
            batchSuspendUser(args: BatchSuspendUserCommandInput, options?: __HttpHandlerOptions): Promise<BatchSuspendUserCommandOutput>;
            batchSuspendUser(args: BatchSuspendUserCommandInput, cb: (err: any, data?: BatchSuspendUserCommandOutput) => void): void;
            batchSuspendUser(args: BatchSuspendUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchSuspendUserCommandOutput) => void): void;
            /**
                * <p>Removes the suspension from up to 50 previously suspended users for the specified Amazon
                *             Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code>
                *             accounts can be unsuspended using this action. For more information about different account types, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">
                *         Managing Your Amazon Chime Accounts
                *     </a> in the account types, in the <i>Amazon Chime Administration Guide</i>.
                * </p>
                *
                *          <p>
                * Previously suspended users who are unsuspended using this action are returned to
                * <code>Registered</code>
                * status. Users who are not previously suspended are ignored.
                * </p>
                */
            batchUnsuspendUser(args: BatchUnsuspendUserCommandInput, options?: __HttpHandlerOptions): Promise<BatchUnsuspendUserCommandOutput>;
            batchUnsuspendUser(args: BatchUnsuspendUserCommandInput, cb: (err: any, data?: BatchUnsuspendUserCommandOutput) => void): void;
            batchUnsuspendUser(args: BatchUnsuspendUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchUnsuspendUserCommandOutput) => void): void;
            /**
                * <p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update the product type or the calling name.</p>
                *          <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
                *          <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
                */
            batchUpdatePhoneNumber(args: BatchUpdatePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<BatchUpdatePhoneNumberCommandOutput>;
            batchUpdatePhoneNumber(args: BatchUpdatePhoneNumberCommandInput, cb: (err: any, data?: BatchUpdatePhoneNumberCommandOutput) => void): void;
            batchUpdatePhoneNumber(args: BatchUpdatePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchUpdatePhoneNumberCommandOutput) => void): void;
            /**
                * <p>Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.</p>
                */
            batchUpdateUser(args: BatchUpdateUserCommandInput, options?: __HttpHandlerOptions): Promise<BatchUpdateUserCommandOutput>;
            batchUpdateUser(args: BatchUpdateUserCommandInput, cb: (err: any, data?: BatchUpdateUserCommandOutput) => void): void;
            batchUpdateUser(args: BatchUpdateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchUpdateUserCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code>
                *             account types are currently supported for this action. For more information about different account types, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p>
                */
            createAccount(args: CreateAccountCommandInput, options?: __HttpHandlerOptions): Promise<CreateAccountCommandOutput>;
            createAccount(args: CreateAccountCommandInput, cb: (err: any, data?: CreateAccountCommandOutput) => void): void;
            createAccount(args: CreateAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAccountCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account. Only SDK messaging customers use this API.
                * <code>CreateAppInstance</code> supports idempotency behavior as described in the AWS API Standard.</p>
                */
            createAppInstance(args: CreateAppInstanceCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppInstanceCommandOutput>;
            createAppInstance(args: CreateAppInstanceCommandInput, cb: (err: any, data?: CreateAppInstanceCommandOutput) => void): void;
            createAppInstance(args: CreateAppInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppInstanceCommandOutput) => void): void;
            /**
                * <p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions.
                * </p>
                *
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ChannelModerator</code> actions across all channels in the <code>AppInstance</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DeleteChannelMessage</code> actions.</p>
                *             </li>
                *          </ul>
                *
                *          <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>
                */
            createAppInstanceAdmin(args: CreateAppInstanceAdminCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppInstanceAdminCommandOutput>;
            createAppInstanceAdmin(args: CreateAppInstanceAdminCommandInput, cb: (err: any, data?: CreateAppInstanceAdminCommandOutput) => void): void;
            createAppInstanceAdmin(args: CreateAppInstanceAdminCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppInstanceAdminCommandOutput) => void): void;
            /**
                * <p>Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and
                * <code>Name</code> for that user.</p>
                */
            createAppInstanceUser(args: CreateAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppInstanceUserCommandOutput>;
            createAppInstanceUser(args: CreateAppInstanceUserCommandInput, cb: (err: any, data?: CreateAppInstanceUserCommandOutput) => void): void;
            createAppInstanceUser(args: CreateAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>
                * Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>.
                * </p>
                */
            createAttendee(args: CreateAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<CreateAttendeeCommandOutput>;
            createAttendee(args: CreateAttendeeCommandInput, cb: (err: any, data?: CreateAttendeeCommandOutput) => void): void;
            createAttendee(args: CreateAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAttendeeCommandOutput) => void): void;
            /**
                * <p>Creates a bot for an Amazon Chime Enterprise account.</p>
                */
            createBot(args: CreateBotCommandInput, options?: __HttpHandlerOptions): Promise<CreateBotCommandOutput>;
            createBot(args: CreateBotCommandInput, cb: (err: any, data?: CreateBotCommandOutput) => void): void;
            createBot(args: CreateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBotCommandOutput) => void): void;
            /**
                * <p>Creates a channel to which you can add users and send messages.</p>
                *
                *          <p>
                *             <b>Restriction</b>: You can't change a channel's
                *          privacy.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            createChannel(args: CreateChannelCommandInput, options?: __HttpHandlerOptions): Promise<CreateChannelCommandOutput>;
            createChannel(args: CreateChannelCommandInput, cb: (err: any, data?: CreateChannelCommandOutput) => void): void;
            createChannel(args: CreateChannelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateChannelCommandOutput) => void): void;
            /**
                * <p>Permanently bans a member from a channel. Moderators can't add banned members to a
                *          channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then
                *             <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or
                *          channels.</p>
                *          <p>If you ban a user who is already part of a channel, that user is automatically kicked
                *          from the channel.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            createChannelBan(args: CreateChannelBanCommandInput, options?: __HttpHandlerOptions): Promise<CreateChannelBanCommandOutput>;
            createChannelBan(args: CreateChannelBanCommandInput, cb: (err: any, data?: CreateChannelBanCommandOutput) => void): void;
            createChannelBan(args: CreateChannelBanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateChannelBanCommandOutput) => void): void;
            /**
                * <p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the
                *          request header. A channel member can:</p>
                *
                *          <ul>
                *             <li>
                *                <p>List messages</p>
                *             </li>
                *             <li>
                *                <p>Send messages</p>
                *             </li>
                *             <li>
                *                <p>Receive messages</p>
                *             </li>
                *             <li>
                *                <p>Edit their own messages</p>
                *             </li>
                *             <li>
                *                <p>Leave the channel</p>
                *             </li>
                *          </ul>
                *
                *          <p>Privacy settings impact this action as follows:</p>
                *
                *          <ul>
                *             <li>
                *                <p>Public Channels: You do not need to be a member to list messages, but you must be
                *                a member to send messages.</p>
                *             </li>
                *             <li>
                *                <p>Private Channels: You must be a member to list or send messages.</p>
                *             </li>
                *          </ul>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            createChannelMembership(args: CreateChannelMembershipCommandInput, options?: __HttpHandlerOptions): Promise<CreateChannelMembershipCommandOutput>;
            createChannelMembership(args: CreateChannelMembershipCommandInput, cb: (err: any, data?: CreateChannelMembershipCommandOutput) => void): void;
            createChannelMembership(args: CreateChannelMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateChannelMembershipCommandOutput) => void): void;
            /**
                * <p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p>
                *
                *          <ul>
                *             <li>
                *                <p>Add and remove other members of the channel.</p>
                *             </li>
                *             <li>
                *                <p>Add and remove other moderators of the channel.</p>
                *             </li>
                *             <li>
                *                <p>Add and remove user bans for the channel.</p>
                *             </li>
                *             <li>
                *                <p>Redact messages in the channel.</p>
                *             </li>
                *             <li>
                *                <p>List messages in the channel.</p>
                *             </li>
                *          </ul>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            createChannelModerator(args: CreateChannelModeratorCommandInput, options?: __HttpHandlerOptions): Promise<CreateChannelModeratorCommandOutput>;
            createChannelModerator(args: CreateChannelModeratorCommandInput, cb: (err: any, data?: CreateChannelModeratorCommandOutput) => void): void;
            createChannelModerator(args: CreateChannelModeratorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateChannelModeratorCommandOutput) => void): void;
            /**
                * <p>Creates a media capture pipeline.</p>
                */
            createMediaCapturePipeline(args: CreateMediaCapturePipelineCommandInput, options?: __HttpHandlerOptions): Promise<CreateMediaCapturePipelineCommandOutput>;
            createMediaCapturePipeline(args: CreateMediaCapturePipelineCommandInput, cb: (err: any, data?: CreateMediaCapturePipelineCommandOutput) => void): void;
            createMediaCapturePipeline(args: CreateMediaCapturePipelineCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMediaCapturePipelineCommandOutput) => void): void;
            /**
                * <p>
                * Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * . For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * .
                * </p>
                */
            createMeeting(args: CreateMeetingCommandInput, options?: __HttpHandlerOptions): Promise<CreateMeetingCommandOutput>;
            createMeeting(args: CreateMeetingCommandInput, cb: (err: any, data?: CreateMeetingCommandOutput) => void): void;
            createMeeting(args: CreateMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMeetingCommandOutput) => void): void;
            /**
                * <p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public
                *     switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.</p>
                *
                *          <p>To play welcome audio or implement an interactive voice response (IVR), use the
                * <code>CreateSipMediaApplicationCall</code> action with the corresponding SIP media application ID.</p>
                */
            createMeetingDialOut(args: CreateMeetingDialOutCommandInput, options?: __HttpHandlerOptions): Promise<CreateMeetingDialOutCommandOutput>;
            createMeetingDialOut(args: CreateMeetingDialOutCommandInput, cb: (err: any, data?: CreateMeetingDialOutCommandOutput) => void): void;
            createMeetingDialOut(args: CreateMeetingDialOutCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMeetingDialOutCommandOutput) => void): void;
            /**
                * <p>
                * Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * . For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * .
                * </p>
                */
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, options?: __HttpHandlerOptions): Promise<CreateMeetingWithAttendeesCommandOutput>;
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, cb: (err: any, data?: CreateMeetingWithAttendeesCommandOutput) => void): void;
            createMeetingWithAttendees(args: CreateMeetingWithAttendeesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMeetingWithAttendeesCommandOutput) => void): void;
            /**
                * <p>Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type.
                *         For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
                */
            createPhoneNumberOrder(args: CreatePhoneNumberOrderCommandInput, options?: __HttpHandlerOptions): Promise<CreatePhoneNumberOrderCommandOutput>;
            createPhoneNumberOrder(args: CreatePhoneNumberOrderCommandInput, cb: (err: any, data?: CreatePhoneNumberOrderCommandOutput) => void): void;
            createPhoneNumberOrder(args: CreatePhoneNumberOrderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePhoneNumberOrderCommandOutput) => void): void;
            /**
                * <p>Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.</p>
                */
            createProxySession(args: CreateProxySessionCommandInput, options?: __HttpHandlerOptions): Promise<CreateProxySessionCommandOutput>;
            createProxySession(args: CreateProxySessionCommandInput, cb: (err: any, data?: CreateProxySessionCommandOutput) => void): void;
            createProxySession(args: CreateProxySessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProxySessionCommandOutput) => void): void;
            /**
                * <p>Creates a chat room for the specified Amazon Chime Enterprise account.</p>
                */
            createRoom(args: CreateRoomCommandInput, options?: __HttpHandlerOptions): Promise<CreateRoomCommandOutput>;
            createRoom(args: CreateRoomCommandInput, cb: (err: any, data?: CreateRoomCommandOutput) => void): void;
            createRoom(args: CreateRoomCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRoomCommandOutput) => void): void;
            /**
                * <p>Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.</p>
                */
            createRoomMembership(args: CreateRoomMembershipCommandInput, options?: __HttpHandlerOptions): Promise<CreateRoomMembershipCommandOutput>;
            createRoomMembership(args: CreateRoomMembershipCommandInput, cb: (err: any, data?: CreateRoomMembershipCommandOutput) => void): void;
            createRoomMembership(args: CreateRoomMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRoomMembershipCommandOutput) => void): void;
            /**
                * <p>Creates a SIP media application.</p>
                */
            createSipMediaApplication(args: CreateSipMediaApplicationCommandInput, options?: __HttpHandlerOptions): Promise<CreateSipMediaApplicationCommandOutput>;
            createSipMediaApplication(args: CreateSipMediaApplicationCommandInput, cb: (err: any, data?: CreateSipMediaApplicationCommandOutput) => void): void;
            createSipMediaApplication(args: CreateSipMediaApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSipMediaApplicationCommandOutput) => void): void;
            /**
                * <p>Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified
                * <code>sipMediaApplicationId</code>.</p>
                */
            createSipMediaApplicationCall(args: CreateSipMediaApplicationCallCommandInput, options?: __HttpHandlerOptions): Promise<CreateSipMediaApplicationCallCommandOutput>;
            createSipMediaApplicationCall(args: CreateSipMediaApplicationCallCommandInput, cb: (err: any, data?: CreateSipMediaApplicationCallCommandOutput) => void): void;
            createSipMediaApplicationCall(args: CreateSipMediaApplicationCallCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSipMediaApplicationCallCommandOutput) => void): void;
            /**
                * <p>Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.</p>
                */
            createSipRule(args: CreateSipRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateSipRuleCommandOutput>;
            createSipRule(args: CreateSipRuleCommandInput, cb: (err: any, data?: CreateSipRuleCommandOutput) => void): void;
            createSipRule(args: CreateSipRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSipRuleCommandOutput) => void): void;
            /**
                * <p>Creates a user under the specified Amazon Chime account.</p>
                */
            createUser(args: CreateUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserCommandOutput>;
            createUser(args: CreateUserCommandInput, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            createUser(args: CreateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p>
                *
                *          <p>
                * Enabling
                * <a>CreateVoiceConnectorRequest$RequireEncryption</a>
                * configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked.
                * </p>
                */
            createVoiceConnector(args: CreateVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<CreateVoiceConnectorCommandOutput>;
            createVoiceConnector(args: CreateVoiceConnectorCommandInput, cb: (err: any, data?: CreateVoiceConnectorCommandOutput) => void): void;
            createVoiceConnector(args: CreateVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can
                *             associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by
                *             including <code>VoiceConnectorItems</code> in the request.</p>
                *          <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This
                *             creates a fault tolerant mechanism for fallback in case of availability events.</p>
                */
            createVoiceConnectorGroup(args: CreateVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateVoiceConnectorGroupCommandOutput>;
            createVoiceConnectorGroup(args: CreateVoiceConnectorGroupCommandInput, cb: (err: any, data?: CreateVoiceConnectorGroupCommandOutput) => void): void;
            createVoiceConnectorGroup(args: CreateVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateVoiceConnectorGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Amazon Chime account. You must suspend all users before deleting
                *                 <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action
                *             to dodo.</p>
                *
                *          <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the
                *             claimed domains for your Amazon Chime account before deletion. As soon as you release
                *             the domain, all users under that account are suspended.</p>
                *
                *          <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore
                *             deleted account from your <code>Disabled</code> accounts list, you must contact AWS
                *             Support.</p>
                *
                *          <p>After 90 days, deleted accounts are permanently removed from your
                * <code>Disabled</code> accounts list.</p>
                */
            deleteAccount(args: DeleteAccountCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccountCommandOutput>;
            deleteAccount(args: DeleteAccountCommandInput, cb: (err: any, data?: DeleteAccountCommandOutput) => void): void;
            deleteAccount(args: DeleteAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccountCommandOutput) => void): void;
            /**
                * <p>Deletes an <code>AppInstance</code> and all associated data asynchronously.</p>
                */
            deleteAppInstance(args: DeleteAppInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppInstanceCommandOutput>;
            deleteAppInstance(args: DeleteAppInstanceCommandInput, cb: (err: any, data?: DeleteAppInstanceCommandOutput) => void): void;
            deleteAppInstance(args: DeleteAppInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppInstanceCommandOutput) => void): void;
            /**
                * <p>Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.</p>
                */
            deleteAppInstanceAdmin(args: DeleteAppInstanceAdminCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppInstanceAdminCommandOutput>;
            deleteAppInstanceAdmin(args: DeleteAppInstanceAdminCommandInput, cb: (err: any, data?: DeleteAppInstanceAdminCommandOutput) => void): void;
            deleteAppInstanceAdmin(args: DeleteAppInstanceAdminCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppInstanceAdminCommandOutput) => void): void;
            /**
                * <p>Deletes the streaming configurations of an <code>AppInstance</code>.</p>
                */
            deleteAppInstanceStreamingConfigurations(args: DeleteAppInstanceStreamingConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppInstanceStreamingConfigurationsCommandOutput>;
            deleteAppInstanceStreamingConfigurations(args: DeleteAppInstanceStreamingConfigurationsCommandInput, cb: (err: any, data?: DeleteAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            deleteAppInstanceStreamingConfigurations(args: DeleteAppInstanceStreamingConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            /**
                * <p>Deletes an <code>AppInstanceUser</code>.</p>
                */
            deleteAppInstanceUser(args: DeleteAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppInstanceUserCommandOutput>;
            deleteAppInstanceUser(args: DeleteAppInstanceUserCommandInput, cb: (err: any, data?: DeleteAppInstanceUserCommandOutput) => void): void;
            deleteAppInstanceUser(args: DeleteAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their
                * <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the <i>Amazon Chime Developer Guide</i>.</p>
                */
            deleteAttendee(args: DeleteAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAttendeeCommandOutput>;
            deleteAttendee(args: DeleteAttendeeCommandInput, cb: (err: any, data?: DeleteAttendeeCommandOutput) => void): void;
            deleteAttendee(args: DeleteAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAttendeeCommandOutput) => void): void;
            /**
                * <p>Immediately makes a channel and its memberships inaccessible and marks them for
                *          deletion. This is an irreversible process.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            deleteChannel(args: DeleteChannelCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChannelCommandOutput>;
            deleteChannel(args: DeleteChannelCommandInput, cb: (err: any, data?: DeleteChannelCommandOutput) => void): void;
            deleteChannel(args: DeleteChannelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChannelCommandOutput) => void): void;
            /**
                * <p>Removes a user from a channel's ban list.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            deleteChannelBan(args: DeleteChannelBanCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChannelBanCommandOutput>;
            deleteChannelBan(args: DeleteChannelBanCommandInput, cb: (err: any, data?: DeleteChannelBanCommandOutput) => void): void;
            deleteChannelBan(args: DeleteChannelBanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChannelBanCommandOutput) => void): void;
            /**
                * <p>Removes a member from a channel.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            deleteChannelMembership(args: DeleteChannelMembershipCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChannelMembershipCommandOutput>;
            deleteChannelMembership(args: DeleteChannelMembershipCommandInput, cb: (err: any, data?: DeleteChannelMembershipCommandOutput) => void): void;
            deleteChannelMembership(args: DeleteChannelMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChannelMembershipCommandOutput) => void): void;
            /**
                * <p>Deletes a channel message. Only admins can perform this action. Deletion makes messages
                *          inaccessible immediately. A background process deletes any revisions created by
                *             <code>UpdateChannelMessage</code>.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            deleteChannelMessage(args: DeleteChannelMessageCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChannelMessageCommandOutput>;
            deleteChannelMessage(args: DeleteChannelMessageCommandInput, cb: (err: any, data?: DeleteChannelMessageCommandOutput) => void): void;
            deleteChannelMessage(args: DeleteChannelMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChannelMessageCommandOutput) => void): void;
            /**
                * <p>Deletes a channel moderator.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            deleteChannelModerator(args: DeleteChannelModeratorCommandInput, options?: __HttpHandlerOptions): Promise<DeleteChannelModeratorCommandOutput>;
            deleteChannelModerator(args: DeleteChannelModeratorCommandInput, cb: (err: any, data?: DeleteChannelModeratorCommandOutput) => void): void;
            deleteChannelModerator(args: DeleteChannelModeratorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteChannelModeratorCommandOutput) => void): void;
            /**
                * <p>Deletes the events configuration that allows a bot to receive outgoing events.</p>
                */
            deleteEventsConfiguration(args: DeleteEventsConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEventsConfigurationCommandOutput>;
            deleteEventsConfiguration(args: DeleteEventsConfigurationCommandInput, cb: (err: any, data?: DeleteEventsConfigurationCommandOutput) => void): void;
            deleteEventsConfiguration(args: DeleteEventsConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEventsConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes the media capture pipeline.</p>
                */
            deleteMediaCapturePipeline(args: DeleteMediaCapturePipelineCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMediaCapturePipelineCommandOutput>;
            deleteMediaCapturePipeline(args: DeleteMediaCapturePipelineCommandInput, cb: (err: any, data?: DeleteMediaCapturePipelineCommandOutput) => void): void;
            deleteMediaCapturePipeline(args: DeleteMediaCapturePipelineCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMediaCapturePipelineCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from
                *     joining the meeting. For more information about the Amazon Chime SDK, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the
                *     <i>Amazon Chime Developer Guide</i>.</p>
                */
            deleteMeeting(args: DeleteMeetingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMeetingCommandOutput>;
            deleteMeeting(args: DeleteMeetingCommandInput, cb: (err: any, data?: DeleteMeetingCommandOutput) => void): void;
            deleteMeeting(args: DeleteMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMeetingCommandOutput) => void): void;
            /**
                * <p>Moves the specified phone number into the <b>Deletion queue</b>. A
                *             phone number must be disassociated from any users or Amazon Chime Voice Connectors
                *             before it can be deleted.</p>
                *
                *          <p>Deleted phone numbers remain in the
                * <b>Deletion queue</b>
                * for 7 days before they are deleted permanently.</p>
                */
            deletePhoneNumber(args: DeletePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<DeletePhoneNumberCommandOutput>;
            deletePhoneNumber(args: DeletePhoneNumberCommandInput, cb: (err: any, data?: DeletePhoneNumberCommandOutput) => void): void;
            deletePhoneNumber(args: DeletePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePhoneNumberCommandOutput) => void): void;
            /**
                * <p>Deletes the specified proxy session from the specified Amazon Chime Voice Connector.</p>
                */
            deleteProxySession(args: DeleteProxySessionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProxySessionCommandOutput>;
            deleteProxySession(args: DeleteProxySessionCommandInput, cb: (err: any, data?: DeleteProxySessionCommandOutput) => void): void;
            deleteProxySession(args: DeleteProxySessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProxySessionCommandOutput) => void): void;
            /**
                * <p>Deletes a chat room in an Amazon Chime Enterprise account.</p>
                */
            deleteRoom(args: DeleteRoomCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRoomCommandOutput>;
            deleteRoom(args: DeleteRoomCommandInput, cb: (err: any, data?: DeleteRoomCommandOutput) => void): void;
            deleteRoom(args: DeleteRoomCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRoomCommandOutput) => void): void;
            /**
                * <p>Removes a member from a chat room in an Amazon Chime Enterprise account.</p>
                */
            deleteRoomMembership(args: DeleteRoomMembershipCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRoomMembershipCommandOutput>;
            deleteRoomMembership(args: DeleteRoomMembershipCommandInput, cb: (err: any, data?: DeleteRoomMembershipCommandOutput) => void): void;
            deleteRoomMembership(args: DeleteRoomMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRoomMembershipCommandOutput) => void): void;
            /**
                * <p>Deletes a SIP media application.</p>
                */
            deleteSipMediaApplication(args: DeleteSipMediaApplicationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSipMediaApplicationCommandOutput>;
            deleteSipMediaApplication(args: DeleteSipMediaApplicationCommandInput, cb: (err: any, data?: DeleteSipMediaApplicationCommandOutput) => void): void;
            deleteSipMediaApplication(args: DeleteSipMediaApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSipMediaApplicationCommandOutput) => void): void;
            /**
                * <p>Deletes a SIP rule. You must disable a SIP rule before you can delete it.</p>
                */
            deleteSipRule(args: DeleteSipRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSipRuleCommandOutput>;
            deleteSipRule(args: DeleteSipRuleCommandInput, cb: (err: any, data?: DeleteSipRuleCommandOutput) => void): void;
            deleteSipRule(args: DeleteSipRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSipRuleCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the
                *             Amazon Chime Voice Connector must be disassociated from it before it can be
                *             deleted.</p>
                */
            deleteVoiceConnector(args: DeleteVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorCommandOutput>;
            deleteVoiceConnector(args: DeleteVoiceConnectorCommandInput, cb: (err: any, data?: DeleteVoiceConnectorCommandOutput) => void): void;
            deleteVoiceConnector(args: DeleteVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.</p>
                */
            deleteVoiceConnectorEmergencyCallingConfiguration(args: DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
            deleteVoiceConnectorEmergencyCallingConfiguration(args: DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, cb: (err: any, data?: DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            deleteVoiceConnectorEmergencyCallingConfiguration(args: DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Amazon Chime Voice Connector group. Any
                * <code>VoiceConnectorItems</code>
                * and phone numbers associated with the group must be removed before it can be deleted.</p>
                */
            deleteVoiceConnectorGroup(args: DeleteVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorGroupCommandOutput>;
            deleteVoiceConnectorGroup(args: DeleteVoiceConnectorGroupCommandInput, cb: (err: any, data?: DeleteVoiceConnectorGroupCommandOutput) => void): void;
            deleteVoiceConnectorGroup(args: DeleteVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorGroupCommandOutput) => void): void;
            /**
                * <p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p>
                *
                *          <note>
                *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p>
                *          </note>
                */
            deleteVoiceConnectorOrigination(args: DeleteVoiceConnectorOriginationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorOriginationCommandOutput>;
            deleteVoiceConnectorOrigination(args: DeleteVoiceConnectorOriginationCommandInput, cb: (err: any, data?: DeleteVoiceConnectorOriginationCommandOutput) => void): void;
            deleteVoiceConnectorOrigination(args: DeleteVoiceConnectorOriginationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorOriginationCommandOutput) => void): void;
            /**
                * <p>Deletes the proxy configuration from the specified Amazon Chime Voice Connector.</p>
                */
            deleteVoiceConnectorProxy(args: DeleteVoiceConnectorProxyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorProxyCommandOutput>;
            deleteVoiceConnectorProxy(args: DeleteVoiceConnectorProxyCommandInput, cb: (err: any, data?: DeleteVoiceConnectorProxyCommandOutput) => void): void;
            deleteVoiceConnectorProxy(args: DeleteVoiceConnectorProxyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorProxyCommandOutput) => void): void;
            /**
                * <p>Deletes the streaming configuration for the specified Amazon Chime Voice Connector.</p>
                */
            deleteVoiceConnectorStreamingConfiguration(args: DeleteVoiceConnectorStreamingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorStreamingConfigurationCommandOutput>;
            deleteVoiceConnectorStreamingConfiguration(args: DeleteVoiceConnectorStreamingConfigurationCommandInput, cb: (err: any, data?: DeleteVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            deleteVoiceConnectorStreamingConfiguration(args: DeleteVoiceConnectorStreamingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p>
                *
                *          <note>
                *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p>
                *          </note>
                */
            deleteVoiceConnectorTermination(args: DeleteVoiceConnectorTerminationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorTerminationCommandOutput>;
            deleteVoiceConnectorTermination(args: DeleteVoiceConnectorTerminationCommandInput, cb: (err: any, data?: DeleteVoiceConnectorTerminationCommandOutput) => void): void;
            deleteVoiceConnectorTermination(args: DeleteVoiceConnectorTerminationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorTerminationCommandOutput) => void): void;
            /**
                * <p>Deletes the specified SIP credentials used by your equipment to authenticate during call termination.</p>
                */
            deleteVoiceConnectorTerminationCredentials(args: DeleteVoiceConnectorTerminationCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteVoiceConnectorTerminationCredentialsCommandOutput>;
            deleteVoiceConnectorTerminationCredentials(args: DeleteVoiceConnectorTerminationCredentialsCommandInput, cb: (err: any, data?: DeleteVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            deleteVoiceConnectorTerminationCredentials(args: DeleteVoiceConnectorTerminationCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            /**
                * <p>Returns the full details of an <code>AppInstance</code>.</p>
                */
            describeAppInstance(args: DescribeAppInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppInstanceCommandOutput>;
            describeAppInstance(args: DescribeAppInstanceCommandInput, cb: (err: any, data?: DescribeAppInstanceCommandOutput) => void): void;
            describeAppInstance(args: DescribeAppInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppInstanceCommandOutput) => void): void;
            /**
                * <p>Returns the full details of an <code>AppInstanceAdmin</code>.</p>
                */
            describeAppInstanceAdmin(args: DescribeAppInstanceAdminCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppInstanceAdminCommandOutput>;
            describeAppInstanceAdmin(args: DescribeAppInstanceAdminCommandInput, cb: (err: any, data?: DescribeAppInstanceAdminCommandOutput) => void): void;
            describeAppInstanceAdmin(args: DescribeAppInstanceAdminCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppInstanceAdminCommandOutput) => void): void;
            /**
                * <p>Returns the full details of an <code>AppInstanceUser</code>.</p>
                */
            describeAppInstanceUser(args: DescribeAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppInstanceUserCommandOutput>;
            describeAppInstanceUser(args: DescribeAppInstanceUserCommandInput, cb: (err: any, data?: DescribeAppInstanceUserCommandOutput) => void): void;
            describeAppInstanceUser(args: DescribeAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Returns the full details of a channel in an Amazon Chime
                *          <code>AppInstance</code>.</p>
                *
                *          <note>
                *
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannel(args: DescribeChannelCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelCommandOutput>;
            describeChannel(args: DescribeChannelCommandInput, cb: (err: any, data?: DescribeChannelCommandOutput) => void): void;
            describeChannel(args: DescribeChannelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelCommandOutput) => void): void;
            /**
                * <p>Returns the full details of a channel ban.</p>
                *
                *          <note>
                *
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannelBan(args: DescribeChannelBanCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelBanCommandOutput>;
            describeChannelBan(args: DescribeChannelBanCommandInput, cb: (err: any, data?: DescribeChannelBanCommandOutput) => void): void;
            describeChannelBan(args: DescribeChannelBanCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelBanCommandOutput) => void): void;
            /**
                * <p>Returns the full details of a user's channel membership.</p>
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannelMembership(args: DescribeChannelMembershipCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelMembershipCommandOutput>;
            describeChannelMembership(args: DescribeChannelMembershipCommandInput, cb: (err: any, data?: DescribeChannelMembershipCommandOutput) => void): void;
            describeChannelMembership(args: DescribeChannelMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelMembershipCommandOutput) => void): void;
            /**
                * <p> Returns the details of a channel based on the membership of the specified
                *             <code>AppInstanceUser</code>.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannelMembershipForAppInstanceUser(args: DescribeChannelMembershipForAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelMembershipForAppInstanceUserCommandOutput>;
            describeChannelMembershipForAppInstanceUser(args: DescribeChannelMembershipForAppInstanceUserCommandInput, cb: (err: any, data?: DescribeChannelMembershipForAppInstanceUserCommandOutput) => void): void;
            describeChannelMembershipForAppInstanceUser(args: DescribeChannelMembershipForAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelMembershipForAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Returns the full details of a channel moderated by the specified
                *             <code>AppInstanceUser</code>.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannelModeratedByAppInstanceUser(args: DescribeChannelModeratedByAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelModeratedByAppInstanceUserCommandOutput>;
            describeChannelModeratedByAppInstanceUser(args: DescribeChannelModeratedByAppInstanceUserCommandInput, cb: (err: any, data?: DescribeChannelModeratedByAppInstanceUserCommandOutput) => void): void;
            describeChannelModeratedByAppInstanceUser(args: DescribeChannelModeratedByAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelModeratedByAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Returns the full details of a single ChannelModerator.</p>
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            describeChannelModerator(args: DescribeChannelModeratorCommandInput, options?: __HttpHandlerOptions): Promise<DescribeChannelModeratorCommandOutput>;
            describeChannelModerator(args: DescribeChannelModeratorCommandInput, cb: (err: any, data?: DescribeChannelModeratorCommandOutput) => void): void;
            describeChannelModerator(args: DescribeChannelModeratorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeChannelModeratorCommandOutput) => void): void;
            /**
                * <p>Disassociates the primary provisioned phone number from the specified Amazon Chime user.</p>
                */
            disassociatePhoneNumberFromUser(args: DisassociatePhoneNumberFromUserCommandInput, options?: __HttpHandlerOptions): Promise<DisassociatePhoneNumberFromUserCommandOutput>;
            disassociatePhoneNumberFromUser(args: DisassociatePhoneNumberFromUserCommandInput, cb: (err: any, data?: DisassociatePhoneNumberFromUserCommandOutput) => void): void;
            disassociatePhoneNumberFromUser(args: DisassociatePhoneNumberFromUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociatePhoneNumberFromUserCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.</p>
                */
            disassociatePhoneNumbersFromVoiceConnector(args: DisassociatePhoneNumbersFromVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<DisassociatePhoneNumbersFromVoiceConnectorCommandOutput>;
            disassociatePhoneNumbersFromVoiceConnector(args: DisassociatePhoneNumbersFromVoiceConnectorCommandInput, cb: (err: any, data?: DisassociatePhoneNumbersFromVoiceConnectorCommandOutput) => void): void;
            disassociatePhoneNumbersFromVoiceConnector(args: DisassociatePhoneNumbersFromVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociatePhoneNumbersFromVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.</p>
                */
            disassociatePhoneNumbersFromVoiceConnectorGroup(args: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput>;
            disassociatePhoneNumbersFromVoiceConnectorGroup(args: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, cb: (err: any, data?: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput) => void): void;
            disassociatePhoneNumbersFromVoiceConnectorGroup(args: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput) => void): void;
            /**
                * <p>Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.</p>
                */
            disassociateSigninDelegateGroupsFromAccount(args: DisassociateSigninDelegateGroupsFromAccountCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateSigninDelegateGroupsFromAccountCommandOutput>;
            disassociateSigninDelegateGroupsFromAccount(args: DisassociateSigninDelegateGroupsFromAccountCommandInput, cb: (err: any, data?: DisassociateSigninDelegateGroupsFromAccountCommandOutput) => void): void;
            disassociateSigninDelegateGroupsFromAccount(args: DisassociateSigninDelegateGroupsFromAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateSigninDelegateGroupsFromAccountCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified Amazon Chime account, such as account type and supported
                *             licenses.</p>
                */
            getAccount(args: GetAccountCommandInput, options?: __HttpHandlerOptions): Promise<GetAccountCommandOutput>;
            getAccount(args: GetAccountCommandInput, cb: (err: any, data?: GetAccountCommandOutput) => void): void;
            getAccount(args: GetAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccountCommandOutput) => void): void;
            /**
                * <p>Retrieves account settings for the specified Amazon Chime account ID, such as remote control
                *             and dialout settings. For more information about these settings, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.
                * </p>
                */
            getAccountSettings(args: GetAccountSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetAccountSettingsCommandOutput>;
            getAccountSettings(args: GetAccountSettingsCommandInput, cb: (err: any, data?: GetAccountSettingsCommandOutput) => void): void;
            getAccountSettings(args: GetAccountSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccountSettingsCommandOutput) => void): void;
            /**
                * <p>Gets the retention settings for an <code>AppInstance</code>.</p>
                */
            getAppInstanceRetentionSettings(args: GetAppInstanceRetentionSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetAppInstanceRetentionSettingsCommandOutput>;
            getAppInstanceRetentionSettings(args: GetAppInstanceRetentionSettingsCommandInput, cb: (err: any, data?: GetAppInstanceRetentionSettingsCommandOutput) => void): void;
            getAppInstanceRetentionSettings(args: GetAppInstanceRetentionSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAppInstanceRetentionSettingsCommandOutput) => void): void;
            /**
                * <p>Gets the streaming settings for an <code>AppInstance</code>.</p>
                */
            getAppInstanceStreamingConfigurations(args: GetAppInstanceStreamingConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<GetAppInstanceStreamingConfigurationsCommandOutput>;
            getAppInstanceStreamingConfigurations(args: GetAppInstanceStreamingConfigurationsCommandInput, cb: (err: any, data?: GetAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            getAppInstanceStreamingConfigurations(args: GetAppInstanceStreamingConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            /**
                * <p>
                * Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * .
                * </p>
                */
            getAttendee(args: GetAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<GetAttendeeCommandOutput>;
            getAttendee(args: GetAttendeeCommandInput, cb: (err: any, data?: GetAttendeeCommandOutput) => void): void;
            getAttendee(args: GetAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAttendeeCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.</p>
                */
            getBot(args: GetBotCommandInput, options?: __HttpHandlerOptions): Promise<GetBotCommandOutput>;
            getBot(args: GetBotCommandInput, cb: (err: any, data?: GetBotCommandOutput) => void): void;
            getBot(args: GetBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBotCommandOutput) => void): void;
            /**
                * <p>Gets the full details of a channel message.</p>
                *
                *          <note>
                *             <p>The x-amz-chime-bearer request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            getChannelMessage(args: GetChannelMessageCommandInput, options?: __HttpHandlerOptions): Promise<GetChannelMessageCommandOutput>;
            getChannelMessage(args: GetChannelMessageCommandInput, cb: (err: any, data?: GetChannelMessageCommandOutput) => void): void;
            getChannelMessage(args: GetChannelMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetChannelMessageCommandOutput) => void): void;
            /**
                * <p>Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.</p>
                */
            getEventsConfiguration(args: GetEventsConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetEventsConfigurationCommandOutput>;
            getEventsConfiguration(args: GetEventsConfigurationCommandInput, cb: (err: any, data?: GetEventsConfigurationCommandOutput) => void): void;
            getEventsConfiguration(args: GetEventsConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEventsConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business
                *             Calling and Amazon Chime Voice Connector settings.</p>
                */
            getGlobalSettings(args: GetGlobalSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetGlobalSettingsCommandOutput>;
            getGlobalSettings(args: GetGlobalSettingsCommandInput, cb: (err: any, data?: GetGlobalSettingsCommandOutput) => void): void;
            getGlobalSettings(args: GetGlobalSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetGlobalSettingsCommandOutput) => void): void;
            /**
                * <p>Gets an existing media capture pipeline.</p>
                */
            getMediaCapturePipeline(args: GetMediaCapturePipelineCommandInput, options?: __HttpHandlerOptions): Promise<GetMediaCapturePipelineCommandOutput>;
            getMediaCapturePipeline(args: GetMediaCapturePipelineCommandInput, cb: (err: any, data?: GetMediaCapturePipelineCommandOutput) => void): void;
            getMediaCapturePipeline(args: GetMediaCapturePipelineCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMediaCapturePipelineCommandOutput) => void): void;
            /**
                * <p>
                * Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the
                * <i>Amazon Chime Developer Guide</i>
                * .
                * </p>
                */
            getMeeting(args: GetMeetingCommandInput, options?: __HttpHandlerOptions): Promise<GetMeetingCommandOutput>;
            getMeeting(args: GetMeetingCommandInput, cb: (err: any, data?: GetMeetingCommandOutput) => void): void;
            getMeeting(args: GetMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMeetingCommandOutput) => void): void;
            /**
                * <p>The details of the endpoint for the messaging session.</p>
                */
            getMessagingSessionEndpoint(args: GetMessagingSessionEndpointCommandInput, options?: __HttpHandlerOptions): Promise<GetMessagingSessionEndpointCommandOutput>;
            getMessagingSessionEndpoint(args: GetMessagingSessionEndpointCommandInput, cb: (err: any, data?: GetMessagingSessionEndpointCommandOutput) => void): void;
            getMessagingSessionEndpoint(args: GetMessagingSessionEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMessagingSessionEndpointCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.</p>
                */
            getPhoneNumber(args: GetPhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<GetPhoneNumberCommandOutput>;
            getPhoneNumber(args: GetPhoneNumberCommandInput, cb: (err: any, data?: GetPhoneNumberCommandOutput) => void): void;
            getPhoneNumber(args: GetPhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPhoneNumberCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified phone number order, such as the order creation timestamp, phone
                *             numbers in E.164 format, product type, and order status.</p>
                */
            getPhoneNumberOrder(args: GetPhoneNumberOrderCommandInput, options?: __HttpHandlerOptions): Promise<GetPhoneNumberOrderCommandOutput>;
            getPhoneNumberOrder(args: GetPhoneNumberOrderCommandInput, cb: (err: any, data?: GetPhoneNumberOrderCommandOutput) => void): void;
            getPhoneNumberOrder(args: GetPhoneNumberOrderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPhoneNumberOrderCommandOutput) => void): void;
            /**
                * <p>Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.</p>
                */
            getPhoneNumberSettings(args: GetPhoneNumberSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetPhoneNumberSettingsCommandOutput>;
            getPhoneNumberSettings(args: GetPhoneNumberSettingsCommandInput, cb: (err: any, data?: GetPhoneNumberSettingsCommandOutput) => void): void;
            getPhoneNumberSettings(args: GetPhoneNumberSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPhoneNumberSettingsCommandOutput) => void): void;
            /**
                * <p>Gets the specified proxy session details for the specified Amazon Chime Voice Connector.</p>
                */
            getProxySession(args: GetProxySessionCommandInput, options?: __HttpHandlerOptions): Promise<GetProxySessionCommandOutput>;
            getProxySession(args: GetProxySessionCommandInput, cb: (err: any, data?: GetProxySessionCommandOutput) => void): void;
            getProxySession(args: GetProxySessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetProxySessionCommandOutput) => void): void;
            /**
                * <p>
                * Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see
                * <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.
                * </p>
                */
            getRetentionSettings(args: GetRetentionSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetRetentionSettingsCommandOutput>;
            getRetentionSettings(args: GetRetentionSettingsCommandInput, cb: (err: any, data?: GetRetentionSettingsCommandOutput) => void): void;
            getRetentionSettings(args: GetRetentionSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRetentionSettingsCommandOutput) => void): void;
            /**
                * <p>Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.</p>
                */
            getRoom(args: GetRoomCommandInput, options?: __HttpHandlerOptions): Promise<GetRoomCommandOutput>;
            getRoom(args: GetRoomCommandInput, cb: (err: any, data?: GetRoomCommandOutput) => void): void;
            getRoom(args: GetRoomCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRoomCommandOutput) => void): void;
            /**
                * <p>Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.</p>
                */
            getSipMediaApplication(args: GetSipMediaApplicationCommandInput, options?: __HttpHandlerOptions): Promise<GetSipMediaApplicationCommandOutput>;
            getSipMediaApplication(args: GetSipMediaApplicationCommandInput, cb: (err: any, data?: GetSipMediaApplicationCommandOutput) => void): void;
            getSipMediaApplication(args: GetSipMediaApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSipMediaApplicationCommandOutput) => void): void;
            /**
                * <p>Returns the logging configuration for the specified SIP media application.</p>
                */
            getSipMediaApplicationLoggingConfiguration(args: GetSipMediaApplicationLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetSipMediaApplicationLoggingConfigurationCommandOutput>;
            getSipMediaApplicationLoggingConfiguration(args: GetSipMediaApplicationLoggingConfigurationCommandInput, cb: (err: any, data?: GetSipMediaApplicationLoggingConfigurationCommandOutput) => void): void;
            getSipMediaApplicationLoggingConfiguration(args: GetSipMediaApplicationLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSipMediaApplicationLoggingConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.</p>
                */
            getSipRule(args: GetSipRuleCommandInput, options?: __HttpHandlerOptions): Promise<GetSipRuleCommandOutput>;
            getSipRule(args: GetSipRuleCommandInput, cb: (err: any, data?: GetSipRuleCommandOutput) => void): void;
            getSipRule(args: GetSipRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSipRuleCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.</p>
                *
                *          <p>
                * To retrieve user details with an email address instead of a user ID, use the
                * <a>ListUsers</a> action, and then filter by email address.
                * </p>
                */
            getUser(args: GetUserCommandInput, options?: __HttpHandlerOptions): Promise<GetUserCommandOutput>;
            getUser(args: GetUserCommandInput, cb: (err: any, data?: GetUserCommandOutput) => void): void;
            getUser(args: GetUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUserCommandOutput) => void): void;
            /**
                * <p>Retrieves settings for the specified user ID, such as any associated phone number settings.</p>
                */
            getUserSettings(args: GetUserSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetUserSettingsCommandOutput>;
            getUserSettings(args: GetUserSettingsCommandInput, cb: (err: any, data?: GetUserSettingsCommandOutput) => void): void;
            getUserSettings(args: GetUserSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUserSettingsCommandOutput) => void): void;
            /**
                * <p>Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.</p>
                */
            getVoiceConnector(args: GetVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorCommandOutput>;
            getVoiceConnector(args: GetVoiceConnectorCommandInput, cb: (err: any, data?: GetVoiceConnectorCommandOutput) => void): void;
            getVoiceConnector(args: GetVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.</p>
                */
            getVoiceConnectorEmergencyCallingConfiguration(args: GetVoiceConnectorEmergencyCallingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
            getVoiceConnectorEmergencyCallingConfiguration(args: GetVoiceConnectorEmergencyCallingConfigurationCommandInput, cb: (err: any, data?: GetVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            getVoiceConnectorEmergencyCallingConfiguration(args: GetVoiceConnectorEmergencyCallingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            /**
                * <p>
                * Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated <code>VoiceConnectorItems</code>.</p>
                */
            getVoiceConnectorGroup(args: GetVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorGroupCommandOutput>;
            getVoiceConnectorGroup(args: GetVoiceConnectorGroupCommandInput, cb: (err: any, data?: GetVoiceConnectorGroupCommandOutput) => void): void;
            getVoiceConnectorGroup(args: GetVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorGroupCommandOutput) => void): void;
            /**
                * <p>Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
                */
            getVoiceConnectorLoggingConfiguration(args: GetVoiceConnectorLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorLoggingConfigurationCommandOutput>;
            getVoiceConnectorLoggingConfiguration(args: GetVoiceConnectorLoggingConfigurationCommandInput, cb: (err: any, data?: GetVoiceConnectorLoggingConfigurationCommandOutput) => void): void;
            getVoiceConnectorLoggingConfiguration(args: GetVoiceConnectorLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorLoggingConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves origination setting details for the specified Amazon Chime Voice Connector.</p>
                */
            getVoiceConnectorOrigination(args: GetVoiceConnectorOriginationCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorOriginationCommandOutput>;
            getVoiceConnectorOrigination(args: GetVoiceConnectorOriginationCommandInput, cb: (err: any, data?: GetVoiceConnectorOriginationCommandOutput) => void): void;
            getVoiceConnectorOrigination(args: GetVoiceConnectorOriginationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorOriginationCommandOutput) => void): void;
            /**
                * <p>Gets the proxy configuration details for the specified Amazon Chime Voice Connector.</p>
                */
            getVoiceConnectorProxy(args: GetVoiceConnectorProxyCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorProxyCommandOutput>;
            getVoiceConnectorProxy(args: GetVoiceConnectorProxyCommandInput, cb: (err: any, data?: GetVoiceConnectorProxyCommandOutput) => void): void;
            getVoiceConnectorProxy(args: GetVoiceConnectorProxyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorProxyCommandOutput) => void): void;
            /**
                * <p>Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector.
                *             Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows
                *             the retention period, in hours, for the Amazon Kinesis data.</p>
                */
            getVoiceConnectorStreamingConfiguration(args: GetVoiceConnectorStreamingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorStreamingConfigurationCommandOutput>;
            getVoiceConnectorStreamingConfiguration(args: GetVoiceConnectorStreamingConfigurationCommandInput, cb: (err: any, data?: GetVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            getVoiceConnectorStreamingConfiguration(args: GetVoiceConnectorStreamingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves termination setting details for the specified Amazon Chime Voice Connector.</p>
                */
            getVoiceConnectorTermination(args: GetVoiceConnectorTerminationCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorTerminationCommandOutput>;
            getVoiceConnectorTermination(args: GetVoiceConnectorTerminationCommandInput, cb: (err: any, data?: GetVoiceConnectorTerminationCommandOutput) => void): void;
            getVoiceConnectorTermination(args: GetVoiceConnectorTerminationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorTerminationCommandOutput) => void): void;
            /**
                * <p>Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from
                *             your SIP infrastructure for the specified Amazon Chime Voice Connector.</p>
                */
            getVoiceConnectorTerminationHealth(args: GetVoiceConnectorTerminationHealthCommandInput, options?: __HttpHandlerOptions): Promise<GetVoiceConnectorTerminationHealthCommandOutput>;
            getVoiceConnectorTerminationHealth(args: GetVoiceConnectorTerminationHealthCommandInput, cb: (err: any, data?: GetVoiceConnectorTerminationHealthCommandOutput) => void): void;
            getVoiceConnectorTerminationHealth(args: GetVoiceConnectorTerminationHealthCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetVoiceConnectorTerminationHealthCommandOutput) => void): void;
            /**
                * <p>Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime
                *                 <code>Team</code> account. Only <code>Team</code> account types are currently
                *             supported for this action.</p>
                */
            inviteUsers(args: InviteUsersCommandInput, options?: __HttpHandlerOptions): Promise<InviteUsersCommandOutput>;
            inviteUsers(args: InviteUsersCommandInput, cb: (err: any, data?: InviteUsersCommandOutput) => void): void;
            inviteUsers(args: InviteUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: InviteUsersCommandOutput) => void): void;
            /**
                * <p>Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts
                *             by account name prefix. To find out which Amazon Chime account a user belongs to, you can
                *             filter by the user's email address, which returns one account result.</p>
                */
            listAccounts(args: ListAccountsCommandInput, options?: __HttpHandlerOptions): Promise<ListAccountsCommandOutput>;
            listAccounts(args: ListAccountsCommandInput, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            listAccounts(args: ListAccountsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            /**
                * <p>Returns a list of the administrators in the <code>AppInstance</code>.</p>
                */
            listAppInstanceAdmins(args: ListAppInstanceAdminsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppInstanceAdminsCommandOutput>;
            listAppInstanceAdmins(args: ListAppInstanceAdminsCommandInput, cb: (err: any, data?: ListAppInstanceAdminsCommandOutput) => void): void;
            listAppInstanceAdmins(args: ListAppInstanceAdminsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppInstanceAdminsCommandOutput) => void): void;
            /**
                * <p>Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS account.</p>
                */
            listAppInstances(args: ListAppInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListAppInstancesCommandOutput>;
            listAppInstances(args: ListAppInstancesCommandInput, cb: (err: any, data?: ListAppInstancesCommandOutput) => void): void;
            listAppInstances(args: ListAppInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppInstancesCommandOutput) => void): void;
            /**
                * <p>List all <code>AppInstanceUsers</code>
                *             created under a single <code>AppInstance</code>.
                *         </p>
                */
            listAppInstanceUsers(args: ListAppInstanceUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListAppInstanceUsersCommandOutput>;
            listAppInstanceUsers(args: ListAppInstanceUsersCommandInput, cb: (err: any, data?: ListAppInstanceUsersCommandOutput) => void): void;
            listAppInstanceUsers(args: ListAppInstanceUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppInstanceUsersCommandOutput) => void): void;
            /**
                * <p>
                * Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the <i>Amazon Chime Developer Guide</i>.
                * </p>
                */
            listAttendees(args: ListAttendeesCommandInput, options?: __HttpHandlerOptions): Promise<ListAttendeesCommandOutput>;
            listAttendees(args: ListAttendeesCommandInput, cb: (err: any, data?: ListAttendeesCommandOutput) => void): void;
            listAttendees(args: ListAttendeesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAttendeesCommandOutput) => void): void;
            /**
                * <p>Lists the tags applied to an Amazon Chime SDK attendee resource.</p>
                */
            listAttendeeTags(args: ListAttendeeTagsCommandInput, options?: __HttpHandlerOptions): Promise<ListAttendeeTagsCommandOutput>;
            listAttendeeTags(args: ListAttendeeTagsCommandInput, cb: (err: any, data?: ListAttendeeTagsCommandOutput) => void): void;
            listAttendeeTags(args: ListAttendeeTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAttendeeTagsCommandOutput) => void): void;
            /**
                * <p>Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.</p>
                */
            listBots(args: ListBotsCommandInput, options?: __HttpHandlerOptions): Promise<ListBotsCommandOutput>;
            listBots(args: ListBotsCommandInput, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
            listBots(args: ListBotsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBotsCommandOutput) => void): void;
            /**
                * <p>Lists all the users banned from a particular channel.</p>
                *
                *          <note>
                *
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelBans(args: ListChannelBansCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelBansCommandOutput>;
            listChannelBans(args: ListChannelBansCommandInput, cb: (err: any, data?: ListChannelBansCommandOutput) => void): void;
            listChannelBans(args: ListChannelBansCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelBansCommandOutput) => void): void;
            /**
                * <p>Lists all channel memberships in a channel.</p>
                *
                *          <note>
                *
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelMemberships(args: ListChannelMembershipsCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelMembershipsCommandOutput>;
            listChannelMemberships(args: ListChannelMembershipsCommandInput, cb: (err: any, data?: ListChannelMembershipsCommandOutput) => void): void;
            listChannelMemberships(args: ListChannelMembershipsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelMembershipsCommandOutput) => void): void;
            /**
                * <p> Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an
                *             <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelMembershipsForAppInstanceUser(args: ListChannelMembershipsForAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelMembershipsForAppInstanceUserCommandOutput>;
            listChannelMembershipsForAppInstanceUser(args: ListChannelMembershipsForAppInstanceUserCommandInput, cb: (err: any, data?: ListChannelMembershipsForAppInstanceUserCommandOutput) => void): void;
            listChannelMembershipsForAppInstanceUser(args: ListChannelMembershipsForAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelMembershipsForAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>List all the messages in a channel. Returns a paginated list of
                *             <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending
                *          order.</p>
                *          <note>
                *             <p>Redacted messages appear in the results as empty, since they are only redacted, not
                *             deleted. Deleted messages do not appear in the results. This action always returns the
                *             latest version of an edited message.</p>
                *             <p>Also, the x-amz-chime-bearer request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelMessages(args: ListChannelMessagesCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelMessagesCommandOutput>;
            listChannelMessages(args: ListChannelMessagesCommandInput, cb: (err: any, data?: ListChannelMessagesCommandOutput) => void): void;
            listChannelMessages(args: ListChannelMessagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelMessagesCommandOutput) => void): void;
            /**
                * <p>Lists all the moderators for a channel.</p>
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelModerators(args: ListChannelModeratorsCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelModeratorsCommandOutput>;
            listChannelModerators(args: ListChannelModeratorsCommandInput, cb: (err: any, data?: ListChannelModeratorsCommandOutput) => void): void;
            listChannelModerators(args: ListChannelModeratorsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelModeratorsCommandOutput) => void): void;
            /**
                * <p>Lists all Channels created under a single Chime App as a paginated list. You can specify
                *          filters to narrow results.</p>
                *
                *          <p class="title">
                *             <b>Functionality & restrictions</b>
                *          </p>
                *          <ul>
                *             <li>
                *                <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the
                *                account.</p>
                *             </li>
                *             <li>
                *                <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to
                *                list the private channels in an account.</p>
                *             </li>
                *          </ul>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannels(args: ListChannelsCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelsCommandOutput>;
            listChannels(args: ListChannelsCommandInput, cb: (err: any, data?: ListChannelsCommandOutput) => void): void;
            listChannels(args: ListChannelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelsCommandOutput) => void): void;
            /**
                * <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            listChannelsModeratedByAppInstanceUser(args: ListChannelsModeratedByAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<ListChannelsModeratedByAppInstanceUserCommandOutput>;
            listChannelsModeratedByAppInstanceUser(args: ListChannelsModeratedByAppInstanceUserCommandInput, cb: (err: any, data?: ListChannelsModeratedByAppInstanceUserCommandOutput) => void): void;
            listChannelsModeratedByAppInstanceUser(args: ListChannelsModeratedByAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListChannelsModeratedByAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Returns a list of media capture pipelines.</p>
                */
            listMediaCapturePipelines(args: ListMediaCapturePipelinesCommandInput, options?: __HttpHandlerOptions): Promise<ListMediaCapturePipelinesCommandOutput>;
            listMediaCapturePipelines(args: ListMediaCapturePipelinesCommandInput, cb: (err: any, data?: ListMediaCapturePipelinesCommandOutput) => void): void;
            listMediaCapturePipelines(args: ListMediaCapturePipelinesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMediaCapturePipelinesCommandOutput) => void): void;
            /**
                * <p>
                * Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see
                * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
                * in the <i>Amazon Chime Developer Guide</i>.</p>
                */
            listMeetings(args: ListMeetingsCommandInput, options?: __HttpHandlerOptions): Promise<ListMeetingsCommandOutput>;
            listMeetings(args: ListMeetingsCommandInput, cb: (err: any, data?: ListMeetingsCommandOutput) => void): void;
            listMeetings(args: ListMeetingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMeetingsCommandOutput) => void): void;
            /**
                * <p>Lists the tags applied to an Amazon Chime SDK meeting resource.</p>
                */
            listMeetingTags(args: ListMeetingTagsCommandInput, options?: __HttpHandlerOptions): Promise<ListMeetingTagsCommandOutput>;
            listMeetingTags(args: ListMeetingTagsCommandInput, cb: (err: any, data?: ListMeetingTagsCommandOutput) => void): void;
            listMeetingTags(args: ListMeetingTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMeetingTagsCommandOutput) => void): void;
            /**
                * <p>Lists the phone number orders for the administrator's Amazon Chime account.</p>
                */
            listPhoneNumberOrders(args: ListPhoneNumberOrdersCommandInput, options?: __HttpHandlerOptions): Promise<ListPhoneNumberOrdersCommandOutput>;
            listPhoneNumberOrders(args: ListPhoneNumberOrdersCommandInput, cb: (err: any, data?: ListPhoneNumberOrdersCommandOutput) => void): void;
            listPhoneNumberOrders(args: ListPhoneNumberOrdersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPhoneNumberOrdersCommandOutput) => void): void;
            /**
                * <p>Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.</p>
                */
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, options?: __HttpHandlerOptions): Promise<ListPhoneNumbersCommandOutput>;
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
            listPhoneNumbers(args: ListPhoneNumbersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPhoneNumbersCommandOutput) => void): void;
            /**
                * <p>Lists the proxy sessions for the specified Amazon Chime Voice Connector.</p>
                */
            listProxySessions(args: ListProxySessionsCommandInput, options?: __HttpHandlerOptions): Promise<ListProxySessionsCommandOutput>;
            listProxySessions(args: ListProxySessionsCommandInput, cb: (err: any, data?: ListProxySessionsCommandOutput) => void): void;
            listProxySessions(args: ListProxySessionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProxySessionsCommandOutput) => void): void;
            /**
                * <p>Lists the membership details for the specified room in an Amazon Chime Enterprise account,
                *             such as the members' IDs, email addresses, and names.</p>
                */
            listRoomMemberships(args: ListRoomMembershipsCommandInput, options?: __HttpHandlerOptions): Promise<ListRoomMembershipsCommandOutput>;
            listRoomMemberships(args: ListRoomMembershipsCommandInput, cb: (err: any, data?: ListRoomMembershipsCommandOutput) => void): void;
            listRoomMemberships(args: ListRoomMembershipsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoomMembershipsCommandOutput) => void): void;
            /**
                * <p>Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.</p>
                */
            listRooms(args: ListRoomsCommandInput, options?: __HttpHandlerOptions): Promise<ListRoomsCommandOutput>;
            listRooms(args: ListRoomsCommandInput, cb: (err: any, data?: ListRoomsCommandOutput) => void): void;
            listRooms(args: ListRoomsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRoomsCommandOutput) => void): void;
            /**
                * <p>Lists the SIP media applications under the administrator's AWS account.</p>
                */
            listSipMediaApplications(args: ListSipMediaApplicationsCommandInput, options?: __HttpHandlerOptions): Promise<ListSipMediaApplicationsCommandOutput>;
            listSipMediaApplications(args: ListSipMediaApplicationsCommandInput, cb: (err: any, data?: ListSipMediaApplicationsCommandOutput) => void): void;
            listSipMediaApplications(args: ListSipMediaApplicationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSipMediaApplicationsCommandOutput) => void): void;
            /**
                * <p>Lists the SIP rules under the administrator's AWS account.</p>
                */
            listSipRules(args: ListSipRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListSipRulesCommandOutput>;
            listSipRules(args: ListSipRulesCommandInput, cb: (err: any, data?: ListSipRulesCommandOutput) => void): void;
            listSipRules(args: ListSipRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSipRulesCommandOutput) => void): void;
            /**
                * <p>Lists supported phone number countries.</p>
                */
            listSupportedPhoneNumberCountries(args: ListSupportedPhoneNumberCountriesCommandInput, options?: __HttpHandlerOptions): Promise<ListSupportedPhoneNumberCountriesCommandOutput>;
            listSupportedPhoneNumberCountries(args: ListSupportedPhoneNumberCountriesCommandInput, cb: (err: any, data?: ListSupportedPhoneNumberCountriesCommandOutput) => void): void;
            listSupportedPhoneNumberCountries(args: ListSupportedPhoneNumberCountriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSupportedPhoneNumberCountriesCommandOutput) => void): void;
            /**
                * <p>Lists the tags applied to an Amazon Chime SDK meeting resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Lists the users that belong to the specified Amazon Chime account. You can specify an email
                *             address to list only the user that the email address belongs to.</p>
                */
            listUsers(args: ListUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListUsersCommandOutput>;
            listUsers(args: ListUsersCommandInput, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            listUsers(args: ListUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            /**
                * <p>Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.</p>
                */
            listVoiceConnectorGroups(args: ListVoiceConnectorGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListVoiceConnectorGroupsCommandOutput>;
            listVoiceConnectorGroups(args: ListVoiceConnectorGroupsCommandInput, cb: (err: any, data?: ListVoiceConnectorGroupsCommandOutput) => void): void;
            listVoiceConnectorGroups(args: ListVoiceConnectorGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListVoiceConnectorGroupsCommandOutput) => void): void;
            /**
                * <p>Lists the Amazon Chime Voice Connectors for the administrator's AWS account.</p>
                */
            listVoiceConnectors(args: ListVoiceConnectorsCommandInput, options?: __HttpHandlerOptions): Promise<ListVoiceConnectorsCommandOutput>;
            listVoiceConnectors(args: ListVoiceConnectorsCommandInput, cb: (err: any, data?: ListVoiceConnectorsCommandOutput) => void): void;
            listVoiceConnectors(args: ListVoiceConnectorsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListVoiceConnectorsCommandOutput) => void): void;
            /**
                * <p>Lists the SIP credentials for the specified Amazon Chime Voice Connector.</p>
                */
            listVoiceConnectorTerminationCredentials(args: ListVoiceConnectorTerminationCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<ListVoiceConnectorTerminationCredentialsCommandOutput>;
            listVoiceConnectorTerminationCredentials(args: ListVoiceConnectorTerminationCredentialsCommandInput, cb: (err: any, data?: ListVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            listVoiceConnectorTerminationCredentials(args: ListVoiceConnectorTerminationCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            /**
                * <p>Logs out the specified user from all of the devices they are currently logged into.</p>
                */
            logoutUser(args: LogoutUserCommandInput, options?: __HttpHandlerOptions): Promise<LogoutUserCommandOutput>;
            logoutUser(args: LogoutUserCommandInput, cb: (err: any, data?: LogoutUserCommandOutput) => void): void;
            logoutUser(args: LogoutUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: LogoutUserCommandOutput) => void): void;
            /**
                * <p>Sets the amount of time in days that a given <code>AppInstance</code> retains data.</p>
                */
            putAppInstanceRetentionSettings(args: PutAppInstanceRetentionSettingsCommandInput, options?: __HttpHandlerOptions): Promise<PutAppInstanceRetentionSettingsCommandOutput>;
            putAppInstanceRetentionSettings(args: PutAppInstanceRetentionSettingsCommandInput, cb: (err: any, data?: PutAppInstanceRetentionSettingsCommandOutput) => void): void;
            putAppInstanceRetentionSettings(args: PutAppInstanceRetentionSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAppInstanceRetentionSettingsCommandOutput) => void): void;
            /**
                * <p>The data streaming configurations of an <code>AppInstance</code>.</p>
                */
            putAppInstanceStreamingConfigurations(args: PutAppInstanceStreamingConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<PutAppInstanceStreamingConfigurationsCommandOutput>;
            putAppInstanceStreamingConfigurations(args: PutAppInstanceStreamingConfigurationsCommandInput, cb: (err: any, data?: PutAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            putAppInstanceStreamingConfigurations(args: PutAppInstanceStreamingConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAppInstanceStreamingConfigurationsCommandOutput) => void): void;
            /**
                * <p>Creates an events configuration that allows a bot to receive outgoing events sent by Amazon
                *             Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information,
                *             see <a>Bot</a>.</p>
                */
            putEventsConfiguration(args: PutEventsConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutEventsConfigurationCommandOutput>;
            putEventsConfiguration(args: PutEventsConfigurationCommandInput, cb: (err: any, data?: PutEventsConfigurationCommandOutput) => void): void;
            putEventsConfiguration(args: PutEventsConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEventsConfigurationCommandOutput) => void): void;
            /**
                * <p>
                * Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see
                * <a href="https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html">Logging Amazon Chime API Calls with AWS CloudTrail</a>
                * in the <i>Amazon Chime Administration Guide</i>.</p>
                *
                *          <p>
                * To turn off existing retention settings, remove the number of days from the corresponding
                * <b>RetentionDays</b>
                * field in the
                * <b>RetentionSettings</b>
                * object. For more information about retention settings, see
                * <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a>
                * in the <i>Amazon Chime Administration Guide</i>.</p>
                */
            putRetentionSettings(args: PutRetentionSettingsCommandInput, options?: __HttpHandlerOptions): Promise<PutRetentionSettingsCommandOutput>;
            putRetentionSettings(args: PutRetentionSettingsCommandInput, cb: (err: any, data?: PutRetentionSettingsCommandOutput) => void): void;
            putRetentionSettings(args: PutRetentionSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutRetentionSettingsCommandOutput) => void): void;
            /**
                * <p>Updates the logging configuration for the specified SIP media application.</p>
                */
            putSipMediaApplicationLoggingConfiguration(args: PutSipMediaApplicationLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutSipMediaApplicationLoggingConfigurationCommandOutput>;
            putSipMediaApplicationLoggingConfiguration(args: PutSipMediaApplicationLoggingConfigurationCommandInput, cb: (err: any, data?: PutSipMediaApplicationLoggingConfigurationCommandOutput) => void): void;
            putSipMediaApplicationLoggingConfiguration(args: PutSipMediaApplicationLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutSipMediaApplicationLoggingConfigurationCommandOutput) => void): void;
            /**
                * <p>Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for
                *     the Amazon Chime Voice Connector before emergency calling can be configured.</p>
                */
            putVoiceConnectorEmergencyCallingConfiguration(args: PutVoiceConnectorEmergencyCallingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
            putVoiceConnectorEmergencyCallingConfiguration(args: PutVoiceConnectorEmergencyCallingConfigurationCommandInput, cb: (err: any, data?: PutVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            putVoiceConnectorEmergencyCallingConfiguration(args: PutVoiceConnectorEmergencyCallingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorEmergencyCallingConfigurationCommandOutput) => void): void;
            /**
                * <p>Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
                */
            putVoiceConnectorLoggingConfiguration(args: PutVoiceConnectorLoggingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorLoggingConfigurationCommandOutput>;
            putVoiceConnectorLoggingConfiguration(args: PutVoiceConnectorLoggingConfigurationCommandInput, cb: (err: any, data?: PutVoiceConnectorLoggingConfigurationCommandOutput) => void): void;
            putVoiceConnectorLoggingConfiguration(args: PutVoiceConnectorLoggingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorLoggingConfigurationCommandOutput) => void): void;
            /**
                * <p>Adds origination settings for the specified Amazon Chime Voice Connector.</p>
                *
                *          <note>
                *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p>
                *          </note>
                */
            putVoiceConnectorOrigination(args: PutVoiceConnectorOriginationCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorOriginationCommandOutput>;
            putVoiceConnectorOrigination(args: PutVoiceConnectorOriginationCommandInput, cb: (err: any, data?: PutVoiceConnectorOriginationCommandOutput) => void): void;
            putVoiceConnectorOrigination(args: PutVoiceConnectorOriginationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorOriginationCommandOutput) => void): void;
            /**
                * <p>Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.</p>
                */
            putVoiceConnectorProxy(args: PutVoiceConnectorProxyCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorProxyCommandOutput>;
            putVoiceConnectorProxy(args: PutVoiceConnectorProxyCommandInput, cb: (err: any, data?: PutVoiceConnectorProxyCommandOutput) => void): void;
            putVoiceConnectorProxy(args: PutVoiceConnectorProxyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorProxyCommandOutput) => void): void;
            /**
                * <p>Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming
                *             configuration specifies whether media streaming is enabled for sending to Indonesians.
                *             It also sets the retention period, in hours, for the Amazon Kinesis data.</p>
                */
            putVoiceConnectorStreamingConfiguration(args: PutVoiceConnectorStreamingConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorStreamingConfigurationCommandOutput>;
            putVoiceConnectorStreamingConfiguration(args: PutVoiceConnectorStreamingConfigurationCommandInput, cb: (err: any, data?: PutVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            putVoiceConnectorStreamingConfiguration(args: PutVoiceConnectorStreamingConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorStreamingConfigurationCommandOutput) => void): void;
            /**
                * <p>Adds termination settings for the specified Amazon Chime Voice Connector.</p>
                *
                *          <note>
                *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p>
                *          </note>
                */
            putVoiceConnectorTermination(args: PutVoiceConnectorTerminationCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorTerminationCommandOutput>;
            putVoiceConnectorTermination(args: PutVoiceConnectorTerminationCommandInput, cb: (err: any, data?: PutVoiceConnectorTerminationCommandOutput) => void): void;
            putVoiceConnectorTermination(args: PutVoiceConnectorTerminationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorTerminationCommandOutput) => void): void;
            /**
                * <p>Adds termination SIP credentials for the specified Amazon Chime Voice Connector.</p>
                */
            putVoiceConnectorTerminationCredentials(args: PutVoiceConnectorTerminationCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<PutVoiceConnectorTerminationCredentialsCommandOutput>;
            putVoiceConnectorTerminationCredentials(args: PutVoiceConnectorTerminationCredentialsCommandInput, cb: (err: any, data?: PutVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            putVoiceConnectorTerminationCredentials(args: PutVoiceConnectorTerminationCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutVoiceConnectorTerminationCredentialsCommandOutput) => void): void;
            /**
                * <p>Redacts message content, but not metadata. The message exists in the back end, but the
                *          action returns null content, and the state shows as redacted.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            redactChannelMessage(args: RedactChannelMessageCommandInput, options?: __HttpHandlerOptions): Promise<RedactChannelMessageCommandOutput>;
            redactChannelMessage(args: RedactChannelMessageCommandInput, cb: (err: any, data?: RedactChannelMessageCommandOutput) => void): void;
            redactChannelMessage(args: RedactChannelMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RedactChannelMessageCommandOutput) => void): void;
            /**
                * <p>Redacts the specified message from the specified Amazon Chime conversation.</p>
                */
            redactConversationMessage(args: RedactConversationMessageCommandInput, options?: __HttpHandlerOptions): Promise<RedactConversationMessageCommandOutput>;
            redactConversationMessage(args: RedactConversationMessageCommandInput, cb: (err: any, data?: RedactConversationMessageCommandOutput) => void): void;
            redactConversationMessage(args: RedactConversationMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RedactConversationMessageCommandOutput) => void): void;
            /**
                * <p>Redacts the specified message from the specified Amazon Chime channel.</p>
                */
            redactRoomMessage(args: RedactRoomMessageCommandInput, options?: __HttpHandlerOptions): Promise<RedactRoomMessageCommandOutput>;
            redactRoomMessage(args: RedactRoomMessageCommandInput, cb: (err: any, data?: RedactRoomMessageCommandOutput) => void): void;
            redactRoomMessage(args: RedactRoomMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RedactRoomMessageCommandOutput) => void): void;
            /**
                * <p>Regenerates the security token for a bot.</p>
                */
            regenerateSecurityToken(args: RegenerateSecurityTokenCommandInput, options?: __HttpHandlerOptions): Promise<RegenerateSecurityTokenCommandOutput>;
            regenerateSecurityToken(args: RegenerateSecurityTokenCommandInput, cb: (err: any, data?: RegenerateSecurityTokenCommandOutput) => void): void;
            regenerateSecurityToken(args: RegenerateSecurityTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegenerateSecurityTokenCommandOutput) => void): void;
            /**
                * <p>Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns
                *             the <a>User</a> object with the updated personal meeting PIN.</p>
                */
            resetPersonalPIN(args: ResetPersonalPINCommandInput, options?: __HttpHandlerOptions): Promise<ResetPersonalPINCommandOutput>;
            resetPersonalPIN(args: ResetPersonalPINCommandInput, cb: (err: any, data?: ResetPersonalPINCommandOutput) => void): void;
            resetPersonalPIN(args: ResetPersonalPINCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetPersonalPINCommandOutput) => void): void;
            /**
                * <p>Moves a phone number from the <b>Deletion queue</b> back into the
                *             phone number <b>Inventory</b>.</p>
                */
            restorePhoneNumber(args: RestorePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<RestorePhoneNumberCommandOutput>;
            restorePhoneNumber(args: RestorePhoneNumberCommandInput, cb: (err: any, data?: RestorePhoneNumberCommandOutput) => void): void;
            restorePhoneNumber(args: RestorePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RestorePhoneNumberCommandOutput) => void): void;
            /**
                * <p>Searches for phone numbers that can be ordered. For US numbers, provide at least one of
                *             the following search filters: <code>AreaCode</code>, <code>City</code>,
                *                 <code>State</code>, or <code>TollFreePrefix</code>. If you provide
                *             <code>City</code>, you must also provide <code>State</code>. Numbers outside the US only
                *             support the <code>PhoneNumberType</code> filter, which you must use.</p>
                */
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, options?: __HttpHandlerOptions): Promise<SearchAvailablePhoneNumbersCommandOutput>;
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, cb: (err: any, data?: SearchAvailablePhoneNumbersCommandOutput) => void): void;
            searchAvailablePhoneNumbers(args: SearchAvailablePhoneNumbersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchAvailablePhoneNumbersCommandOutput) => void): void;
            /**
                * <p>Sends a message to a particular channel that the member is a part of.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *
                *             <p>Also, <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata.
                *                <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p>
                *          </note>
                */
            sendChannelMessage(args: SendChannelMessageCommandInput, options?: __HttpHandlerOptions): Promise<SendChannelMessageCommandOutput>;
            sendChannelMessage(args: SendChannelMessageCommandInput, cb: (err: any, data?: SendChannelMessageCommandOutput) => void): void;
            sendChannelMessage(args: SendChannelMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SendChannelMessageCommandOutput) => void): void;
            /**
                * <p>Starts transcription for the specified <code>meetingId</code>. </p>
                */
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, options?: __HttpHandlerOptions): Promise<StartMeetingTranscriptionCommandOutput>;
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, cb: (err: any, data?: StartMeetingTranscriptionCommandOutput) => void): void;
            startMeetingTranscription(args: StartMeetingTranscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartMeetingTranscriptionCommandOutput) => void): void;
            /**
                * <p>Stops transcription for the specified <code>meetingId</code>.</p>
                */
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, options?: __HttpHandlerOptions): Promise<StopMeetingTranscriptionCommandOutput>;
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, cb: (err: any, data?: StopMeetingTranscriptionCommandOutput) => void): void;
            stopMeetingTranscription(args: StopMeetingTranscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopMeetingTranscriptionCommandOutput) => void): void;
            /**
                * <p>Applies the specified tags to the specified Amazon Chime SDK attendee.</p>
                */
            tagAttendee(args: TagAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<TagAttendeeCommandOutput>;
            tagAttendee(args: TagAttendeeCommandInput, cb: (err: any, data?: TagAttendeeCommandOutput) => void): void;
            tagAttendee(args: TagAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagAttendeeCommandOutput) => void): void;
            /**
                * <p>Applies the specified tags to the specified Amazon Chime SDK meeting.</p>
                */
            tagMeeting(args: TagMeetingCommandInput, options?: __HttpHandlerOptions): Promise<TagMeetingCommandOutput>;
            tagMeeting(args: TagMeetingCommandInput, cb: (err: any, data?: TagMeetingCommandOutput) => void): void;
            tagMeeting(args: TagMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagMeetingCommandOutput) => void): void;
            /**
                * <p>Applies the specified tags to the specified Amazon Chime SDK meeting resource.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Untags the specified tags from the specified Amazon Chime SDK attendee.</p>
                */
            untagAttendee(args: UntagAttendeeCommandInput, options?: __HttpHandlerOptions): Promise<UntagAttendeeCommandOutput>;
            untagAttendee(args: UntagAttendeeCommandInput, cb: (err: any, data?: UntagAttendeeCommandOutput) => void): void;
            untagAttendee(args: UntagAttendeeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagAttendeeCommandOutput) => void): void;
            /**
                * <p>Untags the specified tags from the specified Amazon Chime SDK meeting.</p>
                */
            untagMeeting(args: UntagMeetingCommandInput, options?: __HttpHandlerOptions): Promise<UntagMeetingCommandOutput>;
            untagMeeting(args: UntagMeetingCommandInput, cb: (err: any, data?: UntagMeetingCommandOutput) => void): void;
            untagMeeting(args: UntagMeetingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagMeetingCommandOutput) => void): void;
            /**
                * <p>Untags the specified tags from the specified Amazon Chime SDK meeting resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.</p>
                */
            updateAccount(args: UpdateAccountCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAccountCommandOutput>;
            updateAccount(args: UpdateAccountCommandInput, cb: (err: any, data?: UpdateAccountCommandOutput) => void): void;
            updateAccount(args: UpdateAccountCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAccountCommandOutput) => void): void;
            /**
                * <p>Updates the settings for the specified Amazon Chime account. You can update settings for
                *             remote control of shared screens, or for the dial-out option. For more information about
                *             these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use
                *                 the Policies Page</a> in the <i>Amazon Chime Administration
                *                 Guide</i>.</p>
                */
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAccountSettingsCommandOutput>;
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void): void;
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void): void;
            /**
                * <p>Updates <code>AppInstance</code> metadata.</p>
                */
            updateAppInstance(args: UpdateAppInstanceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAppInstanceCommandOutput>;
            updateAppInstance(args: UpdateAppInstanceCommandInput, cb: (err: any, data?: UpdateAppInstanceCommandOutput) => void): void;
            updateAppInstance(args: UpdateAppInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAppInstanceCommandOutput) => void): void;
            /**
                * <p>Updates the details of an <code>AppInstanceUser</code>. You can update names and metadata.</p>
                */
            updateAppInstanceUser(args: UpdateAppInstanceUserCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAppInstanceUserCommandOutput>;
            updateAppInstanceUser(args: UpdateAppInstanceUserCommandInput, cb: (err: any, data?: UpdateAppInstanceUserCommandOutput) => void): void;
            updateAppInstanceUser(args: UpdateAppInstanceUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAppInstanceUserCommandOutput) => void): void;
            /**
                * <p>Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.</p>
                */
            updateBot(args: UpdateBotCommandInput, options?: __HttpHandlerOptions): Promise<UpdateBotCommandOutput>;
            updateBot(args: UpdateBotCommandInput, cb: (err: any, data?: UpdateBotCommandOutput) => void): void;
            updateBot(args: UpdateBotCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateBotCommandOutput) => void): void;
            /**
                * <p>Update a channel's attributes.</p>
                *          <p>
                *             <b>Restriction</b>: You can't change a channel's privacy. </p>
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            updateChannel(args: UpdateChannelCommandInput, options?: __HttpHandlerOptions): Promise<UpdateChannelCommandOutput>;
            updateChannel(args: UpdateChannelCommandInput, cb: (err: any, data?: UpdateChannelCommandOutput) => void): void;
            updateChannel(args: UpdateChannelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateChannelCommandOutput) => void): void;
            /**
                * <p>Updates the content of a message.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            updateChannelMessage(args: UpdateChannelMessageCommandInput, options?: __HttpHandlerOptions): Promise<UpdateChannelMessageCommandOutput>;
            updateChannelMessage(args: UpdateChannelMessageCommandInput, cb: (err: any, data?: UpdateChannelMessageCommandOutput) => void): void;
            updateChannelMessage(args: UpdateChannelMessageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateChannelMessageCommandOutput) => void): void;
            /**
                * <p>The details of the time when a user last read messages in a channel.</p>
                *
                *          <note>
                *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
                *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
                *             the header.</p>
                *          </note>
                */
            updateChannelReadMarker(args: UpdateChannelReadMarkerCommandInput, options?: __HttpHandlerOptions): Promise<UpdateChannelReadMarkerCommandOutput>;
            updateChannelReadMarker(args: UpdateChannelReadMarkerCommandInput, cb: (err: any, data?: UpdateChannelReadMarkerCommandOutput) => void): void;
            updateChannelReadMarker(args: UpdateChannelReadMarkerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateChannelReadMarkerCommandOutput) => void): void;
            /**
                * <p>Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.</p>
                */
            updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateGlobalSettingsCommandOutput>;
            updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, cb: (err: any, data?: UpdateGlobalSettingsCommandOutput) => void): void;
            updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateGlobalSettingsCommandOutput) => void): void;
            /**
                * <p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p>
                *          <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
                *          <p>Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
                */
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePhoneNumberCommandOutput>;
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, cb: (err: any, data?: UpdatePhoneNumberCommandOutput) => void): void;
            updatePhoneNumber(args: UpdatePhoneNumberCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePhoneNumberCommandOutput) => void): void;
            /**
                * <p>Updates the phone number settings for the administrator's AWS account, such as the default
                *             outbound calling name. You can update the default outbound calling name once every seven
                *             days. Outbound calling names can take up to 72 hours to update.</p>
                */
            updatePhoneNumberSettings(args: UpdatePhoneNumberSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePhoneNumberSettingsCommandOutput>;
            updatePhoneNumberSettings(args: UpdatePhoneNumberSettingsCommandInput, cb: (err: any, data?: UpdatePhoneNumberSettingsCommandOutput) => void): void;
            updatePhoneNumberSettings(args: UpdatePhoneNumberSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePhoneNumberSettingsCommandOutput) => void): void;
            /**
                * <p>Updates the specified proxy session details, such as voice or SMS capabilities.</p>
                */
            updateProxySession(args: UpdateProxySessionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProxySessionCommandOutput>;
            updateProxySession(args: UpdateProxySessionCommandInput, cb: (err: any, data?: UpdateProxySessionCommandOutput) => void): void;
            updateProxySession(args: UpdateProxySessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProxySessionCommandOutput) => void): void;
            /**
                * <p>Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.</p>
                */
            updateRoom(args: UpdateRoomCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoomCommandOutput>;
            updateRoom(args: UpdateRoomCommandInput, cb: (err: any, data?: UpdateRoomCommandOutput) => void): void;
            updateRoom(args: UpdateRoomCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoomCommandOutput) => void): void;
            /**
                * <p>Updates room membership details, such as the member role, for a room in an Amazon Chime
                *             Enterprise account. The member role designates whether the member is a chat room
                *             administrator or a general chat room member. The member role can be updated only for
                *             user IDs.</p>
                */
            updateRoomMembership(args: UpdateRoomMembershipCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRoomMembershipCommandOutput>;
            updateRoomMembership(args: UpdateRoomMembershipCommandInput, cb: (err: any, data?: UpdateRoomMembershipCommandOutput) => void): void;
            updateRoomMembership(args: UpdateRoomMembershipCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRoomMembershipCommandOutput) => void): void;
            /**
                * <p>Updates the details of the specified SIP media application.</p>
                */
            updateSipMediaApplication(args: UpdateSipMediaApplicationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSipMediaApplicationCommandOutput>;
            updateSipMediaApplication(args: UpdateSipMediaApplicationCommandInput, cb: (err: any, data?: UpdateSipMediaApplicationCommandOutput) => void): void;
            updateSipMediaApplication(args: UpdateSipMediaApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSipMediaApplicationCommandOutput) => void): void;
            /**
                * <p>Invokes the AWS Lambda function associated with the SIP media application and transaction ID in an update request. The Lambda function can then return a new set of actions.</p>
                */
            updateSipMediaApplicationCall(args: UpdateSipMediaApplicationCallCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSipMediaApplicationCallCommandOutput>;
            updateSipMediaApplicationCall(args: UpdateSipMediaApplicationCallCommandInput, cb: (err: any, data?: UpdateSipMediaApplicationCallCommandOutput) => void): void;
            updateSipMediaApplicationCall(args: UpdateSipMediaApplicationCallCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSipMediaApplicationCallCommandOutput) => void): void;
            /**
                * <p>Updates the details of the specified SIP rule.</p>
                */
            updateSipRule(args: UpdateSipRuleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSipRuleCommandOutput>;
            updateSipRule(args: UpdateSipRuleCommandInput, cb: (err: any, data?: UpdateSipRuleCommandOutput) => void): void;
            updateSipRule(args: UpdateSipRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSipRuleCommandOutput) => void): void;
            /**
                * <p>Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.</p>
                */
            updateUser(args: UpdateUserCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserCommandOutput>;
            updateUser(args: UpdateUserCommandInput, cb: (err: any, data?: UpdateUserCommandOutput) => void): void;
            updateUser(args: UpdateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserCommandOutput) => void): void;
            /**
                * <p>Updates the settings for the specified user, such as phone number settings.</p>
                */
            updateUserSettings(args: UpdateUserSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateUserSettingsCommandOutput>;
            updateUserSettings(args: UpdateUserSettingsCommandInput, cb: (err: any, data?: UpdateUserSettingsCommandOutput) => void): void;
            updateUserSettings(args: UpdateUserSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateUserSettingsCommandOutput) => void): void;
            /**
                * <p>Updates details for the specified Amazon Chime Voice Connector.</p>
                */
            updateVoiceConnector(args: UpdateVoiceConnectorCommandInput, options?: __HttpHandlerOptions): Promise<UpdateVoiceConnectorCommandOutput>;
            updateVoiceConnector(args: UpdateVoiceConnectorCommandInput, cb: (err: any, data?: UpdateVoiceConnectorCommandOutput) => void): void;
            updateVoiceConnector(args: UpdateVoiceConnectorCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateVoiceConnectorCommandOutput) => void): void;
            /**
                * <p>Updates details of the specified Amazon Chime Voice Connector group, such as the name and
                *             Amazon Chime Voice Connector priority ranking.</p>
                */
            updateVoiceConnectorGroup(args: UpdateVoiceConnectorGroupCommandInput, options?: __HttpHandlerOptions): Promise<UpdateVoiceConnectorGroupCommandOutput>;
            updateVoiceConnectorGroup(args: UpdateVoiceConnectorGroupCommandInput, cb: (err: any, data?: UpdateVoiceConnectorGroupCommandOutput) => void): void;
            updateVoiceConnectorGroup(args: UpdateVoiceConnectorGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateVoiceConnectorGroupCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociatePhoneNumbersWithVoiceConnectorCommandInput, AssociatePhoneNumbersWithVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorCommand";
    import { AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorGroupCommand";
    import { AssociatePhoneNumberWithUserCommandInput, AssociatePhoneNumberWithUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumberWithUserCommand";
    import { AssociateSigninDelegateGroupsWithAccountCommandInput, AssociateSigninDelegateGroupsWithAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociateSigninDelegateGroupsWithAccountCommand";
    import { BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateAttendeeCommand";
    import { BatchCreateChannelMembershipCommandInput, BatchCreateChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateChannelMembershipCommand";
    import { BatchCreateRoomMembershipCommandInput, BatchCreateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateRoomMembershipCommand";
    import { BatchDeletePhoneNumberCommandInput, BatchDeletePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchDeletePhoneNumberCommand";
    import { BatchSuspendUserCommandInput, BatchSuspendUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchSuspendUserCommand";
    import { BatchUnsuspendUserCommandInput, BatchUnsuspendUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUnsuspendUserCommand";
    import { BatchUpdatePhoneNumberCommandInput, BatchUpdatePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdatePhoneNumberCommand";
    import { BatchUpdateUserCommandInput, BatchUpdateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdateUserCommand";
    import { CreateAccountCommandInput, CreateAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAccountCommand";
    import { CreateAppInstanceAdminCommandInput, CreateAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceAdminCommand";
    import { CreateAppInstanceCommandInput, CreateAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceCommand";
    import { CreateAppInstanceUserCommandInput, CreateAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceUserCommand";
    import { CreateAttendeeCommandInput, CreateAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAttendeeCommand";
    import { CreateBotCommandInput, CreateBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateBotCommand";
    import { CreateChannelBanCommandInput, CreateChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelBanCommand";
    import { CreateChannelCommandInput, CreateChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelCommand";
    import { CreateChannelMembershipCommandInput, CreateChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelMembershipCommand";
    import { CreateChannelModeratorCommandInput, CreateChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelModeratorCommand";
    import { CreateMediaCapturePipelineCommandInput, CreateMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMediaCapturePipelineCommand";
    import { CreateMeetingCommandInput, CreateMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingCommand";
    import { CreateMeetingDialOutCommandInput, CreateMeetingDialOutCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingDialOutCommand";
    import { CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingWithAttendeesCommand";
    import { CreatePhoneNumberOrderCommandInput, CreatePhoneNumberOrderCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreatePhoneNumberOrderCommand";
    import { CreateProxySessionCommandInput, CreateProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateProxySessionCommand";
    import { CreateRoomCommandInput, CreateRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomCommand";
    import { CreateRoomMembershipCommandInput, CreateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomMembershipCommand";
    import { CreateSipMediaApplicationCallCommandInput, CreateSipMediaApplicationCallCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCallCommand";
    import { CreateSipMediaApplicationCommandInput, CreateSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCommand";
    import { CreateSipRuleCommandInput, CreateSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipRuleCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateUserCommand";
    import { CreateVoiceConnectorCommandInput, CreateVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorCommand";
    import { CreateVoiceConnectorGroupCommandInput, CreateVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorGroupCommand";
    import { DeleteAccountCommandInput, DeleteAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAccountCommand";
    import { DeleteAppInstanceAdminCommandInput, DeleteAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceAdminCommand";
    import { DeleteAppInstanceCommandInput, DeleteAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceCommand";
    import { DeleteAppInstanceStreamingConfigurationsCommandInput, DeleteAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceStreamingConfigurationsCommand";
    import { DeleteAppInstanceUserCommandInput, DeleteAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceUserCommand";
    import { DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAttendeeCommand";
    import { DeleteChannelBanCommandInput, DeleteChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelBanCommand";
    import { DeleteChannelCommandInput, DeleteChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelCommand";
    import { DeleteChannelMembershipCommandInput, DeleteChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMembershipCommand";
    import { DeleteChannelMessageCommandInput, DeleteChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMessageCommand";
    import { DeleteChannelModeratorCommandInput, DeleteChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelModeratorCommand";
    import { DeleteEventsConfigurationCommandInput, DeleteEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteEventsConfigurationCommand";
    import { DeleteMediaCapturePipelineCommandInput, DeleteMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMediaCapturePipelineCommand";
    import { DeleteMeetingCommandInput, DeleteMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMeetingCommand";
    import { DeletePhoneNumberCommandInput, DeletePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeletePhoneNumberCommand";
    import { DeleteProxySessionCommandInput, DeleteProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteProxySessionCommand";
    import { DeleteRoomCommandInput, DeleteRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomCommand";
    import { DeleteRoomMembershipCommandInput, DeleteRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomMembershipCommand";
    import { DeleteSipMediaApplicationCommandInput, DeleteSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipMediaApplicationCommand";
    import { DeleteSipRuleCommandInput, DeleteSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipRuleCommand";
    import { DeleteVoiceConnectorCommandInput, DeleteVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorCommand";
    import { DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorEmergencyCallingConfigurationCommand";
    import { DeleteVoiceConnectorGroupCommandInput, DeleteVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorGroupCommand";
    import { DeleteVoiceConnectorOriginationCommandInput, DeleteVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorOriginationCommand";
    import { DeleteVoiceConnectorProxyCommandInput, DeleteVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorProxyCommand";
    import { DeleteVoiceConnectorStreamingConfigurationCommandInput, DeleteVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorStreamingConfigurationCommand";
    import { DeleteVoiceConnectorTerminationCommandInput, DeleteVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCommand";
    import { DeleteVoiceConnectorTerminationCredentialsCommandInput, DeleteVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCredentialsCommand";
    import { DescribeAppInstanceAdminCommandInput, DescribeAppInstanceAdminCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceAdminCommand";
    import { DescribeAppInstanceCommandInput, DescribeAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceCommand";
    import { DescribeAppInstanceUserCommandInput, DescribeAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceUserCommand";
    import { DescribeChannelBanCommandInput, DescribeChannelBanCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelBanCommand";
    import { DescribeChannelCommandInput, DescribeChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelCommand";
    import { DescribeChannelMembershipCommandInput, DescribeChannelMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipCommand";
    import { DescribeChannelMembershipForAppInstanceUserCommandInput, DescribeChannelMembershipForAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipForAppInstanceUserCommand";
    import { DescribeChannelModeratedByAppInstanceUserCommandInput, DescribeChannelModeratedByAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratedByAppInstanceUserCommand";
    import { DescribeChannelModeratorCommandInput, DescribeChannelModeratorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratorCommand";
    import { DisassociatePhoneNumberFromUserCommandInput, DisassociatePhoneNumberFromUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumberFromUserCommand";
    import { DisassociatePhoneNumbersFromVoiceConnectorCommandInput, DisassociatePhoneNumbersFromVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorCommand";
    import { DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorGroupCommand";
    import { DisassociateSigninDelegateGroupsFromAccountCommandInput, DisassociateSigninDelegateGroupsFromAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociateSigninDelegateGroupsFromAccountCommand";
    import { GetAccountCommandInput, GetAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountCommand";
    import { GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountSettingsCommand";
    import { GetAppInstanceRetentionSettingsCommandInput, GetAppInstanceRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceRetentionSettingsCommand";
    import { GetAppInstanceStreamingConfigurationsCommandInput, GetAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceStreamingConfigurationsCommand";
    import { GetAttendeeCommandInput, GetAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAttendeeCommand";
    import { GetBotCommandInput, GetBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetBotCommand";
    import { GetChannelMessageCommandInput, GetChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetChannelMessageCommand";
    import { GetEventsConfigurationCommandInput, GetEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetEventsConfigurationCommand";
    import { GetGlobalSettingsCommandInput, GetGlobalSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetGlobalSettingsCommand";
    import { GetMediaCapturePipelineCommandInput, GetMediaCapturePipelineCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMediaCapturePipelineCommand";
    import { GetMeetingCommandInput, GetMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMeetingCommand";
    import { GetMessagingSessionEndpointCommandInput, GetMessagingSessionEndpointCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMessagingSessionEndpointCommand";
    import { GetPhoneNumberCommandInput, GetPhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberCommand";
    import { GetPhoneNumberOrderCommandInput, GetPhoneNumberOrderCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberOrderCommand";
    import { GetPhoneNumberSettingsCommandInput, GetPhoneNumberSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberSettingsCommand";
    import { GetProxySessionCommandInput, GetProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetProxySessionCommand";
    import { GetRetentionSettingsCommandInput, GetRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRetentionSettingsCommand";
    import { GetRoomCommandInput, GetRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRoomCommand";
    import { GetSipMediaApplicationCommandInput, GetSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationCommand";
    import { GetSipMediaApplicationLoggingConfigurationCommandInput, GetSipMediaApplicationLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationLoggingConfigurationCommand";
    import { GetSipRuleCommandInput, GetSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipRuleCommand";
    import { GetUserCommandInput, GetUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserCommand";
    import { GetUserSettingsCommandInput, GetUserSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserSettingsCommand";
    import { GetVoiceConnectorCommandInput, GetVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorCommand";
    import { GetVoiceConnectorEmergencyCallingConfigurationCommandInput, GetVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorEmergencyCallingConfigurationCommand";
    import { GetVoiceConnectorGroupCommandInput, GetVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorGroupCommand";
    import { GetVoiceConnectorLoggingConfigurationCommandInput, GetVoiceConnectorLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorLoggingConfigurationCommand";
    import { GetVoiceConnectorOriginationCommandInput, GetVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorOriginationCommand";
    import { GetVoiceConnectorProxyCommandInput, GetVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorProxyCommand";
    import { GetVoiceConnectorStreamingConfigurationCommandInput, GetVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorStreamingConfigurationCommand";
    import { GetVoiceConnectorTerminationCommandInput, GetVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationCommand";
    import { GetVoiceConnectorTerminationHealthCommandInput, GetVoiceConnectorTerminationHealthCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationHealthCommand";
    import { InviteUsersCommandInput, InviteUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/InviteUsersCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAccountsCommand";
    import { ListAppInstanceAdminsCommandInput, ListAppInstanceAdminsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceAdminsCommand";
    import { ListAppInstancesCommandInput, ListAppInstancesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstancesCommand";
    import { ListAppInstanceUsersCommandInput, ListAppInstanceUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceUsersCommand";
    import { ListAttendeesCommandInput, ListAttendeesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeesCommand";
    import { ListAttendeeTagsCommandInput, ListAttendeeTagsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeeTagsCommand";
    import { ListBotsCommandInput, ListBotsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListBotsCommand";
    import { ListChannelBansCommandInput, ListChannelBansCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelBansCommand";
    import { ListChannelMembershipsCommandInput, ListChannelMembershipsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsCommand";
    import { ListChannelMembershipsForAppInstanceUserCommandInput, ListChannelMembershipsForAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsForAppInstanceUserCommand";
    import { ListChannelMessagesCommandInput, ListChannelMessagesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMessagesCommand";
    import { ListChannelModeratorsCommandInput, ListChannelModeratorsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelModeratorsCommand";
    import { ListChannelsCommandInput, ListChannelsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsCommand";
    import { ListChannelsModeratedByAppInstanceUserCommandInput, ListChannelsModeratedByAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsModeratedByAppInstanceUserCommand";
    import { ListMediaCapturePipelinesCommandInput, ListMediaCapturePipelinesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMediaCapturePipelinesCommand";
    import { ListMeetingsCommandInput, ListMeetingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingsCommand";
    import { ListMeetingTagsCommandInput, ListMeetingTagsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingTagsCommand";
    import { ListPhoneNumberOrdersCommandInput, ListPhoneNumberOrdersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumberOrdersCommand";
    import { ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumbersCommand";
    import { ListProxySessionsCommandInput, ListProxySessionsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListProxySessionsCommand";
    import { ListRoomMembershipsCommandInput, ListRoomMembershipsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomMembershipsCommand";
    import { ListRoomsCommandInput, ListRoomsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomsCommand";
    import { ListSipMediaApplicationsCommandInput, ListSipMediaApplicationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipMediaApplicationsCommand";
    import { ListSipRulesCommandInput, ListSipRulesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipRulesCommand";
    import { ListSupportedPhoneNumberCountriesCommandInput, ListSupportedPhoneNumberCountriesCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSupportedPhoneNumberCountriesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListTagsForResourceCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListUsersCommand";
    import { ListVoiceConnectorGroupsCommandInput, ListVoiceConnectorGroupsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorGroupsCommand";
    import { ListVoiceConnectorsCommandInput, ListVoiceConnectorsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorsCommand";
    import { ListVoiceConnectorTerminationCredentialsCommandInput, ListVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorTerminationCredentialsCommand";
    import { LogoutUserCommandInput, LogoutUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/LogoutUserCommand";
    import { PutAppInstanceRetentionSettingsCommandInput, PutAppInstanceRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceRetentionSettingsCommand";
    import { PutAppInstanceStreamingConfigurationsCommandInput, PutAppInstanceStreamingConfigurationsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceStreamingConfigurationsCommand";
    import { PutEventsConfigurationCommandInput, PutEventsConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutEventsConfigurationCommand";
    import { PutRetentionSettingsCommandInput, PutRetentionSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutRetentionSettingsCommand";
    import { PutSipMediaApplicationLoggingConfigurationCommandInput, PutSipMediaApplicationLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutSipMediaApplicationLoggingConfigurationCommand";
    import { PutVoiceConnectorEmergencyCallingConfigurationCommandInput, PutVoiceConnectorEmergencyCallingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorEmergencyCallingConfigurationCommand";
    import { PutVoiceConnectorLoggingConfigurationCommandInput, PutVoiceConnectorLoggingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorLoggingConfigurationCommand";
    import { PutVoiceConnectorOriginationCommandInput, PutVoiceConnectorOriginationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorOriginationCommand";
    import { PutVoiceConnectorProxyCommandInput, PutVoiceConnectorProxyCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorProxyCommand";
    import { PutVoiceConnectorStreamingConfigurationCommandInput, PutVoiceConnectorStreamingConfigurationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorStreamingConfigurationCommand";
    import { PutVoiceConnectorTerminationCommandInput, PutVoiceConnectorTerminationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCommand";
    import { PutVoiceConnectorTerminationCredentialsCommandInput, PutVoiceConnectorTerminationCredentialsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCredentialsCommand";
    import { RedactChannelMessageCommandInput, RedactChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactChannelMessageCommand";
    import { RedactConversationMessageCommandInput, RedactConversationMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactConversationMessageCommand";
    import { RedactRoomMessageCommandInput, RedactRoomMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactRoomMessageCommand";
    import { RegenerateSecurityTokenCommandInput, RegenerateSecurityTokenCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RegenerateSecurityTokenCommand";
    import { ResetPersonalPINCommandInput, ResetPersonalPINCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ResetPersonalPINCommand";
    import { RestorePhoneNumberCommandInput, RestorePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RestorePhoneNumberCommand";
    import { SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SearchAvailablePhoneNumbersCommand";
    import { SendChannelMessageCommandInput, SendChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SendChannelMessageCommand";
    import { StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StartMeetingTranscriptionCommand";
    import { StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StopMeetingTranscriptionCommand";
    import { TagAttendeeCommandInput, TagAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagAttendeeCommand";
    import { TagMeetingCommandInput, TagMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagMeetingCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagResourceCommand";
    import { UntagAttendeeCommandInput, UntagAttendeeCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagAttendeeCommand";
    import { UntagMeetingCommandInput, UntagMeetingCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagMeetingCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountCommandInput, UpdateAccountCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountCommand";
    import { UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountSettingsCommand";
    import { UpdateAppInstanceCommandInput, UpdateAppInstanceCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceCommand";
    import { UpdateAppInstanceUserCommandInput, UpdateAppInstanceUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceUserCommand";
    import { UpdateBotCommandInput, UpdateBotCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateBotCommand";
    import { UpdateChannelCommandInput, UpdateChannelCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelCommand";
    import { UpdateChannelMessageCommandInput, UpdateChannelMessageCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelMessageCommand";
    import { UpdateChannelReadMarkerCommandInput, UpdateChannelReadMarkerCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelReadMarkerCommand";
    import { UpdateGlobalSettingsCommandInput, UpdateGlobalSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateGlobalSettingsCommand";
    import { UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberCommand";
    import { UpdatePhoneNumberSettingsCommandInput, UpdatePhoneNumberSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberSettingsCommand";
    import { UpdateProxySessionCommandInput, UpdateProxySessionCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateProxySessionCommand";
    import { UpdateRoomCommandInput, UpdateRoomCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomCommand";
    import { UpdateRoomMembershipCommandInput, UpdateRoomMembershipCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomMembershipCommand";
    import { UpdateSipMediaApplicationCallCommandInput, UpdateSipMediaApplicationCallCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCallCommand";
    import { UpdateSipMediaApplicationCommandInput, UpdateSipMediaApplicationCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCommand";
    import { UpdateSipRuleCommandInput, UpdateSipRuleCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipRuleCommand";
    import { UpdateUserCommandInput, UpdateUserCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserCommand";
    import { UpdateUserSettingsCommandInput, UpdateUserSettingsCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserSettingsCommand";
    import { UpdateVoiceConnectorCommandInput, UpdateVoiceConnectorCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorCommand";
    import { UpdateVoiceConnectorGroupCommandInput, UpdateVoiceConnectorGroupCommandOutput } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorGroupCommand";
    export type ServiceInputTypes = AssociatePhoneNumberWithUserCommandInput | AssociatePhoneNumbersWithVoiceConnectorCommandInput | AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput | AssociateSigninDelegateGroupsWithAccountCommandInput | BatchCreateAttendeeCommandInput | BatchCreateChannelMembershipCommandInput | BatchCreateRoomMembershipCommandInput | BatchDeletePhoneNumberCommandInput | BatchSuspendUserCommandInput | BatchUnsuspendUserCommandInput | BatchUpdatePhoneNumberCommandInput | BatchUpdateUserCommandInput | CreateAccountCommandInput | CreateAppInstanceAdminCommandInput | CreateAppInstanceCommandInput | CreateAppInstanceUserCommandInput | CreateAttendeeCommandInput | CreateBotCommandInput | CreateChannelBanCommandInput | CreateChannelCommandInput | CreateChannelMembershipCommandInput | CreateChannelModeratorCommandInput | CreateMediaCapturePipelineCommandInput | CreateMeetingCommandInput | CreateMeetingDialOutCommandInput | CreateMeetingWithAttendeesCommandInput | CreatePhoneNumberOrderCommandInput | CreateProxySessionCommandInput | CreateRoomCommandInput | CreateRoomMembershipCommandInput | CreateSipMediaApplicationCallCommandInput | CreateSipMediaApplicationCommandInput | CreateSipRuleCommandInput | CreateUserCommandInput | CreateVoiceConnectorCommandInput | CreateVoiceConnectorGroupCommandInput | DeleteAccountCommandInput | DeleteAppInstanceAdminCommandInput | DeleteAppInstanceCommandInput | DeleteAppInstanceStreamingConfigurationsCommandInput | DeleteAppInstanceUserCommandInput | DeleteAttendeeCommandInput | DeleteChannelBanCommandInput | DeleteChannelCommandInput | DeleteChannelMembershipCommandInput | DeleteChannelMessageCommandInput | DeleteChannelModeratorCommandInput | DeleteEventsConfigurationCommandInput | DeleteMediaCapturePipelineCommandInput | DeleteMeetingCommandInput | DeletePhoneNumberCommandInput | DeleteProxySessionCommandInput | DeleteRoomCommandInput | DeleteRoomMembershipCommandInput | DeleteSipMediaApplicationCommandInput | DeleteSipRuleCommandInput | DeleteVoiceConnectorCommandInput | DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput | DeleteVoiceConnectorGroupCommandInput | DeleteVoiceConnectorOriginationCommandInput | DeleteVoiceConnectorProxyCommandInput | DeleteVoiceConnectorStreamingConfigurationCommandInput | DeleteVoiceConnectorTerminationCommandInput | DeleteVoiceConnectorTerminationCredentialsCommandInput | DescribeAppInstanceAdminCommandInput | DescribeAppInstanceCommandInput | DescribeAppInstanceUserCommandInput | DescribeChannelBanCommandInput | DescribeChannelCommandInput | DescribeChannelMembershipCommandInput | DescribeChannelMembershipForAppInstanceUserCommandInput | DescribeChannelModeratedByAppInstanceUserCommandInput | DescribeChannelModeratorCommandInput | DisassociatePhoneNumberFromUserCommandInput | DisassociatePhoneNumbersFromVoiceConnectorCommandInput | DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput | DisassociateSigninDelegateGroupsFromAccountCommandInput | GetAccountCommandInput | GetAccountSettingsCommandInput | GetAppInstanceRetentionSettingsCommandInput | GetAppInstanceStreamingConfigurationsCommandInput | GetAttendeeCommandInput | GetBotCommandInput | GetChannelMessageCommandInput | GetEventsConfigurationCommandInput | GetGlobalSettingsCommandInput | GetMediaCapturePipelineCommandInput | GetMeetingCommandInput | GetMessagingSessionEndpointCommandInput | GetPhoneNumberCommandInput | GetPhoneNumberOrderCommandInput | GetPhoneNumberSettingsCommandInput | GetProxySessionCommandInput | GetRetentionSettingsCommandInput | GetRoomCommandInput | GetSipMediaApplicationCommandInput | GetSipMediaApplicationLoggingConfigurationCommandInput | GetSipRuleCommandInput | GetUserCommandInput | GetUserSettingsCommandInput | GetVoiceConnectorCommandInput | GetVoiceConnectorEmergencyCallingConfigurationCommandInput | GetVoiceConnectorGroupCommandInput | GetVoiceConnectorLoggingConfigurationCommandInput | GetVoiceConnectorOriginationCommandInput | GetVoiceConnectorProxyCommandInput | GetVoiceConnectorStreamingConfigurationCommandInput | GetVoiceConnectorTerminationCommandInput | GetVoiceConnectorTerminationHealthCommandInput | InviteUsersCommandInput | ListAccountsCommandInput | ListAppInstanceAdminsCommandInput | ListAppInstanceUsersCommandInput | ListAppInstancesCommandInput | ListAttendeeTagsCommandInput | ListAttendeesCommandInput | ListBotsCommandInput | ListChannelBansCommandInput | ListChannelMembershipsCommandInput | ListChannelMembershipsForAppInstanceUserCommandInput | ListChannelMessagesCommandInput | ListChannelModeratorsCommandInput | ListChannelsCommandInput | ListChannelsModeratedByAppInstanceUserCommandInput | ListMediaCapturePipelinesCommandInput | ListMeetingTagsCommandInput | ListMeetingsCommandInput | ListPhoneNumberOrdersCommandInput | ListPhoneNumbersCommandInput | ListProxySessionsCommandInput | ListRoomMembershipsCommandInput | ListRoomsCommandInput | ListSipMediaApplicationsCommandInput | ListSipRulesCommandInput | ListSupportedPhoneNumberCountriesCommandInput | ListTagsForResourceCommandInput | ListUsersCommandInput | ListVoiceConnectorGroupsCommandInput | ListVoiceConnectorTerminationCredentialsCommandInput | ListVoiceConnectorsCommandInput | LogoutUserCommandInput | PutAppInstanceRetentionSettingsCommandInput | PutAppInstanceStreamingConfigurationsCommandInput | PutEventsConfigurationCommandInput | PutRetentionSettingsCommandInput | PutSipMediaApplicationLoggingConfigurationCommandInput | PutVoiceConnectorEmergencyCallingConfigurationCommandInput | PutVoiceConnectorLoggingConfigurationCommandInput | PutVoiceConnectorOriginationCommandInput | PutVoiceConnectorProxyCommandInput | PutVoiceConnectorStreamingConfigurationCommandInput | PutVoiceConnectorTerminationCommandInput | PutVoiceConnectorTerminationCredentialsCommandInput | RedactChannelMessageCommandInput | RedactConversationMessageCommandInput | RedactRoomMessageCommandInput | RegenerateSecurityTokenCommandInput | ResetPersonalPINCommandInput | RestorePhoneNumberCommandInput | SearchAvailablePhoneNumbersCommandInput | SendChannelMessageCommandInput | StartMeetingTranscriptionCommandInput | StopMeetingTranscriptionCommandInput | TagAttendeeCommandInput | TagMeetingCommandInput | TagResourceCommandInput | UntagAttendeeCommandInput | UntagMeetingCommandInput | UntagResourceCommandInput | UpdateAccountCommandInput | UpdateAccountSettingsCommandInput | UpdateAppInstanceCommandInput | UpdateAppInstanceUserCommandInput | UpdateBotCommandInput | UpdateChannelCommandInput | UpdateChannelMessageCommandInput | UpdateChannelReadMarkerCommandInput | UpdateGlobalSettingsCommandInput | UpdatePhoneNumberCommandInput | UpdatePhoneNumberSettingsCommandInput | UpdateProxySessionCommandInput | UpdateRoomCommandInput | UpdateRoomMembershipCommandInput | UpdateSipMediaApplicationCallCommandInput | UpdateSipMediaApplicationCommandInput | UpdateSipRuleCommandInput | UpdateUserCommandInput | UpdateUserSettingsCommandInput | UpdateVoiceConnectorCommandInput | UpdateVoiceConnectorGroupCommandInput;
    export type ServiceOutputTypes = AssociatePhoneNumberWithUserCommandOutput | AssociatePhoneNumbersWithVoiceConnectorCommandOutput | AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput | AssociateSigninDelegateGroupsWithAccountCommandOutput | BatchCreateAttendeeCommandOutput | BatchCreateChannelMembershipCommandOutput | BatchCreateRoomMembershipCommandOutput | BatchDeletePhoneNumberCommandOutput | BatchSuspendUserCommandOutput | BatchUnsuspendUserCommandOutput | BatchUpdatePhoneNumberCommandOutput | BatchUpdateUserCommandOutput | CreateAccountCommandOutput | CreateAppInstanceAdminCommandOutput | CreateAppInstanceCommandOutput | CreateAppInstanceUserCommandOutput | CreateAttendeeCommandOutput | CreateBotCommandOutput | CreateChannelBanCommandOutput | CreateChannelCommandOutput | CreateChannelMembershipCommandOutput | CreateChannelModeratorCommandOutput | CreateMediaCapturePipelineCommandOutput | CreateMeetingCommandOutput | CreateMeetingDialOutCommandOutput | CreateMeetingWithAttendeesCommandOutput | CreatePhoneNumberOrderCommandOutput | CreateProxySessionCommandOutput | CreateRoomCommandOutput | CreateRoomMembershipCommandOutput | CreateSipMediaApplicationCallCommandOutput | CreateSipMediaApplicationCommandOutput | CreateSipRuleCommandOutput | CreateUserCommandOutput | CreateVoiceConnectorCommandOutput | CreateVoiceConnectorGroupCommandOutput | DeleteAccountCommandOutput | DeleteAppInstanceAdminCommandOutput | DeleteAppInstanceCommandOutput | DeleteAppInstanceStreamingConfigurationsCommandOutput | DeleteAppInstanceUserCommandOutput | DeleteAttendeeCommandOutput | DeleteChannelBanCommandOutput | DeleteChannelCommandOutput | DeleteChannelMembershipCommandOutput | DeleteChannelMessageCommandOutput | DeleteChannelModeratorCommandOutput | DeleteEventsConfigurationCommandOutput | DeleteMediaCapturePipelineCommandOutput | DeleteMeetingCommandOutput | DeletePhoneNumberCommandOutput | DeleteProxySessionCommandOutput | DeleteRoomCommandOutput | DeleteRoomMembershipCommandOutput | DeleteSipMediaApplicationCommandOutput | DeleteSipRuleCommandOutput | DeleteVoiceConnectorCommandOutput | DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput | DeleteVoiceConnectorGroupCommandOutput | DeleteVoiceConnectorOriginationCommandOutput | DeleteVoiceConnectorProxyCommandOutput | DeleteVoiceConnectorStreamingConfigurationCommandOutput | DeleteVoiceConnectorTerminationCommandOutput | DeleteVoiceConnectorTerminationCredentialsCommandOutput | DescribeAppInstanceAdminCommandOutput | DescribeAppInstanceCommandOutput | DescribeAppInstanceUserCommandOutput | DescribeChannelBanCommandOutput | DescribeChannelCommandOutput | DescribeChannelMembershipCommandOutput | DescribeChannelMembershipForAppInstanceUserCommandOutput | DescribeChannelModeratedByAppInstanceUserCommandOutput | DescribeChannelModeratorCommandOutput | DisassociatePhoneNumberFromUserCommandOutput | DisassociatePhoneNumbersFromVoiceConnectorCommandOutput | DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput | DisassociateSigninDelegateGroupsFromAccountCommandOutput | GetAccountCommandOutput | GetAccountSettingsCommandOutput | GetAppInstanceRetentionSettingsCommandOutput | GetAppInstanceStreamingConfigurationsCommandOutput | GetAttendeeCommandOutput | GetBotCommandOutput | GetChannelMessageCommandOutput | GetEventsConfigurationCommandOutput | GetGlobalSettingsCommandOutput | GetMediaCapturePipelineCommandOutput | GetMeetingCommandOutput | GetMessagingSessionEndpointCommandOutput | GetPhoneNumberCommandOutput | GetPhoneNumberOrderCommandOutput | GetPhoneNumberSettingsCommandOutput | GetProxySessionCommandOutput | GetRetentionSettingsCommandOutput | GetRoomCommandOutput | GetSipMediaApplicationCommandOutput | GetSipMediaApplicationLoggingConfigurationCommandOutput | GetSipRuleCommandOutput | GetUserCommandOutput | GetUserSettingsCommandOutput | GetVoiceConnectorCommandOutput | GetVoiceConnectorEmergencyCallingConfigurationCommandOutput | GetVoiceConnectorGroupCommandOutput | GetVoiceConnectorLoggingConfigurationCommandOutput | GetVoiceConnectorOriginationCommandOutput | GetVoiceConnectorProxyCommandOutput | GetVoiceConnectorStreamingConfigurationCommandOutput | GetVoiceConnectorTerminationCommandOutput | GetVoiceConnectorTerminationHealthCommandOutput | InviteUsersCommandOutput | ListAccountsCommandOutput | ListAppInstanceAdminsCommandOutput | ListAppInstanceUsersCommandOutput | ListAppInstancesCommandOutput | ListAttendeeTagsCommandOutput | ListAttendeesCommandOutput | ListBotsCommandOutput | ListChannelBansCommandOutput | ListChannelMembershipsCommandOutput | ListChannelMembershipsForAppInstanceUserCommandOutput | ListChannelMessagesCommandOutput | ListChannelModeratorsCommandOutput | ListChannelsCommandOutput | ListChannelsModeratedByAppInstanceUserCommandOutput | ListMediaCapturePipelinesCommandOutput | ListMeetingTagsCommandOutput | ListMeetingsCommandOutput | ListPhoneNumberOrdersCommandOutput | ListPhoneNumbersCommandOutput | ListProxySessionsCommandOutput | ListRoomMembershipsCommandOutput | ListRoomsCommandOutput | ListSipMediaApplicationsCommandOutput | ListSipRulesCommandOutput | ListSupportedPhoneNumberCountriesCommandOutput | ListTagsForResourceCommandOutput | ListUsersCommandOutput | ListVoiceConnectorGroupsCommandOutput | ListVoiceConnectorTerminationCredentialsCommandOutput | ListVoiceConnectorsCommandOutput | LogoutUserCommandOutput | PutAppInstanceRetentionSettingsCommandOutput | PutAppInstanceStreamingConfigurationsCommandOutput | PutEventsConfigurationCommandOutput | PutRetentionSettingsCommandOutput | PutSipMediaApplicationLoggingConfigurationCommandOutput | PutVoiceConnectorEmergencyCallingConfigurationCommandOutput | PutVoiceConnectorLoggingConfigurationCommandOutput | PutVoiceConnectorOriginationCommandOutput | PutVoiceConnectorProxyCommandOutput | PutVoiceConnectorStreamingConfigurationCommandOutput | PutVoiceConnectorTerminationCommandOutput | PutVoiceConnectorTerminationCredentialsCommandOutput | RedactChannelMessageCommandOutput | RedactConversationMessageCommandOutput | RedactRoomMessageCommandOutput | RegenerateSecurityTokenCommandOutput | ResetPersonalPINCommandOutput | RestorePhoneNumberCommandOutput | SearchAvailablePhoneNumbersCommandOutput | SendChannelMessageCommandOutput | StartMeetingTranscriptionCommandOutput | StopMeetingTranscriptionCommandOutput | TagAttendeeCommandOutput | TagMeetingCommandOutput | TagResourceCommandOutput | UntagAttendeeCommandOutput | UntagMeetingCommandOutput | UntagResourceCommandOutput | UpdateAccountCommandOutput | UpdateAccountSettingsCommandOutput | UpdateAppInstanceCommandOutput | UpdateAppInstanceUserCommandOutput | UpdateBotCommandOutput | UpdateChannelCommandOutput | UpdateChannelMessageCommandOutput | UpdateChannelReadMarkerCommandOutput | UpdateGlobalSettingsCommandOutput | UpdatePhoneNumberCommandOutput | UpdatePhoneNumberSettingsCommandOutput | UpdateProxySessionCommandOutput | UpdateRoomCommandOutput | UpdateRoomMembershipCommandOutput | UpdateSipMediaApplicationCallCommandOutput | UpdateSipMediaApplicationCommandOutput | UpdateSipRuleCommandOutput | UpdateUserCommandOutput | UpdateUserSettingsCommandOutput | UpdateVoiceConnectorCommandOutput | UpdateVoiceConnectorGroupCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ChimeClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ChimeClient class constructor that set the region, credentials and other options.
        */
    export interface ChimeClientConfig extends ChimeClientConfigType {
    }
    type ChimeClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ChimeClient class. This is resolved and normalized from the {@link ChimeClientConfig | constructor configuration interface}.
        */
    export interface ChimeClientResolvedConfig extends ChimeClientResolvedConfigType {
    }
    /**
        * <p>The Amazon Chime API (application programming interface) is designed for developers to
        *             perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice
        *             Connectors. This guide provides detailed information about the Amazon Chime API,
        *             including operations, types, inputs and outputs, and error codes. It also includes API actions for use with the Amazon Chime SDK, which developers use to build their own communication applications. For more information about the
        *             Amazon Chime SDK, see <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">
        *                 Using the Amazon Chime SDK
        *             </a> in the <i>Amazon Chime Developer Guide</i>.</p>
        *          <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the
        *     AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p>
        *          <dl>
        *             <dt>Using an AWS SDK</dt>
        *             <dd>
        *                <p>
        * You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the
        * <a href="http://aws.amazon.com/developer/">AWS Developer Center</a>.
        * </p>
        *             </dd>
        *             <dt>Using the AWS CLI</dt>
        *             <dd>
        *                <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see
        * <a href="https://docs.aws.amazon.com/cli/latest/userguide/installing.html">Installing the AWS Command Line Interface</a>
        * in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the
        * <a href="https://docs.aws.amazon.com/cli/latest/reference/chime/index.html">Amazon Chime commands</a> in the
        *     <i>AWS CLI Command Reference</i>.
        * </p>
        *             </dd>
        *             <dt>Using REST APIs</dt>
        *             <dd>
        *                <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see
        * <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>
        * in the <i>Amazon Web Services General Reference</i>.</p>
        *
        *                <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p>
        *             </dd>
        *          </dl>
        *
        *          <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see
        * <a href="https://docs.aws.amazon.com/chime/latest/ag/security-iam.html">Identity and Access Management for Amazon Chime</a>
        * in the <i>Amazon Chime Administration Guide</i>.</p>
        */
    export class ChimeClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ChimeClientResolvedConfig> {
            /**
                * The resolved configuration of ChimeClient class. This is resolved and normalized from the {@link ChimeClientConfig | constructor configuration interface}.
                */
            readonly config: ChimeClientResolvedConfig;
            constructor(configuration: ChimeClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { AssociatePhoneNumbersWithVoiceConnectorRequest, AssociatePhoneNumbersWithVoiceConnectorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface AssociatePhoneNumbersWithVoiceConnectorCommandInput extends AssociatePhoneNumbersWithVoiceConnectorRequest {
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorCommandOutput extends AssociatePhoneNumbersWithVoiceConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Associates phone numbers with the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, AssociatePhoneNumbersWithVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, AssociatePhoneNumbersWithVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new AssociatePhoneNumbersWithVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociatePhoneNumbersWithVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link AssociatePhoneNumbersWithVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class AssociatePhoneNumbersWithVoiceConnectorCommand extends $Command<AssociatePhoneNumbersWithVoiceConnectorCommandInput, AssociatePhoneNumbersWithVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: AssociatePhoneNumbersWithVoiceConnectorCommandInput;
            constructor(input: AssociatePhoneNumbersWithVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociatePhoneNumbersWithVoiceConnectorCommandInput, AssociatePhoneNumbersWithVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumbersWithVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { AssociatePhoneNumbersWithVoiceConnectorGroupRequest, AssociatePhoneNumbersWithVoiceConnectorGroupResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput extends AssociatePhoneNumbersWithVoiceConnectorGroupRequest {
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput extends AssociatePhoneNumbersWithVoiceConnectorGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Associates phone numbers with the specified Amazon Chime Voice Connector group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, AssociatePhoneNumbersWithVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, AssociatePhoneNumbersWithVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new AssociatePhoneNumbersWithVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class AssociatePhoneNumbersWithVoiceConnectorGroupCommand extends $Command<AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput;
            constructor(input: AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociatePhoneNumbersWithVoiceConnectorGroupCommandInput, AssociatePhoneNumbersWithVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociatePhoneNumberWithUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { AssociatePhoneNumberWithUserRequest, AssociatePhoneNumberWithUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface AssociatePhoneNumberWithUserCommandInput extends AssociatePhoneNumberWithUserRequest {
    }
    export interface AssociatePhoneNumberWithUserCommandOutput extends AssociatePhoneNumberWithUserResponse, __MetadataBearer {
    }
    /**
        * <p>Associates a phone number with the specified Amazon Chime user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, AssociatePhoneNumberWithUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, AssociatePhoneNumberWithUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new AssociatePhoneNumberWithUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociatePhoneNumberWithUserCommandInput} for command's `input` shape.
        * @see {@link AssociatePhoneNumberWithUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class AssociatePhoneNumberWithUserCommand extends $Command<AssociatePhoneNumberWithUserCommandInput, AssociatePhoneNumberWithUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: AssociatePhoneNumberWithUserCommandInput;
            constructor(input: AssociatePhoneNumberWithUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociatePhoneNumberWithUserCommandInput, AssociatePhoneNumberWithUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/AssociateSigninDelegateGroupsWithAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { AssociateSigninDelegateGroupsWithAccountRequest, AssociateSigninDelegateGroupsWithAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface AssociateSigninDelegateGroupsWithAccountCommandInput extends AssociateSigninDelegateGroupsWithAccountRequest {
    }
    export interface AssociateSigninDelegateGroupsWithAccountCommandOutput extends AssociateSigninDelegateGroupsWithAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Associates the specified sign-in delegate groups with the specified Amazon Chime account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, AssociateSigninDelegateGroupsWithAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, AssociateSigninDelegateGroupsWithAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new AssociateSigninDelegateGroupsWithAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateSigninDelegateGroupsWithAccountCommandInput} for command's `input` shape.
        * @see {@link AssociateSigninDelegateGroupsWithAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class AssociateSigninDelegateGroupsWithAccountCommand extends $Command<AssociateSigninDelegateGroupsWithAccountCommandInput, AssociateSigninDelegateGroupsWithAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: AssociateSigninDelegateGroupsWithAccountCommandInput;
            constructor(input: AssociateSigninDelegateGroupsWithAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateSigninDelegateGroupsWithAccountCommandInput, AssociateSigninDelegateGroupsWithAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchCreateAttendeeRequest, BatchCreateAttendeeResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchCreateAttendeeCommandInput extends BatchCreateAttendeeRequest {
    }
    export interface BatchCreateAttendeeCommandOutput extends BatchCreateAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchCreateAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchCreateAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchCreateAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchCreateAttendeeCommandInput} for command's `input` shape.
        * @see {@link BatchCreateAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchCreateAttendeeCommand extends $Command<BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchCreateAttendeeCommandInput;
            constructor(input: BatchCreateAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchCreateAttendeeCommandInput, BatchCreateAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateChannelMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchCreateChannelMembershipRequest, BatchCreateChannelMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchCreateChannelMembershipCommandInput extends BatchCreateChannelMembershipRequest {
    }
    export interface BatchCreateChannelMembershipCommandOutput extends BatchCreateChannelMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a specified number of users to a channel.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchCreateChannelMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchCreateChannelMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchCreateChannelMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchCreateChannelMembershipCommandInput} for command's `input` shape.
        * @see {@link BatchCreateChannelMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchCreateChannelMembershipCommand extends $Command<BatchCreateChannelMembershipCommandInput, BatchCreateChannelMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchCreateChannelMembershipCommandInput;
            constructor(input: BatchCreateChannelMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchCreateChannelMembershipCommandInput, BatchCreateChannelMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchCreateRoomMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchCreateRoomMembershipRequest, BatchCreateRoomMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchCreateRoomMembershipCommandInput extends BatchCreateRoomMembershipRequest {
    }
    export interface BatchCreateRoomMembershipCommandOutput extends BatchCreateRoomMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchCreateRoomMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchCreateRoomMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchCreateRoomMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchCreateRoomMembershipCommandInput} for command's `input` shape.
        * @see {@link BatchCreateRoomMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchCreateRoomMembershipCommand extends $Command<BatchCreateRoomMembershipCommandInput, BatchCreateRoomMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchCreateRoomMembershipCommandInput;
            constructor(input: BatchCreateRoomMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchCreateRoomMembershipCommandInput, BatchCreateRoomMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchDeletePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchDeletePhoneNumberRequest, BatchDeletePhoneNumberResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchDeletePhoneNumberCommandInput extends BatchDeletePhoneNumberRequest {
    }
    export interface BatchDeletePhoneNumberCommandOutput extends BatchDeletePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Moves phone numbers into the
        * <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted.
        * </p>
        *
        *          <p>
        * Phone numbers remain in the
        * <b>Deletion queue</b> for 7 days before they are deleted permanently.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchDeletePhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchDeletePhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchDeletePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchDeletePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link BatchDeletePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchDeletePhoneNumberCommand extends $Command<BatchDeletePhoneNumberCommandInput, BatchDeletePhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchDeletePhoneNumberCommandInput;
            constructor(input: BatchDeletePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchDeletePhoneNumberCommandInput, BatchDeletePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchSuspendUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchSuspendUserRequest, BatchSuspendUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchSuspendUserCommandInput extends BatchSuspendUserRequest {
    }
    export interface BatchSuspendUserCommandOutput extends BatchSuspendUserResponse, __MetadataBearer {
    }
    /**
        * <p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime
        *             account. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration
        *                 Guide</i>.</p>
        *
        *          <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they
        *             can continue to use Amazon Chime as free users. To remove the suspension from suspended
        *                 <code>Team</code> account users, invite them to the <code>Team</code> account again.
        *             You can use the <a>InviteUsers</a> action to do so.</p>
        *
        *          <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of
        *             Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action.</p>
        *
        *          <p>
        * To sign out users without suspending them, use the
        * <a>LogoutUser</a>
        * action.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchSuspendUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchSuspendUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchSuspendUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchSuspendUserCommandInput} for command's `input` shape.
        * @see {@link BatchSuspendUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchSuspendUserCommand extends $Command<BatchSuspendUserCommandInput, BatchSuspendUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchSuspendUserCommandInput;
            constructor(input: BatchSuspendUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchSuspendUserCommandInput, BatchSuspendUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUnsuspendUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchUnsuspendUserRequest, BatchUnsuspendUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchUnsuspendUserCommandInput extends BatchUnsuspendUserRequest {
    }
    export interface BatchUnsuspendUserCommandOutput extends BatchUnsuspendUserResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the suspension from up to 50 previously suspended users for the specified Amazon
        *             Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code>
        *             accounts can be unsuspended using this action. For more information about different account types, see
        *     <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">
        *         Managing Your Amazon Chime Accounts
        *     </a> in the account types, in the <i>Amazon Chime Administration Guide</i>.
        * </p>
        *
        *          <p>
        * Previously suspended users who are unsuspended using this action are returned to
        * <code>Registered</code>
        * status. Users who are not previously suspended are ignored.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchUnsuspendUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchUnsuspendUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchUnsuspendUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchUnsuspendUserCommandInput} for command's `input` shape.
        * @see {@link BatchUnsuspendUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchUnsuspendUserCommand extends $Command<BatchUnsuspendUserCommandInput, BatchUnsuspendUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchUnsuspendUserCommandInput;
            constructor(input: BatchUnsuspendUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchUnsuspendUserCommandInput, BatchUnsuspendUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdatePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchUpdatePhoneNumberRequest, BatchUpdatePhoneNumberResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchUpdatePhoneNumberCommandInput extends BatchUpdatePhoneNumberRequest {
    }
    export interface BatchUpdatePhoneNumberCommandOutput extends BatchUpdatePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update the product type or the calling name.</p>
        *          <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
        *          <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchUpdatePhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchUpdatePhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchUpdatePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchUpdatePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link BatchUpdatePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchUpdatePhoneNumberCommand extends $Command<BatchUpdatePhoneNumberCommandInput, BatchUpdatePhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchUpdatePhoneNumberCommandInput;
            constructor(input: BatchUpdatePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchUpdatePhoneNumberCommandInput, BatchUpdatePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/BatchUpdateUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { BatchUpdateUserRequest, BatchUpdateUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface BatchUpdateUserCommandInput extends BatchUpdateUserRequest {
    }
    export interface BatchUpdateUserCommandOutput extends BatchUpdateUserResponse, __MetadataBearer {
    }
    /**
        * <p>Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, BatchUpdateUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, BatchUpdateUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new BatchUpdateUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchUpdateUserCommandInput} for command's `input` shape.
        * @see {@link BatchUpdateUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class BatchUpdateUserCommand extends $Command<BatchUpdateUserCommandInput, BatchUpdateUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: BatchUpdateUserCommandInput;
            constructor(input: BatchUpdateUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchUpdateUserCommandInput, BatchUpdateUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateAccountRequest, CreateAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateAccountCommandInput extends CreateAccountRequest {
    }
    export interface CreateAccountCommandOutput extends CreateAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code>
        *             account types are currently supported for this action. For more information about different account types, see
        *     <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAccountCommandInput} for command's `input` shape.
        * @see {@link CreateAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateAccountCommand extends $Command<CreateAccountCommandInput, CreateAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateAccountCommandInput;
            constructor(input: CreateAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAccountCommandInput, CreateAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceAdminCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateAppInstanceAdminRequest, CreateAppInstanceAdminResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateAppInstanceAdminCommandInput extends CreateAppInstanceAdminRequest {
    }
    export interface CreateAppInstanceAdminCommandOutput extends CreateAppInstanceAdminResponse, __MetadataBearer {
    }
    /**
        * <p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions.
        * </p>
        *
        *          <ul>
        *             <li>
        *                <p>
        *                   <code>ChannelModerator</code> actions across all channels in the <code>AppInstance</code>.</p>
        *             </li>
        *             <li>
        *                <p>
        *                   <code>DeleteChannelMessage</code> actions.</p>
        *             </li>
        *          </ul>
        *
        *          <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateAppInstanceAdminCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateAppInstanceAdminCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateAppInstanceAdminCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAppInstanceAdminCommandInput} for command's `input` shape.
        * @see {@link CreateAppInstanceAdminCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateAppInstanceAdminCommand extends $Command<CreateAppInstanceAdminCommandInput, CreateAppInstanceAdminCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateAppInstanceAdminCommandInput;
            constructor(input: CreateAppInstanceAdminCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAppInstanceAdminCommandInput, CreateAppInstanceAdminCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateAppInstanceRequest, CreateAppInstanceResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateAppInstanceCommandInput extends CreateAppInstanceRequest {
    }
    export interface CreateAppInstanceCommandOutput extends CreateAppInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account. Only SDK messaging customers use this API.
        * <code>CreateAppInstance</code> supports idempotency behavior as described in the AWS API Standard.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateAppInstanceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateAppInstanceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateAppInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAppInstanceCommandInput} for command's `input` shape.
        * @see {@link CreateAppInstanceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateAppInstanceCommand extends $Command<CreateAppInstanceCommandInput, CreateAppInstanceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateAppInstanceCommandInput;
            constructor(input: CreateAppInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAppInstanceCommandInput, CreateAppInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateAppInstanceUserRequest, CreateAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateAppInstanceUserCommandInput extends CreateAppInstanceUserRequest {
    }
    export interface CreateAppInstanceUserCommandOutput extends CreateAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and
        * <code>Name</code> for that user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link CreateAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateAppInstanceUserCommand extends $Command<CreateAppInstanceUserCommandInput, CreateAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateAppInstanceUserCommandInput;
            constructor(input: CreateAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAppInstanceUserCommandInput, CreateAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateAttendeeRequest, CreateAttendeeResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateAttendeeCommandInput extends CreateAttendeeRequest {
    }
    export interface CreateAttendeeCommandOutput extends CreateAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAttendeeCommandInput} for command's `input` shape.
        * @see {@link CreateAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateAttendeeCommand extends $Command<CreateAttendeeCommandInput, CreateAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateAttendeeCommandInput;
            constructor(input: CreateAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAttendeeCommandInput, CreateAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateBotRequest, CreateBotResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateBotCommandInput extends CreateBotRequest {
    }
    export interface CreateBotCommandOutput extends CreateBotResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a bot for an Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateBotCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateBotCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBotCommandInput} for command's `input` shape.
        * @see {@link CreateBotCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateBotCommand extends $Command<CreateBotCommandInput, CreateBotCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateBotCommandInput;
            constructor(input: CreateBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBotCommandInput, CreateBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelBanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateChannelBanRequest, CreateChannelBanResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateChannelBanCommandInput extends CreateChannelBanRequest {
    }
    export interface CreateChannelBanCommandOutput extends CreateChannelBanResponse, __MetadataBearer {
    }
    /**
        * <p>Permanently bans a member from a channel. Moderators can't add banned members to a
        *          channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then
        *             <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or
        *          channels.</p>
        *          <p>If you ban a user who is already part of a channel, that user is automatically kicked
        *          from the channel.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateChannelBanCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateChannelBanCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateChannelBanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateChannelBanCommandInput} for command's `input` shape.
        * @see {@link CreateChannelBanCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateChannelBanCommand extends $Command<CreateChannelBanCommandInput, CreateChannelBanCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateChannelBanCommandInput;
            constructor(input: CreateChannelBanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateChannelBanCommandInput, CreateChannelBanCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateChannelRequest, CreateChannelResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateChannelCommandInput extends CreateChannelRequest {
    }
    export interface CreateChannelCommandOutput extends CreateChannelResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a channel to which you can add users and send messages.</p>
        *
        *          <p>
        *             <b>Restriction</b>: You can't change a channel's
        *          privacy.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateChannelCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateChannelCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateChannelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateChannelCommandInput} for command's `input` shape.
        * @see {@link CreateChannelCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateChannelCommand extends $Command<CreateChannelCommandInput, CreateChannelCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateChannelCommandInput;
            constructor(input: CreateChannelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateChannelCommandInput, CreateChannelCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateChannelMembershipRequest, CreateChannelMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateChannelMembershipCommandInput extends CreateChannelMembershipRequest {
    }
    export interface CreateChannelMembershipCommandOutput extends CreateChannelMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the
        *          request header. A channel member can:</p>
        *
        *          <ul>
        *             <li>
        *                <p>List messages</p>
        *             </li>
        *             <li>
        *                <p>Send messages</p>
        *             </li>
        *             <li>
        *                <p>Receive messages</p>
        *             </li>
        *             <li>
        *                <p>Edit their own messages</p>
        *             </li>
        *             <li>
        *                <p>Leave the channel</p>
        *             </li>
        *          </ul>
        *
        *          <p>Privacy settings impact this action as follows:</p>
        *
        *          <ul>
        *             <li>
        *                <p>Public Channels: You do not need to be a member to list messages, but you must be
        *                a member to send messages.</p>
        *             </li>
        *             <li>
        *                <p>Private Channels: You must be a member to list or send messages.</p>
        *             </li>
        *          </ul>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateChannelMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateChannelMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateChannelMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateChannelMembershipCommandInput} for command's `input` shape.
        * @see {@link CreateChannelMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateChannelMembershipCommand extends $Command<CreateChannelMembershipCommandInput, CreateChannelMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateChannelMembershipCommandInput;
            constructor(input: CreateChannelMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateChannelMembershipCommandInput, CreateChannelMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateChannelModeratorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateChannelModeratorRequest, CreateChannelModeratorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateChannelModeratorCommandInput extends CreateChannelModeratorRequest {
    }
    export interface CreateChannelModeratorCommandOutput extends CreateChannelModeratorResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p>
        *
        *          <ul>
        *             <li>
        *                <p>Add and remove other members of the channel.</p>
        *             </li>
        *             <li>
        *                <p>Add and remove other moderators of the channel.</p>
        *             </li>
        *             <li>
        *                <p>Add and remove user bans for the channel.</p>
        *             </li>
        *             <li>
        *                <p>Redact messages in the channel.</p>
        *             </li>
        *             <li>
        *                <p>List messages in the channel.</p>
        *             </li>
        *          </ul>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateChannelModeratorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateChannelModeratorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateChannelModeratorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateChannelModeratorCommandInput} for command's `input` shape.
        * @see {@link CreateChannelModeratorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateChannelModeratorCommand extends $Command<CreateChannelModeratorCommandInput, CreateChannelModeratorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateChannelModeratorCommandInput;
            constructor(input: CreateChannelModeratorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateChannelModeratorCommandInput, CreateChannelModeratorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMediaCapturePipelineCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateMediaCapturePipelineRequest, CreateMediaCapturePipelineResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateMediaCapturePipelineCommandInput extends CreateMediaCapturePipelineRequest {
    }
    export interface CreateMediaCapturePipelineCommandOutput extends CreateMediaCapturePipelineResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a media capture pipeline.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateMediaCapturePipelineCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateMediaCapturePipelineCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateMediaCapturePipelineCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMediaCapturePipelineCommandInput} for command's `input` shape.
        * @see {@link CreateMediaCapturePipelineCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateMediaCapturePipelineCommand extends $Command<CreateMediaCapturePipelineCommandInput, CreateMediaCapturePipelineCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateMediaCapturePipelineCommandInput;
            constructor(input: CreateMediaCapturePipelineCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMediaCapturePipelineCommandInput, CreateMediaCapturePipelineCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateMeetingRequest, CreateMeetingResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateMeetingCommandInput extends CreateMeetingRequest {
    }
    export interface CreateMeetingCommandOutput extends CreateMeetingResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * . For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * .
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateMeetingCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateMeetingCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMeetingCommandInput} for command's `input` shape.
        * @see {@link CreateMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateMeetingCommand extends $Command<CreateMeetingCommandInput, CreateMeetingCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateMeetingCommandInput;
            constructor(input: CreateMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMeetingCommandInput, CreateMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingDialOutCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateMeetingDialOutRequest, CreateMeetingDialOutResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateMeetingDialOutCommandInput extends CreateMeetingDialOutRequest {
    }
    export interface CreateMeetingDialOutCommandOutput extends CreateMeetingDialOutResponse, __MetadataBearer {
    }
    /**
        * <p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public
        *     switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.</p>
        *
        *          <p>To play welcome audio or implement an interactive voice response (IVR), use the
        * <code>CreateSipMediaApplicationCall</code> action with the corresponding SIP media application ID.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateMeetingDialOutCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateMeetingDialOutCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateMeetingDialOutCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMeetingDialOutCommandInput} for command's `input` shape.
        * @see {@link CreateMeetingDialOutCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateMeetingDialOutCommand extends $Command<CreateMeetingDialOutCommandInput, CreateMeetingDialOutCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateMeetingDialOutCommandInput;
            constructor(input: CreateMeetingDialOutCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMeetingDialOutCommandInput, CreateMeetingDialOutCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateMeetingWithAttendeesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateMeetingWithAttendeesRequest, CreateMeetingWithAttendeesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateMeetingWithAttendeesCommandInput extends CreateMeetingWithAttendeesRequest {
    }
    export interface CreateMeetingWithAttendeesCommandOutput extends CreateMeetingWithAttendeesResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html">Amazon Chime SDK Media Regions</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * . For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * .
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateMeetingWithAttendeesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateMeetingWithAttendeesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateMeetingWithAttendeesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMeetingWithAttendeesCommandInput} for command's `input` shape.
        * @see {@link CreateMeetingWithAttendeesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateMeetingWithAttendeesCommand extends $Command<CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateMeetingWithAttendeesCommandInput;
            constructor(input: CreateMeetingWithAttendeesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMeetingWithAttendeesCommandInput, CreateMeetingWithAttendeesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreatePhoneNumberOrderCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreatePhoneNumberOrderRequest, CreatePhoneNumberOrderResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreatePhoneNumberOrderCommandInput extends CreatePhoneNumberOrderRequest {
    }
    export interface CreatePhoneNumberOrderCommandOutput extends CreatePhoneNumberOrderResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type.
        *         For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreatePhoneNumberOrderCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreatePhoneNumberOrderCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreatePhoneNumberOrderCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePhoneNumberOrderCommandInput} for command's `input` shape.
        * @see {@link CreatePhoneNumberOrderCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreatePhoneNumberOrderCommand extends $Command<CreatePhoneNumberOrderCommandInput, CreatePhoneNumberOrderCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreatePhoneNumberOrderCommandInput;
            constructor(input: CreatePhoneNumberOrderCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePhoneNumberOrderCommandInput, CreatePhoneNumberOrderCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateProxySessionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateProxySessionRequest, CreateProxySessionResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateProxySessionCommandInput extends CreateProxySessionRequest {
    }
    export interface CreateProxySessionCommandOutput extends CreateProxySessionResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateProxySessionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateProxySessionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateProxySessionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProxySessionCommandInput} for command's `input` shape.
        * @see {@link CreateProxySessionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateProxySessionCommand extends $Command<CreateProxySessionCommandInput, CreateProxySessionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateProxySessionCommandInput;
            constructor(input: CreateProxySessionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProxySessionCommandInput, CreateProxySessionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateRoomRequest, CreateRoomResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateRoomCommandInput extends CreateRoomRequest {
    }
    export interface CreateRoomCommandOutput extends CreateRoomResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a chat room for the specified Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateRoomCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateRoomCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateRoomCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRoomCommandInput} for command's `input` shape.
        * @see {@link CreateRoomCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateRoomCommand extends $Command<CreateRoomCommandInput, CreateRoomCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateRoomCommandInput;
            constructor(input: CreateRoomCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRoomCommandInput, CreateRoomCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateRoomMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateRoomMembershipRequest, CreateRoomMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateRoomMembershipCommandInput extends CreateRoomMembershipRequest {
    }
    export interface CreateRoomMembershipCommandOutput extends CreateRoomMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateRoomMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateRoomMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateRoomMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRoomMembershipCommandInput} for command's `input` shape.
        * @see {@link CreateRoomMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateRoomMembershipCommand extends $Command<CreateRoomMembershipCommandInput, CreateRoomMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateRoomMembershipCommandInput;
            constructor(input: CreateRoomMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRoomMembershipCommandInput, CreateRoomMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCallCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateSipMediaApplicationCallRequest, CreateSipMediaApplicationCallResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateSipMediaApplicationCallCommandInput extends CreateSipMediaApplicationCallRequest {
    }
    export interface CreateSipMediaApplicationCallCommandOutput extends CreateSipMediaApplicationCallResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified
        * <code>sipMediaApplicationId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateSipMediaApplicationCallCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateSipMediaApplicationCallCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateSipMediaApplicationCallCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSipMediaApplicationCallCommandInput} for command's `input` shape.
        * @see {@link CreateSipMediaApplicationCallCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateSipMediaApplicationCallCommand extends $Command<CreateSipMediaApplicationCallCommandInput, CreateSipMediaApplicationCallCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateSipMediaApplicationCallCommandInput;
            constructor(input: CreateSipMediaApplicationCallCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSipMediaApplicationCallCommandInput, CreateSipMediaApplicationCallCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipMediaApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateSipMediaApplicationRequest, CreateSipMediaApplicationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateSipMediaApplicationCommandInput extends CreateSipMediaApplicationRequest {
    }
    export interface CreateSipMediaApplicationCommandOutput extends CreateSipMediaApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a SIP media application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateSipMediaApplicationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateSipMediaApplicationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateSipMediaApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSipMediaApplicationCommandInput} for command's `input` shape.
        * @see {@link CreateSipMediaApplicationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateSipMediaApplicationCommand extends $Command<CreateSipMediaApplicationCommandInput, CreateSipMediaApplicationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateSipMediaApplicationCommandInput;
            constructor(input: CreateSipMediaApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSipMediaApplicationCommandInput, CreateSipMediaApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateSipRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateSipRuleRequest, CreateSipRuleResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateSipRuleCommandInput extends CreateSipRuleRequest {
    }
    export interface CreateSipRuleCommandOutput extends CreateSipRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateSipRuleCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateSipRuleCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateSipRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSipRuleCommandInput} for command's `input` shape.
        * @see {@link CreateSipRuleCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateSipRuleCommand extends $Command<CreateSipRuleCommandInput, CreateSipRuleCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateSipRuleCommandInput;
            constructor(input: CreateSipRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSipRuleCommandInput, CreateSipRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateUserRequest, CreateUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateUserCommandInput extends CreateUserRequest {
    }
    export interface CreateUserCommandOutput extends CreateUserResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a user under the specified Amazon Chime account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateUserCommandInput} for command's `input` shape.
        * @see {@link CreateUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateUserCommand extends $Command<CreateUserCommandInput, CreateUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateUserCommandInput;
            constructor(input: CreateUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateUserCommandInput, CreateUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateVoiceConnectorRequest, CreateVoiceConnectorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateVoiceConnectorCommandInput extends CreateVoiceConnectorRequest {
    }
    export interface CreateVoiceConnectorCommandOutput extends CreateVoiceConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p>
        *
        *          <p>
        * Enabling
        * <a>CreateVoiceConnectorRequest$RequireEncryption</a>
        * configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link CreateVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateVoiceConnectorCommand extends $Command<CreateVoiceConnectorCommandInput, CreateVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateVoiceConnectorCommandInput;
            constructor(input: CreateVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVoiceConnectorCommandInput, CreateVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/CreateVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { CreateVoiceConnectorGroupRequest, CreateVoiceConnectorGroupResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface CreateVoiceConnectorGroupCommandInput extends CreateVoiceConnectorGroupRequest {
    }
    export interface CreateVoiceConnectorGroupCommandOutput extends CreateVoiceConnectorGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can
        *             associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by
        *             including <code>VoiceConnectorItems</code> in the request.</p>
        *          <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This
        *             creates a fault tolerant mechanism for fallback in case of availability events.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, CreateVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, CreateVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new CreateVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link CreateVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class CreateVoiceConnectorGroupCommand extends $Command<CreateVoiceConnectorGroupCommandInput, CreateVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: CreateVoiceConnectorGroupCommandInput;
            constructor(input: CreateVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateVoiceConnectorGroupCommandInput, CreateVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAccountRequest, DeleteAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAccountCommandInput extends DeleteAccountRequest {
    }
    export interface DeleteAccountCommandOutput extends DeleteAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Amazon Chime account. You must suspend all users before deleting
        *                 <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action
        *             to dodo.</p>
        *
        *          <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the
        *             claimed domains for your Amazon Chime account before deletion. As soon as you release
        *             the domain, all users under that account are suspended.</p>
        *
        *          <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore
        *             deleted account from your <code>Disabled</code> accounts list, you must contact AWS
        *             Support.</p>
        *
        *          <p>After 90 days, deleted accounts are permanently removed from your
        * <code>Disabled</code> accounts list.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccountCommandInput} for command's `input` shape.
        * @see {@link DeleteAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAccountCommand extends $Command<DeleteAccountCommandInput, DeleteAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAccountCommandInput;
            constructor(input: DeleteAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccountCommandInput, DeleteAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceAdminCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAppInstanceAdminRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAppInstanceAdminCommandInput extends DeleteAppInstanceAdminRequest {
    }
    export interface DeleteAppInstanceAdminCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAppInstanceAdminCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAppInstanceAdminCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAppInstanceAdminCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppInstanceAdminCommandInput} for command's `input` shape.
        * @see {@link DeleteAppInstanceAdminCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAppInstanceAdminCommand extends $Command<DeleteAppInstanceAdminCommandInput, DeleteAppInstanceAdminCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAppInstanceAdminCommandInput;
            constructor(input: DeleteAppInstanceAdminCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppInstanceAdminCommandInput, DeleteAppInstanceAdminCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAppInstanceRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAppInstanceCommandInput extends DeleteAppInstanceRequest {
    }
    export interface DeleteAppInstanceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an <code>AppInstance</code> and all associated data asynchronously.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAppInstanceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAppInstanceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAppInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppInstanceCommandInput} for command's `input` shape.
        * @see {@link DeleteAppInstanceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAppInstanceCommand extends $Command<DeleteAppInstanceCommandInput, DeleteAppInstanceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAppInstanceCommandInput;
            constructor(input: DeleteAppInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppInstanceCommandInput, DeleteAppInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceStreamingConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAppInstanceStreamingConfigurationsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAppInstanceStreamingConfigurationsCommandInput extends DeleteAppInstanceStreamingConfigurationsRequest {
    }
    export interface DeleteAppInstanceStreamingConfigurationsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the streaming configurations of an <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAppInstanceStreamingConfigurationsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAppInstanceStreamingConfigurationsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAppInstanceStreamingConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppInstanceStreamingConfigurationsCommandInput} for command's `input` shape.
        * @see {@link DeleteAppInstanceStreamingConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAppInstanceStreamingConfigurationsCommand extends $Command<DeleteAppInstanceStreamingConfigurationsCommandInput, DeleteAppInstanceStreamingConfigurationsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAppInstanceStreamingConfigurationsCommandInput;
            constructor(input: DeleteAppInstanceStreamingConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppInstanceStreamingConfigurationsCommandInput, DeleteAppInstanceStreamingConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAppInstanceUserRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAppInstanceUserCommandInput extends DeleteAppInstanceUserRequest {
    }
    export interface DeleteAppInstanceUserCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an <code>AppInstanceUser</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link DeleteAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAppInstanceUserCommand extends $Command<DeleteAppInstanceUserCommandInput, DeleteAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAppInstanceUserCommandInput;
            constructor(input: DeleteAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppInstanceUserCommandInput, DeleteAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteAttendeeRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteAttendeeCommandInput extends DeleteAttendeeRequest {
    }
    export interface DeleteAttendeeCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their
        * <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAttendeeCommandInput} for command's `input` shape.
        * @see {@link DeleteAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteAttendeeCommand extends $Command<DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteAttendeeCommandInput;
            constructor(input: DeleteAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAttendeeCommandInput, DeleteAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelBanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteChannelBanRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteChannelBanCommandInput extends DeleteChannelBanRequest {
    }
    export interface DeleteChannelBanCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes a user from a channel's ban list.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteChannelBanCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteChannelBanCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteChannelBanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteChannelBanCommandInput} for command's `input` shape.
        * @see {@link DeleteChannelBanCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteChannelBanCommand extends $Command<DeleteChannelBanCommandInput, DeleteChannelBanCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteChannelBanCommandInput;
            constructor(input: DeleteChannelBanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteChannelBanCommandInput, DeleteChannelBanCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteChannelRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteChannelCommandInput extends DeleteChannelRequest {
    }
    export interface DeleteChannelCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Immediately makes a channel and its memberships inaccessible and marks them for
        *          deletion. This is an irreversible process.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteChannelCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteChannelCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteChannelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteChannelCommandInput} for command's `input` shape.
        * @see {@link DeleteChannelCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteChannelCommand extends $Command<DeleteChannelCommandInput, DeleteChannelCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteChannelCommandInput;
            constructor(input: DeleteChannelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteChannelCommandInput, DeleteChannelCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteChannelMembershipRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteChannelMembershipCommandInput extends DeleteChannelMembershipRequest {
    }
    export interface DeleteChannelMembershipCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes a member from a channel.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteChannelMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteChannelMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteChannelMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteChannelMembershipCommandInput} for command's `input` shape.
        * @see {@link DeleteChannelMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteChannelMembershipCommand extends $Command<DeleteChannelMembershipCommandInput, DeleteChannelMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteChannelMembershipCommandInput;
            constructor(input: DeleteChannelMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteChannelMembershipCommandInput, DeleteChannelMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteChannelMessageRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteChannelMessageCommandInput extends DeleteChannelMessageRequest {
    }
    export interface DeleteChannelMessageCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a channel message. Only admins can perform this action. Deletion makes messages
        *          inaccessible immediately. A background process deletes any revisions created by
        *             <code>UpdateChannelMessage</code>.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteChannelMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteChannelMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteChannelMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteChannelMessageCommandInput} for command's `input` shape.
        * @see {@link DeleteChannelMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteChannelMessageCommand extends $Command<DeleteChannelMessageCommandInput, DeleteChannelMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteChannelMessageCommandInput;
            constructor(input: DeleteChannelMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteChannelMessageCommandInput, DeleteChannelMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteChannelModeratorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteChannelModeratorRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteChannelModeratorCommandInput extends DeleteChannelModeratorRequest {
    }
    export interface DeleteChannelModeratorCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a channel moderator.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteChannelModeratorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteChannelModeratorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteChannelModeratorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteChannelModeratorCommandInput} for command's `input` shape.
        * @see {@link DeleteChannelModeratorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteChannelModeratorCommand extends $Command<DeleteChannelModeratorCommandInput, DeleteChannelModeratorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteChannelModeratorCommandInput;
            constructor(input: DeleteChannelModeratorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteChannelModeratorCommandInput, DeleteChannelModeratorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteEventsConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteEventsConfigurationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteEventsConfigurationCommandInput extends DeleteEventsConfigurationRequest {
    }
    export interface DeleteEventsConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the events configuration that allows a bot to receive outgoing events.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteEventsConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteEventsConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteEventsConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEventsConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteEventsConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteEventsConfigurationCommand extends $Command<DeleteEventsConfigurationCommandInput, DeleteEventsConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteEventsConfigurationCommandInput;
            constructor(input: DeleteEventsConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEventsConfigurationCommandInput, DeleteEventsConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMediaCapturePipelineCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteMediaCapturePipelineRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteMediaCapturePipelineCommandInput extends DeleteMediaCapturePipelineRequest {
    }
    export interface DeleteMediaCapturePipelineCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the media capture pipeline.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteMediaCapturePipelineCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteMediaCapturePipelineCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteMediaCapturePipelineCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMediaCapturePipelineCommandInput} for command's `input` shape.
        * @see {@link DeleteMediaCapturePipelineCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteMediaCapturePipelineCommand extends $Command<DeleteMediaCapturePipelineCommandInput, DeleteMediaCapturePipelineCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteMediaCapturePipelineCommandInput;
            constructor(input: DeleteMediaCapturePipelineCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMediaCapturePipelineCommandInput, DeleteMediaCapturePipelineCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteMeetingRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteMeetingCommandInput extends DeleteMeetingRequest {
    }
    export interface DeleteMeetingCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from
        *     joining the meeting. For more information about the Amazon Chime SDK, see
        *     <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a> in the
        *     <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteMeetingCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteMeetingCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMeetingCommandInput} for command's `input` shape.
        * @see {@link DeleteMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteMeetingCommand extends $Command<DeleteMeetingCommandInput, DeleteMeetingCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteMeetingCommandInput;
            constructor(input: DeleteMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMeetingCommandInput, DeleteMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeletePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeletePhoneNumberRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeletePhoneNumberCommandInput extends DeletePhoneNumberRequest {
    }
    export interface DeletePhoneNumberCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Moves the specified phone number into the <b>Deletion queue</b>. A
        *             phone number must be disassociated from any users or Amazon Chime Voice Connectors
        *             before it can be deleted.</p>
        *
        *          <p>Deleted phone numbers remain in the
        * <b>Deletion queue</b>
        * for 7 days before they are deleted permanently.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeletePhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeletePhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeletePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link DeletePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeletePhoneNumberCommand extends $Command<DeletePhoneNumberCommandInput, DeletePhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeletePhoneNumberCommandInput;
            constructor(input: DeletePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePhoneNumberCommandInput, DeletePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteProxySessionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteProxySessionRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteProxySessionCommandInput extends DeleteProxySessionRequest {
    }
    export interface DeleteProxySessionCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified proxy session from the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteProxySessionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteProxySessionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteProxySessionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProxySessionCommandInput} for command's `input` shape.
        * @see {@link DeleteProxySessionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteProxySessionCommand extends $Command<DeleteProxySessionCommandInput, DeleteProxySessionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteProxySessionCommandInput;
            constructor(input: DeleteProxySessionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProxySessionCommandInput, DeleteProxySessionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteRoomRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteRoomCommandInput extends DeleteRoomRequest {
    }
    export interface DeleteRoomCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a chat room in an Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteRoomCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteRoomCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteRoomCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRoomCommandInput} for command's `input` shape.
        * @see {@link DeleteRoomCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteRoomCommand extends $Command<DeleteRoomCommandInput, DeleteRoomCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteRoomCommandInput;
            constructor(input: DeleteRoomCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRoomCommandInput, DeleteRoomCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteRoomMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteRoomMembershipRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteRoomMembershipCommandInput extends DeleteRoomMembershipRequest {
    }
    export interface DeleteRoomMembershipCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes a member from a chat room in an Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteRoomMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteRoomMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteRoomMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRoomMembershipCommandInput} for command's `input` shape.
        * @see {@link DeleteRoomMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteRoomMembershipCommand extends $Command<DeleteRoomMembershipCommandInput, DeleteRoomMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteRoomMembershipCommandInput;
            constructor(input: DeleteRoomMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRoomMembershipCommandInput, DeleteRoomMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipMediaApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteSipMediaApplicationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteSipMediaApplicationCommandInput extends DeleteSipMediaApplicationRequest {
    }
    export interface DeleteSipMediaApplicationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a SIP media application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteSipMediaApplicationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteSipMediaApplicationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteSipMediaApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSipMediaApplicationCommandInput} for command's `input` shape.
        * @see {@link DeleteSipMediaApplicationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteSipMediaApplicationCommand extends $Command<DeleteSipMediaApplicationCommandInput, DeleteSipMediaApplicationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteSipMediaApplicationCommandInput;
            constructor(input: DeleteSipMediaApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSipMediaApplicationCommandInput, DeleteSipMediaApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteSipRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteSipRuleRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteSipRuleCommandInput extends DeleteSipRuleRequest {
    }
    export interface DeleteSipRuleCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a SIP rule. You must disable a SIP rule before you can delete it.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteSipRuleCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteSipRuleCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteSipRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSipRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteSipRuleCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteSipRuleCommand extends $Command<DeleteSipRuleCommandInput, DeleteSipRuleCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteSipRuleCommandInput;
            constructor(input: DeleteSipRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSipRuleCommandInput, DeleteSipRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorCommandInput extends DeleteVoiceConnectorRequest {
    }
    export interface DeleteVoiceConnectorCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the
        *             Amazon Chime Voice Connector must be disassociated from it before it can be
        *             deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorCommand extends $Command<DeleteVoiceConnectorCommandInput, DeleteVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorCommandInput;
            constructor(input: DeleteVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorCommandInput, DeleteVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorEmergencyCallingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorEmergencyCallingConfigurationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput extends DeleteVoiceConnectorEmergencyCallingConfigurationRequest {
    }
    export interface DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorEmergencyCallingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorEmergencyCallingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorEmergencyCallingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorEmergencyCallingConfigurationCommand extends $Command<DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput;
            constructor(input: DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorEmergencyCallingConfigurationCommandInput, DeleteVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorGroupRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorGroupCommandInput extends DeleteVoiceConnectorGroupRequest {
    }
    export interface DeleteVoiceConnectorGroupCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Amazon Chime Voice Connector group. Any
        * <code>VoiceConnectorItems</code>
        * and phone numbers associated with the group must be removed before it can be deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorGroupCommand extends $Command<DeleteVoiceConnectorGroupCommandInput, DeleteVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorGroupCommandInput;
            constructor(input: DeleteVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorGroupCommandInput, DeleteVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorOriginationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorOriginationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorOriginationCommandInput extends DeleteVoiceConnectorOriginationRequest {
    }
    export interface DeleteVoiceConnectorOriginationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p>
        *
        *          <note>
        *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorOriginationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorOriginationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorOriginationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorOriginationCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorOriginationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorOriginationCommand extends $Command<DeleteVoiceConnectorOriginationCommandInput, DeleteVoiceConnectorOriginationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorOriginationCommandInput;
            constructor(input: DeleteVoiceConnectorOriginationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorOriginationCommandInput, DeleteVoiceConnectorOriginationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorProxyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorProxyRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorProxyCommandInput extends DeleteVoiceConnectorProxyRequest {
    }
    export interface DeleteVoiceConnectorProxyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the proxy configuration from the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorProxyCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorProxyCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorProxyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorProxyCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorProxyCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorProxyCommand extends $Command<DeleteVoiceConnectorProxyCommandInput, DeleteVoiceConnectorProxyCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorProxyCommandInput;
            constructor(input: DeleteVoiceConnectorProxyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorProxyCommandInput, DeleteVoiceConnectorProxyCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorStreamingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorStreamingConfigurationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorStreamingConfigurationCommandInput extends DeleteVoiceConnectorStreamingConfigurationRequest {
    }
    export interface DeleteVoiceConnectorStreamingConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the streaming configuration for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorStreamingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorStreamingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorStreamingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorStreamingConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorStreamingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorStreamingConfigurationCommand extends $Command<DeleteVoiceConnectorStreamingConfigurationCommandInput, DeleteVoiceConnectorStreamingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorStreamingConfigurationCommandInput;
            constructor(input: DeleteVoiceConnectorStreamingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorStreamingConfigurationCommandInput, DeleteVoiceConnectorStreamingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorTerminationRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorTerminationCommandInput extends DeleteVoiceConnectorTerminationRequest {
    }
    export interface DeleteVoiceConnectorTerminationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p>
        *
        *          <note>
        *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorTerminationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorTerminationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorTerminationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorTerminationCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorTerminationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorTerminationCommand extends $Command<DeleteVoiceConnectorTerminationCommandInput, DeleteVoiceConnectorTerminationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorTerminationCommandInput;
            constructor(input: DeleteVoiceConnectorTerminationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorTerminationCommandInput, DeleteVoiceConnectorTerminationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DeleteVoiceConnectorTerminationCredentialsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DeleteVoiceConnectorTerminationCredentialsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DeleteVoiceConnectorTerminationCredentialsCommandInput extends DeleteVoiceConnectorTerminationCredentialsRequest {
    }
    export interface DeleteVoiceConnectorTerminationCredentialsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified SIP credentials used by your equipment to authenticate during call termination.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DeleteVoiceConnectorTerminationCredentialsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DeleteVoiceConnectorTerminationCredentialsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DeleteVoiceConnectorTerminationCredentialsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteVoiceConnectorTerminationCredentialsCommandInput} for command's `input` shape.
        * @see {@link DeleteVoiceConnectorTerminationCredentialsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DeleteVoiceConnectorTerminationCredentialsCommand extends $Command<DeleteVoiceConnectorTerminationCredentialsCommandInput, DeleteVoiceConnectorTerminationCredentialsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DeleteVoiceConnectorTerminationCredentialsCommandInput;
            constructor(input: DeleteVoiceConnectorTerminationCredentialsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteVoiceConnectorTerminationCredentialsCommandInput, DeleteVoiceConnectorTerminationCredentialsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceAdminCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeAppInstanceAdminRequest, DescribeAppInstanceAdminResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeAppInstanceAdminCommandInput extends DescribeAppInstanceAdminRequest {
    }
    export interface DescribeAppInstanceAdminCommandOutput extends DescribeAppInstanceAdminResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of an <code>AppInstanceAdmin</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeAppInstanceAdminCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeAppInstanceAdminCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeAppInstanceAdminCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppInstanceAdminCommandInput} for command's `input` shape.
        * @see {@link DescribeAppInstanceAdminCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeAppInstanceAdminCommand extends $Command<DescribeAppInstanceAdminCommandInput, DescribeAppInstanceAdminCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeAppInstanceAdminCommandInput;
            constructor(input: DescribeAppInstanceAdminCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppInstanceAdminCommandInput, DescribeAppInstanceAdminCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeAppInstanceRequest, DescribeAppInstanceResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeAppInstanceCommandInput extends DescribeAppInstanceRequest {
    }
    export interface DescribeAppInstanceCommandOutput extends DescribeAppInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of an <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeAppInstanceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeAppInstanceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeAppInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppInstanceCommandInput} for command's `input` shape.
        * @see {@link DescribeAppInstanceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeAppInstanceCommand extends $Command<DescribeAppInstanceCommandInput, DescribeAppInstanceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeAppInstanceCommandInput;
            constructor(input: DescribeAppInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppInstanceCommandInput, DescribeAppInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeAppInstanceUserRequest, DescribeAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeAppInstanceUserCommandInput extends DescribeAppInstanceUserRequest {
    }
    export interface DescribeAppInstanceUserCommandOutput extends DescribeAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of an <code>AppInstanceUser</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link DescribeAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeAppInstanceUserCommand extends $Command<DescribeAppInstanceUserCommandInput, DescribeAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeAppInstanceUserCommandInput;
            constructor(input: DescribeAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppInstanceUserCommandInput, DescribeAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelBanCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelBanRequest, DescribeChannelBanResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelBanCommandInput extends DescribeChannelBanRequest {
    }
    export interface DescribeChannelBanCommandOutput extends DescribeChannelBanResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of a channel ban.</p>
        *
        *          <note>
        *
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelBanCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelBanCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelBanCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelBanCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelBanCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelBanCommand extends $Command<DescribeChannelBanCommandInput, DescribeChannelBanCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelBanCommandInput;
            constructor(input: DescribeChannelBanCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelBanCommandInput, DescribeChannelBanCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelRequest, DescribeChannelResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelCommandInput extends DescribeChannelRequest {
    }
    export interface DescribeChannelCommandOutput extends DescribeChannelResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of a channel in an Amazon Chime
        *          <code>AppInstance</code>.</p>
        *
        *          <note>
        *
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelCommand extends $Command<DescribeChannelCommandInput, DescribeChannelCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelCommandInput;
            constructor(input: DescribeChannelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelCommandInput, DescribeChannelCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelMembershipRequest, DescribeChannelMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelMembershipCommandInput extends DescribeChannelMembershipRequest {
    }
    export interface DescribeChannelMembershipCommandOutput extends DescribeChannelMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of a user's channel membership.</p>
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelMembershipCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelMembershipCommand extends $Command<DescribeChannelMembershipCommandInput, DescribeChannelMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelMembershipCommandInput;
            constructor(input: DescribeChannelMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelMembershipCommandInput, DescribeChannelMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelMembershipForAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelMembershipForAppInstanceUserRequest, DescribeChannelMembershipForAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelMembershipForAppInstanceUserCommandInput extends DescribeChannelMembershipForAppInstanceUserRequest {
    }
    export interface DescribeChannelMembershipForAppInstanceUserCommandOutput extends DescribeChannelMembershipForAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p> Returns the details of a channel based on the membership of the specified
        *             <code>AppInstanceUser</code>.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelMembershipForAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelMembershipForAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelMembershipForAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelMembershipForAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelMembershipForAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelMembershipForAppInstanceUserCommand extends $Command<DescribeChannelMembershipForAppInstanceUserCommandInput, DescribeChannelMembershipForAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelMembershipForAppInstanceUserCommandInput;
            constructor(input: DescribeChannelMembershipForAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelMembershipForAppInstanceUserCommandInput, DescribeChannelMembershipForAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratedByAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelModeratedByAppInstanceUserRequest, DescribeChannelModeratedByAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelModeratedByAppInstanceUserCommandInput extends DescribeChannelModeratedByAppInstanceUserRequest {
    }
    export interface DescribeChannelModeratedByAppInstanceUserCommandOutput extends DescribeChannelModeratedByAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of a channel moderated by the specified
        *             <code>AppInstanceUser</code>.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelModeratedByAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelModeratedByAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelModeratedByAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelModeratedByAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelModeratedByAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelModeratedByAppInstanceUserCommand extends $Command<DescribeChannelModeratedByAppInstanceUserCommandInput, DescribeChannelModeratedByAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelModeratedByAppInstanceUserCommandInput;
            constructor(input: DescribeChannelModeratedByAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelModeratedByAppInstanceUserCommandInput, DescribeChannelModeratedByAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DescribeChannelModeratorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DescribeChannelModeratorRequest, DescribeChannelModeratorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DescribeChannelModeratorCommandInput extends DescribeChannelModeratorRequest {
    }
    export interface DescribeChannelModeratorCommandOutput extends DescribeChannelModeratorResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the full details of a single ChannelModerator.</p>
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DescribeChannelModeratorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DescribeChannelModeratorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DescribeChannelModeratorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeChannelModeratorCommandInput} for command's `input` shape.
        * @see {@link DescribeChannelModeratorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DescribeChannelModeratorCommand extends $Command<DescribeChannelModeratorCommandInput, DescribeChannelModeratorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DescribeChannelModeratorCommandInput;
            constructor(input: DescribeChannelModeratorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeChannelModeratorCommandInput, DescribeChannelModeratorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumberFromUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DisassociatePhoneNumberFromUserRequest, DisassociatePhoneNumberFromUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DisassociatePhoneNumberFromUserCommandInput extends DisassociatePhoneNumberFromUserRequest {
    }
    export interface DisassociatePhoneNumberFromUserCommandOutput extends DisassociatePhoneNumberFromUserResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates the primary provisioned phone number from the specified Amazon Chime user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DisassociatePhoneNumberFromUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DisassociatePhoneNumberFromUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DisassociatePhoneNumberFromUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociatePhoneNumberFromUserCommandInput} for command's `input` shape.
        * @see {@link DisassociatePhoneNumberFromUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DisassociatePhoneNumberFromUserCommand extends $Command<DisassociatePhoneNumberFromUserCommandInput, DisassociatePhoneNumberFromUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DisassociatePhoneNumberFromUserCommandInput;
            constructor(input: DisassociatePhoneNumberFromUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociatePhoneNumberFromUserCommandInput, DisassociatePhoneNumberFromUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DisassociatePhoneNumbersFromVoiceConnectorRequest, DisassociatePhoneNumbersFromVoiceConnectorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DisassociatePhoneNumbersFromVoiceConnectorCommandInput extends DisassociatePhoneNumbersFromVoiceConnectorRequest {
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorCommandOutput extends DisassociatePhoneNumbersFromVoiceConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DisassociatePhoneNumbersFromVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DisassociatePhoneNumbersFromVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DisassociatePhoneNumbersFromVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociatePhoneNumbersFromVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link DisassociatePhoneNumbersFromVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DisassociatePhoneNumbersFromVoiceConnectorCommand extends $Command<DisassociatePhoneNumbersFromVoiceConnectorCommandInput, DisassociatePhoneNumbersFromVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DisassociatePhoneNumbersFromVoiceConnectorCommandInput;
            constructor(input: DisassociatePhoneNumbersFromVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociatePhoneNumbersFromVoiceConnectorCommandInput, DisassociatePhoneNumbersFromVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociatePhoneNumbersFromVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DisassociatePhoneNumbersFromVoiceConnectorGroupRequest, DisassociatePhoneNumbersFromVoiceConnectorGroupResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput extends DisassociatePhoneNumbersFromVoiceConnectorGroupRequest {
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput extends DisassociatePhoneNumbersFromVoiceConnectorGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DisassociatePhoneNumbersFromVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DisassociatePhoneNumbersFromVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DisassociatePhoneNumbersFromVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DisassociatePhoneNumbersFromVoiceConnectorGroupCommand extends $Command<DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput;
            constructor(input: DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociatePhoneNumbersFromVoiceConnectorGroupCommandInput, DisassociatePhoneNumbersFromVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/DisassociateSigninDelegateGroupsFromAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { DisassociateSigninDelegateGroupsFromAccountRequest, DisassociateSigninDelegateGroupsFromAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface DisassociateSigninDelegateGroupsFromAccountCommandInput extends DisassociateSigninDelegateGroupsFromAccountRequest {
    }
    export interface DisassociateSigninDelegateGroupsFromAccountCommandOutput extends DisassociateSigninDelegateGroupsFromAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, DisassociateSigninDelegateGroupsFromAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, DisassociateSigninDelegateGroupsFromAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new DisassociateSigninDelegateGroupsFromAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateSigninDelegateGroupsFromAccountCommandInput} for command's `input` shape.
        * @see {@link DisassociateSigninDelegateGroupsFromAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class DisassociateSigninDelegateGroupsFromAccountCommand extends $Command<DisassociateSigninDelegateGroupsFromAccountCommandInput, DisassociateSigninDelegateGroupsFromAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: DisassociateSigninDelegateGroupsFromAccountCommandInput;
            constructor(input: DisassociateSigninDelegateGroupsFromAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateSigninDelegateGroupsFromAccountCommandInput, DisassociateSigninDelegateGroupsFromAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetAccountRequest, GetAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetAccountCommandInput extends GetAccountRequest {
    }
    export interface GetAccountCommandOutput extends GetAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified Amazon Chime account, such as account type and supported
        *             licenses.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccountCommandInput} for command's `input` shape.
        * @see {@link GetAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetAccountCommand extends $Command<GetAccountCommandInput, GetAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetAccountCommandInput;
            constructor(input: GetAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccountCommandInput, GetAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAccountSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetAccountSettingsRequest, GetAccountSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetAccountSettingsCommandInput extends GetAccountSettingsRequest {
    }
    export interface GetAccountSettingsCommandOutput extends GetAccountSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves account settings for the specified Amazon Chime account ID, such as remote control
        *             and dialout settings. For more information about these settings, see
        *     <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetAccountSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetAccountSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetAccountSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccountSettingsCommandInput} for command's `input` shape.
        * @see {@link GetAccountSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetAccountSettingsCommand extends $Command<GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetAccountSettingsCommandInput;
            constructor(input: GetAccountSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceRetentionSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetAppInstanceRetentionSettingsRequest, GetAppInstanceRetentionSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetAppInstanceRetentionSettingsCommandInput extends GetAppInstanceRetentionSettingsRequest {
    }
    export interface GetAppInstanceRetentionSettingsCommandOutput extends GetAppInstanceRetentionSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the retention settings for an <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetAppInstanceRetentionSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetAppInstanceRetentionSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetAppInstanceRetentionSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAppInstanceRetentionSettingsCommandInput} for command's `input` shape.
        * @see {@link GetAppInstanceRetentionSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetAppInstanceRetentionSettingsCommand extends $Command<GetAppInstanceRetentionSettingsCommandInput, GetAppInstanceRetentionSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetAppInstanceRetentionSettingsCommandInput;
            constructor(input: GetAppInstanceRetentionSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAppInstanceRetentionSettingsCommandInput, GetAppInstanceRetentionSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAppInstanceStreamingConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetAppInstanceStreamingConfigurationsRequest, GetAppInstanceStreamingConfigurationsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetAppInstanceStreamingConfigurationsCommandInput extends GetAppInstanceStreamingConfigurationsRequest {
    }
    export interface GetAppInstanceStreamingConfigurationsCommandOutput extends GetAppInstanceStreamingConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the streaming settings for an <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetAppInstanceStreamingConfigurationsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetAppInstanceStreamingConfigurationsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetAppInstanceStreamingConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAppInstanceStreamingConfigurationsCommandInput} for command's `input` shape.
        * @see {@link GetAppInstanceStreamingConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetAppInstanceStreamingConfigurationsCommand extends $Command<GetAppInstanceStreamingConfigurationsCommandInput, GetAppInstanceStreamingConfigurationsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetAppInstanceStreamingConfigurationsCommandInput;
            constructor(input: GetAppInstanceStreamingConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAppInstanceStreamingConfigurationsCommandInput, GetAppInstanceStreamingConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetAttendeeRequest, GetAttendeeResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetAttendeeCommandInput extends GetAttendeeRequest {
    }
    export interface GetAttendeeCommandOutput extends GetAttendeeResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * .
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAttendeeCommandInput} for command's `input` shape.
        * @see {@link GetAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetAttendeeCommand extends $Command<GetAttendeeCommandInput, GetAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetAttendeeCommandInput;
            constructor(input: GetAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAttendeeCommandInput, GetAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetBotRequest, GetBotResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetBotCommandInput extends GetBotRequest {
    }
    export interface GetBotCommandOutput extends GetBotResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetBotCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetBotCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBotCommandInput} for command's `input` shape.
        * @see {@link GetBotCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetBotCommand extends $Command<GetBotCommandInput, GetBotCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetBotCommandInput;
            constructor(input: GetBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBotCommandInput, GetBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetChannelMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetChannelMessageRequest, GetChannelMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetChannelMessageCommandInput extends GetChannelMessageRequest {
    }
    export interface GetChannelMessageCommandOutput extends GetChannelMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the full details of a channel message.</p>
        *
        *          <note>
        *             <p>The x-amz-chime-bearer request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetChannelMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetChannelMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetChannelMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetChannelMessageCommandInput} for command's `input` shape.
        * @see {@link GetChannelMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetChannelMessageCommand extends $Command<GetChannelMessageCommandInput, GetChannelMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetChannelMessageCommandInput;
            constructor(input: GetChannelMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetChannelMessageCommandInput, GetChannelMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetEventsConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetEventsConfigurationRequest, GetEventsConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetEventsConfigurationCommandInput extends GetEventsConfigurationRequest {
    }
    export interface GetEventsConfigurationCommandOutput extends GetEventsConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetEventsConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetEventsConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetEventsConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEventsConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetEventsConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetEventsConfigurationCommand extends $Command<GetEventsConfigurationCommandInput, GetEventsConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetEventsConfigurationCommandInput;
            constructor(input: GetEventsConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEventsConfigurationCommandInput, GetEventsConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetGlobalSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetGlobalSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetGlobalSettingsCommandInput {
    }
    export interface GetGlobalSettingsCommandOutput extends GetGlobalSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business
        *             Calling and Amazon Chime Voice Connector settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetGlobalSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetGlobalSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetGlobalSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetGlobalSettingsCommandInput} for command's `input` shape.
        * @see {@link GetGlobalSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetGlobalSettingsCommand extends $Command<GetGlobalSettingsCommandInput, GetGlobalSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetGlobalSettingsCommandInput;
            constructor(input: GetGlobalSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetGlobalSettingsCommandInput, GetGlobalSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMediaCapturePipelineCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetMediaCapturePipelineRequest, GetMediaCapturePipelineResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetMediaCapturePipelineCommandInput extends GetMediaCapturePipelineRequest {
    }
    export interface GetMediaCapturePipelineCommandOutput extends GetMediaCapturePipelineResponse, __MetadataBearer {
    }
    /**
        * <p>Gets an existing media capture pipeline.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetMediaCapturePipelineCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetMediaCapturePipelineCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetMediaCapturePipelineCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMediaCapturePipelineCommandInput} for command's `input` shape.
        * @see {@link GetMediaCapturePipelineCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetMediaCapturePipelineCommand extends $Command<GetMediaCapturePipelineCommandInput, GetMediaCapturePipelineCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetMediaCapturePipelineCommandInput;
            constructor(input: GetMediaCapturePipelineCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMediaCapturePipelineCommandInput, GetMediaCapturePipelineCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetMeetingRequest, GetMeetingResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetMeetingCommandInput extends GetMeetingRequest {
    }
    export interface GetMeetingCommandOutput extends GetMeetingResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the
        * <i>Amazon Chime Developer Guide</i>
        * .
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetMeetingCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetMeetingCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMeetingCommandInput} for command's `input` shape.
        * @see {@link GetMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetMeetingCommand extends $Command<GetMeetingCommandInput, GetMeetingCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetMeetingCommandInput;
            constructor(input: GetMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMeetingCommandInput, GetMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetMessagingSessionEndpointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetMessagingSessionEndpointRequest, GetMessagingSessionEndpointResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetMessagingSessionEndpointCommandInput extends GetMessagingSessionEndpointRequest {
    }
    export interface GetMessagingSessionEndpointCommandOutput extends GetMessagingSessionEndpointResponse, __MetadataBearer {
    }
    /**
        * <p>The details of the endpoint for the messaging session.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetMessagingSessionEndpointCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetMessagingSessionEndpointCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetMessagingSessionEndpointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMessagingSessionEndpointCommandInput} for command's `input` shape.
        * @see {@link GetMessagingSessionEndpointCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetMessagingSessionEndpointCommand extends $Command<GetMessagingSessionEndpointCommandInput, GetMessagingSessionEndpointCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetMessagingSessionEndpointCommandInput;
            constructor(input: GetMessagingSessionEndpointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMessagingSessionEndpointCommandInput, GetMessagingSessionEndpointCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetPhoneNumberRequest, GetPhoneNumberResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetPhoneNumberCommandInput extends GetPhoneNumberRequest {
    }
    export interface GetPhoneNumberCommandOutput extends GetPhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetPhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetPhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetPhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPhoneNumberCommandInput} for command's `input` shape.
        * @see {@link GetPhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetPhoneNumberCommand extends $Command<GetPhoneNumberCommandInput, GetPhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetPhoneNumberCommandInput;
            constructor(input: GetPhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPhoneNumberCommandInput, GetPhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberOrderCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetPhoneNumberOrderRequest, GetPhoneNumberOrderResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetPhoneNumberOrderCommandInput extends GetPhoneNumberOrderRequest {
    }
    export interface GetPhoneNumberOrderCommandOutput extends GetPhoneNumberOrderResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified phone number order, such as the order creation timestamp, phone
        *             numbers in E.164 format, product type, and order status.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetPhoneNumberOrderCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetPhoneNumberOrderCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetPhoneNumberOrderCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPhoneNumberOrderCommandInput} for command's `input` shape.
        * @see {@link GetPhoneNumberOrderCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetPhoneNumberOrderCommand extends $Command<GetPhoneNumberOrderCommandInput, GetPhoneNumberOrderCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetPhoneNumberOrderCommandInput;
            constructor(input: GetPhoneNumberOrderCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPhoneNumberOrderCommandInput, GetPhoneNumberOrderCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetPhoneNumberSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetPhoneNumberSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetPhoneNumberSettingsCommandInput {
    }
    export interface GetPhoneNumberSettingsCommandOutput extends GetPhoneNumberSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetPhoneNumberSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetPhoneNumberSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetPhoneNumberSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPhoneNumberSettingsCommandInput} for command's `input` shape.
        * @see {@link GetPhoneNumberSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetPhoneNumberSettingsCommand extends $Command<GetPhoneNumberSettingsCommandInput, GetPhoneNumberSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetPhoneNumberSettingsCommandInput;
            constructor(input: GetPhoneNumberSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPhoneNumberSettingsCommandInput, GetPhoneNumberSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetProxySessionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetProxySessionRequest, GetProxySessionResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetProxySessionCommandInput extends GetProxySessionRequest {
    }
    export interface GetProxySessionCommandOutput extends GetProxySessionResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the specified proxy session details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetProxySessionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetProxySessionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetProxySessionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetProxySessionCommandInput} for command's `input` shape.
        * @see {@link GetProxySessionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetProxySessionCommand extends $Command<GetProxySessionCommandInput, GetProxySessionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetProxySessionCommandInput;
            constructor(input: GetProxySessionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetProxySessionCommandInput, GetProxySessionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRetentionSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetRetentionSettingsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    import { GetRetentionSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetRetentionSettingsCommandInput extends GetRetentionSettingsRequest {
    }
    export interface GetRetentionSettingsCommandOutput extends GetRetentionSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see
        * <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetRetentionSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetRetentionSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetRetentionSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRetentionSettingsCommandInput} for command's `input` shape.
        * @see {@link GetRetentionSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetRetentionSettingsCommand extends $Command<GetRetentionSettingsCommandInput, GetRetentionSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetRetentionSettingsCommandInput;
            constructor(input: GetRetentionSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRetentionSettingsCommandInput, GetRetentionSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetRoomCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetRoomRequest, GetRoomResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetRoomCommandInput extends GetRoomRequest {
    }
    export interface GetRoomCommandOutput extends GetRoomResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetRoomCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetRoomCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetRoomCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRoomCommandInput} for command's `input` shape.
        * @see {@link GetRoomCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetRoomCommand extends $Command<GetRoomCommandInput, GetRoomCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetRoomCommandInput;
            constructor(input: GetRoomCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRoomCommandInput, GetRoomCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetSipMediaApplicationRequest, GetSipMediaApplicationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetSipMediaApplicationCommandInput extends GetSipMediaApplicationRequest {
    }
    export interface GetSipMediaApplicationCommandOutput extends GetSipMediaApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetSipMediaApplicationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetSipMediaApplicationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetSipMediaApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSipMediaApplicationCommandInput} for command's `input` shape.
        * @see {@link GetSipMediaApplicationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetSipMediaApplicationCommand extends $Command<GetSipMediaApplicationCommandInput, GetSipMediaApplicationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetSipMediaApplicationCommandInput;
            constructor(input: GetSipMediaApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSipMediaApplicationCommandInput, GetSipMediaApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipMediaApplicationLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetSipMediaApplicationLoggingConfigurationRequest, GetSipMediaApplicationLoggingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetSipMediaApplicationLoggingConfigurationCommandInput extends GetSipMediaApplicationLoggingConfigurationRequest {
    }
    export interface GetSipMediaApplicationLoggingConfigurationCommandOutput extends GetSipMediaApplicationLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the logging configuration for the specified SIP media application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetSipMediaApplicationLoggingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetSipMediaApplicationLoggingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetSipMediaApplicationLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSipMediaApplicationLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetSipMediaApplicationLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetSipMediaApplicationLoggingConfigurationCommand extends $Command<GetSipMediaApplicationLoggingConfigurationCommandInput, GetSipMediaApplicationLoggingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetSipMediaApplicationLoggingConfigurationCommandInput;
            constructor(input: GetSipMediaApplicationLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSipMediaApplicationLoggingConfigurationCommandInput, GetSipMediaApplicationLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetSipRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetSipRuleRequest, GetSipRuleResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetSipRuleCommandInput extends GetSipRuleRequest {
    }
    export interface GetSipRuleCommandOutput extends GetSipRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetSipRuleCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetSipRuleCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetSipRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSipRuleCommandInput} for command's `input` shape.
        * @see {@link GetSipRuleCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetSipRuleCommand extends $Command<GetSipRuleCommandInput, GetSipRuleCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetSipRuleCommandInput;
            constructor(input: GetSipRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSipRuleCommandInput, GetSipRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetUserRequest, GetUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetUserCommandInput extends GetUserRequest {
    }
    export interface GetUserCommandOutput extends GetUserResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.</p>
        *
        *          <p>
        * To retrieve user details with an email address instead of a user ID, use the
        * <a>ListUsers</a> action, and then filter by email address.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetUserCommandInput} for command's `input` shape.
        * @see {@link GetUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetUserCommand extends $Command<GetUserCommandInput, GetUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetUserCommandInput;
            constructor(input: GetUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetUserCommandInput, GetUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetUserSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetUserSettingsRequest, GetUserSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetUserSettingsCommandInput extends GetUserSettingsRequest {
    }
    export interface GetUserSettingsCommandOutput extends GetUserSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves settings for the specified user ID, such as any associated phone number settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetUserSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetUserSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetUserSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetUserSettingsCommandInput} for command's `input` shape.
        * @see {@link GetUserSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetUserSettingsCommand extends $Command<GetUserSettingsCommandInput, GetUserSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetUserSettingsCommandInput;
            constructor(input: GetUserSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetUserSettingsCommandInput, GetUserSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorRequest, GetVoiceConnectorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorCommandInput extends GetVoiceConnectorRequest {
    }
    export interface GetVoiceConnectorCommandOutput extends GetVoiceConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorCommand extends $Command<GetVoiceConnectorCommandInput, GetVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorCommandInput;
            constructor(input: GetVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorCommandInput, GetVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorEmergencyCallingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorEmergencyCallingConfigurationRequest, GetVoiceConnectorEmergencyCallingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorEmergencyCallingConfigurationCommandInput extends GetVoiceConnectorEmergencyCallingConfigurationRequest {
    }
    export interface GetVoiceConnectorEmergencyCallingConfigurationCommandOutput extends GetVoiceConnectorEmergencyCallingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorEmergencyCallingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorEmergencyCallingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorEmergencyCallingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorEmergencyCallingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorEmergencyCallingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorEmergencyCallingConfigurationCommand extends $Command<GetVoiceConnectorEmergencyCallingConfigurationCommandInput, GetVoiceConnectorEmergencyCallingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorEmergencyCallingConfigurationCommandInput;
            constructor(input: GetVoiceConnectorEmergencyCallingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorEmergencyCallingConfigurationCommandInput, GetVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorGroupRequest, GetVoiceConnectorGroupResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorGroupCommandInput extends GetVoiceConnectorGroupRequest {
    }
    export interface GetVoiceConnectorGroupCommandOutput extends GetVoiceConnectorGroupResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated <code>VoiceConnectorItems</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorGroupCommand extends $Command<GetVoiceConnectorGroupCommandInput, GetVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorGroupCommandInput;
            constructor(input: GetVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorGroupCommandInput, GetVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorLoggingConfigurationRequest, GetVoiceConnectorLoggingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorLoggingConfigurationCommandInput extends GetVoiceConnectorLoggingConfigurationRequest {
    }
    export interface GetVoiceConnectorLoggingConfigurationCommandOutput extends GetVoiceConnectorLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorLoggingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorLoggingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorLoggingConfigurationCommand extends $Command<GetVoiceConnectorLoggingConfigurationCommandInput, GetVoiceConnectorLoggingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorLoggingConfigurationCommandInput;
            constructor(input: GetVoiceConnectorLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorLoggingConfigurationCommandInput, GetVoiceConnectorLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorOriginationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorOriginationRequest, GetVoiceConnectorOriginationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorOriginationCommandInput extends GetVoiceConnectorOriginationRequest {
    }
    export interface GetVoiceConnectorOriginationCommandOutput extends GetVoiceConnectorOriginationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves origination setting details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorOriginationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorOriginationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorOriginationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorOriginationCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorOriginationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorOriginationCommand extends $Command<GetVoiceConnectorOriginationCommandInput, GetVoiceConnectorOriginationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorOriginationCommandInput;
            constructor(input: GetVoiceConnectorOriginationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorOriginationCommandInput, GetVoiceConnectorOriginationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorProxyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorProxyRequest, GetVoiceConnectorProxyResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorProxyCommandInput extends GetVoiceConnectorProxyRequest {
    }
    export interface GetVoiceConnectorProxyCommandOutput extends GetVoiceConnectorProxyResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the proxy configuration details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorProxyCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorProxyCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorProxyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorProxyCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorProxyCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorProxyCommand extends $Command<GetVoiceConnectorProxyCommandInput, GetVoiceConnectorProxyCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorProxyCommandInput;
            constructor(input: GetVoiceConnectorProxyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorProxyCommandInput, GetVoiceConnectorProxyCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorStreamingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorStreamingConfigurationRequest, GetVoiceConnectorStreamingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorStreamingConfigurationCommandInput extends GetVoiceConnectorStreamingConfigurationRequest {
    }
    export interface GetVoiceConnectorStreamingConfigurationCommandOutput extends GetVoiceConnectorStreamingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector.
        *             Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows
        *             the retention period, in hours, for the Amazon Kinesis data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorStreamingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorStreamingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorStreamingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorStreamingConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorStreamingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorStreamingConfigurationCommand extends $Command<GetVoiceConnectorStreamingConfigurationCommandInput, GetVoiceConnectorStreamingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorStreamingConfigurationCommandInput;
            constructor(input: GetVoiceConnectorStreamingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorStreamingConfigurationCommandInput, GetVoiceConnectorStreamingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorTerminationRequest, GetVoiceConnectorTerminationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorTerminationCommandInput extends GetVoiceConnectorTerminationRequest {
    }
    export interface GetVoiceConnectorTerminationCommandOutput extends GetVoiceConnectorTerminationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves termination setting details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorTerminationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorTerminationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorTerminationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorTerminationCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorTerminationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorTerminationCommand extends $Command<GetVoiceConnectorTerminationCommandInput, GetVoiceConnectorTerminationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorTerminationCommandInput;
            constructor(input: GetVoiceConnectorTerminationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorTerminationCommandInput, GetVoiceConnectorTerminationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/GetVoiceConnectorTerminationHealthCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { GetVoiceConnectorTerminationHealthRequest, GetVoiceConnectorTerminationHealthResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface GetVoiceConnectorTerminationHealthCommandInput extends GetVoiceConnectorTerminationHealthRequest {
    }
    export interface GetVoiceConnectorTerminationHealthCommandOutput extends GetVoiceConnectorTerminationHealthResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from
        *             your SIP infrastructure for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, GetVoiceConnectorTerminationHealthCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, GetVoiceConnectorTerminationHealthCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new GetVoiceConnectorTerminationHealthCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetVoiceConnectorTerminationHealthCommandInput} for command's `input` shape.
        * @see {@link GetVoiceConnectorTerminationHealthCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class GetVoiceConnectorTerminationHealthCommand extends $Command<GetVoiceConnectorTerminationHealthCommandInput, GetVoiceConnectorTerminationHealthCommandOutput, ChimeClientResolvedConfig> {
            readonly input: GetVoiceConnectorTerminationHealthCommandInput;
            constructor(input: GetVoiceConnectorTerminationHealthCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetVoiceConnectorTerminationHealthCommandInput, GetVoiceConnectorTerminationHealthCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/InviteUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { InviteUsersRequest, InviteUsersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface InviteUsersCommandInput extends InviteUsersRequest {
    }
    export interface InviteUsersCommandOutput extends InviteUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime
        *                 <code>Team</code> account. Only <code>Team</code> account types are currently
        *             supported for this action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, InviteUsersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, InviteUsersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new InviteUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link InviteUsersCommandInput} for command's `input` shape.
        * @see {@link InviteUsersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class InviteUsersCommand extends $Command<InviteUsersCommandInput, InviteUsersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: InviteUsersCommandInput;
            constructor(input: InviteUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InviteUsersCommandInput, InviteUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAccountsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAccountsRequest, ListAccountsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAccountsCommandInput extends ListAccountsRequest {
    }
    export interface ListAccountsCommandOutput extends ListAccountsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts
        *             by account name prefix. To find out which Amazon Chime account a user belongs to, you can
        *             filter by the user's email address, which returns one account result.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAccountsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAccountsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAccountsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccountsCommandInput} for command's `input` shape.
        * @see {@link ListAccountsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAccountsCommand extends $Command<ListAccountsCommandInput, ListAccountsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAccountsCommandInput;
            constructor(input: ListAccountsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccountsCommandInput, ListAccountsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceAdminsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAppInstanceAdminsRequest, ListAppInstanceAdminsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAppInstanceAdminsCommandInput extends ListAppInstanceAdminsRequest {
    }
    export interface ListAppInstanceAdminsCommandOutput extends ListAppInstanceAdminsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of the administrators in the <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAppInstanceAdminsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAppInstanceAdminsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAppInstanceAdminsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppInstanceAdminsCommandInput} for command's `input` shape.
        * @see {@link ListAppInstanceAdminsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAppInstanceAdminsCommand extends $Command<ListAppInstanceAdminsCommandInput, ListAppInstanceAdminsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAppInstanceAdminsCommandInput;
            constructor(input: ListAppInstanceAdminsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppInstanceAdminsCommandInput, ListAppInstanceAdminsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstancesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAppInstancesRequest, ListAppInstancesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAppInstancesCommandInput extends ListAppInstancesRequest {
    }
    export interface ListAppInstancesCommandOutput extends ListAppInstancesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAppInstancesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAppInstancesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAppInstancesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppInstancesCommandInput} for command's `input` shape.
        * @see {@link ListAppInstancesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAppInstancesCommand extends $Command<ListAppInstancesCommandInput, ListAppInstancesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAppInstancesCommandInput;
            constructor(input: ListAppInstancesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppInstancesCommandInput, ListAppInstancesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAppInstanceUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAppInstanceUsersRequest, ListAppInstanceUsersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAppInstanceUsersCommandInput extends ListAppInstanceUsersRequest {
    }
    export interface ListAppInstanceUsersCommandOutput extends ListAppInstanceUsersResponse, __MetadataBearer {
    }
    /**
        * <p>List all <code>AppInstanceUsers</code>
        *             created under a single <code>AppInstance</code>.
        *         </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAppInstanceUsersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAppInstanceUsersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAppInstanceUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppInstanceUsersCommandInput} for command's `input` shape.
        * @see {@link ListAppInstanceUsersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAppInstanceUsersCommand extends $Command<ListAppInstanceUsersCommandInput, ListAppInstanceUsersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAppInstanceUsersCommandInput;
            constructor(input: ListAppInstanceUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppInstanceUsersCommandInput, ListAppInstanceUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAttendeesRequest, ListAttendeesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAttendeesCommandInput extends ListAttendeesRequest {
    }
    export interface ListAttendeesCommandOutput extends ListAttendeesResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the <i>Amazon Chime Developer Guide</i>.
        * </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAttendeesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAttendeesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAttendeesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAttendeesCommandInput} for command's `input` shape.
        * @see {@link ListAttendeesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAttendeesCommand extends $Command<ListAttendeesCommandInput, ListAttendeesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAttendeesCommandInput;
            constructor(input: ListAttendeesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAttendeesCommandInput, ListAttendeesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListAttendeeTagsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListAttendeeTagsRequest, ListAttendeeTagsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListAttendeeTagsCommandInput extends ListAttendeeTagsRequest {
    }
    export interface ListAttendeeTagsCommandOutput extends ListAttendeeTagsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags applied to an Amazon Chime SDK attendee resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListAttendeeTagsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListAttendeeTagsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListAttendeeTagsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAttendeeTagsCommandInput} for command's `input` shape.
        * @see {@link ListAttendeeTagsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListAttendeeTagsCommand extends $Command<ListAttendeeTagsCommandInput, ListAttendeeTagsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListAttendeeTagsCommandInput;
            constructor(input: ListAttendeeTagsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAttendeeTagsCommandInput, ListAttendeeTagsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListBotsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListBotsRequest, ListBotsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListBotsCommandInput extends ListBotsRequest {
    }
    export interface ListBotsCommandOutput extends ListBotsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListBotsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListBotsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListBotsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBotsCommandInput} for command's `input` shape.
        * @see {@link ListBotsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListBotsCommand extends $Command<ListBotsCommandInput, ListBotsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListBotsCommandInput;
            constructor(input: ListBotsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBotsCommandInput, ListBotsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelBansCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelBansRequest, ListChannelBansResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelBansCommandInput extends ListChannelBansRequest {
    }
    export interface ListChannelBansCommandOutput extends ListChannelBansResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the users banned from a particular channel.</p>
        *
        *          <note>
        *
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelBansCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelBansCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelBansCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelBansCommandInput} for command's `input` shape.
        * @see {@link ListChannelBansCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelBansCommand extends $Command<ListChannelBansCommandInput, ListChannelBansCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelBansCommandInput;
            constructor(input: ListChannelBansCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelBansCommandInput, ListChannelBansCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelMembershipsRequest, ListChannelMembershipsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelMembershipsCommandInput extends ListChannelMembershipsRequest {
    }
    export interface ListChannelMembershipsCommandOutput extends ListChannelMembershipsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all channel memberships in a channel.</p>
        *
        *          <note>
        *
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelMembershipsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelMembershipsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelMembershipsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelMembershipsCommandInput} for command's `input` shape.
        * @see {@link ListChannelMembershipsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelMembershipsCommand extends $Command<ListChannelMembershipsCommandInput, ListChannelMembershipsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelMembershipsCommandInput;
            constructor(input: ListChannelMembershipsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelMembershipsCommandInput, ListChannelMembershipsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMembershipsForAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelMembershipsForAppInstanceUserRequest, ListChannelMembershipsForAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelMembershipsForAppInstanceUserCommandInput extends ListChannelMembershipsForAppInstanceUserRequest {
    }
    export interface ListChannelMembershipsForAppInstanceUserCommandOutput extends ListChannelMembershipsForAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p> Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an
        *             <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelMembershipsForAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelMembershipsForAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelMembershipsForAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelMembershipsForAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link ListChannelMembershipsForAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelMembershipsForAppInstanceUserCommand extends $Command<ListChannelMembershipsForAppInstanceUserCommandInput, ListChannelMembershipsForAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelMembershipsForAppInstanceUserCommandInput;
            constructor(input: ListChannelMembershipsForAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelMembershipsForAppInstanceUserCommandInput, ListChannelMembershipsForAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelMessagesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelMessagesRequest, ListChannelMessagesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelMessagesCommandInput extends ListChannelMessagesRequest {
    }
    export interface ListChannelMessagesCommandOutput extends ListChannelMessagesResponse, __MetadataBearer {
    }
    /**
        * <p>List all the messages in a channel. Returns a paginated list of
        *             <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending
        *          order.</p>
        *          <note>
        *             <p>Redacted messages appear in the results as empty, since they are only redacted, not
        *             deleted. Deleted messages do not appear in the results. This action always returns the
        *             latest version of an edited message.</p>
        *             <p>Also, the x-amz-chime-bearer request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelMessagesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelMessagesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelMessagesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelMessagesCommandInput} for command's `input` shape.
        * @see {@link ListChannelMessagesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelMessagesCommand extends $Command<ListChannelMessagesCommandInput, ListChannelMessagesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelMessagesCommandInput;
            constructor(input: ListChannelMessagesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelMessagesCommandInput, ListChannelMessagesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelModeratorsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelModeratorsRequest, ListChannelModeratorsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelModeratorsCommandInput extends ListChannelModeratorsRequest {
    }
    export interface ListChannelModeratorsCommandOutput extends ListChannelModeratorsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the moderators for a channel.</p>
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelModeratorsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelModeratorsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelModeratorsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelModeratorsCommandInput} for command's `input` shape.
        * @see {@link ListChannelModeratorsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelModeratorsCommand extends $Command<ListChannelModeratorsCommandInput, ListChannelModeratorsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelModeratorsCommandInput;
            constructor(input: ListChannelModeratorsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelModeratorsCommandInput, ListChannelModeratorsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelsRequest, ListChannelsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelsCommandInput extends ListChannelsRequest {
    }
    export interface ListChannelsCommandOutput extends ListChannelsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all Channels created under a single Chime App as a paginated list. You can specify
        *          filters to narrow results.</p>
        *
        *          <p class="title">
        *             <b>Functionality & restrictions</b>
        *          </p>
        *          <ul>
        *             <li>
        *                <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the
        *                account.</p>
        *             </li>
        *             <li>
        *                <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to
        *                list the private channels in an account.</p>
        *             </li>
        *          </ul>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelsCommandInput} for command's `input` shape.
        * @see {@link ListChannelsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelsCommand extends $Command<ListChannelsCommandInput, ListChannelsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelsCommandInput;
            constructor(input: ListChannelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelsCommandInput, ListChannelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListChannelsModeratedByAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListChannelsModeratedByAppInstanceUserRequest, ListChannelsModeratedByAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListChannelsModeratedByAppInstanceUserCommandInput extends ListChannelsModeratedByAppInstanceUserRequest {
    }
    export interface ListChannelsModeratedByAppInstanceUserCommandOutput extends ListChannelsModeratedByAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListChannelsModeratedByAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListChannelsModeratedByAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListChannelsModeratedByAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListChannelsModeratedByAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link ListChannelsModeratedByAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListChannelsModeratedByAppInstanceUserCommand extends $Command<ListChannelsModeratedByAppInstanceUserCommandInput, ListChannelsModeratedByAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListChannelsModeratedByAppInstanceUserCommandInput;
            constructor(input: ListChannelsModeratedByAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListChannelsModeratedByAppInstanceUserCommandInput, ListChannelsModeratedByAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMediaCapturePipelinesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListMediaCapturePipelinesRequest, ListMediaCapturePipelinesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListMediaCapturePipelinesCommandInput extends ListMediaCapturePipelinesRequest {
    }
    export interface ListMediaCapturePipelinesCommandOutput extends ListMediaCapturePipelinesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of media capture pipelines.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListMediaCapturePipelinesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListMediaCapturePipelinesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListMediaCapturePipelinesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMediaCapturePipelinesCommandInput} for command's `input` shape.
        * @see {@link ListMediaCapturePipelinesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListMediaCapturePipelinesCommand extends $Command<ListMediaCapturePipelinesCommandInput, ListMediaCapturePipelinesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListMediaCapturePipelinesCommandInput;
            constructor(input: ListMediaCapturePipelinesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMediaCapturePipelinesCommandInput, ListMediaCapturePipelinesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListMeetingsRequest, ListMeetingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListMeetingsCommandInput extends ListMeetingsRequest {
    }
    export interface ListMeetingsCommandOutput extends ListMeetingsResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see
        * <a href="https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html">Using the Amazon Chime SDK</a>
        * in the <i>Amazon Chime Developer Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListMeetingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListMeetingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListMeetingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMeetingsCommandInput} for command's `input` shape.
        * @see {@link ListMeetingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListMeetingsCommand extends $Command<ListMeetingsCommandInput, ListMeetingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListMeetingsCommandInput;
            constructor(input: ListMeetingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMeetingsCommandInput, ListMeetingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListMeetingTagsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListMeetingTagsRequest, ListMeetingTagsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListMeetingTagsCommandInput extends ListMeetingTagsRequest {
    }
    export interface ListMeetingTagsCommandOutput extends ListMeetingTagsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags applied to an Amazon Chime SDK meeting resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListMeetingTagsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListMeetingTagsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListMeetingTagsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMeetingTagsCommandInput} for command's `input` shape.
        * @see {@link ListMeetingTagsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListMeetingTagsCommand extends $Command<ListMeetingTagsCommandInput, ListMeetingTagsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListMeetingTagsCommandInput;
            constructor(input: ListMeetingTagsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMeetingTagsCommandInput, ListMeetingTagsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumberOrdersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListPhoneNumberOrdersRequest, ListPhoneNumberOrdersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListPhoneNumberOrdersCommandInput extends ListPhoneNumberOrdersRequest {
    }
    export interface ListPhoneNumberOrdersCommandOutput extends ListPhoneNumberOrdersResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the phone number orders for the administrator's Amazon Chime account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListPhoneNumberOrdersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListPhoneNumberOrdersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListPhoneNumberOrdersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPhoneNumberOrdersCommandInput} for command's `input` shape.
        * @see {@link ListPhoneNumberOrdersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListPhoneNumberOrdersCommand extends $Command<ListPhoneNumberOrdersCommandInput, ListPhoneNumberOrdersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListPhoneNumberOrdersCommandInput;
            constructor(input: ListPhoneNumberOrdersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPhoneNumberOrdersCommandInput, ListPhoneNumberOrdersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListPhoneNumbersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListPhoneNumbersRequest, ListPhoneNumbersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListPhoneNumbersCommandInput extends ListPhoneNumbersRequest {
    }
    export interface ListPhoneNumbersCommandOutput extends ListPhoneNumbersResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListPhoneNumbersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListPhoneNumbersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListPhoneNumbersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPhoneNumbersCommandInput} for command's `input` shape.
        * @see {@link ListPhoneNumbersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListPhoneNumbersCommand extends $Command<ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListPhoneNumbersCommandInput;
            constructor(input: ListPhoneNumbersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPhoneNumbersCommandInput, ListPhoneNumbersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListProxySessionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListProxySessionsRequest, ListProxySessionsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListProxySessionsCommandInput extends ListProxySessionsRequest {
    }
    export interface ListProxySessionsCommandOutput extends ListProxySessionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the proxy sessions for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListProxySessionsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListProxySessionsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListProxySessionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProxySessionsCommandInput} for command's `input` shape.
        * @see {@link ListProxySessionsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListProxySessionsCommand extends $Command<ListProxySessionsCommandInput, ListProxySessionsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListProxySessionsCommandInput;
            constructor(input: ListProxySessionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProxySessionsCommandInput, ListProxySessionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomMembershipsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListRoomMembershipsRequest, ListRoomMembershipsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListRoomMembershipsCommandInput extends ListRoomMembershipsRequest {
    }
    export interface ListRoomMembershipsCommandOutput extends ListRoomMembershipsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the membership details for the specified room in an Amazon Chime Enterprise account,
        *             such as the members' IDs, email addresses, and names.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListRoomMembershipsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListRoomMembershipsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListRoomMembershipsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRoomMembershipsCommandInput} for command's `input` shape.
        * @see {@link ListRoomMembershipsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListRoomMembershipsCommand extends $Command<ListRoomMembershipsCommandInput, ListRoomMembershipsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListRoomMembershipsCommandInput;
            constructor(input: ListRoomMembershipsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRoomMembershipsCommandInput, ListRoomMembershipsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListRoomsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListRoomsRequest, ListRoomsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListRoomsCommandInput extends ListRoomsRequest {
    }
    export interface ListRoomsCommandOutput extends ListRoomsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListRoomsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListRoomsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListRoomsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRoomsCommandInput} for command's `input` shape.
        * @see {@link ListRoomsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListRoomsCommand extends $Command<ListRoomsCommandInput, ListRoomsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListRoomsCommandInput;
            constructor(input: ListRoomsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRoomsCommandInput, ListRoomsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipMediaApplicationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListSipMediaApplicationsRequest, ListSipMediaApplicationsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListSipMediaApplicationsCommandInput extends ListSipMediaApplicationsRequest {
    }
    export interface ListSipMediaApplicationsCommandOutput extends ListSipMediaApplicationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the SIP media applications under the administrator's AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListSipMediaApplicationsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListSipMediaApplicationsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListSipMediaApplicationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSipMediaApplicationsCommandInput} for command's `input` shape.
        * @see {@link ListSipMediaApplicationsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListSipMediaApplicationsCommand extends $Command<ListSipMediaApplicationsCommandInput, ListSipMediaApplicationsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListSipMediaApplicationsCommandInput;
            constructor(input: ListSipMediaApplicationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSipMediaApplicationsCommandInput, ListSipMediaApplicationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSipRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListSipRulesRequest, ListSipRulesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListSipRulesCommandInput extends ListSipRulesRequest {
    }
    export interface ListSipRulesCommandOutput extends ListSipRulesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the SIP rules under the administrator's AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListSipRulesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListSipRulesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListSipRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSipRulesCommandInput} for command's `input` shape.
        * @see {@link ListSipRulesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListSipRulesCommand extends $Command<ListSipRulesCommandInput, ListSipRulesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListSipRulesCommandInput;
            constructor(input: ListSipRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSipRulesCommandInput, ListSipRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListSupportedPhoneNumberCountriesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListSupportedPhoneNumberCountriesRequest, ListSupportedPhoneNumberCountriesResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListSupportedPhoneNumberCountriesCommandInput extends ListSupportedPhoneNumberCountriesRequest {
    }
    export interface ListSupportedPhoneNumberCountriesCommandOutput extends ListSupportedPhoneNumberCountriesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists supported phone number countries.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListSupportedPhoneNumberCountriesCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListSupportedPhoneNumberCountriesCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListSupportedPhoneNumberCountriesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSupportedPhoneNumberCountriesCommandInput} for command's `input` shape.
        * @see {@link ListSupportedPhoneNumberCountriesCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListSupportedPhoneNumberCountriesCommand extends $Command<ListSupportedPhoneNumberCountriesCommandInput, ListSupportedPhoneNumberCountriesCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListSupportedPhoneNumberCountriesCommandInput;
            constructor(input: ListSupportedPhoneNumberCountriesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSupportedPhoneNumberCountriesCommandInput, ListSupportedPhoneNumberCountriesCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags applied to an Amazon Chime SDK meeting resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListTagsForResourceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListTagsForResourceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListUsersRequest, ListUsersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListUsersCommandInput extends ListUsersRequest {
    }
    export interface ListUsersCommandOutput extends ListUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the users that belong to the specified Amazon Chime account. You can specify an email
        *             address to list only the user that the email address belongs to.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListUsersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListUsersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUsersCommandInput} for command's `input` shape.
        * @see {@link ListUsersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListUsersCommand extends $Command<ListUsersCommandInput, ListUsersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListUsersCommandInput;
            constructor(input: ListUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUsersCommandInput, ListUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListVoiceConnectorGroupsRequest, ListVoiceConnectorGroupsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListVoiceConnectorGroupsCommandInput extends ListVoiceConnectorGroupsRequest {
    }
    export interface ListVoiceConnectorGroupsCommandOutput extends ListVoiceConnectorGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListVoiceConnectorGroupsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListVoiceConnectorGroupsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListVoiceConnectorGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListVoiceConnectorGroupsCommandInput} for command's `input` shape.
        * @see {@link ListVoiceConnectorGroupsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListVoiceConnectorGroupsCommand extends $Command<ListVoiceConnectorGroupsCommandInput, ListVoiceConnectorGroupsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListVoiceConnectorGroupsCommandInput;
            constructor(input: ListVoiceConnectorGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListVoiceConnectorGroupsCommandInput, ListVoiceConnectorGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListVoiceConnectorsRequest, ListVoiceConnectorsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListVoiceConnectorsCommandInput extends ListVoiceConnectorsRequest {
    }
    export interface ListVoiceConnectorsCommandOutput extends ListVoiceConnectorsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Amazon Chime Voice Connectors for the administrator's AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListVoiceConnectorsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListVoiceConnectorsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListVoiceConnectorsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListVoiceConnectorsCommandInput} for command's `input` shape.
        * @see {@link ListVoiceConnectorsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListVoiceConnectorsCommand extends $Command<ListVoiceConnectorsCommandInput, ListVoiceConnectorsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListVoiceConnectorsCommandInput;
            constructor(input: ListVoiceConnectorsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListVoiceConnectorsCommandInput, ListVoiceConnectorsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ListVoiceConnectorTerminationCredentialsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ListVoiceConnectorTerminationCredentialsRequest, ListVoiceConnectorTerminationCredentialsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ListVoiceConnectorTerminationCredentialsCommandInput extends ListVoiceConnectorTerminationCredentialsRequest {
    }
    export interface ListVoiceConnectorTerminationCredentialsCommandOutput extends ListVoiceConnectorTerminationCredentialsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the SIP credentials for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ListVoiceConnectorTerminationCredentialsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ListVoiceConnectorTerminationCredentialsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ListVoiceConnectorTerminationCredentialsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListVoiceConnectorTerminationCredentialsCommandInput} for command's `input` shape.
        * @see {@link ListVoiceConnectorTerminationCredentialsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ListVoiceConnectorTerminationCredentialsCommand extends $Command<ListVoiceConnectorTerminationCredentialsCommandInput, ListVoiceConnectorTerminationCredentialsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ListVoiceConnectorTerminationCredentialsCommandInput;
            constructor(input: ListVoiceConnectorTerminationCredentialsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListVoiceConnectorTerminationCredentialsCommandInput, ListVoiceConnectorTerminationCredentialsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/LogoutUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { LogoutUserRequest, LogoutUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface LogoutUserCommandInput extends LogoutUserRequest {
    }
    export interface LogoutUserCommandOutput extends LogoutUserResponse, __MetadataBearer {
    }
    /**
        * <p>Logs out the specified user from all of the devices they are currently logged into.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, LogoutUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, LogoutUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new LogoutUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link LogoutUserCommandInput} for command's `input` shape.
        * @see {@link LogoutUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class LogoutUserCommand extends $Command<LogoutUserCommandInput, LogoutUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: LogoutUserCommandInput;
            constructor(input: LogoutUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<LogoutUserCommandInput, LogoutUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceRetentionSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutAppInstanceRetentionSettingsRequest, PutAppInstanceRetentionSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutAppInstanceRetentionSettingsCommandInput extends PutAppInstanceRetentionSettingsRequest {
    }
    export interface PutAppInstanceRetentionSettingsCommandOutput extends PutAppInstanceRetentionSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Sets the amount of time in days that a given <code>AppInstance</code> retains data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutAppInstanceRetentionSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutAppInstanceRetentionSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutAppInstanceRetentionSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAppInstanceRetentionSettingsCommandInput} for command's `input` shape.
        * @see {@link PutAppInstanceRetentionSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutAppInstanceRetentionSettingsCommand extends $Command<PutAppInstanceRetentionSettingsCommandInput, PutAppInstanceRetentionSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutAppInstanceRetentionSettingsCommandInput;
            constructor(input: PutAppInstanceRetentionSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAppInstanceRetentionSettingsCommandInput, PutAppInstanceRetentionSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutAppInstanceStreamingConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutAppInstanceStreamingConfigurationsRequest, PutAppInstanceStreamingConfigurationsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutAppInstanceStreamingConfigurationsCommandInput extends PutAppInstanceStreamingConfigurationsRequest {
    }
    export interface PutAppInstanceStreamingConfigurationsCommandOutput extends PutAppInstanceStreamingConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>The data streaming configurations of an <code>AppInstance</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutAppInstanceStreamingConfigurationsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutAppInstanceStreamingConfigurationsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutAppInstanceStreamingConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAppInstanceStreamingConfigurationsCommandInput} for command's `input` shape.
        * @see {@link PutAppInstanceStreamingConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutAppInstanceStreamingConfigurationsCommand extends $Command<PutAppInstanceStreamingConfigurationsCommandInput, PutAppInstanceStreamingConfigurationsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutAppInstanceStreamingConfigurationsCommandInput;
            constructor(input: PutAppInstanceStreamingConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAppInstanceStreamingConfigurationsCommandInput, PutAppInstanceStreamingConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutEventsConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutEventsConfigurationRequest, PutEventsConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutEventsConfigurationCommandInput extends PutEventsConfigurationRequest {
    }
    export interface PutEventsConfigurationCommandOutput extends PutEventsConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an events configuration that allows a bot to receive outgoing events sent by Amazon
        *             Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information,
        *             see <a>Bot</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutEventsConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutEventsConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutEventsConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEventsConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutEventsConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutEventsConfigurationCommand extends $Command<PutEventsConfigurationCommandInput, PutEventsConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutEventsConfigurationCommandInput;
            constructor(input: PutEventsConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEventsConfigurationCommandInput, PutEventsConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutRetentionSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutRetentionSettingsRequest, PutRetentionSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutRetentionSettingsCommandInput extends PutRetentionSettingsRequest {
    }
    export interface PutRetentionSettingsCommandOutput extends PutRetentionSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>
        * Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see
        * <a href="https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html">Logging Amazon Chime API Calls with AWS CloudTrail</a>
        * in the <i>Amazon Chime Administration Guide</i>.</p>
        *
        *          <p>
        * To turn off existing retention settings, remove the number of days from the corresponding
        * <b>RetentionDays</b>
        * field in the
        * <b>RetentionSettings</b>
        * object. For more information about retention settings, see
        * <a href="https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html">Managing Chat Retention Policies</a>
        * in the <i>Amazon Chime Administration Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutRetentionSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutRetentionSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutRetentionSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutRetentionSettingsCommandInput} for command's `input` shape.
        * @see {@link PutRetentionSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutRetentionSettingsCommand extends $Command<PutRetentionSettingsCommandInput, PutRetentionSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutRetentionSettingsCommandInput;
            constructor(input: PutRetentionSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutRetentionSettingsCommandInput, PutRetentionSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutSipMediaApplicationLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutSipMediaApplicationLoggingConfigurationRequest, PutSipMediaApplicationLoggingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutSipMediaApplicationLoggingConfigurationCommandInput extends PutSipMediaApplicationLoggingConfigurationRequest {
    }
    export interface PutSipMediaApplicationLoggingConfigurationCommandOutput extends PutSipMediaApplicationLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the logging configuration for the specified SIP media application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutSipMediaApplicationLoggingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutSipMediaApplicationLoggingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutSipMediaApplicationLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutSipMediaApplicationLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutSipMediaApplicationLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutSipMediaApplicationLoggingConfigurationCommand extends $Command<PutSipMediaApplicationLoggingConfigurationCommandInput, PutSipMediaApplicationLoggingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutSipMediaApplicationLoggingConfigurationCommandInput;
            constructor(input: PutSipMediaApplicationLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutSipMediaApplicationLoggingConfigurationCommandInput, PutSipMediaApplicationLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorEmergencyCallingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorEmergencyCallingConfigurationRequest, PutVoiceConnectorEmergencyCallingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorEmergencyCallingConfigurationCommandInput extends PutVoiceConnectorEmergencyCallingConfigurationRequest {
    }
    export interface PutVoiceConnectorEmergencyCallingConfigurationCommandOutput extends PutVoiceConnectorEmergencyCallingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for
        *     the Amazon Chime Voice Connector before emergency calling can be configured.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorEmergencyCallingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorEmergencyCallingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorEmergencyCallingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorEmergencyCallingConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorEmergencyCallingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorEmergencyCallingConfigurationCommand extends $Command<PutVoiceConnectorEmergencyCallingConfigurationCommandInput, PutVoiceConnectorEmergencyCallingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorEmergencyCallingConfigurationCommandInput;
            constructor(input: PutVoiceConnectorEmergencyCallingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorEmergencyCallingConfigurationCommandInput, PutVoiceConnectorEmergencyCallingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorLoggingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorLoggingConfigurationRequest, PutVoiceConnectorLoggingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorLoggingConfigurationCommandInput extends PutVoiceConnectorLoggingConfigurationRequest {
    }
    export interface PutVoiceConnectorLoggingConfigurationCommandOutput extends PutVoiceConnectorLoggingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorLoggingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorLoggingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorLoggingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorLoggingConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorLoggingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorLoggingConfigurationCommand extends $Command<PutVoiceConnectorLoggingConfigurationCommandInput, PutVoiceConnectorLoggingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorLoggingConfigurationCommandInput;
            constructor(input: PutVoiceConnectorLoggingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorLoggingConfigurationCommandInput, PutVoiceConnectorLoggingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorOriginationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorOriginationRequest, PutVoiceConnectorOriginationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorOriginationCommandInput extends PutVoiceConnectorOriginationRequest {
    }
    export interface PutVoiceConnectorOriginationCommandOutput extends PutVoiceConnectorOriginationResponse, __MetadataBearer {
    }
    /**
        * <p>Adds origination settings for the specified Amazon Chime Voice Connector.</p>
        *
        *          <note>
        *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorOriginationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorOriginationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorOriginationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorOriginationCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorOriginationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorOriginationCommand extends $Command<PutVoiceConnectorOriginationCommandInput, PutVoiceConnectorOriginationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorOriginationCommandInput;
            constructor(input: PutVoiceConnectorOriginationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorOriginationCommandInput, PutVoiceConnectorOriginationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorProxyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorProxyRequest, PutVoiceConnectorProxyResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorProxyCommandInput extends PutVoiceConnectorProxyRequest {
    }
    export interface PutVoiceConnectorProxyCommandOutput extends PutVoiceConnectorProxyResponse, __MetadataBearer {
    }
    /**
        * <p>Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorProxyCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorProxyCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorProxyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorProxyCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorProxyCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorProxyCommand extends $Command<PutVoiceConnectorProxyCommandInput, PutVoiceConnectorProxyCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorProxyCommandInput;
            constructor(input: PutVoiceConnectorProxyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorProxyCommandInput, PutVoiceConnectorProxyCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorStreamingConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorStreamingConfigurationRequest, PutVoiceConnectorStreamingConfigurationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorStreamingConfigurationCommandInput extends PutVoiceConnectorStreamingConfigurationRequest {
    }
    export interface PutVoiceConnectorStreamingConfigurationCommandOutput extends PutVoiceConnectorStreamingConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming
        *             configuration specifies whether media streaming is enabled for sending to Indonesians.
        *             It also sets the retention period, in hours, for the Amazon Kinesis data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorStreamingConfigurationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorStreamingConfigurationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorStreamingConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorStreamingConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorStreamingConfigurationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorStreamingConfigurationCommand extends $Command<PutVoiceConnectorStreamingConfigurationCommandInput, PutVoiceConnectorStreamingConfigurationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorStreamingConfigurationCommandInput;
            constructor(input: PutVoiceConnectorStreamingConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorStreamingConfigurationCommandInput, PutVoiceConnectorStreamingConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorTerminationRequest, PutVoiceConnectorTerminationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorTerminationCommandInput extends PutVoiceConnectorTerminationRequest {
    }
    export interface PutVoiceConnectorTerminationCommandOutput extends PutVoiceConnectorTerminationResponse, __MetadataBearer {
    }
    /**
        * <p>Adds termination settings for the specified Amazon Chime Voice Connector.</p>
        *
        *          <note>
        *             <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorTerminationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorTerminationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorTerminationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorTerminationCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorTerminationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorTerminationCommand extends $Command<PutVoiceConnectorTerminationCommandInput, PutVoiceConnectorTerminationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorTerminationCommandInput;
            constructor(input: PutVoiceConnectorTerminationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorTerminationCommandInput, PutVoiceConnectorTerminationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/PutVoiceConnectorTerminationCredentialsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { PutVoiceConnectorTerminationCredentialsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface PutVoiceConnectorTerminationCredentialsCommandInput extends PutVoiceConnectorTerminationCredentialsRequest {
    }
    export interface PutVoiceConnectorTerminationCredentialsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Adds termination SIP credentials for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, PutVoiceConnectorTerminationCredentialsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, PutVoiceConnectorTerminationCredentialsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new PutVoiceConnectorTerminationCredentialsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutVoiceConnectorTerminationCredentialsCommandInput} for command's `input` shape.
        * @see {@link PutVoiceConnectorTerminationCredentialsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class PutVoiceConnectorTerminationCredentialsCommand extends $Command<PutVoiceConnectorTerminationCredentialsCommandInput, PutVoiceConnectorTerminationCredentialsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: PutVoiceConnectorTerminationCredentialsCommandInput;
            constructor(input: PutVoiceConnectorTerminationCredentialsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutVoiceConnectorTerminationCredentialsCommandInput, PutVoiceConnectorTerminationCredentialsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactChannelMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { RedactChannelMessageRequest, RedactChannelMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface RedactChannelMessageCommandInput extends RedactChannelMessageRequest {
    }
    export interface RedactChannelMessageCommandOutput extends RedactChannelMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Redacts message content, but not metadata. The message exists in the back end, but the
        *          action returns null content, and the state shows as redacted.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, RedactChannelMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, RedactChannelMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new RedactChannelMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RedactChannelMessageCommandInput} for command's `input` shape.
        * @see {@link RedactChannelMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class RedactChannelMessageCommand extends $Command<RedactChannelMessageCommandInput, RedactChannelMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: RedactChannelMessageCommandInput;
            constructor(input: RedactChannelMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RedactChannelMessageCommandInput, RedactChannelMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactConversationMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { RedactConversationMessageRequest, RedactConversationMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface RedactConversationMessageCommandInput extends RedactConversationMessageRequest {
    }
    export interface RedactConversationMessageCommandOutput extends RedactConversationMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Redacts the specified message from the specified Amazon Chime conversation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, RedactConversationMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, RedactConversationMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new RedactConversationMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RedactConversationMessageCommandInput} for command's `input` shape.
        * @see {@link RedactConversationMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class RedactConversationMessageCommand extends $Command<RedactConversationMessageCommandInput, RedactConversationMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: RedactConversationMessageCommandInput;
            constructor(input: RedactConversationMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RedactConversationMessageCommandInput, RedactConversationMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RedactRoomMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { RedactRoomMessageRequest, RedactRoomMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface RedactRoomMessageCommandInput extends RedactRoomMessageRequest {
    }
    export interface RedactRoomMessageCommandOutput extends RedactRoomMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Redacts the specified message from the specified Amazon Chime channel.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, RedactRoomMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, RedactRoomMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new RedactRoomMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RedactRoomMessageCommandInput} for command's `input` shape.
        * @see {@link RedactRoomMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class RedactRoomMessageCommand extends $Command<RedactRoomMessageCommandInput, RedactRoomMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: RedactRoomMessageCommandInput;
            constructor(input: RedactRoomMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RedactRoomMessageCommandInput, RedactRoomMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RegenerateSecurityTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { RegenerateSecurityTokenRequest, RegenerateSecurityTokenResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface RegenerateSecurityTokenCommandInput extends RegenerateSecurityTokenRequest {
    }
    export interface RegenerateSecurityTokenCommandOutput extends RegenerateSecurityTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Regenerates the security token for a bot.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, RegenerateSecurityTokenCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, RegenerateSecurityTokenCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new RegenerateSecurityTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegenerateSecurityTokenCommandInput} for command's `input` shape.
        * @see {@link RegenerateSecurityTokenCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class RegenerateSecurityTokenCommand extends $Command<RegenerateSecurityTokenCommandInput, RegenerateSecurityTokenCommandOutput, ChimeClientResolvedConfig> {
            readonly input: RegenerateSecurityTokenCommandInput;
            constructor(input: RegenerateSecurityTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegenerateSecurityTokenCommandInput, RegenerateSecurityTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/ResetPersonalPINCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { ResetPersonalPINRequest, ResetPersonalPINResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface ResetPersonalPINCommandInput extends ResetPersonalPINRequest {
    }
    export interface ResetPersonalPINCommandOutput extends ResetPersonalPINResponse, __MetadataBearer {
    }
    /**
        * <p>Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns
        *             the <a>User</a> object with the updated personal meeting PIN.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, ResetPersonalPINCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, ResetPersonalPINCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new ResetPersonalPINCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResetPersonalPINCommandInput} for command's `input` shape.
        * @see {@link ResetPersonalPINCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class ResetPersonalPINCommand extends $Command<ResetPersonalPINCommandInput, ResetPersonalPINCommandOutput, ChimeClientResolvedConfig> {
            readonly input: ResetPersonalPINCommandInput;
            constructor(input: ResetPersonalPINCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResetPersonalPINCommandInput, ResetPersonalPINCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/RestorePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { RestorePhoneNumberRequest, RestorePhoneNumberResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface RestorePhoneNumberCommandInput extends RestorePhoneNumberRequest {
    }
    export interface RestorePhoneNumberCommandOutput extends RestorePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Moves a phone number from the <b>Deletion queue</b> back into the
        *             phone number <b>Inventory</b>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, RestorePhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, RestorePhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new RestorePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RestorePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link RestorePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class RestorePhoneNumberCommand extends $Command<RestorePhoneNumberCommandInput, RestorePhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: RestorePhoneNumberCommandInput;
            constructor(input: RestorePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RestorePhoneNumberCommandInput, RestorePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SearchAvailablePhoneNumbersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { SearchAvailablePhoneNumbersRequest, SearchAvailablePhoneNumbersResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface SearchAvailablePhoneNumbersCommandInput extends SearchAvailablePhoneNumbersRequest {
    }
    export interface SearchAvailablePhoneNumbersCommandOutput extends SearchAvailablePhoneNumbersResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for phone numbers that can be ordered. For US numbers, provide at least one of
        *             the following search filters: <code>AreaCode</code>, <code>City</code>,
        *                 <code>State</code>, or <code>TollFreePrefix</code>. If you provide
        *             <code>City</code>, you must also provide <code>State</code>. Numbers outside the US only
        *             support the <code>PhoneNumberType</code> filter, which you must use.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, SearchAvailablePhoneNumbersCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, SearchAvailablePhoneNumbersCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new SearchAvailablePhoneNumbersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchAvailablePhoneNumbersCommandInput} for command's `input` shape.
        * @see {@link SearchAvailablePhoneNumbersCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class SearchAvailablePhoneNumbersCommand extends $Command<SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput, ChimeClientResolvedConfig> {
            readonly input: SearchAvailablePhoneNumbersCommandInput;
            constructor(input: SearchAvailablePhoneNumbersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchAvailablePhoneNumbersCommandInput, SearchAvailablePhoneNumbersCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/SendChannelMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { SendChannelMessageRequest, SendChannelMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface SendChannelMessageCommandInput extends SendChannelMessageRequest {
    }
    export interface SendChannelMessageCommandOutput extends SendChannelMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Sends a message to a particular channel that the member is a part of.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *
        *             <p>Also, <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata.
        *                <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, SendChannelMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, SendChannelMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new SendChannelMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SendChannelMessageCommandInput} for command's `input` shape.
        * @see {@link SendChannelMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class SendChannelMessageCommand extends $Command<SendChannelMessageCommandInput, SendChannelMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: SendChannelMessageCommandInput;
            constructor(input: SendChannelMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SendChannelMessageCommandInput, SendChannelMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StartMeetingTranscriptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { StartMeetingTranscriptionRequest, StartMeetingTranscriptionResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface StartMeetingTranscriptionCommandInput extends StartMeetingTranscriptionRequest {
    }
    export interface StartMeetingTranscriptionCommandOutput extends StartMeetingTranscriptionResponse, __MetadataBearer {
    }
    /**
        * <p>Starts transcription for the specified <code>meetingId</code>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, StartMeetingTranscriptionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, StartMeetingTranscriptionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new StartMeetingTranscriptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartMeetingTranscriptionCommandInput} for command's `input` shape.
        * @see {@link StartMeetingTranscriptionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class StartMeetingTranscriptionCommand extends $Command<StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: StartMeetingTranscriptionCommandInput;
            constructor(input: StartMeetingTranscriptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartMeetingTranscriptionCommandInput, StartMeetingTranscriptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/StopMeetingTranscriptionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { StopMeetingTranscriptionRequest, StopMeetingTranscriptionResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface StopMeetingTranscriptionCommandInput extends StopMeetingTranscriptionRequest {
    }
    export interface StopMeetingTranscriptionCommandOutput extends StopMeetingTranscriptionResponse, __MetadataBearer {
    }
    /**
        * <p>Stops transcription for the specified <code>meetingId</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, StopMeetingTranscriptionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, StopMeetingTranscriptionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new StopMeetingTranscriptionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StopMeetingTranscriptionCommandInput} for command's `input` shape.
        * @see {@link StopMeetingTranscriptionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class StopMeetingTranscriptionCommand extends $Command<StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: StopMeetingTranscriptionCommandInput;
            constructor(input: StopMeetingTranscriptionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopMeetingTranscriptionCommandInput, StopMeetingTranscriptionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { TagAttendeeRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface TagAttendeeCommandInput extends TagAttendeeRequest {
    }
    export interface TagAttendeeCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Applies the specified tags to the specified Amazon Chime SDK attendee.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, TagAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, TagAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new TagAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagAttendeeCommandInput} for command's `input` shape.
        * @see {@link TagAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class TagAttendeeCommand extends $Command<TagAttendeeCommandInput, TagAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: TagAttendeeCommandInput;
            constructor(input: TagAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagAttendeeCommandInput, TagAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { TagMeetingRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface TagMeetingCommandInput extends TagMeetingRequest {
    }
    export interface TagMeetingCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Applies the specified tags to the specified Amazon Chime SDK meeting.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, TagMeetingCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, TagMeetingCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new TagMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagMeetingCommandInput} for command's `input` shape.
        * @see {@link TagMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class TagMeetingCommand extends $Command<TagMeetingCommandInput, TagMeetingCommandOutput, ChimeClientResolvedConfig> {
            readonly input: TagMeetingCommandInput;
            constructor(input: TagMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagMeetingCommandInput, TagMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { TagResourceRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Applies the specified tags to the specified Amazon Chime SDK meeting resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, TagResourceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, TagResourceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagAttendeeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UntagAttendeeRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UntagAttendeeCommandInput extends UntagAttendeeRequest {
    }
    export interface UntagAttendeeCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Untags the specified tags from the specified Amazon Chime SDK attendee.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UntagAttendeeCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UntagAttendeeCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UntagAttendeeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagAttendeeCommandInput} for command's `input` shape.
        * @see {@link UntagAttendeeCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UntagAttendeeCommand extends $Command<UntagAttendeeCommandInput, UntagAttendeeCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UntagAttendeeCommandInput;
            constructor(input: UntagAttendeeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagAttendeeCommandInput, UntagAttendeeCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagMeetingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UntagMeetingRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UntagMeetingCommandInput extends UntagMeetingRequest {
    }
    export interface UntagMeetingCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Untags the specified tags from the specified Amazon Chime SDK meeting.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UntagMeetingCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UntagMeetingCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UntagMeetingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagMeetingCommandInput} for command's `input` shape.
        * @see {@link UntagMeetingCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UntagMeetingCommand extends $Command<UntagMeetingCommandInput, UntagMeetingCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UntagMeetingCommandInput;
            constructor(input: UntagMeetingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagMeetingCommandInput, UntagMeetingCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UntagResourceRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Untags the specified tags from the specified Amazon Chime SDK meeting resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UntagResourceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UntagResourceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateAccountRequest, UpdateAccountResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateAccountCommandInput extends UpdateAccountRequest {
    }
    export interface UpdateAccountCommandOutput extends UpdateAccountResponse, __MetadataBearer {
    }
    /**
        * <p>Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateAccountCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateAccountCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateAccountCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAccountCommandInput} for command's `input` shape.
        * @see {@link UpdateAccountCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateAccountCommand extends $Command<UpdateAccountCommandInput, UpdateAccountCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateAccountCommandInput;
            constructor(input: UpdateAccountCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccountCommandInput, UpdateAccountCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAccountSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateAccountSettingsRequest, UpdateAccountSettingsResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateAccountSettingsCommandInput extends UpdateAccountSettingsRequest {
    }
    export interface UpdateAccountSettingsCommandOutput extends UpdateAccountSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the settings for the specified Amazon Chime account. You can update settings for
        *             remote control of shared screens, or for the dial-out option. For more information about
        *             these settings, see <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use
        *                 the Policies Page</a> in the <i>Amazon Chime Administration
        *                 Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateAccountSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateAccountSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateAccountSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAccountSettingsCommandInput} for command's `input` shape.
        * @see {@link UpdateAccountSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateAccountSettingsCommand extends $Command<UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateAccountSettingsCommandInput;
            constructor(input: UpdateAccountSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateAppInstanceRequest, UpdateAppInstanceResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateAppInstanceCommandInput extends UpdateAppInstanceRequest {
    }
    export interface UpdateAppInstanceCommandOutput extends UpdateAppInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Updates <code>AppInstance</code> metadata.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateAppInstanceCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateAppInstanceCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateAppInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAppInstanceCommandInput} for command's `input` shape.
        * @see {@link UpdateAppInstanceCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateAppInstanceCommand extends $Command<UpdateAppInstanceCommandInput, UpdateAppInstanceCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateAppInstanceCommandInput;
            constructor(input: UpdateAppInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAppInstanceCommandInput, UpdateAppInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateAppInstanceUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateAppInstanceUserRequest, UpdateAppInstanceUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateAppInstanceUserCommandInput extends UpdateAppInstanceUserRequest {
    }
    export interface UpdateAppInstanceUserCommandOutput extends UpdateAppInstanceUserResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the details of an <code>AppInstanceUser</code>. You can update names and metadata.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateAppInstanceUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateAppInstanceUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateAppInstanceUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAppInstanceUserCommandInput} for command's `input` shape.
        * @see {@link UpdateAppInstanceUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateAppInstanceUserCommand extends $Command<UpdateAppInstanceUserCommandInput, UpdateAppInstanceUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateAppInstanceUserCommandInput;
            constructor(input: UpdateAppInstanceUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAppInstanceUserCommandInput, UpdateAppInstanceUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateBotCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateBotRequest, UpdateBotResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateBotCommandInput extends UpdateBotRequest {
    }
    export interface UpdateBotCommandOutput extends UpdateBotResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateBotCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateBotCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateBotCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateBotCommandInput} for command's `input` shape.
        * @see {@link UpdateBotCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateBotCommand extends $Command<UpdateBotCommandInput, UpdateBotCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateBotCommandInput;
            constructor(input: UpdateBotCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBotCommandInput, UpdateBotCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateChannelRequest, UpdateChannelResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateChannelCommandInput extends UpdateChannelRequest {
    }
    export interface UpdateChannelCommandOutput extends UpdateChannelResponse, __MetadataBearer {
    }
    /**
        * <p>Update a channel's attributes.</p>
        *          <p>
        *             <b>Restriction</b>: You can't change a channel's privacy. </p>
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateChannelCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateChannelCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateChannelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateChannelCommandInput} for command's `input` shape.
        * @see {@link UpdateChannelCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateChannelCommand extends $Command<UpdateChannelCommandInput, UpdateChannelCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateChannelCommandInput;
            constructor(input: UpdateChannelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateChannelCommandInput, UpdateChannelCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelMessageCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateChannelMessageRequest, UpdateChannelMessageResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateChannelMessageCommandInput extends UpdateChannelMessageRequest {
    }
    export interface UpdateChannelMessageCommandOutput extends UpdateChannelMessageResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the content of a message.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateChannelMessageCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateChannelMessageCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateChannelMessageCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateChannelMessageCommandInput} for command's `input` shape.
        * @see {@link UpdateChannelMessageCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateChannelMessageCommand extends $Command<UpdateChannelMessageCommandInput, UpdateChannelMessageCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateChannelMessageCommandInput;
            constructor(input: UpdateChannelMessageCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateChannelMessageCommandInput, UpdateChannelMessageCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateChannelReadMarkerCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateChannelReadMarkerRequest, UpdateChannelReadMarkerResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateChannelReadMarkerCommandInput extends UpdateChannelReadMarkerRequest {
    }
    export interface UpdateChannelReadMarkerCommandOutput extends UpdateChannelReadMarkerResponse, __MetadataBearer {
    }
    /**
        * <p>The details of the time when a user last read messages in a channel.</p>
        *
        *          <note>
        *             <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        *                <code>AppInstanceUserArn</code> of the user that makes the API call as the value in
        *             the header.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateChannelReadMarkerCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateChannelReadMarkerCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateChannelReadMarkerCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateChannelReadMarkerCommandInput} for command's `input` shape.
        * @see {@link UpdateChannelReadMarkerCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateChannelReadMarkerCommand extends $Command<UpdateChannelReadMarkerCommandInput, UpdateChannelReadMarkerCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateChannelReadMarkerCommandInput;
            constructor(input: UpdateChannelReadMarkerCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateChannelReadMarkerCommandInput, UpdateChannelReadMarkerCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateGlobalSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateGlobalSettingsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateGlobalSettingsCommandInput extends UpdateGlobalSettingsRequest {
    }
    export interface UpdateGlobalSettingsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateGlobalSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateGlobalSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateGlobalSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateGlobalSettingsCommandInput} for command's `input` shape.
        * @see {@link UpdateGlobalSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateGlobalSettingsCommand extends $Command<UpdateGlobalSettingsCommandInput, UpdateGlobalSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateGlobalSettingsCommandInput;
            constructor(input: UpdateGlobalSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateGlobalSettingsCommandInput, UpdateGlobalSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdatePhoneNumberRequest, UpdatePhoneNumberResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdatePhoneNumberCommandInput extends UpdatePhoneNumberRequest {
    }
    export interface UpdatePhoneNumberCommandOutput extends UpdatePhoneNumberResponse, __MetadataBearer {
    }
    /**
        * <p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p>
        *          <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p>
        *          <p>Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdatePhoneNumberCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdatePhoneNumberCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdatePhoneNumberCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePhoneNumberCommandInput} for command's `input` shape.
        * @see {@link UpdatePhoneNumberCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdatePhoneNumberCommand extends $Command<UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdatePhoneNumberCommandInput;
            constructor(input: UpdatePhoneNumberCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePhoneNumberCommandInput, UpdatePhoneNumberCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdatePhoneNumberSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdatePhoneNumberSettingsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdatePhoneNumberSettingsCommandInput extends UpdatePhoneNumberSettingsRequest {
    }
    export interface UpdatePhoneNumberSettingsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the phone number settings for the administrator's AWS account, such as the default
        *             outbound calling name. You can update the default outbound calling name once every seven
        *             days. Outbound calling names can take up to 72 hours to update.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdatePhoneNumberSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdatePhoneNumberSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdatePhoneNumberSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePhoneNumberSettingsCommandInput} for command's `input` shape.
        * @see {@link UpdatePhoneNumberSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdatePhoneNumberSettingsCommand extends $Command<UpdatePhoneNumberSettingsCommandInput, UpdatePhoneNumberSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdatePhoneNumberSettingsCommandInput;
            constructor(input: UpdatePhoneNumberSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePhoneNumberSettingsCommandInput, UpdatePhoneNumberSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateProxySessionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateProxySessionRequest, UpdateProxySessionResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateProxySessionCommandInput extends UpdateProxySessionRequest {
    }
    export interface UpdateProxySessionCommandOutput extends UpdateProxySessionResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the specified proxy session details, such as voice or SMS capabilities.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateProxySessionCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateProxySessionCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateProxySessionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProxySessionCommandInput} for command's `input` shape.
        * @see {@link UpdateProxySessionCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateProxySessionCommand extends $Command<UpdateProxySessionCommandInput, UpdateProxySessionCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateProxySessionCommandInput;
            constructor(input: UpdateProxySessionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProxySessionCommandInput, UpdateProxySessionCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateRoomRequest, UpdateRoomResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateRoomCommandInput extends UpdateRoomRequest {
    }
    export interface UpdateRoomCommandOutput extends UpdateRoomResponse, __MetadataBearer {
    }
    /**
        * <p>Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateRoomCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateRoomCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateRoomCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoomCommandInput} for command's `input` shape.
        * @see {@link UpdateRoomCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateRoomCommand extends $Command<UpdateRoomCommandInput, UpdateRoomCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateRoomCommandInput;
            constructor(input: UpdateRoomCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoomCommandInput, UpdateRoomCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateRoomMembershipCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateRoomMembershipRequest, UpdateRoomMembershipResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateRoomMembershipCommandInput extends UpdateRoomMembershipRequest {
    }
    export interface UpdateRoomMembershipCommandOutput extends UpdateRoomMembershipResponse, __MetadataBearer {
    }
    /**
        * <p>Updates room membership details, such as the member role, for a room in an Amazon Chime
        *             Enterprise account. The member role designates whether the member is a chat room
        *             administrator or a general chat room member. The member role can be updated only for
        *             user IDs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateRoomMembershipCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateRoomMembershipCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateRoomMembershipCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRoomMembershipCommandInput} for command's `input` shape.
        * @see {@link UpdateRoomMembershipCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateRoomMembershipCommand extends $Command<UpdateRoomMembershipCommandInput, UpdateRoomMembershipCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateRoomMembershipCommandInput;
            constructor(input: UpdateRoomMembershipCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRoomMembershipCommandInput, UpdateRoomMembershipCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCallCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateSipMediaApplicationCallRequest, UpdateSipMediaApplicationCallResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateSipMediaApplicationCallCommandInput extends UpdateSipMediaApplicationCallRequest {
    }
    export interface UpdateSipMediaApplicationCallCommandOutput extends UpdateSipMediaApplicationCallResponse, __MetadataBearer {
    }
    /**
        * <p>Invokes the AWS Lambda function associated with the SIP media application and transaction ID in an update request. The Lambda function can then return a new set of actions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateSipMediaApplicationCallCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateSipMediaApplicationCallCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateSipMediaApplicationCallCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSipMediaApplicationCallCommandInput} for command's `input` shape.
        * @see {@link UpdateSipMediaApplicationCallCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateSipMediaApplicationCallCommand extends $Command<UpdateSipMediaApplicationCallCommandInput, UpdateSipMediaApplicationCallCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateSipMediaApplicationCallCommandInput;
            constructor(input: UpdateSipMediaApplicationCallCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSipMediaApplicationCallCommandInput, UpdateSipMediaApplicationCallCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipMediaApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateSipMediaApplicationRequest, UpdateSipMediaApplicationResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateSipMediaApplicationCommandInput extends UpdateSipMediaApplicationRequest {
    }
    export interface UpdateSipMediaApplicationCommandOutput extends UpdateSipMediaApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the details of the specified SIP media application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateSipMediaApplicationCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateSipMediaApplicationCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateSipMediaApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSipMediaApplicationCommandInput} for command's `input` shape.
        * @see {@link UpdateSipMediaApplicationCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateSipMediaApplicationCommand extends $Command<UpdateSipMediaApplicationCommandInput, UpdateSipMediaApplicationCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateSipMediaApplicationCommandInput;
            constructor(input: UpdateSipMediaApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSipMediaApplicationCommandInput, UpdateSipMediaApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateSipRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateSipRuleRequest, UpdateSipRuleResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateSipRuleCommandInput extends UpdateSipRuleRequest {
    }
    export interface UpdateSipRuleCommandOutput extends UpdateSipRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the details of the specified SIP rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateSipRuleCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateSipRuleCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateSipRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSipRuleCommandInput} for command's `input` shape.
        * @see {@link UpdateSipRuleCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateSipRuleCommand extends $Command<UpdateSipRuleCommandInput, UpdateSipRuleCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateSipRuleCommandInput;
            constructor(input: UpdateSipRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSipRuleCommandInput, UpdateSipRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateUserRequest, UpdateUserResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateUserCommandInput extends UpdateUserRequest {
    }
    export interface UpdateUserCommandOutput extends UpdateUserResponse, __MetadataBearer {
    }
    /**
        * <p>Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateUserCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateUserCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserCommandInput} for command's `input` shape.
        * @see {@link UpdateUserCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateUserCommand extends $Command<UpdateUserCommandInput, UpdateUserCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateUserCommandInput;
            constructor(input: UpdateUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserCommandInput, UpdateUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateUserSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateUserSettingsRequest } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateUserSettingsCommandInput extends UpdateUserSettingsRequest {
    }
    export interface UpdateUserSettingsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates the settings for the specified user, such as phone number settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateUserSettingsCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateUserSettingsCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateUserSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateUserSettingsCommandInput} for command's `input` shape.
        * @see {@link UpdateUserSettingsCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateUserSettingsCommand extends $Command<UpdateUserSettingsCommandInput, UpdateUserSettingsCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateUserSettingsCommandInput;
            constructor(input: UpdateUserSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateUserSettingsCommandInput, UpdateUserSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateVoiceConnectorRequest, UpdateVoiceConnectorResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateVoiceConnectorCommandInput extends UpdateVoiceConnectorRequest {
    }
    export interface UpdateVoiceConnectorCommandOutput extends UpdateVoiceConnectorResponse, __MetadataBearer {
    }
    /**
        * <p>Updates details for the specified Amazon Chime Voice Connector.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateVoiceConnectorCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateVoiceConnectorCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateVoiceConnectorCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateVoiceConnectorCommandInput} for command's `input` shape.
        * @see {@link UpdateVoiceConnectorCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateVoiceConnectorCommand extends $Command<UpdateVoiceConnectorCommandInput, UpdateVoiceConnectorCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateVoiceConnectorCommandInput;
            constructor(input: UpdateVoiceConnectorCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateVoiceConnectorCommandInput, UpdateVoiceConnectorCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/commands/UpdateVoiceConnectorGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ChimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/ChimeClient";
    import { UpdateVoiceConnectorGroupRequest, UpdateVoiceConnectorGroupResponse } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1";
    export interface UpdateVoiceConnectorGroupCommandInput extends UpdateVoiceConnectorGroupRequest {
    }
    export interface UpdateVoiceConnectorGroupCommandOutput extends UpdateVoiceConnectorGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Updates details of the specified Amazon Chime Voice Connector group, such as the name and
        *             Amazon Chime Voice Connector priority ranking.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ChimeClient, UpdateVoiceConnectorGroupCommand } from "@aws-sdk/client-chime"; // ES Modules import
        * // const { ChimeClient, UpdateVoiceConnectorGroupCommand } = require("@aws-sdk/client-chime"); // CommonJS import
        * const client = new ChimeClient(config);
        * const command = new UpdateVoiceConnectorGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateVoiceConnectorGroupCommandInput} for command's `input` shape.
        * @see {@link UpdateVoiceConnectorGroupCommandOutput} for command's `response` shape.
        * @see {@link ChimeClientResolvedConfig | config} for ChimeClient's `config` shape.
        *
        */
    export class UpdateVoiceConnectorGroupCommand extends $Command<UpdateVoiceConnectorGroupCommandInput, UpdateVoiceConnectorGroupCommandOutput, ChimeClientResolvedConfig> {
            readonly input: UpdateVoiceConnectorGroupCommandInput;
            constructor(input: UpdateVoiceConnectorGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ChimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateVoiceConnectorGroupCommandInput, UpdateVoiceConnectorGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ChimeServiceException as __BaseException } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/ChimeServiceException";
    export enum ErrorCode {
            AccessDenied = "AccessDenied",
            BadRequest = "BadRequest",
            Conflict = "Conflict",
            Forbidden = "Forbidden",
            NotFound = "NotFound",
            PhoneNumberAssociationsExist = "PhoneNumberAssociationsExist",
            PreconditionFailed = "PreconditionFailed",
            ResourceLimitExceeded = "ResourceLimitExceeded",
            ServiceFailure = "ServiceFailure",
            ServiceUnavailable = "ServiceUnavailable",
            Throttled = "Throttled",
            Throttling = "Throttling",
            Unauthorized = "Unauthorized",
            Unprocessable = "Unprocessable",
            VoiceConnectorGroupAssociationsExist = "VoiceConnectorGroupAssociationsExist"
    }
    /**
        * <p>You don't have permissions to perform the requested operation.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum AccountStatus {
            Active = "Active",
            Suspended = "Suspended"
    }
    export enum AccountType {
            EnterpriseDirectory = "EnterpriseDirectory",
            EnterpriseLWA = "EnterpriseLWA",
            EnterpriseOIDC = "EnterpriseOIDC",
            Team = "Team"
    }
    export enum License {
            Basic = "Basic",
            Plus = "Plus",
            Pro = "Pro",
            ProTrial = "ProTrial"
    }
    /**
        * <p>An Active Directory (AD) group whose members are granted permission to act as delegates.</p>
        */
    export interface SigninDelegateGroup {
            /**
                * <p>The group name.</p>
                */
            GroupName?: string;
    }
    export namespace SigninDelegateGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SigninDelegateGroup) => any;
    }
    /**
        * <p>The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.</p>
        */
    export interface Account {
            /**
                * <p>The AWS account ID.</p>
                */
            AwsAccountId: string | undefined;
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The Amazon Chime account name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The Amazon Chime account type. For more information about different account types, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration
                *                 Guide</i>.</p>
                */
            AccountType?: AccountType | string;
            /**
                * <p>The Amazon Chime account creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The default license for the Amazon Chime account.</p>
                */
            DefaultLicense?: License | string;
            /**
                * <p>Supported licenses for the Amazon Chime account.</p>
                */
            SupportedLicenses?: (License | string)[];
            /**
                * <p>The status of the account.</p>
                */
            AccountStatus?: AccountStatus | string;
            /**
                * <p>The sign-in delegate groups associated with the account.</p>
                */
            SigninDelegateGroups?: SigninDelegateGroup[];
    }
    export namespace Account {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Account) => any;
    }
    /**
        * <p>Settings related to the Amazon Chime account. This includes settings that start or stop
        *             remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see
        *     <a href="https://docs.aws.amazon.com/chime/latest/ag/policies.html">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.</p>
        */
    export interface AccountSettings {
            /**
                * <p>Setting that stops or starts remote control of shared screens during meetings.</p>
                */
            DisableRemoteControl?: boolean;
            /**
                * <p>Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see
                *     <a href="https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html">Join a Meeting without the Amazon Chime App</a>.</p>
                */
            EnableDialOut?: boolean;
    }
    export namespace AccountSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccountSettings) => any;
    }
    /**
        * <p>The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.</p>
        */
    export interface AlexaForBusinessMetadata {
            /**
                * <p>Starts or stops Alexa for Business.</p>
                */
            IsAlexaForBusinessEnabled?: boolean;
            /**
                * <p>The ARN of the room resource.</p>
                */
            AlexaForBusinessRoomArn?: string;
    }
    export namespace AlexaForBusinessMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlexaForBusinessMetadata) => any;
    }
    /**
        * <p>The details of an <code>AppInstance</code>, an instance of an Amazon Chime SDK messaging application.</p>
        */
    export interface AppInstance {
            /**
                * <p>The ARN of the messaging instance.</p>
                */
            AppInstanceArn?: string;
            /**
                * <p>The name of an <code>AppInstance</code>.</p>
                */
            Name?: string;
            /**
                * <p>The metadata of an <code>AppInstance</code>.</p>
                */
            Metadata?: string;
            /**
                * <p>The time at which an <code>AppInstance</code> was created. In epoch milliseconds.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time an <code>AppInstance</code> was last updated. In epoch milliseconds.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace AppInstance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstance) => any;
    }
    /**
        * <p>The details of a user.</p>
        */
    export interface Identity {
            /**
                * <p>The ARN in an Identity.</p>
                */
            Arn?: string;
            /**
                * <p>The name in an Identity.</p>
                */
            Name?: string;
    }
    export namespace Identity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Identity) => any;
    }
    /**
        * <p>The details of an <code>AppInstanceAdmin</code>.</p>
        */
    export interface AppInstanceAdmin {
            /**
                * <p>The <code>AppInstanceAdmin</code> data.</p>
                */
            Admin?: Identity;
            /**
                * <p>The ARN of the <code>AppInstance</code> for which the user is an administrator.</p>
                */
            AppInstanceArn?: string;
            /**
                * <p>The time at which an administrator was created.</p>
                */
            CreatedTimestamp?: Date;
    }
    export namespace AppInstanceAdmin {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceAdmin) => any;
    }
    /**
        * <p>Summary of the details of an <code>AppInstanceAdmin</code>.</p>
        */
    export interface AppInstanceAdminSummary {
            /**
                * <p>The details of the <code>AppInstanceAdmin</code>.</p>
                */
            Admin?: Identity;
    }
    export namespace AppInstanceAdminSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceAdminSummary) => any;
    }
    export enum AppInstanceDataType {
            Channel = "Channel",
            ChannelMessage = "ChannelMessage"
    }
    /**
        * <p>Summary of the data for an <code>AppInstance</code>.</p>
        */
    export interface AppInstanceSummary {
            /**
                * <p>The <code>AppInstance</code> ARN.</p>
                */
            AppInstanceArn?: string;
            /**
                * <p>The name of the <code>AppInstance</code>.</p>
                */
            Name?: string;
            /**
                * <p>The metadata of the <code>AppInstance</code>.</p>
                */
            Metadata?: string;
    }
    export namespace AppInstanceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceSummary) => any;
    }
    /**
        * <p>The details of the retention settings for a channel.</p>
        */
    export interface ChannelRetentionSettings {
            /**
                * <p>The time in days to retain the messages in a channel.</p>
                */
            RetentionDays?: number;
    }
    export namespace ChannelRetentionSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelRetentionSettings) => any;
    }
    /**
        * <p>The details of the data-retention settings for an <code>AppInstance</code>.</p>
        */
    export interface AppInstanceRetentionSettings {
            /**
                * <p>The length of time in days to retain the messages in a channel.</p>
                */
            ChannelRetentionSettings?: ChannelRetentionSettings;
    }
    export namespace AppInstanceRetentionSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceRetentionSettings) => any;
    }
    /**
        * <p>The details of the streaming configuration of an <code>AppInstance</code>.</p>
        */
    export interface AppInstanceStreamingConfiguration {
            /**
                * <p>The type of data to be streamed.</p>
                */
            AppInstanceDataType: AppInstanceDataType | string | undefined;
            /**
                * <p>The resource ARN.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace AppInstanceStreamingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceStreamingConfiguration) => any;
    }
    /**
        * <p>The details of an <code>AppInstanceUser</code>.</p>
        */
    export interface AppInstanceUser {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserArn?: string;
            /**
                * <p>The name of the <code>AppInstanceUser</code>.</p>
                */
            Name?: string;
            /**
                * <p>The time at which the <code>AppInstanceUser</code> was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The metadata of the <code>AppInstanceUser</code>.</p>
                */
            Metadata?: string;
            /**
                * <p>The time at which the <code>AppInstanceUser</code> was last updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace AppInstanceUser {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceUser) => any;
    }
    /**
        * <p>Summary of the details of an <code>AppInstanceUser</code>.</p>
        */
    export interface AppInstanceUserSummary {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserArn?: string;
            /**
                * <p>The name of an <code>AppInstanceUser</code>.</p>
                */
            Name?: string;
            /**
                * <p>The metadata of the <code>AppInstanceUser</code>.</p>
                */
            Metadata?: string;
    }
    export namespace AppInstanceUserSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceUserSummary) => any;
    }
    export enum ChannelMembershipType {
            DEFAULT = "DEFAULT",
            HIDDEN = "HIDDEN"
    }
    /**
        * <p>Summary of the membership details of an <code>AppInstanceUser</code>.</p>
        */
    export interface AppInstanceUserMembershipSummary {
            /**
                * <p>The type of <code>ChannelMembership</code>.</p>
                */
            Type?: ChannelMembershipType | string;
            /**
                * <p>The time at which a message was last read.</p>
                */
            ReadMarkerTimestamp?: Date;
    }
    export namespace AppInstanceUserMembershipSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppInstanceUserMembershipSummary) => any;
    }
    export enum AudioMuxType {
            AudioOnly = "AudioOnly",
            AudioWithActiveSpeakerVideo = "AudioWithActiveSpeakerVideo"
    }
    /**
        * <p>The audio artifact configuration object.</p>
        */
    export interface AudioArtifactsConfiguration {
            /**
                * <p>The MUX type of the audio artifact configuration object.</p>
                */
            MuxType: AudioMuxType | string | undefined;
    }
    export namespace AudioArtifactsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AudioArtifactsConfiguration) => any;
    }
    export enum ContentMuxType {
            ContentOnly = "ContentOnly"
    }
    export enum ArtifactsState {
            Disabled = "Disabled",
            Enabled = "Enabled"
    }
    /**
        * <p>The content artifact object.</p>
        */
    export interface ContentArtifactsConfiguration {
            /**
                * <p>Indicates whether the content artifact is enabled or disabled.</p>
                */
            State: ArtifactsState | string | undefined;
            /**
                * <p>The MUX type of the artifact configuration.</p>
                */
            MuxType?: ContentMuxType | string;
    }
    export namespace ContentArtifactsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ContentArtifactsConfiguration) => any;
    }
    export enum VideoMuxType {
            VideoOnly = "VideoOnly"
    }
    /**
        * <p>The video artifact configuration object.</p>
        */
    export interface VideoArtifactsConfiguration {
            /**
                * <p>Indicates whether the video artifact is enabled or disabled.</p>
                */
            State: ArtifactsState | string | undefined;
            /**
                * <p>The MUX type of the video artifact configuration object.</p>
                */
            MuxType?: VideoMuxType | string;
    }
    export namespace VideoArtifactsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VideoArtifactsConfiguration) => any;
    }
    /**
        * <p>The configuration for the artifacts.</p>
        */
    export interface ArtifactsConfiguration {
            /**
                * <p>The configuration for the audio artifacts.</p>
                */
            Audio: AudioArtifactsConfiguration | undefined;
            /**
                * <p>The configuration for the video artifacts.</p>
                */
            Video: VideoArtifactsConfiguration | undefined;
            /**
                * <p>The configuration for the content artifacts.</p>
                */
            Content: ContentArtifactsConfiguration | undefined;
    }
    export namespace ArtifactsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ArtifactsConfiguration) => any;
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers: string[] | undefined;
            /**
                * <p>If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
                */
            ForceAssociate?: boolean;
    }
    export namespace AssociatePhoneNumbersWithVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumbersWithVoiceConnectorRequest) => any;
    }
    /**
        * <p>If the phone number action fails for one or more of the phone numbers in the request, a list of
        *             the phone numbers is returned, along with error codes and error messages.</p>
        */
    export interface PhoneNumberError {
            /**
                * <p>The phone number ID for which the action failed.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: ErrorCode | string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace PhoneNumberError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberError) => any;
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and
                *     error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace AssociatePhoneNumbersWithVoiceConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumbersWithVoiceConnectorResponse) => any;
    }
    /**
        * <p>The input parameters don't match the service's restrictions.</p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    /**
        * <p>The client is permanently forbidden from making the request.</p>
        */
    export class ForbiddenException extends __BaseException {
            readonly name: "ForbiddenException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
    }
    /**
        * <p>One or more of the resources in the request does not exist in the system.</p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    /**
        * <p>The service encountered an unexpected error.</p>
        */
    export class ServiceFailureException extends __BaseException {
            readonly name: "ServiceFailureException";
            readonly $fault: "server";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceFailureException, __BaseException>);
    }
    /**
        * <p>The service is currently unavailable.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>The client exceeded its request rate limit.</p>
        */
    export class ThrottledClientException extends __BaseException {
            readonly name: "ThrottledClientException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottledClientException, __BaseException>);
    }
    /**
        * <p>The client is not currently authorized to make the request.</p>
        */
    export class UnauthorizedClientException extends __BaseException {
            readonly name: "UnauthorizedClientException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedClientException, __BaseException>);
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorGroupRequest {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId: string | undefined;
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers: string[] | undefined;
            /**
                * <p>If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
                */
            ForceAssociate?: boolean;
    }
    export namespace AssociatePhoneNumbersWithVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumbersWithVoiceConnectorGroupRequest) => any;
    }
    export interface AssociatePhoneNumbersWithVoiceConnectorGroupResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace AssociatePhoneNumbersWithVoiceConnectorGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumbersWithVoiceConnectorGroupResponse) => any;
    }
    export interface AssociatePhoneNumberWithUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The phone number, in E.164 format.</p>
                */
            E164PhoneNumber: string | undefined;
    }
    export namespace AssociatePhoneNumberWithUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumberWithUserRequest) => any;
    }
    export interface AssociatePhoneNumberWithUserResponse {
    }
    export namespace AssociatePhoneNumberWithUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatePhoneNumberWithUserResponse) => any;
    }
    export interface AssociateSigninDelegateGroupsWithAccountRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The sign-in delegate groups.</p>
                */
            SigninDelegateGroups: SigninDelegateGroup[] | undefined;
    }
    export namespace AssociateSigninDelegateGroupsWithAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateSigninDelegateGroupsWithAccountRequest) => any;
    }
    export interface AssociateSigninDelegateGroupsWithAccountResponse {
    }
    export namespace AssociateSigninDelegateGroupsWithAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateSigninDelegateGroupsWithAccountResponse) => any;
    }
    /**
        * <p>
        * An Amazon Chime SDK meeting attendee. Includes a unique
        * <code>AttendeeId</code>
        * and
        * <code>JoinToken</code>
        * . The
        * <code>JoinToken</code>
        * allows a client to authenticate and join as the specified attendee. The
        * <code>JoinToken</code>
        * expires when the meeting ends or when
        * <a>DeleteAttendee</a>
        * is called. After that, the attendee is unable to join the meeting.
        * </p>
        *
        *          <p>We recommend securely transferring each <code>JoinToken</code> from your server application
        *             to the client so that no other client has access to the token except for the one
        *             authorized to represent the attendee.</p>
        */
    export interface Attendee {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId?: string;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId?: string;
            /**
                * <p>The join token used by the Amazon Chime SDK attendee.</p>
                */
            JoinToken?: string;
    }
    export namespace Attendee {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attendee) => any;
    }
    /**
        * <p>Describes a tag applied to a resource.</p>
        */
    export interface Tag {
            /**
                * <p>The key of the tag.</p>
                */
            Key: string | undefined;
            /**
                * <p>The value of the tag.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    /**
        * <p>The membership information, including member ARNs, the channel ARN, and membership
        *          types.</p>
        */
    export interface BatchChannelMemberships {
            /**
                * <p>The identifier of the member who invited another member.</p>
                */
            InvitedBy?: Identity;
            /**
                * <p>The membership types set for the channel users.</p>
                */
            Type?: ChannelMembershipType | string;
            /**
                * <p>The users successfully added to the request.</p>
                */
            Members?: Identity[];
            /**
                * <p>The ARN of the channel to which you're adding users.</p>
                */
            ChannelArn?: string;
    }
    export namespace BatchChannelMemberships {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchChannelMemberships) => any;
    }
    /**
        * <p>The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.</p>
        */
    export interface CreateAttendeeRequestItem {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateAttendeeRequestItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeRequestItem) => any;
    }
    export interface BatchCreateAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The request containing the attendees to create.</p>
                */
            Attendees: CreateAttendeeRequestItem[] | undefined;
    }
    export namespace BatchCreateAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateAttendeeRequest) => any;
    }
    /**
        * <p>The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.</p>
        */
    export interface CreateAttendeeError {
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace CreateAttendeeError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeError) => any;
    }
    export interface BatchCreateAttendeeResponse {
            /**
                * <p>The attendee information, including attendees IDs and join tokens.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>
                */
            Errors?: CreateAttendeeError[];
    }
    export namespace BatchCreateAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateAttendeeResponse) => any;
    }
    /**
        * <p>The request exceeds the resource limit.</p>
        */
    export class ResourceLimitExceededException extends __BaseException {
            readonly name: "ResourceLimitExceededException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceLimitExceededException, __BaseException>);
    }
    export interface BatchCreateChannelMembershipRequest {
            /**
                * <p>The ARN of the channel to which you're adding users.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default
                *          members are always returned as part of <code>ListChannelMemberships</code>. Hidden members
                *          are only returned if the type filter in <code>ListChannelMemberships</code> equals
                *             <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported
                *          by moderators.</p>
                */
            Type?: ChannelMembershipType | string;
            /**
                * <p>The ARNs of the members you want to add to the channel.</p>
                */
            MemberArns: string[] | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace BatchCreateChannelMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateChannelMembershipRequest) => any;
    }
    /**
        * <p>A list of failed member ARNs, error codes, and error messages.</p>
        */
    export interface BatchCreateChannelMembershipError {
            /**
                * <p>The ARN of the member that the service couldn't add.</p>
                */
            MemberArn?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: ErrorCode | string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace BatchCreateChannelMembershipError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateChannelMembershipError) => any;
    }
    export interface BatchCreateChannelMembershipResponse {
            /**
                * <p>The list of channel memberships in the response.</p>
                */
            BatchChannelMemberships?: BatchChannelMemberships;
            /**
                * <p>If the action fails for one or more of the memberships in the request, a list of the
                *          memberships is returned, along with error codes and error messages.</p>
                */
            Errors?: BatchCreateChannelMembershipError[];
    }
    export namespace BatchCreateChannelMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateChannelMembershipResponse) => any;
    }
    export enum RoomMembershipRole {
            Administrator = "Administrator",
            Member = "Member"
    }
    /**
        * <p>Membership details, such as member ID and member role.</p>
        */
    export interface MembershipItem {
            /**
                * <p>The member ID.</p>
                */
            MemberId?: string;
            /**
                * <p>The member role.</p>
                */
            Role?: RoomMembershipRole | string;
    }
    export namespace MembershipItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MembershipItem) => any;
    }
    export interface BatchCreateRoomMembershipRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The list of membership items.</p>
                */
            MembershipItemList: MembershipItem[] | undefined;
    }
    export namespace BatchCreateRoomMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateRoomMembershipRequest) => any;
    }
    /**
        * <p>The list of errors returned when a member action results in an error.</p>
        */
    export interface MemberError {
            /**
                * <p>The member ID.</p>
                */
            MemberId?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: ErrorCode | string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace MemberError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MemberError) => any;
    }
    export interface BatchCreateRoomMembershipResponse {
            /**
                * <p>If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages.</p>
                */
            Errors?: MemberError[];
    }
    export namespace BatchCreateRoomMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchCreateRoomMembershipResponse) => any;
    }
    export interface BatchDeletePhoneNumberRequest {
            /**
                * <p>List of phone number IDs.</p>
                */
            PhoneNumberIds: string[] | undefined;
    }
    export namespace BatchDeletePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDeletePhoneNumberRequest) => any;
    }
    export interface BatchDeletePhoneNumberResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace BatchDeletePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDeletePhoneNumberResponse) => any;
    }
    export interface BatchSuspendUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The request containing the user IDs to suspend.</p>
                */
            UserIdList: string[] | undefined;
    }
    export namespace BatchSuspendUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchSuspendUserRequest) => any;
    }
    /**
        * <p>The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or
        *     <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.</p>
        */
    export interface UserError {
            /**
                * <p>The user ID for which the action failed.</p>
                */
            UserId?: string;
            /**
                * <p>The error code.</p>
                */
            ErrorCode?: ErrorCode | string;
            /**
                * <p>The error message.</p>
                */
            ErrorMessage?: string;
    }
    export namespace UserError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserError) => any;
    }
    export interface BatchSuspendUserResponse {
            /**
                * <p>If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the
                *             request, a list of the user IDs is returned, along with error codes and error messages.</p>
                */
            UserErrors?: UserError[];
    }
    export namespace BatchSuspendUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchSuspendUserResponse) => any;
    }
    export interface BatchUnsuspendUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The request containing the user IDs to unsuspend.</p>
                */
            UserIdList: string[] | undefined;
    }
    export namespace BatchUnsuspendUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUnsuspendUserRequest) => any;
    }
    export interface BatchUnsuspendUserResponse {
            /**
                * <p>If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the
                *             request, a list of the user IDs is returned, along with error codes and error messages.</p>
                */
            UserErrors?: UserError[];
    }
    export namespace BatchUnsuspendUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUnsuspendUserResponse) => any;
    }
    export enum PhoneNumberProductType {
            BusinessCalling = "BusinessCalling",
            SipMediaApplicationDialIn = "SipMediaApplicationDialIn",
            VoiceConnector = "VoiceConnector"
    }
    /**
        * <p>The phone number ID, product type, or calling name fields to update, used with the
        * <a>BatchUpdatePhoneNumber</a> and <a>UpdatePhoneNumber</a> actions.</p>
        */
    export interface UpdatePhoneNumberRequestItem {
            /**
                * <p>The phone number ID to update.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>The product type to update.</p>
                */
            ProductType?: PhoneNumberProductType | string;
            /**
                * <p>The outbound calling name to update.</p>
                */
            CallingName?: string;
    }
    export namespace UpdatePhoneNumberRequestItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberRequestItem) => any;
    }
    export interface BatchUpdatePhoneNumberRequest {
            /**
                * <p>The request containing the phone number IDs and product types or calling names to update.</p>
                */
            UpdatePhoneNumberRequestItems: UpdatePhoneNumberRequestItem[] | undefined;
    }
    export namespace BatchUpdatePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUpdatePhoneNumberRequest) => any;
    }
    export interface BatchUpdatePhoneNumberResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace BatchUpdatePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUpdatePhoneNumberResponse) => any;
    }
    export enum UserType {
            PrivateUser = "PrivateUser",
            SharedDevice = "SharedDevice"
    }
    /**
        * <p>The user ID and user fields to update, used with the
        * <a>BatchUpdateUser</a> action.</p>
        */
    export interface UpdateUserRequestItem {
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The user license type.</p>
                */
            LicenseType?: License | string;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
            /**
                * <p>The Alexa for Business metadata.</p>
                */
            AlexaForBusinessMetadata?: AlexaForBusinessMetadata;
    }
    export namespace UpdateUserRequestItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserRequestItem) => any;
    }
    export interface BatchUpdateUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The request containing the user IDs and details to update.</p>
                */
            UpdateUserRequestItems: UpdateUserRequestItem[] | undefined;
    }
    export namespace BatchUpdateUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUpdateUserRequest) => any;
    }
    export interface BatchUpdateUserResponse {
            /**
                * <p>If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the
                *             request, a list of the user IDs is returned, along with error codes and error messages.</p>
                */
            UserErrors?: UserError[];
    }
    export namespace BatchUpdateUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchUpdateUserResponse) => any;
    }
    export enum BotType {
            ChatBot = "ChatBot"
    }
    /**
        * <p>A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.</p>
        */
    export interface Bot {
            /**
                * <p>The bot ID.</p>
                */
            BotId?: string;
            /**
                * <p>The unique ID for the bot user.</p>
                */
            UserId?: string;
            /**
                * <p>The bot display name.</p>
                */
            DisplayName?: string;
            /**
                * <p>The bot type.</p>
                */
            BotType?: BotType | string;
            /**
                * <p>When true, the bot is stopped from running in your account.</p>
                */
            Disabled?: boolean;
            /**
                * <p>The bot creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated bot timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The bot email address.</p>
                */
            BotEmail?: string;
            /**
                * <p>The security token used to authenticate Amazon Chime with the outgoing event endpoint.</p>
                */
            SecurityToken?: string;
    }
    export namespace Bot {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Bot) => any;
    }
    /**
        * <p>The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any
        *             Amazon S3 buckets designated for storing call detail records.</p>
        */
    export interface BusinessCallingSettings {
            /**
                * <p>The Amazon S3 bucket designated for call detail record storage.</p>
                */
            CdrBucket?: string;
    }
    export namespace BusinessCallingSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BusinessCallingSettings) => any;
    }
    export enum CallingNameStatus {
            Unassigned = "Unassigned",
            UpdateFailed = "UpdateFailed",
            UpdateInProgress = "UpdateInProgress",
            UpdateSucceeded = "UpdateSucceeded"
    }
    export enum Capability {
            SMS = "SMS",
            Voice = "Voice"
    }
    export enum ChannelMode {
            RESTRICTED = "RESTRICTED",
            UNRESTRICTED = "UNRESTRICTED"
    }
    export enum ChannelPrivacy {
            PRIVATE = "PRIVATE",
            PUBLIC = "PUBLIC"
    }
    /**
        * <p>The details of a channel.</p>
        */
    export interface Channel {
            /**
                * <p>The name of the channel.</p>
                */
            Name?: string;
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The mode of the channel.</p>
                */
            Mode?: ChannelMode | string;
            /**
                * <p>The channel's privacy setting.</p>
                */
            Privacy?: ChannelPrivacy | string;
            /**
                * <p>The channel's metadata.</p>
                */
            Metadata?: string;
            /**
                * <p>The <code>AppInstanceUser</code> who created the channel.</p>
                */
            CreatedBy?: Identity;
            /**
                * <p>The time at which the <code>AppInstanceUser</code> created the channel.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which a member sent the last message in the channel.</p>
                */
            LastMessageTimestamp?: Date;
            /**
                * <p>The time at which a channel was last updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace Channel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Channel) => any;
    }
    /**
        * <p>The details of a channel ban.</p>
        */
    export interface ChannelBan {
            /**
                * <p>The member being banned from the channel.</p>
                */
            Member?: Identity;
            /**
                * <p>The ARN of the channel from which a member is being banned.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The time at which the ban was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The <code>AppInstanceUser</code> who created the ban.</p>
                */
            CreatedBy?: Identity;
    }
    export namespace ChannelBan {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelBan) => any;
    }
    /**
        * <p>Summary of the details of a <code>ChannelBan</code>.</p>
        */
    export interface ChannelBanSummary {
            /**
                * <p>The member being banned from a channel.</p>
                */
            Member?: Identity;
    }
    export namespace ChannelBanSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelBanSummary) => any;
    }
    /**
        * <p>The details of a channel member.</p>
        */
    export interface ChannelMembership {
            /**
                * <p>The identifier of the member who invited another member.</p>
                */
            InvitedBy?: Identity;
            /**
                * <p>The membership type set for the channel member.</p>
                */
            Type?: ChannelMembershipType | string;
            /**
                * <p>The data of the channel member.</p>
                */
            Member?: Identity;
            /**
                * <p>The ARN of the member's channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The time at which the channel membership was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which a channel membership was last updated.</p>
                */
            LastUpdatedTimestamp?: Date;
    }
    export namespace ChannelMembership {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelMembership) => any;
    }
    /**
        * <p>Summary of the details of a <code>Channel</code>.</p>
        */
    export interface ChannelSummary {
            /**
                * <p>The name of the channel.</p>
                */
            Name?: string;
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The mode of the channel.</p>
                */
            Mode?: ChannelMode | string;
            /**
                * <p>The privacy setting of the channel.</p>
                */
            Privacy?: ChannelPrivacy | string;
            /**
                * <p>The metadata of the channel.</p>
                */
            Metadata?: string;
            /**
                * <p>The time at which the last message in a channel was sent.</p>
                */
            LastMessageTimestamp?: Date;
    }
    export namespace ChannelSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelSummary) => any;
    }
    /**
        * <p>Summary of the channel membership details of an <code>AppInstanceUser</code>.</p>
        */
    export interface ChannelMembershipForAppInstanceUserSummary {
            /**
                * <p>Summary of the details of a <code>Channel</code>.</p>
                */
            ChannelSummary?: ChannelSummary;
            /**
                * <p>Summary of the membership details of an <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserMembershipSummary?: AppInstanceUserMembershipSummary;
    }
    export namespace ChannelMembershipForAppInstanceUserSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelMembershipForAppInstanceUserSummary) => any;
    }
    /**
        * <p>Summary of the details of a <code>ChannelMembership</code>.</p>
        */
    export interface ChannelMembershipSummary {
            /**
                * <p>A member's summary data.</p>
                */
            Member?: Identity;
    }
    export namespace ChannelMembershipSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelMembershipSummary) => any;
    }
    export enum ChannelMessagePersistenceType {
            NON_PERSISTENT = "NON_PERSISTENT",
            PERSISTENT = "PERSISTENT"
    }
    export enum ChannelMessageType {
            CONTROL = "CONTROL",
            STANDARD = "STANDARD"
    }
    /**
        * <p>The details of a message in a channel.</p>
        */
    export interface ChannelMessage {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ID of a message.</p>
                */
            MessageId?: string;
            /**
                * <p>The message content.</p>
                */
            Content?: string;
            /**
                * <p>The message metadata.</p>
                */
            Metadata?: string;
            /**
                * <p>The message type.</p>
                */
            Type?: ChannelMessageType | string;
            /**
                * <p>The time at which the message was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which a message was edited.</p>
                */
            LastEditedTimestamp?: Date;
            /**
                * <p>The time at which a message was updated.</p>
                */
            LastUpdatedTimestamp?: Date;
            /**
                * <p>The message sender.</p>
                */
            Sender?: Identity;
            /**
                * <p>Hides the content of a message.</p>
                */
            Redacted?: boolean;
            /**
                * <p>The persistence setting for a channel message.</p>
                */
            Persistence?: ChannelMessagePersistenceType | string;
    }
    export namespace ChannelMessage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelMessage) => any;
    }
    /**
        * <p>Summary of the messages in a <code>Channel</code>.</p>
        */
    export interface ChannelMessageSummary {
            /**
                * <p>The ID of the message.</p>
                */
            MessageId?: string;
            /**
                * <p>The content of the message.</p>
                */
            Content?: string;
            /**
                * <p>The metadata of the message.</p>
                */
            Metadata?: string;
            /**
                * <p>The type of message.</p>
                */
            Type?: ChannelMessageType | string;
            /**
                * <p>The time at which the message summary was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which a message was last updated.</p>
                */
            LastUpdatedTimestamp?: Date;
            /**
                * <p>The time at which a message was last edited.</p>
                */
            LastEditedTimestamp?: Date;
            /**
                * <p>The message sender.</p>
                */
            Sender?: Identity;
            /**
                * <p>Indicates whether a message was redacted.</p>
                */
            Redacted?: boolean;
    }
    export namespace ChannelMessageSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelMessageSummary) => any;
    }
    /**
        * <p>Summary of the details of a moderated channel.</p>
        */
    export interface ChannelModeratedByAppInstanceUserSummary {
            /**
                * <p>Summary of the details of a <code>Channel</code>.</p>
                */
            ChannelSummary?: ChannelSummary;
    }
    export namespace ChannelModeratedByAppInstanceUserSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelModeratedByAppInstanceUserSummary) => any;
    }
    /**
        * <p>The details of a channel moderator.</p>
        */
    export interface ChannelModerator {
            /**
                * <p>The moderator's data.</p>
                */
            Moderator?: Identity;
            /**
                * <p>The ARN of the moderator's channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The time at which the moderator was created.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The <code>AppInstanceUser</code> who created the moderator.</p>
                */
            CreatedBy?: Identity;
    }
    export namespace ChannelModerator {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelModerator) => any;
    }
    /**
        * <p>Summary of the details of a <code>ChannelModerator</code>.</p>
        */
    export interface ChannelModeratorSummary {
            /**
                * <p>The data for a moderator.</p>
                */
            Moderator?: Identity;
    }
    export namespace ChannelModeratorSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChannelModeratorSummary) => any;
    }
    /**
        * <p>The video streams to capture for a specified media capture pipeline. The total number of video streams can't exceed 25.</p>
        */
    export interface SelectedVideoStreams {
            /**
                * <p>The attendee IDs of the streams selected for a media capture pipeline. </p>
                */
            AttendeeIds?: string[];
            /**
                * <p>The external user IDs of the streams selected for a media capture pipeline.</p>
                */
            ExternalUserIds?: string[];
    }
    export namespace SelectedVideoStreams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SelectedVideoStreams) => any;
    }
    /**
        * <p>Source configuration for a specified media capture pipeline.</p>
        */
    export interface SourceConfiguration {
            /**
                * <p>The selected video streams to capture for a specified media capture pipeline. The number of video streams can't exceed 25.</p>
                */
            SelectedVideoStreams?: SelectedVideoStreams;
    }
    export namespace SourceConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SourceConfiguration) => any;
    }
    /**
        * <p>The configuration object of the Amazon Chime SDK meeting for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>
        */
    export interface ChimeSdkMeetingConfiguration {
            /**
                * <p>The source configuration for a specified media capture pipline.</p>
                */
            SourceConfiguration?: SourceConfiguration;
            /**
                * <p>The configuration for the artifacts in an Amazon Chime SDK meeting.</p>
                */
            ArtifactsConfiguration?: ArtifactsConfiguration;
    }
    export namespace ChimeSdkMeetingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ChimeSdkMeetingConfiguration) => any;
    }
    /**
        * <p>The request could not be processed because of conflict in the current state of the
        *          resource.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * <p>The retention settings that determine how long to retain conversation messages for an Amazon Chime Enterprise account.</p>
        */
    export interface ConversationRetentionSettings {
            /**
                * <p>The number of days for which to retain conversation messages.</p>
                */
            RetentionDays?: number;
    }
    export namespace ConversationRetentionSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConversationRetentionSettings) => any;
    }
    export interface CreateAccountRequest {
            /**
                * <p>The name of the Amazon Chime account.</p>
                */
            Name: string | undefined;
    }
    export namespace CreateAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccountRequest) => any;
    }
    export interface CreateAccountResponse {
            /**
                * <p>The Amazon Chime account details.</p>
                */
            Account?: Account;
    }
    export namespace CreateAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccountResponse) => any;
    }
    export interface CreateAppInstanceRequest {
            /**
                * <p>The name of the <code>AppInstance</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8.</p>
                */
            Metadata?: string;
            /**
                * <p>The <code>ClientRequestToken</code> of the <code>AppInstance</code>.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>Tags assigned to the <code>AppInstance</code>.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateAppInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceRequest) => any;
    }
    export interface CreateAppInstanceResponse {
            /**
                * <p>The Amazon Resource Number (ARN) of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn?: string;
    }
    export namespace CreateAppInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceResponse) => any;
    }
    export interface CreateAppInstanceAdminRequest {
            /**
                * <p>The ARN of the administrator of the current <code>AppInstance</code>.</p>
                */
            AppInstanceAdminArn: string | undefined;
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace CreateAppInstanceAdminRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceAdminRequest) => any;
    }
    export interface CreateAppInstanceAdminResponse {
            /**
                * <p>The name and ARN of the admin for the <code>AppInstance</code>.</p>
                */
            AppInstanceAdmin?: Identity;
            /**
                * <p>The ARN of the of the admin for the <code>AppInstance</code>.</p>
                */
            AppInstanceArn?: string;
    }
    export namespace CreateAppInstanceAdminResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceAdminResponse) => any;
    }
    export interface CreateAppInstanceUserRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code> request.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The user ID of the <code>AppInstance</code>.</p>
                */
            AppInstanceUserId: string | undefined;
            /**
                * <p>The user's name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The request's metadata. Limited to a 1KB string in UTF-8.</p>
                */
            Metadata?: string;
            /**
                * <p>The token assigned to the user requesting an <code>AppInstance</code>.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>Tags assigned to the <code>AppInstanceUser</code>.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceUserRequest) => any;
    }
    export interface CreateAppInstanceUserResponse {
            /**
                * <p>The user's ARN.</p>
                */
            AppInstanceUserArn?: string;
    }
    export namespace CreateAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppInstanceUserResponse) => any;
    }
    export interface CreateAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
                */
            ExternalUserId: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace CreateAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeRequest) => any;
    }
    export interface CreateAttendeeResponse {
            /**
                * <p>The attendee information, including attendee ID and join token.</p>
                */
            Attendee?: Attendee;
    }
    export namespace CreateAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAttendeeResponse) => any;
    }
    export interface CreateBotRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot display name.</p>
                */
            DisplayName: string | undefined;
            /**
                * <p>The domain of the Amazon Chime Enterprise account.</p>
                */
            Domain?: string;
    }
    export namespace CreateBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBotRequest) => any;
    }
    export interface CreateBotResponse {
            /**
                * <p>The bot details.</p>
                */
            Bot?: Bot;
    }
    export namespace CreateBotResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBotResponse) => any;
    }
    export interface CreateChannelRequest {
            /**
                * <p>The ARN of the channel request.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The name of the channel.</p>
                */
            Name: string | undefined;
            /**
                * <p>The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators,
                *          moderators, and channel members can add themselves and other members to unrestricted
                *          channels. Only administrators and moderators can add members to restricted channels.</p>
                */
            Mode?: ChannelMode | string;
            /**
                * <p>The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private
                *          channels aren't discoverable by users outside the channel. Public channels are discoverable
                *          by anyone in the <code>AppInstance</code>.</p>
                */
            Privacy?: ChannelPrivacy | string;
            /**
                * <p>The metadata of the creation request. Limited to 1KB and UTF-8.</p>
                */
            Metadata?: string;
            /**
                * <p>The client token for the request. An <code>Idempotency</code> token.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The tags for the creation request.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace CreateChannelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelRequest) => any;
    }
    export interface CreateChannelResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
    }
    export namespace CreateChannelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelResponse) => any;
    }
    export interface CreateChannelBanRequest {
            /**
                * <p>The ARN of the ban request.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the member being banned.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace CreateChannelBanRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelBanRequest) => any;
    }
    export interface CreateChannelBanResponse {
            /**
                * <p>The ARN of the response to the ban request.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban
                *          response.</p>
                */
            Member?: Identity;
    }
    export namespace CreateChannelBanResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelBanResponse) => any;
    }
    export interface CreateChannelMembershipRequest {
            /**
                * <p>The ARN of the channel to which you're adding users.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the member you want to add to the channel.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default
                *          members are always returned as part of <code>ListChannelMemberships</code>. Hidden members
                *          are only returned if the type filter in <code>ListChannelMemberships</code> equals
                *             <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported
                *          by moderators.</p>
                */
            Type: ChannelMembershipType | string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace CreateChannelMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelMembershipRequest) => any;
    }
    export interface CreateChannelMembershipResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ARN and metadata of the member being added.</p>
                */
            Member?: Identity;
    }
    export namespace CreateChannelMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelMembershipResponse) => any;
    }
    export interface CreateChannelModeratorRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the moderator.</p>
                */
            ChannelModeratorArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace CreateChannelModeratorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelModeratorRequest) => any;
    }
    export interface CreateChannelModeratorResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ARNs of the channel and the moderator.</p>
                */
            ChannelModerator?: Identity;
    }
    export namespace CreateChannelModeratorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateChannelModeratorResponse) => any;
    }
    export enum MediaPipelineSinkType {
            S3Bucket = "S3Bucket"
    }
    export enum MediaPipelineSourceType {
            ChimeSdkMeeting = "ChimeSdkMeeting"
    }
    export interface CreateMediaCapturePipelineRequest {
            /**
                * <p>Source type from which the media artifacts will be captured. A Chime SDK Meeting
                *             is the only supported source.</p>
                */
            SourceType: MediaPipelineSourceType | string | undefined;
            /**
                * <p>ARN of the source from which the media artifacts are captured.</p>
                */
            SourceArn: string | undefined;
            /**
                * <p>Destination type to which the media artifacts are saved. You must use an S3 bucket. </p>
                */
            SinkType: MediaPipelineSinkType | string | undefined;
            /**
                * <p>The ARN of the sink type.</p>
                */
            SinkArn: string | undefined;
            /**
                * <p>The token assigned to the client making the pipeline request.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The configuration for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>
                */
            ChimeSdkMeetingConfiguration?: ChimeSdkMeetingConfiguration;
    }
    export namespace CreateMediaCapturePipelineRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMediaCapturePipelineRequest) => any;
    }
    export enum MediaPipelineStatus {
            Failed = "Failed",
            InProgress = "InProgress",
            Initializing = "Initializing",
            Stopped = "Stopped",
            Stopping = "Stopping"
    }
    /**
        * <p>A media capture pipeline object consisting of an ID, source type, source ARN, a sink type, a sink ARN, and a configuration object.</p>
        */
    export interface MediaCapturePipeline {
            /**
                * <p>The ID of a media capture pipeline.</p>
                */
            MediaPipelineId?: string;
            /**
                * <p>Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>.</p>
                */
            SourceType?: MediaPipelineSourceType | string;
            /**
                * <p>ARN of the source from which the media artifacts will be saved.</p>
                */
            SourceArn?: string;
            /**
                * <p>The status of the media capture pipeline.</p>
                */
            Status?: MediaPipelineStatus | string;
            /**
                * <p>Destination type to which the media artifacts are saved. You must use an S3 Bucket.</p>
                */
            SinkType?: MediaPipelineSinkType | string;
            /**
                * <p>ARN of the destination to which the media artifacts are saved.</p>
                */
            SinkArn?: string;
            /**
                * <p>The time at which the capture pipeline was created, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which the capture pipeline was updated, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The configuration for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>
                */
            ChimeSdkMeetingConfiguration?: ChimeSdkMeetingConfiguration;
    }
    export namespace MediaCapturePipeline {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MediaCapturePipeline) => any;
    }
    export interface CreateMediaCapturePipelineResponse {
            /**
                * <p>A media capture pipeline object, the ID, source type, source ARN, sink type, and  sink ARN of a media capture pipeline object.</p>
                */
            MediaCapturePipeline?: MediaCapturePipeline;
    }
    export namespace CreateMediaCapturePipelineResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMediaCapturePipelineResponse) => any;
    }
    /**
        * <p> The resource target configurations for receiving Amazon Chime SDK meeting and attendee event
        *             notifications. The Amazon Chime SDK supports resource targets located in the US East (N.
        *             Virginia) AWS Region (<code>us-east-1</code>). </p>
        */
    export interface MeetingNotificationConfiguration {
            /**
                * <p>The SNS topic ARN.</p>
                */
            SnsTopicArn?: string;
            /**
                * <p>The SQS queue ARN.</p>
                */
            SqsQueueArn?: string;
    }
    export namespace MeetingNotificationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MeetingNotificationConfiguration) => any;
    }
    export interface CreateMeetingRequest {
            /**
                * <p>The unique identifier for the client request. Use a different token for different meetings.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId?: string;
            /**
                * <p>Reserved.</p>
                */
            MeetingHostId?: string;
            /**
                * <p>
                * The Region in which to create the meeting. Default: <code>us-east-1</code>.
                * </p>
                *
                *          <p>
                * Available values:
                * <code>af-south-1</code>
                * ,
                * <code>ap-northeast-1</code>
                * ,
                * <code>ap-northeast-2</code>
                * ,
                * <code>ap-south-1</code>
                * ,
                * <code>ap-southeast-1</code>
                * ,
                * <code>ap-southeast-2</code>
                * ,
                * <code>ca-central-1</code>
                * ,
                * <code>eu-central-1</code>
                * ,
                * <code>eu-north-1</code>
                * ,
                * <code>eu-south-1</code>
                * ,
                * <code>eu-west-1</code>
                * ,
                * <code>eu-west-2</code>
                * ,
                * <code>eu-west-3</code>
                * ,
                * <code>sa-east-1</code>
                * ,
                * <code>us-east-1</code>
                * ,
                * <code>us-east-2</code>
                * ,
                * <code>us-west-1</code>
                * ,
                * <code>us-west-2</code>
                * .
                * </p>
                */
            MediaRegion?: string;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>
                */
            NotificationsConfiguration?: MeetingNotificationConfiguration;
    }
    export namespace CreateMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingRequest) => any;
    }
    /**
        * <p>A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.</p>
        */
    export interface MediaPlacement {
            /**
                * <p>The audio host URL.</p>
                */
            AudioHostUrl?: string;
            /**
                * <p>The audio fallback URL.</p>
                */
            AudioFallbackUrl?: string;
            /**
                * <p>The screen data URL.</p>
                */
            ScreenDataUrl?: string;
            /**
                * <p>The screen sharing URL.</p>
                */
            ScreenSharingUrl?: string;
            /**
                * <p>The screen viewing URL.</p>
                */
            ScreenViewingUrl?: string;
            /**
                * <p>The signaling URL.</p>
                */
            SignalingUrl?: string;
            /**
                * <p>The turn control URL.</p>
                */
            TurnControlUrl?: string;
            /**
                * <p>The event ingestion URL to which you send client meeting events.</p>
                */
            EventIngestionUrl?: string;
    }
    export namespace MediaPlacement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MediaPlacement) => any;
    }
    /**
        * <p>A meeting created using the Amazon Chime SDK.</p>
        */
    export interface Meeting {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId?: string;
            /**
                * <p>The media placement for the meeting.</p>
                */
            MediaPlacement?: MediaPlacement;
            /**
                * <p>The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>,
                *     <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>,
                *     <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>,
                *                 <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>,
                *                 <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>,
                *                 <code>us-west-1</code>, <code>us-west-2</code>.</p>
                */
            MediaRegion?: string;
    }
    export namespace Meeting {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Meeting) => any;
    }
    export interface CreateMeetingResponse {
            /**
                * <p>
                * The meeting information, including the meeting ID and
                * <code>MediaPlacement</code>
                * .
                * </p>
                */
            Meeting?: Meeting;
    }
    export namespace CreateMeetingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingResponse) => any;
    }
    export interface CreateMeetingDialOutRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>Phone number used as the caller ID when the remote party receives a call.</p>
                */
            FromPhoneNumber: string | undefined;
            /**
                * <p>Phone number called when inviting someone to a meeting.</p>
                */
            ToPhoneNumber: string | undefined;
            /**
                * <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
                */
            JoinToken: string | undefined;
    }
    export namespace CreateMeetingDialOutRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingDialOutRequest) => any;
    }
    export interface CreateMeetingDialOutResponse {
            /**
                * <p>Unique ID that tracks API calls.</p>
                */
            TransactionId?: string;
    }
    export namespace CreateMeetingDialOutResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingDialOutResponse) => any;
    }
    export interface CreateMeetingWithAttendeesRequest {
            /**
                * <p>The unique identifier for the client request. Use a different token for different meetings.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The external meeting ID.</p>
                */
            ExternalMeetingId?: string;
            /**
                * <p>Reserved.</p>
                */
            MeetingHostId?: string;
            /**
                * <p>
                * The Region in which to create the meeting. Default: <code>us-east-1</code>
                * .
                * </p>
                *
                *          <p>
                * Available values:
                * <code>af-south-1</code>
                * ,
                * <code>ap-northeast-1</code>
                * ,
                * <code>ap-northeast-2</code>
                * ,
                * <code>ap-south-1</code>
                * ,
                * <code>ap-southeast-1</code>
                * ,
                * <code>ap-southeast-2</code>
                * ,
                * <code>ca-central-1</code>
                * ,
                * <code>eu-central-1</code>
                * ,
                * <code>eu-north-1</code>
                * ,
                * <code>eu-south-1</code>
                * ,
                * <code>eu-west-1</code>
                * ,
                * <code>eu-west-2</code>
                * ,
                * <code>eu-west-3</code>
                * ,
                * <code>sa-east-1</code>
                * ,
                * <code>us-east-1</code>
                * ,
                * <code>us-east-2</code>
                * ,
                * <code>us-west-1</code>
                * ,
                * <code>us-west-2</code>
                * .
                * </p>
                */
            MediaRegion?: string;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags?: Tag[];
            /**
                * <p> The resource target configurations for receiving Amazon Chime SDK meeting and attendee event
                *             notifications. The Amazon Chime SDK supports resource targets located in the US East (N.
                *             Virginia) AWS Region (<code>us-east-1</code>). </p>
                */
            NotificationsConfiguration?: MeetingNotificationConfiguration;
            /**
                * <p>The request containing the attendees to create.</p>
                */
            Attendees?: CreateAttendeeRequestItem[];
    }
    export namespace CreateMeetingWithAttendeesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingWithAttendeesRequest) => any;
    }
    export interface CreateMeetingWithAttendeesResponse {
            /**
                * <p>A meeting created using the Amazon Chime SDK.</p>
                */
            Meeting?: Meeting;
            /**
                * <p>The attendee information, including attendees IDs and join tokens.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>
                */
            Errors?: CreateAttendeeError[];
    }
    export namespace CreateMeetingWithAttendeesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMeetingWithAttendeesResponse) => any;
    }
    export interface CreatePhoneNumberOrderRequest {
            /**
                * <p>The phone number product type.</p>
                */
            ProductType: PhoneNumberProductType | string | undefined;
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers: string[] | undefined;
    }
    export namespace CreatePhoneNumberOrderRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePhoneNumberOrderRequest) => any;
    }
    export enum OrderedPhoneNumberStatus {
            Acquired = "Acquired",
            Failed = "Failed",
            Processing = "Processing"
    }
    /**
        * <p>A phone number for which an order has been placed.</p>
        */
    export interface OrderedPhoneNumber {
            /**
                * <p>The phone number, in E.164 format.</p>
                */
            E164PhoneNumber?: string;
            /**
                * <p>The phone number status.</p>
                */
            Status?: OrderedPhoneNumberStatus | string;
    }
    export namespace OrderedPhoneNumber {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrderedPhoneNumber) => any;
    }
    export enum PhoneNumberOrderStatus {
            Failed = "Failed",
            Partial = "Partial",
            Processing = "Processing",
            Successful = "Successful"
    }
    /**
        * <p>The details of a phone number order created for Amazon Chime.</p>
        */
    export interface PhoneNumberOrder {
            /**
                * <p>The phone number order ID.</p>
                */
            PhoneNumberOrderId?: string;
            /**
                * <p>The phone number order product type.</p>
                */
            ProductType?: PhoneNumberProductType | string;
            /**
                * <p>The status of the phone number order.</p>
                */
            Status?: PhoneNumberOrderStatus | string;
            /**
                * <p>The ordered phone number details, such as the phone number in E.164 format and the phone
                *             number status.</p>
                */
            OrderedPhoneNumbers?: OrderedPhoneNumber[];
            /**
                * <p>The phone number order creation time stamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated phone number order time stamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
    }
    export namespace PhoneNumberOrder {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberOrder) => any;
    }
    export interface CreatePhoneNumberOrderResponse {
            /**
                * <p>The phone number order details.</p>
                */
            PhoneNumberOrder?: PhoneNumberOrder;
    }
    export namespace CreatePhoneNumberOrderResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePhoneNumberOrderResponse) => any;
    }
    export enum GeoMatchLevel {
            AreaCode = "AreaCode",
            Country = "Country"
    }
    /**
        * <p>The country and area code for a proxy phone number in a proxy phone session.</p>
        */
    export interface GeoMatchParams {
            /**
                * <p>The country.</p>
                */
            Country: string | undefined;
            /**
                * <p>The area code.</p>
                */
            AreaCode: string | undefined;
    }
    export namespace GeoMatchParams {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeoMatchParams) => any;
    }
    export enum NumberSelectionBehavior {
            AvoidSticky = "AvoidSticky",
            PreferSticky = "PreferSticky"
    }
    export interface CreateProxySessionRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The participant phone numbers.</p>
                */
            ParticipantPhoneNumbers: string[] | undefined;
            /**
                * <p>The name of the proxy session.</p>
                */
            Name?: string;
            /**
                * <p>The number of minutes allowed for the proxy session.</p>
                */
            ExpiryMinutes?: number;
            /**
                * <p>The proxy session capabilities.</p>
                */
            Capabilities: (Capability | string)[] | undefined;
            /**
                * <p>The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.</p>
                */
            NumberSelectionBehavior?: NumberSelectionBehavior | string;
            /**
                * <p>The preference for matching the country or area code of the proxy phone number with that of the first participant.</p>
                */
            GeoMatchLevel?: GeoMatchLevel | string;
            /**
                * <p>The country and area code for the proxy phone number.</p>
                */
            GeoMatchParams?: GeoMatchParams;
    }
    export namespace CreateProxySessionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProxySessionRequest) => any;
    }
    /**
        * <p>The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.</p>
        */
    export interface Participant {
            /**
                * <p>The participant's phone number.</p>
                */
            PhoneNumber?: string;
            /**
                * <p>The participant's proxy phone number.</p>
                */
            ProxyPhoneNumber?: string;
    }
    export namespace Participant {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Participant) => any;
    }
    export enum ProxySessionStatus {
            Closed = "Closed",
            InProgress = "InProgress",
            Open = "Open"
    }
    /**
        * <p>The proxy session for an Amazon Chime Voice Connector.</p>
        */
    export interface ProxySession {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId?: string;
            /**
                * <p>The proxy session ID.</p>
                */
            ProxySessionId?: string;
            /**
                * <p>The name of the proxy session.</p>
                */
            Name?: string;
            /**
                * <p>The status of the proxy session.</p>
                */
            Status?: ProxySessionStatus | string;
            /**
                * <p>The number of minutes allowed for the proxy session.</p>
                */
            ExpiryMinutes?: number;
            /**
                * <p>The proxy session capabilities.</p>
                */
            Capabilities?: (Capability | string)[];
            /**
                * <p>The created time stamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated time stamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The ended time stamp, in ISO 8601 format.</p>
                */
            EndedTimestamp?: Date;
            /**
                * <p>The proxy session participants.</p>
                */
            Participants?: Participant[];
            /**
                * <p>The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.</p>
                */
            NumberSelectionBehavior?: NumberSelectionBehavior | string;
            /**
                * <p>The preference for matching the country or area code of the proxy phone number with that of the first participant.</p>
                */
            GeoMatchLevel?: GeoMatchLevel | string;
            /**
                * <p>The country and area code for the proxy phone number.</p>
                */
            GeoMatchParams?: GeoMatchParams;
    }
    export namespace ProxySession {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProxySession) => any;
    }
    export interface CreateProxySessionResponse {
            /**
                * <p>The proxy session details.</p>
                */
            ProxySession?: ProxySession;
    }
    export namespace CreateProxySessionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProxySessionResponse) => any;
    }
    export interface CreateRoomRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The idempotency token for the request.</p>
                */
            ClientRequestToken?: string;
    }
    export namespace CreateRoomRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoomRequest) => any;
    }
    /**
        * <p>The Amazon Chime chat room details.</p>
        */
    export interface Room {
            /**
                * <p>The room ID.</p>
                */
            RoomId?: string;
            /**
                * <p>The room name.</p>
                */
            Name?: string;
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId?: string;
            /**
                * <p>The identifier of the room creator.</p>
                */
            CreatedBy?: string;
            /**
                * <p>The room creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The room update timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
    }
    export namespace Room {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Room) => any;
    }
    export interface CreateRoomResponse {
            /**
                * <p>The room details.</p>
                */
            Room?: Room;
    }
    export namespace CreateRoomResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoomResponse) => any;
    }
    export interface CreateRoomMembershipRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The Amazon Chime member ID (user ID or bot ID).</p>
                */
            MemberId: string | undefined;
            /**
                * <p>The role of the member.</p>
                */
            Role?: RoomMembershipRole | string;
    }
    export namespace CreateRoomMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoomMembershipRequest) => any;
    }
    export enum MemberType {
            Bot = "Bot",
            User = "User",
            Webhook = "Webhook"
    }
    /**
        * <p>The member details, such as email address, name, member ID, and member type.</p>
        */
    export interface Member {
            /**
                * <p>The member ID (user ID or bot ID).</p>
                */
            MemberId?: string;
            /**
                * <p>The member type.</p>
                */
            MemberType?: MemberType | string;
            /**
                * <p>The member email address.</p>
                */
            Email?: string;
            /**
                * <p>The member name.</p>
                */
            FullName?: string;
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId?: string;
    }
    export namespace Member {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Member) => any;
    }
    /**
        * <p>The room membership details.</p>
        */
    export interface RoomMembership {
            /**
                * <p>The room ID.</p>
                */
            RoomId?: string;
            /**
                * <p>The member details, such as email address, name, member ID, and member type.</p>
                */
            Member?: Member;
            /**
                * <p>The membership role.</p>
                */
            Role?: RoomMembershipRole | string;
            /**
                * <p>The identifier of the user that invited the room member.</p>
                */
            InvitedBy?: string;
            /**
                * <p>The room membership update timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
    }
    export namespace RoomMembership {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoomMembership) => any;
    }
    export interface CreateRoomMembershipResponse {
            /**
                * <p>The room membership details.</p>
                */
            RoomMembership?: RoomMembership;
    }
    export namespace CreateRoomMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRoomMembershipResponse) => any;
    }
    /**
        * <p>The endpoint assigned to the SIP media application.</p>
        */
    export interface SipMediaApplicationEndpoint {
            /**
                * <p>Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.</p>
                */
            LambdaArn?: string;
    }
    export namespace SipMediaApplicationEndpoint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipMediaApplicationEndpoint) => any;
    }
    export interface CreateSipMediaApplicationRequest {
            /**
                * <p>The AWS Region assigned to the SIP media application.</p>
                */
            AwsRegion: string | undefined;
            /**
                * <p>The SIP media application name.</p>
                */
            Name: string | undefined;
            /**
                * <p>List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.</p>
                */
            Endpoints: SipMediaApplicationEndpoint[] | undefined;
    }
    export namespace CreateSipMediaApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipMediaApplicationRequest) => any;
    }
    /**
        * <p>The details of the SIP media application, including name and endpoints. An AWS account can have multiple SIP media applications.</p>
        */
    export interface SipMediaApplication {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId?: string;
            /**
                * <p>The AWS Region in which the SIP media application is created.</p>
                */
            AwsRegion?: string;
            /**
                * <p>The name of the SIP media application.</p>
                */
            Name?: string;
            /**
                * <p>List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.</p>
                */
            Endpoints?: SipMediaApplicationEndpoint[];
            /**
                * <p>The SIP media application creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The SIP media application updated timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
    }
    export namespace SipMediaApplication {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipMediaApplication) => any;
    }
    export interface CreateSipMediaApplicationResponse {
            /**
                * <p>The SIP media application details.</p>
                */
            SipMediaApplication?: SipMediaApplication;
    }
    export namespace CreateSipMediaApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipMediaApplicationResponse) => any;
    }
    export interface CreateSipMediaApplicationCallRequest {
            /**
                * <p>The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory.</p>
                */
            FromPhoneNumber: string | undefined;
            /**
                * <p>The phone number that the service should call.</p>
                */
            ToPhoneNumber: string | undefined;
            /**
                * <p>The ID of the SIP media application.</p>
                */
            SipMediaApplicationId: string | undefined;
            /**
                * <p>The SIP headers added to an outbound call leg.</p>
                */
            SipHeaders?: Record<string, string>;
    }
    export namespace CreateSipMediaApplicationCallRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipMediaApplicationCallRequest) => any;
    }
    /**
        * <p>A <code>Call</code> instance for a SIP media application.</p>
        */
    export interface SipMediaApplicationCall {
            /**
                * <p>The transaction ID of a call.</p>
                */
            TransactionId?: string;
    }
    export namespace SipMediaApplicationCall {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipMediaApplicationCall) => any;
    }
    export interface CreateSipMediaApplicationCallResponse {
            /**
                * <p>The actual call.</p>
                */
            SipMediaApplicationCall?: SipMediaApplicationCall;
    }
    export namespace CreateSipMediaApplicationCallResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipMediaApplicationCallResponse) => any;
    }
    /**
        * <p>Target SIP media application and other details, such as priority and AWS Region, to be
        *             specified in the SIP rule. Only one SIP rule per AWS Region can be provided.</p>
        */
    export interface SipRuleTargetApplication {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId?: string;
            /**
                * <p>Priority of the SIP media application in the target list.</p>
                */
            Priority?: number;
            /**
                * <p>The AWS Region of the target application.</p>
                */
            AwsRegion?: string;
    }
    export namespace SipRuleTargetApplication {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipRuleTargetApplication) => any;
    }
    export enum SipRuleTriggerType {
            RequestUriHostname = "RequestUriHostname",
            ToPhoneNumber = "ToPhoneNumber"
    }
    export interface CreateSipRuleRequest {
            /**
                * <p>The name of the SIP rule.</p>
                */
            Name: string | undefined;
            /**
                * <p>The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or <code>ToPhoneNumber</code>.</p>
                */
            TriggerType: SipRuleTriggerType | string | undefined;
            /**
                * <p>If <code>TriggerType</code> is <code>RequestUriHostname</code>, the value can be the outbound
                *             host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is
                *                 <code>ToPhoneNumber</code>, the value can be a customer-owned phone number in the
                *     E164 format. The <code>SipMediaApplication</code> specified in the <code>SipRule</code> is triggered if the request URI in an incoming SIP
                *     request matches the <code>RequestUriHostname</code>, or if the <code>To</code> header in the incoming SIP request matches the
                *     <code>ToPhoneNumber</code> value.</p>
                */
            TriggerValue: string | undefined;
            /**
                * <p>Enables or disables a rule. You must disable rules before you can delete them.</p>
                */
            Disabled?: boolean;
            /**
                * <p>List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.</p>
                */
            TargetApplications: SipRuleTargetApplication[] | undefined;
    }
    export namespace CreateSipRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipRuleRequest) => any;
    }
    /**
        * <p>The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules.</p>
        */
    export interface SipRule {
            /**
                * <p>The SIP rule ID.</p>
                */
            SipRuleId?: string;
            /**
                * <p>The name of the SIP rule.</p>
                */
            Name?: string;
            /**
                * <p>Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.</p>
                */
            Disabled?: boolean;
            /**
                * <p>The type of trigger assigned to the SIP rule in <code>TriggerValue</code>, currently <code>RequestUriHostname</code> or
                *         <code>ToPhoneNumber</code>.</p>
                */
            TriggerType?: SipRuleTriggerType | string;
            /**
                * <p>If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the
                *             outbound host name of the Amazon Chime Voice Connector. If <code>TriggerType</code> is
                *                 <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in
                *             E164 format. <code>SipRule</code> is triggered when a SIP rule requests host name or
                *                 <code>ToPhoneNumber</code> matches in the incoming SIP request.</p>
                */
            TriggerValue?: string;
            /**
                * <p>Target SIP media application and other details, such as priority and AWS Region, to be
                *             specified in the SIP rule. Only one SIP rule per AWS Region can be provided.</p>
                */
            TargetApplications?: SipRuleTargetApplication[];
            /**
                * <p>The time at which the SIP rule was created, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The time at which the SIP rule was last updated, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
    }
    export namespace SipRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipRule) => any;
    }
    export interface CreateSipRuleResponse {
            /**
                * <p>Returns the SIP rule information, including the rule ID, triggers, and target applications.</p>
                */
            SipRule?: SipRule;
    }
    export namespace CreateSipRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSipRuleResponse) => any;
    }
    export interface CreateUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user name.</p>
                */
            Username?: string;
            /**
                * <p>The user's email address.</p>
                */
            Email?: string;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
    }
    export namespace CreateUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserRequest) => any;
    }
    export enum InviteStatus {
            Accepted = "Accepted",
            Failed = "Failed",
            Pending = "Pending"
    }
    export enum RegistrationStatus {
            Registered = "Registered",
            Suspended = "Suspended",
            Unregistered = "Unregistered"
    }
    /**
        * <p>The user on the Amazon Chime account.</p>
        */
    export interface User {
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId?: string;
            /**
                * <p>The primary email address of the user.</p>
                */
            PrimaryEmail?: string;
            /**
                * <p>The primary phone number associated with the user.</p>
                */
            PrimaryProvisionedNumber?: string;
            /**
                * <p>The display name of the user.</p>
                */
            DisplayName?: string;
            /**
                * <p>The license type for the user.</p>
                */
            LicenseType?: License | string;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
            /**
                * <p>The user registration status.</p>
                */
            UserRegistrationStatus?: RegistrationStatus | string;
            /**
                * <p>The user invite status.</p>
                */
            UserInvitationStatus?: InviteStatus | string;
            /**
                * <p>Date and time when the user is registered, in ISO 8601 format.</p>
                */
            RegisteredOn?: Date;
            /**
                * <p>Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.</p>
                */
            InvitedOn?: Date;
            /**
                * <p>The Alexa for Business metadata.</p>
                */
            AlexaForBusinessMetadata?: AlexaForBusinessMetadata;
            /**
                * <p>The user's personal meeting PIN.</p>
                */
            PersonalPIN?: string;
    }
    export namespace User {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: User) => any;
    }
    export interface CreateUserResponse {
            /**
                * <p>The user on the Amazon Chime account.</p>
                */
            User?: User;
    }
    export namespace CreateUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserResponse) => any;
    }
    export enum VoiceConnectorAwsRegion {
            US_EAST_1 = "us-east-1",
            US_WEST_2 = "us-west-2"
    }
    export interface CreateVoiceConnectorRequest {
            /**
                * <p>The name of the Amazon Chime Voice Connector.</p>
                */
            Name: string | undefined;
            /**
                * <p>
                * The AWS Region in which the Amazon Chime Voice Connector is created. Default value:
                * <code>us-east-1</code>
                * .
                * </p>
                */
            AwsRegion?: VoiceConnectorAwsRegion | string;
            /**
                * <p>When enabled, requires encryption for the Amazon Chime Voice Connector.</p>
                */
            RequireEncryption: boolean | undefined;
    }
    export namespace CreateVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVoiceConnectorRequest) => any;
    }
    /**
        * <p>The Amazon Chime Voice Connector configuration, including outbound host name and encryption
        *             settings.</p>
        */
    export interface VoiceConnector {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId?: string;
            /**
                * <p>
                * The AWS Region in which the Amazon Chime Voice Connector is created. Default:
                * <code>us-east-1</code>.
                * </p>
                */
            AwsRegion?: VoiceConnectorAwsRegion | string;
            /**
                * <p>The name of the Amazon Chime Voice Connector.</p>
                */
            Name?: string;
            /**
                * <p>The outbound host name for the Amazon Chime Voice Connector.</p>
                */
            OutboundHostName?: string;
            /**
                * <p>Designates whether encryption is required for the Amazon Chime Voice Connector.</p>
                */
            RequireEncryption?: boolean;
            /**
                * <p>The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The ARN of the specified Amazon Chime Voice Connector.</p>
                */
            VoiceConnectorArn?: string;
    }
    export namespace VoiceConnector {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VoiceConnector) => any;
    }
    export interface CreateVoiceConnectorResponse {
            /**
                * <p>The Amazon Chime Voice Connector details.</p>
                */
            VoiceConnector?: VoiceConnector;
    }
    export namespace CreateVoiceConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVoiceConnectorResponse) => any;
    }
    /**
        * <p>For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3
        * <code>VoiceConnectorItems</code>
        * per Amazon Chime Voice Connector group.</p>
        */
    export interface VoiceConnectorItem {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.</p>
                */
            Priority: number | undefined;
    }
    export namespace VoiceConnectorItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VoiceConnectorItem) => any;
    }
    export interface CreateVoiceConnectorGroupRequest {
            /**
                * <p>The name of the Amazon Chime Voice Connector group.</p>
                */
            Name: string | undefined;
            /**
                * <p>The Amazon Chime Voice Connectors to route inbound calls to.</p>
                */
            VoiceConnectorItems?: VoiceConnectorItem[];
    }
    export namespace CreateVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVoiceConnectorGroupRequest) => any;
    }
    /**
        * <p>The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice
        *             Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in
        *             your group. This creates a fault tolerant mechanism for fallback in case of availability
        *             events.</p>
        */
    export interface VoiceConnectorGroup {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId?: string;
            /**
                * <p>The name of the Amazon Chime Voice Connector group.</p>
                */
            Name?: string;
            /**
                * <p>The Amazon Chime Voice Connectors to which to route inbound calls.</p>
                */
            VoiceConnectorItems?: VoiceConnectorItem[];
            /**
                * <p>The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The ARN of the specified Amazon Chime Voice Connector group.</p>
                */
            VoiceConnectorGroupArn?: string;
    }
    export namespace VoiceConnectorGroup {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VoiceConnectorGroup) => any;
    }
    export interface CreateVoiceConnectorGroupResponse {
            /**
                * <p>The Amazon Chime Voice Connector group details.</p>
                */
            VoiceConnectorGroup?: VoiceConnectorGroup;
    }
    export namespace CreateVoiceConnectorGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateVoiceConnectorGroupResponse) => any;
    }
    /**
        * <p>The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector.</p>
        */
    export interface Credential {
            /**
                * <p>The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII
                *             format.</p>
                */
            Username?: string;
            /**
                * <p>The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format.</p>
                */
            Password?: string;
    }
    export namespace Credential {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Credential) => any;
    }
    export interface DeleteAccountRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
    }
    export namespace DeleteAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccountRequest) => any;
    }
    export interface DeleteAccountResponse {
    }
    export namespace DeleteAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccountResponse) => any;
    }
    /**
        * <p>The request was well-formed but was unable to be followed due to semantic errors.</p>
        */
    export class UnprocessableEntityException extends __BaseException {
            readonly name: "UnprocessableEntityException";
            readonly $fault: "client";
            Code?: ErrorCode | string;
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnprocessableEntityException, __BaseException>);
    }
    export interface DeleteAppInstanceRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace DeleteAppInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppInstanceRequest) => any;
    }
    export interface DeleteAppInstanceAdminRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>'s administrator.</p>
                */
            AppInstanceAdminArn: string | undefined;
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace DeleteAppInstanceAdminRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppInstanceAdminRequest) => any;
    }
    export interface DeleteAppInstanceStreamingConfigurationsRequest {
            /**
                * <p>The ARN of the streaming configurations being deleted.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace DeleteAppInstanceStreamingConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppInstanceStreamingConfigurationsRequest) => any;
    }
    export interface DeleteAppInstanceUserRequest {
            /**
                * <p>The ARN of the user request being deleted.</p>
                */
            AppInstanceUserArn: string | undefined;
    }
    export namespace DeleteAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppInstanceUserRequest) => any;
    }
    export interface DeleteAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace DeleteAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAttendeeRequest) => any;
    }
    export interface DeleteChannelRequest {
            /**
                * <p>The ARN of the channel being deleted.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DeleteChannelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteChannelRequest) => any;
    }
    export interface DeleteChannelBanRequest {
            /**
                * <p>The ARN of the channel from which the <code>AppInstanceUser</code> was banned.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the <code>AppInstanceUser</code> that you want to reinstate.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DeleteChannelBanRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteChannelBanRequest) => any;
    }
    export interface DeleteChannelMembershipRequest {
            /**
                * <p>The ARN of the channel from which you want to remove the user.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the member that you're removing from the channel.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DeleteChannelMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteChannelMembershipRequest) => any;
    }
    export interface DeleteChannelMessageRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ID of the message being deleted.</p>
                */
            MessageId: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DeleteChannelMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteChannelMessageRequest) => any;
    }
    export interface DeleteChannelModeratorRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the moderator being deleted.</p>
                */
            ChannelModeratorArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DeleteChannelModeratorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteChannelModeratorRequest) => any;
    }
    export interface DeleteEventsConfigurationRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
    }
    export namespace DeleteEventsConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEventsConfigurationRequest) => any;
    }
    export interface DeleteMediaCapturePipelineRequest {
            /**
                * <p>The ID of the media capture pipeline being deleted. </p>
                */
            MediaPipelineId: string | undefined;
    }
    export namespace DeleteMediaCapturePipelineRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMediaCapturePipelineRequest) => any;
    }
    export interface DeleteMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace DeleteMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMeetingRequest) => any;
    }
    export interface DeletePhoneNumberRequest {
            /**
                * <p>The phone number ID.</p>
                */
            PhoneNumberId: string | undefined;
    }
    export namespace DeletePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePhoneNumberRequest) => any;
    }
    export interface DeleteProxySessionRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The proxy session ID.</p>
                */
            ProxySessionId: string | undefined;
    }
    export namespace DeleteProxySessionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProxySessionRequest) => any;
    }
    export interface DeleteRoomRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The chat room ID.</p>
                */
            RoomId: string | undefined;
    }
    export namespace DeleteRoomRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRoomRequest) => any;
    }
    export interface DeleteRoomMembershipRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The member ID (user ID or bot ID).</p>
                */
            MemberId: string | undefined;
    }
    export namespace DeleteRoomMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRoomMembershipRequest) => any;
    }
    export interface DeleteSipMediaApplicationRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId: string | undefined;
    }
    export namespace DeleteSipMediaApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSipMediaApplicationRequest) => any;
    }
    export interface DeleteSipRuleRequest {
            /**
                * <p>The SIP rule ID.</p>
                */
            SipRuleId: string | undefined;
    }
    export namespace DeleteSipRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSipRuleRequest) => any;
    }
    export interface DeleteVoiceConnectorRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorRequest) => any;
    }
    export interface DeleteVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorEmergencyCallingConfigurationRequest) => any;
    }
    export interface DeleteVoiceConnectorGroupRequest {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId: string | undefined;
    }
    export namespace DeleteVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorGroupRequest) => any;
    }
    export interface DeleteVoiceConnectorOriginationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorOriginationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorOriginationRequest) => any;
    }
    export interface DeleteVoiceConnectorProxyRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorProxyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorProxyRequest) => any;
    }
    export interface DeleteVoiceConnectorStreamingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorStreamingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorStreamingConfigurationRequest) => any;
    }
    export interface DeleteVoiceConnectorTerminationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace DeleteVoiceConnectorTerminationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorTerminationRequest) => any;
    }
    export interface DeleteVoiceConnectorTerminationCredentialsRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.</p>
                */
            Usernames: string[] | undefined;
    }
    export namespace DeleteVoiceConnectorTerminationCredentialsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteVoiceConnectorTerminationCredentialsRequest) => any;
    }
    export interface DescribeAppInstanceRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace DescribeAppInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceRequest) => any;
    }
    export interface DescribeAppInstanceResponse {
            /**
                * <p>The ARN, metadata, created and last-updated timestamps, and the name of the <code>AppInstance</code>. All
                *             timestamps use epoch milliseconds.</p>
                */
            AppInstance?: AppInstance;
    }
    export namespace DescribeAppInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceResponse) => any;
    }
    export interface DescribeAppInstanceAdminRequest {
            /**
                * <p>The ARN of the <code>AppInstanceAdmin</code>.</p>
                */
            AppInstanceAdminArn: string | undefined;
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace DescribeAppInstanceAdminRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceAdminRequest) => any;
    }
    export interface DescribeAppInstanceAdminResponse {
            /**
                * <p>The ARN and name of the <code>AppInstanceUser</code>, the ARN of the <code>AppInstance</code>, and the created and
                *             last-updated timestamps. All timestamps use epoch milliseconds.</p>
                */
            AppInstanceAdmin?: AppInstanceAdmin;
    }
    export namespace DescribeAppInstanceAdminResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceAdminResponse) => any;
    }
    export interface DescribeAppInstanceUserRequest {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserArn: string | undefined;
    }
    export namespace DescribeAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceUserRequest) => any;
    }
    export interface DescribeAppInstanceUserResponse {
            /**
                * <p>The name of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUser?: AppInstanceUser;
    }
    export namespace DescribeAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppInstanceUserResponse) => any;
    }
    export interface DescribeChannelRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelRequest) => any;
    }
    export interface DescribeChannelResponse {
            /**
                * <p>The channel details.</p>
                */
            Channel?: Channel;
    }
    export namespace DescribeChannelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelResponse) => any;
    }
    export interface DescribeChannelBanRequest {
            /**
                * <p>The ARN of the channel from which the user is banned.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the member being banned.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelBanRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelBanRequest) => any;
    }
    export interface DescribeChannelBanResponse {
            /**
                * <p>The details of the ban.</p>
                */
            ChannelBan?: ChannelBan;
    }
    export namespace DescribeChannelBanResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelBanResponse) => any;
    }
    export interface DescribeChannelMembershipRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the member.</p>
                */
            MemberArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelMembershipRequest) => any;
    }
    export interface DescribeChannelMembershipResponse {
            /**
                * <p>The details of the membership.</p>
                */
            ChannelMembership?: ChannelMembership;
    }
    export namespace DescribeChannelMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelMembershipResponse) => any;
    }
    export interface DescribeChannelMembershipForAppInstanceUserRequest {
            /**
                * <p>The ARN of the channel to which the user belongs.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the user in a channel.</p>
                */
            AppInstanceUserArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelMembershipForAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelMembershipForAppInstanceUserRequest) => any;
    }
    export interface DescribeChannelMembershipForAppInstanceUserResponse {
            /**
                * <p>The channel to which a user belongs.</p>
                */
            ChannelMembership?: ChannelMembershipForAppInstanceUserSummary;
    }
    export namespace DescribeChannelMembershipForAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelMembershipForAppInstanceUserResponse) => any;
    }
    export interface DescribeChannelModeratedByAppInstanceUserRequest {
            /**
                * <p>The ARN of the moderated channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the <code>AppInstanceUser</code> in the moderated channel.</p>
                */
            AppInstanceUserArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelModeratedByAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelModeratedByAppInstanceUserRequest) => any;
    }
    export interface DescribeChannelModeratedByAppInstanceUserResponse {
            /**
                * <p>The moderated channel.</p>
                */
            Channel?: ChannelModeratedByAppInstanceUserSummary;
    }
    export namespace DescribeChannelModeratedByAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelModeratedByAppInstanceUserResponse) => any;
    }
    export interface DescribeChannelModeratorRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ARN of the channel moderator.</p>
                */
            ChannelModeratorArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace DescribeChannelModeratorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelModeratorRequest) => any;
    }
    export interface DescribeChannelModeratorResponse {
            /**
                * <p>The details of the channel moderator.</p>
                */
            ChannelModerator?: ChannelModerator;
    }
    export namespace DescribeChannelModeratorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeChannelModeratorResponse) => any;
    }
    export interface DisassociatePhoneNumberFromUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace DisassociatePhoneNumberFromUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumberFromUserRequest) => any;
    }
    export interface DisassociatePhoneNumberFromUserResponse {
    }
    export namespace DisassociatePhoneNumberFromUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumberFromUserResponse) => any;
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers: string[] | undefined;
    }
    export namespace DisassociatePhoneNumbersFromVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumbersFromVoiceConnectorRequest) => any;
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace DisassociatePhoneNumbersFromVoiceConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumbersFromVoiceConnectorResponse) => any;
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorGroupRequest {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId: string | undefined;
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers: string[] | undefined;
    }
    export namespace DisassociatePhoneNumbersFromVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumbersFromVoiceConnectorGroupRequest) => any;
    }
    export interface DisassociatePhoneNumbersFromVoiceConnectorGroupResponse {
            /**
                * <p>If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.</p>
                */
            PhoneNumberErrors?: PhoneNumberError[];
    }
    export namespace DisassociatePhoneNumbersFromVoiceConnectorGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociatePhoneNumbersFromVoiceConnectorGroupResponse) => any;
    }
    export interface DisassociateSigninDelegateGroupsFromAccountRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The sign-in delegate group names.</p>
                */
            GroupNames: string[] | undefined;
    }
    export namespace DisassociateSigninDelegateGroupsFromAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateSigninDelegateGroupsFromAccountRequest) => any;
    }
    export interface DisassociateSigninDelegateGroupsFromAccountResponse {
    }
    export namespace DisassociateSigninDelegateGroupsFromAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateSigninDelegateGroupsFromAccountResponse) => any;
    }
    /**
        * <p>The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.</p>
        */
    export interface DNISEmergencyCallingConfiguration {
            /**
                * <p>The DNIS phone number to route emergency calls to, in E.164 format.</p>
                */
            EmergencyPhoneNumber: string | undefined;
            /**
                * <p>The DNIS phone number to route test emergency calls to, in E.164 format.</p>
                */
            TestPhoneNumber?: string;
            /**
                * <p>The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format.</p>
                */
            CallingCountry: string | undefined;
    }
    export namespace DNISEmergencyCallingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DNISEmergencyCallingConfiguration) => any;
    }
    export enum EmailStatus {
            Failed = "Failed",
            NotSent = "NotSent",
            Sent = "Sent"
    }
    /**
        * <p>The emergency calling configuration details associated with an Amazon Chime Voice Connector.</p>
        */
    export interface EmergencyCallingConfiguration {
            /**
                * <p>The Dialed Number Identification Service (DNIS) emergency calling configuration details.</p>
                */
            DNIS?: DNISEmergencyCallingConfiguration[];
    }
    export namespace EmergencyCallingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EmergencyCallingConfiguration) => any;
    }
    export enum TranscribeMedicalContentIdentificationType {
            PHI = "PHI"
    }
    export enum TranscribeMedicalLanguageCode {
            EN_US = "en-US"
    }
    export enum TranscribeMedicalRegion {
            AP_SOUTHEAST_2 = "ap-southeast-2",
            AUTO = "auto",
            CA_CENTRAL_1 = "ca-central-1",
            EU_WEST_1 = "eu-west-1",
            US_EAST_1 = "us-east-1",
            US_EAST_2 = "us-east-2",
            US_WEST_2 = "us-west-2"
    }
    export enum TranscribeMedicalSpecialty {
            Cardiology = "CARDIOLOGY",
            Neurology = "NEUROLOGY",
            Oncology = "ONCOLOGY",
            PrimaryCare = "PRIMARYCARE",
            Radiology = "RADIOLOGY",
            Urology = "UROLOGY"
    }
    export enum TranscribeMedicalType {
            Conversation = "CONVERSATION",
            Dictation = "DICTATION"
    }
    /**
        * <p>Settings specific to the Amazon Transcribe Medical engine.</p>
        */
    export interface EngineTranscribeMedicalSettings {
            /**
                * <p>The language code specified for the Amazon Transcribe Medical engine.</p>
                */
            LanguageCode: TranscribeMedicalLanguageCode | string | undefined;
            /**
                * <p>The specialty specified for the Amazon Transcribe Medical engine.</p>
                */
            Specialty: TranscribeMedicalSpecialty | string | undefined;
            /**
                * <p>The type of transcription.</p>
                */
            Type: TranscribeMedicalType | string | undefined;
            /**
                * <p>The name of the vocabulary passed to Amazon Transcribe Medical.</p>
                */
            VocabularyName?: string;
            /**
                * <p>The AWS Region passed to Amazon Transcribe Medical. If you don't specify a Region, Amazon Chime uses the meeting's Region.</p>
                */
            Region?: TranscribeMedicalRegion | string;
            /**
                * <p>Set this field to <code>PHI</code> to identify personal health information in the transcription output.</p>
                */
            ContentIdentificationType?: TranscribeMedicalContentIdentificationType | string;
    }
    export namespace EngineTranscribeMedicalSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EngineTranscribeMedicalSettings) => any;
    }
    export enum TranscribeContentIdentificationType {
            PII = "PII"
    }
    export enum TranscribeContentRedactionType {
            PII = "PII"
    }
    export enum TranscribeLanguageCode {
            DE_DE = "de-DE",
            EN_AU = "en-AU",
            EN_GB = "en-GB",
            EN_US = "en-US",
            ES_US = "es-US",
            FR_CA = "fr-CA",
            FR_FR = "fr-FR",
            IT_IT = "it-IT",
            JA_JP = "ja-JP",
            KO_KR = "ko-KR",
            PT_BR = "pt-BR",
            ZH_CN = "zh-CN"
    }
    export enum TranscribePartialResultsStability {
            HIGH = "high",
            LOW = "low",
            MEDIUM = "medium"
    }
    export enum TranscribeRegion {
            AP_NORTHEAST_1 = "ap-northeast-1",
            AP_NORTHEAST_2 = "ap-northeast-2",
            AP_SOUTHEAST_2 = "ap-southeast-2",
            AUTO = "auto",
            CA_CENTRAL_1 = "ca-central-1",
            EU_CENTRAL_1 = "eu-central-1",
            EU_WEST_1 = "eu-west-1",
            EU_WEST_2 = "eu-west-2",
            SA_EAST_1 = "sa-east-1",
            US_EAST_1 = "us-east-1",
            US_EAST_2 = "us-east-2",
            US_WEST_2 = "us-west-2"
    }
    export enum TranscribeVocabularyFilterMethod {
            Mask = "mask",
            Remove = "remove",
            Tag = "tag"
    }
    /**
        * <p>Settings specific to the Amazon Transcribe engine.</p>
        */
    export interface EngineTranscribeSettings {
            /**
                * <p>The language code specified for the Amazon Transcribe engine.</p>
                */
            LanguageCode: TranscribeLanguageCode | string | undefined;
            /**
                * <p>The filtering method passed to Amazon Transcribe.</p>
                */
            VocabularyFilterMethod?: TranscribeVocabularyFilterMethod | string;
            /**
                * <p>The name of the vocabulary filter passed to Amazon Transcribe.</p>
                */
            VocabularyFilterName?: string;
            /**
                * <p>The name of the vocabulary passed to Amazon Transcribe.</p>
                */
            VocabularyName?: string;
            /**
                * <p>The AWS Region passed to Amazon Transcribe. If you don't specify a Region, Amazon Chime uses the meeting's Region.</p>
                */
            Region?: TranscribeRegion | string;
            /**
                * <p>Generates partial transcription results that are less likely to change as meeting attendees speak. It does so by only allowing the last few words from the partial results to change.</p>
                */
            EnablePartialResultsStabilization?: boolean;
            /**
                * <p>The stabity level of a partial results transcription. Determines how stable you want the transcription results to be. A higher level means the transcription results are less likely to change.</p>
                */
            PartialResultsStability?: TranscribePartialResultsStability | string;
            /**
                * <p>Set this field to <code>PII</code> to identify personally identifiable information in the transcription output.</p>
                */
            ContentIdentificationType?: TranscribeContentIdentificationType | string;
            /**
                * <p>Set this field to <code>PII</code> to redact personally identifiable information in the transcription output. Content redaction is performed only upon complete transcription of the audio segments.</p>
                */
            ContentRedactionType?: TranscribeContentRedactionType | string;
            /**
                * <p>Lists the PII entity types you want to identify or redact. To specify entity types, you must enable <code>ContentIdentificationType</code> or <code>ContentRedactionType</code>.</p>
                *         <p>
                *             <code>PIIEntityTypes</code> must be comma-separated. The available values are:
                *             <code>BANK_ACCOUNT_NUMBER</code>, <code>BANK_ROUTING, CREDIT_DEBIT_NUMBER</code>, <code>CREDIT_DEBIT_CVV</code>, <code>CREDIT_DEBIT_EXPIRY</code>, <code>PIN</code>, <code>EMAIL</code>,
                *             <code>ADDRESS</code>, <code>NAME</code>, <code>PHONE</code>, <code>SSN</code>, and <code>ALL</code>.</p>
                *
                *         <p>
                *             <code>PiiEntityTypes</code> is an optional parameter with a default value of <code>ALL</code>.</p>
                */
            PiiEntityTypes?: string;
            /**
                * <p>The name of the language model used during transcription.</p>
                */
            LanguageModelName?: string;
    }
    export namespace EngineTranscribeSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EngineTranscribeSettings) => any;
    }
    /**
        * <p>The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.</p>
        */
    export interface EventsConfiguration {
            /**
                * <p>The bot ID.</p>
                */
            BotId?: string;
            /**
                * <p>HTTPS endpoint that allows a bot to receive outgoing events.</p>
                */
            OutboundEventsHTTPSEndpoint?: string;
            /**
                * <p>Lambda function ARN that allows a bot to receive outgoing events.</p>
                */
            LambdaFunctionArn?: string;
    }
    export namespace EventsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EventsConfiguration) => any;
    }
    export interface GetAccountRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
    }
    export namespace GetAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountRequest) => any;
    }
    export interface GetAccountResponse {
            /**
                * <p>The Amazon Chime account details.</p>
                */
            Account?: Account;
    }
    export namespace GetAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountResponse) => any;
    }
    export interface GetAccountSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
    }
    export namespace GetAccountSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountSettingsRequest) => any;
    }
    export interface GetAccountSettingsResponse {
            /**
                * <p>The Amazon Chime account settings.</p>
                */
            AccountSettings?: AccountSettings;
    }
    export namespace GetAccountSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountSettingsResponse) => any;
    }
    export interface GetAppInstanceRetentionSettingsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace GetAppInstanceRetentionSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppInstanceRetentionSettingsRequest) => any;
    }
    export interface GetAppInstanceRetentionSettingsResponse {
            /**
                * <p>The retention settings for the <code>AppInstance</code>.</p>
                */
            AppInstanceRetentionSettings?: AppInstanceRetentionSettings;
            /**
                * <p>The timestamp representing the time at which the specified items are retained, in Epoch Seconds.</p>
                */
            InitiateDeletionTimestamp?: Date;
    }
    export namespace GetAppInstanceRetentionSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppInstanceRetentionSettingsResponse) => any;
    }
    export interface GetAppInstanceStreamingConfigurationsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
    }
    export namespace GetAppInstanceStreamingConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppInstanceStreamingConfigurationsRequest) => any;
    }
    export interface GetAppInstanceStreamingConfigurationsResponse {
            /**
                * <p>The streaming settings.</p>
                */
            AppInstanceStreamingConfigurations?: AppInstanceStreamingConfiguration[];
    }
    export namespace GetAppInstanceStreamingConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAppInstanceStreamingConfigurationsResponse) => any;
    }
    export interface GetAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace GetAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttendeeRequest) => any;
    }
    export interface GetAttendeeResponse {
            /**
                * <p>The Amazon Chime SDK attendee information.</p>
                */
            Attendee?: Attendee;
    }
    export namespace GetAttendeeResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttendeeResponse) => any;
    }
    export interface GetBotRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
    }
    export namespace GetBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBotRequest) => any;
    }
    export interface GetBotResponse {
            /**
                * <p>The chat bot details.</p>
                */
            Bot?: Bot;
    }
    export namespace GetBotResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBotResponse) => any;
    }
    export interface GetChannelMessageRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ID of the message.</p>
                */
            MessageId: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace GetChannelMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChannelMessageRequest) => any;
    }
    export interface GetChannelMessageResponse {
            /**
                * <p>The details of and content in the message.</p>
                */
            ChannelMessage?: ChannelMessage;
    }
    export namespace GetChannelMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetChannelMessageResponse) => any;
    }
    export interface GetEventsConfigurationRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
    }
    export namespace GetEventsConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEventsConfigurationRequest) => any;
    }
    export interface GetEventsConfigurationResponse {
            /**
                * <p>The events configuration details.</p>
                */
            EventsConfiguration?: EventsConfiguration;
    }
    export namespace GetEventsConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEventsConfigurationResponse) => any;
    }
    /**
        * <p>The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for
        *             storing call detail records.</p>
        */
    export interface VoiceConnectorSettings {
            /**
                * <p>The Amazon S3 bucket designated for call detail record storage.</p>
                */
            CdrBucket?: string;
    }
    export namespace VoiceConnectorSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VoiceConnectorSettings) => any;
    }
    export interface GetGlobalSettingsResponse {
            /**
                * <p>The Amazon Chime Business Calling settings.</p>
                */
            BusinessCalling?: BusinessCallingSettings;
            /**
                * <p>The Amazon Chime Voice Connector settings.</p>
                */
            VoiceConnector?: VoiceConnectorSettings;
    }
    export namespace GetGlobalSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetGlobalSettingsResponse) => any;
    }
    export interface GetMediaCapturePipelineRequest {
            /**
                * <p>The ID of the pipeline that you want to get.</p>
                */
            MediaPipelineId: string | undefined;
    }
    export namespace GetMediaCapturePipelineRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMediaCapturePipelineRequest) => any;
    }
    export interface GetMediaCapturePipelineResponse {
            /**
                * <p>The media capture pipeline object.</p>
                */
            MediaCapturePipeline?: MediaCapturePipeline;
    }
    export namespace GetMediaCapturePipelineResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMediaCapturePipelineResponse) => any;
    }
    export interface GetMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace GetMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMeetingRequest) => any;
    }
    export interface GetMeetingResponse {
            /**
                * <p>The Amazon Chime SDK meeting information.</p>
                */
            Meeting?: Meeting;
    }
    export namespace GetMeetingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMeetingResponse) => any;
    }
    export interface GetMessagingSessionEndpointRequest {
    }
    export namespace GetMessagingSessionEndpointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMessagingSessionEndpointRequest) => any;
    }
    /**
        * <p>The websocket endpoint used to connect to Amazon Chime SDK messaging.</p>
        */
    export interface MessagingSessionEndpoint {
            /**
                * <p>The endpoint to which you establish a websocket connection.</p>
                */
            Url?: string;
    }
    export namespace MessagingSessionEndpoint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MessagingSessionEndpoint) => any;
    }
    export interface GetMessagingSessionEndpointResponse {
            /**
                * <p>The endpoint returned in the response.</p>
                */
            Endpoint?: MessagingSessionEndpoint;
    }
    export namespace GetMessagingSessionEndpointResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMessagingSessionEndpointResponse) => any;
    }
    export interface GetPhoneNumberRequest {
            /**
                * <p>The phone number ID.</p>
                */
            PhoneNumberId: string | undefined;
    }
    export namespace GetPhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPhoneNumberRequest) => any;
    }
    export enum PhoneNumberAssociationName {
            AccountId = "AccountId",
            SipRuleId = "SipRuleId",
            UserId = "UserId",
            VoiceConnectorGroupId = "VoiceConnectorGroupId",
            VoiceConnectorId = "VoiceConnectorId"
    }
    /**
        * <p>The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon
        *             Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.</p>
        */
    export interface PhoneNumberAssociation {
            /**
                * <p>Contains the ID for the entity specified in Name.</p>
                */
            Value?: string;
            /**
                * <p>Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector
                *             ID, or Amazon Chime Voice Connector group ID.</p>
                */
            Name?: PhoneNumberAssociationName | string;
            /**
                * <p>The timestamp of the phone number association, in ISO 8601 format.</p>
                */
            AssociatedTimestamp?: Date;
    }
    export namespace PhoneNumberAssociation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberAssociation) => any;
    }
    /**
        * <p>The phone number capabilities for Amazon Chime Business Calling phone numbers, such as enabled
        *             inbound and outbound calling and text messaging.</p>
        */
    export interface PhoneNumberCapabilities {
            /**
                * <p>Allows or denies inbound calling for the specified phone number.</p>
                */
            InboundCall?: boolean;
            /**
                * <p>Allows or denies outbound calling for the specified phone number.</p>
                */
            OutboundCall?: boolean;
            /**
                * <p>Allows or denies inbound SMS messaging for the specified phone number.</p>
                */
            InboundSMS?: boolean;
            /**
                * <p>Allows or denies outbound SMS messaging for the specified phone number.</p>
                */
            OutboundSMS?: boolean;
            /**
                * <p>Allows or denies inbound MMS messaging for the specified phone number.</p>
                */
            InboundMMS?: boolean;
            /**
                * <p>Allows or denies outbound MMS messaging for the specified phone number.</p>
                */
            OutboundMMS?: boolean;
    }
    export namespace PhoneNumberCapabilities {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberCapabilities) => any;
    }
    export enum PhoneNumberStatus {
            AcquireFailed = "AcquireFailed",
            AcquireInProgress = "AcquireInProgress",
            Assigned = "Assigned",
            DeleteFailed = "DeleteFailed",
            DeleteInProgress = "DeleteInProgress",
            ReleaseFailed = "ReleaseFailed",
            ReleaseInProgress = "ReleaseInProgress",
            Unassigned = "Unassigned"
    }
    export enum PhoneNumberType {
            Local = "Local",
            TollFree = "TollFree"
    }
    /**
        * <p>A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice
        *             Connector.</p>
        */
    export interface PhoneNumber {
            /**
                * <p>The phone number ID.</p>
                */
            PhoneNumberId?: string;
            /**
                * <p>The phone number, in E.164 format.</p>
                */
            E164PhoneNumber?: string;
            /**
                * <p>The phone number country. Format: ISO 3166-1 alpha-2.</p>
                */
            Country?: string;
            /**
                * <p>The phone number type.</p>
                */
            Type?: PhoneNumberType | string;
            /**
                * <p>The phone number product type.</p>
                */
            ProductType?: PhoneNumberProductType | string;
            /**
                * <p>The phone number status.</p>
                */
            Status?: PhoneNumberStatus | string;
            /**
                * <p>The phone number capabilities.</p>
                */
            Capabilities?: PhoneNumberCapabilities;
            /**
                * <p>The phone number associations.</p>
                */
            Associations?: PhoneNumberAssociation[];
            /**
                * <p>The outbound calling name associated with the phone number.</p>
                */
            CallingName?: string;
            /**
                * <p>The outbound calling name status.</p>
                */
            CallingNameStatus?: CallingNameStatus | string;
            /**
                * <p>The phone number creation timestamp, in ISO 8601 format.</p>
                */
            CreatedTimestamp?: Date;
            /**
                * <p>The updated phone number timestamp, in ISO 8601 format.</p>
                */
            UpdatedTimestamp?: Date;
            /**
                * <p>The deleted phone number timestamp, in ISO 8601 format.</p>
                */
            DeletionTimestamp?: Date;
    }
    export namespace PhoneNumber {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumber) => any;
    }
    export interface GetPhoneNumberResponse {
            /**
                * <p>The phone number details.</p>
                */
            PhoneNumber?: PhoneNumber;
    }
    export namespace GetPhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPhoneNumberResponse) => any;
    }
    export interface GetPhoneNumberOrderRequest {
            /**
                * <p>The ID for the phone number order.</p>
                */
            PhoneNumberOrderId: string | undefined;
    }
    export namespace GetPhoneNumberOrderRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPhoneNumberOrderRequest) => any;
    }
    export interface GetPhoneNumberOrderResponse {
            /**
                * <p>The phone number order details.</p>
                */
            PhoneNumberOrder?: PhoneNumberOrder;
    }
    export namespace GetPhoneNumberOrderResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPhoneNumberOrderResponse) => any;
    }
    export interface GetPhoneNumberSettingsResponse {
            /**
                * <p>The default outbound calling name for the account.</p>
                */
            CallingName?: string;
            /**
                * <p>The updated outbound calling name timestamp, in ISO 8601 format.</p>
                */
            CallingNameUpdatedTimestamp?: Date;
    }
    export namespace GetPhoneNumberSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPhoneNumberSettingsResponse) => any;
    }
    export interface GetProxySessionRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The proxy session ID.</p>
                */
            ProxySessionId: string | undefined;
    }
    export namespace GetProxySessionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProxySessionRequest) => any;
    }
    export interface GetProxySessionResponse {
            /**
                * <p>The proxy session details.</p>
                */
            ProxySession?: ProxySession;
    }
    export namespace GetProxySessionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProxySessionResponse) => any;
    }
    export interface GetRetentionSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
    }
    export namespace GetRetentionSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRetentionSettingsRequest) => any;
    }
    /**
        * <p>The retention settings that determine how long to retain chat-room messages for an Amazon Chime Enterprise account.</p>
        */
    export interface RoomRetentionSettings {
            /**
                * <p>The number of days for which to retain chat-room messages.</p>
                */
            RetentionDays?: number;
    }
    export namespace RoomRetentionSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoomRetentionSettings) => any;
    }
    /**
        * <p>The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat-room messages and chat-conversation messages.</p>
        */
    export interface RetentionSettings {
            /**
                * <p>The chat room retention settings.</p>
                */
            RoomRetentionSettings?: RoomRetentionSettings;
            /**
                * <p>The chat conversation retention settings.</p>
                */
            ConversationRetentionSettings?: ConversationRetentionSettings;
    }
    export namespace RetentionSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RetentionSettings) => any;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_1' {
    import { Account, AccountSettings, AlexaForBusinessMetadata, AppInstanceAdminSummary, AppInstanceRetentionSettings, AppInstanceStreamingConfiguration, AppInstanceSummary, AppInstanceUserSummary, Attendee, Bot, BusinessCallingSettings, Capability, ChannelBanSummary, ChannelMembershipForAppInstanceUserSummary, ChannelMembershipSummary, ChannelMembershipType, ChannelMessagePersistenceType, ChannelMessageSummary, ChannelMessageType, ChannelMode, ChannelModeratedByAppInstanceUserSummary, ChannelModeratorSummary, ChannelPrivacy, ChannelSummary, Credential, EmailStatus, EmergencyCallingConfiguration, EngineTranscribeMedicalSettings, EngineTranscribeSettings, EventsConfiguration, InviteStatus, License, MediaCapturePipeline, Meeting, PhoneNumber, PhoneNumberAssociationName, PhoneNumberOrder, PhoneNumberProductType, PhoneNumberStatus, PhoneNumberType, ProxySession, ProxySessionStatus, RetentionSettings, Room, RoomMembership, RoomMembershipRole, SipMediaApplication, SipMediaApplicationCall, SipMediaApplicationEndpoint, SipRule, SipRuleTargetApplication, Tag, User, UserType, VoiceConnector, VoiceConnectorGroup, VoiceConnectorItem, VoiceConnectorSettings } from "@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/models_0";
    export interface GetRetentionSettingsResponse {
            /**
                * <p>The retention settings.</p>
                */
            RetentionSettings?: RetentionSettings;
            /**
                * <p>The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.</p>
                */
            InitiateDeletionTimestamp?: Date;
    }
    export namespace GetRetentionSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRetentionSettingsResponse) => any;
    }
    export interface GetRoomRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
    }
    export namespace GetRoomRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRoomRequest) => any;
    }
    export interface GetRoomResponse {
            /**
                * <p>The room details.</p>
                */
            Room?: Room;
    }
    export namespace GetRoomResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRoomResponse) => any;
    }
    export interface GetSipMediaApplicationRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId: string | undefined;
    }
    export namespace GetSipMediaApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipMediaApplicationRequest) => any;
    }
    export interface GetSipMediaApplicationResponse {
            /**
                * <p>The SIP media application details.</p>
                */
            SipMediaApplication?: SipMediaApplication;
    }
    export namespace GetSipMediaApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipMediaApplicationResponse) => any;
    }
    export interface GetSipMediaApplicationLoggingConfigurationRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId: string | undefined;
    }
    export namespace GetSipMediaApplicationLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipMediaApplicationLoggingConfigurationRequest) => any;
    }
    /**
        * <p>Logging configuration of the SIP media application.</p>
        */
    export interface SipMediaApplicationLoggingConfiguration {
            /**
                * <p>Enables application message logs for the SIP media application.</p>
                */
            EnableSipMediaApplicationMessageLogs?: boolean;
    }
    export namespace SipMediaApplicationLoggingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SipMediaApplicationLoggingConfiguration) => any;
    }
    export interface GetSipMediaApplicationLoggingConfigurationResponse {
            /**
                * <p>The actual logging configuration.</p>
                */
            SipMediaApplicationLoggingConfiguration?: SipMediaApplicationLoggingConfiguration;
    }
    export namespace GetSipMediaApplicationLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipMediaApplicationLoggingConfigurationResponse) => any;
    }
    export interface GetSipRuleRequest {
            /**
                * <p>The SIP rule ID.</p>
                */
            SipRuleId: string | undefined;
    }
    export namespace GetSipRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipRuleRequest) => any;
    }
    export interface GetSipRuleResponse {
            /**
                * <p>The SIP rule details.</p>
                */
            SipRule?: SipRule;
    }
    export namespace GetSipRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSipRuleResponse) => any;
    }
    export interface GetUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace GetUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUserRequest) => any;
    }
    export interface GetUserResponse {
            /**
                * <p>The user details.</p>
                */
            User?: User;
    }
    export namespace GetUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUserResponse) => any;
    }
    export interface GetUserSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace GetUserSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUserSettingsRequest) => any;
    }
    /**
        * <p>Settings that allow management of telephony permissions for an Amazon Chime user, such as
        *             inbound and outbound calling and text messaging.</p>
        */
    export interface TelephonySettings {
            /**
                * <p>Allows or denies inbound calling.</p>
                */
            InboundCalling: boolean | undefined;
            /**
                * <p>Allows or denies outbound calling.</p>
                */
            OutboundCalling: boolean | undefined;
            /**
                * <p>Allows or denies SMS messaging.</p>
                */
            SMS: boolean | undefined;
    }
    export namespace TelephonySettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TelephonySettings) => any;
    }
    /**
        * <p>Settings associated with an Amazon Chime user, including inbound and outbound calling and text
        *             messaging.</p>
        */
    export interface UserSettings {
            /**
                * <p>The telephony settings associated with the user.</p>
                */
            Telephony: TelephonySettings | undefined;
    }
    export namespace UserSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserSettings) => any;
    }
    export interface GetUserSettingsResponse {
            /**
                * <p>The user settings.</p>
                */
            UserSettings?: UserSettings;
    }
    export namespace GetUserSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUserSettingsResponse) => any;
    }
    export interface GetVoiceConnectorRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorRequest) => any;
    }
    export interface GetVoiceConnectorResponse {
            /**
                * <p>The Amazon Chime Voice Connector details.</p>
                */
            VoiceConnector?: VoiceConnector;
    }
    export namespace GetVoiceConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorResponse) => any;
    }
    export interface GetVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorEmergencyCallingConfigurationRequest) => any;
    }
    export interface GetVoiceConnectorEmergencyCallingConfigurationResponse {
            /**
                * <p>The emergency calling configuration details.</p>
                */
            EmergencyCallingConfiguration?: EmergencyCallingConfiguration;
    }
    export namespace GetVoiceConnectorEmergencyCallingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorEmergencyCallingConfigurationResponse) => any;
    }
    export interface GetVoiceConnectorGroupRequest {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId: string | undefined;
    }
    export namespace GetVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorGroupRequest) => any;
    }
    export interface GetVoiceConnectorGroupResponse {
            /**
                * <p>The Amazon Chime Voice Connector group details.</p>
                */
            VoiceConnectorGroup?: VoiceConnectorGroup;
    }
    export namespace GetVoiceConnectorGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorGroupResponse) => any;
    }
    export interface GetVoiceConnectorLoggingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorLoggingConfigurationRequest) => any;
    }
    /**
        * <p>The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
        */
    export interface LoggingConfiguration {
            /**
                * <p>Boolean that enables SIP message logs to CloudWatch logs.</p>
                */
            EnableSIPLogs?: boolean;
            /**
                * <p>Boolean that enables logging of detailed media metrics for Voice Connectors to CloudWatch logs.</p>
                */
            EnableMediaMetricLogs?: boolean;
    }
    export namespace LoggingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingConfiguration) => any;
    }
    export interface GetVoiceConnectorLoggingConfigurationResponse {
            /**
                * <p>The logging configuration details.</p>
                */
            LoggingConfiguration?: LoggingConfiguration;
    }
    export namespace GetVoiceConnectorLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorLoggingConfigurationResponse) => any;
    }
    export interface GetVoiceConnectorOriginationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorOriginationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorOriginationRequest) => any;
    }
    export enum OriginationRouteProtocol {
            TCP = "TCP",
            UDP = "UDP"
    }
    /**
        * <p>Origination routes define call distribution properties for your SIP hosts to receive inbound
        *             calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each
        *             Amazon Chime Voice Connector.</p>
        *          <note>
        *             <p>The parameters listed below are not required, but you must use at least one. </p>
        *          </note>
        */
    export interface OriginationRoute {
            /**
                * <p>The FQDN or IP address to contact for origination traffic.</p>
                */
            Host?: string;
            /**
                * <p>The designated origination route port. Defaults to 5060.</p>
                */
            Port?: number;
            /**
                * <p>The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.</p>
                */
            Protocol?: OriginationRouteProtocol | string;
            /**
                * <p>The priority associated with the host, with 1 being the highest priority. Higher priority
                *             hosts are attempted first.</p>
                */
            Priority?: number;
            /**
                * <p>The weight associated with the host. If hosts are equal in priority, calls are redistributed among
                *             them based on their relative weight.</p>
                */
            Weight?: number;
    }
    export namespace OriginationRoute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OriginationRoute) => any;
    }
    /**
        * <p>Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime
        *             Voice Connector.</p>
        *          <note>
        *             <p>The parameters listed below are not required, but you must use at least one. </p>
        *          </note>
        */
    export interface Origination {
            /**
                * <p>The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1.
                *     Maximum value of 20. This parameter is not required, but you must specify this parameter or <code>Disabled</code>.</p>
                */
            Routes?: OriginationRoute[];
            /**
                * <p>When origination settings are disabled, inbound calls are not enabled for your Amazon Chime
                *             Voice Connector. This parameter is not required, but you must specify this parameter or <code>Routes</code>.</p>
                */
            Disabled?: boolean;
    }
    export namespace Origination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Origination) => any;
    }
    export interface GetVoiceConnectorOriginationResponse {
            /**
                * <p>The origination setting details.</p>
                */
            Origination?: Origination;
    }
    export namespace GetVoiceConnectorOriginationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorOriginationResponse) => any;
    }
    export interface GetVoiceConnectorProxyRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorProxyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorProxyRequest) => any;
    }
    /**
        * <p>The proxy configuration for an Amazon Chime Voice Connector.</p>
        */
    export interface Proxy {
            /**
                * <p>The default number of minutes allowed for proxy sessions.</p>
                */
            DefaultSessionExpiryMinutes?: number;
            /**
                * <p>When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.</p>
                */
            Disabled?: boolean;
            /**
                * <p>The phone number to route calls to after a proxy session expires.</p>
                */
            FallBackPhoneNumber?: string;
            /**
                * <p>The countries for proxy phone numbers to be selected from.</p>
                */
            PhoneNumberCountries?: string[];
    }
    export namespace Proxy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Proxy) => any;
    }
    export interface GetVoiceConnectorProxyResponse {
            /**
                * <p>The proxy configuration details.</p>
                */
            Proxy?: Proxy;
    }
    export namespace GetVoiceConnectorProxyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorProxyResponse) => any;
    }
    export interface GetVoiceConnectorStreamingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorStreamingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorStreamingConfigurationRequest) => any;
    }
    export enum NotificationTarget {
            EventBridge = "EventBridge",
            SNS = "SNS",
            SQS = "SQS"
    }
    /**
        * <p>The targeted recipient for a streaming configuration notification.</p>
        */
    export interface StreamingNotificationTarget {
            /**
                * <p>The streaming notification target.</p>
                */
            NotificationTarget: NotificationTarget | string | undefined;
    }
    export namespace StreamingNotificationTarget {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StreamingNotificationTarget) => any;
    }
    /**
        * <p>The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether
        *             media streaming is enabled for sending to Amazon Kinesis, and shows the retention period
        *             for the Amazon Kinesis data, in hours.</p>
        */
    export interface StreamingConfiguration {
            /**
                * <p>The retention period, in hours, for the Amazon Kinesis data.</p>
                */
            DataRetentionInHours: number | undefined;
            /**
                * <p>When true, media streaming to Amazon Kinesis is turned off.</p>
                */
            Disabled?: boolean;
            /**
                * <p>The streaming notification targets.</p>
                */
            StreamingNotificationTargets?: StreamingNotificationTarget[];
    }
    export namespace StreamingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StreamingConfiguration) => any;
    }
    export interface GetVoiceConnectorStreamingConfigurationResponse {
            /**
                * <p>The streaming configuration details.</p>
                */
            StreamingConfiguration?: StreamingConfiguration;
    }
    export namespace GetVoiceConnectorStreamingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorStreamingConfigurationResponse) => any;
    }
    export interface GetVoiceConnectorTerminationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorTerminationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorTerminationRequest) => any;
    }
    /**
        * <p>Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime
        *             Voice Connector.</p>
        */
    export interface Termination {
            /**
                * <p>The limit on calls per second. Max value based on account service quota. Default value of
                *             1.</p>
                */
            CpsLimit?: number;
            /**
                * <p>The default caller ID phone number.</p>
                */
            DefaultPhoneNumber?: string;
            /**
                * <p>The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.</p>
                */
            CallingRegions?: string[];
            /**
                * <p>The IP addresses allowed to make calls, in CIDR format. Required.</p>
                */
            CidrAllowedList?: string[];
            /**
                * <p>When termination settings are disabled, outbound calls can not be made.</p>
                */
            Disabled?: boolean;
    }
    export namespace Termination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Termination) => any;
    }
    export interface GetVoiceConnectorTerminationResponse {
            /**
                * <p>The termination setting details.</p>
                */
            Termination?: Termination;
    }
    export namespace GetVoiceConnectorTerminationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorTerminationResponse) => any;
    }
    export interface GetVoiceConnectorTerminationHealthRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace GetVoiceConnectorTerminationHealthRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorTerminationHealthRequest) => any;
    }
    /**
        * <p>The termination health details, including the source IP address and timestamp of the last
        *             successful SIP <code>OPTIONS</code> message from your SIP infrastructure.</p>
        */
    export interface TerminationHealth {
            /**
                * <p>The timestamp, in ISO 8601 format.</p>
                */
            Timestamp?: Date;
            /**
                * <p>The source IP address.</p>
                */
            Source?: string;
    }
    export namespace TerminationHealth {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TerminationHealth) => any;
    }
    export interface GetVoiceConnectorTerminationHealthResponse {
            /**
                * <p>The termination health details.</p>
                */
            TerminationHealth?: TerminationHealth;
    }
    export namespace GetVoiceConnectorTerminationHealthResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetVoiceConnectorTerminationHealthResponse) => any;
    }
    /**
        * <p>Invitation object returned after emailing users to invite them to join the Amazon Chime
        *                 <code>Team</code> account.</p>
        */
    export interface Invite {
            /**
                * <p>The invite ID.</p>
                */
            InviteId?: string;
            /**
                * <p>The status of the invite.</p>
                */
            Status?: InviteStatus | string;
            /**
                * <p>The email address to which the invite is sent.</p>
                */
            EmailAddress?: string;
            /**
                * <p>The status of the invite email.</p>
                */
            EmailStatus?: EmailStatus | string;
    }
    export namespace Invite {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Invite) => any;
    }
    export interface InviteUsersRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user email addresses to which to send the email invitation.</p>
                */
            UserEmailList: string[] | undefined;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
    }
    export namespace InviteUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InviteUsersRequest) => any;
    }
    export interface InviteUsersResponse {
            /**
                * <p>The email invitation details.</p>
                */
            Invites?: Invite[];
    }
    export namespace InviteUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InviteUsersResponse) => any;
    }
    export interface ListAccountsRequest {
            /**
                * <p>Amazon Chime account name prefix with which to filter results.</p>
                */
            Name?: string;
            /**
                * <p>User email address with which to filter results.</p>
                */
            UserEmail?: string;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call. Defaults to 100.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAccountsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsRequest) => any;
    }
    export interface ListAccountsResponse {
            /**
                * <p>List of Amazon Chime accounts and account details.</p>
                */
            Accounts?: Account[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListAccountsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsResponse) => any;
    }
    export interface ListAppInstanceAdminsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The maximum number of administrators that you want to return.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token returned from previous API requests until the number of administrators is reached.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstanceAdminsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstanceAdminsRequest) => any;
    }
    export interface ListAppInstanceAdminsResponse {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn?: string;
            /**
                * <p>The information for each administrator.</p>
                */
            AppInstanceAdmins?: AppInstanceAdminSummary[];
            /**
                * <p>The token returned from previous API requests until the number of administrators is reached.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstanceAdminsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstanceAdminsResponse) => any;
    }
    export interface ListAppInstancesRequest {
            /**
                * <p>The maximum number of <code>AppInstance</code>s that you want to return.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API requests until you reach the maximum number of <code>AppInstance</code>s.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstancesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstancesRequest) => any;
    }
    export interface ListAppInstancesResponse {
            /**
                * <p>The information for each <code>AppInstance</code>.</p>
                */
            AppInstances?: AppInstanceSummary[];
            /**
                * <p>The token passed by previous API requests until the maximum number of <code>AppInstance</code>s is reached.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstancesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstancesResponse) => any;
    }
    export interface ListAppInstanceUsersRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The maximum number of requests that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested users are returned.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstanceUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstanceUsersRequest) => any;
    }
    export interface ListAppInstanceUsersResponse {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn?: string;
            /**
                * <p>The information for each requested <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUsers?: AppInstanceUserSummary[];
            /**
                * <p>The token passed by previous API calls until all requested users are returned.</p>
                */
            NextToken?: string;
    }
    export namespace ListAppInstanceUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppInstanceUsersResponse) => any;
    }
    export interface ListAttendeesRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAttendeesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeesRequest) => any;
    }
    export interface ListAttendeesResponse {
            /**
                * <p>The Amazon Chime SDK attendee information.</p>
                */
            Attendees?: Attendee[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListAttendeesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeesResponse) => any;
    }
    export interface ListAttendeeTagsRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
    }
    export namespace ListAttendeeTagsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeeTagsRequest) => any;
    }
    export interface ListAttendeeTagsResponse {
            /**
                * <p>A list of tag key-value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListAttendeeTagsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAttendeeTagsResponse) => any;
    }
    export interface ListBotsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The maximum number of results to return in a single call. The default is 10.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListBotsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBotsRequest) => any;
    }
    export interface ListBotsResponse {
            /**
                * <p>List of bots and bot details.</p>
                */
            Bots?: Bot[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListBotsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBotsResponse) => any;
    }
    export interface ListChannelBansRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The maximum number of bans that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested bans are returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelBansRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelBansRequest) => any;
    }
    export interface ListChannelBansResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The token passed by previous API calls until all requested bans are returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The information for each requested ban.</p>
                */
            ChannelBans?: ChannelBanSummary[];
    }
    export namespace ListChannelBansResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelBansResponse) => any;
    }
    export interface ListChannelMembershipsRequest {
            /**
                * <p>The maximum number of channel memberships that you want returned.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default
                *          members are always returned as part of <code>ListChannelMemberships</code>. Hidden members
                *          are only returned if the type filter in <code>ListChannelMemberships</code> equals
                *             <code>HIDDEN</code>. Otherwise hidden members are not returned.</p>
                */
            Type?: ChannelMembershipType | string;
            /**
                * <p>The maximum number of channel memberships that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested channel memberships are
                *          returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelMembershipsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMembershipsRequest) => any;
    }
    export interface ListChannelMembershipsResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The information for the requested channel memberships.</p>
                */
            ChannelMemberships?: ChannelMembershipSummary[];
            /**
                * <p>The token passed by previous API calls until all requested channel memberships are
                *          returned.</p>
                */
            NextToken?: string;
    }
    export namespace ListChannelMembershipsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMembershipsResponse) => any;
    }
    export interface ListChannelMembershipsForAppInstanceUserRequest {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>s</p>
                */
            AppInstanceUserArn?: string;
            /**
                * <p>The maximum number of users that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token returned from previous API requests until the number of channel memberships is reached.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelMembershipsForAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMembershipsForAppInstanceUserRequest) => any;
    }
    export interface ListChannelMembershipsForAppInstanceUserResponse {
            /**
                * <p>The token passed by previous API calls until all requested users are returned.</p>
                */
            ChannelMemberships?: ChannelMembershipForAppInstanceUserSummary[];
            /**
                * <p>The token passed by previous API calls until all requested users are returned.</p>
                */
            NextToken?: string;
    }
    export namespace ListChannelMembershipsForAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMembershipsForAppInstanceUserResponse) => any;
    }
    export enum SortOrder {
            ASCENDING = "ASCENDING",
            DESCENDING = "DESCENDING"
    }
    export interface ListChannelMessagesRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The order in which you want messages sorted. Default is Descending, based on time
                *          created.</p>
                */
            SortOrder?: SortOrder | string;
            /**
                * <p>The initial or starting time stamp for your requested messages.</p>
                */
            NotBefore?: Date;
            /**
                * <p>The final or ending time stamp for your requested messages.</p>
                */
            NotAfter?: Date;
            /**
                * <p>The maximum number of messages that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested messages are returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelMessagesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMessagesRequest) => any;
    }
    export interface ListChannelMessagesResponse {
            /**
                * <p>The ARN of the channel containing the requested messages.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The token passed by previous API calls until all requested messages are returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The information about, and content of, each requested message.</p>
                */
            ChannelMessages?: ChannelMessageSummary[];
    }
    export namespace ListChannelMessagesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelMessagesResponse) => any;
    }
    export interface ListChannelModeratorsRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The maximum number of moderators that you want returned.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested moderators are
                *          returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelModeratorsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelModeratorsRequest) => any;
    }
    export interface ListChannelModeratorsResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The token passed by previous API calls until all requested moderators are
                *          returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The information about and names of each moderator.</p>
                */
            ChannelModerators?: ChannelModeratorSummary[];
    }
    export namespace ListChannelModeratorsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelModeratorsResponse) => any;
    }
    export interface ListChannelsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The privacy setting. <code>PUBLIC</code> retrieves all the public channels.
                *             <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code>
                *          can retrieve private channels. </p>
                */
            Privacy?: ChannelPrivacy | string;
            /**
                * <p>The maximum number of channels that you want to return.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token passed by previous API calls until all requested channels are returned.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelsRequest) => any;
    }
    export interface ListChannelsResponse {
            /**
                * <p>The information about each channel.</p>
                */
            Channels?: ChannelSummary[];
            /**
                * <p>The token returned from previous API requests until the number of channels is
                *          reached.</p>
                */
            NextToken?: string;
    }
    export namespace ListChannelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelsResponse) => any;
    }
    export interface ListChannelsModeratedByAppInstanceUserRequest {
            /**
                * <p>The ARN of the user in the moderated channel.</p>
                */
            AppInstanceUserArn?: string;
            /**
                * <p>The maximum number of channels in the request.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token returned from previous API requests until the number of channels moderated by
                *          the user is reached.</p>
                */
            NextToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace ListChannelsModeratedByAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelsModeratedByAppInstanceUserRequest) => any;
    }
    export interface ListChannelsModeratedByAppInstanceUserResponse {
            /**
                * <p>The moderated channels in the request.</p>
                */
            Channels?: ChannelModeratedByAppInstanceUserSummary[];
            /**
                * <p>The token returned from previous API requests until the number of channels moderated by
                *          the user is reached.</p>
                */
            NextToken?: string;
    }
    export namespace ListChannelsModeratedByAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListChannelsModeratedByAppInstanceUserResponse) => any;
    }
    export interface ListMediaCapturePipelinesRequest {
            /**
                * <p>The token used to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call. Valid Range: 1 - 99.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMediaCapturePipelinesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMediaCapturePipelinesRequest) => any;
    }
    export interface ListMediaCapturePipelinesResponse {
            /**
                * <p>The media capture pipeline objects in the list.</p>
                */
            MediaCapturePipelines?: MediaCapturePipeline[];
            /**
                * <p>The token used to retrieve the next page of results. </p>
                */
            NextToken?: string;
    }
    export namespace ListMediaCapturePipelinesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMediaCapturePipelinesResponse) => any;
    }
    export interface ListMeetingsRequest {
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMeetingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMeetingsRequest) => any;
    }
    export interface ListMeetingsResponse {
            /**
                * <p>The Amazon Chime SDK meeting information.</p>
                */
            Meetings?: Meeting[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListMeetingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMeetingsResponse) => any;
    }
    export interface ListMeetingTagsRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace ListMeetingTagsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMeetingTagsRequest) => any;
    }
    export interface ListMeetingTagsResponse {
            /**
                * <p>A list of tag key-value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListMeetingTagsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMeetingTagsResponse) => any;
    }
    export interface ListPhoneNumberOrdersRequest {
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListPhoneNumberOrdersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumberOrdersRequest) => any;
    }
    export interface ListPhoneNumberOrdersResponse {
            /**
                * <p>The phone number order details.</p>
                */
            PhoneNumberOrders?: PhoneNumberOrder[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListPhoneNumberOrdersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumberOrdersResponse) => any;
    }
    export interface ListPhoneNumbersRequest {
            /**
                * <p>The phone number status.</p>
                */
            Status?: PhoneNumberStatus | string;
            /**
                * <p>The phone number product type.</p>
                */
            ProductType?: PhoneNumberProductType | string;
            /**
                * <p>The filter to use to limit the number of results.</p>
                */
            FilterName?: PhoneNumberAssociationName | string;
            /**
                * <p>The value to use for the filter.</p>
                */
            FilterValue?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListPhoneNumbersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersRequest) => any;
    }
    export interface ListPhoneNumbersResponse {
            /**
                * <p>The phone number details.</p>
                */
            PhoneNumbers?: PhoneNumber[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListPhoneNumbersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPhoneNumbersResponse) => any;
    }
    export interface ListProxySessionsRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The proxy session status.</p>
                */
            Status?: ProxySessionStatus | string;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListProxySessionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProxySessionsRequest) => any;
    }
    export interface ListProxySessionsResponse {
            /**
                * <p>The proxy session details.</p>
                */
            ProxySessions?: ProxySession[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListProxySessionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProxySessionsResponse) => any;
    }
    export interface ListRoomMembershipsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRoomMembershipsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoomMembershipsRequest) => any;
    }
    export interface ListRoomMembershipsResponse {
            /**
                * <p>The room membership details.</p>
                */
            RoomMemberships?: RoomMembership[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRoomMembershipsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoomMembershipsResponse) => any;
    }
    export interface ListRoomsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The member ID (user ID or bot ID).</p>
                */
            MemberId?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRoomsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoomsRequest) => any;
    }
    export interface ListRoomsResponse {
            /**
                * <p>The room details.</p>
                */
            Rooms?: Room[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListRoomsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRoomsResponse) => any;
    }
    export interface ListSipMediaApplicationsRequest {
            /**
                * <p>The maximum number of results to return in a single call. Defaults to 100.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSipMediaApplicationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSipMediaApplicationsRequest) => any;
    }
    export interface ListSipMediaApplicationsResponse {
            /**
                * <p>List of SIP media applications and application details.</p>
                */
            SipMediaApplications?: SipMediaApplication[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSipMediaApplicationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSipMediaApplicationsResponse) => any;
    }
    export interface ListSipRulesRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId?: string;
            /**
                * <p>The maximum number of results to return in a single call. Defaults to 100.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSipRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSipRulesRequest) => any;
    }
    export interface ListSipRulesResponse {
            /**
                * <p>List of SIP rules and rule details.</p>
                */
            SipRules?: SipRule[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSipRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSipRulesResponse) => any;
    }
    export interface ListSupportedPhoneNumberCountriesRequest {
            /**
                * <p>The phone number product type.</p>
                */
            ProductType: PhoneNumberProductType | string | undefined;
    }
    export namespace ListSupportedPhoneNumberCountriesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSupportedPhoneNumberCountriesRequest) => any;
    }
    /**
        * <p>The phone number country.</p>
        */
    export interface PhoneNumberCountry {
            /**
                * <p>The phone number country code. Format: ISO 3166-1 alpha-2.</p>
                */
            CountryCode?: string;
            /**
                * <p>The supported phone number types. </p>
                */
            SupportedPhoneNumberTypes?: (PhoneNumberType | string)[];
    }
    export namespace PhoneNumberCountry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhoneNumberCountry) => any;
    }
    export interface ListSupportedPhoneNumberCountriesResponse {
            /**
                * <p>The supported phone number countries.</p>
                */
            PhoneNumberCountries?: PhoneNumberCountry[];
    }
    export namespace ListSupportedPhoneNumberCountriesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSupportedPhoneNumberCountriesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>A list of tag-key value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListUsersRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>Optional. The user email address used to filter results. Maximum 1.</p>
                */
            UserEmail?: string;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
            /**
                * <p>The maximum number of results to return in a single call. Defaults to 100.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersRequest) => any;
    }
    export interface ListUsersResponse {
            /**
                * <p>List of users and user details.</p>
                */
            Users?: User[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersResponse) => any;
    }
    export interface ListVoiceConnectorGroupsRequest {
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListVoiceConnectorGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorGroupsRequest) => any;
    }
    export interface ListVoiceConnectorGroupsResponse {
            /**
                * <p>The details of the Amazon Chime Voice Connector groups.</p>
                */
            VoiceConnectorGroups?: VoiceConnectorGroup[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListVoiceConnectorGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorGroupsResponse) => any;
    }
    export interface ListVoiceConnectorsRequest {
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListVoiceConnectorsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorsRequest) => any;
    }
    export interface ListVoiceConnectorsResponse {
            /**
                * <p>The details of the Amazon Chime Voice Connectors.</p>
                */
            VoiceConnectors?: VoiceConnector[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListVoiceConnectorsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorsResponse) => any;
    }
    export interface ListVoiceConnectorTerminationCredentialsRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
    }
    export namespace ListVoiceConnectorTerminationCredentialsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorTerminationCredentialsRequest) => any;
    }
    export interface ListVoiceConnectorTerminationCredentialsResponse {
            /**
                * <p>A list of user names.</p>
                */
            Usernames?: string[];
    }
    export namespace ListVoiceConnectorTerminationCredentialsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListVoiceConnectorTerminationCredentialsResponse) => any;
    }
    export interface LogoutUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace LogoutUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogoutUserRequest) => any;
    }
    export interface LogoutUserResponse {
    }
    export namespace LogoutUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogoutUserResponse) => any;
    }
    export interface PutAppInstanceRetentionSettingsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The time in days to retain data. Data type: number.</p>
                */
            AppInstanceRetentionSettings: AppInstanceRetentionSettings | undefined;
    }
    export namespace PutAppInstanceRetentionSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAppInstanceRetentionSettingsRequest) => any;
    }
    export interface PutAppInstanceRetentionSettingsResponse {
            /**
                * <p>The time in days to retain data. Data type: number.</p>
                */
            AppInstanceRetentionSettings?: AppInstanceRetentionSettings;
            /**
                * <p>The time at which the API deletes data.</p>
                */
            InitiateDeletionTimestamp?: Date;
    }
    export namespace PutAppInstanceRetentionSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAppInstanceRetentionSettingsResponse) => any;
    }
    export interface PutAppInstanceStreamingConfigurationsRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The streaming configurations set for an <code>AppInstance</code>.</p>
                */
            AppInstanceStreamingConfigurations: AppInstanceStreamingConfiguration[] | undefined;
    }
    export namespace PutAppInstanceStreamingConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAppInstanceStreamingConfigurationsRequest) => any;
    }
    export interface PutAppInstanceStreamingConfigurationsResponse {
            /**
                * <p>The streaming configurations of an <code>AppInstance</code>.</p>
                */
            AppInstanceStreamingConfigurations?: AppInstanceStreamingConfiguration[];
    }
    export namespace PutAppInstanceStreamingConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAppInstanceStreamingConfigurationsResponse) => any;
    }
    export interface PutEventsConfigurationRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
            /**
                * <p>HTTPS endpoint that allows the bot to receive outgoing events.</p>
                */
            OutboundEventsHTTPSEndpoint?: string;
            /**
                * <p>Lambda function ARN that allows the bot to receive outgoing events.</p>
                */
            LambdaFunctionArn?: string;
    }
    export namespace PutEventsConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEventsConfigurationRequest) => any;
    }
    export interface PutEventsConfigurationResponse {
            /**
                * <p>The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.</p>
                */
            EventsConfiguration?: EventsConfiguration;
    }
    export namespace PutEventsConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEventsConfigurationResponse) => any;
    }
    export interface PutRetentionSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The retention settings.</p>
                */
            RetentionSettings: RetentionSettings | undefined;
    }
    export namespace PutRetentionSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRetentionSettingsRequest) => any;
    }
    export interface PutRetentionSettingsResponse {
            /**
                * <p>The retention settings.</p>
                */
            RetentionSettings?: RetentionSettings;
            /**
                * <p>The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.</p>
                */
            InitiateDeletionTimestamp?: Date;
    }
    export namespace PutRetentionSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRetentionSettingsResponse) => any;
    }
    export interface PutSipMediaApplicationLoggingConfigurationRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId: string | undefined;
            /**
                * <p>The actual logging configuration.</p>
                */
            SipMediaApplicationLoggingConfiguration?: SipMediaApplicationLoggingConfiguration;
    }
    export namespace PutSipMediaApplicationLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutSipMediaApplicationLoggingConfigurationRequest) => any;
    }
    export interface PutSipMediaApplicationLoggingConfigurationResponse {
            /**
                * <p>Logging configuration of the SIP media application.</p>
                */
            SipMediaApplicationLoggingConfiguration?: SipMediaApplicationLoggingConfiguration;
    }
    export namespace PutSipMediaApplicationLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutSipMediaApplicationLoggingConfigurationResponse) => any;
    }
    export interface PutVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The emergency calling configuration details.</p>
                */
            EmergencyCallingConfiguration: EmergencyCallingConfiguration | undefined;
    }
    export namespace PutVoiceConnectorEmergencyCallingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorEmergencyCallingConfigurationRequest) => any;
    }
    export interface PutVoiceConnectorEmergencyCallingConfigurationResponse {
            /**
                * <p>The emergency calling configuration details.</p>
                */
            EmergencyCallingConfiguration?: EmergencyCallingConfiguration;
    }
    export namespace PutVoiceConnectorEmergencyCallingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorEmergencyCallingConfigurationResponse) => any;
    }
    export interface PutVoiceConnectorLoggingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The logging configuration details to add.</p>
                */
            LoggingConfiguration: LoggingConfiguration | undefined;
    }
    export namespace PutVoiceConnectorLoggingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorLoggingConfigurationRequest) => any;
    }
    export interface PutVoiceConnectorLoggingConfigurationResponse {
            /**
                * <p>The updated logging configuration details.</p>
                */
            LoggingConfiguration?: LoggingConfiguration;
    }
    export namespace PutVoiceConnectorLoggingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorLoggingConfigurationResponse) => any;
    }
    export interface PutVoiceConnectorOriginationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The origination setting details to add.</p>
                */
            Origination: Origination | undefined;
    }
    export namespace PutVoiceConnectorOriginationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorOriginationRequest) => any;
    }
    export interface PutVoiceConnectorOriginationResponse {
            /**
                * <p>The updated origination setting details.</p>
                */
            Origination?: Origination;
    }
    export namespace PutVoiceConnectorOriginationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorOriginationResponse) => any;
    }
    export interface PutVoiceConnectorProxyRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The default number of minutes allowed for proxy sessions.</p>
                */
            DefaultSessionExpiryMinutes: number | undefined;
            /**
                * <p>The countries for proxy phone numbers to be selected from.</p>
                */
            PhoneNumberPoolCountries: string[] | undefined;
            /**
                * <p>The phone number to route calls to after a proxy session expires.</p>
                */
            FallBackPhoneNumber?: string;
            /**
                * <p>When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.</p>
                */
            Disabled?: boolean;
    }
    export namespace PutVoiceConnectorProxyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorProxyRequest) => any;
    }
    export interface PutVoiceConnectorProxyResponse {
            /**
                * <p>The proxy configuration details.</p>
                */
            Proxy?: Proxy;
    }
    export namespace PutVoiceConnectorProxyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorProxyResponse) => any;
    }
    export interface PutVoiceConnectorStreamingConfigurationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The streaming configuration details to add.</p>
                */
            StreamingConfiguration: StreamingConfiguration | undefined;
    }
    export namespace PutVoiceConnectorStreamingConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorStreamingConfigurationRequest) => any;
    }
    export interface PutVoiceConnectorStreamingConfigurationResponse {
            /**
                * <p>The updated streaming configuration details.</p>
                */
            StreamingConfiguration?: StreamingConfiguration;
    }
    export namespace PutVoiceConnectorStreamingConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorStreamingConfigurationResponse) => any;
    }
    export interface PutVoiceConnectorTerminationRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The termination setting details to add.</p>
                */
            Termination: Termination | undefined;
    }
    export namespace PutVoiceConnectorTerminationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorTerminationRequest) => any;
    }
    export interface PutVoiceConnectorTerminationResponse {
            /**
                * <p>The updated termination setting details.</p>
                */
            Termination?: Termination;
    }
    export namespace PutVoiceConnectorTerminationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorTerminationResponse) => any;
    }
    export interface PutVoiceConnectorTerminationCredentialsRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The termination SIP credentials.</p>
                */
            Credentials?: Credential[];
    }
    export namespace PutVoiceConnectorTerminationCredentialsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutVoiceConnectorTerminationCredentialsRequest) => any;
    }
    export interface RedactChannelMessageRequest {
            /**
                * <p>The ARN of the channel containing the messages that you want to redact.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ID of the message being redacted.</p>
                */
            MessageId: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace RedactChannelMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactChannelMessageRequest) => any;
    }
    export interface RedactChannelMessageResponse {
            /**
                * <p>The ARN of the channel containing the messages that you want to redact.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ID of the message being redacted.</p>
                */
            MessageId?: string;
    }
    export namespace RedactChannelMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactChannelMessageResponse) => any;
    }
    export interface RedactConversationMessageRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The conversation ID.</p>
                */
            ConversationId: string | undefined;
            /**
                * <p>The message ID.</p>
                */
            MessageId: string | undefined;
    }
    export namespace RedactConversationMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactConversationMessageRequest) => any;
    }
    export interface RedactConversationMessageResponse {
    }
    export namespace RedactConversationMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactConversationMessageResponse) => any;
    }
    export interface RedactRoomMessageRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The message ID.</p>
                */
            MessageId: string | undefined;
    }
    export namespace RedactRoomMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactRoomMessageRequest) => any;
    }
    export interface RedactRoomMessageResponse {
    }
    export namespace RedactRoomMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactRoomMessageResponse) => any;
    }
    export interface RegenerateSecurityTokenRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
    }
    export namespace RegenerateSecurityTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegenerateSecurityTokenRequest) => any;
    }
    export interface RegenerateSecurityTokenResponse {
            /**
                * <p>A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.</p>
                */
            Bot?: Bot;
    }
    export namespace RegenerateSecurityTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegenerateSecurityTokenResponse) => any;
    }
    export interface ResetPersonalPINRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace ResetPersonalPINRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResetPersonalPINRequest) => any;
    }
    export interface ResetPersonalPINResponse {
            /**
                * <p>The user details and new personal meeting PIN.</p>
                */
            User?: User;
    }
    export namespace ResetPersonalPINResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResetPersonalPINResponse) => any;
    }
    export interface RestorePhoneNumberRequest {
            /**
                * <p>The phone number.</p>
                */
            PhoneNumberId: string | undefined;
    }
    export namespace RestorePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RestorePhoneNumberRequest) => any;
    }
    export interface RestorePhoneNumberResponse {
            /**
                * <p>The phone number details.</p>
                */
            PhoneNumber?: PhoneNumber;
    }
    export namespace RestorePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RestorePhoneNumberResponse) => any;
    }
    export interface SearchAvailablePhoneNumbersRequest {
            /**
                * <p>The area code used to filter results. Only applies to the US.</p>
                */
            AreaCode?: string;
            /**
                * <p>The city used to filter results. Only applies to the US.</p>
                */
            City?: string;
            /**
                * <p>The country used to filter results. Defaults to the US Format: ISO 3166-1 alpha-2.</p>
                */
            Country?: string;
            /**
                * <p>The state used to filter results. Required only if you provide <code>City</code>. Only applies to the US.</p>
                */
            State?: string;
            /**
                * <p>The toll-free prefix that you use to filter results. Only applies to the US.</p>
                */
            TollFreePrefix?: string;
            /**
                * <p>The phone number type used to filter results. Required for non-US numbers.</p>
                */
            PhoneNumberType?: PhoneNumberType | string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token used to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace SearchAvailablePhoneNumbersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchAvailablePhoneNumbersRequest) => any;
    }
    export interface SearchAvailablePhoneNumbersResponse {
            /**
                * <p>List of phone numbers, in E.164 format.</p>
                */
            E164PhoneNumbers?: string[];
            /**
                * <p>The token used to retrieve the next page of search results.</p>
                */
            NextToken?: string;
    }
    export namespace SearchAvailablePhoneNumbersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchAvailablePhoneNumbersResponse) => any;
    }
    export interface SendChannelMessageRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The content of the message.</p>
                */
            Content: string | undefined;
            /**
                * <p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p>
                */
            Type: ChannelMessageType | string | undefined;
            /**
                * <p>Boolean that controls whether the message is persisted on the back end. Required.</p>
                */
            Persistence: ChannelMessagePersistenceType | string | undefined;
            /**
                * <p>The optional metadata for each message.</p>
                */
            Metadata?: string;
            /**
                * <p>The <code>Idempotency</code> token for each client request.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace SendChannelMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendChannelMessageRequest) => any;
    }
    export interface SendChannelMessageResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ID string assigned to each message.</p>
                */
            MessageId?: string;
    }
    export namespace SendChannelMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SendChannelMessageResponse) => any;
    }
    /**
        * <p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.</p>
        */
    export interface TranscriptionConfiguration {
            /**
                * <p>The transcription configuration settings passed to Amazon Transcribe.</p>
                */
            EngineTranscribeSettings?: EngineTranscribeSettings;
            /**
                * <p>The transcription configuration settings passed to Amazon Transcribe Medical.</p>
                */
            EngineTranscribeMedicalSettings?: EngineTranscribeMedicalSettings;
    }
    export namespace TranscriptionConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TranscriptionConfiguration) => any;
    }
    export interface StartMeetingTranscriptionRequest {
            /**
                * <p>The unique ID of the meeting being transcribed.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.</p>
                */
            TranscriptionConfiguration: TranscriptionConfiguration | undefined;
    }
    export namespace StartMeetingTranscriptionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMeetingTranscriptionRequest) => any;
    }
    export interface StartMeetingTranscriptionResponse {
    }
    export namespace StartMeetingTranscriptionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMeetingTranscriptionResponse) => any;
    }
    export interface StopMeetingTranscriptionRequest {
            /**
                * <p>The unique ID of the meeting for which you stop transcription.</p>
                */
            MeetingId: string | undefined;
    }
    export namespace StopMeetingTranscriptionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopMeetingTranscriptionRequest) => any;
    }
    export interface StopMeetingTranscriptionResponse {
    }
    export namespace StopMeetingTranscriptionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StopMeetingTranscriptionResponse) => any;
    }
    export interface TagAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagAttendeeRequest) => any;
    }
    export interface TagMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagMeetingRequest) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface UntagAttendeeRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The Amazon Chime SDK attendee ID.</p>
                */
            AttendeeId: string | undefined;
            /**
                * <p>The tag keys.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagAttendeeRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagAttendeeRequest) => any;
    }
    export interface UntagMeetingRequest {
            /**
                * <p>The Amazon Chime SDK meeting ID.</p>
                */
            MeetingId: string | undefined;
            /**
                * <p>The tag keys.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagMeetingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagMeetingRequest) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>The tag keys.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UpdateAccountRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The new name for the specified Amazon Chime account.</p>
                */
            Name?: string;
            /**
                * <p>The default license applied when you add users to an Amazon Chime account.</p>
                */
            DefaultLicense?: License | string;
    }
    export namespace UpdateAccountRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountRequest) => any;
    }
    export interface UpdateAccountResponse {
            /**
                * <p>The updated Amazon Chime account details.</p>
                */
            Account?: Account;
    }
    export namespace UpdateAccountResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountResponse) => any;
    }
    export interface UpdateAccountSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The Amazon Chime account settings to update.</p>
                */
            AccountSettings: AccountSettings | undefined;
    }
    export namespace UpdateAccountSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountSettingsRequest) => any;
    }
    export interface UpdateAccountSettingsResponse {
    }
    export namespace UpdateAccountSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountSettingsResponse) => any;
    }
    export interface UpdateAppInstanceRequest {
            /**
                * <p>The ARN of the <code>AppInstance</code>.</p>
                */
            AppInstanceArn: string | undefined;
            /**
                * <p>The name that you want to change.</p>
                */
            Name: string | undefined;
            /**
                * <p>The metadata that you want to change.</p>
                */
            Metadata?: string;
    }
    export namespace UpdateAppInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppInstanceRequest) => any;
    }
    export interface UpdateAppInstanceResponse {
            /**
                * <p>The ARN of the <code>AppInstance</code>. </p>
                */
            AppInstanceArn?: string;
    }
    export namespace UpdateAppInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppInstanceResponse) => any;
    }
    export interface UpdateAppInstanceUserRequest {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserArn: string | undefined;
            /**
                * <p>The name of the <code>AppInstanceUser</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The metadata of the <code>AppInstanceUser</code>.</p>
                */
            Metadata?: string;
    }
    export namespace UpdateAppInstanceUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppInstanceUserRequest) => any;
    }
    export interface UpdateAppInstanceUserResponse {
            /**
                * <p>The ARN of the <code>AppInstanceUser</code>.</p>
                */
            AppInstanceUserArn?: string;
    }
    export namespace UpdateAppInstanceUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppInstanceUserResponse) => any;
    }
    export interface UpdateBotRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The bot ID.</p>
                */
            BotId: string | undefined;
            /**
                * <p>When true, stops the specified bot from running in your account.</p>
                */
            Disabled?: boolean;
    }
    export namespace UpdateBotRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBotRequest) => any;
    }
    export interface UpdateBotResponse {
            /**
                * <p>The updated bot details.</p>
                */
            Bot?: Bot;
    }
    export namespace UpdateBotResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateBotResponse) => any;
    }
    export interface UpdateChannelRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The name of the channel.</p>
                */
            Name: string | undefined;
            /**
                * <p>The mode of the update request.</p>
                */
            Mode: ChannelMode | string | undefined;
            /**
                * <p>The metadata for the update request.</p>
                */
            Metadata?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace UpdateChannelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelRequest) => any;
    }
    export interface UpdateChannelResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
    }
    export namespace UpdateChannelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelResponse) => any;
    }
    export interface UpdateChannelMessageRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The ID string of the message being updated.</p>
                */
            MessageId: string | undefined;
            /**
                * <p>The content of the message being updated.</p>
                */
            Content?: string;
            /**
                * <p>The metadata of the message being updated.</p>
                */
            Metadata?: string;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace UpdateChannelMessageRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelMessageRequest) => any;
    }
    export interface UpdateChannelMessageResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
            /**
                * <p>The ID string of the message being updated.</p>
                */
            MessageId?: string;
    }
    export namespace UpdateChannelMessageResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelMessageResponse) => any;
    }
    export interface UpdateChannelReadMarkerRequest {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn: string | undefined;
            /**
                * <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
                */
            ChimeBearer?: string;
    }
    export namespace UpdateChannelReadMarkerRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelReadMarkerRequest) => any;
    }
    export interface UpdateChannelReadMarkerResponse {
            /**
                * <p>The ARN of the channel.</p>
                */
            ChannelArn?: string;
    }
    export namespace UpdateChannelReadMarkerResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateChannelReadMarkerResponse) => any;
    }
    export interface UpdateGlobalSettingsRequest {
            /**
                * <p>The Amazon Chime Business Calling settings.</p>
                */
            BusinessCalling?: BusinessCallingSettings;
            /**
                * <p>The Amazon Chime Voice Connector settings.</p>
                */
            VoiceConnector?: VoiceConnectorSettings;
    }
    export namespace UpdateGlobalSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGlobalSettingsRequest) => any;
    }
    export interface UpdatePhoneNumberRequest {
            /**
                * <p>The phone number ID.</p>
                */
            PhoneNumberId: string | undefined;
            /**
                * <p>The product type.</p>
                */
            ProductType?: PhoneNumberProductType | string;
            /**
                * <p>The outbound calling name associated with the phone number.</p>
                */
            CallingName?: string;
    }
    export namespace UpdatePhoneNumberRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberRequest) => any;
    }
    export interface UpdatePhoneNumberResponse {
            /**
                * <p>The updated phone number details.</p>
                */
            PhoneNumber?: PhoneNumber;
    }
    export namespace UpdatePhoneNumberResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberResponse) => any;
    }
    export interface UpdatePhoneNumberSettingsRequest {
            /**
                * <p>The default outbound calling name for the account.</p>
                */
            CallingName: string | undefined;
    }
    export namespace UpdatePhoneNumberSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePhoneNumberSettingsRequest) => any;
    }
    export interface UpdateProxySessionRequest {
            /**
                * <p>The Amazon Chime voice connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The proxy session ID.</p>
                */
            ProxySessionId: string | undefined;
            /**
                * <p>The proxy session capabilities.</p>
                */
            Capabilities: (Capability | string)[] | undefined;
            /**
                * <p>The number of minutes allowed for the proxy session.</p>
                */
            ExpiryMinutes?: number;
    }
    export namespace UpdateProxySessionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProxySessionRequest) => any;
    }
    export interface UpdateProxySessionResponse {
            /**
                * <p>The proxy session details.</p>
                */
            ProxySession?: ProxySession;
    }
    export namespace UpdateProxySessionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProxySessionResponse) => any;
    }
    export interface UpdateRoomRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The room name.</p>
                */
            Name?: string;
    }
    export namespace UpdateRoomRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoomRequest) => any;
    }
    export interface UpdateRoomResponse {
            /**
                * <p>The room details.</p>
                */
            Room?: Room;
    }
    export namespace UpdateRoomResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoomResponse) => any;
    }
    export interface UpdateRoomMembershipRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The room ID.</p>
                */
            RoomId: string | undefined;
            /**
                * <p>The member ID.</p>
                */
            MemberId: string | undefined;
            /**
                * <p>The role of the member.</p>
                */
            Role?: RoomMembershipRole | string;
    }
    export namespace UpdateRoomMembershipRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoomMembershipRequest) => any;
    }
    export interface UpdateRoomMembershipResponse {
            /**
                * <p>The room membership details.</p>
                */
            RoomMembership?: RoomMembership;
    }
    export namespace UpdateRoomMembershipResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRoomMembershipResponse) => any;
    }
    export interface UpdateSipMediaApplicationRequest {
            /**
                * <p>The SIP media application ID.</p>
                */
            SipMediaApplicationId: string | undefined;
            /**
                * <p>The new name for the specified SIP media application.</p>
                */
            Name?: string;
            /**
                * <p>The new set of endpoints for the specified SIP media application.</p>
                */
            Endpoints?: SipMediaApplicationEndpoint[];
    }
    export namespace UpdateSipMediaApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipMediaApplicationRequest) => any;
    }
    export interface UpdateSipMediaApplicationResponse {
            /**
                * <p>The updated SIP media application details.</p>
                */
            SipMediaApplication?: SipMediaApplication;
    }
    export namespace UpdateSipMediaApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipMediaApplicationResponse) => any;
    }
    export interface UpdateSipMediaApplicationCallRequest {
            /**
                * <p>The ID of the SIP media application handling the call.</p>
                */
            SipMediaApplicationId: string | undefined;
            /**
                * <p>The ID of the call transaction.</p>
                */
            TransactionId: string | undefined;
            /**
                * <p>Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs.</p>
                */
            Arguments: Record<string, string> | undefined;
    }
    export namespace UpdateSipMediaApplicationCallRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipMediaApplicationCallRequest) => any;
    }
    export interface UpdateSipMediaApplicationCallResponse {
            /**
                * <p>A <code>Call</code> instance for a SIP media application.</p>
                */
            SipMediaApplicationCall?: SipMediaApplicationCall;
    }
    export namespace UpdateSipMediaApplicationCallResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipMediaApplicationCallResponse) => any;
    }
    export interface UpdateSipRuleRequest {
            /**
                * <p>The SIP rule ID.</p>
                */
            SipRuleId: string | undefined;
            /**
                * <p>The new name for the specified SIP rule.</p>
                */
            Name: string | undefined;
            /**
                * <p>The new value specified to indicate whether the rule is disabled.</p>
                */
            Disabled?: boolean;
            /**
                * <p>The new value of the list of target applications.</p>
                */
            TargetApplications?: SipRuleTargetApplication[];
    }
    export namespace UpdateSipRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipRuleRequest) => any;
    }
    export interface UpdateSipRuleResponse {
            /**
                * <p>Updated SIP rule details.</p>
                */
            SipRule?: SipRule;
    }
    export namespace UpdateSipRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSipRuleResponse) => any;
    }
    export interface UpdateUserRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The user license type to update. This must be a supported license type for the Amazon Chime
                *             account that the user belongs to.</p>
                */
            LicenseType?: License | string;
            /**
                * <p>The user type.</p>
                */
            UserType?: UserType | string;
            /**
                * <p>The Alexa for Business metadata.</p>
                */
            AlexaForBusinessMetadata?: AlexaForBusinessMetadata;
    }
    export namespace UpdateUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserRequest) => any;
    }
    export interface UpdateUserResponse {
            /**
                * <p>The updated user details.</p>
                */
            User?: User;
    }
    export namespace UpdateUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserResponse) => any;
    }
    export interface UpdateUserSettingsRequest {
            /**
                * <p>The Amazon Chime account ID.</p>
                */
            AccountId: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The user settings to update.</p>
                */
            UserSettings: UserSettings | undefined;
    }
    export namespace UpdateUserSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateUserSettingsRequest) => any;
    }
    export interface UpdateVoiceConnectorRequest {
            /**
                * <p>The Amazon Chime Voice Connector ID.</p>
                */
            VoiceConnectorId: string | undefined;
            /**
                * <p>The name of the Amazon Chime Voice Connector.</p>
                */
            Name: string | undefined;
            /**
                * <p>When enabled, requires encryption for the Amazon Chime Voice Connector.</p>
                */
            RequireEncryption: boolean | undefined;
    }
    export namespace UpdateVoiceConnectorRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateVoiceConnectorRequest) => any;
    }
    export interface UpdateVoiceConnectorResponse {
            /**
                * <p>The updated Amazon Chime Voice Connector details.</p>
                */
            VoiceConnector?: VoiceConnector;
    }
    export namespace UpdateVoiceConnectorResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateVoiceConnectorResponse) => any;
    }
    export interface UpdateVoiceConnectorGroupRequest {
            /**
                * <p>The Amazon Chime Voice Connector group ID.</p>
                */
            VoiceConnectorGroupId: string | undefined;
            /**
                * <p>The name of the Amazon Chime Voice Connector group.</p>
                */
            Name: string | undefined;
            /**
                * <p>The <code>VoiceConnectorItems</code> to associate with the group.</p>
                */
            VoiceConnectorItems: VoiceConnectorItem[] | undefined;
    }
    export namespace UpdateVoiceConnectorGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateVoiceConnectorGroupRequest) => any;
    }
    export interface UpdateVoiceConnectorGroupResponse {
            /**
                * <p>The updated Amazon Chime Voice Connector group details.</p>
                */
            VoiceConnectorGroup?: VoiceConnectorGroup;
    }
    export namespace UpdateVoiceConnectorGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateVoiceConnectorGroupResponse) => any;
    }
}

declare module '@aws-sdk/client-chime/node_modules/@aws-sdk/client-chime/dist-types/models/ChimeServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Chime service.
        */
    export class ChimeServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

