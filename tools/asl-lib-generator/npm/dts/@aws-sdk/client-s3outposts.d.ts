// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-s3outposts' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateEndpointCommandInput, CreateEndpointCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/CreateEndpointCommand";
    import { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/DeleteEndpointCommand";
    import { ListEndpointsCommandInput, ListEndpointsCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListEndpointsCommand";
    import { ListSharedEndpointsCommandInput, ListSharedEndpointsCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListSharedEndpointsCommand";
    import { S3OutpostsClient } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient";
    /**
        * <p>Amazon S3 on Outposts provides access to S3 on Outposts operations.</p>
        */
    export class S3Outposts extends S3OutpostsClient {
            /**
                * <p>Creates an endpoint and associates it with the specified Outpost.</p>
                *         <note>
                *             <p>It can take up to 5 minutes for this action to finish.</p>
                *          </note>
                *         <p></p>
                *         <p>Related actions include:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html">ListEndpoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createEndpoint(args: CreateEndpointCommandInput, options?: __HttpHandlerOptions): Promise<CreateEndpointCommandOutput>;
            createEndpoint(args: CreateEndpointCommandInput, cb: (err: any, data?: CreateEndpointCommandOutput) => void): void;
            createEndpoint(args: CreateEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEndpointCommandOutput) => void): void;
            /**
                * <p>Deletes an endpoint.</p>
                *             <note>
                *             <p>It can take up to 5 minutes for this action to finish.</p>
                *          </note>
                *         <p></p>
                *         <p>Related actions include:</p>
                *         <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html">ListEndpoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteEndpoint(args: DeleteEndpointCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEndpointCommandOutput>;
            deleteEndpoint(args: DeleteEndpointCommandInput, cb: (err: any, data?: DeleteEndpointCommandOutput) => void): void;
            deleteEndpoint(args: DeleteEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEndpointCommandOutput) => void): void;
            /**
                * <p>Lists endpoints associated with the specified Outpost. </p>
                *         <p>Related actions include:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listEndpoints(args: ListEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<ListEndpointsCommandOutput>;
            listEndpoints(args: ListEndpointsCommandInput, cb: (err: any, data?: ListEndpointsCommandOutput) => void): void;
            listEndpoints(args: ListEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEndpointsCommandOutput) => void): void;
            /**
                * <p>Lists all endpoints associated with an Outpost that has been shared by Amazon Web Services Resource Access Manager (RAM).</p>
                *         <p>Related actions include:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listSharedEndpoints(args: ListSharedEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<ListSharedEndpointsCommandOutput>;
            listSharedEndpoints(args: ListSharedEndpointsCommandInput, cb: (err: any, data?: ListSharedEndpointsCommandOutput) => void): void;
            listSharedEndpoints(args: ListSharedEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSharedEndpointsCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/CreateEndpointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEndpointRequest, CreateEndpointResult } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/models_0";
    import { S3OutpostsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient";
    export interface CreateEndpointCommandInput extends CreateEndpointRequest {
    }
    export interface CreateEndpointCommandOutput extends CreateEndpointResult, __MetadataBearer {
    }
    /**
        * <p>Creates an endpoint and associates it with the specified Outpost.</p>
        *         <note>
        *             <p>It can take up to 5 minutes for this action to finish.</p>
        *          </note>
        *         <p></p>
        *         <p>Related actions include:</p>
        *         <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html">ListEndpoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3OutpostsClient, CreateEndpointCommand } from "@aws-sdk/client-s3outposts"; // ES Modules import
        * // const { S3OutpostsClient, CreateEndpointCommand } = require("@aws-sdk/client-s3outposts"); // CommonJS import
        * const client = new S3OutpostsClient(config);
        * const command = new CreateEndpointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEndpointCommandInput} for command's `input` shape.
        * @see {@link CreateEndpointCommandOutput} for command's `response` shape.
        * @see {@link S3OutpostsClientResolvedConfig | config} for S3OutpostsClient's `config` shape.
        *
        */
    export class CreateEndpointCommand extends $Command<CreateEndpointCommandInput, CreateEndpointCommandOutput, S3OutpostsClientResolvedConfig> {
            readonly input: CreateEndpointCommandInput;
            constructor(input: CreateEndpointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3OutpostsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEndpointCommandInput, CreateEndpointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/DeleteEndpointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEndpointRequest } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/models_0";
    import { S3OutpostsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient";
    export interface DeleteEndpointCommandInput extends DeleteEndpointRequest {
    }
    export interface DeleteEndpointCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes an endpoint.</p>
        *             <note>
        *             <p>It can take up to 5 minutes for this action to finish.</p>
        *          </note>
        *         <p></p>
        *         <p>Related actions include:</p>
        *         <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html">ListEndpoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3OutpostsClient, DeleteEndpointCommand } from "@aws-sdk/client-s3outposts"; // ES Modules import
        * // const { S3OutpostsClient, DeleteEndpointCommand } = require("@aws-sdk/client-s3outposts"); // CommonJS import
        * const client = new S3OutpostsClient(config);
        * const command = new DeleteEndpointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEndpointCommandInput} for command's `input` shape.
        * @see {@link DeleteEndpointCommandOutput} for command's `response` shape.
        * @see {@link S3OutpostsClientResolvedConfig | config} for S3OutpostsClient's `config` shape.
        *
        */
    export class DeleteEndpointCommand extends $Command<DeleteEndpointCommandInput, DeleteEndpointCommandOutput, S3OutpostsClientResolvedConfig> {
            readonly input: DeleteEndpointCommandInput;
            constructor(input: DeleteEndpointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3OutpostsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEndpointCommandInput, DeleteEndpointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListEndpointsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEndpointsRequest, ListEndpointsResult } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/models_0";
    import { S3OutpostsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient";
    export interface ListEndpointsCommandInput extends ListEndpointsRequest {
    }
    export interface ListEndpointsCommandOutput extends ListEndpointsResult, __MetadataBearer {
    }
    /**
        * <p>Lists endpoints associated with the specified Outpost. </p>
        *         <p>Related actions include:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3OutpostsClient, ListEndpointsCommand } from "@aws-sdk/client-s3outposts"; // ES Modules import
        * // const { S3OutpostsClient, ListEndpointsCommand } = require("@aws-sdk/client-s3outposts"); // CommonJS import
        * const client = new S3OutpostsClient(config);
        * const command = new ListEndpointsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEndpointsCommandInput} for command's `input` shape.
        * @see {@link ListEndpointsCommandOutput} for command's `response` shape.
        * @see {@link S3OutpostsClientResolvedConfig | config} for S3OutpostsClient's `config` shape.
        *
        */
    export class ListEndpointsCommand extends $Command<ListEndpointsCommandInput, ListEndpointsCommandOutput, S3OutpostsClientResolvedConfig> {
            readonly input: ListEndpointsCommandInput;
            constructor(input: ListEndpointsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3OutpostsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEndpointsCommandInput, ListEndpointsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListSharedEndpointsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSharedEndpointsRequest, ListSharedEndpointsResult } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/models_0";
    import { S3OutpostsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient";
    export interface ListSharedEndpointsCommandInput extends ListSharedEndpointsRequest {
    }
    export interface ListSharedEndpointsCommandOutput extends ListSharedEndpointsResult, __MetadataBearer {
    }
    /**
        * <p>Lists all endpoints associated with an Outpost that has been shared by Amazon Web Services Resource Access Manager (RAM).</p>
        *         <p>Related actions include:</p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html">CreateEndpoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                 <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html">DeleteEndpoint</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3OutpostsClient, ListSharedEndpointsCommand } from "@aws-sdk/client-s3outposts"; // ES Modules import
        * // const { S3OutpostsClient, ListSharedEndpointsCommand } = require("@aws-sdk/client-s3outposts"); // CommonJS import
        * const client = new S3OutpostsClient(config);
        * const command = new ListSharedEndpointsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSharedEndpointsCommandInput} for command's `input` shape.
        * @see {@link ListSharedEndpointsCommandOutput} for command's `response` shape.
        * @see {@link S3OutpostsClientResolvedConfig | config} for S3OutpostsClient's `config` shape.
        *
        */
    export class ListSharedEndpointsCommand extends $Command<ListSharedEndpointsCommandInput, ListSharedEndpointsCommandOutput, S3OutpostsClientResolvedConfig> {
            readonly input: ListSharedEndpointsCommandInput;
            constructor(input: ListSharedEndpointsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3OutpostsClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSharedEndpointsCommandInput, ListSharedEndpointsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/S3OutpostsClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateEndpointCommandInput, CreateEndpointCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/CreateEndpointCommand";
    import { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/DeleteEndpointCommand";
    import { ListEndpointsCommandInput, ListEndpointsCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListEndpointsCommand";
    import { ListSharedEndpointsCommandInput, ListSharedEndpointsCommandOutput } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/commands/ListSharedEndpointsCommand";
    export type ServiceInputTypes = CreateEndpointCommandInput | DeleteEndpointCommandInput | ListEndpointsCommandInput | ListSharedEndpointsCommandInput;
    export type ServiceOutputTypes = CreateEndpointCommandOutput | DeleteEndpointCommandOutput | ListEndpointsCommandOutput | ListSharedEndpointsCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type S3OutpostsClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of S3OutpostsClient class constructor that set the region, credentials and other options.
        */
    export interface S3OutpostsClientConfig extends S3OutpostsClientConfigType {
    }
    type S3OutpostsClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of S3OutpostsClient class. This is resolved and normalized from the {@link S3OutpostsClientConfig | constructor configuration interface}.
        */
    export interface S3OutpostsClientResolvedConfig extends S3OutpostsClientResolvedConfigType {
    }
    /**
        * <p>Amazon S3 on Outposts provides access to S3 on Outposts operations.</p>
        */
    export class S3OutpostsClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, S3OutpostsClientResolvedConfig> {
            /**
                * The resolved configuration of S3OutpostsClient class. This is resolved and normalized from the {@link S3OutpostsClientConfig | constructor configuration interface}.
                */
            readonly config: S3OutpostsClientResolvedConfig;
            constructor(configuration: S3OutpostsClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { S3OutpostsServiceException as __BaseException } from "@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/S3OutpostsServiceException";
    /**
        * <p>Access was denied for this action.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    /**
        * <p>There was a conflict with this action, and it could not be completed.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export enum EndpointAccessType {
            CUSTOMER_OWNED_IP = "CustomerOwnedIp",
            PRIVATE = "Private"
    }
    export interface CreateEndpointRequest {
            /**
                * <p>The ID of the Outposts. </p>
                */
            OutpostId: string | undefined;
            /**
                * <p>The ID of the subnet in the selected VPC. The endpoint subnet must belong to the Outpost
                *             that has Amazon S3 on Outposts provisioned.</p>
                */
            SubnetId: string | undefined;
            /**
                * <p>The ID of the security group to use with the endpoint.</p>
                */
            SecurityGroupId: string | undefined;
            /**
                * <p>The type of access for the network connectivity for the Amazon S3 on Outposts endpoint. To use
                *             the Amazon Web Services VPC, choose <code>Private</code>. To use the endpoint with an on-premises
                *             network, choose <code>CustomerOwnedIp</code>.  If you choose
                *                 <code>CustomerOwnedIp</code>, you must also provide the customer-owned IP address
                *             pool (CoIP pool).</p>
                *         <note>
                *             <p>
                *                <code>Private</code> is the default access type value.</p>
                *          </note>
                */
            AccessType?: EndpointAccessType | string;
            /**
                * <p>The ID of the customer-owned IPv4 address pool (CoIP pool) for the endpoint. IP addresses
                *             are allocated from this pool for the endpoint.</p>
                */
            CustomerOwnedIpv4Pool?: string;
    }
    export namespace CreateEndpointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEndpointRequest) => any;
    }
    export interface CreateEndpointResult {
            /**
                * <p>The Amazon Resource Name (ARN) of the endpoint.</p>
                */
            EndpointArn?: string;
    }
    export namespace CreateEndpointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEndpointResult) => any;
    }
    /**
        * <p>There was an exception with the internal server.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The requested resource was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>There was an exception validating this data.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export interface DeleteEndpointRequest {
            /**
                * <p>The ID of the endpoint.</p>
                */
            EndpointId: string | undefined;
            /**
                * <p>The ID of the Outposts. </p>
                */
            OutpostId: string | undefined;
    }
    export namespace DeleteEndpointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEndpointRequest) => any;
    }
    /**
        * <p>The container for the network interface.</p>
        */
    export interface NetworkInterface {
            /**
                * <p>The ID for the network interface.</p>
                */
            NetworkInterfaceId?: string;
    }
    export namespace NetworkInterface {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NetworkInterface) => any;
    }
    export enum EndpointStatus {
            AVAILABLE = "Available",
            DELETING = "Deleting",
            PENDING = "Pending"
    }
    /**
        * <p>Amazon S3 on Outposts Access Points simplify managing data access at scale for shared datasets in S3 on Outposts.
        *             S3 on Outposts uses endpoints to connect to Outposts buckets so that you can perform actions within your
        *                virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WorkingWithS3Outposts.html">
        *         Accessing S3 on Outposts using VPC-only access points</a> in the <i>Amazon Simple Storage Service User Guide</i>.</p>
        */
    export interface Endpoint {
            /**
                * <p>The Amazon Resource Name (ARN) of the endpoint.</p>
                */
            EndpointArn?: string;
            /**
                * <p>The ID of the Outposts.</p>
                */
            OutpostsId?: string;
            /**
                * <p>The VPC CIDR committed by this endpoint.</p>
                */
            CidrBlock?: string;
            /**
                * <p>The status of the endpoint.</p>
                */
            Status?: EndpointStatus | string;
            /**
                * <p>The time the endpoint was created.</p>
                */
            CreationTime?: Date;
            /**
                * <p>The network interface of the endpoint.</p>
                */
            NetworkInterfaces?: NetworkInterface[];
            /**
                * <p>The ID of the VPC used for the endpoint.</p>
                */
            VpcId?: string;
            /**
                * <p>The ID of the subnet used for the endpoint.</p>
                */
            SubnetId?: string;
            /**
                * <p>The ID of the security group used for the endpoint.</p>
                */
            SecurityGroupId?: string;
            /**
                * <p>The type of connectivity used to access the Amazon S3 on Outposts endpoint.</p>
                */
            AccessType?: EndpointAccessType | string;
            /**
                * <p>The ID of the customer-owned IPv4 address pool used for the endpoint.</p>
                */
            CustomerOwnedIpv4Pool?: string;
    }
    export namespace Endpoint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Endpoint) => any;
    }
    export interface ListEndpointsRequest {
            /**
                * <p>If a previous response from this operation included a <code>NextToken</code> value,
                *             provide that value here to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of endpoints that will be returned in the response.</p>
                */
            MaxResults?: number;
    }
    export namespace ListEndpointsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEndpointsRequest) => any;
    }
    export interface ListEndpointsResult {
            /**
                * <p>The list of endpoints associated with the specified Outpost.</p>
                */
            Endpoints?: Endpoint[];
            /**
                * <p>If the number of endpoints associated with the specified Outpost exceeds <code>MaxResults</code>,
                *             you can include this value in subsequent calls to this operation to retrieve more results.</p>
                */
            NextToken?: string;
    }
    export namespace ListEndpointsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEndpointsResult) => any;
    }
    export interface ListSharedEndpointsRequest {
            /**
                * <p>If a previous response from this operation included a <code>NextToken</code> value, you
                *             can provide that value here to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of endpoints that will be returned in the response.</p>
                */
            MaxResults?: number;
            /**
                * <p>The ID of the Amazon Web Services Outpost.</p>
                */
            OutpostId: string | undefined;
    }
    export namespace ListSharedEndpointsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSharedEndpointsRequest) => any;
    }
    export interface ListSharedEndpointsResult {
            /**
                * <p>The list of endpoints associated with the specified Outpost that have been shared by Amazon Web Services Resource Access Manager (RAM).</p>
                */
            Endpoints?: Endpoint[];
            /**
                * <p>If the number of endpoints associated with the specified Outpost exceeds <code>MaxResults</code>,
                *             you can include this value in subsequent calls to this operation to retrieve more results.</p>
                */
            NextToken?: string;
    }
    export namespace ListSharedEndpointsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSharedEndpointsResult) => any;
    }
}

declare module '@aws-sdk/client-s3outposts/node_modules/@aws-sdk/client-s3outposts/dist-types/models/S3OutpostsServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from S3Outposts service.
        */
    export class S3OutpostsServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

