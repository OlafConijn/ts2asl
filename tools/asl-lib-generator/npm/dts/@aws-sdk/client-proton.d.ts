// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-proton' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AcceptEnvironmentAccountConnectionCommandInput, AcceptEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/AcceptEnvironmentAccountConnectionCommand";
    import { CancelComponentDeploymentCommandInput, CancelComponentDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelComponentDeploymentCommand";
    import { CancelEnvironmentDeploymentCommandInput, CancelEnvironmentDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelEnvironmentDeploymentCommand";
    import { CancelServiceInstanceDeploymentCommandInput, CancelServiceInstanceDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServiceInstanceDeploymentCommand";
    import { CancelServicePipelineDeploymentCommandInput, CancelServicePipelineDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServicePipelineDeploymentCommand";
    import { CreateComponentCommandInput, CreateComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateComponentCommand";
    import { CreateEnvironmentAccountConnectionCommandInput, CreateEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentAccountConnectionCommand";
    import { CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentCommand";
    import { CreateEnvironmentTemplateCommandInput, CreateEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateCommand";
    import { CreateEnvironmentTemplateVersionCommandInput, CreateEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateVersionCommand";
    import { CreateRepositoryCommandInput, CreateRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateRepositoryCommand";
    import { CreateServiceCommandInput, CreateServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceCommand";
    import { CreateServiceTemplateCommandInput, CreateServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateCommand";
    import { CreateServiceTemplateVersionCommandInput, CreateServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateVersionCommand";
    import { CreateTemplateSyncConfigCommandInput, CreateTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateTemplateSyncConfigCommand";
    import { DeleteComponentCommandInput, DeleteComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteComponentCommand";
    import { DeleteEnvironmentAccountConnectionCommandInput, DeleteEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentAccountConnectionCommand";
    import { DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentCommand";
    import { DeleteEnvironmentTemplateCommandInput, DeleteEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateCommand";
    import { DeleteEnvironmentTemplateVersionCommandInput, DeleteEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateVersionCommand";
    import { DeleteRepositoryCommandInput, DeleteRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteRepositoryCommand";
    import { DeleteServiceCommandInput, DeleteServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceCommand";
    import { DeleteServiceTemplateCommandInput, DeleteServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateCommand";
    import { DeleteServiceTemplateVersionCommandInput, DeleteServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateVersionCommand";
    import { DeleteTemplateSyncConfigCommandInput, DeleteTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteTemplateSyncConfigCommand";
    import { GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetAccountSettingsCommand";
    import { GetComponentCommandInput, GetComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetComponentCommand";
    import { GetEnvironmentAccountConnectionCommandInput, GetEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentAccountConnectionCommand";
    import { GetEnvironmentCommandInput, GetEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentCommand";
    import { GetEnvironmentTemplateCommandInput, GetEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateCommand";
    import { GetEnvironmentTemplateVersionCommandInput, GetEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateVersionCommand";
    import { GetRepositoryCommandInput, GetRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositoryCommand";
    import { GetRepositorySyncStatusCommandInput, GetRepositorySyncStatusCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositorySyncStatusCommand";
    import { GetServiceCommandInput, GetServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceCommand";
    import { GetServiceInstanceCommandInput, GetServiceInstanceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceInstanceCommand";
    import { GetServiceTemplateCommandInput, GetServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateCommand";
    import { GetServiceTemplateVersionCommandInput, GetServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateVersionCommand";
    import { GetTemplateSyncConfigCommandInput, GetTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncConfigCommand";
    import { GetTemplateSyncStatusCommandInput, GetTemplateSyncStatusCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncStatusCommand";
    import { ListComponentOutputsCommandInput, ListComponentOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentOutputsCommand";
    import { ListComponentProvisionedResourcesCommandInput, ListComponentProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentProvisionedResourcesCommand";
    import { ListComponentsCommandInput, ListComponentsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentsCommand";
    import { ListEnvironmentAccountConnectionsCommandInput, ListEnvironmentAccountConnectionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentAccountConnectionsCommand";
    import { ListEnvironmentOutputsCommandInput, ListEnvironmentOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentOutputsCommand";
    import { ListEnvironmentProvisionedResourcesCommandInput, ListEnvironmentProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentProvisionedResourcesCommand";
    import { ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentsCommand";
    import { ListEnvironmentTemplatesCommandInput, ListEnvironmentTemplatesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplatesCommand";
    import { ListEnvironmentTemplateVersionsCommandInput, ListEnvironmentTemplateVersionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplateVersionsCommand";
    import { ListRepositoriesCommandInput, ListRepositoriesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositoriesCommand";
    import { ListRepositorySyncDefinitionsCommandInput, ListRepositorySyncDefinitionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositorySyncDefinitionsCommand";
    import { ListServiceInstanceOutputsCommandInput, ListServiceInstanceOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceOutputsCommand";
    import { ListServiceInstanceProvisionedResourcesCommandInput, ListServiceInstanceProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceProvisionedResourcesCommand";
    import { ListServiceInstancesCommandInput, ListServiceInstancesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstancesCommand";
    import { ListServicePipelineOutputsCommandInput, ListServicePipelineOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineOutputsCommand";
    import { ListServicePipelineProvisionedResourcesCommandInput, ListServicePipelineProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineProvisionedResourcesCommand";
    import { ListServicesCommandInput, ListServicesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicesCommand";
    import { ListServiceTemplatesCommandInput, ListServiceTemplatesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplatesCommand";
    import { ListServiceTemplateVersionsCommandInput, ListServiceTemplateVersionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplateVersionsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListTagsForResourceCommand";
    import { NotifyResourceDeploymentStatusChangeCommandInput, NotifyResourceDeploymentStatusChangeCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/NotifyResourceDeploymentStatusChangeCommand";
    import { RejectEnvironmentAccountConnectionCommandInput, RejectEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/RejectEnvironmentAccountConnectionCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateAccountSettingsCommand";
    import { UpdateComponentCommandInput, UpdateComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateComponentCommand";
    import { UpdateEnvironmentAccountConnectionCommandInput, UpdateEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentAccountConnectionCommand";
    import { UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentCommand";
    import { UpdateEnvironmentTemplateCommandInput, UpdateEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateCommand";
    import { UpdateEnvironmentTemplateVersionCommandInput, UpdateEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateVersionCommand";
    import { UpdateServiceCommandInput, UpdateServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceCommand";
    import { UpdateServiceInstanceCommandInput, UpdateServiceInstanceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceInstanceCommand";
    import { UpdateServicePipelineCommandInput, UpdateServicePipelineCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServicePipelineCommand";
    import { UpdateServiceTemplateCommandInput, UpdateServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateCommand";
    import { UpdateServiceTemplateVersionCommandInput, UpdateServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateVersionCommand";
    import { UpdateTemplateSyncConfigCommandInput, UpdateTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateTemplateSyncConfigCommand";
    import { ProtonClient } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    /**
        * <p>This is the Proton Service API Reference. It provides descriptions, syntax and usage examples for each of the <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Operations.html">actions</a> and <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Types.html">data types</a> for the Proton service.</p>
        *          <p>The documentation for each action shows the Query API request parameters and the XML response.</p>
        *          <p>Alternatively, you can use the Amazon Web Services CLI to access an API. For more information, see the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html">Amazon Web Services Command Line Interface User Guide</a>.</p>
        *          <p>The Proton service is a two-pronged automation framework. Administrators create service templates to provide standardized infrastructure
        *    and deployment tooling for serverless and container based applications. Developers, in turn, select from the available service templates to
        *    automate their application or service deployments.</p>
        *          <p>Because administrators define the infrastructure and tooling that Proton deploys and manages, they need permissions to use all of the
        *    listed API operations.</p>
        *          <p>When developers select a specific infrastructure and tooling set, Proton deploys their applications. To monitor their applications that are
        *    running on Proton, developers need permissions to the service <i>create</i>, <i>list</i>,
        *     <i>update</i> and <i>delete</i> API operations and the service instance <i>list</i> and
        *     <i>update</i> API operations.</p>
        *          <p>To learn more about Proton administration, see the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/Welcome.html">Proton
        *     Administrator Guide</a>.</p>
        *          <p>To learn more about deploying serverless and containerized applications on Proton, see the <a href="https://docs.aws.amazon.com/proton/latest/userguide/Welcome.html">Proton User Guide</a>.</p>
        *          <p>
        *             <b>Ensuring Idempotency</b>
        *          </p>
        *          <p>When you make a mutating API request, the request typically returns a result before the asynchronous workflows of the operation are complete.
        *    Operations might also time out or encounter other server issues before they're complete, even if the request already returned a result. This might
        *    make it difficult to determine whether the request succeeded. Moreover, you might need to retry the request multiple times to ensure that the
        *    operation completes successfully. However, if the original request and the subsequent retries are successful, the operation occurs multiple times.
        *    This means that you might create more resources than you intended.</p>
        *          <p>
        *             <i>Idempotency</i> ensures that an API request action completes no more than one time. With an idempotent request, if the
        *    original request action completes successfully, any subsequent retries complete successfully without performing any further actions. However, the
        *    result might contain updated information, such as the current creation status.</p>
        *          <p>The following lists of APIs are grouped according to methods that ensure idempotency.</p>
        *          <p>
        *             <b>Idempotent create APIs with a client token</b>
        *          </p>
        *          <p>The API actions in this list support idempotency with the use of a <i>client token</i>. The corresponding Amazon Web Services CLI commands
        *    also support idempotency using a client token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. To make an
        *    idempotent API request using one of these actions, specify a client token in the request. We recommend that you <i>don't</i> reuse
        *    the same client token for other API requests. If you don’t provide a client token for these APIs, a default client token is automatically provided
        *    by SDKs.</p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request using the same client token and the same parameters, the retry succeeds without performing any further actions other
        *    than returning the original resource detail data in the response.</p>
        *          <p>If you retry the request using the same client token, but one or more of the parameters are different, the retry throws a
        *     <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p>
        *          <p>Client tokens expire eight hours after a request is made. If you retry the request with the expired token, a new resource is created.</p>
        *          <p>If the original resource is deleted and you retry the request, a new resource is created.</p>
        *          <p>Idempotent create APIs with a client token:</p>
        *          <ul>
        *             <li>
        *                <p>CreateEnvironmentTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>CreateServiceTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>CreateEnvironmentAccountConnection</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Idempotent create APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request with an API from this group, and the original resource <i>hasn't</i> been modified, the retry succeeds
        *    without performing any further actions other than returning the original resource detail data in the response.</p>
        *          <p>If the original resource has been modified, the retry throws a <code>ConflictException</code>.</p>
        *          <p>If you retry with different input parameters, the retry throws a <code>ValidationException</code> with an
        *     <code>IdempotentParameterMismatch</code> error.</p>
        *          <p>Idempotent create APIs:</p>
        *          <ul>
        *             <li>
        *                <p>CreateEnvironmentTemplate</p>
        *             </li>
        *             <li>
        *                <p>CreateServiceTemplate</p>
        *             </li>
        *             <li>
        *                <p>CreateEnvironment</p>
        *             </li>
        *             <li>
        *                <p>CreateService</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Idempotent delete APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>When you retry the request with an API from this group and the resource was deleted, its metadata is returned in the response.</p>
        *          <p>If you retry and the resource doesn't exist, the response is empty.</p>
        *          <p>In both cases, the retry succeeds.</p>
        *          <p>Idempotent delete APIs:</p>
        *          <ul>
        *             <li>
        *                <p>DeleteEnvironmentTemplate</p>
        *             </li>
        *             <li>
        *                <p>DeleteEnvironmentTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>DeleteServiceTemplate</p>
        *             </li>
        *             <li>
        *                <p>DeleteServiceTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>DeleteEnvironmentAccountConnection</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Asynchronous idempotent delete APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request with an API from this group, if the original request delete operation status is <code>DELETE_IN_PROGRESS</code>, the
        *    retry returns the resource detail data in the response without performing any further actions.</p>
        *          <p>If the original request delete operation is complete, a retry returns an empty response.</p>
        *          <p>Asynchronous idempotent delete APIs:</p>
        *          <ul>
        *             <li>
        *                <p>DeleteEnvironment</p>
        *             </li>
        *             <li>
        *                <p>DeleteService</p>
        *             </li>
        *          </ul>
        */
    export class Proton extends ProtonClient {
            /**
                * <p>In a management account, an environment account connection request is accepted. When the environment account connection request is accepted, Proton
                *       can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            acceptEnvironmentAccountConnection(args: AcceptEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<AcceptEnvironmentAccountConnectionCommandOutput>;
            acceptEnvironmentAccountConnection(args: AcceptEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: AcceptEnvironmentAccountConnectionCommandOutput) => void): void;
            acceptEnvironmentAccountConnection(args: AcceptEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>Attempts to cancel a component deployment (for a component that is in the <code>IN_PROGRESS</code> deployment status).</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            cancelComponentDeployment(args: CancelComponentDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<CancelComponentDeploymentCommandOutput>;
            cancelComponentDeployment(args: CancelComponentDeploymentCommandInput, cb: (err: any, data?: CancelComponentDeploymentCommandOutput) => void): void;
            cancelComponentDeployment(args: CancelComponentDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelComponentDeploymentCommandOutput) => void): void;
            /**
                * <p>Attempts to cancel an environment deployment on an <a>UpdateEnvironment</a> action, if the deployment is <code>IN_PROGRESS</code>. For more
                *       information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-update.html">Update an environment</a> in the <i>Proton
                *         Administrator guide</i>.</p>
                *          <p>The following list includes potential cancellation scenarios.</p>
                *          <ul>
                *             <li>
                *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the current <a>UpdateEnvironment</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
                *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
                *             </li>
                *          </ul>
                */
            cancelEnvironmentDeployment(args: CancelEnvironmentDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<CancelEnvironmentDeploymentCommandOutput>;
            cancelEnvironmentDeployment(args: CancelEnvironmentDeploymentCommandInput, cb: (err: any, data?: CancelEnvironmentDeploymentCommandOutput) => void): void;
            cancelEnvironmentDeployment(args: CancelEnvironmentDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelEnvironmentDeploymentCommandOutput) => void): void;
            /**
                * <p>Attempts to cancel a service instance deployment on an <a>UpdateServiceInstance</a> action, if the deployment is <code>IN_PROGRESS</code>.
                *       For more information, see <i>Update a service instance</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-instance-update.html">Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-instance-update.html">Proton User guide</a>.</p>
                *          <p>The following list includes potential cancellation scenarios.</p>
                *          <ul>
                *             <li>
                *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the current <a>UpdateServiceInstance</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
                *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
                *             </li>
                *          </ul>
                */
            cancelServiceInstanceDeployment(args: CancelServiceInstanceDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<CancelServiceInstanceDeploymentCommandOutput>;
            cancelServiceInstanceDeployment(args: CancelServiceInstanceDeploymentCommandInput, cb: (err: any, data?: CancelServiceInstanceDeploymentCommandOutput) => void): void;
            cancelServiceInstanceDeployment(args: CancelServiceInstanceDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelServiceInstanceDeploymentCommandOutput) => void): void;
            /**
                * <p>Attempts to cancel a service pipeline deployment on an <a>UpdateServicePipeline</a> action, if the deployment is <code>IN_PROGRESS</code>.
                *       For more information, see <i>Update a service pipeline</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-pipeline-update.html">Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-pipeline-update.html">Proton User guide</a>.</p>
                *          <p>The following list includes potential cancellation scenarios.</p>
                *          <ul>
                *             <li>
                *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
                *             </li>
                *             <li>
                *                <p>If the current <a>UpdateServicePipeline</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
                *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
                *             </li>
                *          </ul>
                */
            cancelServicePipelineDeployment(args: CancelServicePipelineDeploymentCommandInput, options?: __HttpHandlerOptions): Promise<CancelServicePipelineDeploymentCommandOutput>;
            cancelServicePipelineDeployment(args: CancelServicePipelineDeploymentCommandInput, cb: (err: any, data?: CancelServicePipelineDeploymentCommandOutput) => void): void;
            cancelServicePipelineDeployment(args: CancelServicePipelineDeploymentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelServicePipelineDeploymentCommandOutput) => void): void;
            /**
                * <p>Create an Proton component. A component is an infrastructure extension for a service instance.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            createComponent(args: CreateComponentCommandInput, options?: __HttpHandlerOptions): Promise<CreateComponentCommandOutput>;
            createComponent(args: CreateComponentCommandInput, cb: (err: any, data?: CreateComponentCommandOutput) => void): void;
            createComponent(args: CreateComponentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateComponentCommandOutput) => void): void;
            /**
                * <p>Deploy a new environment. An Proton environment is created from an environment template that defines infrastructure and resources that can be
                *       shared across services.</p>
                *          <p class="title">
                *             <b>You can provision environments using the following methods:</b>
                *          </p>
                *          <ul>
                *             <li>
                *                <p>Amazon Web Services-managed provisioning: Proton makes direct calls to provision your resources.</p>
                *             </li>
                *             <li>
                *                <p>Self-managed provisioning: Proton makes pull requests on your repository to provide compiled infrastructure as code (IaC) files that your IaC
                *           engine uses to provision resources.</p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton Administrator
                *         Guide</i>.</p>
                */
            createEnvironment(args: CreateEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<CreateEnvironmentCommandOutput>;
            createEnvironment(args: CreateEnvironmentCommandInput, cb: (err: any, data?: CreateEnvironmentCommandOutput) => void): void;
            createEnvironment(args: CreateEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEnvironmentCommandOutput) => void): void;
            /**
                * <p>Create an environment account connection in an environment account so that environment infrastructure resources can be provisioned in the environment
                *       account from a management account.</p>
                *          <p>An environment account connection is a secure bi-directional connection between a <i>management account</i> and an <i>environment
                *         account</i> that maintains authorization and permissions. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton Administrator
                *         guide</i>.</p>
                */
            createEnvironmentAccountConnection(args: CreateEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<CreateEnvironmentAccountConnectionCommandOutput>;
            createEnvironmentAccountConnection(args: CreateEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: CreateEnvironmentAccountConnectionCommandOutput) => void): void;
            createEnvironmentAccountConnection(args: CreateEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>Create an environment template for Proton. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-templates.html">Environment Templates</a> in the <i>Proton Administrator Guide</i>.</p>
                *          <p>You can create an environment template in one of the two following ways:</p>
                *          <ul>
                *             <li>
                *                <p>Register and publish a <i>standard</i> environment template that instructs Proton to deploy and manage environment
                *           infrastructure.</p>
                *             </li>
                *             <li>
                *                <p>Register and publish a <i>customer managed</i> environment template that connects Proton to your existing provisioned
                *           infrastructure that you manage. Proton <i>doesn't</i> manage your existing provisioned infrastructure. To create an environment
                *           template for customer provisioned and managed infrastructure, include the <code>provisioning</code> parameter and set the value to
                *             <code>CUSTOMER_MANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/template-create.html">Register
                *             and publish an environment template</a> in the <i>Proton Administrator Guide</i>.</p>
                *             </li>
                *          </ul>
                */
            createEnvironmentTemplate(args: CreateEnvironmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateEnvironmentTemplateCommandOutput>;
            createEnvironmentTemplate(args: CreateEnvironmentTemplateCommandInput, cb: (err: any, data?: CreateEnvironmentTemplateCommandOutput) => void): void;
            createEnvironmentTemplate(args: CreateEnvironmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEnvironmentTemplateCommandOutput) => void): void;
            /**
                * <p>Create a new major or minor version of an environment template. A major version of an environment template is a version that
                *         <i>isn't</i> backwards compatible. A minor version of an environment template is a version that's backwards compatible within its major
                *       version.</p>
                */
            createEnvironmentTemplateVersion(args: CreateEnvironmentTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreateEnvironmentTemplateVersionCommandOutput>;
            createEnvironmentTemplateVersion(args: CreateEnvironmentTemplateVersionCommandInput, cb: (err: any, data?: CreateEnvironmentTemplateVersionCommandOutput) => void): void;
            createEnvironmentTemplateVersion(args: CreateEnvironmentTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEnvironmentTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Create and register a link to a repository that can be used with self-managed provisioning (infrastructure or pipelines) or for template sync
                *       configurations. When you create a repository link, Proton creates a <a href="https://docs.aws.amazon.com/proton/latest/adminguide/using-service-linked-roles.html">service-linked role</a> for you.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a>, <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-bundles.html">Template bundles</a>, and
                *         <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton
                *         Administrator Guide</i>.</p>
                */
            createRepository(args: CreateRepositoryCommandInput, options?: __HttpHandlerOptions): Promise<CreateRepositoryCommandOutput>;
            createRepository(args: CreateRepositoryCommandInput, cb: (err: any, data?: CreateRepositoryCommandOutput) => void): void;
            createRepository(args: CreateRepositoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRepositoryCommandOutput) => void): void;
            /**
                * <p>Create an Proton service. An Proton service is an instantiation of a service template and often includes several service instances and pipeline.
                *       For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-services.html">Services</a> in the <i>Proton
                *         Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-service.html">Services</a> in the <i>Proton
                *         User Guide</i>.</p>
                */
            createService(args: CreateServiceCommandInput, options?: __HttpHandlerOptions): Promise<CreateServiceCommandOutput>;
            createService(args: CreateServiceCommandInput, cb: (err: any, data?: CreateServiceCommandOutput) => void): void;
            createService(args: CreateServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateServiceCommandOutput) => void): void;
            /**
                * <p>Create a service template. The administrator creates a service template to define standardized infrastructure and an optional CI/CD service pipeline.
                *       Developers, in turn, select the service template from Proton. If the selected service template includes a service pipeline definition, they provide a
                *       link to their source code repository. Proton then deploys and manages the infrastructure defined by the selected service template. For more
                *       information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/managing-svc-templates.html">Service Templates</a> in the
                *         <i>Proton Administrator Guide</i>.</p>
                */
            createServiceTemplate(args: CreateServiceTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateServiceTemplateCommandOutput>;
            createServiceTemplate(args: CreateServiceTemplateCommandInput, cb: (err: any, data?: CreateServiceTemplateCommandOutput) => void): void;
            createServiceTemplate(args: CreateServiceTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateServiceTemplateCommandOutput) => void): void;
            /**
                * <p>Create a new major or minor version of a service template. A major version of a service template is a version that <i>isn't</i> backward
                *       compatible. A minor version of a service template is a version that's backward compatible within its major version.</p>
                */
            createServiceTemplateVersion(args: CreateServiceTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreateServiceTemplateVersionCommandOutput>;
            createServiceTemplateVersion(args: CreateServiceTemplateVersionCommandInput, cb: (err: any, data?: CreateServiceTemplateVersionCommandOutput) => void): void;
            createServiceTemplateVersion(args: CreateServiceTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateServiceTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Set up a template to create new template versions automatically. When a commit is pushed to your registered <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Repository.html">repository</a>, Proton checks for changes to your repository template bundles. If it detects
                *       a template bundle change, a new major or minor version of its template is created, if the version doesn’t already exist. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton
                *         Administrator Guide</i>.</p>
                */
            createTemplateSyncConfig(args: CreateTemplateSyncConfigCommandInput, options?: __HttpHandlerOptions): Promise<CreateTemplateSyncConfigCommandOutput>;
            createTemplateSyncConfig(args: CreateTemplateSyncConfigCommandInput, cb: (err: any, data?: CreateTemplateSyncConfigCommandOutput) => void): void;
            createTemplateSyncConfig(args: CreateTemplateSyncConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTemplateSyncConfigCommandOutput) => void): void;
            /**
                * <p>Delete an Proton component resource.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            deleteComponent(args: DeleteComponentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteComponentCommandOutput>;
            deleteComponent(args: DeleteComponentCommandInput, cb: (err: any, data?: DeleteComponentCommandOutput) => void): void;
            deleteComponent(args: DeleteComponentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteComponentCommandOutput) => void): void;
            /**
                * <p>Delete an environment.</p>
                */
            deleteEnvironment(args: DeleteEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEnvironmentCommandOutput>;
            deleteEnvironment(args: DeleteEnvironmentCommandInput, cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void): void;
            deleteEnvironment(args: DeleteEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void): void;
            /**
                * <p>In an environment account, delete an environment account connection.</p>
                *          <p>After you delete an environment account connection that’s in use by an Proton environment, Proton <i>can’t</i> manage the
                *       environment infrastructure resources until a new environment account connection is accepted for the environment account and associated environment. You're
                *       responsible for cleaning up provisioned resources that remain without an environment connection.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            deleteEnvironmentAccountConnection(args: DeleteEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEnvironmentAccountConnectionCommandOutput>;
            deleteEnvironmentAccountConnection(args: DeleteEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: DeleteEnvironmentAccountConnectionCommandOutput) => void): void;
            deleteEnvironmentAccountConnection(args: DeleteEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>If no other major or minor versions of an environment template exist, delete the environment template.</p>
                */
            deleteEnvironmentTemplate(args: DeleteEnvironmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEnvironmentTemplateCommandOutput>;
            deleteEnvironmentTemplate(args: DeleteEnvironmentTemplateCommandInput, cb: (err: any, data?: DeleteEnvironmentTemplateCommandOutput) => void): void;
            deleteEnvironmentTemplate(args: DeleteEnvironmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEnvironmentTemplateCommandOutput) => void): void;
            /**
                * <p>If no other minor versions of an environment template exist, delete a major version of the environment template if it's not the
                *         <code>Recommended</code> version. Delete the <code>Recommended</code> version of the environment template if no other major versions or minor versions
                *       of the environment template exist. A major version of an environment template is a version that's not backward compatible.</p>
                *          <p>Delete a minor version of an environment template if it <i>isn't</i> the <code>Recommended</code> version. Delete a
                *         <code>Recommended</code> minor version of the environment template if no other minor versions of the environment template exist. A minor version of an
                *       environment template is a version that's backward compatible.</p>
                */
            deleteEnvironmentTemplateVersion(args: DeleteEnvironmentTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEnvironmentTemplateVersionCommandOutput>;
            deleteEnvironmentTemplateVersion(args: DeleteEnvironmentTemplateVersionCommandInput, cb: (err: any, data?: DeleteEnvironmentTemplateVersionCommandOutput) => void): void;
            deleteEnvironmentTemplateVersion(args: DeleteEnvironmentTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEnvironmentTemplateVersionCommandOutput) => void): void;
            /**
                * <p>De-register and unlink your repository.</p>
                */
            deleteRepository(args: DeleteRepositoryCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRepositoryCommandOutput>;
            deleteRepository(args: DeleteRepositoryCommandInput, cb: (err: any, data?: DeleteRepositoryCommandOutput) => void): void;
            deleteRepository(args: DeleteRepositoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRepositoryCommandOutput) => void): void;
            /**
                * <p>Delete a service, with its instances and pipeline.</p>
                *          <note>
                *             <p>You can't delete a service if it has any service instances that have components attached to them.</p>
                *             <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                *          </note>
                */
            deleteService(args: DeleteServiceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteServiceCommandOutput>;
            deleteService(args: DeleteServiceCommandInput, cb: (err: any, data?: DeleteServiceCommandOutput) => void): void;
            deleteService(args: DeleteServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteServiceCommandOutput) => void): void;
            /**
                * <p>If no other major or minor versions of the service template exist, delete the service template.</p>
                */
            deleteServiceTemplate(args: DeleteServiceTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteServiceTemplateCommandOutput>;
            deleteServiceTemplate(args: DeleteServiceTemplateCommandInput, cb: (err: any, data?: DeleteServiceTemplateCommandOutput) => void): void;
            deleteServiceTemplate(args: DeleteServiceTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteServiceTemplateCommandOutput) => void): void;
            /**
                * <p>If no other minor versions of a service template exist, delete a major version of the service template if it's not the <code>Recommended</code>
                *       version. Delete the <code>Recommended</code> version of the service template if no other major versions or minor versions of the service template exist. A
                *       major version of a service template is a version that <i>isn't</i> backwards compatible.</p>
                *          <p>Delete a minor version of a service template if it's not the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the
                *       service template if no other minor versions of the service template exist. A minor version of a service template is a version that's backwards
                *       compatible.</p>
                */
            deleteServiceTemplateVersion(args: DeleteServiceTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteServiceTemplateVersionCommandOutput>;
            deleteServiceTemplateVersion(args: DeleteServiceTemplateVersionCommandInput, cb: (err: any, data?: DeleteServiceTemplateVersionCommandOutput) => void): void;
            deleteServiceTemplateVersion(args: DeleteServiceTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteServiceTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Delete a template sync configuration.</p>
                */
            deleteTemplateSyncConfig(args: DeleteTemplateSyncConfigCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTemplateSyncConfigCommandOutput>;
            deleteTemplateSyncConfig(args: DeleteTemplateSyncConfigCommandInput, cb: (err: any, data?: DeleteTemplateSyncConfigCommandOutput) => void): void;
            deleteTemplateSyncConfig(args: DeleteTemplateSyncConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTemplateSyncConfigCommandOutput) => void): void;
            /**
                * <p>Get detail data for the Proton pipeline service role.</p>
                */
            getAccountSettings(args: GetAccountSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetAccountSettingsCommandOutput>;
            getAccountSettings(args: GetAccountSettingsCommandInput, cb: (err: any, data?: GetAccountSettingsCommandOutput) => void): void;
            getAccountSettings(args: GetAccountSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccountSettingsCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a component.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            getComponent(args: GetComponentCommandInput, options?: __HttpHandlerOptions): Promise<GetComponentCommandOutput>;
            getComponent(args: GetComponentCommandInput, cb: (err: any, data?: GetComponentCommandOutput) => void): void;
            getComponent(args: GetComponentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetComponentCommandOutput) => void): void;
            /**
                * <p>Get detailed data for an environment.</p>
                */
            getEnvironment(args: GetEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<GetEnvironmentCommandOutput>;
            getEnvironment(args: GetEnvironmentCommandInput, cb: (err: any, data?: GetEnvironmentCommandOutput) => void): void;
            getEnvironment(args: GetEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEnvironmentCommandOutput) => void): void;
            /**
                * <p>In an environment account, get the detailed data for an environment account connection.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            getEnvironmentAccountConnection(args: GetEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<GetEnvironmentAccountConnectionCommandOutput>;
            getEnvironmentAccountConnection(args: GetEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: GetEnvironmentAccountConnectionCommandOutput) => void): void;
            getEnvironmentAccountConnection(args: GetEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>Get detailed data for an environment template.</p>
                */
            getEnvironmentTemplate(args: GetEnvironmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetEnvironmentTemplateCommandOutput>;
            getEnvironmentTemplate(args: GetEnvironmentTemplateCommandInput, cb: (err: any, data?: GetEnvironmentTemplateCommandOutput) => void): void;
            getEnvironmentTemplate(args: GetEnvironmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEnvironmentTemplateCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a major or minor version of an environment template.</p>
                */
            getEnvironmentTemplateVersion(args: GetEnvironmentTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<GetEnvironmentTemplateVersionCommandOutput>;
            getEnvironmentTemplateVersion(args: GetEnvironmentTemplateVersionCommandInput, cb: (err: any, data?: GetEnvironmentTemplateVersionCommandOutput) => void): void;
            getEnvironmentTemplateVersion(args: GetEnvironmentTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEnvironmentTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Get detail data for a repository.</p>
                */
            getRepository(args: GetRepositoryCommandInput, options?: __HttpHandlerOptions): Promise<GetRepositoryCommandOutput>;
            getRepository(args: GetRepositoryCommandInput, cb: (err: any, data?: GetRepositoryCommandOutput) => void): void;
            getRepository(args: GetRepositoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRepositoryCommandOutput) => void): void;
            /**
                * <p>Get the sync status of a repository used for Proton template sync. For more information about template sync, see .</p>
                *          <note>
                *             <p>A repository sync status isn't tied to the Proton Repository resource (or any other Proton resource). Therefore, tags on an Proton Repository resource
                *         have no effect on this action. Specifically, you can't use these tags to control access to this action using Attribute-based access control
                *         (ABAC).</p>
                *             <p>For more information about ABAC, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/security_iam_service-with-iam.html#security_iam_service-with-iam-tags">ABAC</a> in the <i>Proton
                *           Administrator Guide</i>.</p>
                *          </note>
                */
            getRepositorySyncStatus(args: GetRepositorySyncStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetRepositorySyncStatusCommandOutput>;
            getRepositorySyncStatus(args: GetRepositorySyncStatusCommandInput, cb: (err: any, data?: GetRepositorySyncStatusCommandOutput) => void): void;
            getRepositorySyncStatus(args: GetRepositorySyncStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRepositorySyncStatusCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a service.</p>
                */
            getService(args: GetServiceCommandInput, options?: __HttpHandlerOptions): Promise<GetServiceCommandOutput>;
            getService(args: GetServiceCommandInput, cb: (err: any, data?: GetServiceCommandOutput) => void): void;
            getService(args: GetServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetServiceCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a service instance. A service instance is an instantiation of service template and it runs in a specific environment.</p>
                */
            getServiceInstance(args: GetServiceInstanceCommandInput, options?: __HttpHandlerOptions): Promise<GetServiceInstanceCommandOutput>;
            getServiceInstance(args: GetServiceInstanceCommandInput, cb: (err: any, data?: GetServiceInstanceCommandOutput) => void): void;
            getServiceInstance(args: GetServiceInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetServiceInstanceCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a service template.</p>
                */
            getServiceTemplate(args: GetServiceTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetServiceTemplateCommandOutput>;
            getServiceTemplate(args: GetServiceTemplateCommandInput, cb: (err: any, data?: GetServiceTemplateCommandOutput) => void): void;
            getServiceTemplate(args: GetServiceTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetServiceTemplateCommandOutput) => void): void;
            /**
                * <p>Get detailed data for a major or minor version of a service template.</p>
                */
            getServiceTemplateVersion(args: GetServiceTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<GetServiceTemplateVersionCommandOutput>;
            getServiceTemplateVersion(args: GetServiceTemplateVersionCommandInput, cb: (err: any, data?: GetServiceTemplateVersionCommandOutput) => void): void;
            getServiceTemplateVersion(args: GetServiceTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetServiceTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Get detail data for a template sync configuration.</p>
                */
            getTemplateSyncConfig(args: GetTemplateSyncConfigCommandInput, options?: __HttpHandlerOptions): Promise<GetTemplateSyncConfigCommandOutput>;
            getTemplateSyncConfig(args: GetTemplateSyncConfigCommandInput, cb: (err: any, data?: GetTemplateSyncConfigCommandOutput) => void): void;
            getTemplateSyncConfig(args: GetTemplateSyncConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTemplateSyncConfigCommandOutput) => void): void;
            /**
                * <p>Get the status of a template sync.</p>
                */
            getTemplateSyncStatus(args: GetTemplateSyncStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetTemplateSyncStatusCommandOutput>;
            getTemplateSyncStatus(args: GetTemplateSyncStatusCommandInput, cb: (err: any, data?: GetTemplateSyncStatusCommandOutput) => void): void;
            getTemplateSyncStatus(args: GetTemplateSyncStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTemplateSyncStatusCommandOutput) => void): void;
            /**
                * <p>Get a list of component Infrastructure as Code (IaC) outputs.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            listComponentOutputs(args: ListComponentOutputsCommandInput, options?: __HttpHandlerOptions): Promise<ListComponentOutputsCommandOutput>;
            listComponentOutputs(args: ListComponentOutputsCommandInput, cb: (err: any, data?: ListComponentOutputsCommandOutput) => void): void;
            listComponentOutputs(args: ListComponentOutputsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListComponentOutputsCommandOutput) => void): void;
            /**
                * <p>List provisioned resources for a component with details.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            listComponentProvisionedResources(args: ListComponentProvisionedResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListComponentProvisionedResourcesCommandOutput>;
            listComponentProvisionedResources(args: ListComponentProvisionedResourcesCommandInput, cb: (err: any, data?: ListComponentProvisionedResourcesCommandOutput) => void): void;
            listComponentProvisionedResources(args: ListComponentProvisionedResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListComponentProvisionedResourcesCommandOutput) => void): void;
            /**
                * <p>List components with summary data. You can filter the result list by environment, service, or a single service instance.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            listComponents(args: ListComponentsCommandInput, options?: __HttpHandlerOptions): Promise<ListComponentsCommandOutput>;
            listComponents(args: ListComponentsCommandInput, cb: (err: any, data?: ListComponentsCommandOutput) => void): void;
            listComponents(args: ListComponentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListComponentsCommandOutput) => void): void;
            /**
                * <p>View a list of environment account connections.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            listEnvironmentAccountConnections(args: ListEnvironmentAccountConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentAccountConnectionsCommandOutput>;
            listEnvironmentAccountConnections(args: ListEnvironmentAccountConnectionsCommandInput, cb: (err: any, data?: ListEnvironmentAccountConnectionsCommandOutput) => void): void;
            listEnvironmentAccountConnections(args: ListEnvironmentAccountConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentAccountConnectionsCommandOutput) => void): void;
            /**
                * <p>List the infrastructure as code outputs for your environment.</p>
                */
            listEnvironmentOutputs(args: ListEnvironmentOutputsCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentOutputsCommandOutput>;
            listEnvironmentOutputs(args: ListEnvironmentOutputsCommandInput, cb: (err: any, data?: ListEnvironmentOutputsCommandOutput) => void): void;
            listEnvironmentOutputs(args: ListEnvironmentOutputsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentOutputsCommandOutput) => void): void;
            /**
                * <p>List the provisioned resources for your environment.</p>
                */
            listEnvironmentProvisionedResources(args: ListEnvironmentProvisionedResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentProvisionedResourcesCommandOutput>;
            listEnvironmentProvisionedResources(args: ListEnvironmentProvisionedResourcesCommandInput, cb: (err: any, data?: ListEnvironmentProvisionedResourcesCommandOutput) => void): void;
            listEnvironmentProvisionedResources(args: ListEnvironmentProvisionedResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentProvisionedResourcesCommandOutput) => void): void;
            /**
                * <p>List environments with detail data summaries.</p>
                */
            listEnvironments(args: ListEnvironmentsCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentsCommandOutput>;
            listEnvironments(args: ListEnvironmentsCommandInput, cb: (err: any, data?: ListEnvironmentsCommandOutput) => void): void;
            listEnvironments(args: ListEnvironmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentsCommandOutput) => void): void;
            /**
                * <p>List environment templates.</p>
                */
            listEnvironmentTemplates(args: ListEnvironmentTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentTemplatesCommandOutput>;
            listEnvironmentTemplates(args: ListEnvironmentTemplatesCommandInput, cb: (err: any, data?: ListEnvironmentTemplatesCommandOutput) => void): void;
            listEnvironmentTemplates(args: ListEnvironmentTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentTemplatesCommandOutput) => void): void;
            /**
                * <p>List major or minor versions of an environment template with detail data.</p>
                */
            listEnvironmentTemplateVersions(args: ListEnvironmentTemplateVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentTemplateVersionsCommandOutput>;
            listEnvironmentTemplateVersions(args: ListEnvironmentTemplateVersionsCommandInput, cb: (err: any, data?: ListEnvironmentTemplateVersionsCommandOutput) => void): void;
            listEnvironmentTemplateVersions(args: ListEnvironmentTemplateVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentTemplateVersionsCommandOutput) => void): void;
            /**
                * <p>List repositories with detail data.</p>
                */
            listRepositories(args: ListRepositoriesCommandInput, options?: __HttpHandlerOptions): Promise<ListRepositoriesCommandOutput>;
            listRepositories(args: ListRepositoriesCommandInput, cb: (err: any, data?: ListRepositoriesCommandOutput) => void): void;
            listRepositories(args: ListRepositoriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRepositoriesCommandOutput) => void): void;
            /**
                * <p>List repository sync definitions with detail data.</p>
                */
            listRepositorySyncDefinitions(args: ListRepositorySyncDefinitionsCommandInput, options?: __HttpHandlerOptions): Promise<ListRepositorySyncDefinitionsCommandOutput>;
            listRepositorySyncDefinitions(args: ListRepositorySyncDefinitionsCommandInput, cb: (err: any, data?: ListRepositorySyncDefinitionsCommandOutput) => void): void;
            listRepositorySyncDefinitions(args: ListRepositorySyncDefinitionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRepositorySyncDefinitionsCommandOutput) => void): void;
            /**
                * <p>Get a list service of instance Infrastructure as Code (IaC) outputs.</p>
                */
            listServiceInstanceOutputs(args: ListServiceInstanceOutputsCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceInstanceOutputsCommandOutput>;
            listServiceInstanceOutputs(args: ListServiceInstanceOutputsCommandInput, cb: (err: any, data?: ListServiceInstanceOutputsCommandOutput) => void): void;
            listServiceInstanceOutputs(args: ListServiceInstanceOutputsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceInstanceOutputsCommandOutput) => void): void;
            /**
                * <p>List provisioned resources for a service instance with details.</p>
                */
            listServiceInstanceProvisionedResources(args: ListServiceInstanceProvisionedResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceInstanceProvisionedResourcesCommandOutput>;
            listServiceInstanceProvisionedResources(args: ListServiceInstanceProvisionedResourcesCommandInput, cb: (err: any, data?: ListServiceInstanceProvisionedResourcesCommandOutput) => void): void;
            listServiceInstanceProvisionedResources(args: ListServiceInstanceProvisionedResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceInstanceProvisionedResourcesCommandOutput) => void): void;
            /**
                * <p>List service instances with summary data.</p>
                */
            listServiceInstances(args: ListServiceInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceInstancesCommandOutput>;
            listServiceInstances(args: ListServiceInstancesCommandInput, cb: (err: any, data?: ListServiceInstancesCommandOutput) => void): void;
            listServiceInstances(args: ListServiceInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceInstancesCommandOutput) => void): void;
            /**
                * <p>Get a list of service pipeline Infrastructure as Code (IaC) outputs.</p>
                */
            listServicePipelineOutputs(args: ListServicePipelineOutputsCommandInput, options?: __HttpHandlerOptions): Promise<ListServicePipelineOutputsCommandOutput>;
            listServicePipelineOutputs(args: ListServicePipelineOutputsCommandInput, cb: (err: any, data?: ListServicePipelineOutputsCommandOutput) => void): void;
            listServicePipelineOutputs(args: ListServicePipelineOutputsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServicePipelineOutputsCommandOutput) => void): void;
            /**
                * <p>List provisioned resources for a service and pipeline with details.</p>
                */
            listServicePipelineProvisionedResources(args: ListServicePipelineProvisionedResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListServicePipelineProvisionedResourcesCommandOutput>;
            listServicePipelineProvisionedResources(args: ListServicePipelineProvisionedResourcesCommandInput, cb: (err: any, data?: ListServicePipelineProvisionedResourcesCommandOutput) => void): void;
            listServicePipelineProvisionedResources(args: ListServicePipelineProvisionedResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServicePipelineProvisionedResourcesCommandOutput) => void): void;
            /**
                * <p>List services with summaries of detail data.</p>
                */
            listServices(args: ListServicesCommandInput, options?: __HttpHandlerOptions): Promise<ListServicesCommandOutput>;
            listServices(args: ListServicesCommandInput, cb: (err: any, data?: ListServicesCommandOutput) => void): void;
            listServices(args: ListServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServicesCommandOutput) => void): void;
            /**
                * <p>List service templates with detail data.</p>
                */
            listServiceTemplates(args: ListServiceTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceTemplatesCommandOutput>;
            listServiceTemplates(args: ListServiceTemplatesCommandInput, cb: (err: any, data?: ListServiceTemplatesCommandOutput) => void): void;
            listServiceTemplates(args: ListServiceTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceTemplatesCommandOutput) => void): void;
            /**
                * <p>List major or minor versions of a service template with detail data.</p>
                */
            listServiceTemplateVersions(args: ListServiceTemplateVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListServiceTemplateVersionsCommandOutput>;
            listServiceTemplateVersions(args: ListServiceTemplateVersionsCommandInput, cb: (err: any, data?: ListServiceTemplateVersionsCommandOutput) => void): void;
            listServiceTemplateVersions(args: ListServiceTemplateVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListServiceTemplateVersionsCommandOutput) => void): void;
            /**
                * <p>List tags for a resource. For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Notify Proton of status changes to a provisioned resource when you use self-managed provisioning.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a> in the <i>Proton Administrator Guide</i>.</p>
                */
            notifyResourceDeploymentStatusChange(args: NotifyResourceDeploymentStatusChangeCommandInput, options?: __HttpHandlerOptions): Promise<NotifyResourceDeploymentStatusChangeCommandOutput>;
            notifyResourceDeploymentStatusChange(args: NotifyResourceDeploymentStatusChangeCommandInput, cb: (err: any, data?: NotifyResourceDeploymentStatusChangeCommandOutput) => void): void;
            notifyResourceDeploymentStatusChange(args: NotifyResourceDeploymentStatusChangeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: NotifyResourceDeploymentStatusChangeCommandOutput) => void): void;
            /**
                * <p>In a management account, reject an environment account connection from another environment account.</p>
                *          <p>After you reject an environment account connection request, you <i>can't</i> accept or use the rejected environment account
                *       connection.</p>
                *          <p>You <i>can’t</i> reject an environment account connection that's connected to an environment.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            rejectEnvironmentAccountConnection(args: RejectEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<RejectEnvironmentAccountConnectionCommandOutput>;
            rejectEnvironmentAccountConnection(args: RejectEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: RejectEnvironmentAccountConnectionCommandOutput) => void): void;
            rejectEnvironmentAccountConnection(args: RejectEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>Tag a resource. A tag is a key-value pair of metadata that you associate with an Proton resource.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Remove a customer tag from a resource. A tag is a key-value pair of metadata associated with an Proton resource.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Update the Proton service pipeline role or repository settings.</p>
                */
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAccountSettingsCommandOutput>;
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void): void;
            updateAccountSettings(args: UpdateAccountSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void): void;
            /**
                * <p>Update a component.</p>
                *          <p>There are a few modes for updating a component. The <code>deploymentType</code> field defines the mode.</p>
                *          <note>
                *             <p>You can't update a component while its deployment status, or the deployment status of a service instance attached to it, is
                *         <code>IN_PROGRESS</code>.</p>
                *          </note>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            updateComponent(args: UpdateComponentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateComponentCommandOutput>;
            updateComponent(args: UpdateComponentCommandInput, cb: (err: any, data?: UpdateComponentCommandOutput) => void): void;
            updateComponent(args: UpdateComponentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateComponentCommandOutput) => void): void;
            /**
                * <p>Update an environment.</p>
                *          <p>If the environment is associated with an environment account connection, <i>don't</i> update or include the
                *         <code>protonServiceRoleArn</code> and <code>provisioningRepository</code> parameter to update or connect to an environment account connection.</p>
                *          <p>You can only update to a new environment account connection if that connection was created in the same environment account that the current
                *       environment account connection was created in. The account connection must also be associated with the current environment.</p>
                *          <p>If the environment <i>isn't</i> associated with an environment account connection, <i>don't</i> update or include the
                *         <code>environmentAccountConnectionId</code> parameter. You <i>can't</i> update or connect the environment to an environment account
                *       connection if it <i>isn't</i> already associated with an environment connection.</p>
                *          <p>You can update either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value. You can’t update
                *       both.</p>
                *          <p>If the environment was configured for Amazon Web Services-managed provisioning, omit the <code>provisioningRepository</code> parameter.</p>
                *          <p>If the environment was configured for self-managed provisioning, specify the <code>provisioningRepository</code> parameter and omit the
                *         <code>protonServiceRoleArn</code> and <code>environmentAccountConnectionId</code> parameters.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton Administrator
                *         Guide</i>.</p>
                *          <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated.
                *               <i>Don’t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MINOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in
                *             use, by default. You can also specify a different minor version of the current major version in use.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MAJOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template,
                *             by default. You can also specify a different major version that's higher than the major version in use and a minor version.</p>
                *             </dd>
                *          </dl>
                */
            updateEnvironment(args: UpdateEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEnvironmentCommandOutput>;
            updateEnvironment(args: UpdateEnvironmentCommandInput, cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void): void;
            updateEnvironment(args: UpdateEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void): void;
            /**
                * <p>In an environment account, update an environment account connection to use a new IAM role.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                */
            updateEnvironmentAccountConnection(args: UpdateEnvironmentAccountConnectionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEnvironmentAccountConnectionCommandOutput>;
            updateEnvironmentAccountConnection(args: UpdateEnvironmentAccountConnectionCommandInput, cb: (err: any, data?: UpdateEnvironmentAccountConnectionCommandOutput) => void): void;
            updateEnvironmentAccountConnection(args: UpdateEnvironmentAccountConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEnvironmentAccountConnectionCommandOutput) => void): void;
            /**
                * <p>Update an environment template.</p>
                */
            updateEnvironmentTemplate(args: UpdateEnvironmentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEnvironmentTemplateCommandOutput>;
            updateEnvironmentTemplate(args: UpdateEnvironmentTemplateCommandInput, cb: (err: any, data?: UpdateEnvironmentTemplateCommandOutput) => void): void;
            updateEnvironmentTemplate(args: UpdateEnvironmentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEnvironmentTemplateCommandOutput) => void): void;
            /**
                * <p>Update a major or minor version of an environment template.</p>
                */
            updateEnvironmentTemplateVersion(args: UpdateEnvironmentTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEnvironmentTemplateVersionCommandOutput>;
            updateEnvironmentTemplateVersion(args: UpdateEnvironmentTemplateVersionCommandInput, cb: (err: any, data?: UpdateEnvironmentTemplateVersionCommandOutput) => void): void;
            updateEnvironmentTemplateVersion(args: UpdateEnvironmentTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEnvironmentTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Edit a service description or use a spec to add and delete service instances.</p>
                *          <note>
                *             <p>Existing service instances and the service pipeline <i>can't</i> be edited using this API. They can only be deleted.</p>
                *          </note>
                *          <p>Use the <code>description</code> parameter to modify the description.</p>
                *          <p>Edit the <code>spec</code> parameter to add or delete instances.</p>
                *          <note>
                *             <p>You can't delete a service instance (remove it from the spec) if it has an attached component.</p>
                *             <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                *          </note>
                */
            updateService(args: UpdateServiceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceCommandOutput>;
            updateService(args: UpdateServiceCommandInput, cb: (err: any, data?: UpdateServiceCommandOutput) => void): void;
            updateService(args: UpdateServiceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceCommandOutput) => void): void;
            /**
                * <p>Update a service instance.</p>
                *          <p>There are a few modes for updating a service instance. The <code>deploymentType</code> field defines the mode.</p>
                *          <note>
                *             <p>You can't update a service instance while its deployment status, or the deployment status of a component attached to it, is
                *         <code>IN_PROGRESS</code>.</p>
                *             <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                *          </note>
                */
            updateServiceInstance(args: UpdateServiceInstanceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceInstanceCommandOutput>;
            updateServiceInstance(args: UpdateServiceInstanceCommandInput, cb: (err: any, data?: UpdateServiceInstanceCommandOutput) => void): void;
            updateServiceInstance(args: UpdateServiceInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceInstanceCommandOutput) => void): void;
            /**
                * <p>Update the service pipeline.</p>
                *          <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated.
                *               <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MINOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version
                *             in use, by default. You can specify a different minor version of the current major version in use.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MAJOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current
                *             template by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>
                *             </dd>
                *          </dl>
                */
            updateServicePipeline(args: UpdateServicePipelineCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServicePipelineCommandOutput>;
            updateServicePipeline(args: UpdateServicePipelineCommandInput, cb: (err: any, data?: UpdateServicePipelineCommandOutput) => void): void;
            updateServicePipeline(args: UpdateServicePipelineCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServicePipelineCommandOutput) => void): void;
            /**
                * <p>Update a service template.</p>
                */
            updateServiceTemplate(args: UpdateServiceTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceTemplateCommandOutput>;
            updateServiceTemplate(args: UpdateServiceTemplateCommandInput, cb: (err: any, data?: UpdateServiceTemplateCommandOutput) => void): void;
            updateServiceTemplate(args: UpdateServiceTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceTemplateCommandOutput) => void): void;
            /**
                * <p>Update a major or minor version of a service template.</p>
                */
            updateServiceTemplateVersion(args: UpdateServiceTemplateVersionCommandInput, options?: __HttpHandlerOptions): Promise<UpdateServiceTemplateVersionCommandOutput>;
            updateServiceTemplateVersion(args: UpdateServiceTemplateVersionCommandInput, cb: (err: any, data?: UpdateServiceTemplateVersionCommandOutput) => void): void;
            updateServiceTemplateVersion(args: UpdateServiceTemplateVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateServiceTemplateVersionCommandOutput) => void): void;
            /**
                * <p>Update template sync configuration parameters, except for the <code>templateName</code> and <code>templateType</code>.</p>
                */
            updateTemplateSyncConfig(args: UpdateTemplateSyncConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTemplateSyncConfigCommandOutput>;
            updateTemplateSyncConfig(args: UpdateTemplateSyncConfigCommandInput, cb: (err: any, data?: UpdateTemplateSyncConfigCommandOutput) => void): void;
            updateTemplateSyncConfig(args: UpdateTemplateSyncConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTemplateSyncConfigCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/AcceptEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AcceptEnvironmentAccountConnectionInput, AcceptEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface AcceptEnvironmentAccountConnectionCommandInput extends AcceptEnvironmentAccountConnectionInput {
    }
    export interface AcceptEnvironmentAccountConnectionCommandOutput extends AcceptEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>In a management account, an environment account connection request is accepted. When the environment account connection request is accepted, Proton
        *       can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, AcceptEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, AcceptEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new AcceptEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AcceptEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link AcceptEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class AcceptEnvironmentAccountConnectionCommand extends $Command<AcceptEnvironmentAccountConnectionCommandInput, AcceptEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: AcceptEnvironmentAccountConnectionCommandInput;
            constructor(input: AcceptEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptEnvironmentAccountConnectionCommandInput, AcceptEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelComponentDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelComponentDeploymentInput, CancelComponentDeploymentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CancelComponentDeploymentCommandInput extends CancelComponentDeploymentInput {
    }
    export interface CancelComponentDeploymentCommandOutput extends CancelComponentDeploymentOutput, __MetadataBearer {
    }
    /**
        * <p>Attempts to cancel a component deployment (for a component that is in the <code>IN_PROGRESS</code> deployment status).</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CancelComponentDeploymentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CancelComponentDeploymentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CancelComponentDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelComponentDeploymentCommandInput} for command's `input` shape.
        * @see {@link CancelComponentDeploymentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CancelComponentDeploymentCommand extends $Command<CancelComponentDeploymentCommandInput, CancelComponentDeploymentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CancelComponentDeploymentCommandInput;
            constructor(input: CancelComponentDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelComponentDeploymentCommandInput, CancelComponentDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelEnvironmentDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelEnvironmentDeploymentInput, CancelEnvironmentDeploymentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CancelEnvironmentDeploymentCommandInput extends CancelEnvironmentDeploymentInput {
    }
    export interface CancelEnvironmentDeploymentCommandOutput extends CancelEnvironmentDeploymentOutput, __MetadataBearer {
    }
    /**
        * <p>Attempts to cancel an environment deployment on an <a>UpdateEnvironment</a> action, if the deployment is <code>IN_PROGRESS</code>. For more
        *       information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-update.html">Update an environment</a> in the <i>Proton
        *         Administrator guide</i>.</p>
        *          <p>The following list includes potential cancellation scenarios.</p>
        *          <ul>
        *             <li>
        *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the current <a>UpdateEnvironment</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
        *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CancelEnvironmentDeploymentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CancelEnvironmentDeploymentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CancelEnvironmentDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelEnvironmentDeploymentCommandInput} for command's `input` shape.
        * @see {@link CancelEnvironmentDeploymentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CancelEnvironmentDeploymentCommand extends $Command<CancelEnvironmentDeploymentCommandInput, CancelEnvironmentDeploymentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CancelEnvironmentDeploymentCommandInput;
            constructor(input: CancelEnvironmentDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelEnvironmentDeploymentCommandInput, CancelEnvironmentDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServiceInstanceDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelServiceInstanceDeploymentInput, CancelServiceInstanceDeploymentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CancelServiceInstanceDeploymentCommandInput extends CancelServiceInstanceDeploymentInput {
    }
    export interface CancelServiceInstanceDeploymentCommandOutput extends CancelServiceInstanceDeploymentOutput, __MetadataBearer {
    }
    /**
        * <p>Attempts to cancel a service instance deployment on an <a>UpdateServiceInstance</a> action, if the deployment is <code>IN_PROGRESS</code>.
        *       For more information, see <i>Update a service instance</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-instance-update.html">Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-instance-update.html">Proton User guide</a>.</p>
        *          <p>The following list includes potential cancellation scenarios.</p>
        *          <ul>
        *             <li>
        *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the current <a>UpdateServiceInstance</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
        *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CancelServiceInstanceDeploymentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CancelServiceInstanceDeploymentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CancelServiceInstanceDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelServiceInstanceDeploymentCommandInput} for command's `input` shape.
        * @see {@link CancelServiceInstanceDeploymentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CancelServiceInstanceDeploymentCommand extends $Command<CancelServiceInstanceDeploymentCommandInput, CancelServiceInstanceDeploymentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CancelServiceInstanceDeploymentCommandInput;
            constructor(input: CancelServiceInstanceDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelServiceInstanceDeploymentCommandInput, CancelServiceInstanceDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServicePipelineDeploymentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelServicePipelineDeploymentInput, CancelServicePipelineDeploymentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CancelServicePipelineDeploymentCommandInput extends CancelServicePipelineDeploymentInput {
    }
    export interface CancelServicePipelineDeploymentCommandOutput extends CancelServicePipelineDeploymentOutput, __MetadataBearer {
    }
    /**
        * <p>Attempts to cancel a service pipeline deployment on an <a>UpdateServicePipeline</a> action, if the deployment is <code>IN_PROGRESS</code>.
        *       For more information, see <i>Update a service pipeline</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-pipeline-update.html">Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-pipeline-update.html">Proton User guide</a>.</p>
        *          <p>The following list includes potential cancellation scenarios.</p>
        *          <ul>
        *             <li>
        *                <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p>
        *             </li>
        *             <li>
        *                <p>If the current <a>UpdateServicePipeline</a> action succeeds before the cancellation attempt starts, the resulting deployment state is
        *             <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CancelServicePipelineDeploymentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CancelServicePipelineDeploymentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CancelServicePipelineDeploymentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelServicePipelineDeploymentCommandInput} for command's `input` shape.
        * @see {@link CancelServicePipelineDeploymentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CancelServicePipelineDeploymentCommand extends $Command<CancelServicePipelineDeploymentCommandInput, CancelServicePipelineDeploymentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CancelServicePipelineDeploymentCommandInput;
            constructor(input: CancelServicePipelineDeploymentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelServicePipelineDeploymentCommandInput, CancelServicePipelineDeploymentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateComponentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateComponentInput, CreateComponentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateComponentCommandInput extends CreateComponentInput {
    }
    export interface CreateComponentCommandOutput extends CreateComponentOutput, __MetadataBearer {
    }
    /**
        * <p>Create an Proton component. A component is an infrastructure extension for a service instance.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateComponentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateComponentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateComponentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateComponentCommandInput} for command's `input` shape.
        * @see {@link CreateComponentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateComponentCommand extends $Command<CreateComponentCommandInput, CreateComponentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateComponentCommandInput;
            constructor(input: CreateComponentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateComponentCommandInput, CreateComponentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEnvironmentAccountConnectionInput, CreateEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateEnvironmentAccountConnectionCommandInput extends CreateEnvironmentAccountConnectionInput {
    }
    export interface CreateEnvironmentAccountConnectionCommandOutput extends CreateEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>Create an environment account connection in an environment account so that environment infrastructure resources can be provisioned in the environment
        *       account from a management account.</p>
        *          <p>An environment account connection is a secure bi-directional connection between a <i>management account</i> and an <i>environment
        *         account</i> that maintains authorization and permissions. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton Administrator
        *         guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link CreateEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateEnvironmentAccountConnectionCommand extends $Command<CreateEnvironmentAccountConnectionCommandInput, CreateEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateEnvironmentAccountConnectionCommandInput;
            constructor(input: CreateEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEnvironmentAccountConnectionCommandInput, CreateEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEnvironmentInput, CreateEnvironmentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateEnvironmentCommandInput extends CreateEnvironmentInput {
    }
    export interface CreateEnvironmentCommandOutput extends CreateEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Deploy a new environment. An Proton environment is created from an environment template that defines infrastructure and resources that can be
        *       shared across services.</p>
        *          <p class="title">
        *             <b>You can provision environments using the following methods:</b>
        *          </p>
        *          <ul>
        *             <li>
        *                <p>Amazon Web Services-managed provisioning: Proton makes direct calls to provision your resources.</p>
        *             </li>
        *             <li>
        *                <p>Self-managed provisioning: Proton makes pull requests on your repository to provide compiled infrastructure as code (IaC) files that your IaC
        *           engine uses to provision resources.</p>
        *             </li>
        *          </ul>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton Administrator
        *         Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateEnvironmentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateEnvironmentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEnvironmentCommandInput} for command's `input` shape.
        * @see {@link CreateEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateEnvironmentCommand extends $Command<CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateEnvironmentCommandInput;
            constructor(input: CreateEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEnvironmentTemplateInput, CreateEnvironmentTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateEnvironmentTemplateCommandInput extends CreateEnvironmentTemplateInput {
    }
    export interface CreateEnvironmentTemplateCommandOutput extends CreateEnvironmentTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Create an environment template for Proton. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-templates.html">Environment Templates</a> in the <i>Proton Administrator Guide</i>.</p>
        *          <p>You can create an environment template in one of the two following ways:</p>
        *          <ul>
        *             <li>
        *                <p>Register and publish a <i>standard</i> environment template that instructs Proton to deploy and manage environment
        *           infrastructure.</p>
        *             </li>
        *             <li>
        *                <p>Register and publish a <i>customer managed</i> environment template that connects Proton to your existing provisioned
        *           infrastructure that you manage. Proton <i>doesn't</i> manage your existing provisioned infrastructure. To create an environment
        *           template for customer provisioned and managed infrastructure, include the <code>provisioning</code> parameter and set the value to
        *             <code>CUSTOMER_MANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/template-create.html">Register
        *             and publish an environment template</a> in the <i>Proton Administrator Guide</i>.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateEnvironmentTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateEnvironmentTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateEnvironmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEnvironmentTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateEnvironmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateEnvironmentTemplateCommand extends $Command<CreateEnvironmentTemplateCommandInput, CreateEnvironmentTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateEnvironmentTemplateCommandInput;
            constructor(input: CreateEnvironmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEnvironmentTemplateCommandInput, CreateEnvironmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEnvironmentTemplateVersionInput, CreateEnvironmentTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateEnvironmentTemplateVersionCommandInput extends CreateEnvironmentTemplateVersionInput {
    }
    export interface CreateEnvironmentTemplateVersionCommandOutput extends CreateEnvironmentTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Create a new major or minor version of an environment template. A major version of an environment template is a version that
        *         <i>isn't</i> backwards compatible. A minor version of an environment template is a version that's backwards compatible within its major
        *       version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateEnvironmentTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateEnvironmentTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateEnvironmentTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEnvironmentTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link CreateEnvironmentTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateEnvironmentTemplateVersionCommand extends $Command<CreateEnvironmentTemplateVersionCommandInput, CreateEnvironmentTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateEnvironmentTemplateVersionCommandInput;
            constructor(input: CreateEnvironmentTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEnvironmentTemplateVersionCommandInput, CreateEnvironmentTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateRepositoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRepositoryInput, CreateRepositoryOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateRepositoryCommandInput extends CreateRepositoryInput {
    }
    export interface CreateRepositoryCommandOutput extends CreateRepositoryOutput, __MetadataBearer {
    }
    /**
        * <p>Create and register a link to a repository that can be used with self-managed provisioning (infrastructure or pipelines) or for template sync
        *       configurations. When you create a repository link, Proton creates a <a href="https://docs.aws.amazon.com/proton/latest/adminguide/using-service-linked-roles.html">service-linked role</a> for you.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a>, <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-bundles.html">Template bundles</a>, and
        *         <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton
        *         Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateRepositoryCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateRepositoryCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateRepositoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRepositoryCommandInput} for command's `input` shape.
        * @see {@link CreateRepositoryCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateRepositoryCommand extends $Command<CreateRepositoryCommandInput, CreateRepositoryCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateRepositoryCommandInput;
            constructor(input: CreateRepositoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRepositoryCommandInput, CreateRepositoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateServiceInput, CreateServiceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateServiceCommandInput extends CreateServiceInput {
    }
    export interface CreateServiceCommandOutput extends CreateServiceOutput, __MetadataBearer {
    }
    /**
        * <p>Create an Proton service. An Proton service is an instantiation of a service template and often includes several service instances and pipeline.
        *       For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-services.html">Services</a> in the <i>Proton
        *         Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-service.html">Services</a> in the <i>Proton
        *         User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateServiceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateServiceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateServiceCommandInput} for command's `input` shape.
        * @see {@link CreateServiceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateServiceCommand extends $Command<CreateServiceCommandInput, CreateServiceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateServiceCommandInput;
            constructor(input: CreateServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateServiceCommandInput, CreateServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateServiceTemplateInput, CreateServiceTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateServiceTemplateCommandInput extends CreateServiceTemplateInput {
    }
    export interface CreateServiceTemplateCommandOutput extends CreateServiceTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Create a service template. The administrator creates a service template to define standardized infrastructure and an optional CI/CD service pipeline.
        *       Developers, in turn, select the service template from Proton. If the selected service template includes a service pipeline definition, they provide a
        *       link to their source code repository. Proton then deploys and manages the infrastructure defined by the selected service template. For more
        *       information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/managing-svc-templates.html">Service Templates</a> in the
        *         <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateServiceTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateServiceTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateServiceTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateServiceTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateServiceTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateServiceTemplateCommand extends $Command<CreateServiceTemplateCommandInput, CreateServiceTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateServiceTemplateCommandInput;
            constructor(input: CreateServiceTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateServiceTemplateCommandInput, CreateServiceTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateServiceTemplateVersionInput, CreateServiceTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateServiceTemplateVersionCommandInput extends CreateServiceTemplateVersionInput {
    }
    export interface CreateServiceTemplateVersionCommandOutput extends CreateServiceTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Create a new major or minor version of a service template. A major version of a service template is a version that <i>isn't</i> backward
        *       compatible. A minor version of a service template is a version that's backward compatible within its major version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateServiceTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateServiceTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateServiceTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateServiceTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link CreateServiceTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateServiceTemplateVersionCommand extends $Command<CreateServiceTemplateVersionCommandInput, CreateServiceTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateServiceTemplateVersionCommandInput;
            constructor(input: CreateServiceTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateServiceTemplateVersionCommandInput, CreateServiceTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateTemplateSyncConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateTemplateSyncConfigInput, CreateTemplateSyncConfigOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface CreateTemplateSyncConfigCommandInput extends CreateTemplateSyncConfigInput {
    }
    export interface CreateTemplateSyncConfigCommandOutput extends CreateTemplateSyncConfigOutput, __MetadataBearer {
    }
    /**
        * <p>Set up a template to create new template versions automatically. When a commit is pushed to your registered <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Repository.html">repository</a>, Proton checks for changes to your repository template bundles. If it detects
        *       a template bundle change, a new major or minor version of its template is created, if the version doesn’t already exist. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton
        *         Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, CreateTemplateSyncConfigCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, CreateTemplateSyncConfigCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new CreateTemplateSyncConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateTemplateSyncConfigCommandInput} for command's `input` shape.
        * @see {@link CreateTemplateSyncConfigCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class CreateTemplateSyncConfigCommand extends $Command<CreateTemplateSyncConfigCommandInput, CreateTemplateSyncConfigCommandOutput, ProtonClientResolvedConfig> {
            readonly input: CreateTemplateSyncConfigCommandInput;
            constructor(input: CreateTemplateSyncConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTemplateSyncConfigCommandInput, CreateTemplateSyncConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteComponentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteComponentInput, DeleteComponentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteComponentCommandInput extends DeleteComponentInput {
    }
    export interface DeleteComponentCommandOutput extends DeleteComponentOutput, __MetadataBearer {
    }
    /**
        * <p>Delete an Proton component resource.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteComponentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteComponentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteComponentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteComponentCommandInput} for command's `input` shape.
        * @see {@link DeleteComponentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteComponentCommand extends $Command<DeleteComponentCommandInput, DeleteComponentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteComponentCommandInput;
            constructor(input: DeleteComponentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteComponentCommandInput, DeleteComponentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEnvironmentAccountConnectionInput, DeleteEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteEnvironmentAccountConnectionCommandInput extends DeleteEnvironmentAccountConnectionInput {
    }
    export interface DeleteEnvironmentAccountConnectionCommandOutput extends DeleteEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>In an environment account, delete an environment account connection.</p>
        *          <p>After you delete an environment account connection that’s in use by an Proton environment, Proton <i>can’t</i> manage the
        *       environment infrastructure resources until a new environment account connection is accepted for the environment account and associated environment. You're
        *       responsible for cleaning up provisioned resources that remain without an environment connection.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link DeleteEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteEnvironmentAccountConnectionCommand extends $Command<DeleteEnvironmentAccountConnectionCommandInput, DeleteEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteEnvironmentAccountConnectionCommandInput;
            constructor(input: DeleteEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEnvironmentAccountConnectionCommandInput, DeleteEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEnvironmentInput, DeleteEnvironmentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteEnvironmentCommandInput extends DeleteEnvironmentInput {
    }
    export interface DeleteEnvironmentCommandOutput extends DeleteEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Delete an environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteEnvironmentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteEnvironmentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEnvironmentCommandInput} for command's `input` shape.
        * @see {@link DeleteEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteEnvironmentCommand extends $Command<DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteEnvironmentCommandInput;
            constructor(input: DeleteEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEnvironmentTemplateInput, DeleteEnvironmentTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteEnvironmentTemplateCommandInput extends DeleteEnvironmentTemplateInput {
    }
    export interface DeleteEnvironmentTemplateCommandOutput extends DeleteEnvironmentTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>If no other major or minor versions of an environment template exist, delete the environment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteEnvironmentTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteEnvironmentTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteEnvironmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEnvironmentTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteEnvironmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteEnvironmentTemplateCommand extends $Command<DeleteEnvironmentTemplateCommandInput, DeleteEnvironmentTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteEnvironmentTemplateCommandInput;
            constructor(input: DeleteEnvironmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEnvironmentTemplateCommandInput, DeleteEnvironmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEnvironmentTemplateVersionInput, DeleteEnvironmentTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteEnvironmentTemplateVersionCommandInput extends DeleteEnvironmentTemplateVersionInput {
    }
    export interface DeleteEnvironmentTemplateVersionCommandOutput extends DeleteEnvironmentTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>If no other minor versions of an environment template exist, delete a major version of the environment template if it's not the
        *         <code>Recommended</code> version. Delete the <code>Recommended</code> version of the environment template if no other major versions or minor versions
        *       of the environment template exist. A major version of an environment template is a version that's not backward compatible.</p>
        *          <p>Delete a minor version of an environment template if it <i>isn't</i> the <code>Recommended</code> version. Delete a
        *         <code>Recommended</code> minor version of the environment template if no other minor versions of the environment template exist. A minor version of an
        *       environment template is a version that's backward compatible.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteEnvironmentTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteEnvironmentTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteEnvironmentTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEnvironmentTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link DeleteEnvironmentTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteEnvironmentTemplateVersionCommand extends $Command<DeleteEnvironmentTemplateVersionCommandInput, DeleteEnvironmentTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteEnvironmentTemplateVersionCommandInput;
            constructor(input: DeleteEnvironmentTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEnvironmentTemplateVersionCommandInput, DeleteEnvironmentTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteRepositoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRepositoryInput, DeleteRepositoryOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteRepositoryCommandInput extends DeleteRepositoryInput {
    }
    export interface DeleteRepositoryCommandOutput extends DeleteRepositoryOutput, __MetadataBearer {
    }
    /**
        * <p>De-register and unlink your repository.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteRepositoryCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteRepositoryCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteRepositoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRepositoryCommandInput} for command's `input` shape.
        * @see {@link DeleteRepositoryCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteRepositoryCommand extends $Command<DeleteRepositoryCommandInput, DeleteRepositoryCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteRepositoryCommandInput;
            constructor(input: DeleteRepositoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRepositoryCommandInput, DeleteRepositoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteServiceInput, DeleteServiceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteServiceCommandInput extends DeleteServiceInput {
    }
    export interface DeleteServiceCommandOutput extends DeleteServiceOutput, __MetadataBearer {
    }
    /**
        * <p>Delete a service, with its instances and pipeline.</p>
        *          <note>
        *             <p>You can't delete a service if it has any service instances that have components attached to them.</p>
        *             <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteServiceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteServiceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteServiceCommandInput} for command's `input` shape.
        * @see {@link DeleteServiceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteServiceCommand extends $Command<DeleteServiceCommandInput, DeleteServiceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteServiceCommandInput;
            constructor(input: DeleteServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteServiceCommandInput, DeleteServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteServiceTemplateInput, DeleteServiceTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteServiceTemplateCommandInput extends DeleteServiceTemplateInput {
    }
    export interface DeleteServiceTemplateCommandOutput extends DeleteServiceTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>If no other major or minor versions of the service template exist, delete the service template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteServiceTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteServiceTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteServiceTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteServiceTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteServiceTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteServiceTemplateCommand extends $Command<DeleteServiceTemplateCommandInput, DeleteServiceTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteServiceTemplateCommandInput;
            constructor(input: DeleteServiceTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteServiceTemplateCommandInput, DeleteServiceTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteServiceTemplateVersionInput, DeleteServiceTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteServiceTemplateVersionCommandInput extends DeleteServiceTemplateVersionInput {
    }
    export interface DeleteServiceTemplateVersionCommandOutput extends DeleteServiceTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>If no other minor versions of a service template exist, delete a major version of the service template if it's not the <code>Recommended</code>
        *       version. Delete the <code>Recommended</code> version of the service template if no other major versions or minor versions of the service template exist. A
        *       major version of a service template is a version that <i>isn't</i> backwards compatible.</p>
        *          <p>Delete a minor version of a service template if it's not the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the
        *       service template if no other minor versions of the service template exist. A minor version of a service template is a version that's backwards
        *       compatible.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteServiceTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteServiceTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteServiceTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteServiceTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link DeleteServiceTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteServiceTemplateVersionCommand extends $Command<DeleteServiceTemplateVersionCommandInput, DeleteServiceTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteServiceTemplateVersionCommandInput;
            constructor(input: DeleteServiceTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteServiceTemplateVersionCommandInput, DeleteServiceTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteTemplateSyncConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteTemplateSyncConfigInput, DeleteTemplateSyncConfigOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface DeleteTemplateSyncConfigCommandInput extends DeleteTemplateSyncConfigInput {
    }
    export interface DeleteTemplateSyncConfigCommandOutput extends DeleteTemplateSyncConfigOutput, __MetadataBearer {
    }
    /**
        * <p>Delete a template sync configuration.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, DeleteTemplateSyncConfigCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, DeleteTemplateSyncConfigCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new DeleteTemplateSyncConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTemplateSyncConfigCommandInput} for command's `input` shape.
        * @see {@link DeleteTemplateSyncConfigCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class DeleteTemplateSyncConfigCommand extends $Command<DeleteTemplateSyncConfigCommandInput, DeleteTemplateSyncConfigCommandOutput, ProtonClientResolvedConfig> {
            readonly input: DeleteTemplateSyncConfigCommandInput;
            constructor(input: DeleteTemplateSyncConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTemplateSyncConfigCommandInput, DeleteTemplateSyncConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetAccountSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccountSettingsInput, GetAccountSettingsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetAccountSettingsCommandInput extends GetAccountSettingsInput {
    }
    export interface GetAccountSettingsCommandOutput extends GetAccountSettingsOutput, __MetadataBearer {
    }
    /**
        * <p>Get detail data for the Proton pipeline service role.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetAccountSettingsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetAccountSettingsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetAccountSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccountSettingsCommandInput} for command's `input` shape.
        * @see {@link GetAccountSettingsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetAccountSettingsCommand extends $Command<GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetAccountSettingsCommandInput;
            constructor(input: GetAccountSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetComponentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetComponentInput, GetComponentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetComponentCommandInput extends GetComponentInput {
    }
    export interface GetComponentCommandOutput extends GetComponentOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a component.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetComponentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetComponentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetComponentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetComponentCommandInput} for command's `input` shape.
        * @see {@link GetComponentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetComponentCommand extends $Command<GetComponentCommandInput, GetComponentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetComponentCommandInput;
            constructor(input: GetComponentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetComponentCommandInput, GetComponentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEnvironmentAccountConnectionInput, GetEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetEnvironmentAccountConnectionCommandInput extends GetEnvironmentAccountConnectionInput {
    }
    export interface GetEnvironmentAccountConnectionCommandOutput extends GetEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>In an environment account, get the detailed data for an environment account connection.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link GetEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetEnvironmentAccountConnectionCommand extends $Command<GetEnvironmentAccountConnectionCommandInput, GetEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetEnvironmentAccountConnectionCommandInput;
            constructor(input: GetEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEnvironmentAccountConnectionCommandInput, GetEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEnvironmentInput, GetEnvironmentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetEnvironmentCommandInput extends GetEnvironmentInput {
    }
    export interface GetEnvironmentCommandOutput extends GetEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for an environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetEnvironmentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetEnvironmentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEnvironmentCommandInput} for command's `input` shape.
        * @see {@link GetEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetEnvironmentCommand extends $Command<GetEnvironmentCommandInput, GetEnvironmentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetEnvironmentCommandInput;
            constructor(input: GetEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEnvironmentCommandInput, GetEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEnvironmentTemplateInput, GetEnvironmentTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetEnvironmentTemplateCommandInput extends GetEnvironmentTemplateInput {
    }
    export interface GetEnvironmentTemplateCommandOutput extends GetEnvironmentTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for an environment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetEnvironmentTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetEnvironmentTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetEnvironmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEnvironmentTemplateCommandInput} for command's `input` shape.
        * @see {@link GetEnvironmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetEnvironmentTemplateCommand extends $Command<GetEnvironmentTemplateCommandInput, GetEnvironmentTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetEnvironmentTemplateCommandInput;
            constructor(input: GetEnvironmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEnvironmentTemplateCommandInput, GetEnvironmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEnvironmentTemplateVersionInput, GetEnvironmentTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetEnvironmentTemplateVersionCommandInput extends GetEnvironmentTemplateVersionInput {
    }
    export interface GetEnvironmentTemplateVersionCommandOutput extends GetEnvironmentTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a major or minor version of an environment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetEnvironmentTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetEnvironmentTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetEnvironmentTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEnvironmentTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link GetEnvironmentTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetEnvironmentTemplateVersionCommand extends $Command<GetEnvironmentTemplateVersionCommandInput, GetEnvironmentTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetEnvironmentTemplateVersionCommandInput;
            constructor(input: GetEnvironmentTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEnvironmentTemplateVersionCommandInput, GetEnvironmentTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRepositoryInput, GetRepositoryOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetRepositoryCommandInput extends GetRepositoryInput {
    }
    export interface GetRepositoryCommandOutput extends GetRepositoryOutput, __MetadataBearer {
    }
    /**
        * <p>Get detail data for a repository.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetRepositoryCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetRepositoryCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetRepositoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRepositoryCommandInput} for command's `input` shape.
        * @see {@link GetRepositoryCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetRepositoryCommand extends $Command<GetRepositoryCommandInput, GetRepositoryCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetRepositoryCommandInput;
            constructor(input: GetRepositoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRepositoryCommandInput, GetRepositoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositorySyncStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRepositorySyncStatusInput, GetRepositorySyncStatusOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetRepositorySyncStatusCommandInput extends GetRepositorySyncStatusInput {
    }
    export interface GetRepositorySyncStatusCommandOutput extends GetRepositorySyncStatusOutput, __MetadataBearer {
    }
    /**
        * <p>Get the sync status of a repository used for Proton template sync. For more information about template sync, see .</p>
        *          <note>
        *             <p>A repository sync status isn't tied to the Proton Repository resource (or any other Proton resource). Therefore, tags on an Proton Repository resource
        *         have no effect on this action. Specifically, you can't use these tags to control access to this action using Attribute-based access control
        *         (ABAC).</p>
        *             <p>For more information about ABAC, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/security_iam_service-with-iam.html#security_iam_service-with-iam-tags">ABAC</a> in the <i>Proton
        *           Administrator Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetRepositorySyncStatusCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetRepositorySyncStatusCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetRepositorySyncStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRepositorySyncStatusCommandInput} for command's `input` shape.
        * @see {@link GetRepositorySyncStatusCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetRepositorySyncStatusCommand extends $Command<GetRepositorySyncStatusCommandInput, GetRepositorySyncStatusCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetRepositorySyncStatusCommandInput;
            constructor(input: GetRepositorySyncStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRepositorySyncStatusCommandInput, GetRepositorySyncStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetServiceInput, GetServiceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetServiceCommandInput extends GetServiceInput {
    }
    export interface GetServiceCommandOutput extends GetServiceOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a service.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetServiceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetServiceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetServiceCommandInput} for command's `input` shape.
        * @see {@link GetServiceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetServiceCommand extends $Command<GetServiceCommandInput, GetServiceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetServiceCommandInput;
            constructor(input: GetServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetServiceCommandInput, GetServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetServiceInstanceInput, GetServiceInstanceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetServiceInstanceCommandInput extends GetServiceInstanceInput {
    }
    export interface GetServiceInstanceCommandOutput extends GetServiceInstanceOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a service instance. A service instance is an instantiation of service template and it runs in a specific environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetServiceInstanceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetServiceInstanceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetServiceInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetServiceInstanceCommandInput} for command's `input` shape.
        * @see {@link GetServiceInstanceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetServiceInstanceCommand extends $Command<GetServiceInstanceCommandInput, GetServiceInstanceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetServiceInstanceCommandInput;
            constructor(input: GetServiceInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetServiceInstanceCommandInput, GetServiceInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetServiceTemplateInput, GetServiceTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetServiceTemplateCommandInput extends GetServiceTemplateInput {
    }
    export interface GetServiceTemplateCommandOutput extends GetServiceTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a service template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetServiceTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetServiceTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetServiceTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetServiceTemplateCommandInput} for command's `input` shape.
        * @see {@link GetServiceTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetServiceTemplateCommand extends $Command<GetServiceTemplateCommandInput, GetServiceTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetServiceTemplateCommandInput;
            constructor(input: GetServiceTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetServiceTemplateCommandInput, GetServiceTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetServiceTemplateVersionInput, GetServiceTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetServiceTemplateVersionCommandInput extends GetServiceTemplateVersionInput {
    }
    export interface GetServiceTemplateVersionCommandOutput extends GetServiceTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Get detailed data for a major or minor version of a service template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetServiceTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetServiceTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetServiceTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetServiceTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link GetServiceTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetServiceTemplateVersionCommand extends $Command<GetServiceTemplateVersionCommandInput, GetServiceTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetServiceTemplateVersionCommandInput;
            constructor(input: GetServiceTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetServiceTemplateVersionCommandInput, GetServiceTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetTemplateSyncConfigInput, GetTemplateSyncConfigOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetTemplateSyncConfigCommandInput extends GetTemplateSyncConfigInput {
    }
    export interface GetTemplateSyncConfigCommandOutput extends GetTemplateSyncConfigOutput, __MetadataBearer {
    }
    /**
        * <p>Get detail data for a template sync configuration.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetTemplateSyncConfigCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetTemplateSyncConfigCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetTemplateSyncConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTemplateSyncConfigCommandInput} for command's `input` shape.
        * @see {@link GetTemplateSyncConfigCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetTemplateSyncConfigCommand extends $Command<GetTemplateSyncConfigCommandInput, GetTemplateSyncConfigCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetTemplateSyncConfigCommandInput;
            constructor(input: GetTemplateSyncConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTemplateSyncConfigCommandInput, GetTemplateSyncConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetTemplateSyncStatusInput, GetTemplateSyncStatusOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface GetTemplateSyncStatusCommandInput extends GetTemplateSyncStatusInput {
    }
    export interface GetTemplateSyncStatusCommandOutput extends GetTemplateSyncStatusOutput, __MetadataBearer {
    }
    /**
        * <p>Get the status of a template sync.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, GetTemplateSyncStatusCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, GetTemplateSyncStatusCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new GetTemplateSyncStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetTemplateSyncStatusCommandInput} for command's `input` shape.
        * @see {@link GetTemplateSyncStatusCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class GetTemplateSyncStatusCommand extends $Command<GetTemplateSyncStatusCommandInput, GetTemplateSyncStatusCommandOutput, ProtonClientResolvedConfig> {
            readonly input: GetTemplateSyncStatusCommandInput;
            constructor(input: GetTemplateSyncStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetTemplateSyncStatusCommandInput, GetTemplateSyncStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentOutputsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListComponentOutputsInput, ListComponentOutputsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListComponentOutputsCommandInput extends ListComponentOutputsInput {
    }
    export interface ListComponentOutputsCommandOutput extends ListComponentOutputsOutput, __MetadataBearer {
    }
    /**
        * <p>Get a list of component Infrastructure as Code (IaC) outputs.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListComponentOutputsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListComponentOutputsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListComponentOutputsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListComponentOutputsCommandInput} for command's `input` shape.
        * @see {@link ListComponentOutputsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListComponentOutputsCommand extends $Command<ListComponentOutputsCommandInput, ListComponentOutputsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListComponentOutputsCommandInput;
            constructor(input: ListComponentOutputsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListComponentOutputsCommandInput, ListComponentOutputsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentProvisionedResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListComponentProvisionedResourcesInput, ListComponentProvisionedResourcesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListComponentProvisionedResourcesCommandInput extends ListComponentProvisionedResourcesInput {
    }
    export interface ListComponentProvisionedResourcesCommandOutput extends ListComponentProvisionedResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>List provisioned resources for a component with details.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListComponentProvisionedResourcesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListComponentProvisionedResourcesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListComponentProvisionedResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListComponentProvisionedResourcesCommandInput} for command's `input` shape.
        * @see {@link ListComponentProvisionedResourcesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListComponentProvisionedResourcesCommand extends $Command<ListComponentProvisionedResourcesCommandInput, ListComponentProvisionedResourcesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListComponentProvisionedResourcesCommandInput;
            constructor(input: ListComponentProvisionedResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListComponentProvisionedResourcesCommandInput, ListComponentProvisionedResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListComponentsInput, ListComponentsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListComponentsCommandInput extends ListComponentsInput {
    }
    export interface ListComponentsCommandOutput extends ListComponentsOutput, __MetadataBearer {
    }
    /**
        * <p>List components with summary data. You can filter the result list by environment, service, or a single service instance.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListComponentsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListComponentsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListComponentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListComponentsCommandInput} for command's `input` shape.
        * @see {@link ListComponentsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListComponentsCommand extends $Command<ListComponentsCommandInput, ListComponentsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListComponentsCommandInput;
            constructor(input: ListComponentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListComponentsCommandInput, ListComponentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentAccountConnectionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentAccountConnectionsInput, ListEnvironmentAccountConnectionsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentAccountConnectionsCommandInput extends ListEnvironmentAccountConnectionsInput {
    }
    export interface ListEnvironmentAccountConnectionsCommandOutput extends ListEnvironmentAccountConnectionsOutput, __MetadataBearer {
    }
    /**
        * <p>View a list of environment account connections.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentAccountConnectionsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentAccountConnectionsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentAccountConnectionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentAccountConnectionsCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentAccountConnectionsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentAccountConnectionsCommand extends $Command<ListEnvironmentAccountConnectionsCommandInput, ListEnvironmentAccountConnectionsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentAccountConnectionsCommandInput;
            constructor(input: ListEnvironmentAccountConnectionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentAccountConnectionsCommandInput, ListEnvironmentAccountConnectionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentOutputsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentOutputsInput, ListEnvironmentOutputsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentOutputsCommandInput extends ListEnvironmentOutputsInput {
    }
    export interface ListEnvironmentOutputsCommandOutput extends ListEnvironmentOutputsOutput, __MetadataBearer {
    }
    /**
        * <p>List the infrastructure as code outputs for your environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentOutputsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentOutputsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentOutputsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentOutputsCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentOutputsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentOutputsCommand extends $Command<ListEnvironmentOutputsCommandInput, ListEnvironmentOutputsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentOutputsCommandInput;
            constructor(input: ListEnvironmentOutputsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentOutputsCommandInput, ListEnvironmentOutputsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentProvisionedResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentProvisionedResourcesInput, ListEnvironmentProvisionedResourcesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentProvisionedResourcesCommandInput extends ListEnvironmentProvisionedResourcesInput {
    }
    export interface ListEnvironmentProvisionedResourcesCommandOutput extends ListEnvironmentProvisionedResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>List the provisioned resources for your environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentProvisionedResourcesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentProvisionedResourcesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentProvisionedResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentProvisionedResourcesCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentProvisionedResourcesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentProvisionedResourcesCommand extends $Command<ListEnvironmentProvisionedResourcesCommandInput, ListEnvironmentProvisionedResourcesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentProvisionedResourcesCommandInput;
            constructor(input: ListEnvironmentProvisionedResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentProvisionedResourcesCommandInput, ListEnvironmentProvisionedResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentsInput, ListEnvironmentsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentsCommandInput extends ListEnvironmentsInput {
    }
    export interface ListEnvironmentsCommandOutput extends ListEnvironmentsOutput, __MetadataBearer {
    }
    /**
        * <p>List environments with detail data summaries.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentsCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentsCommand extends $Command<ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentsCommandInput;
            constructor(input: ListEnvironmentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentTemplatesInput, ListEnvironmentTemplatesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentTemplatesCommandInput extends ListEnvironmentTemplatesInput {
    }
    export interface ListEnvironmentTemplatesCommandOutput extends ListEnvironmentTemplatesOutput, __MetadataBearer {
    }
    /**
        * <p>List environment templates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentTemplatesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentTemplatesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentTemplatesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentTemplatesCommand extends $Command<ListEnvironmentTemplatesCommandInput, ListEnvironmentTemplatesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentTemplatesCommandInput;
            constructor(input: ListEnvironmentTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentTemplatesCommandInput, ListEnvironmentTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplateVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentTemplateVersionsInput, ListEnvironmentTemplateVersionsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListEnvironmentTemplateVersionsCommandInput extends ListEnvironmentTemplateVersionsInput {
    }
    export interface ListEnvironmentTemplateVersionsCommandOutput extends ListEnvironmentTemplateVersionsOutput, __MetadataBearer {
    }
    /**
        * <p>List major or minor versions of an environment template with detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListEnvironmentTemplateVersionsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListEnvironmentTemplateVersionsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListEnvironmentTemplateVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentTemplateVersionsCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentTemplateVersionsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListEnvironmentTemplateVersionsCommand extends $Command<ListEnvironmentTemplateVersionsCommandInput, ListEnvironmentTemplateVersionsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListEnvironmentTemplateVersionsCommandInput;
            constructor(input: ListEnvironmentTemplateVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentTemplateVersionsCommandInput, ListEnvironmentTemplateVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositoriesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRepositoriesInput, ListRepositoriesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListRepositoriesCommandInput extends ListRepositoriesInput {
    }
    export interface ListRepositoriesCommandOutput extends ListRepositoriesOutput, __MetadataBearer {
    }
    /**
        * <p>List repositories with detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListRepositoriesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListRepositoriesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListRepositoriesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRepositoriesCommandInput} for command's `input` shape.
        * @see {@link ListRepositoriesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListRepositoriesCommand extends $Command<ListRepositoriesCommandInput, ListRepositoriesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListRepositoriesCommandInput;
            constructor(input: ListRepositoriesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRepositoriesCommandInput, ListRepositoriesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositorySyncDefinitionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRepositorySyncDefinitionsInput, ListRepositorySyncDefinitionsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListRepositorySyncDefinitionsCommandInput extends ListRepositorySyncDefinitionsInput {
    }
    export interface ListRepositorySyncDefinitionsCommandOutput extends ListRepositorySyncDefinitionsOutput, __MetadataBearer {
    }
    /**
        * <p>List repository sync definitions with detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListRepositorySyncDefinitionsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListRepositorySyncDefinitionsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListRepositorySyncDefinitionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRepositorySyncDefinitionsCommandInput} for command's `input` shape.
        * @see {@link ListRepositorySyncDefinitionsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListRepositorySyncDefinitionsCommand extends $Command<ListRepositorySyncDefinitionsCommandInput, ListRepositorySyncDefinitionsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListRepositorySyncDefinitionsCommandInput;
            constructor(input: ListRepositorySyncDefinitionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRepositorySyncDefinitionsCommandInput, ListRepositorySyncDefinitionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceOutputsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceInstanceOutputsInput, ListServiceInstanceOutputsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServiceInstanceOutputsCommandInput extends ListServiceInstanceOutputsInput {
    }
    export interface ListServiceInstanceOutputsCommandOutput extends ListServiceInstanceOutputsOutput, __MetadataBearer {
    }
    /**
        * <p>Get a list service of instance Infrastructure as Code (IaC) outputs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServiceInstanceOutputsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServiceInstanceOutputsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServiceInstanceOutputsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceInstanceOutputsCommandInput} for command's `input` shape.
        * @see {@link ListServiceInstanceOutputsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServiceInstanceOutputsCommand extends $Command<ListServiceInstanceOutputsCommandInput, ListServiceInstanceOutputsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServiceInstanceOutputsCommandInput;
            constructor(input: ListServiceInstanceOutputsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceInstanceOutputsCommandInput, ListServiceInstanceOutputsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceProvisionedResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceInstanceProvisionedResourcesInput, ListServiceInstanceProvisionedResourcesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServiceInstanceProvisionedResourcesCommandInput extends ListServiceInstanceProvisionedResourcesInput {
    }
    export interface ListServiceInstanceProvisionedResourcesCommandOutput extends ListServiceInstanceProvisionedResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>List provisioned resources for a service instance with details.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServiceInstanceProvisionedResourcesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServiceInstanceProvisionedResourcesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServiceInstanceProvisionedResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceInstanceProvisionedResourcesCommandInput} for command's `input` shape.
        * @see {@link ListServiceInstanceProvisionedResourcesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServiceInstanceProvisionedResourcesCommand extends $Command<ListServiceInstanceProvisionedResourcesCommandInput, ListServiceInstanceProvisionedResourcesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServiceInstanceProvisionedResourcesCommandInput;
            constructor(input: ListServiceInstanceProvisionedResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceInstanceProvisionedResourcesCommandInput, ListServiceInstanceProvisionedResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstancesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceInstancesInput, ListServiceInstancesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServiceInstancesCommandInput extends ListServiceInstancesInput {
    }
    export interface ListServiceInstancesCommandOutput extends ListServiceInstancesOutput, __MetadataBearer {
    }
    /**
        * <p>List service instances with summary data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServiceInstancesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServiceInstancesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServiceInstancesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceInstancesCommandInput} for command's `input` shape.
        * @see {@link ListServiceInstancesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServiceInstancesCommand extends $Command<ListServiceInstancesCommandInput, ListServiceInstancesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServiceInstancesCommandInput;
            constructor(input: ListServiceInstancesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceInstancesCommandInput, ListServiceInstancesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineOutputsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServicePipelineOutputsInput, ListServicePipelineOutputsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServicePipelineOutputsCommandInput extends ListServicePipelineOutputsInput {
    }
    export interface ListServicePipelineOutputsCommandOutput extends ListServicePipelineOutputsOutput, __MetadataBearer {
    }
    /**
        * <p>Get a list of service pipeline Infrastructure as Code (IaC) outputs.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServicePipelineOutputsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServicePipelineOutputsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServicePipelineOutputsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServicePipelineOutputsCommandInput} for command's `input` shape.
        * @see {@link ListServicePipelineOutputsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServicePipelineOutputsCommand extends $Command<ListServicePipelineOutputsCommandInput, ListServicePipelineOutputsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServicePipelineOutputsCommandInput;
            constructor(input: ListServicePipelineOutputsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServicePipelineOutputsCommandInput, ListServicePipelineOutputsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineProvisionedResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServicePipelineProvisionedResourcesInput, ListServicePipelineProvisionedResourcesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServicePipelineProvisionedResourcesCommandInput extends ListServicePipelineProvisionedResourcesInput {
    }
    export interface ListServicePipelineProvisionedResourcesCommandOutput extends ListServicePipelineProvisionedResourcesOutput, __MetadataBearer {
    }
    /**
        * <p>List provisioned resources for a service and pipeline with details.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServicePipelineProvisionedResourcesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServicePipelineProvisionedResourcesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServicePipelineProvisionedResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServicePipelineProvisionedResourcesCommandInput} for command's `input` shape.
        * @see {@link ListServicePipelineProvisionedResourcesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServicePipelineProvisionedResourcesCommand extends $Command<ListServicePipelineProvisionedResourcesCommandInput, ListServicePipelineProvisionedResourcesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServicePipelineProvisionedResourcesCommandInput;
            constructor(input: ListServicePipelineProvisionedResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServicePipelineProvisionedResourcesCommandInput, ListServicePipelineProvisionedResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServicesInput, ListServicesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServicesCommandInput extends ListServicesInput {
    }
    export interface ListServicesCommandOutput extends ListServicesOutput, __MetadataBearer {
    }
    /**
        * <p>List services with summaries of detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServicesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServicesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServicesCommandInput} for command's `input` shape.
        * @see {@link ListServicesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServicesCommand extends $Command<ListServicesCommandInput, ListServicesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServicesCommandInput;
            constructor(input: ListServicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServicesCommandInput, ListServicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceTemplatesInput, ListServiceTemplatesOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServiceTemplatesCommandInput extends ListServiceTemplatesInput {
    }
    export interface ListServiceTemplatesCommandOutput extends ListServiceTemplatesOutput, __MetadataBearer {
    }
    /**
        * <p>List service templates with detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServiceTemplatesCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServiceTemplatesCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServiceTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListServiceTemplatesCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServiceTemplatesCommand extends $Command<ListServiceTemplatesCommandInput, ListServiceTemplatesCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServiceTemplatesCommandInput;
            constructor(input: ListServiceTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceTemplatesCommandInput, ListServiceTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplateVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListServiceTemplateVersionsInput, ListServiceTemplateVersionsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListServiceTemplateVersionsCommandInput extends ListServiceTemplateVersionsInput {
    }
    export interface ListServiceTemplateVersionsCommandOutput extends ListServiceTemplateVersionsOutput, __MetadataBearer {
    }
    /**
        * <p>List major or minor versions of a service template with detail data.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListServiceTemplateVersionsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListServiceTemplateVersionsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListServiceTemplateVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListServiceTemplateVersionsCommandInput} for command's `input` shape.
        * @see {@link ListServiceTemplateVersionsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListServiceTemplateVersionsCommand extends $Command<ListServiceTemplateVersionsCommandInput, ListServiceTemplateVersionsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListServiceTemplateVersionsCommandInput;
            constructor(input: ListServiceTemplateVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListServiceTemplateVersionsCommandInput, ListServiceTemplateVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceInput, ListTagsForResourceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceInput {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceOutput, __MetadataBearer {
    }
    /**
        * <p>List tags for a resource. For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, ListTagsForResourceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, ListTagsForResourceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/NotifyResourceDeploymentStatusChangeCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { NotifyResourceDeploymentStatusChangeInput, NotifyResourceDeploymentStatusChangeOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface NotifyResourceDeploymentStatusChangeCommandInput extends NotifyResourceDeploymentStatusChangeInput {
    }
    export interface NotifyResourceDeploymentStatusChangeCommandOutput extends NotifyResourceDeploymentStatusChangeOutput, __MetadataBearer {
    }
    /**
        * <p>Notify Proton of status changes to a provisioned resource when you use self-managed provisioning.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a> in the <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, NotifyResourceDeploymentStatusChangeCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, NotifyResourceDeploymentStatusChangeCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new NotifyResourceDeploymentStatusChangeCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link NotifyResourceDeploymentStatusChangeCommandInput} for command's `input` shape.
        * @see {@link NotifyResourceDeploymentStatusChangeCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class NotifyResourceDeploymentStatusChangeCommand extends $Command<NotifyResourceDeploymentStatusChangeCommandInput, NotifyResourceDeploymentStatusChangeCommandOutput, ProtonClientResolvedConfig> {
            readonly input: NotifyResourceDeploymentStatusChangeCommandInput;
            constructor(input: NotifyResourceDeploymentStatusChangeCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<NotifyResourceDeploymentStatusChangeCommandInput, NotifyResourceDeploymentStatusChangeCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/RejectEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RejectEnvironmentAccountConnectionInput, RejectEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface RejectEnvironmentAccountConnectionCommandInput extends RejectEnvironmentAccountConnectionInput {
    }
    export interface RejectEnvironmentAccountConnectionCommandOutput extends RejectEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>In a management account, reject an environment account connection from another environment account.</p>
        *          <p>After you reject an environment account connection request, you <i>can't</i> accept or use the rejected environment account
        *       connection.</p>
        *          <p>You <i>can’t</i> reject an environment account connection that's connected to an environment.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, RejectEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, RejectEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new RejectEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RejectEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link RejectEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class RejectEnvironmentAccountConnectionCommand extends $Command<RejectEnvironmentAccountConnectionCommandInput, RejectEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: RejectEnvironmentAccountConnectionCommandInput;
            constructor(input: RejectEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RejectEnvironmentAccountConnectionCommandInput, RejectEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceInput, TagResourceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface TagResourceCommandInput extends TagResourceInput {
    }
    export interface TagResourceCommandOutput extends TagResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Tag a resource. A tag is a key-value pair of metadata that you associate with an Proton resource.</p>
        *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, TagResourceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, TagResourceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceInput, UntagResourceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UntagResourceCommandInput extends UntagResourceInput {
    }
    export interface UntagResourceCommandOutput extends UntagResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Remove a customer tag from a resource. A tag is a key-value pair of metadata associated with an Proton resource.</p>
        *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UntagResourceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UntagResourceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateAccountSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateAccountSettingsInput, UpdateAccountSettingsOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateAccountSettingsCommandInput extends UpdateAccountSettingsInput {
    }
    export interface UpdateAccountSettingsCommandOutput extends UpdateAccountSettingsOutput, __MetadataBearer {
    }
    /**
        * <p>Update the Proton service pipeline role or repository settings.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateAccountSettingsCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateAccountSettingsCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateAccountSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAccountSettingsCommandInput} for command's `input` shape.
        * @see {@link UpdateAccountSettingsCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateAccountSettingsCommand extends $Command<UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateAccountSettingsCommandInput;
            constructor(input: UpdateAccountSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateComponentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateComponentInput, UpdateComponentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateComponentCommandInput extends UpdateComponentInput {
    }
    export interface UpdateComponentCommandOutput extends UpdateComponentOutput, __MetadataBearer {
    }
    /**
        * <p>Update a component.</p>
        *          <p>There are a few modes for updating a component. The <code>deploymentType</code> field defines the mode.</p>
        *          <note>
        *             <p>You can't update a component while its deployment status, or the deployment status of a service instance attached to it, is
        *         <code>IN_PROGRESS</code>.</p>
        *          </note>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateComponentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateComponentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateComponentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateComponentCommandInput} for command's `input` shape.
        * @see {@link UpdateComponentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateComponentCommand extends $Command<UpdateComponentCommandInput, UpdateComponentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateComponentCommandInput;
            constructor(input: UpdateComponentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateComponentCommandInput, UpdateComponentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentAccountConnectionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEnvironmentAccountConnectionInput, UpdateEnvironmentAccountConnectionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateEnvironmentAccountConnectionCommandInput extends UpdateEnvironmentAccountConnectionInput {
    }
    export interface UpdateEnvironmentAccountConnectionCommandOutput extends UpdateEnvironmentAccountConnectionOutput, __MetadataBearer {
    }
    /**
        * <p>In an environment account, update an environment account connection to use a new IAM role.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
        *         connections</a> in the <i>Proton Administrator guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateEnvironmentAccountConnectionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateEnvironmentAccountConnectionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateEnvironmentAccountConnectionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEnvironmentAccountConnectionCommandInput} for command's `input` shape.
        * @see {@link UpdateEnvironmentAccountConnectionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateEnvironmentAccountConnectionCommand extends $Command<UpdateEnvironmentAccountConnectionCommandInput, UpdateEnvironmentAccountConnectionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateEnvironmentAccountConnectionCommandInput;
            constructor(input: UpdateEnvironmentAccountConnectionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEnvironmentAccountConnectionCommandInput, UpdateEnvironmentAccountConnectionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEnvironmentInput, UpdateEnvironmentOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateEnvironmentCommandInput extends UpdateEnvironmentInput {
    }
    export interface UpdateEnvironmentCommandOutput extends UpdateEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Update an environment.</p>
        *          <p>If the environment is associated with an environment account connection, <i>don't</i> update or include the
        *         <code>protonServiceRoleArn</code> and <code>provisioningRepository</code> parameter to update or connect to an environment account connection.</p>
        *          <p>You can only update to a new environment account connection if that connection was created in the same environment account that the current
        *       environment account connection was created in. The account connection must also be associated with the current environment.</p>
        *          <p>If the environment <i>isn't</i> associated with an environment account connection, <i>don't</i> update or include the
        *         <code>environmentAccountConnectionId</code> parameter. You <i>can't</i> update or connect the environment to an environment account
        *       connection if it <i>isn't</i> already associated with an environment connection.</p>
        *          <p>You can update either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value. You can’t update
        *       both.</p>
        *          <p>If the environment was configured for Amazon Web Services-managed provisioning, omit the <code>provisioningRepository</code> parameter.</p>
        *          <p>If the environment was configured for self-managed provisioning, specify the <code>provisioningRepository</code> parameter and omit the
        *         <code>protonServiceRoleArn</code> and <code>environmentAccountConnectionId</code> parameters.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton Administrator
        *         Guide</i>.</p>
        *          <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p>
        *          <dl>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>NONE</code>
        *                </p>
        *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>CURRENT_VERSION</code>
        *                </p>
        *                <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated.
        *               <i>Don’t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>MINOR_VERSION</code>
        *                </p>
        *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in
        *             use, by default. You can also specify a different minor version of the current major version in use.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>MAJOR_VERSION</code>
        *                </p>
        *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template,
        *             by default. You can also specify a different major version that's higher than the major version in use and a minor version.</p>
        *             </dd>
        *          </dl>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateEnvironmentCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateEnvironmentCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEnvironmentCommandInput} for command's `input` shape.
        * @see {@link UpdateEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateEnvironmentCommand extends $Command<UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateEnvironmentCommandInput;
            constructor(input: UpdateEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEnvironmentTemplateInput, UpdateEnvironmentTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateEnvironmentTemplateCommandInput extends UpdateEnvironmentTemplateInput {
    }
    export interface UpdateEnvironmentTemplateCommandOutput extends UpdateEnvironmentTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Update an environment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateEnvironmentTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateEnvironmentTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateEnvironmentTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEnvironmentTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateEnvironmentTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateEnvironmentTemplateCommand extends $Command<UpdateEnvironmentTemplateCommandInput, UpdateEnvironmentTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateEnvironmentTemplateCommandInput;
            constructor(input: UpdateEnvironmentTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEnvironmentTemplateCommandInput, UpdateEnvironmentTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEnvironmentTemplateVersionInput, UpdateEnvironmentTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateEnvironmentTemplateVersionCommandInput extends UpdateEnvironmentTemplateVersionInput {
    }
    export interface UpdateEnvironmentTemplateVersionCommandOutput extends UpdateEnvironmentTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Update a major or minor version of an environment template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateEnvironmentTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateEnvironmentTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateEnvironmentTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEnvironmentTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link UpdateEnvironmentTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateEnvironmentTemplateVersionCommand extends $Command<UpdateEnvironmentTemplateVersionCommandInput, UpdateEnvironmentTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateEnvironmentTemplateVersionCommandInput;
            constructor(input: UpdateEnvironmentTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEnvironmentTemplateVersionCommandInput, UpdateEnvironmentTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServiceInput, UpdateServiceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateServiceCommandInput extends UpdateServiceInput {
    }
    export interface UpdateServiceCommandOutput extends UpdateServiceOutput, __MetadataBearer {
    }
    /**
        * <p>Edit a service description or use a spec to add and delete service instances.</p>
        *          <note>
        *             <p>Existing service instances and the service pipeline <i>can't</i> be edited using this API. They can only be deleted.</p>
        *          </note>
        *          <p>Use the <code>description</code> parameter to modify the description.</p>
        *          <p>Edit the <code>spec</code> parameter to add or delete instances.</p>
        *          <note>
        *             <p>You can't delete a service instance (remove it from the spec) if it has an attached component.</p>
        *             <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateServiceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateServiceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateServiceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateServiceCommand extends $Command<UpdateServiceCommandInput, UpdateServiceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateServiceCommandInput;
            constructor(input: UpdateServiceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceCommandInput, UpdateServiceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServiceInstanceInput, UpdateServiceInstanceOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateServiceInstanceCommandInput extends UpdateServiceInstanceInput {
    }
    export interface UpdateServiceInstanceCommandOutput extends UpdateServiceInstanceOutput, __MetadataBearer {
    }
    /**
        * <p>Update a service instance.</p>
        *          <p>There are a few modes for updating a service instance. The <code>deploymentType</code> field defines the mode.</p>
        *          <note>
        *             <p>You can't update a service instance while its deployment status, or the deployment status of a component attached to it, is
        *         <code>IN_PROGRESS</code>.</p>
        *             <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateServiceInstanceCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateServiceInstanceCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateServiceInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceInstanceCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceInstanceCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateServiceInstanceCommand extends $Command<UpdateServiceInstanceCommandInput, UpdateServiceInstanceCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateServiceInstanceCommandInput;
            constructor(input: UpdateServiceInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceInstanceCommandInput, UpdateServiceInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServicePipelineCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServicePipelineInput, UpdateServicePipelineOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateServicePipelineCommandInput extends UpdateServicePipelineInput {
    }
    export interface UpdateServicePipelineCommandOutput extends UpdateServicePipelineOutput, __MetadataBearer {
    }
    /**
        * <p>Update the service pipeline.</p>
        *          <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p>
        *          <dl>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>NONE</code>
        *                </p>
        *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>CURRENT_VERSION</code>
        *                </p>
        *                <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated.
        *               <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>MINOR_VERSION</code>
        *                </p>
        *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version
        *             in use, by default. You can specify a different minor version of the current major version in use.</p>
        *             </dd>
        *             <dt/>
        *             <dd>
        *                <p>
        *                   <code>MAJOR_VERSION</code>
        *                </p>
        *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current
        *             template by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>
        *             </dd>
        *          </dl>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateServicePipelineCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateServicePipelineCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateServicePipelineCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServicePipelineCommandInput} for command's `input` shape.
        * @see {@link UpdateServicePipelineCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateServicePipelineCommand extends $Command<UpdateServicePipelineCommandInput, UpdateServicePipelineCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateServicePipelineCommandInput;
            constructor(input: UpdateServicePipelineCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServicePipelineCommandInput, UpdateServicePipelineCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServiceTemplateInput, UpdateServiceTemplateOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateServiceTemplateCommandInput extends UpdateServiceTemplateInput {
    }
    export interface UpdateServiceTemplateCommandOutput extends UpdateServiceTemplateOutput, __MetadataBearer {
    }
    /**
        * <p>Update a service template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateServiceTemplateCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateServiceTemplateCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateServiceTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceTemplateCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateServiceTemplateCommand extends $Command<UpdateServiceTemplateCommandInput, UpdateServiceTemplateCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateServiceTemplateCommandInput;
            constructor(input: UpdateServiceTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceTemplateCommandInput, UpdateServiceTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateServiceTemplateVersionInput, UpdateServiceTemplateVersionOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateServiceTemplateVersionCommandInput extends UpdateServiceTemplateVersionInput {
    }
    export interface UpdateServiceTemplateVersionCommandOutput extends UpdateServiceTemplateVersionOutput, __MetadataBearer {
    }
    /**
        * <p>Update a major or minor version of a service template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateServiceTemplateVersionCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateServiceTemplateVersionCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateServiceTemplateVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateServiceTemplateVersionCommandInput} for command's `input` shape.
        * @see {@link UpdateServiceTemplateVersionCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateServiceTemplateVersionCommand extends $Command<UpdateServiceTemplateVersionCommandInput, UpdateServiceTemplateVersionCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateServiceTemplateVersionCommandInput;
            constructor(input: UpdateServiceTemplateVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateServiceTemplateVersionCommandInput, UpdateServiceTemplateVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateTemplateSyncConfigCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateTemplateSyncConfigInput, UpdateTemplateSyncConfigOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0";
    import { ProtonClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient";
    export interface UpdateTemplateSyncConfigCommandInput extends UpdateTemplateSyncConfigInput {
    }
    export interface UpdateTemplateSyncConfigCommandOutput extends UpdateTemplateSyncConfigOutput, __MetadataBearer {
    }
    /**
        * <p>Update template sync configuration parameters, except for the <code>templateName</code> and <code>templateType</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ProtonClient, UpdateTemplateSyncConfigCommand } from "@aws-sdk/client-proton"; // ES Modules import
        * // const { ProtonClient, UpdateTemplateSyncConfigCommand } = require("@aws-sdk/client-proton"); // CommonJS import
        * const client = new ProtonClient(config);
        * const command = new UpdateTemplateSyncConfigCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateTemplateSyncConfigCommandInput} for command's `input` shape.
        * @see {@link UpdateTemplateSyncConfigCommandOutput} for command's `response` shape.
        * @see {@link ProtonClientResolvedConfig | config} for ProtonClient's `config` shape.
        *
        */
    export class UpdateTemplateSyncConfigCommand extends $Command<UpdateTemplateSyncConfigCommandInput, UpdateTemplateSyncConfigCommandOutput, ProtonClientResolvedConfig> {
            readonly input: UpdateTemplateSyncConfigCommandInput;
            constructor(input: UpdateTemplateSyncConfigCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ProtonClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateTemplateSyncConfigCommandInput, UpdateTemplateSyncConfigCommandOutput>;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/ProtonClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AcceptEnvironmentAccountConnectionCommandInput, AcceptEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/AcceptEnvironmentAccountConnectionCommand";
    import { CancelComponentDeploymentCommandInput, CancelComponentDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelComponentDeploymentCommand";
    import { CancelEnvironmentDeploymentCommandInput, CancelEnvironmentDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelEnvironmentDeploymentCommand";
    import { CancelServiceInstanceDeploymentCommandInput, CancelServiceInstanceDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServiceInstanceDeploymentCommand";
    import { CancelServicePipelineDeploymentCommandInput, CancelServicePipelineDeploymentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CancelServicePipelineDeploymentCommand";
    import { CreateComponentCommandInput, CreateComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateComponentCommand";
    import { CreateEnvironmentAccountConnectionCommandInput, CreateEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentAccountConnectionCommand";
    import { CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentCommand";
    import { CreateEnvironmentTemplateCommandInput, CreateEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateCommand";
    import { CreateEnvironmentTemplateVersionCommandInput, CreateEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateEnvironmentTemplateVersionCommand";
    import { CreateRepositoryCommandInput, CreateRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateRepositoryCommand";
    import { CreateServiceCommandInput, CreateServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceCommand";
    import { CreateServiceTemplateCommandInput, CreateServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateCommand";
    import { CreateServiceTemplateVersionCommandInput, CreateServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateServiceTemplateVersionCommand";
    import { CreateTemplateSyncConfigCommandInput, CreateTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/CreateTemplateSyncConfigCommand";
    import { DeleteComponentCommandInput, DeleteComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteComponentCommand";
    import { DeleteEnvironmentAccountConnectionCommandInput, DeleteEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentAccountConnectionCommand";
    import { DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentCommand";
    import { DeleteEnvironmentTemplateCommandInput, DeleteEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateCommand";
    import { DeleteEnvironmentTemplateVersionCommandInput, DeleteEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteEnvironmentTemplateVersionCommand";
    import { DeleteRepositoryCommandInput, DeleteRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteRepositoryCommand";
    import { DeleteServiceCommandInput, DeleteServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceCommand";
    import { DeleteServiceTemplateCommandInput, DeleteServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateCommand";
    import { DeleteServiceTemplateVersionCommandInput, DeleteServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteServiceTemplateVersionCommand";
    import { DeleteTemplateSyncConfigCommandInput, DeleteTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/DeleteTemplateSyncConfigCommand";
    import { GetAccountSettingsCommandInput, GetAccountSettingsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetAccountSettingsCommand";
    import { GetComponentCommandInput, GetComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetComponentCommand";
    import { GetEnvironmentAccountConnectionCommandInput, GetEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentAccountConnectionCommand";
    import { GetEnvironmentCommandInput, GetEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentCommand";
    import { GetEnvironmentTemplateCommandInput, GetEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateCommand";
    import { GetEnvironmentTemplateVersionCommandInput, GetEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetEnvironmentTemplateVersionCommand";
    import { GetRepositoryCommandInput, GetRepositoryCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositoryCommand";
    import { GetRepositorySyncStatusCommandInput, GetRepositorySyncStatusCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetRepositorySyncStatusCommand";
    import { GetServiceCommandInput, GetServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceCommand";
    import { GetServiceInstanceCommandInput, GetServiceInstanceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceInstanceCommand";
    import { GetServiceTemplateCommandInput, GetServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateCommand";
    import { GetServiceTemplateVersionCommandInput, GetServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetServiceTemplateVersionCommand";
    import { GetTemplateSyncConfigCommandInput, GetTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncConfigCommand";
    import { GetTemplateSyncStatusCommandInput, GetTemplateSyncStatusCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/GetTemplateSyncStatusCommand";
    import { ListComponentOutputsCommandInput, ListComponentOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentOutputsCommand";
    import { ListComponentProvisionedResourcesCommandInput, ListComponentProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentProvisionedResourcesCommand";
    import { ListComponentsCommandInput, ListComponentsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListComponentsCommand";
    import { ListEnvironmentAccountConnectionsCommandInput, ListEnvironmentAccountConnectionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentAccountConnectionsCommand";
    import { ListEnvironmentOutputsCommandInput, ListEnvironmentOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentOutputsCommand";
    import { ListEnvironmentProvisionedResourcesCommandInput, ListEnvironmentProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentProvisionedResourcesCommand";
    import { ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentsCommand";
    import { ListEnvironmentTemplatesCommandInput, ListEnvironmentTemplatesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplatesCommand";
    import { ListEnvironmentTemplateVersionsCommandInput, ListEnvironmentTemplateVersionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListEnvironmentTemplateVersionsCommand";
    import { ListRepositoriesCommandInput, ListRepositoriesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositoriesCommand";
    import { ListRepositorySyncDefinitionsCommandInput, ListRepositorySyncDefinitionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListRepositorySyncDefinitionsCommand";
    import { ListServiceInstanceOutputsCommandInput, ListServiceInstanceOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceOutputsCommand";
    import { ListServiceInstanceProvisionedResourcesCommandInput, ListServiceInstanceProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstanceProvisionedResourcesCommand";
    import { ListServiceInstancesCommandInput, ListServiceInstancesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceInstancesCommand";
    import { ListServicePipelineOutputsCommandInput, ListServicePipelineOutputsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineOutputsCommand";
    import { ListServicePipelineProvisionedResourcesCommandInput, ListServicePipelineProvisionedResourcesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicePipelineProvisionedResourcesCommand";
    import { ListServicesCommandInput, ListServicesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServicesCommand";
    import { ListServiceTemplatesCommandInput, ListServiceTemplatesCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplatesCommand";
    import { ListServiceTemplateVersionsCommandInput, ListServiceTemplateVersionsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListServiceTemplateVersionsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/ListTagsForResourceCommand";
    import { NotifyResourceDeploymentStatusChangeCommandInput, NotifyResourceDeploymentStatusChangeCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/NotifyResourceDeploymentStatusChangeCommand";
    import { RejectEnvironmentAccountConnectionCommandInput, RejectEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/RejectEnvironmentAccountConnectionCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UntagResourceCommand";
    import { UpdateAccountSettingsCommandInput, UpdateAccountSettingsCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateAccountSettingsCommand";
    import { UpdateComponentCommandInput, UpdateComponentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateComponentCommand";
    import { UpdateEnvironmentAccountConnectionCommandInput, UpdateEnvironmentAccountConnectionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentAccountConnectionCommand";
    import { UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentCommand";
    import { UpdateEnvironmentTemplateCommandInput, UpdateEnvironmentTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateCommand";
    import { UpdateEnvironmentTemplateVersionCommandInput, UpdateEnvironmentTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateEnvironmentTemplateVersionCommand";
    import { UpdateServiceCommandInput, UpdateServiceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceCommand";
    import { UpdateServiceInstanceCommandInput, UpdateServiceInstanceCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceInstanceCommand";
    import { UpdateServicePipelineCommandInput, UpdateServicePipelineCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServicePipelineCommand";
    import { UpdateServiceTemplateCommandInput, UpdateServiceTemplateCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateCommand";
    import { UpdateServiceTemplateVersionCommandInput, UpdateServiceTemplateVersionCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateServiceTemplateVersionCommand";
    import { UpdateTemplateSyncConfigCommandInput, UpdateTemplateSyncConfigCommandOutput } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/commands/UpdateTemplateSyncConfigCommand";
    export type ServiceInputTypes = AcceptEnvironmentAccountConnectionCommandInput | CancelComponentDeploymentCommandInput | CancelEnvironmentDeploymentCommandInput | CancelServiceInstanceDeploymentCommandInput | CancelServicePipelineDeploymentCommandInput | CreateComponentCommandInput | CreateEnvironmentAccountConnectionCommandInput | CreateEnvironmentCommandInput | CreateEnvironmentTemplateCommandInput | CreateEnvironmentTemplateVersionCommandInput | CreateRepositoryCommandInput | CreateServiceCommandInput | CreateServiceTemplateCommandInput | CreateServiceTemplateVersionCommandInput | CreateTemplateSyncConfigCommandInput | DeleteComponentCommandInput | DeleteEnvironmentAccountConnectionCommandInput | DeleteEnvironmentCommandInput | DeleteEnvironmentTemplateCommandInput | DeleteEnvironmentTemplateVersionCommandInput | DeleteRepositoryCommandInput | DeleteServiceCommandInput | DeleteServiceTemplateCommandInput | DeleteServiceTemplateVersionCommandInput | DeleteTemplateSyncConfigCommandInput | GetAccountSettingsCommandInput | GetComponentCommandInput | GetEnvironmentAccountConnectionCommandInput | GetEnvironmentCommandInput | GetEnvironmentTemplateCommandInput | GetEnvironmentTemplateVersionCommandInput | GetRepositoryCommandInput | GetRepositorySyncStatusCommandInput | GetServiceCommandInput | GetServiceInstanceCommandInput | GetServiceTemplateCommandInput | GetServiceTemplateVersionCommandInput | GetTemplateSyncConfigCommandInput | GetTemplateSyncStatusCommandInput | ListComponentOutputsCommandInput | ListComponentProvisionedResourcesCommandInput | ListComponentsCommandInput | ListEnvironmentAccountConnectionsCommandInput | ListEnvironmentOutputsCommandInput | ListEnvironmentProvisionedResourcesCommandInput | ListEnvironmentTemplateVersionsCommandInput | ListEnvironmentTemplatesCommandInput | ListEnvironmentsCommandInput | ListRepositoriesCommandInput | ListRepositorySyncDefinitionsCommandInput | ListServiceInstanceOutputsCommandInput | ListServiceInstanceProvisionedResourcesCommandInput | ListServiceInstancesCommandInput | ListServicePipelineOutputsCommandInput | ListServicePipelineProvisionedResourcesCommandInput | ListServiceTemplateVersionsCommandInput | ListServiceTemplatesCommandInput | ListServicesCommandInput | ListTagsForResourceCommandInput | NotifyResourceDeploymentStatusChangeCommandInput | RejectEnvironmentAccountConnectionCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAccountSettingsCommandInput | UpdateComponentCommandInput | UpdateEnvironmentAccountConnectionCommandInput | UpdateEnvironmentCommandInput | UpdateEnvironmentTemplateCommandInput | UpdateEnvironmentTemplateVersionCommandInput | UpdateServiceCommandInput | UpdateServiceInstanceCommandInput | UpdateServicePipelineCommandInput | UpdateServiceTemplateCommandInput | UpdateServiceTemplateVersionCommandInput | UpdateTemplateSyncConfigCommandInput;
    export type ServiceOutputTypes = AcceptEnvironmentAccountConnectionCommandOutput | CancelComponentDeploymentCommandOutput | CancelEnvironmentDeploymentCommandOutput | CancelServiceInstanceDeploymentCommandOutput | CancelServicePipelineDeploymentCommandOutput | CreateComponentCommandOutput | CreateEnvironmentAccountConnectionCommandOutput | CreateEnvironmentCommandOutput | CreateEnvironmentTemplateCommandOutput | CreateEnvironmentTemplateVersionCommandOutput | CreateRepositoryCommandOutput | CreateServiceCommandOutput | CreateServiceTemplateCommandOutput | CreateServiceTemplateVersionCommandOutput | CreateTemplateSyncConfigCommandOutput | DeleteComponentCommandOutput | DeleteEnvironmentAccountConnectionCommandOutput | DeleteEnvironmentCommandOutput | DeleteEnvironmentTemplateCommandOutput | DeleteEnvironmentTemplateVersionCommandOutput | DeleteRepositoryCommandOutput | DeleteServiceCommandOutput | DeleteServiceTemplateCommandOutput | DeleteServiceTemplateVersionCommandOutput | DeleteTemplateSyncConfigCommandOutput | GetAccountSettingsCommandOutput | GetComponentCommandOutput | GetEnvironmentAccountConnectionCommandOutput | GetEnvironmentCommandOutput | GetEnvironmentTemplateCommandOutput | GetEnvironmentTemplateVersionCommandOutput | GetRepositoryCommandOutput | GetRepositorySyncStatusCommandOutput | GetServiceCommandOutput | GetServiceInstanceCommandOutput | GetServiceTemplateCommandOutput | GetServiceTemplateVersionCommandOutput | GetTemplateSyncConfigCommandOutput | GetTemplateSyncStatusCommandOutput | ListComponentOutputsCommandOutput | ListComponentProvisionedResourcesCommandOutput | ListComponentsCommandOutput | ListEnvironmentAccountConnectionsCommandOutput | ListEnvironmentOutputsCommandOutput | ListEnvironmentProvisionedResourcesCommandOutput | ListEnvironmentTemplateVersionsCommandOutput | ListEnvironmentTemplatesCommandOutput | ListEnvironmentsCommandOutput | ListRepositoriesCommandOutput | ListRepositorySyncDefinitionsCommandOutput | ListServiceInstanceOutputsCommandOutput | ListServiceInstanceProvisionedResourcesCommandOutput | ListServiceInstancesCommandOutput | ListServicePipelineOutputsCommandOutput | ListServicePipelineProvisionedResourcesCommandOutput | ListServiceTemplateVersionsCommandOutput | ListServiceTemplatesCommandOutput | ListServicesCommandOutput | ListTagsForResourceCommandOutput | NotifyResourceDeploymentStatusChangeCommandOutput | RejectEnvironmentAccountConnectionCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAccountSettingsCommandOutput | UpdateComponentCommandOutput | UpdateEnvironmentAccountConnectionCommandOutput | UpdateEnvironmentCommandOutput | UpdateEnvironmentTemplateCommandOutput | UpdateEnvironmentTemplateVersionCommandOutput | UpdateServiceCommandOutput | UpdateServiceInstanceCommandOutput | UpdateServicePipelineCommandOutput | UpdateServiceTemplateCommandOutput | UpdateServiceTemplateVersionCommandOutput | UpdateTemplateSyncConfigCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ProtonClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ProtonClient class constructor that set the region, credentials and other options.
        */
    export interface ProtonClientConfig extends ProtonClientConfigType {
    }
    type ProtonClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ProtonClient class. This is resolved and normalized from the {@link ProtonClientConfig | constructor configuration interface}.
        */
    export interface ProtonClientResolvedConfig extends ProtonClientResolvedConfigType {
    }
    /**
        * <p>This is the Proton Service API Reference. It provides descriptions, syntax and usage examples for each of the <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Operations.html">actions</a> and <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Types.html">data types</a> for the Proton service.</p>
        *          <p>The documentation for each action shows the Query API request parameters and the XML response.</p>
        *          <p>Alternatively, you can use the Amazon Web Services CLI to access an API. For more information, see the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html">Amazon Web Services Command Line Interface User Guide</a>.</p>
        *          <p>The Proton service is a two-pronged automation framework. Administrators create service templates to provide standardized infrastructure
        *    and deployment tooling for serverless and container based applications. Developers, in turn, select from the available service templates to
        *    automate their application or service deployments.</p>
        *          <p>Because administrators define the infrastructure and tooling that Proton deploys and manages, they need permissions to use all of the
        *    listed API operations.</p>
        *          <p>When developers select a specific infrastructure and tooling set, Proton deploys their applications. To monitor their applications that are
        *    running on Proton, developers need permissions to the service <i>create</i>, <i>list</i>,
        *     <i>update</i> and <i>delete</i> API operations and the service instance <i>list</i> and
        *     <i>update</i> API operations.</p>
        *          <p>To learn more about Proton administration, see the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/Welcome.html">Proton
        *     Administrator Guide</a>.</p>
        *          <p>To learn more about deploying serverless and containerized applications on Proton, see the <a href="https://docs.aws.amazon.com/proton/latest/userguide/Welcome.html">Proton User Guide</a>.</p>
        *          <p>
        *             <b>Ensuring Idempotency</b>
        *          </p>
        *          <p>When you make a mutating API request, the request typically returns a result before the asynchronous workflows of the operation are complete.
        *    Operations might also time out or encounter other server issues before they're complete, even if the request already returned a result. This might
        *    make it difficult to determine whether the request succeeded. Moreover, you might need to retry the request multiple times to ensure that the
        *    operation completes successfully. However, if the original request and the subsequent retries are successful, the operation occurs multiple times.
        *    This means that you might create more resources than you intended.</p>
        *          <p>
        *             <i>Idempotency</i> ensures that an API request action completes no more than one time. With an idempotent request, if the
        *    original request action completes successfully, any subsequent retries complete successfully without performing any further actions. However, the
        *    result might contain updated information, such as the current creation status.</p>
        *          <p>The following lists of APIs are grouped according to methods that ensure idempotency.</p>
        *          <p>
        *             <b>Idempotent create APIs with a client token</b>
        *          </p>
        *          <p>The API actions in this list support idempotency with the use of a <i>client token</i>. The corresponding Amazon Web Services CLI commands
        *    also support idempotency using a client token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. To make an
        *    idempotent API request using one of these actions, specify a client token in the request. We recommend that you <i>don't</i> reuse
        *    the same client token for other API requests. If you don’t provide a client token for these APIs, a default client token is automatically provided
        *    by SDKs.</p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request using the same client token and the same parameters, the retry succeeds without performing any further actions other
        *    than returning the original resource detail data in the response.</p>
        *          <p>If you retry the request using the same client token, but one or more of the parameters are different, the retry throws a
        *     <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p>
        *          <p>Client tokens expire eight hours after a request is made. If you retry the request with the expired token, a new resource is created.</p>
        *          <p>If the original resource is deleted and you retry the request, a new resource is created.</p>
        *          <p>Idempotent create APIs with a client token:</p>
        *          <ul>
        *             <li>
        *                <p>CreateEnvironmentTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>CreateServiceTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>CreateEnvironmentAccountConnection</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Idempotent create APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request with an API from this group, and the original resource <i>hasn't</i> been modified, the retry succeeds
        *    without performing any further actions other than returning the original resource detail data in the response.</p>
        *          <p>If the original resource has been modified, the retry throws a <code>ConflictException</code>.</p>
        *          <p>If you retry with different input parameters, the retry throws a <code>ValidationException</code> with an
        *     <code>IdempotentParameterMismatch</code> error.</p>
        *          <p>Idempotent create APIs:</p>
        *          <ul>
        *             <li>
        *                <p>CreateEnvironmentTemplate</p>
        *             </li>
        *             <li>
        *                <p>CreateServiceTemplate</p>
        *             </li>
        *             <li>
        *                <p>CreateEnvironment</p>
        *             </li>
        *             <li>
        *                <p>CreateService</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Idempotent delete APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>When you retry the request with an API from this group and the resource was deleted, its metadata is returned in the response.</p>
        *          <p>If you retry and the resource doesn't exist, the response is empty.</p>
        *          <p>In both cases, the retry succeeds.</p>
        *          <p>Idempotent delete APIs:</p>
        *          <ul>
        *             <li>
        *                <p>DeleteEnvironmentTemplate</p>
        *             </li>
        *             <li>
        *                <p>DeleteEnvironmentTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>DeleteServiceTemplate</p>
        *             </li>
        *             <li>
        *                <p>DeleteServiceTemplateVersion</p>
        *             </li>
        *             <li>
        *                <p>DeleteEnvironmentAccountConnection</p>
        *             </li>
        *          </ul>
        *          <p>
        *             <b>Asynchronous idempotent delete APIs</b>
        *          </p>
        *          <p>Given a request action that has succeeded:</p>
        *          <p>If you retry the request with an API from this group, if the original request delete operation status is <code>DELETE_IN_PROGRESS</code>, the
        *    retry returns the resource detail data in the response without performing any further actions.</p>
        *          <p>If the original request delete operation is complete, a retry returns an empty response.</p>
        *          <p>Asynchronous idempotent delete APIs:</p>
        *          <ul>
        *             <li>
        *                <p>DeleteEnvironment</p>
        *             </li>
        *             <li>
        *                <p>DeleteService</p>
        *             </li>
        *          </ul>
        */
    export class ProtonClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ProtonClientResolvedConfig> {
            /**
                * The resolved configuration of ProtonClient class. This is resolved and normalized from the {@link ProtonClientConfig | constructor configuration interface}.
                */
            readonly config: ProtonClientResolvedConfig;
            constructor(configuration: ProtonClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ProtonServiceException as __BaseException } from "@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/ProtonServiceException";
    export interface AcceptEnvironmentAccountConnectionInput {
            /**
                * <p>The ID of the environment account connection.</p>
                */
            id: string | undefined;
    }
    export namespace AcceptEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptEnvironmentAccountConnectionInput) => any;
    }
    export enum EnvironmentAccountConnectionStatus {
            CONNECTED = "CONNECTED",
            PENDING = "PENDING",
            REJECTED = "REJECTED"
    }
    /**
        * <p>Detailed data of an Proton environment account connection resource.</p>
        */
    export interface EnvironmentAccountConnection {
            /**
                * <p>The ID of the environment account connection.</p>
                */
            id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
                */
            arn: string | undefined;
            /**
                * <p>The ID of the management account that's connected to the environment account connection.</p>
                */
            managementAccountId: string | undefined;
            /**
                * <p>The environment account that's connected to the environment account connection.</p>
                */
            environmentAccountId: string | undefined;
            /**
                * <p>The IAM service role that's associated with the environment account connection.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of the environment that's associated with the environment account connection.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The time when the environment account connection request was made.</p>
                */
            requestedAt: Date | undefined;
            /**
                * <p>The time when the environment account connection was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The status of the environment account connection.</p>
                */
            status: EnvironmentAccountConnectionStatus | string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated
                *       environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
                *          <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any
                *       environments running in the account.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace EnvironmentAccountConnection {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentAccountConnection) => any;
    }
    export interface AcceptEnvironmentAccountConnectionOutput {
            /**
                * <p>The environment account connection data that's returned by Proton.</p>
                */
            environmentAccountConnection: EnvironmentAccountConnection | undefined;
    }
    export namespace AcceptEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AcceptEnvironmentAccountConnectionOutput) => any;
    }
    /**
        * <p>There <i>isn't</i> sufficient access for performing this action.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    /**
        * <p>The request <i>couldn't</i> be made due to a conflicting operation or resource.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * <p>The request failed to register with the service.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            $retryable: {};
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The requested resource <i>wasn't</i> found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The request was denied due to request throttling.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            $retryable: {
                    throttling: boolean;
            };
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>The input is invalid or an out-of-range value was supplied for the input parameter.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export enum RepositoryProvider {
            BITBUCKET = "BITBUCKET",
            GITHUB = "GITHUB",
            GITHUB_ENTERPRISE = "GITHUB_ENTERPRISE"
    }
    /**
        * <p>Detail data for a repository branch.</p>
        */
    export interface RepositoryBranch {
            /**
                * <p>The Amazon Resource Name (ARN) of the repository branch.</p>
                */
            arn: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name.</p>
                */
            name: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
    }
    export namespace RepositoryBranch {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositoryBranch) => any;
    }
    /**
        * <p>The Proton pipeline service role and repository data shared across the Amazon Web Services account.</p>
        */
    export interface AccountSettings {
            /**
                * <p>The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Assumed by Proton for Amazon Web Services-managed provisioning, and by
                *       customer-owned automation for self-managed provisioning.</p>
                */
            pipelineServiceRoleArn?: string;
            /**
                * <p>The repository configured in the Amazon Web Services account for pipeline provisioning. Required it if you have environments configured for self-managed
                *       provisioning with services that include pipelines.</p>
                */
            pipelineProvisioningRepository?: RepositoryBranch;
    }
    export namespace AccountSettings {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccountSettings) => any;
    }
    export interface GetAccountSettingsInput {
    }
    export namespace GetAccountSettingsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountSettingsInput) => any;
    }
    export interface GetAccountSettingsOutput {
            /**
                * <p>The Proton pipeline service role detail data that's returned by Proton.</p>
                */
            accountSettings?: AccountSettings;
    }
    export namespace GetAccountSettingsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccountSettingsOutput) => any;
    }
    /**
        * <p>Detail input data for a repository branch.</p>
        */
    export interface RepositoryBranchInput {
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name.</p>
                */
            name: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
    }
    export namespace RepositoryBranchInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositoryBranchInput) => any;
    }
    export interface UpdateAccountSettingsInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Assumed by Proton for Amazon Web Services-managed provisioning, and by
                *       customer-owned automation for self-managed provisioning.</p>
                */
            pipelineServiceRoleArn?: string;
            /**
                * <p>A repository for pipeline provisioning. Specify it if you have environments configured for self-managed provisioning with services that include
                *       pipelines.</p>
                */
            pipelineProvisioningRepository?: RepositoryBranchInput;
    }
    export namespace UpdateAccountSettingsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountSettingsInput) => any;
    }
    export interface UpdateAccountSettingsOutput {
            /**
                * <p>The Proton pipeline service role and repository data shared across the Amazon Web Services account.</p>
                */
            accountSettings: AccountSettings | undefined;
    }
    export namespace UpdateAccountSettingsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccountSettingsOutput) => any;
    }
    export interface CancelComponentDeploymentInput {
            /**
                * <p>The name of the component with the deployment to cancel.</p>
                */
            componentName: string | undefined;
    }
    export namespace CancelComponentDeploymentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelComponentDeploymentInput) => any;
    }
    export enum DeploymentStatus {
            CANCELLED = "CANCELLED",
            CANCELLING = "CANCELLING",
            DELETE_COMPLETE = "DELETE_COMPLETE",
            DELETE_FAILED = "DELETE_FAILED",
            DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>Detailed data of an Proton component resource.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        */
    export interface Component {
            /**
                * <p>The name of the component.</p>
                */
            name: string | undefined;
            /**
                * <p>A description of the component.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the component.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the Proton environment that this component is associated with.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated with. Provided when a component is attached to a service instance.</p>
                */
            serviceName?: string;
            /**
                * <p>The name of the service instance that this component is attached to. Provided when a component is attached to a service instance.</p>
                */
            serviceInstanceName?: string;
            /**
                * <p>The time when the component was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the component was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The time when a deployment of the component was last attempted.</p>
                */
            lastDeploymentAttemptedAt?: Date;
            /**
                * <p>The time when the component was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt?: Date;
            /**
                * <p>The component deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>The message associated with the component deployment status.</p>
                */
            deploymentStatusMessage?: string;
            /**
                * <p>The service spec that the component uses to access service inputs. Provided when a component is attached to a service instance.</p>
                */
            serviceSpec?: string;
    }
    export namespace Component {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Component) => any;
    }
    export interface CancelComponentDeploymentOutput {
            /**
                * <p>The detailed data of the component with the deployment that is being canceled.</p>
                */
            component: Component | undefined;
    }
    export namespace CancelComponentDeploymentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelComponentDeploymentOutput) => any;
    }
    export interface CancelEnvironmentDeploymentInput {
            /**
                * <p>The name of the environment with the deployment to cancel.</p>
                */
            environmentName: string | undefined;
    }
    export namespace CancelEnvironmentDeploymentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelEnvironmentDeploymentInput) => any;
    }
    export enum Provisioning {
            CUSTOMER_MANAGED = "CUSTOMER_MANAGED"
    }
    /**
        * <p>Detailed data of an Proton environment resource. An Proton environment is a set of resources shared across Proton services.</p>
        */
    export interface Environment {
            /**
                * <p>The name of the environment.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the environment.</p>
                */
            description?: string;
            /**
                * <p>The time when the environment was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when a deployment of the environment was last attempted.</p>
                */
            lastDeploymentAttemptedAt: Date | undefined;
            /**
                * <p>The time when the environment was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt: Date | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment.</p>
                */
            arn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the environment template.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the environment template.</p>
                */
            templateMinorVersion: string | undefined;
            /**
                * <p>The environment deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>An environment deployment status message.</p>
                */
            deploymentStatusMessage?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.</p>
                */
            protonServiceRoleArn?: string;
            /**
                * <p>The ID of the environment account connection that's used to provision infrastructure resources in an environment account.</p>
                */
            environmentAccountConnectionId?: string;
            /**
                * <p>The ID of the environment account that the environment infrastructure resources are provisioned in.</p>
                */
            environmentAccountId?: string;
            /**
                * <p>The environment spec.</p>
                */
            spec?: string;
            /**
                * <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
                */
            provisioning?: Provisioning | string;
            /**
                * <p>The infrastructure repository that you use to host your rendered infrastructure templates for self-managed provisioning.</p>
                */
            provisioningRepository?: RepositoryBranch;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It
                *       determines the scope of infrastructure that a component can provision.</p>
                *          <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace Environment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Environment) => any;
    }
    export interface CancelEnvironmentDeploymentOutput {
            /**
                * <p>The environment summary data that's returned by Proton.</p>
                */
            environment: Environment | undefined;
    }
    export namespace CancelEnvironmentDeploymentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelEnvironmentDeploymentOutput) => any;
    }
    export interface CancelServiceInstanceDeploymentInput {
            /**
                * <p>The name of the service instance with the deployment to cancel.</p>
                */
            serviceInstanceName: string | undefined;
            /**
                * <p>The name of the service with the service instance deployment to cancel.</p>
                */
            serviceName: string | undefined;
    }
    export namespace CancelServiceInstanceDeploymentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelServiceInstanceDeploymentInput) => any;
    }
    /**
        * <p>Detailed data of an Proton service instance resource.</p>
        */
    export interface ServiceInstance {
            /**
                * <p>The name of the service instance.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the service instance.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the service instance was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when a deployment of the service instance was last attempted.</p>
                */
            lastDeploymentAttemptedAt: Date | undefined;
            /**
                * <p>The time when the service instance was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt: Date | undefined;
            /**
                * <p>The name of the service that the service instance belongs to.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The name of the environment that the service instance was deployed into.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The name of the service template that was used to create the service instance.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the service template that was used to create the service instance.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the service template that was used to create the service instance.</p>
                */
            templateMinorVersion: string | undefined;
            /**
                * <p>The service instance deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>The message associated with the service instance deployment status.</p>
                */
            deploymentStatusMessage?: string;
            /**
                * <p>The service spec that was used to create the service instance.</p>
                */
            spec?: string;
    }
    export namespace ServiceInstance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceInstance) => any;
    }
    export interface CancelServiceInstanceDeploymentOutput {
            /**
                * <p>The service instance summary data that's returned by Proton.</p>
                */
            serviceInstance: ServiceInstance | undefined;
    }
    export namespace CancelServiceInstanceDeploymentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelServiceInstanceDeploymentOutput) => any;
    }
    export interface CancelServicePipelineDeploymentInput {
            /**
                * <p>The name of the service with the service pipeline deployment to cancel.</p>
                */
            serviceName: string | undefined;
    }
    export namespace CancelServicePipelineDeploymentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelServicePipelineDeploymentInput) => any;
    }
    /**
        * <p>Detailed data of an Proton service instance pipeline resource.</p>
        */
    export interface ServicePipeline {
            /**
                * <p>The Amazon Resource Name (ARN) of the service pipeline.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the service pipeline was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when a deployment of the service pipeline was last attempted.</p>
                */
            lastDeploymentAttemptedAt: Date | undefined;
            /**
                * <p>The time when the service pipeline was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt: Date | undefined;
            /**
                * <p>The name of the service template that was used to create the service pipeline.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the service template that was used to create the service pipeline.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the service template that was used to create the service pipeline.</p>
                */
            templateMinorVersion: string | undefined;
            /**
                * <p>The deployment status of the service pipeline.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>A service pipeline deployment status message.</p>
                */
            deploymentStatusMessage?: string;
            /**
                * <p>The service spec that was used to create the service pipeline.</p>
                */
            spec?: string;
    }
    export namespace ServicePipeline {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServicePipeline) => any;
    }
    export interface CancelServicePipelineDeploymentOutput {
            /**
                * <p>The service pipeline detail data that's returned by Proton.</p>
                */
            pipeline: ServicePipeline | undefined;
    }
    export namespace CancelServicePipelineDeploymentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelServicePipelineDeploymentOutput) => any;
    }
    export interface ListComponentOutputsInput {
            /**
                * <p>The name of the component whose outputs you want.</p>
                */
            componentName: string | undefined;
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListComponentOutputsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentOutputsInput) => any;
    }
    /**
        * <p>An infrastructure as code defined resource output.</p>
        */
    export interface Output {
            /**
                * <p>The output key.</p>
                */
            key?: string;
            /**
                * <p>The output value.</p>
                */
            valueString?: string;
    }
    export namespace Output {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Output) => any;
    }
    export interface ListComponentOutputsOutput {
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of component Infrastructure as Code (IaC) outputs.</p>
                */
            outputs: Output[] | undefined;
    }
    export namespace ListComponentOutputsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentOutputsOutput) => any;
    }
    export interface ListComponentProvisionedResourcesInput {
            /**
                * <p>The name of the component whose provisioned resources you want.</p>
                */
            componentName: string | undefined;
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources
                *       that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListComponentProvisionedResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentProvisionedResourcesInput) => any;
    }
    export enum ProvisionedResourceEngine {
            CLOUDFORMATION = "CLOUDFORMATION",
            TERRAFORM = "TERRAFORM"
    }
    /**
        * <p>Detail data for a provisioned resource.</p>
        */
    export interface ProvisionedResource {
            /**
                * <p>The provisioned resource name.</p>
                */
            name?: string;
            /**
                * <p>The provisioned resource identifier.</p>
                */
            identifier?: string;
            /**
                * <p>The resource provisioning engine. At this time, <code>CLOUDFORMATION</code> can be used for Amazon Web Services-managed provisioning, and <code>TERRAFORM</code> can
                *       be used for self-managed provisioning.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a> in the <i>Proton Administrator Guide</i>.</p>
                */
            provisioningEngine?: ProvisionedResourceEngine | string;
    }
    export namespace ProvisionedResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProvisionedResource) => any;
    }
    export interface ListComponentProvisionedResourcesOutput {
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of
                *       provisioned resources.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of provisioned resources for a component.</p>
                */
            provisionedResources: ProvisionedResource[] | undefined;
    }
    export namespace ListComponentProvisionedResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentProvisionedResourcesOutput) => any;
    }
    /**
        * <p>A description of a resource tag.</p>
        */
    export interface Tag {
            /**
                * <p>The key of the resource tag.</p>
                */
            key: string | undefined;
            /**
                * <p>The value of the resource tag.</p>
                */
            value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateComponentInput {
            /**
                * <p>The customer-provided name of the component.</p>
                */
            name: string | undefined;
            /**
                * <p>An optional customer-provided description of the component.</p>
                */
            description?: string;
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated with. If you don't specify this, the component isn't attached to any
                *       service instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.</p>
                */
            serviceName?: string;
            /**
                * <p>The name of the service instance that you want to attach this component to. If you don't specify this, the component isn't attached to any service
                *       instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.</p>
                */
            serviceInstanceName?: string;
            /**
                * <p>The name of the Proton environment that you want to associate this component with. You must specify this when you don't specify
                *         <code>serviceInstanceName</code> and <code>serviceName</code>.</p>
                */
            environmentName?: string;
            /**
                * <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p>
                *          <note>
                *             <p>Components support a single IaC file, even if you use Terraform as your template language.</p>
                *          </note>
                */
            templateFile: string | undefined;
            /**
                * <p>A path to a manifest file that lists the Infrastructure as Code (IaC) file, template language, and rendering engine for infrastructure that a custom
                *       component provisions.</p>
                */
            manifest: string | undefined;
            /**
                * <p>The service spec that you want the component to use to access service inputs. Set this only when you attach the component to a service
                *       instance.</p>
                */
            serviceSpec?: string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton component. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateComponentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateComponentInput) => any;
    }
    export interface CreateComponentOutput {
            /**
                * <p>The detailed data of the created component.</p>
                */
            component: Component | undefined;
    }
    export namespace CreateComponentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateComponentOutput) => any;
    }
    /**
        * <p>A quota was exceeded. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-limits.html">Proton Quotas</a> in the <i>Proton Administrator
        *     Guide</i>.</p>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    export interface DeleteComponentInput {
            /**
                * <p>The name of the component to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteComponentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteComponentInput) => any;
    }
    export interface DeleteComponentOutput {
            /**
                * <p>The detailed data of the component being deleted.</p>
                */
            component?: Component;
    }
    export namespace DeleteComponentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteComponentOutput) => any;
    }
    export interface GetComponentInput {
            /**
                * <p>The name of the component that you want to get the detailed data for.</p>
                */
            name: string | undefined;
    }
    export namespace GetComponentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetComponentInput) => any;
    }
    export interface GetComponentOutput {
            /**
                * <p>The detailed data of the requested component.</p>
                */
            component?: Component;
    }
    export namespace GetComponentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetComponentOutput) => any;
    }
    export interface ListComponentsInput {
            /**
                * <p>A token that indicates the location of the next component in the array of components, after the list of components that was previously
                *       requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The name of an environment for result list filtering. Proton returns components associated with the environment or attached to service instances
                *       running in it.</p>
                */
            environmentName?: string;
            /**
                * <p>The name of a service for result list filtering. Proton returns components attached to service instances of the service.</p>
                */
            serviceName?: string;
            /**
                * <p>The name of a service instance for result list filtering. Proton returns the component attached to the service instance, if any.</p>
                */
            serviceInstanceName?: string;
            /**
                * <p>The maximum number of components to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListComponentsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentsInput) => any;
    }
    /**
        * <p>Summary data of an Proton component resource.</p>
        *          <p>For more information about components, see
        *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
        *   <i>Proton Administrator Guide</i>.</p>
        */
    export interface ComponentSummary {
            /**
                * <p>The name of the component.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the component.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the Proton environment that this component is associated with.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated with. Provided when a component is attached to a service instance.</p>
                */
            serviceName?: string;
            /**
                * <p>The name of the service instance that this component is attached to. Provided when a component is attached to a service instance.</p>
                */
            serviceInstanceName?: string;
            /**
                * <p>The time when the component was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the component was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The time when a deployment of the component was last attempted.</p>
                */
            lastDeploymentAttemptedAt?: Date;
            /**
                * <p>The time when the component was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt?: Date;
            /**
                * <p>The component deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>The message associated with the component deployment status.</p>
                */
            deploymentStatusMessage?: string;
    }
    export namespace ComponentSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ComponentSummary) => any;
    }
    export interface ListComponentsOutput {
            /**
                * <p>A token that indicates the location of the next component in the array of components, after the current requested list of components.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of components with summary data.</p>
                */
            components: ComponentSummary[] | undefined;
    }
    export namespace ListComponentsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListComponentsOutput) => any;
    }
    export enum ComponentDeploymentUpdateType {
            CURRENT_VERSION = "CURRENT_VERSION",
            NONE = "NONE"
    }
    export interface UpdateComponentInput {
            /**
                * <p>The name of the component to update.</p>
                */
            name: string | undefined;
            /**
                * <p>The deployment type. It defines the mode for updating a component, as follows:</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated. You can only specify
                *               <code>description</code> in this mode.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the component is deployed and updated with the new <code>serviceSpec</code>, <code>templateSource</code>, and/or <code>type</code>
                *             that you provide. Only requested parameters are updated.</p>
                *             </dd>
                *          </dl>
                */
            deploymentType: ComponentDeploymentUpdateType | string | undefined;
            /**
                * <p>An optional customer-provided description of the component.</p>
                */
            description?: string;
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated with. Don't specify to keep the component's current service instance
                *       attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both
                *         <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p>
                */
            serviceName?: string;
            /**
                * <p>The name of the service instance that you want to attach this component to. Don't specify to keep the component's current service instance attachment.
                *       Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both
                *         <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p>
                */
            serviceInstanceName?: string;
            /**
                * <p>The service spec that you want the component to use to access service inputs. Set this only when the component is attached to a service
                *       instance.</p>
                */
            serviceSpec?: string;
            /**
                * <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p>
                *          <note>
                *             <p>Components support a single IaC file, even if you use Terraform as your template language.</p>
                *          </note>
                */
            templateFile?: string;
    }
    export namespace UpdateComponentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateComponentInput) => any;
    }
    export interface UpdateComponentOutput {
            /**
                * <p>The detailed data of the updated component.</p>
                */
            component: Component | undefined;
    }
    export namespace UpdateComponentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateComponentOutput) => any;
    }
    export interface CreateEnvironmentAccountConnectionInput {
            /**
                * <p>When included, if two identical requests are made with the same client token, Proton returns the environment account connection that the first
                *       request created.</p>
                */
            clientToken?: string;
            /**
                * <p>The ID of the management account that accepts or rejects the environment account connection. You create and manage the Proton environment in this
                *       account. If the management account accepts the environment account connection, Proton can use the associated IAM role to provision environment
                *       infrastructure resources in the associated environment account.</p>
                */
            managementAccountId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. Proton uses this role to provision infrastructure
                *       resources in the associated environment account.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of the Proton environment that's created in the associated management account.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton resources and tagging</a> in the
                *         <i>Proton Administrator Guide</i>.</p>
                */
            tags?: Tag[];
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated
                *       environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
                *          <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in this
                *       account.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace CreateEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentAccountConnectionInput) => any;
    }
    export interface CreateEnvironmentAccountConnectionOutput {
            /**
                * <p>The environment account connection detail data that's returned by Proton.</p>
                */
            environmentAccountConnection: EnvironmentAccountConnection | undefined;
    }
    export namespace CreateEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentAccountConnectionOutput) => any;
    }
    export interface DeleteEnvironmentAccountConnectionInput {
            /**
                * <p>The ID of the environment account connection to delete.</p>
                */
            id: string | undefined;
    }
    export namespace DeleteEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentAccountConnectionInput) => any;
    }
    export interface DeleteEnvironmentAccountConnectionOutput {
            /**
                * <p>The detailed data of the environment account connection being deleted.</p>
                */
            environmentAccountConnection?: EnvironmentAccountConnection;
    }
    export namespace DeleteEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentAccountConnectionOutput) => any;
    }
    export interface GetEnvironmentAccountConnectionInput {
            /**
                * <p>The ID of the environment account connection that you want to get the detailed data for.</p>
                */
            id: string | undefined;
    }
    export namespace GetEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentAccountConnectionInput) => any;
    }
    export interface GetEnvironmentAccountConnectionOutput {
            /**
                * <p>The detailed data of the requested environment account connection.</p>
                */
            environmentAccountConnection: EnvironmentAccountConnection | undefined;
    }
    export namespace GetEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentAccountConnectionOutput) => any;
    }
    export enum EnvironmentAccountConnectionRequesterAccountType {
            ENVIRONMENT_ACCOUNT = "ENVIRONMENT_ACCOUNT",
            MANAGEMENT_ACCOUNT = "MANAGEMENT_ACCOUNT"
    }
    export interface ListEnvironmentAccountConnectionsInput {
            /**
                * <p>The type of account making the <code>ListEnvironmentAccountConnections</code> request.</p>
                */
            requestedBy: EnvironmentAccountConnectionRequesterAccountType | string | undefined;
            /**
                * <p>The environment name that's associated with each listed environment account connection.</p>
                */
            environmentName?: string;
            /**
                * <p>The status details for each listed environment account connection.</p>
                */
            statuses?: (EnvironmentAccountConnectionStatus | string)[];
            /**
                * <p>A token that indicates the location of the next environment account connection in the array of environment account connections, after the list of
                *       environment account connections that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of environment account connections to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListEnvironmentAccountConnectionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentAccountConnectionsInput) => any;
    }
    /**
        * <p>Summary data of an Proton environment account connection resource.</p>
        */
    export interface EnvironmentAccountConnectionSummary {
            /**
                * <p>The ID of the environment account connection.</p>
                */
            id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
                */
            arn: string | undefined;
            /**
                * <p>The ID of the management account that's connected to the environment account connection.</p>
                */
            managementAccountId: string | undefined;
            /**
                * <p>The ID of the environment account that's connected to the environment account connection.</p>
                */
            environmentAccountId: string | undefined;
            /**
                * <p>The IAM service role that's associated with the environment account connection.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The name of the environment that's associated with the environment account connection.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The time when the environment account connection request was made.</p>
                */
            requestedAt: Date | undefined;
            /**
                * <p>The time when the environment account connection was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The status of the environment account connection.</p>
                */
            status: EnvironmentAccountConnectionStatus | string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated
                *       environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
                *          <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any
                *       environments running in the account.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace EnvironmentAccountConnectionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentAccountConnectionSummary) => any;
    }
    export interface ListEnvironmentAccountConnectionsOutput {
            /**
                * <p>An array of environment account connections with details that's returned by Proton. </p>
                */
            environmentAccountConnections: EnvironmentAccountConnectionSummary[] | undefined;
            /**
                * <p>A token that indicates the location of the next environment account connection in the array of environment account connections, after the current
                *       requested list of environment account connections.</p>
                */
            nextToken?: string;
    }
    export namespace ListEnvironmentAccountConnectionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentAccountConnectionsOutput) => any;
    }
    export interface RejectEnvironmentAccountConnectionInput {
            /**
                * <p>The ID of the environment account connection to reject.</p>
                */
            id: string | undefined;
    }
    export namespace RejectEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectEnvironmentAccountConnectionInput) => any;
    }
    export interface RejectEnvironmentAccountConnectionOutput {
            /**
                * <p>The environment connection account detail data that's returned by Proton.</p>
                */
            environmentAccountConnection: EnvironmentAccountConnection | undefined;
    }
    export namespace RejectEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RejectEnvironmentAccountConnectionOutput) => any;
    }
    export interface UpdateEnvironmentAccountConnectionInput {
            /**
                * <p>The ID of the environment account connection to update.</p>
                */
            id: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that's associated with the environment account connection to update.</p>
                */
            roleArn?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated
                *       environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
                *          <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any
                *       environments running in the account.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace UpdateEnvironmentAccountConnectionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentAccountConnectionInput) => any;
    }
    export interface UpdateEnvironmentAccountConnectionOutput {
            /**
                * <p>The environment account connection detail data that's returned by Proton.</p>
                */
            environmentAccountConnection: EnvironmentAccountConnection | undefined;
    }
    export namespace UpdateEnvironmentAccountConnectionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentAccountConnectionOutput) => any;
    }
    export interface ListEnvironmentOutputsInput {
            /**
                * <p>The environment name.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>A token that indicates the location of the next environment output in the array of environment outputs, after the list of environment outputs that was
                *       previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListEnvironmentOutputsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentOutputsInput) => any;
    }
    export interface ListEnvironmentOutputsOutput {
            /**
                * <p>A token that indicates the location of the next environment output in the array of environment outputs, after the current requested list of
                *       environment outputs.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of environment outputs with detail data.</p>
                */
            outputs: Output[] | undefined;
    }
    export namespace ListEnvironmentOutputsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentOutputsOutput) => any;
    }
    export interface ListEnvironmentProvisionedResourcesInput {
            /**
                * <p>The environment name.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>A token that indicates the location of the next environment provisioned resource in the array of environment provisioned resources, after the list of
                *       environment provisioned resources that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListEnvironmentProvisionedResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentProvisionedResourcesInput) => any;
    }
    export interface ListEnvironmentProvisionedResourcesOutput {
            /**
                * <p>A token that indicates the location of the next environment provisioned resource in the array of provisioned resources, after the current requested
                *       list of environment provisioned resources.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of environment provisioned resources.</p>
                */
            provisionedResources: ProvisionedResource[] | undefined;
    }
    export namespace ListEnvironmentProvisionedResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentProvisionedResourcesOutput) => any;
    }
    export interface CreateEnvironmentInput {
            /**
                * <p>The name of the environment.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the environment template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-templates.html">Environment Templates</a> in the <i>Proton Administrator Guide</i>.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the environment template.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the environment template.</p>
                */
            templateMinorVersion?: string;
            /**
                * <p>A description of the environment that's being created and deployed.</p>
                */
            description?: string;
            /**
                * <p>A YAML formatted string that provides inputs as defined in the environment template bundle schema file. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> in the <i>Proton Administrator
                *       Guide</i>.</p>
                */
            spec: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.</p>
                *          <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or
                *         <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
                */
            protonServiceRoleArn?: string;
            /**
                * <p>The ID of the environment account connection that you provide if you're provisioning your environment infrastructure resources to an environment
                *       account. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account
                *         connections</a> in the <i>Proton Administrator guide</i>.</p>
                *          <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or
                *         <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
                */
            environmentAccountConnectionId?: string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton environment. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
            /**
                * <p>The infrastructure repository that you use to host your rendered infrastructure templates for self-managed provisioning.</p>
                *          <p>To use self-managed provisioning for the environment, specify this parameter and omit the <code>environmentAccountConnectionId</code> and
                *         <code>protonServiceRoleArn</code> parameters.</p>
                */
            provisioningRepository?: RepositoryBranchInput;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It
                *       determines the scope of infrastructure that a component can provision.</p>
                *          <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with this environment.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace CreateEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentInput) => any;
    }
    export interface CreateEnvironmentOutput {
            /**
                * <p>The environment detail data that's returned by Proton.</p>
                */
            environment: Environment | undefined;
    }
    export namespace CreateEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentOutput) => any;
    }
    export interface DeleteEnvironmentInput {
            /**
                * <p>The name of the environment to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentInput) => any;
    }
    export interface DeleteEnvironmentOutput {
            /**
                * <p>The detailed data of the environment being deleted.</p>
                */
            environment?: Environment;
    }
    export namespace DeleteEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentOutput) => any;
    }
    export interface GetEnvironmentInput {
            /**
                * <p>The name of the environment that you want to get the detailed data for.</p>
                */
            name: string | undefined;
    }
    export namespace GetEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentInput) => any;
    }
    export interface GetEnvironmentOutput {
            /**
                * <p>The detailed data of the requested environment.</p>
                */
            environment: Environment | undefined;
    }
    export namespace GetEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentOutput) => any;
    }
    /**
        * <p>A search filter for environment templates.</p>
        */
    export interface EnvironmentTemplateFilter {
            /**
                * <p>Include <code>templateName</code> to filter search for a template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>Include <code>majorVersion</code> to filter search for a major version.</p>
                */
            majorVersion: string | undefined;
    }
    export namespace EnvironmentTemplateFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentTemplateFilter) => any;
    }
    export interface ListEnvironmentsInput {
            /**
                * <p>A token that indicates the location of the next environment in the array of environments, after the list of environments that was previously
                *       requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of environments to list.</p>
                */
            maxResults?: number;
            /**
                * <p>An array of the versions of the environment template.</p>
                */
            environmentTemplates?: EnvironmentTemplateFilter[];
    }
    export namespace ListEnvironmentsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentsInput) => any;
    }
    /**
        * <p>Summary data of an Proton environment resource. An Proton environment is a set of resources shared across Proton services.</p>
        */
    export interface EnvironmentSummary {
            /**
                * <p>The name of the environment.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the environment.</p>
                */
            description?: string;
            /**
                * <p>The time when the environment was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when a deployment of the environment was last attempted.</p>
                */
            lastDeploymentAttemptedAt: Date | undefined;
            /**
                * <p>The time when the environment was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt: Date | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the environment template.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the environment template.</p>
                */
            templateMinorVersion: string | undefined;
            /**
                * <p>The environment deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>An environment deployment status message.</p>
                */
            deploymentStatusMessage?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.</p>
                */
            protonServiceRoleArn?: string;
            /**
                * <p>The ID of the environment account connection that the environment is associated with.</p>
                */
            environmentAccountConnectionId?: string;
            /**
                * <p>The ID of the environment account that the environment infrastructure resources are provisioned in.</p>
                */
            environmentAccountId?: string;
            /**
                * <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
                */
            provisioning?: Provisioning | string;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It
                *       determines the scope of infrastructure that a component can provision.</p>
                *          <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace EnvironmentSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentSummary) => any;
    }
    export interface ListEnvironmentsOutput {
            /**
                * <p>A token that indicates the location of the next environment in the array of environments, after the current requested list of environments.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of environment detail data summaries.</p>
                */
            environments: EnvironmentSummary[] | undefined;
    }
    export namespace ListEnvironmentsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentsOutput) => any;
    }
    export enum DeploymentUpdateType {
            CURRENT_VERSION = "CURRENT_VERSION",
            MAJOR_VERSION = "MAJOR_VERSION",
            MINOR_VERSION = "MINOR_VERSION",
            NONE = "NONE"
    }
    export interface UpdateEnvironmentInput {
            /**
                * <p>The name of the environment to update.</p>
                */
            name: string | undefined;
            /**
                * <p>A description of the environment update.</p>
                */
            description?: string;
            /**
                * <p>The formatted specification that defines the update.</p>
                */
            spec?: string;
            /**
                * <p>The major version of the environment to update.</p>
                */
            templateMajorVersion?: string;
            /**
                * <p>The minor version of the environment to update.</p>
                */
            templateMinorVersion?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make API calls to other services your behalf.</p>
                */
            protonServiceRoleArn?: string;
            /**
                * <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated.
                *               <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MINOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in
                *             use, by default. You can also specify a different minor version of the current major version in use.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MAJOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template,
                *             by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p>
                *             </dd>
                *          </dl>
                */
            deploymentType: DeploymentUpdateType | string | undefined;
            /**
                * <p>The ID of the environment account connection.</p>
                *          <p>You can only update to a new environment account connection if it was created in the same environment account that the current environment account
                *       connection was created in and is associated with the current environment.</p>
                */
            environmentAccountConnectionId?: string;
            /**
                * <p>The infrastructure repository that you use to host your rendered infrastructure templates for self-managed provisioning.</p>
                */
            provisioningRepository?: RepositoryBranchInput;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It
                *       determines the scope of infrastructure that a component can provision.</p>
                *          <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            componentRoleArn?: string;
    }
    export namespace UpdateEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentInput) => any;
    }
    export interface UpdateEnvironmentOutput {
            /**
                * <p>The environment detail data that's returned by Proton.</p>
                */
            environment: Environment | undefined;
    }
    export namespace UpdateEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentOutput) => any;
    }
    export interface CreateEnvironmentTemplateInput {
            /**
                * <p>The name of the environment template.</p>
                */
            name: string | undefined;
            /**
                * <p>The environment template name as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the environment template.</p>
                */
            description?: string;
            /**
                * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
                */
            encryptionKey?: string;
            /**
                * <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
                */
            provisioning?: Provisioning | string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateEnvironmentTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentTemplateInput) => any;
    }
    /**
        * <p>The environment template data.</p>
        */
    export interface EnvironmentTemplate {
            /**
                * <p>The name of the environment template.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the environment template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the environment template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The name of the environment template as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the environment template.</p>
                */
            description?: string;
            /**
                * <p>The ID of the recommended version of the environment template.</p>
                */
            recommendedVersion?: string;
            /**
                * <p>The customer provided encryption key for the environment template.</p>
                */
            encryptionKey?: string;
            /**
                * <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
                */
            provisioning?: Provisioning | string;
    }
    export namespace EnvironmentTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentTemplate) => any;
    }
    export interface CreateEnvironmentTemplateOutput {
            /**
                * <p>The environment template detail data that's returned by Proton.</p>
                */
            environmentTemplate: EnvironmentTemplate | undefined;
    }
    export namespace CreateEnvironmentTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentTemplateOutput) => any;
    }
    export interface DeleteEnvironmentTemplateInput {
            /**
                * <p>The name of the environment template to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteEnvironmentTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentTemplateInput) => any;
    }
    export interface DeleteEnvironmentTemplateOutput {
            /**
                * <p>The detailed data of the environment template being deleted.</p>
                */
            environmentTemplate?: EnvironmentTemplate;
    }
    export namespace DeleteEnvironmentTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentTemplateOutput) => any;
    }
    export interface GetEnvironmentTemplateInput {
            /**
                * <p>The name of the environment template that you want to get the detailed data for.</p>
                */
            name: string | undefined;
    }
    export namespace GetEnvironmentTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentTemplateInput) => any;
    }
    export interface GetEnvironmentTemplateOutput {
            /**
                * <p>The detailed data of the requested environment template.</p>
                */
            environmentTemplate: EnvironmentTemplate | undefined;
    }
    export namespace GetEnvironmentTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentTemplateOutput) => any;
    }
    export interface ListEnvironmentTemplatesInput {
            /**
                * <p>A token that indicates the location of the next environment template in the array of environment templates, after the list of environment templates
                *       that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of environment templates to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListEnvironmentTemplatesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentTemplatesInput) => any;
    }
    /**
        * <p>The environment template data.</p>
        */
    export interface EnvironmentTemplateSummary {
            /**
                * <p>The name of the environment template.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the environment template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the environment template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the environment template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The name of the environment template as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the environment template.</p>
                */
            description?: string;
            /**
                * <p>The recommended version of the environment template.</p>
                */
            recommendedVersion?: string;
            /**
                * <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
                */
            provisioning?: Provisioning | string;
    }
    export namespace EnvironmentTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentTemplateSummary) => any;
    }
    export interface ListEnvironmentTemplatesOutput {
            /**
                * <p>A token that indicates the location of the next environment template in the array of environment templates, after the current requested list of
                *       environment templates.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of environment templates with detail data.</p>
                */
            templates: EnvironmentTemplateSummary[] | undefined;
    }
    export namespace ListEnvironmentTemplatesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentTemplatesOutput) => any;
    }
    export interface UpdateEnvironmentTemplateInput {
            /**
                * <p>The name of the environment template to update.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the environment template to update as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the environment template update.</p>
                */
            description?: string;
    }
    export namespace UpdateEnvironmentTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentTemplateInput) => any;
    }
    export interface UpdateEnvironmentTemplateOutput {
            /**
                * <p>The environment template detail data that's returned by Proton.</p>
                */
            environmentTemplate: EnvironmentTemplate | undefined;
    }
    export namespace UpdateEnvironmentTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentTemplateOutput) => any;
    }
    /**
        * <p>Template bundle S3 bucket data.</p>
        */
    export interface S3ObjectSource {
            /**
                * <p>The name of the S3 bucket that contains a template bundle.</p>
                */
            bucket: string | undefined;
            /**
                * <p>The path to the S3 bucket that contains a template bundle.</p>
                */
            key: string | undefined;
    }
    export namespace S3ObjectSource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ObjectSource) => any;
    }
    /**
        * <p>Template version source data.</p>
        */
    export type TemplateVersionSourceInput = TemplateVersionSourceInput.S3Member | TemplateVersionSourceInput.$UnknownMember;
    export namespace TemplateVersionSourceInput {
            /**
                * <p>An S3 source object that includes the template bundle S3 path and name for a template minor version.</p>
                */
            interface S3Member {
                    s3: S3ObjectSource;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    s3?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    s3: (value: S3ObjectSource) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: TemplateVersionSourceInput, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TemplateVersionSourceInput) => any;
    }
    export interface CreateEnvironmentTemplateVersionInput {
            /**
                * <p>When included, if two identical requests are made with the same client token, Proton returns the environment template version that the first
                *       request created.</p>
                */
            clientToken?: string;
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>A description of the new version of an environment template.</p>
                */
            description?: string;
            /**
                * <p>To create a new minor version of the environment template, include <code>major Version</code>.</p>
                *          <p>To create a new major and minor version of the environment template, exclude <code>major Version</code>.</p>
                */
            majorVersion?: string;
            /**
                * <p>An object that includes the template bundle S3 bucket path and name for the new version of an template.</p>
                */
            source: TemplateVersionSourceInput | undefined;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton environment template version. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateEnvironmentTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentTemplateVersionInput) => any;
    }
    export enum TemplateVersionStatus {
            DRAFT = "DRAFT",
            PUBLISHED = "PUBLISHED",
            REGISTRATION_FAILED = "REGISTRATION_FAILED",
            REGISTRATION_IN_PROGRESS = "REGISTRATION_IN_PROGRESS"
    }
    /**
        * <p>The environment template version data.</p>
        */
    export interface EnvironmentTemplateVersion {
            /**
                * <p>The name of the version of an environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The latest major version that's associated with the version of an environment template.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The minor version of an environment template.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>The recommended minor version of the environment template.</p>
                */
            recommendedMinorVersion?: string;
            /**
                * <p>The status of the version of an environment template.</p>
                */
            status: TemplateVersionStatus | string | undefined;
            /**
                * <p>The status message of the version of an environment template.</p>
                */
            statusMessage?: string;
            /**
                * <p>A description of the minor version of an environment template.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the version of an environment template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the version of an environment template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the version of an environment template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The schema of the version of an environment template.</p>
                */
            schema?: string;
    }
    export namespace EnvironmentTemplateVersion {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentTemplateVersion) => any;
    }
    export interface CreateEnvironmentTemplateVersionOutput {
            /**
                * <p>The environment template detail data that's returned by Proton.</p>
                */
            environmentTemplateVersion: EnvironmentTemplateVersion | undefined;
    }
    export namespace CreateEnvironmentTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentTemplateVersionOutput) => any;
    }
    export interface DeleteEnvironmentTemplateVersionInput {
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The environment template major version to delete.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The environment template minor version to delete.</p>
                */
            minorVersion: string | undefined;
    }
    export namespace DeleteEnvironmentTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentTemplateVersionInput) => any;
    }
    export interface DeleteEnvironmentTemplateVersionOutput {
            /**
                * <p>The detailed data of the environment template version being deleted.</p>
                */
            environmentTemplateVersion?: EnvironmentTemplateVersion;
    }
    export namespace DeleteEnvironmentTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentTemplateVersionOutput) => any;
    }
    export interface GetEnvironmentTemplateVersionInput {
            /**
                * <p>The name of the environment template a version of which you want to get detailed data for..</p>
                */
            templateName: string | undefined;
            /**
                * <p>To get environment template major version detail data, include <code>major Version</code>.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>To get environment template minor version detail data, include <code>minorVersion</code>.</p>
                */
            minorVersion: string | undefined;
    }
    export namespace GetEnvironmentTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentTemplateVersionInput) => any;
    }
    export interface GetEnvironmentTemplateVersionOutput {
            /**
                * <p>The detailed data of the requested environment template version.</p>
                */
            environmentTemplateVersion: EnvironmentTemplateVersion | undefined;
    }
    export namespace GetEnvironmentTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentTemplateVersionOutput) => any;
    }
    export interface ListEnvironmentTemplateVersionsInput {
            /**
                * <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the
                *       list of major or minor versions that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of major or minor versions of an environment template to list.</p>
                */
            maxResults?: number;
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>To view a list of minor of versions under a major version of an environment template, include <code>major Version</code>.</p>
                *          <p>To view a list of major versions of an environment template, <i>exclude</i>
                *             <code>major Version</code>.</p>
                */
            majorVersion?: string;
    }
    export namespace ListEnvironmentTemplateVersionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentTemplateVersionsInput) => any;
    }
    /**
        * <p>A summary of the version of an environment template detail data.</p>
        */
    export interface EnvironmentTemplateVersionSummary {
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The latest major version that's associated with the version of an environment template.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The version of an environment template.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>The recommended minor version of the environment template.</p>
                */
            recommendedMinorVersion?: string;
            /**
                * <p>The status of the version of an environment template.</p>
                */
            status: TemplateVersionStatus | string | undefined;
            /**
                * <p>The status message of the version of an environment template.</p>
                */
            statusMessage?: string;
            /**
                * <p>A description of the version of an environment template.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the version of an environment template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the version of an environment template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the version of an environment template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
    }
    export namespace EnvironmentTemplateVersionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EnvironmentTemplateVersionSummary) => any;
    }
    export interface ListEnvironmentTemplateVersionsOutput {
            /**
                * <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the
                *       list of major or minor versions that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of major or minor versions of an environment template detail data.</p>
                */
            templateVersions: EnvironmentTemplateVersionSummary[] | undefined;
    }
    export namespace ListEnvironmentTemplateVersionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentTemplateVersionsOutput) => any;
    }
    export interface UpdateEnvironmentTemplateVersionInput {
            /**
                * <p>The name of the environment template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>To update a major version of an environment template, include <code>major Version</code>.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>To update a minor version of an environment template, include <code>minorVersion</code>.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>A description of environment template version to update.</p>
                */
            description?: string;
            /**
                * <p>The status of the environment template minor version to update.</p>
                */
            status?: TemplateVersionStatus | string;
    }
    export namespace UpdateEnvironmentTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentTemplateVersionInput) => any;
    }
    export interface UpdateEnvironmentTemplateVersionOutput {
            /**
                * <p>The environment template version detail data that's returned by Proton.</p>
                */
            environmentTemplateVersion: EnvironmentTemplateVersion | undefined;
    }
    export namespace UpdateEnvironmentTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentTemplateVersionOutput) => any;
    }
    export enum SyncType {
            TEMPLATE_SYNC = "TEMPLATE_SYNC"
    }
    export interface GetRepositorySyncStatusInput {
            /**
                * <p>The repository name.</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
            /**
                * <p>The repository sync type.</p>
                */
            syncType: SyncType | string | undefined;
    }
    export namespace GetRepositorySyncStatusInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRepositorySyncStatusInput) => any;
    }
    /**
        * <p>Repository sync event detail data for a sync attempt.</p>
        */
    export interface RepositorySyncEvent {
            /**
                * <p>The type of event.</p>
                */
            type: string | undefined;
            /**
                * <p>The external ID of the sync event.</p>
                */
            externalId?: string;
            /**
                * <p>The time that the sync event occurred.</p>
                */
            time: Date | undefined;
            /**
                * <p>Event detail for a repository sync attempt.</p>
                */
            event: string | undefined;
    }
    export namespace RepositorySyncEvent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositorySyncEvent) => any;
    }
    export enum RepositorySyncStatus {
            /**
                *     The repository sync attempt has failed.
                *
                */
            FAILED = "FAILED",
            /**
                *    A repository sync attempt has been created and will begin soon.
                *
                */
            INITIATED = "INITIATED",
            /**
                *     A repository sync attempt has started and work is being done to reconcile the branch.
                *
                */
            IN_PROGRESS = "IN_PROGRESS",
            /**
                *     The repository sync attempt didn't execute and was queued.
                *
                */
            QUEUED = "QUEUED",
            /**
                *     The repository sync attempt has completed successfully.
                *
                */
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>Detail data for a repository sync attempt activated by a push to a repository.</p>
        */
    export interface RepositorySyncAttempt {
            /**
                * <p>The time when the sync attempt started.</p>
                */
            startedAt: Date | undefined;
            /**
                * <p>The sync attempt status.</p>
                */
            status: RepositorySyncStatus | string | undefined;
            /**
                * <p>Detail data for sync attempt events.</p>
                */
            events: RepositorySyncEvent[] | undefined;
    }
    export namespace RepositorySyncAttempt {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositorySyncAttempt) => any;
    }
    export interface GetRepositorySyncStatusOutput {
            /**
                * <p>The repository sync status detail data that's returned by Proton.</p>
                */
            latestSync?: RepositorySyncAttempt;
    }
    export namespace GetRepositorySyncStatusOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRepositorySyncStatusOutput) => any;
    }
    export enum TemplateType {
            ENVIRONMENT = "ENVIRONMENT",
            SERVICE = "SERVICE"
    }
    export interface GetTemplateSyncStatusInput {
            /**
                * <p>The template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The template type.</p>
                */
            templateType: TemplateType | string | undefined;
            /**
                * <p>The template major version.</p>
                */
            templateVersion: string | undefined;
    }
    export namespace GetTemplateSyncStatusInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTemplateSyncStatusInput) => any;
    }
    /**
        * <p>Revision detail data for a commit and push that activates a sync attempt</p>
        */
    export interface Revision {
            /**
                * <p>The repository name.</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The secure hash algorithm (SHA) hash for the revision.</p>
                */
            sha: string | undefined;
            /**
                * <p>The repository directory changed by a commit and push that activated the sync attempt.</p>
                */
            directory: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
    }
    export namespace Revision {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Revision) => any;
    }
    /**
        * <p>Detail data for a resource sync event.</p>
        */
    export interface ResourceSyncEvent {
            /**
                * <p>The type of event.</p>
                */
            type: string | undefined;
            /**
                * <p>The external ID for the event.</p>
                */
            externalId?: string;
            /**
                * <p>The time when the event occurred.</p>
                */
            time: Date | undefined;
            /**
                * <p>A resource sync event.</p>
                */
            event: string | undefined;
    }
    export namespace ResourceSyncEvent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceSyncEvent) => any;
    }
    export enum ResourceSyncStatus {
            /**
                *     Syncing has failed.
                *
                */
            FAILED = "FAILED",
            /**
                *    A sync attempt has been created and will begin soon.
                *
                */
            INITIATED = "INITIATED",
            /**
                *     Syncing has started and work is being done to reconcile state.
                *
                */
            IN_PROGRESS = "IN_PROGRESS",
            /**
                *     Syncing has completed successfully.
                *
                */
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>Detail data for a resource sync attempt activated by a push to a repository.</p>
        */
    export interface ResourceSyncAttempt {
            /**
                * <p>Detail data for the initial repository commit, path and push.</p>
                */
            initialRevision: Revision | undefined;
            /**
                * <p>Detail data for the target revision.</p>
                */
            targetRevision: Revision | undefined;
            /**
                * <p>The resource that is synced to.</p>
                */
            target: string | undefined;
            /**
                * <p>The time when the sync attempt started.</p>
                */
            startedAt: Date | undefined;
            /**
                * <p>The status of the sync attempt.</p>
                */
            status: ResourceSyncStatus | string | undefined;
            /**
                * <p>An array of events with detail data.</p>
                */
            events: ResourceSyncEvent[] | undefined;
    }
    export namespace ResourceSyncAttempt {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceSyncAttempt) => any;
    }
    export interface GetTemplateSyncStatusOutput {
            /**
                * <p>The details of the last sync that's returned by Proton.</p>
                */
            latestSync?: ResourceSyncAttempt;
            /**
                * <p>The details of the last successful sync that's returned by Proton.</p>
                */
            latestSuccessfulSync?: ResourceSyncAttempt;
            /**
                * <p>The template sync desired state that's returned by Proton.</p>
                */
            desiredState?: Revision;
    }
    export namespace GetTemplateSyncStatusOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTemplateSyncStatusOutput) => any;
    }
    export interface ListRepositorySyncDefinitionsInput {
            /**
                * <p>The repository name.</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The sync type. The only supported value is <code>TEMPLATE_SYNC</code>.</p>
                */
            syncType: SyncType | string | undefined;
            /**
                * <p>A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the list of repository
                *       sync definitions previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListRepositorySyncDefinitionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRepositorySyncDefinitionsInput) => any;
    }
    /**
        * <p>The repository sync definition.</p>
        */
    export interface RepositorySyncDefinition {
            /**
                * <p>The resource that is synced to.</p>
                */
            target: string | undefined;
            /**
                * <p>The resource that is synced from.</p>
                */
            parent: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
            /**
                * <p>The directory in the repository.</p>
                */
            directory: string | undefined;
    }
    export namespace RepositorySyncDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositorySyncDefinition) => any;
    }
    export interface ListRepositorySyncDefinitionsOutput {
            /**
                * <p>A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the current requested
                *       list of repository sync definitions.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of repository sync definitions.</p>
                */
            syncDefinitions: RepositorySyncDefinition[] | undefined;
    }
    export namespace ListRepositorySyncDefinitionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRepositorySyncDefinitionsOutput) => any;
    }
    export interface ListTagsForResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource for the listed tags.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A token that indicates the location of the next resource tag in the array of resource tags, after the list of resource tags that was previously
                *       requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of tags to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListTagsForResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceInput) => any;
    }
    export interface ListTagsForResourceOutput {
            /**
                * <p>A list of resource tags with detail data.</p>
                */
            tags: Tag[] | undefined;
            /**
                * <p>A token that indicates the location of the next resource tag in the array of resource tags, after the current requested list of resource tags.</p>
                */
            nextToken?: string;
    }
    export namespace ListTagsForResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceOutput) => any;
    }
    export enum ResourceDeploymentStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    export interface NotifyResourceDeploymentStatusChangeInput {
            /**
                * <p>The provisioned resource Amazon Resource Name (ARN).</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The status of your provisioned resource.</p>
                */
            status: ResourceDeploymentStatus | string | undefined;
            /**
                * <p>The provisioned resource state change detail data that's returned by Proton.</p>
                */
            outputs?: Output[];
            /**
                * <p>The deployment ID for your provisioned resource.</p>
                */
            deploymentId?: string;
            /**
                * <p>The deployment status message for your provisioned resource.</p>
                */
            statusMessage?: string;
    }
    export namespace NotifyResourceDeploymentStatusChangeInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NotifyResourceDeploymentStatusChangeInput) => any;
    }
    export interface NotifyResourceDeploymentStatusChangeOutput {
    }
    export namespace NotifyResourceDeploymentStatusChangeOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NotifyResourceDeploymentStatusChangeOutput) => any;
    }
    export interface CreateRepositoryInput {
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name (for example, <code>myrepos/myrepo</code>).</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of your Amazon Web Services CodeStar connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/setting-up-for-service.html">Setting up for Proton</a> in the <i>Proton Administrator
                *       Guide</i>.</p>
                */
            connectionArn: string | undefined;
            /**
                * <p>The ARN of your customer Amazon Web Services Key Management Service (Amazon Web Services KMS) key.</p>
                */
            encryptionKey?: string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton repository. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateRepositoryInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRepositoryInput) => any;
    }
    /**
        * <p>Detailed data of a repository that has been registered with Proton.</p>
        */
    export interface Repository {
            /**
                * <p>The repository Amazon Resource Name (ARN).</p>
                */
            arn: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name.</p>
                */
            name: string | undefined;
            /**
                * <p>The repository Amazon Web Services CodeStar connection that connects Proton to your repository.</p>
                */
            connectionArn: string | undefined;
            /**
                * <p>Your customer Amazon Web Services KMS encryption key.</p>
                */
            encryptionKey?: string;
    }
    export namespace Repository {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Repository) => any;
    }
    export interface CreateRepositoryOutput {
            /**
                * <p>The repository detail data that's returned by Proton.</p>
                */
            repository: Repository | undefined;
    }
    export namespace CreateRepositoryOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRepositoryOutput) => any;
    }
    export interface DeleteRepositoryInput {
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The name of the repository.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteRepositoryInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRepositoryInput) => any;
    }
    export interface DeleteRepositoryOutput {
            /**
                * <p>The repository detail data that's returned by Proton.</p>
                */
            repository?: Repository;
    }
    export namespace DeleteRepositoryOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRepositoryOutput) => any;
    }
    export interface GetRepositoryInput {
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name, for example <code>myrepos/myrepo</code>.</p>
                */
            name: string | undefined;
    }
    export namespace GetRepositoryInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRepositoryInput) => any;
    }
    export interface GetRepositoryOutput {
            /**
                * <p>The repository detail data that's returned by Proton.</p>
                */
            repository: Repository | undefined;
    }
    export namespace GetRepositoryOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRepositoryOutput) => any;
    }
    export interface ListRepositoriesInput {
            /**
                * <p>A token that indicates the location of the next repository in the array of repositories, after the list of repositories previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of repositories to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListRepositoriesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRepositoriesInput) => any;
    }
    /**
        * <p>Summary data of a repository that has been registered with Proton.</p>
        */
    export interface RepositorySummary {
            /**
                * <p>The Amazon Resource Name (ARN) for a repository.</p>
                */
            arn: string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            provider: RepositoryProvider | string | undefined;
            /**
                * <p>The repository name.</p>
                */
            name: string | undefined;
    }
    export namespace RepositorySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RepositorySummary) => any;
    }
    export interface ListRepositoriesOutput {
            /**
                * <p>A token that indicates the location of the next repository in the array of repositories, after the current requested list of repositories. </p>
                */
            nextToken?: string;
            /**
                * <p>An array of repositories.</p>
                */
            repositories: RepositorySummary[] | undefined;
    }
    export namespace ListRepositoriesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRepositoriesOutput) => any;
    }
    export interface ListServiceInstanceOutputsInput {
            /**
                * <p>The name of the service instance whose outputs you want.</p>
                */
            serviceInstanceName: string | undefined;
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated to.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListServiceInstanceOutputsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstanceOutputsInput) => any;
    }
    export interface ListServiceInstanceOutputsOutput {
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of service instance Infrastructure as Code (IaC) outputs.</p>
                */
            outputs: Output[] | undefined;
    }
    export namespace ListServiceInstanceOutputsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstanceOutputsOutput) => any;
    }
    export interface ListServiceInstanceProvisionedResourcesInput {
            /**
                * <p>The name of the service that <code>serviceInstanceName</code> is associated to.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The name of the service instance whose provisioned resources you want.</p>
                */
            serviceInstanceName: string | undefined;
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources
                *       that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListServiceInstanceProvisionedResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstanceProvisionedResourcesInput) => any;
    }
    export interface ListServiceInstanceProvisionedResourcesOutput {
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of
                *       provisioned resources.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of provisioned resources for a service instance.</p>
                */
            provisionedResources: ProvisionedResource[] | undefined;
    }
    export namespace ListServiceInstanceProvisionedResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstanceProvisionedResourcesOutput) => any;
    }
    export interface GetServiceInstanceInput {
            /**
                * <p>The name of a service instance that you want to get the detailed data for.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the service that the service instance belongs to.</p>
                */
            serviceName: string | undefined;
    }
    export namespace GetServiceInstanceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceInstanceInput) => any;
    }
    export interface GetServiceInstanceOutput {
            /**
                * <p>The detailed data of the requested service instance.</p>
                */
            serviceInstance: ServiceInstance | undefined;
    }
    export namespace GetServiceInstanceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceInstanceOutput) => any;
    }
    export interface ListServiceInstancesInput {
            /**
                * <p>The name of the service that the service instance belongs to.</p>
                */
            serviceName?: string;
            /**
                * <p>A token that indicates the location of the next service in the array of service instances, after the list of service instances that was previously
                *       requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of service instances to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListServiceInstancesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstancesInput) => any;
    }
    /**
        * <p>Summary data of an Proton service instance resource.</p>
        */
    export interface ServiceInstanceSummary {
            /**
                * <p>The name of the service instance.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the service instance.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the service instance was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when a deployment of the service was last attempted.</p>
                */
            lastDeploymentAttemptedAt: Date | undefined;
            /**
                * <p>The time when the service was last deployed successfully.</p>
                */
            lastDeploymentSucceededAt: Date | undefined;
            /**
                * <p>The name of the service that the service instance belongs to.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The name of the environment that the service instance was deployed into.</p>
                */
            environmentName: string | undefined;
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The service instance template major version.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The service instance template minor version.</p>
                */
            templateMinorVersion: string | undefined;
            /**
                * <p>The service instance deployment status.</p>
                */
            deploymentStatus: DeploymentStatus | string | undefined;
            /**
                * <p>A service instance deployment status message.</p>
                */
            deploymentStatusMessage?: string;
    }
    export namespace ServiceInstanceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceInstanceSummary) => any;
    }
    export interface ListServiceInstancesOutput {
            /**
                * <p>A token that indicates the location of the next service instance in the array of service instances, after the current requested list of service
                *       instances.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of service instances with summary data.</p>
                */
            serviceInstances: ServiceInstanceSummary[] | undefined;
    }
    export namespace ListServiceInstancesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceInstancesOutput) => any;
    }
    export interface UpdateServiceInstanceInput {
            /**
                * <p>The name of the service instance to update.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the service that the service instance belongs to.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The deployment type. It defines the mode for updating a service instance, as follows:</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the service instance is deployed and updated with the new spec that you provide. Only requested parameters are updated.
                *               <i>Don’t</i> include major or minor version parameters when you use this deployment type.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MINOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) minor version of the current major version
                *             in use, by default. You can also specify a different minor version of the current major version in use.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MAJOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) major and minor version of the current
                *             template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>
                *             </dd>
                *          </dl>
                */
            deploymentType: DeploymentUpdateType | string | undefined;
            /**
                * <p>The formatted specification that defines the service instance update.</p>
                */
            spec?: string;
            /**
                * <p>The major version of the service template to update.</p>
                */
            templateMajorVersion?: string;
            /**
                * <p>The minor version of the service template to update.</p>
                */
            templateMinorVersion?: string;
    }
    export namespace UpdateServiceInstanceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceInstanceInput) => any;
    }
    export interface UpdateServiceInstanceOutput {
            /**
                * <p>The service instance summary data that's returned by Proton.</p>
                */
            serviceInstance: ServiceInstance | undefined;
    }
    export namespace UpdateServiceInstanceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceInstanceOutput) => any;
    }
    export interface ListServicePipelineOutputsInput {
            /**
                * <p>The name of the service whose pipeline's outputs you want.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListServicePipelineOutputsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicePipelineOutputsInput) => any;
    }
    export interface ListServicePipelineOutputsOutput {
            /**
                * <p>A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of service pipeline Infrastructure as Code (IaC) outputs.</p>
                */
            outputs: Output[] | undefined;
    }
    export namespace ListServicePipelineOutputsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicePipelineOutputsOutput) => any;
    }
    export interface ListServicePipelineProvisionedResourcesInput {
            /**
                * <p>The name of the service whose pipeline's provisioned resources you want.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources
                *       that was previously requested.</p>
                */
            nextToken?: string;
    }
    export namespace ListServicePipelineProvisionedResourcesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicePipelineProvisionedResourcesInput) => any;
    }
    export interface ListServicePipelineProvisionedResourcesOutput {
            /**
                * <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of
                *       provisioned resources.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of provisioned resources for a service and pipeline.</p>
                */
            provisionedResources: ProvisionedResource[] | undefined;
    }
    export namespace ListServicePipelineProvisionedResourcesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicePipelineProvisionedResourcesOutput) => any;
    }
    export interface UpdateServicePipelineInput {
            /**
                * <p>The name of the service to that the pipeline is associated with.</p>
                */
            serviceName: string | undefined;
            /**
                * <p>The spec for the service pipeline to update.</p>
                */
            spec: string | undefined;
            /**
                * <p>The deployment type.</p>
                *          <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p>
                *          <dl>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>NONE</code>
                *                </p>
                *                <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>CURRENT_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated.
                *               <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MINOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version
                *             in use, by default. You can specify a different minor version of the current major version in use.</p>
                *             </dd>
                *             <dt/>
                *             <dd>
                *                <p>
                *                   <code>MAJOR_VERSION</code>
                *                </p>
                *                <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current
                *             template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>
                *             </dd>
                *          </dl>
                */
            deploymentType: DeploymentUpdateType | string | undefined;
            /**
                * <p>The major version of the service template that was used to create the service that the pipeline is associated with.</p>
                */
            templateMajorVersion?: string;
            /**
                * <p>The minor version of the service template that was used to create the service that the pipeline is associated with.</p>
                */
            templateMinorVersion?: string;
    }
    export namespace UpdateServicePipelineInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServicePipelineInput) => any;
    }
    export interface UpdateServicePipelineOutput {
            /**
                * <p>The pipeline details that are returned by Proton.</p>
                */
            pipeline: ServicePipeline | undefined;
    }
    export namespace UpdateServicePipelineOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServicePipelineOutput) => any;
    }
    export interface CreateServiceInput {
            /**
                * <p>The service name.</p>
                */
            name: string | undefined;
            /**
                * <p>A description of the Proton service.</p>
                */
            description?: string;
            /**
                * <p>The name of the service template that's used to create the service.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the service template that was used to create the service.</p>
                */
            templateMajorVersion: string | undefined;
            /**
                * <p>The minor version of the service template that was used to create the service.</p>
                */
            templateMinorVersion?: string;
            /**
                * <p>A link to a spec file that provides inputs as defined in the service template bundle schema file. The spec file is in YAML format.
                *         <i>Don’t</i> include pipeline inputs in the spec if your service template <i>doesn’t</i> include a service pipeline. For
                *       more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-create-svc.html.html">Create a service</a> in the
                *         <i>Proton Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-create.html">Create a
                *         service</a> in the <i>Proton User Guide</i>.</p>
                */
            spec: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/setting-up-for-service.html#setting-up-vcontrol">Set up repository connection</a> in the <i>Proton
                *         Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/proton-setup.html#setup-repo-connection">Setting up with
                *         Proton</a> in the <i>Proton User Guide</i>. <i>Don't</i> include this parameter if your service template
                *         <i>doesn't</i> include a service pipeline.</p>
                */
            repositoryConnectionArn?: string;
            /**
                * <p>The ID of the code repository. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a
                *       service pipeline.</p>
                */
            repositoryId?: string;
            /**
                * <p>The name of the code repository branch that holds the code that's deployed in Proton. <i>Don't</i> include this parameter if your
                *       service template <i>doesn't</i> include a service pipeline.</p>
                */
            branchName?: string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton service. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateServiceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceInput) => any;
    }
    export enum ServiceStatus {
            ACTIVE = "ACTIVE",
            CREATE_FAILED = "CREATE_FAILED",
            CREATE_FAILED_CLEANUP_COMPLETE = "CREATE_FAILED_CLEANUP_COMPLETE",
            CREATE_FAILED_CLEANUP_FAILED = "CREATE_FAILED_CLEANUP_FAILED",
            CREATE_FAILED_CLEANUP_IN_PROGRESS = "CREATE_FAILED_CLEANUP_IN_PROGRESS",
            CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
            DELETE_FAILED = "DELETE_FAILED",
            DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
            UPDATE_COMPLETE_CLEANUP_FAILED = "UPDATE_COMPLETE_CLEANUP_FAILED",
            UPDATE_FAILED = "UPDATE_FAILED",
            UPDATE_FAILED_CLEANUP_COMPLETE = "UPDATE_FAILED_CLEANUP_COMPLETE",
            UPDATE_FAILED_CLEANUP_FAILED = "UPDATE_FAILED_CLEANUP_FAILED",
            UPDATE_FAILED_CLEANUP_IN_PROGRESS = "UPDATE_FAILED_CLEANUP_IN_PROGRESS",
            UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS"
    }
    /**
        * <p>Detailed data of an Proton service resource.</p>
        */
    export interface Service {
            /**
                * <p>The name of the service.</p>
                */
            name: string | undefined;
            /**
                * <p>A description of the service.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the service.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The time when the service was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the service was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The status of the service.</p>
                */
            status: ServiceStatus | string | undefined;
            /**
                * <p>A service status message.</p>
                */
            statusMessage?: string;
            /**
                * <p>The formatted specification that defines the service.</p>
                */
            spec: string | undefined;
            /**
                * <p>The service pipeline detail data.</p>
                */
            pipeline?: ServicePipeline;
            /**
                * <p>The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/setting-up-for-service.html#setting-up-vcontrol">Set up a repository connection</a> in the <i>Proton
                *         Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/proton-setup.html#setup-repo-connection">Setting up with
                *         Proton</a> in the <i>Proton User Guide</i>.</p>
                */
            repositoryConnectionArn?: string;
            /**
                * <p>The ID of the source code repository.</p>
                */
            repositoryId?: string;
            /**
                * <p>The name of the code repository branch that holds the code that's deployed in Proton.</p>
                */
            branchName?: string;
    }
    export namespace Service {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Service) => any;
    }
    export interface CreateServiceOutput {
            /**
                * <p>The service detail data that's returned by Proton.</p>
                */
            service: Service | undefined;
    }
    export namespace CreateServiceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceOutput) => any;
    }
    export interface DeleteServiceInput {
            /**
                * <p>The name of the service to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteServiceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceInput) => any;
    }
    export interface DeleteServiceOutput {
            /**
                * <p>The detailed data of the service being deleted.</p>
                */
            service?: Service;
    }
    export namespace DeleteServiceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceOutput) => any;
    }
    export interface GetServiceInput {
            /**
                * <p>The name of the service that you want to get the detailed data for.</p>
                */
            name: string | undefined;
    }
    export namespace GetServiceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceInput) => any;
    }
    export interface GetServiceOutput {
            /**
                * <p>The detailed data of the requested service.</p>
                */
            service?: Service;
    }
    export namespace GetServiceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceOutput) => any;
    }
    export interface ListServicesInput {
            /**
                * <p>A token that indicates the location of the next service in the array of services, after the list of services that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of services to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListServicesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicesInput) => any;
    }
    /**
        * <p>Summary data of an Proton service resource.</p>
        */
    export interface ServiceSummary {
            /**
                * <p>The name of the service.</p>
                */
            name: string | undefined;
            /**
                * <p>A description of the service.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the service.</p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The time when the service was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the service was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The status of the service.</p>
                */
            status: ServiceStatus | string | undefined;
            /**
                * <p>A service status message.</p>
                */
            statusMessage?: string;
    }
    export namespace ServiceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceSummary) => any;
    }
    export interface ListServicesOutput {
            /**
                * <p>A token that indicates the location of the next service in the array of services, after the current requested list of services.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of services with summaries of detail data.</p>
                */
            services: ServiceSummary[] | undefined;
    }
    export namespace ListServicesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServicesOutput) => any;
    }
    export interface UpdateServiceInput {
            /**
                * <p>The name of the service to edit.</p>
                */
            name: string | undefined;
            /**
                * <p>The edited service description.</p>
                */
            description?: string;
            /**
                * <p>Lists the service instances to add and the existing service instances to remain. Omit the existing service instances to delete from the list.
                *         <i>Don't</i> include edits to the existing service instances or pipeline. For more information, see <i>Edit a service</i> in
                *       the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-update.html">Proton Administrator Guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-update.html">Proton User Guide</a>.</p>
                */
            spec?: string;
    }
    export namespace UpdateServiceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceInput) => any;
    }
    export interface UpdateServiceOutput {
            /**
                * <p>The service detail data that's returned by Proton.</p>
                */
            service: Service | undefined;
    }
    export namespace UpdateServiceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceOutput) => any;
    }
    export interface CreateServiceTemplateInput {
            /**
                * <p>The name of the service template.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the service template as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the service template.</p>
                */
            description?: string;
            /**
                * <p>A customer provided encryption key that's used to encrypt data.</p>
                */
            encryptionKey?: string;
            /**
                * <p>By default, Proton provides a service pipeline for your service. When this parameter is included, it indicates that an Proton service pipeline
                *         <i>isn't</i> provided for your service. After it's included, it <i>can't</i> be changed. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-bundles.html">Service template bundles</a> in the <i>Proton Administrator
                *         Guide</i>.</p>
                */
            pipelineProvisioning?: Provisioning | string;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
    }
    export namespace CreateServiceTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceTemplateInput) => any;
    }
    /**
        * <p>Detailed data of an Proton service template resource.</p>
        */
    export interface ServiceTemplate {
            /**
                * <p>The name of the service template.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the service template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the service template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the service template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The service template name as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the service template.</p>
                */
            description?: string;
            /**
                * <p>The recommended version of the service template.</p>
                */
            recommendedVersion?: string;
            /**
                * <p>The customer provided service template encryption key that's used to encrypt data.</p>
                */
            encryptionKey?: string;
            /**
                * <p>If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template. Otherwise, a service pipeline
                *         <i>isn't</i> included in the service template.</p>
                */
            pipelineProvisioning?: Provisioning | string;
    }
    export namespace ServiceTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceTemplate) => any;
    }
    export interface CreateServiceTemplateOutput {
            /**
                * <p>The service template detail data that's returned by Proton.</p>
                */
            serviceTemplate: ServiceTemplate | undefined;
    }
    export namespace CreateServiceTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceTemplateOutput) => any;
    }
    export interface DeleteServiceTemplateInput {
            /**
                * <p>The name of the service template to delete.</p>
                */
            name: string | undefined;
    }
    export namespace DeleteServiceTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceTemplateInput) => any;
    }
    export interface DeleteServiceTemplateOutput {
            /**
                * <p>The detailed data of the service template being deleted.</p>
                */
            serviceTemplate?: ServiceTemplate;
    }
    export namespace DeleteServiceTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceTemplateOutput) => any;
    }
    export interface GetServiceTemplateInput {
            /**
                * <p>The name of the service template that you want to get detailed data for.</p>
                */
            name: string | undefined;
    }
    export namespace GetServiceTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceTemplateInput) => any;
    }
    export interface GetServiceTemplateOutput {
            /**
                * <p>The detailed data of the requested service template.</p>
                */
            serviceTemplate: ServiceTemplate | undefined;
    }
    export namespace GetServiceTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceTemplateOutput) => any;
    }
    export interface ListServiceTemplatesInput {
            /**
                * <p>A token that indicates the location of the next service template in the array of service templates, after the list of service templates previously
                *       requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of service templates to list.</p>
                */
            maxResults?: number;
    }
    export namespace ListServiceTemplatesInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceTemplatesInput) => any;
    }
    /**
        * <p>Summary data of an Proton service template resource.</p>
        */
    export interface ServiceTemplateSummary {
            /**
                * <p>The name of the service template.</p>
                */
            name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the service template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the service template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the service template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>The service template name as displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the service template.</p>
                */
            description?: string;
            /**
                * <p>The recommended version of the service template.</p>
                */
            recommendedVersion?: string;
            /**
                * <p>If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template, otherwise a service pipeline
                *         <i>isn't</i> included in the service template.</p>
                */
            pipelineProvisioning?: Provisioning | string;
    }
    export namespace ServiceTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceTemplateSummary) => any;
    }
    export interface ListServiceTemplatesOutput {
            /**
                * <p>A token that indicates the location of the next service template in the array of service templates, after the current requested list of service
                *       templates.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of service templates with detail data.</p>
                */
            templates: ServiceTemplateSummary[] | undefined;
    }
    export namespace ListServiceTemplatesOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceTemplatesOutput) => any;
    }
    export interface UpdateServiceTemplateInput {
            /**
                * <p>The name of the service template to update.</p>
                */
            name: string | undefined;
            /**
                * <p>The name of the service template to update that's displayed in the developer interface.</p>
                */
            displayName?: string;
            /**
                * <p>A description of the service template update.</p>
                */
            description?: string;
    }
    export namespace UpdateServiceTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceTemplateInput) => any;
    }
    export interface UpdateServiceTemplateOutput {
            /**
                * <p>The service template detail data that's returned by Proton.</p>
                */
            serviceTemplate: ServiceTemplate | undefined;
    }
    export namespace UpdateServiceTemplateOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceTemplateOutput) => any;
    }
    /**
        * <p>Compatible environment template data.</p>
        */
    export interface CompatibleEnvironmentTemplateInput {
            /**
                * <p>The compatible environment template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the compatible environment template.</p>
                */
            majorVersion: string | undefined;
    }
    export namespace CompatibleEnvironmentTemplateInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CompatibleEnvironmentTemplateInput) => any;
    }
    export enum ServiceTemplateSupportedComponentSourceType {
            DIRECTLY_DEFINED = "DIRECTLY_DEFINED"
    }
    export interface CreateServiceTemplateVersionInput {
            /**
                * <p>When included, if two identical requests are made with the same client token, Proton returns the service template version that the first request
                *       created.</p>
                */
            clientToken?: string;
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>A description of the new version of a service template.</p>
                */
            description?: string;
            /**
                * <p>To create a new minor version of the service template, include a <code>major Version</code>.</p>
                *          <p>To create a new major and minor version of the service template, <i>exclude</i>
                *             <code>major Version</code>.</p>
                */
            majorVersion?: string;
            /**
                * <p>An object that includes the template bundle S3 bucket path and name for the new version of a service template.</p>
                */
            source: TemplateVersionSourceInput | undefined;
            /**
                * <p>An array of environment template objects that are compatible with the new service template version. A service instance based on this service template
                *       version can run in environments based on compatible templates.</p>
                */
            compatibleEnvironmentTemplates: CompatibleEnvironmentTemplateInput[] | undefined;
            /**
                * <p>An optional list of metadata items that you can associate with the Proton service template version. A tag is a key-value pair.</p>
                *          <p>For more information, see <i>Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton User Guide</a>.</p>
                */
            tags?: Tag[];
            /**
                * <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template
                *       version.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            supportedComponentSources?: (ServiceTemplateSupportedComponentSourceType | string)[];
    }
    export namespace CreateServiceTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceTemplateVersionInput) => any;
    }
    /**
        * <p>Compatible environment template data.</p>
        */
    export interface CompatibleEnvironmentTemplate {
            /**
                * <p>The compatible environment template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The major version of the compatible environment template.</p>
                */
            majorVersion: string | undefined;
    }
    export namespace CompatibleEnvironmentTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CompatibleEnvironmentTemplate) => any;
    }
    /**
        * <p>Detailed data of an Proton service template version resource.</p>
        */
    export interface ServiceTemplateVersion {
            /**
                * <p>The name of the version of a service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The latest major version that's associated with the version of a service template.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The minor version of a service template.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>The recommended minor version of the service template.</p>
                */
            recommendedMinorVersion?: string;
            /**
                * <p>The service template version status.</p>
                */
            status: TemplateVersionStatus | string | undefined;
            /**
                * <p>A service template version status message.</p>
                */
            statusMessage?: string;
            /**
                * <p>A description of the version of a service template.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the version of a service template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the version of a service template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the version of a service template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
            /**
                * <p>An array of compatible environment template names for the major version of a service template.</p>
                */
            compatibleEnvironmentTemplates: CompatibleEnvironmentTemplate[] | undefined;
            /**
                * <p>The schema of the version of a service template.</p>
                */
            schema?: string;
            /**
                * <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template
                *       version.</p>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            supportedComponentSources?: (ServiceTemplateSupportedComponentSourceType | string)[];
    }
    export namespace ServiceTemplateVersion {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceTemplateVersion) => any;
    }
    export interface CreateServiceTemplateVersionOutput {
            /**
                * <p>The service template version summary of detail data that's returned by Proton.</p>
                */
            serviceTemplateVersion: ServiceTemplateVersion | undefined;
    }
    export namespace CreateServiceTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateServiceTemplateVersionOutput) => any;
    }
    export interface DeleteServiceTemplateVersionInput {
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The service template major version to delete.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The service template minor version to delete.</p>
                */
            minorVersion: string | undefined;
    }
    export namespace DeleteServiceTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceTemplateVersionInput) => any;
    }
    export interface DeleteServiceTemplateVersionOutput {
            /**
                * <p>The detailed data of the service template version being deleted.</p>
                */
            serviceTemplateVersion?: ServiceTemplateVersion;
    }
    export namespace DeleteServiceTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteServiceTemplateVersionOutput) => any;
    }
    export interface GetServiceTemplateVersionInput {
            /**
                * <p>The name of the service template a version of which you want to get detailed data for.</p>
                */
            templateName: string | undefined;
            /**
                * <p>To get service template major version detail data, include <code>major Version</code>.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
                */
            minorVersion: string | undefined;
    }
    export namespace GetServiceTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceTemplateVersionInput) => any;
    }
    export interface GetServiceTemplateVersionOutput {
            /**
                * <p>The detailed data of the requested service template version.</p>
                */
            serviceTemplateVersion: ServiceTemplateVersion | undefined;
    }
    export namespace GetServiceTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetServiceTemplateVersionOutput) => any;
    }
    export interface ListServiceTemplateVersionsInput {
            /**
                * <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the list
                *       of major or minor versions that was previously requested.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of major or minor versions of a service template to list.</p>
                */
            maxResults?: number;
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>To view a list of minor of versions under a major version of a service template, include <code>major Version</code>.</p>
                *          <p>To view a list of major versions of a service template, <i>exclude</i>
                *             <code>major Version</code>.</p>
                */
            majorVersion?: string;
    }
    export namespace ListServiceTemplateVersionsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceTemplateVersionsInput) => any;
    }
    /**
        * <p>Summary data of an Proton service template version resource.</p>
        */
    export interface ServiceTemplateVersionSummary {
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The latest major version that's associated with the version of a service template.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>The minor version of a service template.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>The recommended minor version of the service template.</p>
                */
            recommendedMinorVersion?: string;
            /**
                * <p>The service template minor version status.</p>
                */
            status: TemplateVersionStatus | string | undefined;
            /**
                * <p>A service template minor version status message.</p>
                */
            statusMessage?: string;
            /**
                * <p>A description of the version of a service template.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the version of a service template.</p>
                */
            arn: string | undefined;
            /**
                * <p>The time when the version of a service template was created.</p>
                */
            createdAt: Date | undefined;
            /**
                * <p>The time when the version of a service template was last modified.</p>
                */
            lastModifiedAt: Date | undefined;
    }
    export namespace ServiceTemplateVersionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ServiceTemplateVersionSummary) => any;
    }
    export interface ListServiceTemplateVersionsOutput {
            /**
                * <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the
                *       current requested list of service major or minor versions.</p>
                */
            nextToken?: string;
            /**
                * <p>An array of major or minor versions of a service template with detail data.</p>
                */
            templateVersions: ServiceTemplateVersionSummary[] | undefined;
    }
    export namespace ListServiceTemplateVersionsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListServiceTemplateVersionsOutput) => any;
    }
    export interface UpdateServiceTemplateVersionInput {
            /**
                * <p>The name of the service template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>To update a major version of a service template, include <code>major Version</code>.</p>
                */
            majorVersion: string | undefined;
            /**
                * <p>To update a minor version of a service template, include <code>minorVersion</code>.</p>
                */
            minorVersion: string | undefined;
            /**
                * <p>A description of a service template version to update.</p>
                */
            description?: string;
            /**
                * <p>The status of the service template minor version to update.</p>
                */
            status?: TemplateVersionStatus | string;
            /**
                * <p>An array of environment template objects that are compatible with this service template version. A service instance based on this service template
                *       version can run in environments based on compatible templates.</p>
                */
            compatibleEnvironmentTemplates?: CompatibleEnvironmentTemplateInput[];
            /**
                * <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template
                *       version.</p>
                *          <note>
                *             <p>A change to <code>supportedComponentSources</code> doesn't impact existing component attachments to instances based on this template version. A
                *         change only affects later associations.</p>
                *          </note>
                *          <p>For more information about components, see
                *   <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-components.html">Proton components</a> in the
                *   <i>Proton Administrator Guide</i>.</p>
                */
            supportedComponentSources?: (ServiceTemplateSupportedComponentSourceType | string)[];
    }
    export namespace UpdateServiceTemplateVersionInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceTemplateVersionInput) => any;
    }
    export interface UpdateServiceTemplateVersionOutput {
            /**
                * <p>The service template version detail data that's returned by Proton.</p>
                */
            serviceTemplateVersion: ServiceTemplateVersion | undefined;
    }
    export namespace UpdateServiceTemplateVersionOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateServiceTemplateVersionOutput) => any;
    }
    export interface TagResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the Proton resource to apply customer tags to.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of customer tags to apply to the Proton resource.</p>
                */
            tags: Tag[] | undefined;
    }
    export namespace TagResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceInput) => any;
    }
    export interface TagResourceOutput {
    }
    export namespace TagResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceOutput) => any;
    }
    export interface CreateTemplateSyncConfigInput {
            /**
                * <p>The name of your registered template.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The type of the registered template.</p>
                */
            templateType: TemplateType | string | undefined;
            /**
                * <p>The provider type for your repository.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The name of your repository (for example, <code>myrepos/myrepo</code>).</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The branch of the registered repository for your template.</p>
                */
            branch: string | undefined;
            /**
                * <p>A repository subdirectory path to your template bundle directory. When included, Proton limits the template bundle search to this repository
                *       directory.</p>
                */
            subdirectory?: string;
    }
    export namespace CreateTemplateSyncConfigInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTemplateSyncConfigInput) => any;
    }
    /**
        * <p>The detail data for a template sync configuration.</p>
        */
    export interface TemplateSyncConfig {
            /**
                * <p>The template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The template type.</p>
                */
            templateType: TemplateType | string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The name of the repository, for example <code>myrepos/myrepo</code>.</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
            /**
                * <p>A subdirectory path to your template bundle version.</p>
                */
            subdirectory?: string;
    }
    export namespace TemplateSyncConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TemplateSyncConfig) => any;
    }
    export interface CreateTemplateSyncConfigOutput {
            /**
                * <p>The template sync configuration detail data that's returned by Proton.</p>
                */
            templateSyncConfig?: TemplateSyncConfig;
    }
    export namespace CreateTemplateSyncConfigOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateTemplateSyncConfigOutput) => any;
    }
    export interface DeleteTemplateSyncConfigInput {
            /**
                * <p>The template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The template type.</p>
                */
            templateType: TemplateType | string | undefined;
    }
    export namespace DeleteTemplateSyncConfigInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTemplateSyncConfigInput) => any;
    }
    export interface DeleteTemplateSyncConfigOutput {
            /**
                * <p>The template sync configuration detail data that's returned by Proton.</p>
                */
            templateSyncConfig?: TemplateSyncConfig;
    }
    export namespace DeleteTemplateSyncConfigOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTemplateSyncConfigOutput) => any;
    }
    export interface GetTemplateSyncConfigInput {
            /**
                * <p>The template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The template type.</p>
                */
            templateType: TemplateType | string | undefined;
    }
    export namespace GetTemplateSyncConfigInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTemplateSyncConfigInput) => any;
    }
    export interface GetTemplateSyncConfigOutput {
            /**
                * <p>The template sync configuration detail data that's returned by Proton.</p>
                */
            templateSyncConfig?: TemplateSyncConfig;
    }
    export namespace GetTemplateSyncConfigOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetTemplateSyncConfigOutput) => any;
    }
    export interface UpdateTemplateSyncConfigInput {
            /**
                * <p>The synced template name.</p>
                */
            templateName: string | undefined;
            /**
                * <p>The synced template type.</p>
                */
            templateType: TemplateType | string | undefined;
            /**
                * <p>The repository provider.</p>
                */
            repositoryProvider: RepositoryProvider | string | undefined;
            /**
                * <p>The name of the repository (for example, <code>myrepos/myrepo</code>).</p>
                */
            repositoryName: string | undefined;
            /**
                * <p>The repository branch.</p>
                */
            branch: string | undefined;
            /**
                * <p>A subdirectory path to your template bundle version. When included, limits the template bundle search to this repository directory.</p>
                */
            subdirectory?: string;
    }
    export namespace UpdateTemplateSyncConfigInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTemplateSyncConfigInput) => any;
    }
    export interface UpdateTemplateSyncConfigOutput {
            /**
                * <p>The template sync configuration detail data that's returned by Proton.</p>
                */
            templateSyncConfig?: TemplateSyncConfig;
    }
    export namespace UpdateTemplateSyncConfigOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateTemplateSyncConfigOutput) => any;
    }
    export interface UntagResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource to remove customer tags from.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of customer tag keys that indicate the customer tags to be removed from the resource.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceInput) => any;
    }
    export interface UntagResourceOutput {
    }
    export namespace UntagResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceOutput) => any;
    }
}

declare module '@aws-sdk/client-proton/node_modules/@aws-sdk/client-proton/dist-types/models/ProtonServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Proton service.
        */
    export class ProtonServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

