// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-pricing' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { DescribeServicesCommandInput, DescribeServicesCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/DescribeServicesCommand";
    import { GetAttributeValuesCommandInput, GetAttributeValuesCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetAttributeValuesCommand";
    import { GetProductsCommandInput, GetProductsCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetProductsCommand";
    import { PricingClient } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/PricingClient";
    /**
        * <p>Amazon Web Services Price List API is a centralized and convenient way to
        *          programmatically query Amazon Web Services for services, products, and pricing information. The Amazon Web Services Price List
        *          uses standardized product attributes such as <code>Location</code>, <code>Storage
        *             Class</code>, and <code>Operating System</code>, and provides prices at the SKU
        *          level. You can use the Amazon Web Services Price List to build cost control and scenario planning tools, reconcile
        *          billing data, forecast future spend for budgeting purposes, and provide cost benefit
        *          analysis that compare your internal workloads with Amazon Web Services.</p>
        *          <p>Use <code>GetServices</code> without a service code to retrieve the service codes for all AWS services, then
        *          <code>GetServices</code> with a service code to retrieve the attribute names for
        *          that service. After you have the service code and attribute names, you can use <code>GetAttributeValues</code>
        *          to see what values are available for an attribute. With the service code and an attribute name and value,
        *          you can use <code>GetProducts</code> to find specific products that you're interested in, such as
        *          an <code>AmazonEC2</code> instance, with a <code>Provisioned IOPS</code>
        *             <code>volumeType</code>.</p>
        *          <p>Service Endpoint</p>
        *          <p>Amazon Web Services Price List service API provides the following two endpoints:</p>
        *          <ul>
        *             <li>
        *                <p>https://api.pricing.us-east-1.amazonaws.com</p>
        *             </li>
        *             <li>
        *                <p>https://api.pricing.ap-south-1.amazonaws.com</p>
        *             </li>
        *          </ul>
        */
    export class Pricing extends PricingClient {
            /**
                * <p>Returns the metadata for one service or a list of the metadata for all services. Use
                *          this without a service code to get the service codes for all services.
                *          Use it with a service code, such as <code>AmazonEC2</code>, to get information specific to
                *          that service, such as the attribute
                *          names available for that service. For example, some of the attribute names available for EC2 are
                *          <code>volumeType</code>, <code>maxIopsVolume</code>, <code>operation</code>,
                *          <code>locationType</code>, and <code>instanceCapacity10xlarge</code>.</p>
                */
            describeServices(args: DescribeServicesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeServicesCommandOutput>;
            describeServices(args: DescribeServicesCommandInput, cb: (err: any, data?: DescribeServicesCommandOutput) => void): void;
            describeServices(args: DescribeServicesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeServicesCommandOutput) => void): void;
            /**
                * <p>Returns a list of attribute values. Attributes are similar to the details
                *           in a Price List API offer file. For a list of available attributes, see
                *          <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/reading-an-offer.html#pps-defs">Offer File Definitions</a>
                *          in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-what-is.html">Billing and Cost Management User Guide</a>.</p>
                */
            getAttributeValues(args: GetAttributeValuesCommandInput, options?: __HttpHandlerOptions): Promise<GetAttributeValuesCommandOutput>;
            getAttributeValues(args: GetAttributeValuesCommandInput, cb: (err: any, data?: GetAttributeValuesCommandOutput) => void): void;
            getAttributeValues(args: GetAttributeValuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAttributeValuesCommandOutput) => void): void;
            /**
                * <p>Returns a list of all products that match the filter criteria.</p>
                */
            getProducts(args: GetProductsCommandInput, options?: __HttpHandlerOptions): Promise<GetProductsCommandOutput>;
            getProducts(args: GetProductsCommandInput, cb: (err: any, data?: GetProductsCommandOutput) => void): void;
            getProducts(args: GetProductsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetProductsCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/DescribeServicesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeServicesRequest, DescribeServicesResponse } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/models_0";
    import { PricingClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/PricingClient";
    export interface DescribeServicesCommandInput extends DescribeServicesRequest {
    }
    export interface DescribeServicesCommandOutput extends DescribeServicesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the metadata for one service or a list of the metadata for all services. Use
        *          this without a service code to get the service codes for all services.
        *          Use it with a service code, such as <code>AmazonEC2</code>, to get information specific to
        *          that service, such as the attribute
        *          names available for that service. For example, some of the attribute names available for EC2 are
        *          <code>volumeType</code>, <code>maxIopsVolume</code>, <code>operation</code>,
        *          <code>locationType</code>, and <code>instanceCapacity10xlarge</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { PricingClient, DescribeServicesCommand } from "@aws-sdk/client-pricing"; // ES Modules import
        * // const { PricingClient, DescribeServicesCommand } = require("@aws-sdk/client-pricing"); // CommonJS import
        * const client = new PricingClient(config);
        * const command = new DescribeServicesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeServicesCommandInput} for command's `input` shape.
        * @see {@link DescribeServicesCommandOutput} for command's `response` shape.
        * @see {@link PricingClientResolvedConfig | config} for PricingClient's `config` shape.
        *
        */
    export class DescribeServicesCommand extends $Command<DescribeServicesCommandInput, DescribeServicesCommandOutput, PricingClientResolvedConfig> {
            readonly input: DescribeServicesCommandInput;
            constructor(input: DescribeServicesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PricingClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeServicesCommandInput, DescribeServicesCommandOutput>;
    }
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetAttributeValuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAttributeValuesRequest, GetAttributeValuesResponse } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/models_0";
    import { PricingClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/PricingClient";
    export interface GetAttributeValuesCommandInput extends GetAttributeValuesRequest {
    }
    export interface GetAttributeValuesCommandOutput extends GetAttributeValuesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of attribute values. Attributes are similar to the details
        *           in a Price List API offer file. For a list of available attributes, see
        *          <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/reading-an-offer.html#pps-defs">Offer File Definitions</a>
        *          in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-what-is.html">Billing and Cost Management User Guide</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { PricingClient, GetAttributeValuesCommand } from "@aws-sdk/client-pricing"; // ES Modules import
        * // const { PricingClient, GetAttributeValuesCommand } = require("@aws-sdk/client-pricing"); // CommonJS import
        * const client = new PricingClient(config);
        * const command = new GetAttributeValuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAttributeValuesCommandInput} for command's `input` shape.
        * @see {@link GetAttributeValuesCommandOutput} for command's `response` shape.
        * @see {@link PricingClientResolvedConfig | config} for PricingClient's `config` shape.
        *
        */
    export class GetAttributeValuesCommand extends $Command<GetAttributeValuesCommandInput, GetAttributeValuesCommandOutput, PricingClientResolvedConfig> {
            readonly input: GetAttributeValuesCommandInput;
            constructor(input: GetAttributeValuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PricingClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAttributeValuesCommandInput, GetAttributeValuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetProductsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetProductsRequest, GetProductsResponse } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/models_0";
    import { PricingClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/PricingClient";
    export interface GetProductsCommandInput extends GetProductsRequest {
    }
    export interface GetProductsCommandOutput extends GetProductsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of all products that match the filter criteria.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { PricingClient, GetProductsCommand } from "@aws-sdk/client-pricing"; // ES Modules import
        * // const { PricingClient, GetProductsCommand } = require("@aws-sdk/client-pricing"); // CommonJS import
        * const client = new PricingClient(config);
        * const command = new GetProductsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetProductsCommandInput} for command's `input` shape.
        * @see {@link GetProductsCommandOutput} for command's `response` shape.
        * @see {@link PricingClientResolvedConfig | config} for PricingClient's `config` shape.
        *
        */
    export class GetProductsCommand extends $Command<GetProductsCommandInput, GetProductsCommandOutput, PricingClientResolvedConfig> {
            readonly input: GetProductsCommandInput;
            constructor(input: GetProductsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PricingClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetProductsCommandInput, GetProductsCommandOutput>;
    }
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/PricingClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { DescribeServicesCommandInput, DescribeServicesCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/DescribeServicesCommand";
    import { GetAttributeValuesCommandInput, GetAttributeValuesCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetAttributeValuesCommand";
    import { GetProductsCommandInput, GetProductsCommandOutput } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/commands/GetProductsCommand";
    export type ServiceInputTypes = DescribeServicesCommandInput | GetAttributeValuesCommandInput | GetProductsCommandInput;
    export type ServiceOutputTypes = DescribeServicesCommandOutput | GetAttributeValuesCommandOutput | GetProductsCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type PricingClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of PricingClient class constructor that set the region, credentials and other options.
        */
    export interface PricingClientConfig extends PricingClientConfigType {
    }
    type PricingClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of PricingClient class. This is resolved and normalized from the {@link PricingClientConfig | constructor configuration interface}.
        */
    export interface PricingClientResolvedConfig extends PricingClientResolvedConfigType {
    }
    /**
        * <p>Amazon Web Services Price List API is a centralized and convenient way to
        *          programmatically query Amazon Web Services for services, products, and pricing information. The Amazon Web Services Price List
        *          uses standardized product attributes such as <code>Location</code>, <code>Storage
        *             Class</code>, and <code>Operating System</code>, and provides prices at the SKU
        *          level. You can use the Amazon Web Services Price List to build cost control and scenario planning tools, reconcile
        *          billing data, forecast future spend for budgeting purposes, and provide cost benefit
        *          analysis that compare your internal workloads with Amazon Web Services.</p>
        *          <p>Use <code>GetServices</code> without a service code to retrieve the service codes for all AWS services, then
        *          <code>GetServices</code> with a service code to retrieve the attribute names for
        *          that service. After you have the service code and attribute names, you can use <code>GetAttributeValues</code>
        *          to see what values are available for an attribute. With the service code and an attribute name and value,
        *          you can use <code>GetProducts</code> to find specific products that you're interested in, such as
        *          an <code>AmazonEC2</code> instance, with a <code>Provisioned IOPS</code>
        *             <code>volumeType</code>.</p>
        *          <p>Service Endpoint</p>
        *          <p>Amazon Web Services Price List service API provides the following two endpoints:</p>
        *          <ul>
        *             <li>
        *                <p>https://api.pricing.us-east-1.amazonaws.com</p>
        *             </li>
        *             <li>
        *                <p>https://api.pricing.ap-south-1.amazonaws.com</p>
        *             </li>
        *          </ul>
        */
    export class PricingClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, PricingClientResolvedConfig> {
            /**
                * The resolved configuration of PricingClient class. This is resolved and normalized from the {@link PricingClientConfig | constructor configuration interface}.
                */
            readonly config: PricingClientResolvedConfig;
            constructor(configuration: PricingClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType, LazyJsonString as __LazyJsonString } from "@aws-sdk/smithy-client";
    import { PricingServiceException as __BaseException } from "@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/PricingServiceException";
    /**
        * <p>The values of a given attribute, such as <code>Throughput Optimized HDD</code> or <code>Provisioned
        *           IOPS</code> for the <code>Amazon EC2</code>
        *             <code>volumeType</code> attribute.</p>
        */
    export interface AttributeValue {
            /**
                * <p>The specific value of an <code>attributeName</code>.</p>
                */
            Value?: string;
    }
    export namespace AttributeValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AttributeValue) => any;
    }
    export interface DescribeServicesRequest {
            /**
                * <p>The code for the service whose information you want to retrieve, such as <code>AmazonEC2</code>.
                *           You can use
                *          the <code>ServiceCode</code> to filter the results in a <code>GetProducts</code> call.
                *       To retrieve a list of all services, leave this blank.</p>
                */
            ServiceCode?: string;
            /**
                * <p>The format version that you want the response to be in.</p>
                *          <p>Valid values are: <code>aws_v1</code>
                *          </p>
                */
            FormatVersion?: string;
            /**
                * <p>The pagination token that indicates the next set of results that you want to retrieve.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results that you want returned in the response.</p>
                */
            MaxResults?: number;
    }
    export namespace DescribeServicesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServicesRequest) => any;
    }
    /**
        * <p>The metadata for a service, such as the service code and available attribute names.</p>
        */
    export interface Service {
            /**
                * <p>The code for the Amazon Web Services service.</p>
                */
            ServiceCode: string | undefined;
            /**
                * <p>The attributes that are available for this service.</p>
                */
            AttributeNames?: string[];
    }
    export namespace Service {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Service) => any;
    }
    export interface DescribeServicesResponse {
            /**
                * <p>The service metadata for the service or services in the response.</p>
                */
            Services?: Service[];
            /**
                * <p>The format version of the response. For example, <code>aws_v1</code>.</p>
                */
            FormatVersion?: string;
            /**
                * <p>The pagination token for the next set of retrievable results.</p>
                */
            NextToken?: string;
    }
    export namespace DescribeServicesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeServicesResponse) => any;
    }
    /**
        * <p>The pagination token expired. Try again without a pagination token.</p>
        */
    export class ExpiredNextTokenException extends __BaseException {
            readonly name: "ExpiredNextTokenException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ExpiredNextTokenException, __BaseException>);
    }
    /**
        * <p>An error on the server occurred during the processing of your request. Try again later.</p>
        */
    export class InternalErrorException extends __BaseException {
            readonly name: "InternalErrorException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalErrorException, __BaseException>);
    }
    /**
        * <p>The pagination token is invalid. Try again without a pagination token.</p>
        */
    export class InvalidNextTokenException extends __BaseException {
            readonly name: "InvalidNextTokenException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>);
    }
    /**
        * <p>One or more parameters had an invalid value.</p>
        */
    export class InvalidParameterException extends __BaseException {
            readonly name: "InvalidParameterException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
    }
    /**
        * <p>The requested resource can't be found.</p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    export interface GetAttributeValuesRequest {
            /**
                * <p>The service code for the service whose attributes you want to retrieve. For example, if you want
                *           the retrieve an EC2 attribute, use <code>AmazonEC2</code>.</p>
                */
            ServiceCode: string | undefined;
            /**
                * <p>The name of the attribute that you want to retrieve the values for, such as <code>volumeType</code>.</p>
                */
            AttributeName: string | undefined;
            /**
                * <p>The pagination token that indicates the next set of results that you want to retrieve.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in response.</p>
                */
            MaxResults?: number;
    }
    export namespace GetAttributeValuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttributeValuesRequest) => any;
    }
    export interface GetAttributeValuesResponse {
            /**
                * <p>The list of values for an attribute. For example, <code>Throughput Optimized HDD</code> and
                *       <code>Provisioned IOPS</code> are two available values for the <code>AmazonEC2</code>
                *             <code>volumeType</code>.</p>
                */
            AttributeValues?: AttributeValue[];
            /**
                * <p>The pagination token that indicates the next set of results to retrieve.</p>
                */
            NextToken?: string;
    }
    export namespace GetAttributeValuesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAttributeValuesResponse) => any;
    }
    export enum FilterType {
            TERM_MATCH = "TERM_MATCH"
    }
    /**
        * <p>The constraints that you want all returned products to match.</p>
        */
    export interface Filter {
            /**
                * <p>The type of filter that you want to use.</p>
                *          <p>Valid values are: <code>TERM_MATCH</code>. <code>TERM_MATCH</code> returns only
                *          products that match both the given filter field and the given value.</p>
                */
            Type: FilterType | string | undefined;
            /**
                * <p>The product metadata field that you want to filter on. You can filter by just the
                *          service code to see all products for a specific service, filter
                *          by just the attribute name to see a specific attribute for multiple services, or use both a service code
                *          and an attribute name to retrieve only products that match both fields.</p>
                *          <p>Valid values include: <code>ServiceCode</code>, and all attribute names</p>
                *
                *          <p>For example, you can filter by the <code>AmazonEC2</code> service code and the
                *          <code>volumeType</code> attribute name to get the prices for only Amazon EC2 volumes.</p>
                */
            Field: string | undefined;
            /**
                * <p>The service code or attribute value that you want to filter by. If you are filtering by
                *          service code this is the actual service code, such as <code>AmazonEC2</code>. If you are
                *          filtering by attribute name, this is the attribute value that you want the returned products
                *          to match, such as a <code>Provisioned IOPS</code> volume.</p>
                */
            Value: string | undefined;
    }
    export namespace Filter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Filter) => any;
    }
    export interface GetProductsRequest {
            /**
                * <p>The code for the service whose products you want to retrieve. </p>
                */
            ServiceCode: string | undefined;
            /**
                * <p>The list of filters that limit the returned products. only products that match all filters
                *          are returned.</p>
                */
            Filters?: Filter[];
            /**
                * <p>The format version that you want the response to be in.</p>
                *          <p>Valid values are: <code>aws_v1</code>
                *          </p>
                */
            FormatVersion?: string;
            /**
                * <p>The pagination token that indicates the next set of results that you want to retrieve.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            MaxResults?: number;
    }
    export namespace GetProductsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProductsRequest) => any;
    }
    export interface GetProductsResponse {
            /**
                * <p>The format version of the response. For example, aws_v1.</p>
                */
            FormatVersion?: string;
            /**
                * <p>The list of products that match your filters. The list contains both the product metadata and
                *          the price information.</p>
                */
            PriceList?: (__LazyJsonString | string)[];
            /**
                * <p>The pagination token that indicates the next set of results to retrieve.</p>
                */
            NextToken?: string;
    }
    export namespace GetProductsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetProductsResponse) => any;
    }
}

declare module '@aws-sdk/client-pricing/node_modules/@aws-sdk/client-pricing/dist-types/models/PricingServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Pricing service.
        */
    export class PricingServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

