// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-workmail' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AssociateDelegateToResourceCommandInput, AssociateDelegateToResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateDelegateToResourceCommand";
    import { AssociateMemberToGroupCommandInput, AssociateMemberToGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateMemberToGroupCommand";
    import { CancelMailboxExportJobCommandInput, CancelMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CancelMailboxExportJobCommand";
    import { CreateAliasCommandInput, CreateAliasCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAliasCommand";
    import { CreateAvailabilityConfigurationCommandInput, CreateAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAvailabilityConfigurationCommand";
    import { CreateGroupCommandInput, CreateGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateGroupCommand";
    import { CreateMobileDeviceAccessRuleCommandInput, CreateMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateMobileDeviceAccessRuleCommand";
    import { CreateOrganizationCommandInput, CreateOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateOrganizationCommand";
    import { CreateResourceCommandInput, CreateResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateResourceCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateUserCommand";
    import { DeleteAccessControlRuleCommandInput, DeleteAccessControlRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAccessControlRuleCommand";
    import { DeleteAliasCommandInput, DeleteAliasCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAliasCommand";
    import { DeleteAvailabilityConfigurationCommandInput, DeleteAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAvailabilityConfigurationCommand";
    import { DeleteEmailMonitoringConfigurationCommandInput, DeleteEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteEmailMonitoringConfigurationCommand";
    import { DeleteGroupCommandInput, DeleteGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteGroupCommand";
    import { DeleteMailboxPermissionsCommandInput, DeleteMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMailboxPermissionsCommand";
    import { DeleteMobileDeviceAccessOverrideCommandInput, DeleteMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessOverrideCommand";
    import { DeleteMobileDeviceAccessRuleCommandInput, DeleteMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessRuleCommand";
    import { DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteOrganizationCommand";
    import { DeleteResourceCommandInput, DeleteResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteResourceCommand";
    import { DeleteRetentionPolicyCommandInput, DeleteRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteRetentionPolicyCommand";
    import { DeleteUserCommandInput, DeleteUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteUserCommand";
    import { DeregisterFromWorkMailCommandInput, DeregisterFromWorkMailCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterFromWorkMailCommand";
    import { DeregisterMailDomainCommandInput, DeregisterMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterMailDomainCommand";
    import { DescribeEmailMonitoringConfigurationCommandInput, DescribeEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeEmailMonitoringConfigurationCommand";
    import { DescribeGroupCommandInput, DescribeGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeGroupCommand";
    import { DescribeInboundDmarcSettingsCommandInput, DescribeInboundDmarcSettingsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeInboundDmarcSettingsCommand";
    import { DescribeMailboxExportJobCommandInput, DescribeMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeMailboxExportJobCommand";
    import { DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeOrganizationCommand";
    import { DescribeResourceCommandInput, DescribeResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeResourceCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeUserCommand";
    import { DisassociateDelegateFromResourceCommandInput, DisassociateDelegateFromResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateDelegateFromResourceCommand";
    import { DisassociateMemberFromGroupCommandInput, DisassociateMemberFromGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateMemberFromGroupCommand";
    import { GetAccessControlEffectCommandInput, GetAccessControlEffectCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetAccessControlEffectCommand";
    import { GetDefaultRetentionPolicyCommandInput, GetDefaultRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetDefaultRetentionPolicyCommand";
    import { GetMailboxDetailsCommandInput, GetMailboxDetailsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailboxDetailsCommand";
    import { GetMailDomainCommandInput, GetMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailDomainCommand";
    import { GetMobileDeviceAccessEffectCommandInput, GetMobileDeviceAccessEffectCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessEffectCommand";
    import { GetMobileDeviceAccessOverrideCommandInput, GetMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessOverrideCommand";
    import { ListAccessControlRulesCommandInput, ListAccessControlRulesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAccessControlRulesCommand";
    import { ListAliasesCommandInput, ListAliasesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAliasesCommand";
    import { ListAvailabilityConfigurationsCommandInput, ListAvailabilityConfigurationsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAvailabilityConfigurationsCommand";
    import { ListGroupMembersCommandInput, ListGroupMembersCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupMembersCommand";
    import { ListGroupsCommandInput, ListGroupsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupsCommand";
    import { ListMailboxExportJobsCommandInput, ListMailboxExportJobsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxExportJobsCommand";
    import { ListMailboxPermissionsCommandInput, ListMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxPermissionsCommand";
    import { ListMailDomainsCommandInput, ListMailDomainsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailDomainsCommand";
    import { ListMobileDeviceAccessOverridesCommandInput, ListMobileDeviceAccessOverridesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessOverridesCommand";
    import { ListMobileDeviceAccessRulesCommandInput, ListMobileDeviceAccessRulesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessRulesCommand";
    import { ListOrganizationsCommandInput, ListOrganizationsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListOrganizationsCommand";
    import { ListResourceDelegatesCommandInput, ListResourceDelegatesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourceDelegatesCommand";
    import { ListResourcesCommandInput, ListResourcesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourcesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListTagsForResourceCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListUsersCommand";
    import { PutAccessControlRuleCommandInput, PutAccessControlRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutAccessControlRuleCommand";
    import { PutEmailMonitoringConfigurationCommandInput, PutEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutEmailMonitoringConfigurationCommand";
    import { PutInboundDmarcSettingsCommandInput, PutInboundDmarcSettingsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutInboundDmarcSettingsCommand";
    import { PutMailboxPermissionsCommandInput, PutMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMailboxPermissionsCommand";
    import { PutMobileDeviceAccessOverrideCommandInput, PutMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMobileDeviceAccessOverrideCommand";
    import { PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutRetentionPolicyCommand";
    import { RegisterMailDomainCommandInput, RegisterMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterMailDomainCommand";
    import { RegisterToWorkMailCommandInput, RegisterToWorkMailCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterToWorkMailCommand";
    import { ResetPasswordCommandInput, ResetPasswordCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ResetPasswordCommand";
    import { StartMailboxExportJobCommandInput, StartMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/StartMailboxExportJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TagResourceCommand";
    import { TestAvailabilityConfigurationCommandInput, TestAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TestAvailabilityConfigurationCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UntagResourceCommand";
    import { UpdateAvailabilityConfigurationCommandInput, UpdateAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateAvailabilityConfigurationCommand";
    import { UpdateDefaultMailDomainCommandInput, UpdateDefaultMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateDefaultMailDomainCommand";
    import { UpdateMailboxQuotaCommandInput, UpdateMailboxQuotaCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMailboxQuotaCommand";
    import { UpdateMobileDeviceAccessRuleCommandInput, UpdateMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMobileDeviceAccessRuleCommand";
    import { UpdatePrimaryEmailAddressCommandInput, UpdatePrimaryEmailAddressCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdatePrimaryEmailAddressCommand";
    import { UpdateResourceCommandInput, UpdateResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateResourceCommand";
    import { WorkMailClient } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    /**
        * <p>Amazon WorkMail is a secure, managed business email and calendaring service with support for
        *          existing desktop and mobile email clients. You can access your email, contacts, and
        *          calendars using Microsoft Outlook, your browser, or other native iOS and Android email
        *          applications. You can integrate WorkMail with your existing corporate directory and control
        *          both the keys that encrypt your data and the location in which your data is
        *          stored.</p>
        *          <p>The WorkMail API is designed for the following scenarios:</p>
        *          <ul>
        *             <li>
        *                <p>Listing and describing organizations</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing users</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing groups</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing resources</p>
        *             </li>
        *          </ul>
        *          <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not
        *          only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management
        *          users and roles to help facilitate access, trust, and permission policies. By creating a
        *          role and allowing an IAM user to access the WorkMail site, the IAM user gains full
        *          administrative visibility into the entire WorkMail organization (or as set in the IAM
        *          policy). This includes, but is not limited to, the ability to create, update, and delete
        *          users, groups, and resources. This allows developers to perform the scenarios listed above,
        *          as well as give users the ability to grant access on a selective basis using the IAM
        *          model.</p>
        */
    export class WorkMail extends WorkMailClient {
            /**
                * <p>Adds a member (user or group) to the resource's set of delegates.</p>
                */
            associateDelegateToResource(args: AssociateDelegateToResourceCommandInput, options?: __HttpHandlerOptions): Promise<AssociateDelegateToResourceCommandOutput>;
            associateDelegateToResource(args: AssociateDelegateToResourceCommandInput, cb: (err: any, data?: AssociateDelegateToResourceCommandOutput) => void): void;
            associateDelegateToResource(args: AssociateDelegateToResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateDelegateToResourceCommandOutput) => void): void;
            /**
                * <p>Adds a member (user or group) to the group's set.</p>
                */
            associateMemberToGroup(args: AssociateMemberToGroupCommandInput, options?: __HttpHandlerOptions): Promise<AssociateMemberToGroupCommandOutput>;
            associateMemberToGroup(args: AssociateMemberToGroupCommandInput, cb: (err: any, data?: AssociateMemberToGroupCommandOutput) => void): void;
            associateMemberToGroup(args: AssociateMemberToGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateMemberToGroupCommandOutput) => void): void;
            /**
                * <p>Cancels a mailbox export job.</p>
                *          <note>
                *             <p>If the mailbox export job is near completion, it might not be possible to cancel
                *             it.</p>
                *          </note>
                */
            cancelMailboxExportJob(args: CancelMailboxExportJobCommandInput, options?: __HttpHandlerOptions): Promise<CancelMailboxExportJobCommandOutput>;
            cancelMailboxExportJob(args: CancelMailboxExportJobCommandInput, cb: (err: any, data?: CancelMailboxExportJobCommandOutput) => void): void;
            cancelMailboxExportJob(args: CancelMailboxExportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelMailboxExportJobCommandOutput) => void): void;
            /**
                * <p>Adds an alias to the set of a given member (user or group) of Amazon WorkMail.</p>
                */
            createAlias(args: CreateAliasCommandInput, options?: __HttpHandlerOptions): Promise<CreateAliasCommandOutput>;
            createAlias(args: CreateAliasCommandInput, cb: (err: any, data?: CreateAliasCommandOutput) => void): void;
            createAlias(args: CreateAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAliasCommandOutput) => void): void;
            /**
                * <p>Creates an <code>AvailabilityConfiguration</code> for the given WorkMail organization and domain.</p>
                */
            createAvailabilityConfiguration(args: CreateAvailabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateAvailabilityConfigurationCommandOutput>;
            createAvailabilityConfiguration(args: CreateAvailabilityConfigurationCommandInput, cb: (err: any, data?: CreateAvailabilityConfigurationCommandOutput) => void): void;
            createAvailabilityConfiguration(args: CreateAvailabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAvailabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Creates a group that can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.</p>
                */
            createGroup(args: CreateGroupCommandInput, options?: __HttpHandlerOptions): Promise<CreateGroupCommandOutput>;
            createGroup(args: CreateGroupCommandInput, cb: (err: any, data?: CreateGroupCommandOutput) => void): void;
            createGroup(args: CreateGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateGroupCommandOutput) => void): void;
            /**
                * <p>Creates a new mobile device access rule for the specified Amazon WorkMail organization.</p>
                */
            createMobileDeviceAccessRule(args: CreateMobileDeviceAccessRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateMobileDeviceAccessRuleCommandOutput>;
            createMobileDeviceAccessRule(args: CreateMobileDeviceAccessRuleCommandInput, cb: (err: any, data?: CreateMobileDeviceAccessRuleCommandOutput) => void): void;
            createMobileDeviceAccessRule(args: CreateMobileDeviceAccessRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMobileDeviceAccessRuleCommandOutput) => void): void;
            /**
                * <p>Creates a new Amazon WorkMail organization. Optionally, you can choose to associate an existing AWS Directory Service directory with your organization. If an AWS Directory Service directory ID is specified, the organization alias must match the directory alias. If you choose not to associate an existing directory with your organization, then we create a new Amazon WorkMail directory for you. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html">Adding an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
                *          <p>You can associate multiple email domains with an organization, then set your default email domain from the Amazon WorkMail console. You can also associate a domain that is managed in an Amazon Route 53 public hosted zone. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding a domain</a> and <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html">Choosing the default domain</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
                *          <p>Optionally, you can use a customer managed master key from AWS Key Management Service
                *          (AWS KMS) to encrypt email for your organization. If you don't associate an AWS KMS key, Amazon WorkMail creates a
                *          default AWS managed master key for you.</p>
                */
            createOrganization(args: CreateOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<CreateOrganizationCommandOutput>;
            createOrganization(args: CreateOrganizationCommandInput, cb: (err: any, data?: CreateOrganizationCommandOutput) => void): void;
            createOrganization(args: CreateOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateOrganizationCommandOutput) => void): void;
            /**
                * <p>Creates a new Amazon WorkMail resource. </p>
                */
            createResource(args: CreateResourceCommandInput, options?: __HttpHandlerOptions): Promise<CreateResourceCommandOutput>;
            createResource(args: CreateResourceCommandInput, cb: (err: any, data?: CreateResourceCommandOutput) => void): void;
            createResource(args: CreateResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateResourceCommandOutput) => void): void;
            /**
                * <p>Creates a user who can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.</p>
                */
            createUser(args: CreateUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserCommandOutput>;
            createUser(args: CreateUserCommandInput, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            createUser(args: CreateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
            /**
                * <p>Deletes an access control rule for the specified WorkMail organization.</p>
                *          <note>
                *             <p>Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
                *          </note>
                */
            deleteAccessControlRule(args: DeleteAccessControlRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessControlRuleCommandOutput>;
            deleteAccessControlRule(args: DeleteAccessControlRuleCommandInput, cb: (err: any, data?: DeleteAccessControlRuleCommandOutput) => void): void;
            deleteAccessControlRule(args: DeleteAccessControlRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessControlRuleCommandOutput) => void): void;
            /**
                * <p>Remove one or more specified aliases from a set of aliases for a given
                *          user.</p>
                */
            deleteAlias(args: DeleteAliasCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAliasCommandOutput>;
            deleteAlias(args: DeleteAliasCommandInput, cb: (err: any, data?: DeleteAliasCommandOutput) => void): void;
            deleteAlias(args: DeleteAliasCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAliasCommandOutput) => void): void;
            /**
                * <p>Deletes the <code>AvailabilityConfiguration</code> for the given WorkMail organization and domain.</p>
                */
            deleteAvailabilityConfiguration(args: DeleteAvailabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAvailabilityConfigurationCommandOutput>;
            deleteAvailabilityConfiguration(args: DeleteAvailabilityConfigurationCommandInput, cb: (err: any, data?: DeleteAvailabilityConfigurationCommandOutput) => void): void;
            deleteAvailabilityConfiguration(args: DeleteAvailabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAvailabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes the email monitoring configuration for a specified organization.</p>
                */
            deleteEmailMonitoringConfiguration(args: DeleteEmailMonitoringConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEmailMonitoringConfigurationCommandOutput>;
            deleteEmailMonitoringConfiguration(args: DeleteEmailMonitoringConfigurationCommandInput, cb: (err: any, data?: DeleteEmailMonitoringConfigurationCommandOutput) => void): void;
            deleteEmailMonitoringConfiguration(args: DeleteEmailMonitoringConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEmailMonitoringConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes a group from Amazon WorkMail.</p>
                */
            deleteGroup(args: DeleteGroupCommandInput, options?: __HttpHandlerOptions): Promise<DeleteGroupCommandOutput>;
            deleteGroup(args: DeleteGroupCommandInput, cb: (err: any, data?: DeleteGroupCommandOutput) => void): void;
            deleteGroup(args: DeleteGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteGroupCommandOutput) => void): void;
            /**
                * <p>Deletes permissions granted to a member (user or group).</p>
                */
            deleteMailboxPermissions(args: DeleteMailboxPermissionsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMailboxPermissionsCommandOutput>;
            deleteMailboxPermissions(args: DeleteMailboxPermissionsCommandInput, cb: (err: any, data?: DeleteMailboxPermissionsCommandOutput) => void): void;
            deleteMailboxPermissions(args: DeleteMailboxPermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMailboxPermissionsCommandOutput) => void): void;
            /**
                * <p>Deletes the mobile device access override for the given WorkMail organization, user, and device.</p>
                *          <note>
                *             <p>Deleting already deleted and non-existing overrides does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
                *          </note>
                */
            deleteMobileDeviceAccessOverride(args: DeleteMobileDeviceAccessOverrideCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMobileDeviceAccessOverrideCommandOutput>;
            deleteMobileDeviceAccessOverride(args: DeleteMobileDeviceAccessOverrideCommandInput, cb: (err: any, data?: DeleteMobileDeviceAccessOverrideCommandOutput) => void): void;
            deleteMobileDeviceAccessOverride(args: DeleteMobileDeviceAccessOverrideCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMobileDeviceAccessOverrideCommandOutput) => void): void;
            /**
                * <p>Deletes a mobile device access rule for the specified Amazon WorkMail organization.</p>
                *          <note>
                *             <p>Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
                *          </note>
                */
            deleteMobileDeviceAccessRule(args: DeleteMobileDeviceAccessRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMobileDeviceAccessRuleCommandOutput>;
            deleteMobileDeviceAccessRule(args: DeleteMobileDeviceAccessRuleCommandInput, cb: (err: any, data?: DeleteMobileDeviceAccessRuleCommandOutput) => void): void;
            deleteMobileDeviceAccessRule(args: DeleteMobileDeviceAccessRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMobileDeviceAccessRuleCommandOutput) => void): void;
            /**
                * <p>Deletes an Amazon WorkMail organization and all underlying AWS resources managed by Amazon WorkMail as part of the organization. You can choose whether to delete the associated directory. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html">Removing an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
                */
            deleteOrganization(args: DeleteOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteOrganizationCommandOutput>;
            deleteOrganization(args: DeleteOrganizationCommandInput, cb: (err: any, data?: DeleteOrganizationCommandOutput) => void): void;
            deleteOrganization(args: DeleteOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteOrganizationCommandOutput) => void): void;
            /**
                * <p>Deletes the specified resource. </p>
                */
            deleteResource(args: DeleteResourceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteResourceCommandOutput>;
            deleteResource(args: DeleteResourceCommandInput, cb: (err: any, data?: DeleteResourceCommandOutput) => void): void;
            deleteResource(args: DeleteResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteResourceCommandOutput) => void): void;
            /**
                * <p>Deletes the specified retention policy from the specified organization.</p>
                */
            deleteRetentionPolicy(args: DeleteRetentionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRetentionPolicyCommandOutput>;
            deleteRetentionPolicy(args: DeleteRetentionPolicyCommandInput, cb: (err: any, data?: DeleteRetentionPolicyCommandOutput) => void): void;
            deleteRetentionPolicy(args: DeleteRetentionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRetentionPolicyCommandOutput) => void): void;
            /**
                * <p>Deletes a user from Amazon WorkMail and all subsequent systems. Before you can delete a
                *          user, the user state must be <code>DISABLED</code>. Use the <a>DescribeUser</a>
                *          action to confirm the user state.</p>
                *          <p>Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes for
                *          30 days before they are permanently removed.</p>
                */
            deleteUser(args: DeleteUserCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserCommandOutput>;
            deleteUser(args: DeleteUserCommandInput, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
            deleteUser(args: DeleteUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
            /**
                * <p>Mark a user, group, or resource as no longer used in Amazon WorkMail. This action
                *          disassociates the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days
                *          before they are permanently removed. The functionality in the console is
                *             <i>Disable</i>.</p>
                */
            deregisterFromWorkMail(args: DeregisterFromWorkMailCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterFromWorkMailCommandOutput>;
            deregisterFromWorkMail(args: DeregisterFromWorkMailCommandInput, cb: (err: any, data?: DeregisterFromWorkMailCommandOutput) => void): void;
            deregisterFromWorkMail(args: DeregisterFromWorkMailCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterFromWorkMailCommandOutput) => void): void;
            /**
                * <p>Removes a domain from Amazon WorkMail, stops email routing to WorkMail, and removes the authorization allowing WorkMail use. SES keeps the domain because other applications may use it. You must first
                *          remove any email address used by WorkMail entities before you remove the domain.</p>
                */
            deregisterMailDomain(args: DeregisterMailDomainCommandInput, options?: __HttpHandlerOptions): Promise<DeregisterMailDomainCommandOutput>;
            deregisterMailDomain(args: DeregisterMailDomainCommandInput, cb: (err: any, data?: DeregisterMailDomainCommandOutput) => void): void;
            deregisterMailDomain(args: DeregisterMailDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeregisterMailDomainCommandOutput) => void): void;
            /**
                * <p>Describes the current email monitoring configuration for a specified organization.</p>
                */
            describeEmailMonitoringConfiguration(args: DescribeEmailMonitoringConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEmailMonitoringConfigurationCommandOutput>;
            describeEmailMonitoringConfiguration(args: DescribeEmailMonitoringConfigurationCommandInput, cb: (err: any, data?: DescribeEmailMonitoringConfigurationCommandOutput) => void): void;
            describeEmailMonitoringConfiguration(args: DescribeEmailMonitoringConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEmailMonitoringConfigurationCommandOutput) => void): void;
            /**
                * <p>Returns the data available for the group.</p>
                */
            describeGroup(args: DescribeGroupCommandInput, options?: __HttpHandlerOptions): Promise<DescribeGroupCommandOutput>;
            describeGroup(args: DescribeGroupCommandInput, cb: (err: any, data?: DescribeGroupCommandOutput) => void): void;
            describeGroup(args: DescribeGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeGroupCommandOutput) => void): void;
            /**
                * <p>Lists the settings in a DMARC policy for a specified organization.</p>
                */
            describeInboundDmarcSettings(args: DescribeInboundDmarcSettingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInboundDmarcSettingsCommandOutput>;
            describeInboundDmarcSettings(args: DescribeInboundDmarcSettingsCommandInput, cb: (err: any, data?: DescribeInboundDmarcSettingsCommandOutput) => void): void;
            describeInboundDmarcSettings(args: DescribeInboundDmarcSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInboundDmarcSettingsCommandOutput) => void): void;
            /**
                * <p>Describes the current status of a mailbox export job.</p>
                */
            describeMailboxExportJob(args: DescribeMailboxExportJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeMailboxExportJobCommandOutput>;
            describeMailboxExportJob(args: DescribeMailboxExportJobCommandInput, cb: (err: any, data?: DescribeMailboxExportJobCommandOutput) => void): void;
            describeMailboxExportJob(args: DescribeMailboxExportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeMailboxExportJobCommandOutput) => void): void;
            /**
                * <p>Provides more information regarding a given organization based on its
                *          identifier.</p>
                */
            describeOrganization(args: DescribeOrganizationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeOrganizationCommandOutput>;
            describeOrganization(args: DescribeOrganizationCommandInput, cb: (err: any, data?: DescribeOrganizationCommandOutput) => void): void;
            describeOrganization(args: DescribeOrganizationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeOrganizationCommandOutput) => void): void;
            /**
                * <p>Returns the data available for the resource.</p>
                */
            describeResource(args: DescribeResourceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeResourceCommandOutput>;
            describeResource(args: DescribeResourceCommandInput, cb: (err: any, data?: DescribeResourceCommandOutput) => void): void;
            describeResource(args: DescribeResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeResourceCommandOutput) => void): void;
            /**
                * <p>Provides information regarding the user.</p>
                */
            describeUser(args: DescribeUserCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserCommandOutput>;
            describeUser(args: DescribeUserCommandInput, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            describeUser(args: DescribeUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserCommandOutput) => void): void;
            /**
                * <p>Removes a member from the resource's set of delegates.</p>
                */
            disassociateDelegateFromResource(args: DisassociateDelegateFromResourceCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateDelegateFromResourceCommandOutput>;
            disassociateDelegateFromResource(args: DisassociateDelegateFromResourceCommandInput, cb: (err: any, data?: DisassociateDelegateFromResourceCommandOutput) => void): void;
            disassociateDelegateFromResource(args: DisassociateDelegateFromResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateDelegateFromResourceCommandOutput) => void): void;
            /**
                * <p>Removes a member from a group.</p>
                */
            disassociateMemberFromGroup(args: DisassociateMemberFromGroupCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateMemberFromGroupCommandOutput>;
            disassociateMemberFromGroup(args: DisassociateMemberFromGroupCommandInput, cb: (err: any, data?: DisassociateMemberFromGroupCommandOutput) => void): void;
            disassociateMemberFromGroup(args: DisassociateMemberFromGroupCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateMemberFromGroupCommandOutput) => void): void;
            /**
                * <p>Gets the effects of an organization's access control rules as they apply to a
                *          specified IPv4 address, access protocol action, or user ID. </p>
                */
            getAccessControlEffect(args: GetAccessControlEffectCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessControlEffectCommandOutput>;
            getAccessControlEffect(args: GetAccessControlEffectCommandInput, cb: (err: any, data?: GetAccessControlEffectCommandOutput) => void): void;
            getAccessControlEffect(args: GetAccessControlEffectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessControlEffectCommandOutput) => void): void;
            /**
                * <p>Gets the default retention policy details for the specified organization.</p>
                */
            getDefaultRetentionPolicy(args: GetDefaultRetentionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetDefaultRetentionPolicyCommandOutput>;
            getDefaultRetentionPolicy(args: GetDefaultRetentionPolicyCommandInput, cb: (err: any, data?: GetDefaultRetentionPolicyCommandOutput) => void): void;
            getDefaultRetentionPolicy(args: GetDefaultRetentionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetDefaultRetentionPolicyCommandOutput) => void): void;
            /**
                * <p>Requests a user's mailbox details for a specified organization and user.</p>
                */
            getMailboxDetails(args: GetMailboxDetailsCommandInput, options?: __HttpHandlerOptions): Promise<GetMailboxDetailsCommandOutput>;
            getMailboxDetails(args: GetMailboxDetailsCommandInput, cb: (err: any, data?: GetMailboxDetailsCommandOutput) => void): void;
            getMailboxDetails(args: GetMailboxDetailsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMailboxDetailsCommandOutput) => void): void;
            /**
                * <p>Gets details for a mail domain, including domain records required to configure your domain with recommended security.</p>
                */
            getMailDomain(args: GetMailDomainCommandInput, options?: __HttpHandlerOptions): Promise<GetMailDomainCommandOutput>;
            getMailDomain(args: GetMailDomainCommandInput, cb: (err: any, data?: GetMailDomainCommandOutput) => void): void;
            getMailDomain(args: GetMailDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMailDomainCommandOutput) => void): void;
            /**
                * <p>Simulates the effect of the mobile device access rules for the given attributes of a sample access event. Use this method to test the effects of the current set of mobile device access
                *          rules for the Amazon WorkMail organization for a particular user's attributes.</p>
                */
            getMobileDeviceAccessEffect(args: GetMobileDeviceAccessEffectCommandInput, options?: __HttpHandlerOptions): Promise<GetMobileDeviceAccessEffectCommandOutput>;
            getMobileDeviceAccessEffect(args: GetMobileDeviceAccessEffectCommandInput, cb: (err: any, data?: GetMobileDeviceAccessEffectCommandOutput) => void): void;
            getMobileDeviceAccessEffect(args: GetMobileDeviceAccessEffectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMobileDeviceAccessEffectCommandOutput) => void): void;
            /**
                * <p>Gets the mobile device access override for the given WorkMail organization, user, and device.</p>
                */
            getMobileDeviceAccessOverride(args: GetMobileDeviceAccessOverrideCommandInput, options?: __HttpHandlerOptions): Promise<GetMobileDeviceAccessOverrideCommandOutput>;
            getMobileDeviceAccessOverride(args: GetMobileDeviceAccessOverrideCommandInput, cb: (err: any, data?: GetMobileDeviceAccessOverrideCommandOutput) => void): void;
            getMobileDeviceAccessOverride(args: GetMobileDeviceAccessOverrideCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMobileDeviceAccessOverrideCommandOutput) => void): void;
            /**
                * <p>Lists the access control rules for the specified organization.</p>
                */
            listAccessControlRules(args: ListAccessControlRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListAccessControlRulesCommandOutput>;
            listAccessControlRules(args: ListAccessControlRulesCommandInput, cb: (err: any, data?: ListAccessControlRulesCommandOutput) => void): void;
            listAccessControlRules(args: ListAccessControlRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccessControlRulesCommandOutput) => void): void;
            /**
                * <p>Creates a paginated call to list the aliases associated with a given
                *          entity.</p>
                */
            listAliases(args: ListAliasesCommandInput, options?: __HttpHandlerOptions): Promise<ListAliasesCommandOutput>;
            listAliases(args: ListAliasesCommandInput, cb: (err: any, data?: ListAliasesCommandOutput) => void): void;
            listAliases(args: ListAliasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAliasesCommandOutput) => void): void;
            /**
                * <p>List all the <code>AvailabilityConfiguration</code>'s for the given WorkMail organization.</p>
                */
            listAvailabilityConfigurations(args: ListAvailabilityConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListAvailabilityConfigurationsCommandOutput>;
            listAvailabilityConfigurations(args: ListAvailabilityConfigurationsCommandInput, cb: (err: any, data?: ListAvailabilityConfigurationsCommandOutput) => void): void;
            listAvailabilityConfigurations(args: ListAvailabilityConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAvailabilityConfigurationsCommandOutput) => void): void;
            /**
                * <p>Returns an overview of the members of a group. Users and groups can be members of a
                *          group.</p>
                */
            listGroupMembers(args: ListGroupMembersCommandInput, options?: __HttpHandlerOptions): Promise<ListGroupMembersCommandOutput>;
            listGroupMembers(args: ListGroupMembersCommandInput, cb: (err: any, data?: ListGroupMembersCommandOutput) => void): void;
            listGroupMembers(args: ListGroupMembersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGroupMembersCommandOutput) => void): void;
            /**
                * <p>Returns summaries of the organization's groups.</p>
                */
            listGroups(args: ListGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListGroupsCommandOutput>;
            listGroups(args: ListGroupsCommandInput, cb: (err: any, data?: ListGroupsCommandOutput) => void): void;
            listGroups(args: ListGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGroupsCommandOutput) => void): void;
            /**
                * <p>Lists the mailbox export jobs started for the specified organization within the last
                *          seven days.</p>
                */
            listMailboxExportJobs(args: ListMailboxExportJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListMailboxExportJobsCommandOutput>;
            listMailboxExportJobs(args: ListMailboxExportJobsCommandInput, cb: (err: any, data?: ListMailboxExportJobsCommandOutput) => void): void;
            listMailboxExportJobs(args: ListMailboxExportJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMailboxExportJobsCommandOutput) => void): void;
            /**
                * <p>Lists the mailbox permissions associated with a user, group, or resource
                *          mailbox.</p>
                */
            listMailboxPermissions(args: ListMailboxPermissionsCommandInput, options?: __HttpHandlerOptions): Promise<ListMailboxPermissionsCommandOutput>;
            listMailboxPermissions(args: ListMailboxPermissionsCommandInput, cb: (err: any, data?: ListMailboxPermissionsCommandOutput) => void): void;
            listMailboxPermissions(args: ListMailboxPermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMailboxPermissionsCommandOutput) => void): void;
            /**
                * <p>Lists the mail domains in a given Amazon WorkMail organization.</p>
                */
            listMailDomains(args: ListMailDomainsCommandInput, options?: __HttpHandlerOptions): Promise<ListMailDomainsCommandOutput>;
            listMailDomains(args: ListMailDomainsCommandInput, cb: (err: any, data?: ListMailDomainsCommandOutput) => void): void;
            listMailDomains(args: ListMailDomainsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMailDomainsCommandOutput) => void): void;
            /**
                * <p>Lists all the mobile device access overrides for any given combination of WorkMail organization, user, or device.</p>
                */
            listMobileDeviceAccessOverrides(args: ListMobileDeviceAccessOverridesCommandInput, options?: __HttpHandlerOptions): Promise<ListMobileDeviceAccessOverridesCommandOutput>;
            listMobileDeviceAccessOverrides(args: ListMobileDeviceAccessOverridesCommandInput, cb: (err: any, data?: ListMobileDeviceAccessOverridesCommandOutput) => void): void;
            listMobileDeviceAccessOverrides(args: ListMobileDeviceAccessOverridesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMobileDeviceAccessOverridesCommandOutput) => void): void;
            /**
                * <p>Lists the mobile device access rules for the specified Amazon WorkMail organization.</p>
                */
            listMobileDeviceAccessRules(args: ListMobileDeviceAccessRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListMobileDeviceAccessRulesCommandOutput>;
            listMobileDeviceAccessRules(args: ListMobileDeviceAccessRulesCommandInput, cb: (err: any, data?: ListMobileDeviceAccessRulesCommandOutput) => void): void;
            listMobileDeviceAccessRules(args: ListMobileDeviceAccessRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMobileDeviceAccessRulesCommandOutput) => void): void;
            /**
                * <p>Returns summaries of the customer's organizations.</p>
                */
            listOrganizations(args: ListOrganizationsCommandInput, options?: __HttpHandlerOptions): Promise<ListOrganizationsCommandOutput>;
            listOrganizations(args: ListOrganizationsCommandInput, cb: (err: any, data?: ListOrganizationsCommandOutput) => void): void;
            listOrganizations(args: ListOrganizationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListOrganizationsCommandOutput) => void): void;
            /**
                * <p>Lists the delegates associated with a resource. Users and groups can be resource
                *          delegates and answer requests on behalf of the resource.</p>
                */
            listResourceDelegates(args: ListResourceDelegatesCommandInput, options?: __HttpHandlerOptions): Promise<ListResourceDelegatesCommandOutput>;
            listResourceDelegates(args: ListResourceDelegatesCommandInput, cb: (err: any, data?: ListResourceDelegatesCommandOutput) => void): void;
            listResourceDelegates(args: ListResourceDelegatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourceDelegatesCommandOutput) => void): void;
            /**
                * <p>Returns summaries of the organization's resources.</p>
                */
            listResources(args: ListResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListResourcesCommandOutput>;
            listResources(args: ListResourcesCommandInput, cb: (err: any, data?: ListResourcesCommandOutput) => void): void;
            listResources(args: ListResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResourcesCommandOutput) => void): void;
            /**
                * <p>Lists the tags applied to an Amazon WorkMail organization resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Returns summaries of the organization's users.</p>
                */
            listUsers(args: ListUsersCommandInput, options?: __HttpHandlerOptions): Promise<ListUsersCommandOutput>;
            listUsers(args: ListUsersCommandInput, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            listUsers(args: ListUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUsersCommandOutput) => void): void;
            /**
                * <p>Adds a new access control rule for the specified organization. The rule allows or
                *          denies access to the organization for the specified IPv4 addresses, access protocol
                *          actions, and user IDs. Adding a new rule with the same name as an existing rule replaces
                *          the older rule.</p>
                */
            putAccessControlRule(args: PutAccessControlRuleCommandInput, options?: __HttpHandlerOptions): Promise<PutAccessControlRuleCommandOutput>;
            putAccessControlRule(args: PutAccessControlRuleCommandInput, cb: (err: any, data?: PutAccessControlRuleCommandOutput) => void): void;
            putAccessControlRule(args: PutAccessControlRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccessControlRuleCommandOutput) => void): void;
            /**
                * <p>Creates or updates the email monitoring configuration for a specified organization.</p>
                */
            putEmailMonitoringConfiguration(args: PutEmailMonitoringConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutEmailMonitoringConfigurationCommandOutput>;
            putEmailMonitoringConfiguration(args: PutEmailMonitoringConfigurationCommandInput, cb: (err: any, data?: PutEmailMonitoringConfigurationCommandOutput) => void): void;
            putEmailMonitoringConfiguration(args: PutEmailMonitoringConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutEmailMonitoringConfigurationCommandOutput) => void): void;
            /**
                * <p>Enables or disables a DMARC policy for a given organization.</p>
                */
            putInboundDmarcSettings(args: PutInboundDmarcSettingsCommandInput, options?: __HttpHandlerOptions): Promise<PutInboundDmarcSettingsCommandOutput>;
            putInboundDmarcSettings(args: PutInboundDmarcSettingsCommandInput, cb: (err: any, data?: PutInboundDmarcSettingsCommandOutput) => void): void;
            putInboundDmarcSettings(args: PutInboundDmarcSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutInboundDmarcSettingsCommandOutput) => void): void;
            /**
                * <p>Sets permissions for a user, group, or resource. This replaces any pre-existing
                *          permissions.</p>
                */
            putMailboxPermissions(args: PutMailboxPermissionsCommandInput, options?: __HttpHandlerOptions): Promise<PutMailboxPermissionsCommandOutput>;
            putMailboxPermissions(args: PutMailboxPermissionsCommandInput, cb: (err: any, data?: PutMailboxPermissionsCommandOutput) => void): void;
            putMailboxPermissions(args: PutMailboxPermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutMailboxPermissionsCommandOutput) => void): void;
            /**
                * <p>Creates or updates a mobile device access override for the given WorkMail organization, user, and device.</p>
                */
            putMobileDeviceAccessOverride(args: PutMobileDeviceAccessOverrideCommandInput, options?: __HttpHandlerOptions): Promise<PutMobileDeviceAccessOverrideCommandOutput>;
            putMobileDeviceAccessOverride(args: PutMobileDeviceAccessOverrideCommandInput, cb: (err: any, data?: PutMobileDeviceAccessOverrideCommandOutput) => void): void;
            putMobileDeviceAccessOverride(args: PutMobileDeviceAccessOverrideCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutMobileDeviceAccessOverrideCommandOutput) => void): void;
            /**
                * <p>Puts a retention policy to the specified organization.</p>
                */
            putRetentionPolicy(args: PutRetentionPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutRetentionPolicyCommandOutput>;
            putRetentionPolicy(args: PutRetentionPolicyCommandInput, cb: (err: any, data?: PutRetentionPolicyCommandOutput) => void): void;
            putRetentionPolicy(args: PutRetentionPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutRetentionPolicyCommandOutput) => void): void;
            /**
                * <p>Registers a new domain in Amazon WorkMail and SES, and configures it for use by WorkMail. Emails received by SES for this domain are routed to the specified WorkMail organization, and WorkMail has
                *          permanent permission to use the specified domain for sending your users' emails.</p>
                */
            registerMailDomain(args: RegisterMailDomainCommandInput, options?: __HttpHandlerOptions): Promise<RegisterMailDomainCommandOutput>;
            registerMailDomain(args: RegisterMailDomainCommandInput, cb: (err: any, data?: RegisterMailDomainCommandOutput) => void): void;
            registerMailDomain(args: RegisterMailDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterMailDomainCommandOutput) => void): void;
            /**
                * <p>Registers an existing and disabled user, group, or resource for Amazon WorkMail use by
                *          associating a mailbox and calendaring capabilities. It performs no change if the user,
                *          group, or resource is enabled and fails if the user, group, or resource is deleted. This
                *          operation results in the accumulation of costs. For more information, see <a href="https://aws.amazon.com/workmail/pricing">Pricing</a>. The equivalent console
                *          functionality for this operation is <i>Enable</i>. </p>
                *          <p>Users can either be created by calling the <a>CreateUser</a> API operation
                *          or they can be synchronized from your directory. For more information, see <a>DeregisterFromWorkMail</a>.</p>
                */
            registerToWorkMail(args: RegisterToWorkMailCommandInput, options?: __HttpHandlerOptions): Promise<RegisterToWorkMailCommandOutput>;
            registerToWorkMail(args: RegisterToWorkMailCommandInput, cb: (err: any, data?: RegisterToWorkMailCommandOutput) => void): void;
            registerToWorkMail(args: RegisterToWorkMailCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RegisterToWorkMailCommandOutput) => void): void;
            /**
                * <p>Allows the administrator to reset the password for a user.</p>
                */
            resetPassword(args: ResetPasswordCommandInput, options?: __HttpHandlerOptions): Promise<ResetPasswordCommandOutput>;
            resetPassword(args: ResetPasswordCommandInput, cb: (err: any, data?: ResetPasswordCommandOutput) => void): void;
            resetPassword(args: ResetPasswordCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResetPasswordCommandOutput) => void): void;
            /**
                * <p>Starts a mailbox export job to export MIME-format email messages and calendar items
                *          from the specified mailbox to the specified Amazon Simple Storage Service (Amazon S3)
                *          bucket. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html">Exporting mailbox content</a> in
                *          the <i>Amazon WorkMail Administrator Guide</i>.</p>
                */
            startMailboxExportJob(args: StartMailboxExportJobCommandInput, options?: __HttpHandlerOptions): Promise<StartMailboxExportJobCommandOutput>;
            startMailboxExportJob(args: StartMailboxExportJobCommandInput, cb: (err: any, data?: StartMailboxExportJobCommandOutput) => void): void;
            startMailboxExportJob(args: StartMailboxExportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartMailboxExportJobCommandOutput) => void): void;
            /**
                * <p>Applies the specified tags to the specified Amazon WorkMail organization
                *          resource.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Performs a test on an availability provider to ensure that access is allowed. For EWS, it verifies the provided credentials can be used to successfully log in. For Lambda, it verifies that the Lambda function can be invoked and that the resource access
                *          policy was configured to deny anonymous access. An anonymous invocation is one done without providing either a <code>SourceArn</code> or <code>SourceAccount</code> header.</p>
                *          <note>
                *             <p>The request must contain either one provider definition (<code>EwsProvider</code> or
                *                <code>LambdaProvider</code>) or the <code>DomainName</code> parameter. If the
                *                <code>DomainName</code> parameter is provided, the configuration stored under the
                *                <code>DomainName</code> will be tested. </p>
                *          </note>
                */
            testAvailabilityConfiguration(args: TestAvailabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<TestAvailabilityConfigurationCommandOutput>;
            testAvailabilityConfiguration(args: TestAvailabilityConfigurationCommandInput, cb: (err: any, data?: TestAvailabilityConfigurationCommandOutput) => void): void;
            testAvailabilityConfiguration(args: TestAvailabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TestAvailabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Untags the specified tags from the specified Amazon WorkMail organization
                *          resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates an existing <code>AvailabilityConfiguration</code> for the given WorkMail
                *          organization and domain.</p>
                */
            updateAvailabilityConfiguration(args: UpdateAvailabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAvailabilityConfigurationCommandOutput>;
            updateAvailabilityConfiguration(args: UpdateAvailabilityConfigurationCommandInput, cb: (err: any, data?: UpdateAvailabilityConfigurationCommandOutput) => void): void;
            updateAvailabilityConfiguration(args: UpdateAvailabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAvailabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Updates the default mail domain for an organization. The default mail domain is used by the WorkMail AWS Console to suggest an email address when enabling a mail user. You can only have one default domain.</p>
                */
            updateDefaultMailDomain(args: UpdateDefaultMailDomainCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDefaultMailDomainCommandOutput>;
            updateDefaultMailDomain(args: UpdateDefaultMailDomainCommandInput, cb: (err: any, data?: UpdateDefaultMailDomainCommandOutput) => void): void;
            updateDefaultMailDomain(args: UpdateDefaultMailDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDefaultMailDomainCommandOutput) => void): void;
            /**
                * <p>Updates a user's current mailbox quota for a specified organization and
                *          user.</p>
                */
            updateMailboxQuota(args: UpdateMailboxQuotaCommandInput, options?: __HttpHandlerOptions): Promise<UpdateMailboxQuotaCommandOutput>;
            updateMailboxQuota(args: UpdateMailboxQuotaCommandInput, cb: (err: any, data?: UpdateMailboxQuotaCommandOutput) => void): void;
            updateMailboxQuota(args: UpdateMailboxQuotaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateMailboxQuotaCommandOutput) => void): void;
            /**
                * <p>Updates a mobile device access rule for the specified Amazon WorkMail organization.</p>
                */
            updateMobileDeviceAccessRule(args: UpdateMobileDeviceAccessRuleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateMobileDeviceAccessRuleCommandOutput>;
            updateMobileDeviceAccessRule(args: UpdateMobileDeviceAccessRuleCommandInput, cb: (err: any, data?: UpdateMobileDeviceAccessRuleCommandOutput) => void): void;
            updateMobileDeviceAccessRule(args: UpdateMobileDeviceAccessRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateMobileDeviceAccessRuleCommandOutput) => void): void;
            /**
                * <p>Updates the primary email for a user, group, or resource. The current email is moved
                *          into the list of aliases (or swapped between an existing alias and the current primary
                *          email), and the email provided in the input is promoted as the primary.</p>
                */
            updatePrimaryEmailAddress(args: UpdatePrimaryEmailAddressCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePrimaryEmailAddressCommandOutput>;
            updatePrimaryEmailAddress(args: UpdatePrimaryEmailAddressCommandInput, cb: (err: any, data?: UpdatePrimaryEmailAddressCommandOutput) => void): void;
            updatePrimaryEmailAddress(args: UpdatePrimaryEmailAddressCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePrimaryEmailAddressCommandOutput) => void): void;
            /**
                * <p>Updates data for the resource. To have the latest information, it must be preceded by
                *          a <a>DescribeResource</a> call. The dataset in the request should be the one
                *          expected when performing another <code>DescribeResource</code> call.</p>
                */
            updateResource(args: UpdateResourceCommandInput, options?: __HttpHandlerOptions): Promise<UpdateResourceCommandOutput>;
            updateResource(args: UpdateResourceCommandInput, cb: (err: any, data?: UpdateResourceCommandOutput) => void): void;
            updateResource(args: UpdateResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateResourceCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateDelegateToResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateDelegateToResourceRequest, AssociateDelegateToResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface AssociateDelegateToResourceCommandInput extends AssociateDelegateToResourceRequest {
    }
    export interface AssociateDelegateToResourceCommandOutput extends AssociateDelegateToResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a member (user or group) to the resource's set of delegates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, AssociateDelegateToResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, AssociateDelegateToResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new AssociateDelegateToResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateDelegateToResourceCommandInput} for command's `input` shape.
        * @see {@link AssociateDelegateToResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class AssociateDelegateToResourceCommand extends $Command<AssociateDelegateToResourceCommandInput, AssociateDelegateToResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: AssociateDelegateToResourceCommandInput;
            constructor(input: AssociateDelegateToResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateDelegateToResourceCommandInput, AssociateDelegateToResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateMemberToGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AssociateMemberToGroupRequest, AssociateMemberToGroupResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface AssociateMemberToGroupCommandInput extends AssociateMemberToGroupRequest {
    }
    export interface AssociateMemberToGroupCommandOutput extends AssociateMemberToGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a member (user or group) to the group's set.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, AssociateMemberToGroupCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, AssociateMemberToGroupCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new AssociateMemberToGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateMemberToGroupCommandInput} for command's `input` shape.
        * @see {@link AssociateMemberToGroupCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class AssociateMemberToGroupCommand extends $Command<AssociateMemberToGroupCommandInput, AssociateMemberToGroupCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: AssociateMemberToGroupCommandInput;
            constructor(input: AssociateMemberToGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateMemberToGroupCommandInput, AssociateMemberToGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CancelMailboxExportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CancelMailboxExportJobRequest, CancelMailboxExportJobResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CancelMailboxExportJobCommandInput extends CancelMailboxExportJobRequest {
    }
    export interface CancelMailboxExportJobCommandOutput extends CancelMailboxExportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Cancels a mailbox export job.</p>
        *          <note>
        *             <p>If the mailbox export job is near completion, it might not be possible to cancel
        *             it.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CancelMailboxExportJobCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CancelMailboxExportJobCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CancelMailboxExportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CancelMailboxExportJobCommandInput} for command's `input` shape.
        * @see {@link CancelMailboxExportJobCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CancelMailboxExportJobCommand extends $Command<CancelMailboxExportJobCommandInput, CancelMailboxExportJobCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CancelMailboxExportJobCommandInput;
            constructor(input: CancelMailboxExportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelMailboxExportJobCommandInput, CancelMailboxExportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAliasRequest, CreateAliasResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateAliasCommandInput extends CreateAliasRequest {
    }
    export interface CreateAliasCommandOutput extends CreateAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Adds an alias to the set of a given member (user or group) of Amazon WorkMail.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateAliasCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateAliasCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAliasCommandInput} for command's `input` shape.
        * @see {@link CreateAliasCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateAliasCommand extends $Command<CreateAliasCommandInput, CreateAliasCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateAliasCommandInput;
            constructor(input: CreateAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAliasCommandInput, CreateAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAvailabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAvailabilityConfigurationRequest, CreateAvailabilityConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateAvailabilityConfigurationCommandInput extends CreateAvailabilityConfigurationRequest {
    }
    export interface CreateAvailabilityConfigurationCommandOutput extends CreateAvailabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an <code>AvailabilityConfiguration</code> for the given WorkMail organization and domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateAvailabilityConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateAvailabilityConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateAvailabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAvailabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link CreateAvailabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateAvailabilityConfigurationCommand extends $Command<CreateAvailabilityConfigurationCommandInput, CreateAvailabilityConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateAvailabilityConfigurationCommandInput;
            constructor(input: CreateAvailabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAvailabilityConfigurationCommandInput, CreateAvailabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateGroupRequest, CreateGroupResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateGroupCommandInput extends CreateGroupRequest {
    }
    export interface CreateGroupCommandOutput extends CreateGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a group that can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateGroupCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateGroupCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateGroupCommandInput} for command's `input` shape.
        * @see {@link CreateGroupCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateGroupCommand extends $Command<CreateGroupCommandInput, CreateGroupCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateGroupCommandInput;
            constructor(input: CreateGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateGroupCommandInput, CreateGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateMobileDeviceAccessRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateMobileDeviceAccessRuleRequest, CreateMobileDeviceAccessRuleResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateMobileDeviceAccessRuleCommandInput extends CreateMobileDeviceAccessRuleRequest {
    }
    export interface CreateMobileDeviceAccessRuleCommandOutput extends CreateMobileDeviceAccessRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new mobile device access rule for the specified Amazon WorkMail organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateMobileDeviceAccessRuleCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateMobileDeviceAccessRuleCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateMobileDeviceAccessRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMobileDeviceAccessRuleCommandInput} for command's `input` shape.
        * @see {@link CreateMobileDeviceAccessRuleCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateMobileDeviceAccessRuleCommand extends $Command<CreateMobileDeviceAccessRuleCommandInput, CreateMobileDeviceAccessRuleCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateMobileDeviceAccessRuleCommandInput;
            constructor(input: CreateMobileDeviceAccessRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMobileDeviceAccessRuleCommandInput, CreateMobileDeviceAccessRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateOrganizationRequest, CreateOrganizationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateOrganizationCommandInput extends CreateOrganizationRequest {
    }
    export interface CreateOrganizationCommandOutput extends CreateOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new Amazon WorkMail organization. Optionally, you can choose to associate an existing AWS Directory Service directory with your organization. If an AWS Directory Service directory ID is specified, the organization alias must match the directory alias. If you choose not to associate an existing directory with your organization, then we create a new Amazon WorkMail directory for you. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html">Adding an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
        *          <p>You can associate multiple email domains with an organization, then set your default email domain from the Amazon WorkMail console. You can also associate a domain that is managed in an Amazon Route 53 public hosted zone. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding a domain</a> and <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html">Choosing the default domain</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
        *          <p>Optionally, you can use a customer managed master key from AWS Key Management Service
        *          (AWS KMS) to encrypt email for your organization. If you don't associate an AWS KMS key, Amazon WorkMail creates a
        *          default AWS managed master key for you.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateOrganizationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateOrganizationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateOrganizationCommandInput} for command's `input` shape.
        * @see {@link CreateOrganizationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateOrganizationCommand extends $Command<CreateOrganizationCommandInput, CreateOrganizationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateOrganizationCommandInput;
            constructor(input: CreateOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateOrganizationCommandInput, CreateOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateResourceRequest, CreateResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateResourceCommandInput extends CreateResourceRequest {
    }
    export interface CreateResourceCommandOutput extends CreateResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new Amazon WorkMail resource. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateResourceCommandInput} for command's `input` shape.
        * @see {@link CreateResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateResourceCommand extends $Command<CreateResourceCommandInput, CreateResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateResourceCommandInput;
            constructor(input: CreateResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateResourceCommandInput, CreateResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateUserRequest, CreateUserResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface CreateUserCommandInput extends CreateUserRequest {
    }
    export interface CreateUserCommandOutput extends CreateUserResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a user who can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, CreateUserCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, CreateUserCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new CreateUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateUserCommandInput} for command's `input` shape.
        * @see {@link CreateUserCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class CreateUserCommand extends $Command<CreateUserCommandInput, CreateUserCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: CreateUserCommandInput;
            constructor(input: CreateUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateUserCommandInput, CreateUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAccessControlRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAccessControlRuleRequest, DeleteAccessControlRuleResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteAccessControlRuleCommandInput extends DeleteAccessControlRuleRequest {
    }
    export interface DeleteAccessControlRuleCommandOutput extends DeleteAccessControlRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an access control rule for the specified WorkMail organization.</p>
        *          <note>
        *             <p>Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteAccessControlRuleCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteAccessControlRuleCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteAccessControlRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessControlRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessControlRuleCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteAccessControlRuleCommand extends $Command<DeleteAccessControlRuleCommandInput, DeleteAccessControlRuleCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteAccessControlRuleCommandInput;
            constructor(input: DeleteAccessControlRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessControlRuleCommandInput, DeleteAccessControlRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAliasCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAliasRequest, DeleteAliasResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteAliasCommandInput extends DeleteAliasRequest {
    }
    export interface DeleteAliasCommandOutput extends DeleteAliasResponse, __MetadataBearer {
    }
    /**
        * <p>Remove one or more specified aliases from a set of aliases for a given
        *          user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteAliasCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteAliasCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteAliasCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAliasCommandInput} for command's `input` shape.
        * @see {@link DeleteAliasCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteAliasCommand extends $Command<DeleteAliasCommandInput, DeleteAliasCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteAliasCommandInput;
            constructor(input: DeleteAliasCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAliasCommandInput, DeleteAliasCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAvailabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAvailabilityConfigurationRequest, DeleteAvailabilityConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteAvailabilityConfigurationCommandInput extends DeleteAvailabilityConfigurationRequest {
    }
    export interface DeleteAvailabilityConfigurationCommandOutput extends DeleteAvailabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the <code>AvailabilityConfiguration</code> for the given WorkMail organization and domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteAvailabilityConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteAvailabilityConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteAvailabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAvailabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteAvailabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteAvailabilityConfigurationCommand extends $Command<DeleteAvailabilityConfigurationCommandInput, DeleteAvailabilityConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteAvailabilityConfigurationCommandInput;
            constructor(input: DeleteAvailabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAvailabilityConfigurationCommandInput, DeleteAvailabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteEmailMonitoringConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEmailMonitoringConfigurationRequest, DeleteEmailMonitoringConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteEmailMonitoringConfigurationCommandInput extends DeleteEmailMonitoringConfigurationRequest {
    }
    export interface DeleteEmailMonitoringConfigurationCommandOutput extends DeleteEmailMonitoringConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the email monitoring configuration for a specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteEmailMonitoringConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteEmailMonitoringConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteEmailMonitoringConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEmailMonitoringConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteEmailMonitoringConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteEmailMonitoringConfigurationCommand extends $Command<DeleteEmailMonitoringConfigurationCommandInput, DeleteEmailMonitoringConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteEmailMonitoringConfigurationCommandInput;
            constructor(input: DeleteEmailMonitoringConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEmailMonitoringConfigurationCommandInput, DeleteEmailMonitoringConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteGroupRequest, DeleteGroupResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteGroupCommandInput extends DeleteGroupRequest {
    }
    export interface DeleteGroupCommandOutput extends DeleteGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a group from Amazon WorkMail.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteGroupCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteGroupCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteGroupCommandInput} for command's `input` shape.
        * @see {@link DeleteGroupCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteGroupCommand extends $Command<DeleteGroupCommandInput, DeleteGroupCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteGroupCommandInput;
            constructor(input: DeleteGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteGroupCommandInput, DeleteGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMailboxPermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteMailboxPermissionsRequest, DeleteMailboxPermissionsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteMailboxPermissionsCommandInput extends DeleteMailboxPermissionsRequest {
    }
    export interface DeleteMailboxPermissionsCommandOutput extends DeleteMailboxPermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes permissions granted to a member (user or group).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteMailboxPermissionsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteMailboxPermissionsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteMailboxPermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMailboxPermissionsCommandInput} for command's `input` shape.
        * @see {@link DeleteMailboxPermissionsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteMailboxPermissionsCommand extends $Command<DeleteMailboxPermissionsCommandInput, DeleteMailboxPermissionsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteMailboxPermissionsCommandInput;
            constructor(input: DeleteMailboxPermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMailboxPermissionsCommandInput, DeleteMailboxPermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessOverrideCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteMobileDeviceAccessOverrideRequest, DeleteMobileDeviceAccessOverrideResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteMobileDeviceAccessOverrideCommandInput extends DeleteMobileDeviceAccessOverrideRequest {
    }
    export interface DeleteMobileDeviceAccessOverrideCommandOutput extends DeleteMobileDeviceAccessOverrideResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the mobile device access override for the given WorkMail organization, user, and device.</p>
        *          <note>
        *             <p>Deleting already deleted and non-existing overrides does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteMobileDeviceAccessOverrideCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteMobileDeviceAccessOverrideCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteMobileDeviceAccessOverrideCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMobileDeviceAccessOverrideCommandInput} for command's `input` shape.
        * @see {@link DeleteMobileDeviceAccessOverrideCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteMobileDeviceAccessOverrideCommand extends $Command<DeleteMobileDeviceAccessOverrideCommandInput, DeleteMobileDeviceAccessOverrideCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteMobileDeviceAccessOverrideCommandInput;
            constructor(input: DeleteMobileDeviceAccessOverrideCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMobileDeviceAccessOverrideCommandInput, DeleteMobileDeviceAccessOverrideCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteMobileDeviceAccessRuleRequest, DeleteMobileDeviceAccessRuleResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteMobileDeviceAccessRuleCommandInput extends DeleteMobileDeviceAccessRuleRequest {
    }
    export interface DeleteMobileDeviceAccessRuleCommandOutput extends DeleteMobileDeviceAccessRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a mobile device access rule for the specified Amazon WorkMail organization.</p>
        *          <note>
        *             <p>Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteMobileDeviceAccessRuleCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteMobileDeviceAccessRuleCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteMobileDeviceAccessRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMobileDeviceAccessRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteMobileDeviceAccessRuleCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteMobileDeviceAccessRuleCommand extends $Command<DeleteMobileDeviceAccessRuleCommandInput, DeleteMobileDeviceAccessRuleCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteMobileDeviceAccessRuleCommandInput;
            constructor(input: DeleteMobileDeviceAccessRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMobileDeviceAccessRuleCommandInput, DeleteMobileDeviceAccessRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteOrganizationRequest, DeleteOrganizationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteOrganizationCommandInput extends DeleteOrganizationRequest {
    }
    export interface DeleteOrganizationCommandOutput extends DeleteOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an Amazon WorkMail organization and all underlying AWS resources managed by Amazon WorkMail as part of the organization. You can choose whether to delete the associated directory. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html">Removing an organization</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteOrganizationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteOrganizationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteOrganizationCommandInput} for command's `input` shape.
        * @see {@link DeleteOrganizationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteOrganizationCommand extends $Command<DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteOrganizationCommandInput;
            constructor(input: DeleteOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteResourceRequest, DeleteResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteResourceCommandInput extends DeleteResourceRequest {
    }
    export interface DeleteResourceCommandOutput extends DeleteResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified resource. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteResourceCommandInput} for command's `input` shape.
        * @see {@link DeleteResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteResourceCommand extends $Command<DeleteResourceCommandInput, DeleteResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteResourceCommandInput;
            constructor(input: DeleteResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteResourceCommandInput, DeleteResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteRetentionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRetentionPolicyRequest, DeleteRetentionPolicyResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteRetentionPolicyCommandInput extends DeleteRetentionPolicyRequest {
    }
    export interface DeleteRetentionPolicyCommandOutput extends DeleteRetentionPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified retention policy from the specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteRetentionPolicyCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteRetentionPolicyCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteRetentionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRetentionPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteRetentionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteRetentionPolicyCommand extends $Command<DeleteRetentionPolicyCommandInput, DeleteRetentionPolicyCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteRetentionPolicyCommandInput;
            constructor(input: DeleteRetentionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRetentionPolicyCommandInput, DeleteRetentionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteUserRequest, DeleteUserResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeleteUserCommandInput extends DeleteUserRequest {
    }
    export interface DeleteUserCommandOutput extends DeleteUserResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a user from Amazon WorkMail and all subsequent systems. Before you can delete a
        *          user, the user state must be <code>DISABLED</code>. Use the <a>DescribeUser</a>
        *          action to confirm the user state.</p>
        *          <p>Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes for
        *          30 days before they are permanently removed.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeleteUserCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeleteUserCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeleteUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteUserCommandInput} for command's `input` shape.
        * @see {@link DeleteUserCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeleteUserCommand extends $Command<DeleteUserCommandInput, DeleteUserCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeleteUserCommandInput;
            constructor(input: DeleteUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteUserCommandInput, DeleteUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterFromWorkMailCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeregisterFromWorkMailRequest, DeregisterFromWorkMailResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeregisterFromWorkMailCommandInput extends DeregisterFromWorkMailRequest {
    }
    export interface DeregisterFromWorkMailCommandOutput extends DeregisterFromWorkMailResponse, __MetadataBearer {
    }
    /**
        * <p>Mark a user, group, or resource as no longer used in Amazon WorkMail. This action
        *          disassociates the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days
        *          before they are permanently removed. The functionality in the console is
        *             <i>Disable</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeregisterFromWorkMailCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeregisterFromWorkMailCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeregisterFromWorkMailCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeregisterFromWorkMailCommandInput} for command's `input` shape.
        * @see {@link DeregisterFromWorkMailCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeregisterFromWorkMailCommand extends $Command<DeregisterFromWorkMailCommandInput, DeregisterFromWorkMailCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeregisterFromWorkMailCommandInput;
            constructor(input: DeregisterFromWorkMailCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeregisterFromWorkMailCommandInput, DeregisterFromWorkMailCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterMailDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeregisterMailDomainRequest, DeregisterMailDomainResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DeregisterMailDomainCommandInput extends DeregisterMailDomainRequest {
    }
    export interface DeregisterMailDomainCommandOutput extends DeregisterMailDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a domain from Amazon WorkMail, stops email routing to WorkMail, and removes the authorization allowing WorkMail use. SES keeps the domain because other applications may use it. You must first
        *          remove any email address used by WorkMail entities before you remove the domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DeregisterMailDomainCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DeregisterMailDomainCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DeregisterMailDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeregisterMailDomainCommandInput} for command's `input` shape.
        * @see {@link DeregisterMailDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DeregisterMailDomainCommand extends $Command<DeregisterMailDomainCommandInput, DeregisterMailDomainCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DeregisterMailDomainCommandInput;
            constructor(input: DeregisterMailDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeregisterMailDomainCommandInput, DeregisterMailDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeEmailMonitoringConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeEmailMonitoringConfigurationRequest, DescribeEmailMonitoringConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeEmailMonitoringConfigurationCommandInput extends DescribeEmailMonitoringConfigurationRequest {
    }
    export interface DescribeEmailMonitoringConfigurationCommandOutput extends DescribeEmailMonitoringConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the current email monitoring configuration for a specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeEmailMonitoringConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeEmailMonitoringConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeEmailMonitoringConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeEmailMonitoringConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeEmailMonitoringConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeEmailMonitoringConfigurationCommand extends $Command<DescribeEmailMonitoringConfigurationCommandInput, DescribeEmailMonitoringConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeEmailMonitoringConfigurationCommandInput;
            constructor(input: DescribeEmailMonitoringConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeEmailMonitoringConfigurationCommandInput, DescribeEmailMonitoringConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeGroupRequest, DescribeGroupResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeGroupCommandInput extends DescribeGroupRequest {
    }
    export interface DescribeGroupCommandOutput extends DescribeGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the data available for the group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeGroupCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeGroupCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeGroupCommandInput} for command's `input` shape.
        * @see {@link DescribeGroupCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeGroupCommand extends $Command<DescribeGroupCommandInput, DescribeGroupCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeGroupCommandInput;
            constructor(input: DescribeGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeGroupCommandInput, DescribeGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeInboundDmarcSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeInboundDmarcSettingsRequest, DescribeInboundDmarcSettingsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeInboundDmarcSettingsCommandInput extends DescribeInboundDmarcSettingsRequest {
    }
    export interface DescribeInboundDmarcSettingsCommandOutput extends DescribeInboundDmarcSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the settings in a DMARC policy for a specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeInboundDmarcSettingsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeInboundDmarcSettingsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeInboundDmarcSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeInboundDmarcSettingsCommandInput} for command's `input` shape.
        * @see {@link DescribeInboundDmarcSettingsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeInboundDmarcSettingsCommand extends $Command<DescribeInboundDmarcSettingsCommandInput, DescribeInboundDmarcSettingsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeInboundDmarcSettingsCommandInput;
            constructor(input: DescribeInboundDmarcSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeInboundDmarcSettingsCommandInput, DescribeInboundDmarcSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeMailboxExportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeMailboxExportJobRequest, DescribeMailboxExportJobResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeMailboxExportJobCommandInput extends DescribeMailboxExportJobRequest {
    }
    export interface DescribeMailboxExportJobCommandOutput extends DescribeMailboxExportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the current status of a mailbox export job.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeMailboxExportJobCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeMailboxExportJobCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeMailboxExportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeMailboxExportJobCommandInput} for command's `input` shape.
        * @see {@link DescribeMailboxExportJobCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeMailboxExportJobCommand extends $Command<DescribeMailboxExportJobCommandInput, DescribeMailboxExportJobCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeMailboxExportJobCommandInput;
            constructor(input: DescribeMailboxExportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeMailboxExportJobCommandInput, DescribeMailboxExportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeOrganizationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeOrganizationRequest, DescribeOrganizationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeOrganizationCommandInput extends DescribeOrganizationRequest {
    }
    export interface DescribeOrganizationCommandOutput extends DescribeOrganizationResponse, __MetadataBearer {
    }
    /**
        * <p>Provides more information regarding a given organization based on its
        *          identifier.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeOrganizationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeOrganizationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeOrganizationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeOrganizationCommandInput} for command's `input` shape.
        * @see {@link DescribeOrganizationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeOrganizationCommand extends $Command<DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeOrganizationCommandInput;
            constructor(input: DescribeOrganizationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeResourceRequest, DescribeResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeResourceCommandInput extends DescribeResourceRequest {
    }
    export interface DescribeResourceCommandOutput extends DescribeResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the data available for the resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeResourceCommandInput} for command's `input` shape.
        * @see {@link DescribeResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeResourceCommand extends $Command<DescribeResourceCommandInput, DescribeResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeResourceCommandInput;
            constructor(input: DescribeResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeResourceCommandInput, DescribeResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeUserCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeUserRequest, DescribeUserResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DescribeUserCommandInput extends DescribeUserRequest {
    }
    export interface DescribeUserCommandOutput extends DescribeUserResponse, __MetadataBearer {
    }
    /**
        * <p>Provides information regarding the user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DescribeUserCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DescribeUserCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DescribeUserCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeUserCommandInput} for command's `input` shape.
        * @see {@link DescribeUserCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DescribeUserCommand extends $Command<DescribeUserCommandInput, DescribeUserCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DescribeUserCommandInput;
            constructor(input: DescribeUserCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeUserCommandInput, DescribeUserCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateDelegateFromResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateDelegateFromResourceRequest, DisassociateDelegateFromResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DisassociateDelegateFromResourceCommandInput extends DisassociateDelegateFromResourceRequest {
    }
    export interface DisassociateDelegateFromResourceCommandOutput extends DisassociateDelegateFromResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a member from the resource's set of delegates.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DisassociateDelegateFromResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DisassociateDelegateFromResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DisassociateDelegateFromResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateDelegateFromResourceCommandInput} for command's `input` shape.
        * @see {@link DisassociateDelegateFromResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DisassociateDelegateFromResourceCommand extends $Command<DisassociateDelegateFromResourceCommandInput, DisassociateDelegateFromResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DisassociateDelegateFromResourceCommandInput;
            constructor(input: DisassociateDelegateFromResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateDelegateFromResourceCommandInput, DisassociateDelegateFromResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateMemberFromGroupCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DisassociateMemberFromGroupRequest, DisassociateMemberFromGroupResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface DisassociateMemberFromGroupCommandInput extends DisassociateMemberFromGroupRequest {
    }
    export interface DisassociateMemberFromGroupCommandOutput extends DisassociateMemberFromGroupResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a member from a group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, DisassociateMemberFromGroupCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, DisassociateMemberFromGroupCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new DisassociateMemberFromGroupCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateMemberFromGroupCommandInput} for command's `input` shape.
        * @see {@link DisassociateMemberFromGroupCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class DisassociateMemberFromGroupCommand extends $Command<DisassociateMemberFromGroupCommandInput, DisassociateMemberFromGroupCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: DisassociateMemberFromGroupCommandInput;
            constructor(input: DisassociateMemberFromGroupCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateMemberFromGroupCommandInput, DisassociateMemberFromGroupCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetAccessControlEffectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessControlEffectRequest, GetAccessControlEffectResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetAccessControlEffectCommandInput extends GetAccessControlEffectRequest {
    }
    export interface GetAccessControlEffectCommandOutput extends GetAccessControlEffectResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the effects of an organization's access control rules as they apply to a
        *          specified IPv4 address, access protocol action, or user ID. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetAccessControlEffectCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetAccessControlEffectCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetAccessControlEffectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessControlEffectCommandInput} for command's `input` shape.
        * @see {@link GetAccessControlEffectCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetAccessControlEffectCommand extends $Command<GetAccessControlEffectCommandInput, GetAccessControlEffectCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetAccessControlEffectCommandInput;
            constructor(input: GetAccessControlEffectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessControlEffectCommandInput, GetAccessControlEffectCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetDefaultRetentionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetDefaultRetentionPolicyRequest, GetDefaultRetentionPolicyResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetDefaultRetentionPolicyCommandInput extends GetDefaultRetentionPolicyRequest {
    }
    export interface GetDefaultRetentionPolicyCommandOutput extends GetDefaultRetentionPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the default retention policy details for the specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetDefaultRetentionPolicyCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetDefaultRetentionPolicyCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetDefaultRetentionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetDefaultRetentionPolicyCommandInput} for command's `input` shape.
        * @see {@link GetDefaultRetentionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetDefaultRetentionPolicyCommand extends $Command<GetDefaultRetentionPolicyCommandInput, GetDefaultRetentionPolicyCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetDefaultRetentionPolicyCommandInput;
            constructor(input: GetDefaultRetentionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetDefaultRetentionPolicyCommandInput, GetDefaultRetentionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailboxDetailsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMailboxDetailsRequest, GetMailboxDetailsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetMailboxDetailsCommandInput extends GetMailboxDetailsRequest {
    }
    export interface GetMailboxDetailsCommandOutput extends GetMailboxDetailsResponse, __MetadataBearer {
    }
    /**
        * <p>Requests a user's mailbox details for a specified organization and user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetMailboxDetailsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetMailboxDetailsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetMailboxDetailsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMailboxDetailsCommandInput} for command's `input` shape.
        * @see {@link GetMailboxDetailsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetMailboxDetailsCommand extends $Command<GetMailboxDetailsCommandInput, GetMailboxDetailsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetMailboxDetailsCommandInput;
            constructor(input: GetMailboxDetailsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMailboxDetailsCommandInput, GetMailboxDetailsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMailDomainRequest, GetMailDomainResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetMailDomainCommandInput extends GetMailDomainRequest {
    }
    export interface GetMailDomainCommandOutput extends GetMailDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Gets details for a mail domain, including domain records required to configure your domain with recommended security.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetMailDomainCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetMailDomainCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetMailDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMailDomainCommandInput} for command's `input` shape.
        * @see {@link GetMailDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetMailDomainCommand extends $Command<GetMailDomainCommandInput, GetMailDomainCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetMailDomainCommandInput;
            constructor(input: GetMailDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMailDomainCommandInput, GetMailDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessEffectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMobileDeviceAccessEffectRequest, GetMobileDeviceAccessEffectResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetMobileDeviceAccessEffectCommandInput extends GetMobileDeviceAccessEffectRequest {
    }
    export interface GetMobileDeviceAccessEffectCommandOutput extends GetMobileDeviceAccessEffectResponse, __MetadataBearer {
    }
    /**
        * <p>Simulates the effect of the mobile device access rules for the given attributes of a sample access event. Use this method to test the effects of the current set of mobile device access
        *          rules for the Amazon WorkMail organization for a particular user's attributes.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetMobileDeviceAccessEffectCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetMobileDeviceAccessEffectCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetMobileDeviceAccessEffectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMobileDeviceAccessEffectCommandInput} for command's `input` shape.
        * @see {@link GetMobileDeviceAccessEffectCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetMobileDeviceAccessEffectCommand extends $Command<GetMobileDeviceAccessEffectCommandInput, GetMobileDeviceAccessEffectCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetMobileDeviceAccessEffectCommandInput;
            constructor(input: GetMobileDeviceAccessEffectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMobileDeviceAccessEffectCommandInput, GetMobileDeviceAccessEffectCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessOverrideCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMobileDeviceAccessOverrideRequest, GetMobileDeviceAccessOverrideResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface GetMobileDeviceAccessOverrideCommandInput extends GetMobileDeviceAccessOverrideRequest {
    }
    export interface GetMobileDeviceAccessOverrideCommandOutput extends GetMobileDeviceAccessOverrideResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the mobile device access override for the given WorkMail organization, user, and device.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, GetMobileDeviceAccessOverrideCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, GetMobileDeviceAccessOverrideCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new GetMobileDeviceAccessOverrideCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMobileDeviceAccessOverrideCommandInput} for command's `input` shape.
        * @see {@link GetMobileDeviceAccessOverrideCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class GetMobileDeviceAccessOverrideCommand extends $Command<GetMobileDeviceAccessOverrideCommandInput, GetMobileDeviceAccessOverrideCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: GetMobileDeviceAccessOverrideCommandInput;
            constructor(input: GetMobileDeviceAccessOverrideCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMobileDeviceAccessOverrideCommandInput, GetMobileDeviceAccessOverrideCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAccessControlRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccessControlRulesRequest, ListAccessControlRulesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListAccessControlRulesCommandInput extends ListAccessControlRulesRequest {
    }
    export interface ListAccessControlRulesCommandOutput extends ListAccessControlRulesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the access control rules for the specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListAccessControlRulesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListAccessControlRulesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListAccessControlRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccessControlRulesCommandInput} for command's `input` shape.
        * @see {@link ListAccessControlRulesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListAccessControlRulesCommand extends $Command<ListAccessControlRulesCommandInput, ListAccessControlRulesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListAccessControlRulesCommandInput;
            constructor(input: ListAccessControlRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccessControlRulesCommandInput, ListAccessControlRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAliasesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAliasesRequest, ListAliasesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListAliasesCommandInput extends ListAliasesRequest {
    }
    export interface ListAliasesCommandOutput extends ListAliasesResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a paginated call to list the aliases associated with a given
        *          entity.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListAliasesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListAliasesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListAliasesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAliasesCommandInput} for command's `input` shape.
        * @see {@link ListAliasesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListAliasesCommand extends $Command<ListAliasesCommandInput, ListAliasesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListAliasesCommandInput;
            constructor(input: ListAliasesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAliasesCommandInput, ListAliasesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAvailabilityConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAvailabilityConfigurationsRequest, ListAvailabilityConfigurationsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListAvailabilityConfigurationsCommandInput extends ListAvailabilityConfigurationsRequest {
    }
    export interface ListAvailabilityConfigurationsCommandOutput extends ListAvailabilityConfigurationsResponse, __MetadataBearer {
    }
    /**
        * <p>List all the <code>AvailabilityConfiguration</code>'s for the given WorkMail organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListAvailabilityConfigurationsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListAvailabilityConfigurationsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListAvailabilityConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAvailabilityConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListAvailabilityConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListAvailabilityConfigurationsCommand extends $Command<ListAvailabilityConfigurationsCommandInput, ListAvailabilityConfigurationsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListAvailabilityConfigurationsCommandInput;
            constructor(input: ListAvailabilityConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAvailabilityConfigurationsCommandInput, ListAvailabilityConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupMembersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListGroupMembersRequest, ListGroupMembersResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListGroupMembersCommandInput extends ListGroupMembersRequest {
    }
    export interface ListGroupMembersCommandOutput extends ListGroupMembersResponse, __MetadataBearer {
    }
    /**
        * <p>Returns an overview of the members of a group. Users and groups can be members of a
        *          group.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListGroupMembersCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListGroupMembersCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListGroupMembersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGroupMembersCommandInput} for command's `input` shape.
        * @see {@link ListGroupMembersCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListGroupMembersCommand extends $Command<ListGroupMembersCommandInput, ListGroupMembersCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListGroupMembersCommandInput;
            constructor(input: ListGroupMembersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGroupMembersCommandInput, ListGroupMembersCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListGroupsRequest, ListGroupsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListGroupsCommandInput extends ListGroupsRequest {
    }
    export interface ListGroupsCommandOutput extends ListGroupsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns summaries of the organization's groups.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListGroupsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListGroupsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListGroupsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGroupsCommandInput} for command's `input` shape.
        * @see {@link ListGroupsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListGroupsCommand extends $Command<ListGroupsCommandInput, ListGroupsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListGroupsCommandInput;
            constructor(input: ListGroupsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGroupsCommandInput, ListGroupsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxExportJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMailboxExportJobsRequest, ListMailboxExportJobsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListMailboxExportJobsCommandInput extends ListMailboxExportJobsRequest {
    }
    export interface ListMailboxExportJobsCommandOutput extends ListMailboxExportJobsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the mailbox export jobs started for the specified organization within the last
        *          seven days.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListMailboxExportJobsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListMailboxExportJobsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListMailboxExportJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMailboxExportJobsCommandInput} for command's `input` shape.
        * @see {@link ListMailboxExportJobsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListMailboxExportJobsCommand extends $Command<ListMailboxExportJobsCommandInput, ListMailboxExportJobsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListMailboxExportJobsCommandInput;
            constructor(input: ListMailboxExportJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMailboxExportJobsCommandInput, ListMailboxExportJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxPermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMailboxPermissionsRequest, ListMailboxPermissionsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListMailboxPermissionsCommandInput extends ListMailboxPermissionsRequest {
    }
    export interface ListMailboxPermissionsCommandOutput extends ListMailboxPermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the mailbox permissions associated with a user, group, or resource
        *          mailbox.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListMailboxPermissionsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListMailboxPermissionsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListMailboxPermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMailboxPermissionsCommandInput} for command's `input` shape.
        * @see {@link ListMailboxPermissionsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListMailboxPermissionsCommand extends $Command<ListMailboxPermissionsCommandInput, ListMailboxPermissionsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListMailboxPermissionsCommandInput;
            constructor(input: ListMailboxPermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMailboxPermissionsCommandInput, ListMailboxPermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailDomainsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMailDomainsRequest, ListMailDomainsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListMailDomainsCommandInput extends ListMailDomainsRequest {
    }
    export interface ListMailDomainsCommandOutput extends ListMailDomainsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the mail domains in a given Amazon WorkMail organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListMailDomainsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListMailDomainsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListMailDomainsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMailDomainsCommandInput} for command's `input` shape.
        * @see {@link ListMailDomainsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListMailDomainsCommand extends $Command<ListMailDomainsCommandInput, ListMailDomainsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListMailDomainsCommandInput;
            constructor(input: ListMailDomainsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMailDomainsCommandInput, ListMailDomainsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessOverridesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMobileDeviceAccessOverridesRequest, ListMobileDeviceAccessOverridesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListMobileDeviceAccessOverridesCommandInput extends ListMobileDeviceAccessOverridesRequest {
    }
    export interface ListMobileDeviceAccessOverridesCommandOutput extends ListMobileDeviceAccessOverridesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the mobile device access overrides for any given combination of WorkMail organization, user, or device.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListMobileDeviceAccessOverridesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListMobileDeviceAccessOverridesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListMobileDeviceAccessOverridesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMobileDeviceAccessOverridesCommandInput} for command's `input` shape.
        * @see {@link ListMobileDeviceAccessOverridesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListMobileDeviceAccessOverridesCommand extends $Command<ListMobileDeviceAccessOverridesCommandInput, ListMobileDeviceAccessOverridesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListMobileDeviceAccessOverridesCommandInput;
            constructor(input: ListMobileDeviceAccessOverridesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMobileDeviceAccessOverridesCommandInput, ListMobileDeviceAccessOverridesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMobileDeviceAccessRulesRequest, ListMobileDeviceAccessRulesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListMobileDeviceAccessRulesCommandInput extends ListMobileDeviceAccessRulesRequest {
    }
    export interface ListMobileDeviceAccessRulesCommandOutput extends ListMobileDeviceAccessRulesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the mobile device access rules for the specified Amazon WorkMail organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListMobileDeviceAccessRulesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListMobileDeviceAccessRulesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListMobileDeviceAccessRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMobileDeviceAccessRulesCommandInput} for command's `input` shape.
        * @see {@link ListMobileDeviceAccessRulesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListMobileDeviceAccessRulesCommand extends $Command<ListMobileDeviceAccessRulesCommandInput, ListMobileDeviceAccessRulesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListMobileDeviceAccessRulesCommandInput;
            constructor(input: ListMobileDeviceAccessRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMobileDeviceAccessRulesCommandInput, ListMobileDeviceAccessRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListOrganizationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListOrganizationsRequest, ListOrganizationsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListOrganizationsCommandInput extends ListOrganizationsRequest {
    }
    export interface ListOrganizationsCommandOutput extends ListOrganizationsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns summaries of the customer's organizations.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListOrganizationsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListOrganizationsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListOrganizationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListOrganizationsCommandInput} for command's `input` shape.
        * @see {@link ListOrganizationsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListOrganizationsCommand extends $Command<ListOrganizationsCommandInput, ListOrganizationsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListOrganizationsCommandInput;
            constructor(input: ListOrganizationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOrganizationsCommandInput, ListOrganizationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourceDelegatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourceDelegatesRequest, ListResourceDelegatesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListResourceDelegatesCommandInput extends ListResourceDelegatesRequest {
    }
    export interface ListResourceDelegatesCommandOutput extends ListResourceDelegatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the delegates associated with a resource. Users and groups can be resource
        *          delegates and answer requests on behalf of the resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListResourceDelegatesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListResourceDelegatesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListResourceDelegatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourceDelegatesCommandInput} for command's `input` shape.
        * @see {@link ListResourceDelegatesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListResourceDelegatesCommand extends $Command<ListResourceDelegatesCommandInput, ListResourceDelegatesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListResourceDelegatesCommandInput;
            constructor(input: ListResourceDelegatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourceDelegatesCommandInput, ListResourceDelegatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResourcesRequest, ListResourcesResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListResourcesCommandInput extends ListResourcesRequest {
    }
    export interface ListResourcesCommandOutput extends ListResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns summaries of the organization's resources.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListResourcesCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListResourcesCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResourcesCommandInput} for command's `input` shape.
        * @see {@link ListResourcesCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListResourcesCommand extends $Command<ListResourcesCommandInput, ListResourcesCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListResourcesCommandInput;
            constructor(input: ListResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResourcesCommandInput, ListResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags applied to an Amazon WorkMail organization resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListTagsForResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListTagsForResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListUsersCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListUsersRequest, ListUsersResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ListUsersCommandInput extends ListUsersRequest {
    }
    export interface ListUsersCommandOutput extends ListUsersResponse, __MetadataBearer {
    }
    /**
        * <p>Returns summaries of the organization's users.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ListUsersCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ListUsersCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ListUsersCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUsersCommandInput} for command's `input` shape.
        * @see {@link ListUsersCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ListUsersCommand extends $Command<ListUsersCommandInput, ListUsersCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ListUsersCommandInput;
            constructor(input: ListUsersCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUsersCommandInput, ListUsersCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutAccessControlRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccessControlRuleRequest, PutAccessControlRuleResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutAccessControlRuleCommandInput extends PutAccessControlRuleRequest {
    }
    export interface PutAccessControlRuleCommandOutput extends PutAccessControlRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Adds a new access control rule for the specified organization. The rule allows or
        *          denies access to the organization for the specified IPv4 addresses, access protocol
        *          actions, and user IDs. Adding a new rule with the same name as an existing rule replaces
        *          the older rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutAccessControlRuleCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutAccessControlRuleCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutAccessControlRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccessControlRuleCommandInput} for command's `input` shape.
        * @see {@link PutAccessControlRuleCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutAccessControlRuleCommand extends $Command<PutAccessControlRuleCommandInput, PutAccessControlRuleCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutAccessControlRuleCommandInput;
            constructor(input: PutAccessControlRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccessControlRuleCommandInput, PutAccessControlRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutEmailMonitoringConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutEmailMonitoringConfigurationRequest, PutEmailMonitoringConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutEmailMonitoringConfigurationCommandInput extends PutEmailMonitoringConfigurationRequest {
    }
    export interface PutEmailMonitoringConfigurationCommandOutput extends PutEmailMonitoringConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates or updates the email monitoring configuration for a specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutEmailMonitoringConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutEmailMonitoringConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutEmailMonitoringConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutEmailMonitoringConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutEmailMonitoringConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutEmailMonitoringConfigurationCommand extends $Command<PutEmailMonitoringConfigurationCommandInput, PutEmailMonitoringConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutEmailMonitoringConfigurationCommandInput;
            constructor(input: PutEmailMonitoringConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutEmailMonitoringConfigurationCommandInput, PutEmailMonitoringConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutInboundDmarcSettingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutInboundDmarcSettingsRequest, PutInboundDmarcSettingsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutInboundDmarcSettingsCommandInput extends PutInboundDmarcSettingsRequest {
    }
    export interface PutInboundDmarcSettingsCommandOutput extends PutInboundDmarcSettingsResponse, __MetadataBearer {
    }
    /**
        * <p>Enables or disables a DMARC policy for a given organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutInboundDmarcSettingsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutInboundDmarcSettingsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutInboundDmarcSettingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutInboundDmarcSettingsCommandInput} for command's `input` shape.
        * @see {@link PutInboundDmarcSettingsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutInboundDmarcSettingsCommand extends $Command<PutInboundDmarcSettingsCommandInput, PutInboundDmarcSettingsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutInboundDmarcSettingsCommandInput;
            constructor(input: PutInboundDmarcSettingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutInboundDmarcSettingsCommandInput, PutInboundDmarcSettingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMailboxPermissionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutMailboxPermissionsRequest, PutMailboxPermissionsResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutMailboxPermissionsCommandInput extends PutMailboxPermissionsRequest {
    }
    export interface PutMailboxPermissionsCommandOutput extends PutMailboxPermissionsResponse, __MetadataBearer {
    }
    /**
        * <p>Sets permissions for a user, group, or resource. This replaces any pre-existing
        *          permissions.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutMailboxPermissionsCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutMailboxPermissionsCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutMailboxPermissionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutMailboxPermissionsCommandInput} for command's `input` shape.
        * @see {@link PutMailboxPermissionsCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutMailboxPermissionsCommand extends $Command<PutMailboxPermissionsCommandInput, PutMailboxPermissionsCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutMailboxPermissionsCommandInput;
            constructor(input: PutMailboxPermissionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutMailboxPermissionsCommandInput, PutMailboxPermissionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMobileDeviceAccessOverrideCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutMobileDeviceAccessOverrideRequest, PutMobileDeviceAccessOverrideResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutMobileDeviceAccessOverrideCommandInput extends PutMobileDeviceAccessOverrideRequest {
    }
    export interface PutMobileDeviceAccessOverrideCommandOutput extends PutMobileDeviceAccessOverrideResponse, __MetadataBearer {
    }
    /**
        * <p>Creates or updates a mobile device access override for the given WorkMail organization, user, and device.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutMobileDeviceAccessOverrideCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutMobileDeviceAccessOverrideCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutMobileDeviceAccessOverrideCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutMobileDeviceAccessOverrideCommandInput} for command's `input` shape.
        * @see {@link PutMobileDeviceAccessOverrideCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutMobileDeviceAccessOverrideCommand extends $Command<PutMobileDeviceAccessOverrideCommandInput, PutMobileDeviceAccessOverrideCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutMobileDeviceAccessOverrideCommandInput;
            constructor(input: PutMobileDeviceAccessOverrideCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutMobileDeviceAccessOverrideCommandInput, PutMobileDeviceAccessOverrideCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutRetentionPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutRetentionPolicyRequest, PutRetentionPolicyResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface PutRetentionPolicyCommandInput extends PutRetentionPolicyRequest {
    }
    export interface PutRetentionPolicyCommandOutput extends PutRetentionPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Puts a retention policy to the specified organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, PutRetentionPolicyCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, PutRetentionPolicyCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new PutRetentionPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutRetentionPolicyCommandInput} for command's `input` shape.
        * @see {@link PutRetentionPolicyCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class PutRetentionPolicyCommand extends $Command<PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: PutRetentionPolicyCommandInput;
            constructor(input: PutRetentionPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterMailDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RegisterMailDomainRequest, RegisterMailDomainResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface RegisterMailDomainCommandInput extends RegisterMailDomainRequest {
    }
    export interface RegisterMailDomainCommandOutput extends RegisterMailDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Registers a new domain in Amazon WorkMail and SES, and configures it for use by WorkMail. Emails received by SES for this domain are routed to the specified WorkMail organization, and WorkMail has
        *          permanent permission to use the specified domain for sending your users' emails.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, RegisterMailDomainCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, RegisterMailDomainCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new RegisterMailDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterMailDomainCommandInput} for command's `input` shape.
        * @see {@link RegisterMailDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class RegisterMailDomainCommand extends $Command<RegisterMailDomainCommandInput, RegisterMailDomainCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: RegisterMailDomainCommandInput;
            constructor(input: RegisterMailDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterMailDomainCommandInput, RegisterMailDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterToWorkMailCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RegisterToWorkMailRequest, RegisterToWorkMailResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface RegisterToWorkMailCommandInput extends RegisterToWorkMailRequest {
    }
    export interface RegisterToWorkMailCommandOutput extends RegisterToWorkMailResponse, __MetadataBearer {
    }
    /**
        * <p>Registers an existing and disabled user, group, or resource for Amazon WorkMail use by
        *          associating a mailbox and calendaring capabilities. It performs no change if the user,
        *          group, or resource is enabled and fails if the user, group, or resource is deleted. This
        *          operation results in the accumulation of costs. For more information, see <a href="https://aws.amazon.com/workmail/pricing">Pricing</a>. The equivalent console
        *          functionality for this operation is <i>Enable</i>. </p>
        *          <p>Users can either be created by calling the <a>CreateUser</a> API operation
        *          or they can be synchronized from your directory. For more information, see <a>DeregisterFromWorkMail</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, RegisterToWorkMailCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, RegisterToWorkMailCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new RegisterToWorkMailCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RegisterToWorkMailCommandInput} for command's `input` shape.
        * @see {@link RegisterToWorkMailCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class RegisterToWorkMailCommand extends $Command<RegisterToWorkMailCommandInput, RegisterToWorkMailCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: RegisterToWorkMailCommandInput;
            constructor(input: RegisterToWorkMailCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterToWorkMailCommandInput, RegisterToWorkMailCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ResetPasswordCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ResetPasswordRequest, ResetPasswordResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface ResetPasswordCommandInput extends ResetPasswordRequest {
    }
    export interface ResetPasswordCommandOutput extends ResetPasswordResponse, __MetadataBearer {
    }
    /**
        * <p>Allows the administrator to reset the password for a user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, ResetPasswordCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, ResetPasswordCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new ResetPasswordCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResetPasswordCommandInput} for command's `input` shape.
        * @see {@link ResetPasswordCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class ResetPasswordCommand extends $Command<ResetPasswordCommandInput, ResetPasswordCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: ResetPasswordCommandInput;
            constructor(input: ResetPasswordCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResetPasswordCommandInput, ResetPasswordCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/StartMailboxExportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { StartMailboxExportJobRequest, StartMailboxExportJobResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface StartMailboxExportJobCommandInput extends StartMailboxExportJobRequest {
    }
    export interface StartMailboxExportJobCommandOutput extends StartMailboxExportJobResponse, __MetadataBearer {
    }
    /**
        * <p>Starts a mailbox export job to export MIME-format email messages and calendar items
        *          from the specified mailbox to the specified Amazon Simple Storage Service (Amazon S3)
        *          bucket. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html">Exporting mailbox content</a> in
        *          the <i>Amazon WorkMail Administrator Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, StartMailboxExportJobCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, StartMailboxExportJobCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new StartMailboxExportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartMailboxExportJobCommandInput} for command's `input` shape.
        * @see {@link StartMailboxExportJobCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class StartMailboxExportJobCommand extends $Command<StartMailboxExportJobCommandInput, StartMailboxExportJobCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: StartMailboxExportJobCommandInput;
            constructor(input: StartMailboxExportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartMailboxExportJobCommandInput, StartMailboxExportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Applies the specified tags to the specified Amazon WorkMail organization
        *          resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, TagResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, TagResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TestAvailabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TestAvailabilityConfigurationRequest, TestAvailabilityConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface TestAvailabilityConfigurationCommandInput extends TestAvailabilityConfigurationRequest {
    }
    export interface TestAvailabilityConfigurationCommandOutput extends TestAvailabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Performs a test on an availability provider to ensure that access is allowed. For EWS, it verifies the provided credentials can be used to successfully log in. For Lambda, it verifies that the Lambda function can be invoked and that the resource access
        *          policy was configured to deny anonymous access. An anonymous invocation is one done without providing either a <code>SourceArn</code> or <code>SourceAccount</code> header.</p>
        *          <note>
        *             <p>The request must contain either one provider definition (<code>EwsProvider</code> or
        *                <code>LambdaProvider</code>) or the <code>DomainName</code> parameter. If the
        *                <code>DomainName</code> parameter is provided, the configuration stored under the
        *                <code>DomainName</code> will be tested. </p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, TestAvailabilityConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, TestAvailabilityConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new TestAvailabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TestAvailabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link TestAvailabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class TestAvailabilityConfigurationCommand extends $Command<TestAvailabilityConfigurationCommandInput, TestAvailabilityConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: TestAvailabilityConfigurationCommandInput;
            constructor(input: TestAvailabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TestAvailabilityConfigurationCommandInput, TestAvailabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Untags the specified tags from the specified Amazon WorkMail organization
        *          resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UntagResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UntagResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateAvailabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateAvailabilityConfigurationRequest, UpdateAvailabilityConfigurationResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdateAvailabilityConfigurationCommandInput extends UpdateAvailabilityConfigurationRequest {
    }
    export interface UpdateAvailabilityConfigurationCommandOutput extends UpdateAvailabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing <code>AvailabilityConfiguration</code> for the given WorkMail
        *          organization and domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdateAvailabilityConfigurationCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdateAvailabilityConfigurationCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdateAvailabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAvailabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateAvailabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdateAvailabilityConfigurationCommand extends $Command<UpdateAvailabilityConfigurationCommandInput, UpdateAvailabilityConfigurationCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdateAvailabilityConfigurationCommandInput;
            constructor(input: UpdateAvailabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAvailabilityConfigurationCommandInput, UpdateAvailabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateDefaultMailDomainCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateDefaultMailDomainRequest, UpdateDefaultMailDomainResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdateDefaultMailDomainCommandInput extends UpdateDefaultMailDomainRequest {
    }
    export interface UpdateDefaultMailDomainCommandOutput extends UpdateDefaultMailDomainResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the default mail domain for an organization. The default mail domain is used by the WorkMail AWS Console to suggest an email address when enabling a mail user. You can only have one default domain.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdateDefaultMailDomainCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdateDefaultMailDomainCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdateDefaultMailDomainCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDefaultMailDomainCommandInput} for command's `input` shape.
        * @see {@link UpdateDefaultMailDomainCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdateDefaultMailDomainCommand extends $Command<UpdateDefaultMailDomainCommandInput, UpdateDefaultMailDomainCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdateDefaultMailDomainCommandInput;
            constructor(input: UpdateDefaultMailDomainCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDefaultMailDomainCommandInput, UpdateDefaultMailDomainCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMailboxQuotaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateMailboxQuotaRequest, UpdateMailboxQuotaResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdateMailboxQuotaCommandInput extends UpdateMailboxQuotaRequest {
    }
    export interface UpdateMailboxQuotaCommandOutput extends UpdateMailboxQuotaResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a user's current mailbox quota for a specified organization and
        *          user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdateMailboxQuotaCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdateMailboxQuotaCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdateMailboxQuotaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateMailboxQuotaCommandInput} for command's `input` shape.
        * @see {@link UpdateMailboxQuotaCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdateMailboxQuotaCommand extends $Command<UpdateMailboxQuotaCommandInput, UpdateMailboxQuotaCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdateMailboxQuotaCommandInput;
            constructor(input: UpdateMailboxQuotaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateMailboxQuotaCommandInput, UpdateMailboxQuotaCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMobileDeviceAccessRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateMobileDeviceAccessRuleRequest, UpdateMobileDeviceAccessRuleResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdateMobileDeviceAccessRuleCommandInput extends UpdateMobileDeviceAccessRuleRequest {
    }
    export interface UpdateMobileDeviceAccessRuleCommandOutput extends UpdateMobileDeviceAccessRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a mobile device access rule for the specified Amazon WorkMail organization.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdateMobileDeviceAccessRuleCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdateMobileDeviceAccessRuleCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdateMobileDeviceAccessRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateMobileDeviceAccessRuleCommandInput} for command's `input` shape.
        * @see {@link UpdateMobileDeviceAccessRuleCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdateMobileDeviceAccessRuleCommand extends $Command<UpdateMobileDeviceAccessRuleCommandInput, UpdateMobileDeviceAccessRuleCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdateMobileDeviceAccessRuleCommandInput;
            constructor(input: UpdateMobileDeviceAccessRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateMobileDeviceAccessRuleCommandInput, UpdateMobileDeviceAccessRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdatePrimaryEmailAddressCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdatePrimaryEmailAddressRequest, UpdatePrimaryEmailAddressResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdatePrimaryEmailAddressCommandInput extends UpdatePrimaryEmailAddressRequest {
    }
    export interface UpdatePrimaryEmailAddressCommandOutput extends UpdatePrimaryEmailAddressResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the primary email for a user, group, or resource. The current email is moved
        *          into the list of aliases (or swapped between an existing alias and the current primary
        *          email), and the email provided in the input is promoted as the primary.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdatePrimaryEmailAddressCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdatePrimaryEmailAddressCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdatePrimaryEmailAddressCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePrimaryEmailAddressCommandInput} for command's `input` shape.
        * @see {@link UpdatePrimaryEmailAddressCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdatePrimaryEmailAddressCommand extends $Command<UpdatePrimaryEmailAddressCommandInput, UpdatePrimaryEmailAddressCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdatePrimaryEmailAddressCommandInput;
            constructor(input: UpdatePrimaryEmailAddressCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePrimaryEmailAddressCommandInput, UpdatePrimaryEmailAddressCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateResourceRequest, UpdateResourceResponse } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient";
    export interface UpdateResourceCommandInput extends UpdateResourceRequest {
    }
    export interface UpdateResourceCommandOutput extends UpdateResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Updates data for the resource. To have the latest information, it must be preceded by
        *          a <a>DescribeResource</a> call. The dataset in the request should be the one
        *          expected when performing another <code>DescribeResource</code> call.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { WorkMailClient, UpdateResourceCommand } from "@aws-sdk/client-workmail"; // ES Modules import
        * // const { WorkMailClient, UpdateResourceCommand } = require("@aws-sdk/client-workmail"); // CommonJS import
        * const client = new WorkMailClient(config);
        * const command = new UpdateResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateResourceCommandInput} for command's `input` shape.
        * @see {@link UpdateResourceCommandOutput} for command's `response` shape.
        * @see {@link WorkMailClientResolvedConfig | config} for WorkMailClient's `config` shape.
        *
        */
    export class UpdateResourceCommand extends $Command<UpdateResourceCommandInput, UpdateResourceCommandOutput, WorkMailClientResolvedConfig> {
            readonly input: UpdateResourceCommandInput;
            constructor(input: UpdateResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkMailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateResourceCommandInput, UpdateResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/WorkMailClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateDelegateToResourceCommandInput, AssociateDelegateToResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateDelegateToResourceCommand";
    import { AssociateMemberToGroupCommandInput, AssociateMemberToGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/AssociateMemberToGroupCommand";
    import { CancelMailboxExportJobCommandInput, CancelMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CancelMailboxExportJobCommand";
    import { CreateAliasCommandInput, CreateAliasCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAliasCommand";
    import { CreateAvailabilityConfigurationCommandInput, CreateAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateAvailabilityConfigurationCommand";
    import { CreateGroupCommandInput, CreateGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateGroupCommand";
    import { CreateMobileDeviceAccessRuleCommandInput, CreateMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateMobileDeviceAccessRuleCommand";
    import { CreateOrganizationCommandInput, CreateOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateOrganizationCommand";
    import { CreateResourceCommandInput, CreateResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateResourceCommand";
    import { CreateUserCommandInput, CreateUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/CreateUserCommand";
    import { DeleteAccessControlRuleCommandInput, DeleteAccessControlRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAccessControlRuleCommand";
    import { DeleteAliasCommandInput, DeleteAliasCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAliasCommand";
    import { DeleteAvailabilityConfigurationCommandInput, DeleteAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteAvailabilityConfigurationCommand";
    import { DeleteEmailMonitoringConfigurationCommandInput, DeleteEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteEmailMonitoringConfigurationCommand";
    import { DeleteGroupCommandInput, DeleteGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteGroupCommand";
    import { DeleteMailboxPermissionsCommandInput, DeleteMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMailboxPermissionsCommand";
    import { DeleteMobileDeviceAccessOverrideCommandInput, DeleteMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessOverrideCommand";
    import { DeleteMobileDeviceAccessRuleCommandInput, DeleteMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteMobileDeviceAccessRuleCommand";
    import { DeleteOrganizationCommandInput, DeleteOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteOrganizationCommand";
    import { DeleteResourceCommandInput, DeleteResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteResourceCommand";
    import { DeleteRetentionPolicyCommandInput, DeleteRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteRetentionPolicyCommand";
    import { DeleteUserCommandInput, DeleteUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeleteUserCommand";
    import { DeregisterFromWorkMailCommandInput, DeregisterFromWorkMailCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterFromWorkMailCommand";
    import { DeregisterMailDomainCommandInput, DeregisterMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DeregisterMailDomainCommand";
    import { DescribeEmailMonitoringConfigurationCommandInput, DescribeEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeEmailMonitoringConfigurationCommand";
    import { DescribeGroupCommandInput, DescribeGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeGroupCommand";
    import { DescribeInboundDmarcSettingsCommandInput, DescribeInboundDmarcSettingsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeInboundDmarcSettingsCommand";
    import { DescribeMailboxExportJobCommandInput, DescribeMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeMailboxExportJobCommand";
    import { DescribeOrganizationCommandInput, DescribeOrganizationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeOrganizationCommand";
    import { DescribeResourceCommandInput, DescribeResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeResourceCommand";
    import { DescribeUserCommandInput, DescribeUserCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DescribeUserCommand";
    import { DisassociateDelegateFromResourceCommandInput, DisassociateDelegateFromResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateDelegateFromResourceCommand";
    import { DisassociateMemberFromGroupCommandInput, DisassociateMemberFromGroupCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/DisassociateMemberFromGroupCommand";
    import { GetAccessControlEffectCommandInput, GetAccessControlEffectCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetAccessControlEffectCommand";
    import { GetDefaultRetentionPolicyCommandInput, GetDefaultRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetDefaultRetentionPolicyCommand";
    import { GetMailboxDetailsCommandInput, GetMailboxDetailsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailboxDetailsCommand";
    import { GetMailDomainCommandInput, GetMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMailDomainCommand";
    import { GetMobileDeviceAccessEffectCommandInput, GetMobileDeviceAccessEffectCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessEffectCommand";
    import { GetMobileDeviceAccessOverrideCommandInput, GetMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/GetMobileDeviceAccessOverrideCommand";
    import { ListAccessControlRulesCommandInput, ListAccessControlRulesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAccessControlRulesCommand";
    import { ListAliasesCommandInput, ListAliasesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAliasesCommand";
    import { ListAvailabilityConfigurationsCommandInput, ListAvailabilityConfigurationsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListAvailabilityConfigurationsCommand";
    import { ListGroupMembersCommandInput, ListGroupMembersCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupMembersCommand";
    import { ListGroupsCommandInput, ListGroupsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListGroupsCommand";
    import { ListMailboxExportJobsCommandInput, ListMailboxExportJobsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxExportJobsCommand";
    import { ListMailboxPermissionsCommandInput, ListMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailboxPermissionsCommand";
    import { ListMailDomainsCommandInput, ListMailDomainsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMailDomainsCommand";
    import { ListMobileDeviceAccessOverridesCommandInput, ListMobileDeviceAccessOverridesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessOverridesCommand";
    import { ListMobileDeviceAccessRulesCommandInput, ListMobileDeviceAccessRulesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListMobileDeviceAccessRulesCommand";
    import { ListOrganizationsCommandInput, ListOrganizationsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListOrganizationsCommand";
    import { ListResourceDelegatesCommandInput, ListResourceDelegatesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourceDelegatesCommand";
    import { ListResourcesCommandInput, ListResourcesCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListResourcesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListTagsForResourceCommand";
    import { ListUsersCommandInput, ListUsersCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ListUsersCommand";
    import { PutAccessControlRuleCommandInput, PutAccessControlRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutAccessControlRuleCommand";
    import { PutEmailMonitoringConfigurationCommandInput, PutEmailMonitoringConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutEmailMonitoringConfigurationCommand";
    import { PutInboundDmarcSettingsCommandInput, PutInboundDmarcSettingsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutInboundDmarcSettingsCommand";
    import { PutMailboxPermissionsCommandInput, PutMailboxPermissionsCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMailboxPermissionsCommand";
    import { PutMobileDeviceAccessOverrideCommandInput, PutMobileDeviceAccessOverrideCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutMobileDeviceAccessOverrideCommand";
    import { PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/PutRetentionPolicyCommand";
    import { RegisterMailDomainCommandInput, RegisterMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterMailDomainCommand";
    import { RegisterToWorkMailCommandInput, RegisterToWorkMailCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/RegisterToWorkMailCommand";
    import { ResetPasswordCommandInput, ResetPasswordCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/ResetPasswordCommand";
    import { StartMailboxExportJobCommandInput, StartMailboxExportJobCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/StartMailboxExportJobCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TagResourceCommand";
    import { TestAvailabilityConfigurationCommandInput, TestAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/TestAvailabilityConfigurationCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UntagResourceCommand";
    import { UpdateAvailabilityConfigurationCommandInput, UpdateAvailabilityConfigurationCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateAvailabilityConfigurationCommand";
    import { UpdateDefaultMailDomainCommandInput, UpdateDefaultMailDomainCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateDefaultMailDomainCommand";
    import { UpdateMailboxQuotaCommandInput, UpdateMailboxQuotaCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMailboxQuotaCommand";
    import { UpdateMobileDeviceAccessRuleCommandInput, UpdateMobileDeviceAccessRuleCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateMobileDeviceAccessRuleCommand";
    import { UpdatePrimaryEmailAddressCommandInput, UpdatePrimaryEmailAddressCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdatePrimaryEmailAddressCommand";
    import { UpdateResourceCommandInput, UpdateResourceCommandOutput } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/commands/UpdateResourceCommand";
    export type ServiceInputTypes = AssociateDelegateToResourceCommandInput | AssociateMemberToGroupCommandInput | CancelMailboxExportJobCommandInput | CreateAliasCommandInput | CreateAvailabilityConfigurationCommandInput | CreateGroupCommandInput | CreateMobileDeviceAccessRuleCommandInput | CreateOrganizationCommandInput | CreateResourceCommandInput | CreateUserCommandInput | DeleteAccessControlRuleCommandInput | DeleteAliasCommandInput | DeleteAvailabilityConfigurationCommandInput | DeleteEmailMonitoringConfigurationCommandInput | DeleteGroupCommandInput | DeleteMailboxPermissionsCommandInput | DeleteMobileDeviceAccessOverrideCommandInput | DeleteMobileDeviceAccessRuleCommandInput | DeleteOrganizationCommandInput | DeleteResourceCommandInput | DeleteRetentionPolicyCommandInput | DeleteUserCommandInput | DeregisterFromWorkMailCommandInput | DeregisterMailDomainCommandInput | DescribeEmailMonitoringConfigurationCommandInput | DescribeGroupCommandInput | DescribeInboundDmarcSettingsCommandInput | DescribeMailboxExportJobCommandInput | DescribeOrganizationCommandInput | DescribeResourceCommandInput | DescribeUserCommandInput | DisassociateDelegateFromResourceCommandInput | DisassociateMemberFromGroupCommandInput | GetAccessControlEffectCommandInput | GetDefaultRetentionPolicyCommandInput | GetMailDomainCommandInput | GetMailboxDetailsCommandInput | GetMobileDeviceAccessEffectCommandInput | GetMobileDeviceAccessOverrideCommandInput | ListAccessControlRulesCommandInput | ListAliasesCommandInput | ListAvailabilityConfigurationsCommandInput | ListGroupMembersCommandInput | ListGroupsCommandInput | ListMailDomainsCommandInput | ListMailboxExportJobsCommandInput | ListMailboxPermissionsCommandInput | ListMobileDeviceAccessOverridesCommandInput | ListMobileDeviceAccessRulesCommandInput | ListOrganizationsCommandInput | ListResourceDelegatesCommandInput | ListResourcesCommandInput | ListTagsForResourceCommandInput | ListUsersCommandInput | PutAccessControlRuleCommandInput | PutEmailMonitoringConfigurationCommandInput | PutInboundDmarcSettingsCommandInput | PutMailboxPermissionsCommandInput | PutMobileDeviceAccessOverrideCommandInput | PutRetentionPolicyCommandInput | RegisterMailDomainCommandInput | RegisterToWorkMailCommandInput | ResetPasswordCommandInput | StartMailboxExportJobCommandInput | TagResourceCommandInput | TestAvailabilityConfigurationCommandInput | UntagResourceCommandInput | UpdateAvailabilityConfigurationCommandInput | UpdateDefaultMailDomainCommandInput | UpdateMailboxQuotaCommandInput | UpdateMobileDeviceAccessRuleCommandInput | UpdatePrimaryEmailAddressCommandInput | UpdateResourceCommandInput;
    export type ServiceOutputTypes = AssociateDelegateToResourceCommandOutput | AssociateMemberToGroupCommandOutput | CancelMailboxExportJobCommandOutput | CreateAliasCommandOutput | CreateAvailabilityConfigurationCommandOutput | CreateGroupCommandOutput | CreateMobileDeviceAccessRuleCommandOutput | CreateOrganizationCommandOutput | CreateResourceCommandOutput | CreateUserCommandOutput | DeleteAccessControlRuleCommandOutput | DeleteAliasCommandOutput | DeleteAvailabilityConfigurationCommandOutput | DeleteEmailMonitoringConfigurationCommandOutput | DeleteGroupCommandOutput | DeleteMailboxPermissionsCommandOutput | DeleteMobileDeviceAccessOverrideCommandOutput | DeleteMobileDeviceAccessRuleCommandOutput | DeleteOrganizationCommandOutput | DeleteResourceCommandOutput | DeleteRetentionPolicyCommandOutput | DeleteUserCommandOutput | DeregisterFromWorkMailCommandOutput | DeregisterMailDomainCommandOutput | DescribeEmailMonitoringConfigurationCommandOutput | DescribeGroupCommandOutput | DescribeInboundDmarcSettingsCommandOutput | DescribeMailboxExportJobCommandOutput | DescribeOrganizationCommandOutput | DescribeResourceCommandOutput | DescribeUserCommandOutput | DisassociateDelegateFromResourceCommandOutput | DisassociateMemberFromGroupCommandOutput | GetAccessControlEffectCommandOutput | GetDefaultRetentionPolicyCommandOutput | GetMailDomainCommandOutput | GetMailboxDetailsCommandOutput | GetMobileDeviceAccessEffectCommandOutput | GetMobileDeviceAccessOverrideCommandOutput | ListAccessControlRulesCommandOutput | ListAliasesCommandOutput | ListAvailabilityConfigurationsCommandOutput | ListGroupMembersCommandOutput | ListGroupsCommandOutput | ListMailDomainsCommandOutput | ListMailboxExportJobsCommandOutput | ListMailboxPermissionsCommandOutput | ListMobileDeviceAccessOverridesCommandOutput | ListMobileDeviceAccessRulesCommandOutput | ListOrganizationsCommandOutput | ListResourceDelegatesCommandOutput | ListResourcesCommandOutput | ListTagsForResourceCommandOutput | ListUsersCommandOutput | PutAccessControlRuleCommandOutput | PutEmailMonitoringConfigurationCommandOutput | PutInboundDmarcSettingsCommandOutput | PutMailboxPermissionsCommandOutput | PutMobileDeviceAccessOverrideCommandOutput | PutRetentionPolicyCommandOutput | RegisterMailDomainCommandOutput | RegisterToWorkMailCommandOutput | ResetPasswordCommandOutput | StartMailboxExportJobCommandOutput | TagResourceCommandOutput | TestAvailabilityConfigurationCommandOutput | UntagResourceCommandOutput | UpdateAvailabilityConfigurationCommandOutput | UpdateDefaultMailDomainCommandOutput | UpdateMailboxQuotaCommandOutput | UpdateMobileDeviceAccessRuleCommandOutput | UpdatePrimaryEmailAddressCommandOutput | UpdateResourceCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type WorkMailClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of WorkMailClient class constructor that set the region, credentials and other options.
        */
    export interface WorkMailClientConfig extends WorkMailClientConfigType {
    }
    type WorkMailClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of WorkMailClient class. This is resolved and normalized from the {@link WorkMailClientConfig | constructor configuration interface}.
        */
    export interface WorkMailClientResolvedConfig extends WorkMailClientResolvedConfigType {
    }
    /**
        * <p>Amazon WorkMail is a secure, managed business email and calendaring service with support for
        *          existing desktop and mobile email clients. You can access your email, contacts, and
        *          calendars using Microsoft Outlook, your browser, or other native iOS and Android email
        *          applications. You can integrate WorkMail with your existing corporate directory and control
        *          both the keys that encrypt your data and the location in which your data is
        *          stored.</p>
        *          <p>The WorkMail API is designed for the following scenarios:</p>
        *          <ul>
        *             <li>
        *                <p>Listing and describing organizations</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing users</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing groups</p>
        *             </li>
        *          </ul>
        *          <ul>
        *             <li>
        *                <p>Managing resources</p>
        *             </li>
        *          </ul>
        *          <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not
        *          only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management
        *          users and roles to help facilitate access, trust, and permission policies. By creating a
        *          role and allowing an IAM user to access the WorkMail site, the IAM user gains full
        *          administrative visibility into the entire WorkMail organization (or as set in the IAM
        *          policy). This includes, but is not limited to, the ability to create, update, and delete
        *          users, groups, and resources. This allows developers to perform the scenarios listed above,
        *          as well as give users the ability to grant access on a selective basis using the IAM
        *          model.</p>
        */
    export class WorkMailClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, WorkMailClientResolvedConfig> {
            /**
                * The resolved configuration of WorkMailClient class. This is resolved and normalized from the {@link WorkMailClientConfig | constructor configuration interface}.
                */
            readonly config: WorkMailClientResolvedConfig;
            constructor(configuration: WorkMailClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { WorkMailServiceException as __BaseException } from "@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/WorkMailServiceException";
    export enum AccessControlRuleEffect {
            ALLOW = "ALLOW",
            DENY = "DENY"
    }
    /**
        * <p>A rule that controls access to an Amazon WorkMail organization.</p>
        */
    export interface AccessControlRule {
            /**
                * <p>The rule name.</p>
                */
            Name?: string;
            /**
                * <p>The rule effect.</p>
                */
            Effect?: AccessControlRuleEffect | string;
            /**
                * <p>The rule description.</p>
                */
            Description?: string;
            /**
                * <p>IPv4 CIDR ranges to include in the rule.</p>
                */
            IpRanges?: string[];
            /**
                * <p>IPv4 CIDR ranges to exclude from the rule.</p>
                */
            NotIpRanges?: string[];
            /**
                * <p>Access protocol actions to include in the rule. Valid values include
                *             <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>,
                *             <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
                */
            Actions?: string[];
            /**
                * <p>Access protocol actions to exclude from the rule. Valid values include
                *             <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>,
                *             <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
                */
            NotActions?: string[];
            /**
                * <p>User IDs to include in the rule.</p>
                */
            UserIds?: string[];
            /**
                * <p>User IDs to exclude from the rule.</p>
                */
            NotUserIds?: string[];
            /**
                * <p>The date that the rule was created.</p>
                */
            DateCreated?: Date;
            /**
                * <p>The date that the rule was modified.</p>
                */
            DateModified?: Date;
    }
    export namespace AccessControlRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccessControlRule) => any;
    }
    export interface AssociateDelegateToResourceRequest {
            /**
                * <p>The organization under which the resource exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The resource for which members (users or groups) are associated.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The member (user or group) to associate to the resource.</p>
                */
            EntityId: string | undefined;
    }
    export namespace AssociateDelegateToResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDelegateToResourceRequest) => any;
    }
    export interface AssociateDelegateToResourceResponse {
    }
    export namespace AssociateDelegateToResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateDelegateToResourceResponse) => any;
    }
    /**
        * <p>The identifier supplied for the user, group, or resource does not exist in your
        *          organization.</p>
        */
    export class EntityNotFoundException extends __BaseException {
            readonly name: "EntityNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<EntityNotFoundException, __BaseException>);
    }
    /**
        * <p>You are performing an operation on a user, group, or resource that isn't in the
        *          expected state, such as trying to delete an active user.</p>
        */
    export class EntityStateException extends __BaseException {
            readonly name: "EntityStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<EntityStateException, __BaseException>);
    }
    /**
        * <p>One or more of the input parameters don't match the service's restrictions.</p>
        */
    export class InvalidParameterException extends __BaseException {
            readonly name: "InvalidParameterException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
    }
    /**
        * <p>An operation received a valid organization identifier that either doesn't belong or
        *          exist in the system.</p>
        */
    export class OrganizationNotFoundException extends __BaseException {
            readonly name: "OrganizationNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OrganizationNotFoundException, __BaseException>);
    }
    /**
        * <p>The organization must have a valid state to perform certain
        *          operations on the organization or its members.</p>
        */
    export class OrganizationStateException extends __BaseException {
            readonly name: "OrganizationStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<OrganizationStateException, __BaseException>);
    }
    export interface AssociateMemberToGroupRequest {
            /**
                * <p>The organization under which the group exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The group to which the member (user or group) is associated.</p>
                */
            GroupId: string | undefined;
            /**
                * <p>The member (user or group) to associate to the group.</p>
                */
            MemberId: string | undefined;
    }
    export namespace AssociateMemberToGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateMemberToGroupRequest) => any;
    }
    export interface AssociateMemberToGroupResponse {
    }
    export namespace AssociateMemberToGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateMemberToGroupResponse) => any;
    }
    /**
        * <p>The directory service doesn't recognize the credentials supplied by WorkMail.</p>
        */
    export class DirectoryServiceAuthenticationFailedException extends __BaseException {
            readonly name: "DirectoryServiceAuthenticationFailedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DirectoryServiceAuthenticationFailedException, __BaseException>);
    }
    /**
        * <p>The directory is unavailable. It might be located in another Region or deleted.</p>
        */
    export class DirectoryUnavailableException extends __BaseException {
            readonly name: "DirectoryUnavailableException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DirectoryUnavailableException, __BaseException>);
    }
    /**
        * <p>You can't perform a write operation against a read-only directory.</p>
        */
    export class UnsupportedOperationException extends __BaseException {
            readonly name: "UnsupportedOperationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnsupportedOperationException, __BaseException>);
    }
    /**
        * <p>Describes an EWS based availability provider when returned from the service. It does not
        *          contain the password of the endpoint.</p>
        */
    export interface RedactedEwsAvailabilityProvider {
            /**
                * <p>The endpoint of the remote EWS server.</p>
                */
            EwsEndpoint?: string;
            /**
                * <p>The username used to authenticate the remote EWS server.</p>
                */
            EwsUsername?: string;
    }
    export namespace RedactedEwsAvailabilityProvider {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RedactedEwsAvailabilityProvider) => any;
    }
    /**
        * <p>Describes a Lambda based availability provider.</p>
        */
    export interface LambdaAvailabilityProvider {
            /**
                * <p>The Amazon Resource Name (ARN) of the Lambda that acts as the availability provider.</p>
                */
            LambdaArn: string | undefined;
    }
    export namespace LambdaAvailabilityProvider {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LambdaAvailabilityProvider) => any;
    }
    export enum AvailabilityProviderType {
            EWS = "EWS",
            LAMBDA = "LAMBDA"
    }
    /**
        * <p>List all the <code>AvailabilityConfiguration</code>'s for the given WorkMail
        *          organization.</p>
        */
    export interface AvailabilityConfiguration {
            /**
                * <p>Displays the domain to which the provider applies.</p>
                */
            DomainName?: string;
            /**
                * <p>Displays the provider type that applies to this domain.</p>
                */
            ProviderType?: AvailabilityProviderType | string;
            /**
                * <p>If <code>ProviderType</code> is <code>EWS</code>, then this field contains
                *             <code>RedactedEwsAvailabilityProvider</code>. Otherwise, it is not requried.</p>
                */
            EwsProvider?: RedactedEwsAvailabilityProvider;
            /**
                * <p>If ProviderType is <code>LAMBDA</code> then this field contains
                *             <code>LambdaAvailabilityProvider</code>. Otherwise, it is not required.</p>
                */
            LambdaProvider?: LambdaAvailabilityProvider;
            /**
                * <p>The date and time at which the availability configuration was created.</p>
                */
            DateCreated?: Date;
            /**
                * <p>The date and time at which the availability configuration was last modified.</p>
                */
            DateModified?: Date;
    }
    export namespace AvailabilityConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AvailabilityConfiguration) => any;
    }
    /**
        * <p>At least one delegate must be associated to the resource to disable automatic replies
        *          from the resource.</p>
        */
    export interface BookingOptions {
            /**
                * <p>The resource's ability to automatically reply to requests. If disabled, delegates
                *          must be associated to the resource.</p>
                */
            AutoAcceptRequests?: boolean;
            /**
                * <p>The resource's ability to automatically decline any recurring requests.</p>
                */
            AutoDeclineRecurringRequests?: boolean;
            /**
                * <p>The resource's ability to automatically decline any conflicting requests.</p>
                */
            AutoDeclineConflictingRequests?: boolean;
    }
    export namespace BookingOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BookingOptions) => any;
    }
    export interface CancelMailboxExportJobRequest {
            /**
                * <p>The idempotency token for the client request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The job ID.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace CancelMailboxExportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelMailboxExportJobRequest) => any;
    }
    export interface CancelMailboxExportJobResponse {
    }
    export namespace CancelMailboxExportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CancelMailboxExportJobResponse) => any;
    }
    export interface CreateAliasRequest {
            /**
                * <p>The organization under which the member (user or group) exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The member (user or group) to which this alias is added.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The alias to add to the member set.</p>
                */
            Alias: string | undefined;
    }
    export namespace CreateAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAliasRequest) => any;
    }
    export interface CreateAliasResponse {
    }
    export namespace CreateAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAliasResponse) => any;
    }
    /**
        * <p>The email address that you're trying to assign is already created for a different
        *          user, group, or resource.</p>
        */
    export class EmailAddressInUseException extends __BaseException {
            readonly name: "EmailAddressInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<EmailAddressInUseException, __BaseException>);
    }
    /**
        * <p>The request exceeds the limit of the resource.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>The domain specified is not found in your organization.</p>
        */
    export class MailDomainNotFoundException extends __BaseException {
            readonly name: "MailDomainNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MailDomainNotFoundException, __BaseException>);
    }
    /**
        * <p>After a domain has been added to the organization, it must be verified. The domain is
        *          not yet verified.</p>
        */
    export class MailDomainStateException extends __BaseException {
            readonly name: "MailDomainStateException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MailDomainStateException, __BaseException>);
    }
    /**
        * <p>Describes an EWS based availability provider. This is only used as input to the service.</p>
        */
    export interface EwsAvailabilityProvider {
            /**
                * <p>The endpoint of the remote EWS server.</p>
                */
            EwsEndpoint: string | undefined;
            /**
                * <p>The username used to authenticate the remote EWS server.</p>
                */
            EwsUsername: string | undefined;
            /**
                * <p>The password used to authenticate the remote EWS server.</p>
                */
            EwsPassword: string | undefined;
    }
    export namespace EwsAvailabilityProvider {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EwsAvailabilityProvider) => any;
    }
    export interface CreateAvailabilityConfigurationRequest {
            /**
                * <p>An idempotent token that ensures that an API request is executed only once.</p>
                */
            ClientToken?: string;
            /**
                * <p>The Amazon WorkMail organization for which the <code>AvailabilityConfiguration</code> will be created.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain to which the provider applies.</p>
                */
            DomainName: string | undefined;
            /**
                * <p>Exchange Web Services (EWS) availability provider definition. The request must contain exactly one provider definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>.</p>
                */
            EwsProvider?: EwsAvailabilityProvider;
            /**
                * <p>Lambda availability provider definition. The request must contain exactly one provider definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>.</p>
                */
            LambdaProvider?: LambdaAvailabilityProvider;
    }
    export namespace CreateAvailabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAvailabilityConfigurationRequest) => any;
    }
    export interface CreateAvailabilityConfigurationResponse {
    }
    export namespace CreateAvailabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAvailabilityConfigurationResponse) => any;
    }
    /**
        * <p>The user, group, or resource name isn't unique in Amazon WorkMail.</p>
        */
    export class NameAvailabilityException extends __BaseException {
            readonly name: "NameAvailabilityException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NameAvailabilityException, __BaseException>);
    }
    export interface CreateGroupRequest {
            /**
                * <p>The organization under which the group is to be created.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The name of the group.</p>
                */
            Name: string | undefined;
    }
    export namespace CreateGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGroupRequest) => any;
    }
    export interface CreateGroupResponse {
            /**
                * <p>The identifier of the group.</p>
                */
            GroupId?: string;
    }
    export namespace CreateGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGroupResponse) => any;
    }
    /**
        * <p>This user, group, or resource name is not allowed in Amazon WorkMail.</p>
        */
    export class ReservedNameException extends __BaseException {
            readonly name: "ReservedNameException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ReservedNameException, __BaseException>);
    }
    export enum MobileDeviceAccessRuleEffect {
            ALLOW = "ALLOW",
            DENY = "DENY"
    }
    export interface CreateMobileDeviceAccessRuleRequest {
            /**
                * <p>The Amazon WorkMail organization under which the rule will be created.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The idempotency token for the client request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The rule name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The rule description.</p>
                */
            Description?: string;
            /**
                * <p>The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect: MobileDeviceAccessRuleEffect | string | undefined;
            /**
                * <p>Device types that the rule will match.</p>
                */
            DeviceTypes?: string[];
            /**
                * <p>Device types that the rule <b>will not</b> match. All other device types will match.</p>
                */
            NotDeviceTypes?: string[];
            /**
                * <p>Device models that the rule will match.</p>
                */
            DeviceModels?: string[];
            /**
                * <p>Device models that the rule <b>will not</b> match. All other device models will match.</p>
                */
            NotDeviceModels?: string[];
            /**
                * <p>Device operating systems that the rule will match.</p>
                */
            DeviceOperatingSystems?: string[];
            /**
                * <p>Device operating systems that the rule <b>will not</b> match. All other device operating systems will match.</p>
                */
            NotDeviceOperatingSystems?: string[];
            /**
                * <p>Device user agents that the rule will match.</p>
                */
            DeviceUserAgents?: string[];
            /**
                * <p>Device user agents that the rule <b>will not</b> match. All other device user agents will match.</p>
                */
            NotDeviceUserAgents?: string[];
    }
    export namespace CreateMobileDeviceAccessRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMobileDeviceAccessRuleRequest) => any;
    }
    export interface CreateMobileDeviceAccessRuleResponse {
            /**
                * <p>The identifier for the newly created mobile device access rule.</p>
                */
            MobileDeviceAccessRuleId?: string;
    }
    export namespace CreateMobileDeviceAccessRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMobileDeviceAccessRuleResponse) => any;
    }
    /**
        * <p>The domain to associate with an Amazon WorkMail organization.</p>
        *          <p>When you configure a domain hosted in Amazon Route 53 (Route 53), all recommended DNS records are added to the organization when you create it. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding a domain</a> in the <i>Amazon WorkMail Administrator Guide</i>.</p>
        */
    export interface Domain {
            /**
                * <p>The fully qualified domain name.</p>
                */
            DomainName?: string;
            /**
                * <p>The hosted zone ID for a domain hosted in Route 53. Required when configuring a domain hosted in Route 53.</p>
                */
            HostedZoneId?: string;
    }
    export namespace Domain {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Domain) => any;
    }
    export interface CreateOrganizationRequest {
            /**
                * <p>The AWS Directory Service directory ID.</p>
                */
            DirectoryId?: string;
            /**
                * <p>The organization alias.</p>
                */
            Alias: string | undefined;
            /**
                * <p>The idempotency token associated with the request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The email domains to associate with the organization.</p>
                */
            Domains?: Domain[];
            /**
                * <p>The Amazon Resource Name (ARN) of a customer managed master key from AWS
                *          KMS.</p>
                */
            KmsKeyArn?: string;
            /**
                * <p>When <code>true</code>, allows organization interoperability between Amazon WorkMail and Microsoft Exchange. Can only be set to <code>true</code> if an AD Connector directory ID is included in the request.</p>
                */
            EnableInteroperability?: boolean;
    }
    export namespace CreateOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationRequest) => any;
    }
    export interface CreateOrganizationResponse {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId?: string;
    }
    export namespace CreateOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateOrganizationResponse) => any;
    }
    /**
        * <p>The directory is already in use by another WorkMail organization in the same account and Region.</p>
        */
    export class DirectoryInUseException extends __BaseException {
            readonly name: "DirectoryInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<DirectoryInUseException, __BaseException>);
    }
    export enum ResourceType {
            EQUIPMENT = "EQUIPMENT",
            ROOM = "ROOM"
    }
    export interface CreateResourceRequest {
            /**
                * <p>The identifier associated with the organization for which the resource is
                *          created.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The name of the new resource.</p>
                */
            Name: string | undefined;
            /**
                * <p>The type of the new resource. The available types are <code>equipment</code> and
                *             <code>room</code>.</p>
                */
            Type: ResourceType | string | undefined;
    }
    export namespace CreateResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceRequest) => any;
    }
    export interface CreateResourceResponse {
            /**
                * <p>The identifier of the new resource.</p>
                */
            ResourceId?: string;
    }
    export namespace CreateResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResourceResponse) => any;
    }
    export interface CreateUserRequest {
            /**
                * <p>The identifier of the organization for which the user is created.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The name for the new user. WorkMail directory user names have a maximum length of 64. All others have a maximum length of 20.</p>
                */
            Name: string | undefined;
            /**
                * <p>The display name for the new user.</p>
                */
            DisplayName: string | undefined;
            /**
                * <p>The password for the new user.</p>
                */
            Password: string | undefined;
    }
    export namespace CreateUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserRequest) => any;
    }
    export interface CreateUserResponse {
            /**
                * <p>The identifier for the new user.</p>
                */
            UserId?: string;
    }
    export namespace CreateUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateUserResponse) => any;
    }
    /**
        * <p>The supplied password doesn't match the minimum security constraints, such as length
        *          or use of special characters.</p>
        */
    export class InvalidPasswordException extends __BaseException {
            readonly name: "InvalidPasswordException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidPasswordException, __BaseException>);
    }
    export enum MemberType {
            GROUP = "GROUP",
            USER = "USER"
    }
    /**
        * <p>The name of the attribute, which is one of the values defined in the UserAttribute
        *          enumeration.</p>
        */
    export interface Delegate {
            /**
                * <p>The identifier for the user or group associated as the resource's delegate.</p>
                */
            Id: string | undefined;
            /**
                * <p>The type of the delegate: user or group.</p>
                */
            Type: MemberType | string | undefined;
    }
    export namespace Delegate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Delegate) => any;
    }
    export interface DeleteAccessControlRuleRequest {
            /**
                * <p>The identifier for the organization.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The name of the access control rule.</p>
                */
            Name: string | undefined;
    }
    export namespace DeleteAccessControlRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessControlRuleRequest) => any;
    }
    export interface DeleteAccessControlRuleResponse {
    }
    export namespace DeleteAccessControlRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessControlRuleResponse) => any;
    }
    export interface DeleteAliasRequest {
            /**
                * <p>The identifier for the organization under which the user exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the member (user or group) from which to have the aliases
                *          removed.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The aliases to be removed from the user's set of aliases. Duplicate entries in the
                *          list are collapsed into single entries (the list is transformed into a set).</p>
                */
            Alias: string | undefined;
    }
    export namespace DeleteAliasRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAliasRequest) => any;
    }
    export interface DeleteAliasResponse {
    }
    export namespace DeleteAliasResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAliasResponse) => any;
    }
    export interface DeleteAvailabilityConfigurationRequest {
            /**
                * <p>The Amazon WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
                */
            DomainName: string | undefined;
    }
    export namespace DeleteAvailabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAvailabilityConfigurationRequest) => any;
    }
    export interface DeleteAvailabilityConfigurationResponse {
    }
    export namespace DeleteAvailabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAvailabilityConfigurationResponse) => any;
    }
    export interface DeleteEmailMonitoringConfigurationRequest {
            /**
                * <p>The ID of the organization from which the email monitoring configuration is deleted.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace DeleteEmailMonitoringConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailMonitoringConfigurationRequest) => any;
    }
    export interface DeleteEmailMonitoringConfigurationResponse {
    }
    export namespace DeleteEmailMonitoringConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEmailMonitoringConfigurationResponse) => any;
    }
    export interface DeleteGroupRequest {
            /**
                * <p>The organization that contains the group.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the group to be deleted.</p>
                */
            GroupId: string | undefined;
    }
    export namespace DeleteGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGroupRequest) => any;
    }
    export interface DeleteGroupResponse {
    }
    export namespace DeleteGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGroupResponse) => any;
    }
    export interface DeleteMailboxPermissionsRequest {
            /**
                * <p>The identifier of the organization under which the member (user or group)
                *          exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the member (user or group) that owns the mailbox.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The identifier of the member (user or group) for which to delete granted
                *          permissions.</p>
                */
            GranteeId: string | undefined;
    }
    export namespace DeleteMailboxPermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMailboxPermissionsRequest) => any;
    }
    export interface DeleteMailboxPermissionsResponse {
    }
    export namespace DeleteMailboxPermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMailboxPermissionsResponse) => any;
    }
    export interface DeleteMobileDeviceAccessOverrideRequest {
            /**
                * <p>The Amazon WorkMail organization for which the access override will be deleted.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The WorkMail user for which you want to delete the override. Accepts the following types of user identities:</p>
                *          <ul>
                *             <li>
                *                <p>User ID:  <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Email address: <code>user@domain.tld</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>User name: <code>user</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            UserId: string | undefined;
            /**
                * <p>The mobile device for which you delete the override. <code>DeviceId</code> is case insensitive.</p>
                */
            DeviceId: string | undefined;
    }
    export namespace DeleteMobileDeviceAccessOverrideRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMobileDeviceAccessOverrideRequest) => any;
    }
    export interface DeleteMobileDeviceAccessOverrideResponse {
    }
    export namespace DeleteMobileDeviceAccessOverrideResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMobileDeviceAccessOverrideResponse) => any;
    }
    export interface DeleteMobileDeviceAccessRuleRequest {
            /**
                * <p>The Amazon WorkMail organization under which the rule will be deleted.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the rule to be deleted.</p>
                */
            MobileDeviceAccessRuleId: string | undefined;
    }
    export namespace DeleteMobileDeviceAccessRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMobileDeviceAccessRuleRequest) => any;
    }
    export interface DeleteMobileDeviceAccessRuleResponse {
    }
    export namespace DeleteMobileDeviceAccessRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMobileDeviceAccessRuleResponse) => any;
    }
    export interface DeleteOrganizationRequest {
            /**
                * <p>The idempotency token associated with the request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>If true, deletes the AWS Directory Service directory associated with the organization.</p>
                */
            DeleteDirectory: boolean | undefined;
    }
    export namespace DeleteOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteOrganizationRequest) => any;
    }
    export interface DeleteOrganizationResponse {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId?: string;
            /**
                * <p>The state of the organization.</p>
                */
            State?: string;
    }
    export namespace DeleteOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteOrganizationResponse) => any;
    }
    export interface DeleteResourceRequest {
            /**
                * <p>The identifier associated with the organization from which the resource is
                *          deleted.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the resource to be deleted.</p>
                */
            ResourceId: string | undefined;
    }
    export namespace DeleteResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResourceRequest) => any;
    }
    export interface DeleteResourceResponse {
    }
    export namespace DeleteResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResourceResponse) => any;
    }
    export interface DeleteRetentionPolicyRequest {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The retention policy ID.</p>
                */
            Id: string | undefined;
    }
    export namespace DeleteRetentionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRetentionPolicyRequest) => any;
    }
    export interface DeleteRetentionPolicyResponse {
    }
    export namespace DeleteRetentionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRetentionPolicyResponse) => any;
    }
    export interface DeleteUserRequest {
            /**
                * <p>The organization that contains the user to be deleted.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the user to be deleted.</p>
                */
            UserId: string | undefined;
    }
    export namespace DeleteUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteUserRequest) => any;
    }
    export interface DeleteUserResponse {
    }
    export namespace DeleteUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteUserResponse) => any;
    }
    export interface DeregisterFromWorkMailRequest {
            /**
                * <p>The identifier for the organization under which the Amazon WorkMail entity exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the member (user or group) to be updated.</p>
                */
            EntityId: string | undefined;
    }
    export namespace DeregisterFromWorkMailRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeregisterFromWorkMailRequest) => any;
    }
    export interface DeregisterFromWorkMailResponse {
    }
    export namespace DeregisterFromWorkMailResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeregisterFromWorkMailResponse) => any;
    }
    export interface DeregisterMailDomainRequest {
            /**
                * <p>The Amazon WorkMail organization for which the domain will be deregistered.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain to deregister in WorkMail and SES. </p>
                */
            DomainName: string | undefined;
    }
    export namespace DeregisterMailDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeregisterMailDomainRequest) => any;
    }
    export interface DeregisterMailDomainResponse {
    }
    export namespace DeregisterMailDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeregisterMailDomainResponse) => any;
    }
    /**
        * <p>You SES configuration has customizations that Amazon WorkMail cannot save. The error message lists the invalid setting. For examples of invalid settings, refer to
        *          <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_CreateReceiptRule.html">CreateReceiptRule</a>.</p>
        */
    export class InvalidCustomSesConfigurationException extends __BaseException {
            readonly name: "InvalidCustomSesConfigurationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidCustomSesConfigurationException, __BaseException>);
    }
    /**
        * <p>The domain you're trying to change is in use by another user or organization in your account. See the error message for details.</p>
        */
    export class MailDomainInUseException extends __BaseException {
            readonly name: "MailDomainInUseException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<MailDomainInUseException, __BaseException>);
    }
    export interface DescribeEmailMonitoringConfigurationRequest {
            /**
                * <p>The ID of the organization for which the email monitoring configuration is described.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace DescribeEmailMonitoringConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEmailMonitoringConfigurationRequest) => any;
    }
    export interface DescribeEmailMonitoringConfigurationResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM Role associated with the email monitoring configuration.</p>
                */
            RoleArn?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the CloudWatch Log group associated with the email monitoring configuration.</p>
                */
            LogGroupArn?: string;
    }
    export namespace DescribeEmailMonitoringConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeEmailMonitoringConfigurationResponse) => any;
    }
    /**
        * <p>The resource cannot be found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface DescribeGroupRequest {
            /**
                * <p>The identifier for the organization under which the group exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the group to be described.</p>
                */
            GroupId: string | undefined;
    }
    export namespace DescribeGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGroupRequest) => any;
    }
    export enum EntityState {
            DELETED = "DELETED",
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    export interface DescribeGroupResponse {
            /**
                * <p>The identifier of the described group.</p>
                */
            GroupId?: string;
            /**
                * <p>The name of the described group.</p>
                */
            Name?: string;
            /**
                * <p>The email of the described group.</p>
                */
            Email?: string;
            /**
                * <p>The state of the user: enabled (registered to Amazon WorkMail) or disabled (deregistered or
                *          never registered to WorkMail).</p>
                */
            State?: EntityState | string;
            /**
                * <p>The date and time when a user was registered to WorkMail, in UNIX epoch time
                *          format.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date and time when a user was deregistered from WorkMail, in UNIX epoch time
                *          format.</p>
                */
            DisabledDate?: Date;
    }
    export namespace DescribeGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGroupResponse) => any;
    }
    export interface DescribeInboundDmarcSettingsRequest {
            /**
                * <p>Lists the ID of the given organization.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace DescribeInboundDmarcSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInboundDmarcSettingsRequest) => any;
    }
    export interface DescribeInboundDmarcSettingsResponse {
            /**
                * <p>Lists the enforcement setting of the applied policy.</p>
                */
            Enforced?: boolean;
    }
    export namespace DescribeInboundDmarcSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeInboundDmarcSettingsResponse) => any;
    }
    export interface DescribeMailboxExportJobRequest {
            /**
                * <p>The mailbox export job ID.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace DescribeMailboxExportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMailboxExportJobRequest) => any;
    }
    export enum MailboxExportJobState {
            CANCELLED = "CANCELLED",
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            RUNNING = "RUNNING"
    }
    export interface DescribeMailboxExportJobResponse {
            /**
                * <p>The identifier of the user or resource associated with the mailbox.</p>
                */
            EntityId?: string;
            /**
                * <p>The mailbox export job description.</p>
                */
            Description?: string;
            /**
                * <p>The ARN of the AWS Identity and Access Management (IAM) role that grants write permission to the Amazon Simple
                *          Storage Service (Amazon S3) bucket.</p>
                */
            RoleArn?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS)
                *          key that encrypts the exported mailbox content.</p>
                */
            KmsKeyArn?: string;
            /**
                * <p>The name of the S3 bucket.</p>
                */
            S3BucketName?: string;
            /**
                * <p>The S3 bucket prefix.</p>
                */
            S3Prefix?: string;
            /**
                * <p>The path to the S3 bucket and file that the mailbox export job is exporting
                *          to.</p>
                */
            S3Path?: string;
            /**
                * <p>The estimated progress of the mailbox export job, in percentage points.</p>
                */
            EstimatedProgress?: number;
            /**
                * <p>The state of the mailbox export job.</p>
                */
            State?: MailboxExportJobState | string;
            /**
                * <p>Error information for failed mailbox export jobs.</p>
                */
            ErrorInfo?: string;
            /**
                * <p>The mailbox export job start timestamp.</p>
                */
            StartTime?: Date;
            /**
                * <p>The mailbox export job end timestamp.</p>
                */
            EndTime?: Date;
    }
    export namespace DescribeMailboxExportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMailboxExportJobResponse) => any;
    }
    export interface DescribeOrganizationRequest {
            /**
                * <p>The identifier for the organization to be described.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace DescribeOrganizationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationRequest) => any;
    }
    export interface DescribeOrganizationResponse {
            /**
                * <p>The identifier of an organization.</p>
                */
            OrganizationId?: string;
            /**
                * <p>The alias for an organization.</p>
                */
            Alias?: string;
            /**
                * <p>The state of an organization.</p>
                */
            State?: string;
            /**
                * <p>The identifier for the directory associated with an Amazon WorkMail organization.</p>
                */
            DirectoryId?: string;
            /**
                * <p>The type of directory associated with the WorkMail organization.</p>
                */
            DirectoryType?: string;
            /**
                * <p>The default mail domain associated with the organization.</p>
                */
            DefaultMailDomain?: string;
            /**
                * <p>The date at which the organization became usable in the WorkMail context, in UNIX epoch
                *          time format.</p>
                */
            CompletedDate?: Date;
            /**
                * <p>(Optional) The error message indicating if unexpected behavior was encountered with
                *          regards to the organization.</p>
                */
            ErrorMessage?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the organization.</p>
                */
            ARN?: string;
    }
    export namespace DescribeOrganizationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeOrganizationResponse) => any;
    }
    export interface DescribeResourceRequest {
            /**
                * <p>The identifier associated with the organization for which the resource is
                *          described.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the resource to be described.</p>
                */
            ResourceId: string | undefined;
    }
    export namespace DescribeResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResourceRequest) => any;
    }
    export interface DescribeResourceResponse {
            /**
                * <p>The identifier of the described resource.</p>
                */
            ResourceId?: string;
            /**
                * <p>The email of the described resource.</p>
                */
            Email?: string;
            /**
                * <p>The name of the described resource.</p>
                */
            Name?: string;
            /**
                * <p>The type of the described resource.</p>
                */
            Type?: ResourceType | string;
            /**
                * <p>The booking options for the described resource.</p>
                */
            BookingOptions?: BookingOptions;
            /**
                * <p>The state of the resource: enabled (registered to Amazon WorkMail), disabled (deregistered
                *          or never registered to WorkMail), or deleted.</p>
                */
            State?: EntityState | string;
            /**
                * <p>The date and time when a resource was enabled for WorkMail, in UNIX epoch time
                *          format.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date and time when a resource was disabled from WorkMail, in UNIX epoch time
                *          format.</p>
                */
            DisabledDate?: Date;
    }
    export namespace DescribeResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResourceResponse) => any;
    }
    export interface DescribeUserRequest {
            /**
                * <p>The identifier for the organization under which the user exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the user to be described.</p>
                */
            UserId: string | undefined;
    }
    export namespace DescribeUserRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserRequest) => any;
    }
    export enum UserRole {
            RESOURCE = "RESOURCE",
            SYSTEM_USER = "SYSTEM_USER",
            USER = "USER"
    }
    export interface DescribeUserResponse {
            /**
                * <p>The identifier for the described user.</p>
                */
            UserId?: string;
            /**
                * <p>The name for the user.</p>
                */
            Name?: string;
            /**
                * <p>The email of the user.</p>
                */
            Email?: string;
            /**
                * <p>The display name of the user.</p>
                */
            DisplayName?: string;
            /**
                * <p>The state of a user: enabled (registered to Amazon WorkMail) or disabled (deregistered or
                *          never registered to WorkMail).</p>
                */
            State?: EntityState | string;
            /**
                * <p>In certain cases, other entities are modeled as users. If interoperability is
                *          enabled, resources are imported into Amazon WorkMail as users. Because different WorkMail
                *          organizations rely on different directory types, administrators can distinguish between an
                *          unregistered user (account is disabled and has a user role) and the directory
                *          administrators. The values are USER, RESOURCE, and SYSTEM_USER.</p>
                */
            UserRole?: UserRole | string;
            /**
                * <p>The date and time at which the user was enabled for Amazon WorkMail usage, in UNIX epoch
                *          time format.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date and time at which the user was disabled for Amazon WorkMail usage, in UNIX epoch
                *          time format.</p>
                */
            DisabledDate?: Date;
    }
    export namespace DescribeUserResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeUserResponse) => any;
    }
    export interface DisassociateDelegateFromResourceRequest {
            /**
                * <p>The identifier for the organization under which the resource exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the resource from which delegates' set members are removed.
                *       </p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The identifier for the member (user, group) to be removed from the resource's
                *          delegates.</p>
                */
            EntityId: string | undefined;
    }
    export namespace DisassociateDelegateFromResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateDelegateFromResourceRequest) => any;
    }
    export interface DisassociateDelegateFromResourceResponse {
    }
    export namespace DisassociateDelegateFromResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateDelegateFromResourceResponse) => any;
    }
    export interface DisassociateMemberFromGroupRequest {
            /**
                * <p>The identifier for the organization under which the group exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the group from which members are removed.</p>
                */
            GroupId: string | undefined;
            /**
                * <p>The identifier for the member to be removed to the group.</p>
                */
            MemberId: string | undefined;
    }
    export namespace DisassociateMemberFromGroupRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateMemberFromGroupRequest) => any;
    }
    export interface DisassociateMemberFromGroupResponse {
    }
    export namespace DisassociateMemberFromGroupResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateMemberFromGroupResponse) => any;
    }
    /**
        * <p>A DNS record uploaded to your DNS provider.</p>
        */
    export interface DnsRecord {
            /**
                * <p>The RFC 1035 record type. Possible values: <code>CNAME</code>, <code>A</code>, <code>MX</code>.</p>
                */
            Type?: string;
            /**
                * <p>The DNS hostname.- For example, <code>domain.example.com</code>.</p>
                */
            Hostname?: string;
            /**
                * <p>The value returned by the DNS for a query to that hostname and record type.</p>
                */
            Value?: string;
    }
    export namespace DnsRecord {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DnsRecord) => any;
    }
    export enum DnsRecordVerificationStatus {
            FAILED = "FAILED",
            PENDING = "PENDING",
            VERIFIED = "VERIFIED"
    }
    /**
        * <p>The user, group, or resource that you're trying to register is already
        *          registered.</p>
        */
    export class EntityAlreadyRegisteredException extends __BaseException {
            readonly name: "EntityAlreadyRegisteredException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<EntityAlreadyRegisteredException, __BaseException>);
    }
    export enum RetentionAction {
            DELETE = "DELETE",
            NONE = "NONE",
            PERMANENTLY_DELETE = "PERMANENTLY_DELETE"
    }
    export enum FolderName {
            DELETED_ITEMS = "DELETED_ITEMS",
            DRAFTS = "DRAFTS",
            INBOX = "INBOX",
            JUNK_EMAIL = "JUNK_EMAIL",
            SENT_ITEMS = "SENT_ITEMS"
    }
    /**
        * <p>The configuration applied to an organization's folders by its retention
        *          policy.</p>
        */
    export interface FolderConfiguration {
            /**
                * <p>The folder name.</p>
                */
            Name: FolderName | string | undefined;
            /**
                * <p>The action to take on the folder contents at the end of the folder configuration
                *          period.</p>
                */
            Action: RetentionAction | string | undefined;
            /**
                * <p>The number of days for which the folder-configuration action applies.</p>
                */
            Period?: number;
    }
    export namespace FolderConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FolderConfiguration) => any;
    }
    export interface GetAccessControlEffectRequest {
            /**
                * <p>The identifier for the organization.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The IPv4 address.</p>
                */
            IpAddress: string | undefined;
            /**
                * <p>The access protocol action. Valid values include <code>ActiveSync</code>,
                *             <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>,
                *             <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
                */
            Action: string | undefined;
            /**
                * <p>The user ID.</p>
                */
            UserId: string | undefined;
    }
    export namespace GetAccessControlEffectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessControlEffectRequest) => any;
    }
    export interface GetAccessControlEffectResponse {
            /**
                * <p>The rule effect.</p>
                */
            Effect?: AccessControlRuleEffect | string;
            /**
                * <p>The rules that match the given parameters, resulting in an effect.</p>
                */
            MatchedRules?: string[];
    }
    export namespace GetAccessControlEffectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessControlEffectResponse) => any;
    }
    export interface GetDefaultRetentionPolicyRequest {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace GetDefaultRetentionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDefaultRetentionPolicyRequest) => any;
    }
    export interface GetDefaultRetentionPolicyResponse {
            /**
                * <p>The retention policy ID.</p>
                */
            Id?: string;
            /**
                * <p>The retention policy name.</p>
                */
            Name?: string;
            /**
                * <p>The retention policy description.</p>
                */
            Description?: string;
            /**
                * <p>The retention policy folder configurations.</p>
                */
            FolderConfigurations?: FolderConfiguration[];
    }
    export namespace GetDefaultRetentionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetDefaultRetentionPolicyResponse) => any;
    }
    export interface GetMailboxDetailsRequest {
            /**
                * <p>The identifier for the organization that contains the user whose mailbox details are
                *          being requested.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the user whose mailbox details are being requested.</p>
                */
            UserId: string | undefined;
    }
    export namespace GetMailboxDetailsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMailboxDetailsRequest) => any;
    }
    export interface GetMailboxDetailsResponse {
            /**
                * <p>The maximum allowed mailbox size, in MB, for the specified user.</p>
                */
            MailboxQuota?: number;
            /**
                * <p>The current mailbox size, in MB, for the specified user.</p>
                */
            MailboxSize?: number;
    }
    export namespace GetMailboxDetailsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMailboxDetailsResponse) => any;
    }
    export interface GetMailDomainRequest {
            /**
                * <p>The Amazon WorkMail organization for which the domain is retrieved.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain from which you want to retrieve details.</p>
                */
            DomainName: string | undefined;
    }
    export namespace GetMailDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMailDomainRequest) => any;
    }
    export interface GetMailDomainResponse {
            /**
                * <p>A list of the DNS records that Amazon WorkMail recommends adding in your DNS provider for the best user experience. The records configure your domain with DMARC, SPF, DKIM, and direct incoming
                *          email traffic to SES. See admin guide for more details.</p>
                */
            Records?: DnsRecord[];
            /**
                * <p>Specifies whether the domain is a test domain provided by WorkMail, or a custom domain.</p>
                */
            IsTestDomain?: boolean;
            /**
                * <p>Specifies whether the domain is the default domain for your organization.</p>
                */
            IsDefault?: boolean;
            /**
                * <p> Indicates the status of the domain ownership verification.</p>
                */
            OwnershipVerificationStatus?: DnsRecordVerificationStatus | string;
            /**
                * <p>Indicates the status of a DKIM verification.</p>
                */
            DkimVerificationStatus?: DnsRecordVerificationStatus | string;
    }
    export namespace GetMailDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMailDomainResponse) => any;
    }
    export interface GetMobileDeviceAccessEffectRequest {
            /**
                * <p>The Amazon WorkMail organization to simulate the access effect for.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>Device type the simulated user will report.</p>
                */
            DeviceType?: string;
            /**
                * <p>Device model the simulated user will report.</p>
                */
            DeviceModel?: string;
            /**
                * <p>Device operating system the simulated user will report.</p>
                */
            DeviceOperatingSystem?: string;
            /**
                * <p>Device user agent the simulated user will report.</p>
                */
            DeviceUserAgent?: string;
    }
    export namespace GetMobileDeviceAccessEffectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMobileDeviceAccessEffectRequest) => any;
    }
    /**
        * <p>The rule that a simulated user matches.</p>
        */
    export interface MobileDeviceAccessMatchedRule {
            /**
                * <p>Identifier of the rule that a simulated user matches.</p>
                */
            MobileDeviceAccessRuleId?: string;
            /**
                * <p>Name of a rule that a simulated user matches.</p>
                */
            Name?: string;
    }
    export namespace MobileDeviceAccessMatchedRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MobileDeviceAccessMatchedRule) => any;
    }
    export interface GetMobileDeviceAccessEffectResponse {
            /**
                * <p>The effect of the simulated access, <code>ALLOW</code> or <code>DENY</code>, after evaluating mobile device access rules in the Amazon WorkMail organization for the simulated
                *          user parameters.</p>
                */
            Effect?: MobileDeviceAccessRuleEffect | string;
            /**
                * <p>A list of the rules which matched the simulated user input and produced the effect.</p>
                */
            MatchedRules?: MobileDeviceAccessMatchedRule[];
    }
    export namespace GetMobileDeviceAccessEffectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMobileDeviceAccessEffectResponse) => any;
    }
    export interface GetMobileDeviceAccessOverrideRequest {
            /**
                * <p>The Amazon WorkMail organization to which you want to apply the override.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>Identifies the WorkMail user for the override. Accepts the following types of user identities: </p>
                *          <ul>
                *             <li>
                *                <p>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Email address: <code>user@domain.tld</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>User name: <code>user</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            UserId: string | undefined;
            /**
                * <p>The mobile device to which the override applies. <code>DeviceId</code> is case insensitive.</p>
                */
            DeviceId: string | undefined;
    }
    export namespace GetMobileDeviceAccessOverrideRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMobileDeviceAccessOverrideRequest) => any;
    }
    export interface GetMobileDeviceAccessOverrideResponse {
            /**
                * <p>The WorkMail user to which the access override applies.</p>
                */
            UserId?: string;
            /**
                * <p>The device to which the access override applies.</p>
                */
            DeviceId?: string;
            /**
                * <p>The effect of the override, <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect?: MobileDeviceAccessRuleEffect | string;
            /**
                * <p>A description of the override.</p>
                */
            Description?: string;
            /**
                * <p>The date the override was first created.</p>
                */
            DateCreated?: Date;
            /**
                * <p>The date the description was last modified.</p>
                */
            DateModified?: Date;
    }
    export namespace GetMobileDeviceAccessOverrideResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMobileDeviceAccessOverrideResponse) => any;
    }
    /**
        * <p>The representation of an Amazon WorkMail group.</p>
        */
    export interface Group {
            /**
                * <p>The identifier of the group.</p>
                */
            Id?: string;
            /**
                * <p>The email of the group.</p>
                */
            Email?: string;
            /**
                * <p>The name of the group.</p>
                */
            Name?: string;
            /**
                * <p>The state of the group, which can be ENABLED, DISABLED, or DELETED.</p>
                */
            State?: EntityState | string;
            /**
                * <p>The date indicating when the group was enabled for Amazon WorkMail use.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date indicating when the group was disabled from Amazon WorkMail use.</p>
                */
            DisabledDate?: Date;
    }
    export namespace Group {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Group) => any;
    }
    /**
        * <p>The configuration for a resource isn't valid. A resource must either be able to
        *          auto-respond to requests or have at least one delegate associated that can do so on its
        *          behalf.</p>
        */
    export class InvalidConfigurationException extends __BaseException {
            readonly name: "InvalidConfigurationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidConfigurationException, __BaseException>);
    }
    /**
        * <p>The details of a mailbox export job, including the user or resource ID associated
        *          with the mailbox and the S3 bucket that the mailbox contents are exported to.</p>
        */
    export interface MailboxExportJob {
            /**
                * <p>The identifier of the mailbox export job.</p>
                */
            JobId?: string;
            /**
                * <p>The identifier of the user or resource associated with the mailbox.</p>
                */
            EntityId?: string;
            /**
                * <p>The mailbox export job description.</p>
                */
            Description?: string;
            /**
                * <p>The name of the S3 bucket.</p>
                */
            S3BucketName?: string;
            /**
                * <p>The path to the S3 bucket and file that the mailbox export job exports to.</p>
                */
            S3Path?: string;
            /**
                * <p>The estimated progress of the mailbox export job, in percentage points.</p>
                */
            EstimatedProgress?: number;
            /**
                * <p>The state of the mailbox export job.</p>
                */
            State?: MailboxExportJobState | string;
            /**
                * <p>The mailbox export job start timestamp.</p>
                */
            StartTime?: Date;
            /**
                * <p>The mailbox export job end timestamp.</p>
                */
            EndTime?: Date;
    }
    export namespace MailboxExportJob {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MailboxExportJob) => any;
    }
    export interface ListAccessControlRulesRequest {
            /**
                * <p>The identifier for the organization.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace ListAccessControlRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessControlRulesRequest) => any;
    }
    export interface ListAccessControlRulesResponse {
            /**
                * <p>The access control rules.</p>
                */
            Rules?: AccessControlRule[];
    }
    export namespace ListAccessControlRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessControlRulesResponse) => any;
    }
    export interface ListAliasesRequest {
            /**
                * <p>The identifier for the organization under which the entity exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the entity for which to list the aliases.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAliasesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAliasesRequest) => any;
    }
    export interface ListAliasesResponse {
            /**
                * <p>The entity's paginated aliases.</p>
                */
            Aliases?: string[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is "null" when there
                *          are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListAliasesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAliasesResponse) => any;
    }
    export interface ListAvailabilityConfigurationsRequest {
            /**
                * <p>The Amazon WorkMail organization for which the <code>AvailabilityConfiguration</code>'s will be
                *          listed.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not require a token.</p>
                */
            NextToken?: string;
    }
    export namespace ListAvailabilityConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAvailabilityConfigurationsRequest) => any;
    }
    export interface ListAvailabilityConfigurationsResponse {
            /**
                * <p>The list of <code>AvailabilityConfiguration</code>'s that exist for the specified Amazon WorkMail organization.</p>
                */
            AvailabilityConfigurations?: AvailabilityConfiguration[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is <code>null</code> when there are no further results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListAvailabilityConfigurationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAvailabilityConfigurationsResponse) => any;
    }
    export interface ListGroupMembersRequest {
            /**
                * <p>The identifier for the organization under which the group exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the group to which the members (users or groups) are
                *          associated.</p>
                */
            GroupId: string | undefined;
            /**
                * <p> The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListGroupMembersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupMembersRequest) => any;
    }
    /**
        * <p>The representation of a user or group.</p>
        */
    export interface Member {
            /**
                * <p>The identifier of the member.</p>
                */
            Id?: string;
            /**
                * <p>The name of the member.</p>
                */
            Name?: string;
            /**
                * <p>A member can be a user or group.</p>
                */
            Type?: MemberType | string;
            /**
                * <p>The state of the member, which can be ENABLED, DISABLED, or DELETED.</p>
                */
            State?: EntityState | string;
            /**
                * <p>The date indicating when the member was enabled for Amazon WorkMail use.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date indicating when the member was disabled from Amazon WorkMail use.</p>
                */
            DisabledDate?: Date;
    }
    export namespace Member {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Member) => any;
    }
    export interface ListGroupMembersResponse {
            /**
                * <p>The members associated to the group.</p>
                */
            Members?: Member[];
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
    }
    export namespace ListGroupMembersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupMembersResponse) => any;
    }
    export interface ListGroupsRequest {
            /**
                * <p>The identifier for the organization under which the groups exist.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListGroupsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupsRequest) => any;
    }
    export interface ListGroupsResponse {
            /**
                * <p>The overview of groups for an organization.</p>
                */
            Groups?: Group[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is "null" when there
                *          are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListGroupsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGroupsResponse) => any;
    }
    export interface ListMailboxExportJobsRequest {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMailboxExportJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailboxExportJobsRequest) => any;
    }
    export interface ListMailboxExportJobsResponse {
            /**
                * <p>The mailbox export job details.</p>
                */
            Jobs?: MailboxExportJob[];
            /**
                * <p>The token to use to retrieve the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListMailboxExportJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailboxExportJobsResponse) => any;
    }
    export interface ListMailboxPermissionsRequest {
            /**
                * <p>The identifier of the organization under which the user, group, or resource
                *          exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the user, group, or resource for which to list mailbox
                *          permissions.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMailboxPermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailboxPermissionsRequest) => any;
    }
    export enum PermissionType {
            FULL_ACCESS = "FULL_ACCESS",
            SEND_AS = "SEND_AS",
            SEND_ON_BEHALF = "SEND_ON_BEHALF"
    }
    /**
        * <p>Permission granted to a user, group, or resource to access a certain aspect of
        *          another user, group, or resource mailbox.</p>
        */
    export interface Permission {
            /**
                * <p>The identifier of the user, group, or resource to which the permissions are
                *          granted.</p>
                */
            GranteeId: string | undefined;
            /**
                * <p>The type of user, group, or resource referred to in GranteeId.</p>
                */
            GranteeType: MemberType | string | undefined;
            /**
                * <p>The permissions granted to the grantee. SEND_AS allows the grantee to send email as
                *          the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF
                *          allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not
                *          mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full
                *          access to the mailbox, irrespective of other folder-level permissions set on the
                *          mailbox.</p>
                */
            PermissionValues: (PermissionType | string)[] | undefined;
    }
    export namespace Permission {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Permission) => any;
    }
    export interface ListMailboxPermissionsResponse {
            /**
                * <p>One page of the user, group, or resource mailbox permissions.</p>
                */
            Permissions?: Permission[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is "null" when there
                *          are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListMailboxPermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailboxPermissionsResponse) => any;
    }
    export interface ListMailDomainsRequest {
            /**
                * <p>The Amazon WorkMail organization for which to list domains.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not require a token.</p>
                */
            NextToken?: string;
    }
    export namespace ListMailDomainsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailDomainsRequest) => any;
    }
    /**
        * <p>The data for a given domain.</p>
        */
    export interface MailDomainSummary {
            /**
                * <p>The domain name.</p>
                */
            DomainName?: string;
            /**
                * <p>Whether the domain is default or not.</p>
                */
            DefaultDomain?: boolean;
    }
    export namespace MailDomainSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MailDomainSummary) => any;
    }
    export interface ListMailDomainsResponse {
            /**
                * <p>The list of mail domain summaries, specifying domains that exist in the specified Amazon WorkMail  organization, along with the information about whether the domain is or isn't the default.</p>
                */
            MailDomains?: MailDomainSummary[];
            /**
                * <p>The token to use to retrieve the next page of results. The value becomes <code>null</code> when there are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListMailDomainsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMailDomainsResponse) => any;
    }
    export interface ListMobileDeviceAccessOverridesRequest {
            /**
                * <p>The Amazon WorkMail organization under which to list mobile device access overrides.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The WorkMail user under which you list the mobile device access overrides. Accepts the following types of user identities:</p>
                *          <ul>
                *             <li>
                *                <p>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Email address: <code>user@domain.tld</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>User name: <code>user</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            UserId?: string;
            /**
                * <p>The mobile device to which the access override applies.</p>
                */
            DeviceId?: string;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not require a token.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMobileDeviceAccessOverridesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMobileDeviceAccessOverridesRequest) => any;
    }
    /**
        * <p>The override object.</p>
        */
    export interface MobileDeviceAccessOverride {
            /**
                * <p>The WorkMail user to which the access override applies.</p>
                */
            UserId?: string;
            /**
                * <p>The device to which the override applies.</p>
                */
            DeviceId?: string;
            /**
                * <p>The effect of the override, <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect?: MobileDeviceAccessRuleEffect | string;
            /**
                * <p>A description of the override.</p>
                */
            Description?: string;
            /**
                * <p>The date the override was first created.</p>
                */
            DateCreated?: Date;
            /**
                * <p>The date the override was last modified.</p>
                */
            DateModified?: Date;
    }
    export namespace MobileDeviceAccessOverride {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MobileDeviceAccessOverride) => any;
    }
    export interface ListMobileDeviceAccessOverridesResponse {
            /**
                * <p>The list of mobile device access overrides that exist for the specified Amazon WorkMail organization and user.</p>
                */
            Overrides?: MobileDeviceAccessOverride[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is “null” when there are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListMobileDeviceAccessOverridesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMobileDeviceAccessOverridesResponse) => any;
    }
    export interface ListMobileDeviceAccessRulesRequest {
            /**
                * <p>The Amazon WorkMail organization for which to list the rules.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace ListMobileDeviceAccessRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMobileDeviceAccessRulesRequest) => any;
    }
    /**
        * <p>A rule that controls access to mobile devices for an Amazon WorkMail group.</p>
        */
    export interface MobileDeviceAccessRule {
            /**
                * <p>The ID assigned to a mobile access rule. </p>
                */
            MobileDeviceAccessRuleId?: string;
            /**
                * <p>The name of a mobile access rule.</p>
                */
            Name?: string;
            /**
                * <p>The description of a mobile access rule.</p>
                */
            Description?: string;
            /**
                * <p>The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect?: MobileDeviceAccessRuleEffect | string;
            /**
                * <p>Device types that a rule will match. </p>
                */
            DeviceTypes?: string[];
            /**
                * <p>Device types that a rule <b>will not</b> match. All other device types will match.</p>
                */
            NotDeviceTypes?: string[];
            /**
                * <p>Device models that a rule will match.</p>
                */
            DeviceModels?: string[];
            /**
                * <p>Device models that a rule <b>will not</b> match. All other device models will match.</p>
                */
            NotDeviceModels?: string[];
            /**
                * <p>Device operating systems that a rule will match.</p>
                */
            DeviceOperatingSystems?: string[];
            /**
                * <p>Device operating systems that a rule <b>will not</b> match. All other device types will match.</p>
                */
            NotDeviceOperatingSystems?: string[];
            /**
                * <p>Device user agents that a rule will match.</p>
                */
            DeviceUserAgents?: string[];
            /**
                * <p>Device user agents that a rule <b>will not</b> match. All other device user agents will match.</p>
                */
            NotDeviceUserAgents?: string[];
            /**
                * <p>The date and time at which an access rule was created.</p>
                */
            DateCreated?: Date;
            /**
                * <p>The date and time at which an access rule was modified.</p>
                */
            DateModified?: Date;
    }
    export namespace MobileDeviceAccessRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MobileDeviceAccessRule) => any;
    }
    export interface ListMobileDeviceAccessRulesResponse {
            /**
                * <p>The list of mobile device access rules that exist under the specified Amazon WorkMail organization.</p>
                */
            Rules?: MobileDeviceAccessRule[];
    }
    export namespace ListMobileDeviceAccessRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMobileDeviceAccessRulesResponse) => any;
    }
    export interface ListOrganizationsRequest {
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListOrganizationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationsRequest) => any;
    }
    /**
        * <p>The representation of an organization.</p>
        */
    export interface OrganizationSummary {
            /**
                * <p>The identifier associated with the organization.</p>
                */
            OrganizationId?: string;
            /**
                * <p>The alias associated with the organization.</p>
                */
            Alias?: string;
            /**
                * <p>The default email domain associated with the organization.</p>
                */
            DefaultMailDomain?: string;
            /**
                * <p>The error message associated with the organization. It is only present if unexpected
                *          behavior has occurred with regards to the organization. It provides insight or solutions
                *          regarding unexpected behavior.</p>
                */
            ErrorMessage?: string;
            /**
                * <p>The state associated with the organization.</p>
                */
            State?: string;
    }
    export namespace OrganizationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: OrganizationSummary) => any;
    }
    export interface ListOrganizationsResponse {
            /**
                * <p>The overview of owned organizations presented as a list of organization
                *          summaries.</p>
                */
            OrganizationSummaries?: OrganizationSummary[];
            /**
                * <p>The token to use to retrieve the next page of results. The value is "null" when there
                *          are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListOrganizationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListOrganizationsResponse) => any;
    }
    export interface ListResourceDelegatesRequest {
            /**
                * <p>The identifier for the organization that contains the resource for which delegates
                *          are listed.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the resource whose delegates are listed.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The token used to paginate through the delegates associated with a
                *          resource.</p>
                */
            NextToken?: string;
            /**
                * <p>The number of maximum results in a page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListResourceDelegatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceDelegatesRequest) => any;
    }
    export interface ListResourceDelegatesResponse {
            /**
                * <p>One page of the resource's delegates.</p>
                */
            Delegates?: Delegate[];
            /**
                * <p>The token used to paginate through the delegates associated with a resource. While
                *          results are still available, it has an associated value. When the last page is reached, the
                *          token is empty. </p>
                */
            NextToken?: string;
    }
    export namespace ListResourceDelegatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourceDelegatesResponse) => any;
    }
    export interface ListResourcesRequest {
            /**
                * <p>The identifier for the organization under which the resources exist.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesRequest) => any;
    }
    /**
        * <p>The representation of a resource.</p>
        */
    export interface Resource {
            /**
                * <p>The identifier of the resource.</p>
                */
            Id?: string;
            /**
                * <p>The email of the resource.</p>
                */
            Email?: string;
            /**
                * <p>The name of the resource.</p>
                */
            Name?: string;
            /**
                * <p>The type of the resource: equipment or room.</p>
                */
            Type?: ResourceType | string;
            /**
                * <p>The state of the resource, which can be ENABLED, DISABLED, or DELETED.</p>
                */
            State?: EntityState | string;
            /**
                * <p>The date indicating when the resource was enabled for Amazon WorkMail use.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date indicating when the resource was disabled from Amazon WorkMail use.</p>
                */
            DisabledDate?: Date;
    }
    export namespace Resource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Resource) => any;
    }
    export interface ListResourcesResponse {
            /**
                * <p>One page of the organization's resource representation.</p>
                */
            Resources?: Resource[];
            /**
                * <p> The token used to paginate through all the organization's resources. While results
                *          are still available, it has an associated value. When the last page is reached, the token
                *          is empty.</p>
                */
            NextToken?: string;
    }
    export namespace ListResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResourcesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    /**
        * <p>Describes a tag applied to a resource.</p>
        */
    export interface Tag {
            /**
                * <p>The key of the tag.</p>
                */
            Key: string | undefined;
            /**
                * <p>The value of the tag.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>A list of tag key-value pairs.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListUsersRequest {
            /**
                * <p>The identifier for the organization under which the users exist.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The token to use to retrieve the next page of results. The first call does not
                *          contain any tokens.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to return in a single call.</p>
                */
            MaxResults?: number;
    }
    export namespace ListUsersRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersRequest) => any;
    }
    /**
        * <p>The representation of an Amazon WorkMail user.</p>
        */
    export interface User {
            /**
                * <p>The identifier of the user.</p>
                */
            Id?: string;
            /**
                * <p>The email of the user.</p>
                */
            Email?: string;
            /**
                * <p>The name of the user.</p>
                */
            Name?: string;
            /**
                * <p>The display name of the user.</p>
                */
            DisplayName?: string;
            /**
                * <p>The state of the user, which can be ENABLED, DISABLED, or DELETED.</p>
                */
            State?: EntityState | string;
            /**
                * <p>The role of the user.</p>
                */
            UserRole?: UserRole | string;
            /**
                * <p>The date indicating when the user was enabled for Amazon WorkMail use.</p>
                */
            EnabledDate?: Date;
            /**
                * <p>The date indicating when the user was disabled from Amazon WorkMail use.</p>
                */
            DisabledDate?: Date;
    }
    export namespace User {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: User) => any;
    }
    export interface ListUsersResponse {
            /**
                * <p>The overview of users for an organization.</p>
                */
            Users?: User[];
            /**
                * <p> The token to use to retrieve the next page of results. This value is `null` when
                *          there are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListUsersResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUsersResponse) => any;
    }
    export interface PutAccessControlRuleRequest {
            /**
                * <p>The rule name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The rule effect.</p>
                */
            Effect: AccessControlRuleEffect | string | undefined;
            /**
                * <p>The rule description.</p>
                */
            Description: string | undefined;
            /**
                * <p>IPv4 CIDR ranges to include in the rule.</p>
                */
            IpRanges?: string[];
            /**
                * <p>IPv4 CIDR ranges to exclude from the rule.</p>
                */
            NotIpRanges?: string[];
            /**
                * <p>Access protocol actions to include in the rule. Valid values include
                *             <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>,
                *             <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
                */
            Actions?: string[];
            /**
                * <p>Access protocol actions to exclude from the rule. Valid values include
                *             <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>,
                *             <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
                */
            NotActions?: string[];
            /**
                * <p>User IDs to include in the rule.</p>
                */
            UserIds?: string[];
            /**
                * <p>User IDs to exclude from the rule.</p>
                */
            NotUserIds?: string[];
            /**
                * <p>The identifier of the organization.</p>
                */
            OrganizationId: string | undefined;
    }
    export namespace PutAccessControlRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccessControlRuleRequest) => any;
    }
    export interface PutAccessControlRuleResponse {
    }
    export namespace PutAccessControlRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccessControlRuleResponse) => any;
    }
    export interface PutEmailMonitoringConfigurationRequest {
            /**
                * <p>The ID of the organization for which the email monitoring configuration is set.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the IAM Role associated with the email monitoring configuration.</p>
                */
            RoleArn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the CloudWatch Log group associated with the email monitoring configuration.</p>
                */
            LogGroupArn: string | undefined;
    }
    export namespace PutEmailMonitoringConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailMonitoringConfigurationRequest) => any;
    }
    export interface PutEmailMonitoringConfigurationResponse {
    }
    export namespace PutEmailMonitoringConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutEmailMonitoringConfigurationResponse) => any;
    }
    export interface PutInboundDmarcSettingsRequest {
            /**
                * <p>The ID of the organization that you are applying the DMARC policy to. </p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>Enforces or suspends a policy after it's applied.</p>
                */
            Enforced: boolean | undefined;
    }
    export namespace PutInboundDmarcSettingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutInboundDmarcSettingsRequest) => any;
    }
    export interface PutInboundDmarcSettingsResponse {
    }
    export namespace PutInboundDmarcSettingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutInboundDmarcSettingsResponse) => any;
    }
    export interface PutMailboxPermissionsRequest {
            /**
                * <p>The identifier of the organization under which the user, group, or resource
                *          exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the user, group, or resource for which to update mailbox
                *          permissions.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The identifier of the user, group, or resource to which to grant the
                *          permissions.</p>
                */
            GranteeId: string | undefined;
            /**
                * <p>The permissions granted to the grantee. SEND_AS allows the grantee to send email as
                *          the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF
                *          allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not
                *          mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full
                *          access to the mailbox, irrespective of other folder-level permissions set on the
                *          mailbox.</p>
                */
            PermissionValues: (PermissionType | string)[] | undefined;
    }
    export namespace PutMailboxPermissionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMailboxPermissionsRequest) => any;
    }
    export interface PutMailboxPermissionsResponse {
    }
    export namespace PutMailboxPermissionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMailboxPermissionsResponse) => any;
    }
    export interface PutMobileDeviceAccessOverrideRequest {
            /**
                * <p>Identifies the Amazon WorkMail organization for which you create the override.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The WorkMail user for which you create the override. Accepts the following types of user identities:</p>
                *          <ul>
                *             <li>
                *                <p>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>Email address: <code>user@domain.tld</code>
                *                </p>
                *             </li>
                *             <li>
                *                <p>User name: <code>user</code>
                *                </p>
                *             </li>
                *          </ul>
                */
            UserId: string | undefined;
            /**
                * <p>The mobile device for which you create the override. <code>DeviceId</code> is case insensitive.</p>
                */
            DeviceId: string | undefined;
            /**
                * <p>The effect of the override, <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect: MobileDeviceAccessRuleEffect | string | undefined;
            /**
                * <p>A description of the override.</p>
                */
            Description?: string;
    }
    export namespace PutMobileDeviceAccessOverrideRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMobileDeviceAccessOverrideRequest) => any;
    }
    export interface PutMobileDeviceAccessOverrideResponse {
    }
    export namespace PutMobileDeviceAccessOverrideResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMobileDeviceAccessOverrideResponse) => any;
    }
    export interface PutRetentionPolicyRequest {
            /**
                * <p>The organization ID.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The retention policy ID.</p>
                */
            Id?: string;
            /**
                * <p>The retention policy name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The retention policy description.</p>
                */
            Description?: string;
            /**
                * <p>The retention policy folder configurations.</p>
                */
            FolderConfigurations: FolderConfiguration[] | undefined;
    }
    export namespace PutRetentionPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRetentionPolicyRequest) => any;
    }
    export interface PutRetentionPolicyResponse {
    }
    export namespace PutRetentionPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutRetentionPolicyResponse) => any;
    }
    export interface RegisterMailDomainRequest {
            /**
                * <p>Idempotency token used when retrying requests.</p>
                */
            ClientToken?: string;
            /**
                * <p>The Amazon WorkMail organization under which you're creating the domain.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The name of the mail domain to create in Amazon WorkMail and SES.</p>
                */
            DomainName: string | undefined;
    }
    export namespace RegisterMailDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterMailDomainRequest) => any;
    }
    export interface RegisterMailDomainResponse {
    }
    export namespace RegisterMailDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterMailDomainResponse) => any;
    }
    export interface RegisterToWorkMailRequest {
            /**
                * <p>The identifier for the organization under which the user, group, or resource
                *          exists.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier for the user, group, or resource to be updated.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The email for the user, group, or resource to be updated.</p>
                */
            Email: string | undefined;
    }
    export namespace RegisterToWorkMailRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterToWorkMailRequest) => any;
    }
    export interface RegisterToWorkMailResponse {
    }
    export namespace RegisterToWorkMailResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegisterToWorkMailResponse) => any;
    }
    export interface ResetPasswordRequest {
            /**
                * <p>The identifier of the organization that contains the user for which the password is
                *          reset.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the user for whom the password is reset.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The new password for the user.</p>
                */
            Password: string | undefined;
    }
    export namespace ResetPasswordRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResetPasswordRequest) => any;
    }
    export interface ResetPasswordResponse {
    }
    export namespace ResetPasswordResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResetPasswordResponse) => any;
    }
    export interface StartMailboxExportJobRequest {
            /**
                * <p>The idempotency token for the client request.</p>
                */
            ClientToken?: string;
            /**
                * <p>The identifier associated with the organization.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the user or resource associated with the mailbox.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The mailbox export job description.</p>
                */
            Description?: string;
            /**
                * <p>The ARN of the AWS Identity and Access Management (IAM) role that grants write permission to the S3
                *          bucket.</p>
                */
            RoleArn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS)
                *          key that encrypts the exported mailbox content.</p>
                */
            KmsKeyArn: string | undefined;
            /**
                * <p>The name of the S3 bucket.</p>
                */
            S3BucketName: string | undefined;
            /**
                * <p>The S3 bucket prefix.</p>
                */
            S3Prefix: string | undefined;
    }
    export namespace StartMailboxExportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMailboxExportJobRequest) => any;
    }
    export interface StartMailboxExportJobResponse {
            /**
                * <p>The job ID.</p>
                */
            JobId?: string;
    }
    export namespace StartMailboxExportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartMailboxExportJobResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>The tag key-value pairs.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    /**
        * <p>The resource can have up to 50 user-applied tags.</p>
        */
    export class TooManyTagsException extends __BaseException {
            readonly name: "TooManyTagsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
    }
    export interface TestAvailabilityConfigurationRequest {
            /**
                * <p>The Amazon WorkMail organization where the availability provider will be tested.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain to which the provider applies. If this field is provided, a stored availability provider associated to this domain name will be tested.</p>
                */
            DomainName?: string;
            /**
                * <p>Describes an EWS based availability provider. This is only used as input to the service.</p>
                */
            EwsProvider?: EwsAvailabilityProvider;
            /**
                * <p>Describes a Lambda based availability provider.</p>
                */
            LambdaProvider?: LambdaAvailabilityProvider;
    }
    export namespace TestAvailabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestAvailabilityConfigurationRequest) => any;
    }
    export interface TestAvailabilityConfigurationResponse {
            /**
                * <p>Boolean indicating whether the test passed or failed.</p>
                */
            TestPassed?: boolean;
            /**
                * <p>String containing the reason for a failed test if <code>TestPassed</code> is false.</p>
                */
            FailureReason?: string;
    }
    export namespace TestAvailabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestAvailabilityConfigurationResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The resource ARN.</p>
                */
            ResourceARN: string | undefined;
            /**
                * <p>The tag keys.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateAvailabilityConfigurationRequest {
            /**
                * <p>The Amazon WorkMail organization for which the <code>AvailabilityConfiguration</code> will be
                *          updated.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain to which the provider applies the availability configuration.</p>
                */
            DomainName: string | undefined;
            /**
                * <p>The EWS availability provider definition. The request must contain exactly one provider
                *          definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>. The previously
                *          stored provider will be overridden by the one provided.</p>
                */
            EwsProvider?: EwsAvailabilityProvider;
            /**
                * <p>The Lambda availability provider definition. The request must contain exactly one
                *          provider definition, either <code>EwsProvider</code> or <code>LambdaProvider</code>. The
                *          previously stored provider will be overridden by the one provided.</p>
                */
            LambdaProvider?: LambdaAvailabilityProvider;
    }
    export namespace UpdateAvailabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAvailabilityConfigurationRequest) => any;
    }
    export interface UpdateAvailabilityConfigurationResponse {
    }
    export namespace UpdateAvailabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAvailabilityConfigurationResponse) => any;
    }
    export interface UpdateDefaultMailDomainRequest {
            /**
                * <p>The Amazon WorkMail organization for which to list domains.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The domain name that will become the default domain.</p>
                */
            DomainName: string | undefined;
    }
    export namespace UpdateDefaultMailDomainRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDefaultMailDomainRequest) => any;
    }
    export interface UpdateDefaultMailDomainResponse {
    }
    export namespace UpdateDefaultMailDomainResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDefaultMailDomainResponse) => any;
    }
    export interface UpdateMailboxQuotaRequest {
            /**
                * <p>The identifier for the organization that contains the user for whom to update the
                *          mailbox quota.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifer for the user for whom to update the mailbox quota.</p>
                */
            UserId: string | undefined;
            /**
                * <p>The updated mailbox quota, in MB, for the specified user.</p>
                */
            MailboxQuota: number | undefined;
    }
    export namespace UpdateMailboxQuotaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMailboxQuotaRequest) => any;
    }
    export interface UpdateMailboxQuotaResponse {
    }
    export namespace UpdateMailboxQuotaResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMailboxQuotaResponse) => any;
    }
    export interface UpdateMobileDeviceAccessRuleRequest {
            /**
                * <p>The Amazon WorkMail organization under which the rule will be updated.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the rule to be updated.</p>
                */
            MobileDeviceAccessRuleId: string | undefined;
            /**
                * <p>The updated rule name.</p>
                */
            Name: string | undefined;
            /**
                * <p>The updated rule description.</p>
                */
            Description?: string;
            /**
                * <p>The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.</p>
                */
            Effect: MobileDeviceAccessRuleEffect | string | undefined;
            /**
                * <p>Device types that the updated rule will match.</p>
                */
            DeviceTypes?: string[];
            /**
                * <p>Device types that the updated rule <b>will not</b> match. All other device types will match.</p>
                */
            NotDeviceTypes?: string[];
            /**
                * <p>Device models that the updated rule will match.</p>
                */
            DeviceModels?: string[];
            /**
                * <p>Device models that the updated rule <b>will not</b> match. All other device models will match.</p>
                */
            NotDeviceModels?: string[];
            /**
                * <p>Device operating systems that the updated rule will match.</p>
                */
            DeviceOperatingSystems?: string[];
            /**
                * <p>Device operating systems that the updated rule <b>will not</b> match. All other device operating systems will match.</p>
                */
            NotDeviceOperatingSystems?: string[];
            /**
                * <p>User agents that the updated rule will match.</p>
                */
            DeviceUserAgents?: string[];
            /**
                * <p>User agents that the updated rule <b>will not</b> match. All other user agents will match.</p>
                */
            NotDeviceUserAgents?: string[];
    }
    export namespace UpdateMobileDeviceAccessRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMobileDeviceAccessRuleRequest) => any;
    }
    export interface UpdateMobileDeviceAccessRuleResponse {
    }
    export namespace UpdateMobileDeviceAccessRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateMobileDeviceAccessRuleResponse) => any;
    }
    export interface UpdatePrimaryEmailAddressRequest {
            /**
                * <p>The organization that contains the user, group, or resource to update.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The user, group, or resource to update.</p>
                */
            EntityId: string | undefined;
            /**
                * <p>The value of the email to be updated as primary.</p>
                */
            Email: string | undefined;
    }
    export namespace UpdatePrimaryEmailAddressRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePrimaryEmailAddressRequest) => any;
    }
    export interface UpdatePrimaryEmailAddressResponse {
    }
    export namespace UpdatePrimaryEmailAddressResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePrimaryEmailAddressResponse) => any;
    }
    export interface UpdateResourceRequest {
            /**
                * <p>The identifier associated with the organization for which the resource is
                *          updated.</p>
                */
            OrganizationId: string | undefined;
            /**
                * <p>The identifier of the resource to be updated.</p>
                */
            ResourceId: string | undefined;
            /**
                * <p>The name of the resource to be updated.</p>
                */
            Name?: string;
            /**
                * <p>The resource's booking options to be updated.</p>
                */
            BookingOptions?: BookingOptions;
    }
    export namespace UpdateResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResourceRequest) => any;
    }
    export interface UpdateResourceResponse {
    }
    export namespace UpdateResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResourceResponse) => any;
    }
}

declare module '@aws-sdk/client-workmail/node_modules/@aws-sdk/client-workmail/dist-types/models/WorkMailServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from WorkMail service.
        */
    export class WorkMailServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

