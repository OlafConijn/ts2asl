// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-iotfleethub' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateApplicationCommandInput, CreateApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/CreateApplicationCommand";
    import { DeleteApplicationCommandInput, DeleteApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DeleteApplicationCommand";
    import { DescribeApplicationCommandInput, DescribeApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DescribeApplicationCommand";
    import { ListApplicationsCommandInput, ListApplicationsCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListApplicationsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListTagsForResourceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UntagResourceCommand";
    import { UpdateApplicationCommandInput, UpdateApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UpdateApplicationCommand";
    import { IoTFleetHubClient } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    /**
        * <p>With Fleet Hub for AWS IoT Device Management you can build stand-alone web applications for monitoring the health of your device fleets.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        */
    export class IoTFleetHub extends IoTFleetHubClient {
            /**
                * <p>Creates a Fleet Hub for AWS IoT Device Management web application.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            createApplication(args: CreateApplicationCommandInput, options?: __HttpHandlerOptions): Promise<CreateApplicationCommandOutput>;
            createApplication(args: CreateApplicationCommandInput, cb: (err: any, data?: CreateApplicationCommandOutput) => void): void;
            createApplication(args: CreateApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateApplicationCommandOutput) => void): void;
            /**
                * <p>Deletes a Fleet Hub for AWS IoT Device Management web application.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            deleteApplication(args: DeleteApplicationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteApplicationCommandOutput>;
            deleteApplication(args: DeleteApplicationCommandInput, cb: (err: any, data?: DeleteApplicationCommandOutput) => void): void;
            deleteApplication(args: DeleteApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteApplicationCommandOutput) => void): void;
            /**
                * <p>Gets information about a Fleet Hub for AWS IoT Device Management web application.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            describeApplication(args: DescribeApplicationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeApplicationCommandOutput>;
            describeApplication(args: DescribeApplicationCommandInput, cb: (err: any, data?: DescribeApplicationCommandOutput) => void): void;
            describeApplication(args: DescribeApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeApplicationCommandOutput) => void): void;
            /**
                * <p>Gets a list of Fleet Hub for AWS IoT Device Management web applications for the current account.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            listApplications(args: ListApplicationsCommandInput, options?: __HttpHandlerOptions): Promise<ListApplicationsCommandOutput>;
            listApplications(args: ListApplicationsCommandInput, cb: (err: any, data?: ListApplicationsCommandOutput) => void): void;
            listApplications(args: ListApplicationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListApplicationsCommandOutput) => void): void;
            /**
                * <p>Lists the tags for the specified resource.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Adds to or modifies the tags of the specified resource. Tags are metadata which can be used to manage a resource.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes the specified tags (metadata) from the resource.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates information about a Fleet Hub for a AWS IoT Device Management web application.</p>
                *          <note>
                *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
                *          </note>
                */
            updateApplication(args: UpdateApplicationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateApplicationCommandOutput>;
            updateApplication(args: UpdateApplicationCommandInput, cb: (err: any, data?: UpdateApplicationCommandOutput) => void): void;
            updateApplication(args: UpdateApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateApplicationCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/CreateApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { CreateApplicationRequest, CreateApplicationResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface CreateApplicationCommandInput extends CreateApplicationRequest {
    }
    export interface CreateApplicationCommandOutput extends CreateApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a Fleet Hub for AWS IoT Device Management web application.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, CreateApplicationCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, CreateApplicationCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new CreateApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateApplicationCommandInput} for command's `input` shape.
        * @see {@link CreateApplicationCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class CreateApplicationCommand extends $Command<CreateApplicationCommandInput, CreateApplicationCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: CreateApplicationCommandInput;
            constructor(input: CreateApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateApplicationCommandInput, CreateApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DeleteApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { DeleteApplicationRequest, DeleteApplicationResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface DeleteApplicationCommandInput extends DeleteApplicationRequest {
    }
    export interface DeleteApplicationCommandOutput extends DeleteApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a Fleet Hub for AWS IoT Device Management web application.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, DeleteApplicationCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, DeleteApplicationCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new DeleteApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteApplicationCommandInput} for command's `input` shape.
        * @see {@link DeleteApplicationCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class DeleteApplicationCommand extends $Command<DeleteApplicationCommandInput, DeleteApplicationCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: DeleteApplicationCommandInput;
            constructor(input: DeleteApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteApplicationCommandInput, DeleteApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DescribeApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { DescribeApplicationRequest, DescribeApplicationResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface DescribeApplicationCommandInput extends DescribeApplicationRequest {
    }
    export interface DescribeApplicationCommandOutput extends DescribeApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a Fleet Hub for AWS IoT Device Management web application.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, DescribeApplicationCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, DescribeApplicationCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new DescribeApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeApplicationCommandInput} for command's `input` shape.
        * @see {@link DescribeApplicationCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class DescribeApplicationCommand extends $Command<DescribeApplicationCommandInput, DescribeApplicationCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: DescribeApplicationCommandInput;
            constructor(input: DescribeApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeApplicationCommandInput, DescribeApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListApplicationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { ListApplicationsRequest, ListApplicationsResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface ListApplicationsCommandInput extends ListApplicationsRequest {
    }
    export interface ListApplicationsCommandOutput extends ListApplicationsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a list of Fleet Hub for AWS IoT Device Management web applications for the current account.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, ListApplicationsCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, ListApplicationsCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new ListApplicationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListApplicationsCommandInput} for command's `input` shape.
        * @see {@link ListApplicationsCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class ListApplicationsCommand extends $Command<ListApplicationsCommandInput, ListApplicationsCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: ListApplicationsCommandInput;
            constructor(input: ListApplicationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListApplicationsCommandInput, ListApplicationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags for the specified resource.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, ListTagsForResourceCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, ListTagsForResourceCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Adds to or modifies the tags of the specified resource. Tags are metadata which can be used to manage a resource.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, TagResourceCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, TagResourceCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes the specified tags (metadata) from the resource.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, UntagResourceCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, UntagResourceCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UpdateApplicationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTFleetHubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient";
    import { UpdateApplicationRequest, UpdateApplicationResponse } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0";
    export interface UpdateApplicationCommandInput extends UpdateApplicationRequest {
    }
    export interface UpdateApplicationCommandOutput extends UpdateApplicationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates information about a Fleet Hub for a AWS IoT Device Management web application.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTFleetHubClient, UpdateApplicationCommand } from "@aws-sdk/client-iotfleethub"; // ES Modules import
        * // const { IoTFleetHubClient, UpdateApplicationCommand } = require("@aws-sdk/client-iotfleethub"); // CommonJS import
        * const client = new IoTFleetHubClient(config);
        * const command = new UpdateApplicationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateApplicationCommandInput} for command's `input` shape.
        * @see {@link UpdateApplicationCommandOutput} for command's `response` shape.
        * @see {@link IoTFleetHubClientResolvedConfig | config} for IoTFleetHubClient's `config` shape.
        *
        */
    export class UpdateApplicationCommand extends $Command<UpdateApplicationCommandInput, UpdateApplicationCommandOutput, IoTFleetHubClientResolvedConfig> {
            readonly input: UpdateApplicationCommandInput;
            constructor(input: UpdateApplicationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTFleetHubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateApplicationCommandInput, UpdateApplicationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/IoTFleetHubClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateApplicationCommandInput, CreateApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/CreateApplicationCommand";
    import { DeleteApplicationCommandInput, DeleteApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DeleteApplicationCommand";
    import { DescribeApplicationCommandInput, DescribeApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/DescribeApplicationCommand";
    import { ListApplicationsCommandInput, ListApplicationsCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListApplicationsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/ListTagsForResourceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UntagResourceCommand";
    import { UpdateApplicationCommandInput, UpdateApplicationCommandOutput } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/commands/UpdateApplicationCommand";
    export type ServiceInputTypes = CreateApplicationCommandInput | DeleteApplicationCommandInput | DescribeApplicationCommandInput | ListApplicationsCommandInput | ListTagsForResourceCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateApplicationCommandInput;
    export type ServiceOutputTypes = CreateApplicationCommandOutput | DeleteApplicationCommandOutput | DescribeApplicationCommandOutput | ListApplicationsCommandOutput | ListTagsForResourceCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateApplicationCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IoTFleetHubClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IoTFleetHubClient class constructor that set the region, credentials and other options.
        */
    export interface IoTFleetHubClientConfig extends IoTFleetHubClientConfigType {
    }
    type IoTFleetHubClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IoTFleetHubClient class. This is resolved and normalized from the {@link IoTFleetHubClientConfig | constructor configuration interface}.
        */
    export interface IoTFleetHubClientResolvedConfig extends IoTFleetHubClientResolvedConfigType {
    }
    /**
        * <p>With Fleet Hub for AWS IoT Device Management you can build stand-alone web applications for monitoring the health of your device fleets.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        */
    export class IoTFleetHubClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IoTFleetHubClientResolvedConfig> {
            /**
                * The resolved configuration of IoTFleetHubClient class. This is resolved and normalized from the {@link IoTFleetHubClientConfig | constructor configuration interface}.
                */
            readonly config: IoTFleetHubClientResolvedConfig;
            constructor(configuration: IoTFleetHubClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTFleetHubServiceException as __BaseException } from "@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/IoTFleetHubServiceException";
    export enum ApplicationState {
            ACTIVE = "ACTIVE",
            CREATE_FAILED = "CREATE_FAILED",
            CREATING = "CREATING",
            DELETE_FAILED = "DELETE_FAILED",
            DELETING = "DELETING"
    }
    /**
        * <p>A summary of information about a AWS IoT Device Management web application.</p>
        *          <note>
        *             <p>Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.</p>
        *          </note>
        */
    export interface ApplicationSummary {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
            /**
                * <p>The name of the web application.</p>
                */
            applicationName: string | undefined;
            /**
                * <p>An optional description of the web application.</p>
                */
            applicationDescription?: string;
            /**
                * <p>The URL of the web application.</p>
                */
            applicationUrl: string | undefined;
            /**
                * <p>The date (in Unix epoch time) when the web application was created.</p>
                */
            applicationCreationDate?: number;
            /**
                * <p>The date (in Unix epoch time) when the web application was last updated.</p>
                */
            applicationLastUpdateDate?: number;
            /**
                * <p>The current state of the web application.</p>
                */
            applicationState?: ApplicationState | string;
    }
    export namespace ApplicationSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ApplicationSummary) => any;
    }
    export interface CreateApplicationRequest {
            /**
                * <p>The name of the web application.</p>
                */
            applicationName: string | undefined;
            /**
                * <p>An optional description of the web application.</p>
                */
            applicationDescription?: string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request.
                *       Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>The ARN of the role that the web application assumes when it interacts with AWS IoT Core.</p>
                *          <note>
                *             <p>The name of the role must be in the form <code>AWSIotFleetHub_<i>random_string</i>
                *                </code>.</p>
                *          </note>
                */
            roleArn: string | undefined;
            /**
                * <p>A set of key/value pairs that you can use to manage the web application resource.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateApplicationRequest) => any;
    }
    export interface CreateApplicationResponse {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
            /**
                * <p>The ARN of the web application.</p>
                */
            applicationArn: string | undefined;
    }
    export namespace CreateApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateApplicationResponse) => any;
    }
    /**
        * <p>An unexpected error has occurred.</p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p>The request is not valid.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>A limit has been exceeded.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>The rate exceeds the limit.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    export interface DeleteApplicationRequest {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request.
                *       Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteApplicationRequest) => any;
    }
    export interface DeleteApplicationResponse {
    }
    export namespace DeleteApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteApplicationResponse) => any;
    }
    /**
        * <p>The specified resource does not exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface DescribeApplicationRequest {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
    }
    export namespace DescribeApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeApplicationRequest) => any;
    }
    export interface DescribeApplicationResponse {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
            /**
                * <p>The ARN of the web application.</p>
                */
            applicationArn: string | undefined;
            /**
                * <p>The name of the web application.</p>
                */
            applicationName: string | undefined;
            /**
                * <p>An optional description of the web application.</p>
                */
            applicationDescription?: string;
            /**
                * <p>The URL of the web application.</p>
                */
            applicationUrl: string | undefined;
            /**
                * <p>The current state of the web application.</p>
                */
            applicationState: ApplicationState | string | undefined;
            /**
                * <p>The date (in Unix epoch time) when the application was created.</p>
                */
            applicationCreationDate: number | undefined;
            /**
                * <p>The date (in Unix epoch time) when the application was last updated.</p>
                */
            applicationLastUpdateDate: number | undefined;
            /**
                * <p>The ARN of the role that the web application assumes when it interacts with AWS IoT Core.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>The Id of the single sign-on client that you use to authenticate and authorize users on the web application.</p>
                */
            ssoClientId?: string;
            /**
                * <p>A message indicating why the <code>DescribeApplication</code> API failed.</p>
                */
            errorMessage?: string;
            /**
                * <p>A set of key/value pairs that you can use to manage the web application resource.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace DescribeApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeApplicationResponse) => any;
    }
    export interface ListApplicationsRequest {
            /**
                * <p>A token used to get the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListApplicationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListApplicationsRequest) => any;
    }
    export interface ListApplicationsResponse {
            /**
                * <p>An array of objects that provide summaries of information about the web applications in the list.</p>
                */
            applicationSummaries?: ApplicationSummary[];
            /**
                * <p>A token used to get the next set of results.</p>
                */
            nextToken?: string;
    }
    export namespace ListApplicationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListApplicationsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The list of tags assigned to the resource.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The new or modified tags for the resource.</p>
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The ARN of the resource.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of the keys of the tags to be removed from the resource.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    /**
        * <p>The request conflicts with the current state of the resource.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    export interface UpdateApplicationRequest {
            /**
                * <p>The unique Id of the web application.</p>
                */
            applicationId: string | undefined;
            /**
                * <p>The name of the web application.</p>
                */
            applicationName?: string;
            /**
                * <p>An optional description of the web application.</p>
                */
            applicationDescription?: string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request.
                *       Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateApplicationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateApplicationRequest) => any;
    }
    export interface UpdateApplicationResponse {
    }
    export namespace UpdateApplicationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateApplicationResponse) => any;
    }
}

declare module '@aws-sdk/client-iotfleethub/node_modules/@aws-sdk/client-iotfleethub/dist-types/models/IoTFleetHubServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from IoTFleetHub service.
        */
    export class IoTFleetHubServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

