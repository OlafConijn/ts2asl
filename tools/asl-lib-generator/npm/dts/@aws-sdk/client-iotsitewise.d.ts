// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-iotsitewise' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AssociateAssetsCommandInput, AssociateAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateAssetsCommand";
    import { AssociateTimeSeriesToAssetPropertyCommandInput, AssociateTimeSeriesToAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateTimeSeriesToAssetPropertyCommand";
    import { BatchAssociateProjectAssetsCommandInput, BatchAssociateProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchAssociateProjectAssetsCommand";
    import { BatchDisassociateProjectAssetsCommandInput, BatchDisassociateProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchDisassociateProjectAssetsCommand";
    import { BatchGetAssetPropertyAggregatesCommandInput, BatchGetAssetPropertyAggregatesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyAggregatesCommand";
    import { BatchGetAssetPropertyValueCommandInput, BatchGetAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueCommand";
    import { BatchGetAssetPropertyValueHistoryCommandInput, BatchGetAssetPropertyValueHistoryCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueHistoryCommand";
    import { BatchPutAssetPropertyValueCommandInput, BatchPutAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchPutAssetPropertyValueCommand";
    import { CreateAccessPolicyCommandInput, CreateAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAccessPolicyCommand";
    import { CreateAssetCommandInput, CreateAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetCommand";
    import { CreateAssetModelCommandInput, CreateAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetModelCommand";
    import { CreateBulkImportJobCommandInput, CreateBulkImportJobCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateBulkImportJobCommand";
    import { CreateDashboardCommandInput, CreateDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateDashboardCommand";
    import { CreateGatewayCommandInput, CreateGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateGatewayCommand";
    import { CreatePortalCommandInput, CreatePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreatePortalCommand";
    import { CreateProjectCommandInput, CreateProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateProjectCommand";
    import { DeleteAccessPolicyCommandInput, DeleteAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAccessPolicyCommand";
    import { DeleteAssetCommandInput, DeleteAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetCommand";
    import { DeleteAssetModelCommandInput, DeleteAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetModelCommand";
    import { DeleteDashboardCommandInput, DeleteDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteDashboardCommand";
    import { DeleteGatewayCommandInput, DeleteGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteGatewayCommand";
    import { DeletePortalCommandInput, DeletePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeletePortalCommand";
    import { DeleteProjectCommandInput, DeleteProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteProjectCommand";
    import { DeleteTimeSeriesCommandInput, DeleteTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteTimeSeriesCommand";
    import { DescribeAccessPolicyCommandInput, DescribeAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAccessPolicyCommand";
    import { DescribeAssetCommandInput, DescribeAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetCommand";
    import { DescribeAssetModelCommandInput, DescribeAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetModelCommand";
    import { DescribeAssetPropertyCommandInput, DescribeAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetPropertyCommand";
    import { DescribeBulkImportJobCommandInput, DescribeBulkImportJobCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeBulkImportJobCommand";
    import { DescribeDashboardCommandInput, DescribeDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDashboardCommand";
    import { DescribeDefaultEncryptionConfigurationCommandInput, DescribeDefaultEncryptionConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDefaultEncryptionConfigurationCommand";
    import { DescribeGatewayCapabilityConfigurationCommandInput, DescribeGatewayCapabilityConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCapabilityConfigurationCommand";
    import { DescribeGatewayCommandInput, DescribeGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCommand";
    import { DescribeLoggingOptionsCommandInput, DescribeLoggingOptionsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeLoggingOptionsCommand";
    import { DescribePortalCommandInput, DescribePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribePortalCommand";
    import { DescribeProjectCommandInput, DescribeProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeProjectCommand";
    import { DescribeStorageConfigurationCommandInput, DescribeStorageConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeStorageConfigurationCommand";
    import { DescribeTimeSeriesCommandInput, DescribeTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeTimeSeriesCommand";
    import { DisassociateAssetsCommandInput, DisassociateAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateAssetsCommand";
    import { DisassociateTimeSeriesFromAssetPropertyCommandInput, DisassociateTimeSeriesFromAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateTimeSeriesFromAssetPropertyCommand";
    import { GetAssetPropertyAggregatesCommandInput, GetAssetPropertyAggregatesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyAggregatesCommand";
    import { GetAssetPropertyValueCommandInput, GetAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueCommand";
    import { GetAssetPropertyValueHistoryCommandInput, GetAssetPropertyValueHistoryCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueHistoryCommand";
    import { GetInterpolatedAssetPropertyValuesCommandInput, GetInterpolatedAssetPropertyValuesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetInterpolatedAssetPropertyValuesCommand";
    import { ListAccessPoliciesCommandInput, ListAccessPoliciesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAccessPoliciesCommand";
    import { ListAssetModelsCommandInput, ListAssetModelsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetModelsCommand";
    import { ListAssetRelationshipsCommandInput, ListAssetRelationshipsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetRelationshipsCommand";
    import { ListAssetsCommandInput, ListAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetsCommand";
    import { ListAssociatedAssetsCommandInput, ListAssociatedAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssociatedAssetsCommand";
    import { ListBulkImportJobsCommandInput, ListBulkImportJobsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListBulkImportJobsCommand";
    import { ListDashboardsCommandInput, ListDashboardsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListDashboardsCommand";
    import { ListGatewaysCommandInput, ListGatewaysCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListGatewaysCommand";
    import { ListPortalsCommandInput, ListPortalsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListPortalsCommand";
    import { ListProjectAssetsCommandInput, ListProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectAssetsCommand";
    import { ListProjectsCommandInput, ListProjectsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTagsForResourceCommand";
    import { ListTimeSeriesCommandInput, ListTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTimeSeriesCommand";
    import { PutDefaultEncryptionConfigurationCommandInput, PutDefaultEncryptionConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutDefaultEncryptionConfigurationCommand";
    import { PutLoggingOptionsCommandInput, PutLoggingOptionsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutLoggingOptionsCommand";
    import { PutStorageConfigurationCommandInput, PutStorageConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutStorageConfigurationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UntagResourceCommand";
    import { UpdateAccessPolicyCommandInput, UpdateAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAccessPolicyCommand";
    import { UpdateAssetCommandInput, UpdateAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetCommand";
    import { UpdateAssetModelCommandInput, UpdateAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetModelCommand";
    import { UpdateAssetPropertyCommandInput, UpdateAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetPropertyCommand";
    import { UpdateDashboardCommandInput, UpdateDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateDashboardCommand";
    import { UpdateGatewayCapabilityConfigurationCommandInput, UpdateGatewayCapabilityConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCapabilityConfigurationCommand";
    import { UpdateGatewayCommandInput, UpdateGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCommand";
    import { UpdatePortalCommandInput, UpdatePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdatePortalCommand";
    import { UpdateProjectCommandInput, UpdateProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateProjectCommand";
    import { IoTSiteWiseClient } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    /**
        * <p>Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the
        *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export class IoTSiteWise extends IoTSiteWiseClient {
            /**
                * <p>Associates a child asset with the given parent asset through a hierarchy defined in the
                *       parent asset's model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html">Associating assets</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            associateAssets(args: AssociateAssetsCommandInput, options?: __HttpHandlerOptions): Promise<AssociateAssetsCommandOutput>;
            associateAssets(args: AssociateAssetsCommandInput, cb: (err: any, data?: AssociateAssetsCommandOutput) => void): void;
            associateAssets(args: AssociateAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateAssetsCommandOutput) => void): void;
            /**
                * <p>Associates a time series (data stream) with an asset property.</p>
                */
            associateTimeSeriesToAssetProperty(args: AssociateTimeSeriesToAssetPropertyCommandInput, options?: __HttpHandlerOptions): Promise<AssociateTimeSeriesToAssetPropertyCommandOutput>;
            associateTimeSeriesToAssetProperty(args: AssociateTimeSeriesToAssetPropertyCommandInput, cb: (err: any, data?: AssociateTimeSeriesToAssetPropertyCommandOutput) => void): void;
            associateTimeSeriesToAssetProperty(args: AssociateTimeSeriesToAssetPropertyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateTimeSeriesToAssetPropertyCommandOutput) => void): void;
            /**
                * <p>Associates a group (batch) of assets with an IoT SiteWise Monitor project.</p>
                */
            batchAssociateProjectAssets(args: BatchAssociateProjectAssetsCommandInput, options?: __HttpHandlerOptions): Promise<BatchAssociateProjectAssetsCommandOutput>;
            batchAssociateProjectAssets(args: BatchAssociateProjectAssetsCommandInput, cb: (err: any, data?: BatchAssociateProjectAssetsCommandOutput) => void): void;
            batchAssociateProjectAssets(args: BatchAssociateProjectAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchAssociateProjectAssetsCommandOutput) => void): void;
            /**
                * <p>Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.</p>
                */
            batchDisassociateProjectAssets(args: BatchDisassociateProjectAssetsCommandInput, options?: __HttpHandlerOptions): Promise<BatchDisassociateProjectAssetsCommandOutput>;
            batchDisassociateProjectAssets(args: BatchDisassociateProjectAssetsCommandInput, cb: (err: any, data?: BatchDisassociateProjectAssetsCommandOutput) => void): void;
            batchDisassociateProjectAssets(args: BatchDisassociateProjectAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDisassociateProjectAssetsCommandOutput) => void): void;
            /**
                * <p>Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties.
                *     For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying
                *     aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            batchGetAssetPropertyAggregates(args: BatchGetAssetPropertyAggregatesCommandInput, options?: __HttpHandlerOptions): Promise<BatchGetAssetPropertyAggregatesCommandOutput>;
            batchGetAssetPropertyAggregates(args: BatchGetAssetPropertyAggregatesCommandInput, cb: (err: any, data?: BatchGetAssetPropertyAggregatesCommandOutput) => void): void;
            batchGetAssetPropertyAggregates(args: BatchGetAssetPropertyAggregatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchGetAssetPropertyAggregatesCommandOutput) => void): void;
            /**
                * <p>Gets the current value for one or more asset properties. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying
                *     current values</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            batchGetAssetPropertyValue(args: BatchGetAssetPropertyValueCommandInput, options?: __HttpHandlerOptions): Promise<BatchGetAssetPropertyValueCommandOutput>;
            batchGetAssetPropertyValue(args: BatchGetAssetPropertyValueCommandInput, cb: (err: any, data?: BatchGetAssetPropertyValueCommandOutput) => void): void;
            batchGetAssetPropertyValue(args: BatchGetAssetPropertyValueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchGetAssetPropertyValueCommandOutput) => void): void;
            /**
                * <p>Gets the historical values for one or more asset properties. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying
                *     historical values</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            batchGetAssetPropertyValueHistory(args: BatchGetAssetPropertyValueHistoryCommandInput, options?: __HttpHandlerOptions): Promise<BatchGetAssetPropertyValueHistoryCommandOutput>;
            batchGetAssetPropertyValueHistory(args: BatchGetAssetPropertyValueHistoryCommandInput, cb: (err: any, data?: BatchGetAssetPropertyValueHistoryCommandOutput) => void): void;
            batchGetAssetPropertyValueHistory(args: BatchGetAssetPropertyValueHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchGetAssetPropertyValueHistoryCommandOutput) => void): void;
            /**
                * <p>Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value
                *       (TQV) data point. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html">Ingesting data using the API</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                *          <p>To identify an asset property, you must specify one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
                *             </li>
                *             <li>
                *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
                *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                *             </li>
                *          </ul>
                *          <important>
                *             <p>With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more
                *         than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps
                *         outside of the inclusive range of [-7 days, +10 minutes] and returns a
                *           <code>TimestampOutOfRangeException</code> error.</p>
                *             <p>For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer
                *         TQV has a different quality. For example, if you store a TQV <code>{T1, GOOD, V1}</code>,
                *         then storing <code>{T1, GOOD, V2}</code> replaces the existing TQV.</p>
                *          </important>
                *          <p>IoT SiteWise authorizes access to each <code>BatchPutAssetPropertyValue</code> entry individually.
                *       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action">BatchPutAssetPropertyValue authorization</a> in the
                *       <i>IoT SiteWise User Guide</i>.</p>
                */
            batchPutAssetPropertyValue(args: BatchPutAssetPropertyValueCommandInput, options?: __HttpHandlerOptions): Promise<BatchPutAssetPropertyValueCommandOutput>;
            batchPutAssetPropertyValue(args: BatchPutAssetPropertyValueCommandInput, cb: (err: any, data?: BatchPutAssetPropertyValueCommandOutput) => void): void;
            batchPutAssetPropertyValue(args: BatchPutAssetPropertyValueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchPutAssetPropertyValueCommandOutput) => void): void;
            /**
                * <p>Creates an access policy that grants the specified identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or
                *       IAM user) access to the specified IoT SiteWise Monitor portal or project resource.</p>
                */
            createAccessPolicy(args: CreateAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<CreateAccessPolicyCommandOutput>;
            createAccessPolicy(args: CreateAccessPolicyCommandInput, cb: (err: any, data?: CreateAccessPolicyCommandOutput) => void): void;
            createAccessPolicy(args: CreateAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAccessPolicyCommandOutput) => void): void;
            /**
                * <p>Creates an asset from an existing asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html">Creating assets</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            createAsset(args: CreateAssetCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssetCommandOutput>;
            createAsset(args: CreateAssetCommandInput, cb: (err: any, data?: CreateAssetCommandOutput) => void): void;
            createAsset(args: CreateAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssetCommandOutput) => void): void;
            /**
                * <p>Creates an asset model from specified property and hierarchy definitions. You create
                *       assets from asset models. With asset models, you can easily create assets of the same type
                *       that have standardized definitions. Each asset created from a model inherits the asset model's
                *       property and hierarchy definitions. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html">Defining asset models</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            createAssetModel(args: CreateAssetModelCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssetModelCommandOutput>;
            createAssetModel(args: CreateAssetModelCommandInput, cb: (err: any, data?: CreateAssetModelCommandOutput) => void): void;
            createAssetModel(args: CreateAssetModelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssetModelCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
                *       We recommend that you use this operation only with test data, and not in production environments.</p>
                *          </note>
                *          <p>Defines a job to ingest data to IoT SiteWise from Amazon S3. For more information,
                *   see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/CreateBulkImportJob.html">Create a bulk import job (CLI)</a>
                *   in the <i>Amazon Simple Storage Service User Guide</i>.</p>
                *          <important>
                *             <p>You must enable IoT SiteWise to export data to Amazon S3 before you create a bulk import job.
                *       For more information about how to configure storage settings,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_PutStorageConfiguration.html">PutStorageConfiguration</a>.</p>
                *          </important>
                */
            createBulkImportJob(args: CreateBulkImportJobCommandInput, options?: __HttpHandlerOptions): Promise<CreateBulkImportJobCommandOutput>;
            createBulkImportJob(args: CreateBulkImportJobCommandInput, cb: (err: any, data?: CreateBulkImportJobCommandOutput) => void): void;
            createBulkImportJob(args: CreateBulkImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBulkImportJobCommandOutput) => void): void;
            /**
                * <p>Creates a dashboard in an IoT SiteWise Monitor project.</p>
                */
            createDashboard(args: CreateDashboardCommandInput, options?: __HttpHandlerOptions): Promise<CreateDashboardCommandOutput>;
            createDashboard(args: CreateDashboardCommandInput, cb: (err: any, data?: CreateDashboardCommandOutput) => void): void;
            createDashboard(args: CreateDashboardCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDashboardCommandOutput) => void): void;
            /**
                * <p>Creates a gateway, which is a virtual or edge device that delivers industrial data streams
                *       from local servers to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            createGateway(args: CreateGatewayCommandInput, options?: __HttpHandlerOptions): Promise<CreateGatewayCommandOutput>;
            createGateway(args: CreateGatewayCommandInput, cb: (err: any, data?: CreateGatewayCommandOutput) => void): void;
            createGateway(args: CreateGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateGatewayCommandOutput) => void): void;
            /**
                * <p>Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses Amazon Web Services SSO or IAM
                *       to authenticate portal users and manage user permissions.</p>
                *          <note>
                *             <p>Before you can sign in to a new portal, you must add at least one identity to that
                *         portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins">Adding or removing portal
                *           administrators</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          </note>
                */
            createPortal(args: CreatePortalCommandInput, options?: __HttpHandlerOptions): Promise<CreatePortalCommandOutput>;
            createPortal(args: CreatePortalCommandInput, cb: (err: any, data?: CreatePortalCommandOutput) => void): void;
            createPortal(args: CreatePortalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePortalCommandOutput) => void): void;
            /**
                * <p>Creates a project in the specified portal.</p>
                *          <note>
                *             <p>Make sure that the project name and description don't contain confidential
                *         information.</p>
                *          </note>
                */
            createProject(args: CreateProjectCommandInput, options?: __HttpHandlerOptions): Promise<CreateProjectCommandOutput>;
            createProject(args: CreateProjectCommandInput, cb: (err: any, data?: CreateProjectCommandOutput) => void): void;
            createProject(args: CreateProjectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProjectCommandOutput) => void): void;
            /**
                * <p>Deletes an access policy that grants the specified identity access to the specified
                *       IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor
                *       resource.</p>
                */
            deleteAccessPolicy(args: DeleteAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessPolicyCommandOutput>;
            deleteAccessPolicy(args: DeleteAccessPolicyCommandInput, cb: (err: any, data?: DeleteAccessPolicyCommandOutput) => void): void;
            deleteAccessPolicy(args: DeleteAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessPolicyCommandOutput) => void): void;
            /**
                * <p>Deletes an asset. This action can't be undone. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and
                *         models</a> in the <i>IoT SiteWise User Guide</i>. </p>
                *          <note>
                *             <p>You can't delete an asset that's associated to another asset. For more information, see
                *           <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html">DisassociateAssets</a>.</p>
                *          </note>
                */
            deleteAsset(args: DeleteAssetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssetCommandOutput>;
            deleteAsset(args: DeleteAssetCommandInput, cb: (err: any, data?: DeleteAssetCommandOutput) => void): void;
            deleteAsset(args: DeleteAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssetCommandOutput) => void): void;
            /**
                * <p>Deletes an asset model. This action can't be undone. You must delete all assets created
                *       from an asset model before you can delete the model. Also, you can't delete an asset model if
                *       a parent asset model exists that contains a property formula expression that depends on the
                *       asset model that you want to delete. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and models</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            deleteAssetModel(args: DeleteAssetModelCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssetModelCommandOutput>;
            deleteAssetModel(args: DeleteAssetModelCommandInput, cb: (err: any, data?: DeleteAssetModelCommandOutput) => void): void;
            deleteAssetModel(args: DeleteAssetModelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssetModelCommandOutput) => void): void;
            /**
                * <p>Deletes a dashboard from IoT SiteWise Monitor.</p>
                */
            deleteDashboard(args: DeleteDashboardCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDashboardCommandOutput>;
            deleteDashboard(args: DeleteDashboardCommandInput, cb: (err: any, data?: DeleteDashboardCommandOutput) => void): void;
            deleteDashboard(args: DeleteDashboardCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDashboardCommandOutput) => void): void;
            /**
                * <p>Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway's files remain
                *       in your gateway's file system.</p>
                */
            deleteGateway(args: DeleteGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DeleteGatewayCommandOutput>;
            deleteGateway(args: DeleteGatewayCommandInput, cb: (err: any, data?: DeleteGatewayCommandOutput) => void): void;
            deleteGateway(args: DeleteGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteGatewayCommandOutput) => void): void;
            /**
                * <p>Deletes a portal from IoT SiteWise Monitor.</p>
                */
            deletePortal(args: DeletePortalCommandInput, options?: __HttpHandlerOptions): Promise<DeletePortalCommandOutput>;
            deletePortal(args: DeletePortalCommandInput, cb: (err: any, data?: DeletePortalCommandOutput) => void): void;
            deletePortal(args: DeletePortalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePortalCommandOutput) => void): void;
            /**
                * <p>Deletes a project from IoT SiteWise Monitor.</p>
                */
            deleteProject(args: DeleteProjectCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProjectCommandOutput>;
            deleteProject(args: DeleteProjectCommandInput, cb: (err: any, data?: DeleteProjectCommandOutput) => void): void;
            deleteProject(args: DeleteProjectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProjectCommandOutput) => void): void;
            /**
                * <p>Deletes a time series (data stream). If you delete a time series that's associated with an
                *       asset property, the asset property still exists, but the time series will no longer be
                *       associated with this asset property.</p>
                *          <p>To identify a time series, do one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>If the time series isn't associated with an asset property,
                *           specify the <code>alias</code> of the time series.</p>
                *             </li>
                *             <li>
                *                <p>If the time series is associated with an asset property,
                *           specify one of the following: </p>
                *                <ul>
                *                   <li>
                *                      <p>The <code>alias</code> of the time series.</p>
                *                   </li>
                *                   <li>
                *                      <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                */
            deleteTimeSeries(args: DeleteTimeSeriesCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTimeSeriesCommandOutput>;
            deleteTimeSeries(args: DeleteTimeSeriesCommandInput, cb: (err: any, data?: DeleteTimeSeriesCommandOutput) => void): void;
            deleteTimeSeries(args: DeleteTimeSeriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTimeSeriesCommandOutput) => void): void;
            /**
                * <p>Describes an access policy, which specifies an identity's access to an IoT SiteWise Monitor portal or
                *       project.</p>
                */
            describeAccessPolicy(args: DescribeAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAccessPolicyCommandOutput>;
            describeAccessPolicy(args: DescribeAccessPolicyCommandInput, cb: (err: any, data?: DescribeAccessPolicyCommandOutput) => void): void;
            describeAccessPolicy(args: DescribeAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAccessPolicyCommandOutput) => void): void;
            /**
                * <p>Retrieves information about an asset.</p>
                */
            describeAsset(args: DescribeAssetCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssetCommandOutput>;
            describeAsset(args: DescribeAssetCommandInput, cb: (err: any, data?: DescribeAssetCommandOutput) => void): void;
            describeAsset(args: DescribeAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssetCommandOutput) => void): void;
            /**
                * <p>Retrieves information about an asset model.</p>
                */
            describeAssetModel(args: DescribeAssetModelCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssetModelCommandOutput>;
            describeAssetModel(args: DescribeAssetModelCommandInput, cb: (err: any, data?: DescribeAssetModelCommandOutput) => void): void;
            describeAssetModel(args: DescribeAssetModelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssetModelCommandOutput) => void): void;
            /**
                * <p>Retrieves information about an asset property.</p>
                *          <note>
                *             <p>When you call this operation for an attribute property, this response includes the
                *         default attribute value that you define in the asset model. If you update the default value
                *         in the model, this operation's response includes the new default value.</p>
                *          </note>
                *          <p>This operation doesn't return the value of the asset property. To get the value of an
                *       asset property, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html">GetAssetPropertyValue</a>.</p>
                */
            describeAssetProperty(args: DescribeAssetPropertyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAssetPropertyCommandOutput>;
            describeAssetProperty(args: DescribeAssetPropertyCommandInput, cb: (err: any, data?: DescribeAssetPropertyCommandOutput) => void): void;
            describeAssetProperty(args: DescribeAssetPropertyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAssetPropertyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
                *       We recommend that you use this operation only with test data, and not in production environments.</p>
                *          </note>
                *          <p>Retrieves information about a bulk import job request. For more information,
                *     see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/DescribeBulkImportJob.html">Describe a bulk import job (CLI)</a>
                *     in the <i>Amazon Simple Storage Service User Guide</i>.</p>
                */
            describeBulkImportJob(args: DescribeBulkImportJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeBulkImportJobCommandOutput>;
            describeBulkImportJob(args: DescribeBulkImportJobCommandInput, cb: (err: any, data?: DescribeBulkImportJobCommandOutput) => void): void;
            describeBulkImportJob(args: DescribeBulkImportJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeBulkImportJobCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a dashboard.</p>
                */
            describeDashboard(args: DescribeDashboardCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDashboardCommandOutput>;
            describeDashboard(args: DescribeDashboardCommandInput, cb: (err: any, data?: DescribeDashboardCommandOutput) => void): void;
            describeDashboard(args: DescribeDashboardCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDashboardCommandOutput) => void): void;
            /**
                * <p>Retrieves information about the default encryption configuration for the Amazon Web Services account in
                *       the default or specified Region. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            describeDefaultEncryptionConfiguration(args: DescribeDefaultEncryptionConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDefaultEncryptionConfigurationCommandOutput>;
            describeDefaultEncryptionConfiguration(args: DescribeDefaultEncryptionConfigurationCommandInput, cb: (err: any, data?: DescribeDefaultEncryptionConfigurationCommandOutput) => void): void;
            describeDefaultEncryptionConfiguration(args: DescribeDefaultEncryptionConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDefaultEncryptionConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a gateway.</p>
                */
            describeGateway(args: DescribeGatewayCommandInput, options?: __HttpHandlerOptions): Promise<DescribeGatewayCommandOutput>;
            describeGateway(args: DescribeGatewayCommandInput, cb: (err: any, data?: DescribeGatewayCommandOutput) => void): void;
            describeGateway(args: DescribeGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeGatewayCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a gateway capability configuration.
                *       Each gateway capability defines data sources for a gateway. A capability configuration
                *       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
                *       the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
                *       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
                */
            describeGatewayCapabilityConfiguration(args: DescribeGatewayCapabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeGatewayCapabilityConfigurationCommandOutput>;
            describeGatewayCapabilityConfiguration(args: DescribeGatewayCapabilityConfigurationCommandInput, cb: (err: any, data?: DescribeGatewayCapabilityConfigurationCommandOutput) => void): void;
            describeGatewayCapabilityConfiguration(args: DescribeGatewayCapabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeGatewayCapabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves the current IoT SiteWise logging options.</p>
                */
            describeLoggingOptions(args: DescribeLoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeLoggingOptionsCommandOutput>;
            describeLoggingOptions(args: DescribeLoggingOptionsCommandInput, cb: (err: any, data?: DescribeLoggingOptionsCommandOutput) => void): void;
            describeLoggingOptions(args: DescribeLoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeLoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a portal.</p>
                */
            describePortal(args: DescribePortalCommandInput, options?: __HttpHandlerOptions): Promise<DescribePortalCommandOutput>;
            describePortal(args: DescribePortalCommandInput, cb: (err: any, data?: DescribePortalCommandOutput) => void): void;
            describePortal(args: DescribePortalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePortalCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a project.</p>
                */
            describeProject(args: DescribeProjectCommandInput, options?: __HttpHandlerOptions): Promise<DescribeProjectCommandOutput>;
            describeProject(args: DescribeProjectCommandInput, cb: (err: any, data?: DescribeProjectCommandOutput) => void): void;
            describeProject(args: DescribeProjectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeProjectCommandOutput) => void): void;
            /**
                * <p>Retrieves information about the storage configuration for IoT SiteWise.</p>
                */
            describeStorageConfiguration(args: DescribeStorageConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStorageConfigurationCommandOutput>;
            describeStorageConfiguration(args: DescribeStorageConfigurationCommandInput, cb: (err: any, data?: DescribeStorageConfigurationCommandOutput) => void): void;
            describeStorageConfiguration(args: DescribeStorageConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStorageConfigurationCommandOutput) => void): void;
            /**
                * <p>Retrieves information about a time series (data stream).</p>
                *          <p>To identify a time series, do one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>If the time series isn't associated with an asset property,
                *           specify the <code>alias</code> of the time series.</p>
                *             </li>
                *             <li>
                *                <p>If the time series is associated with an asset property,
                *           specify one of the following: </p>
                *                <ul>
                *                   <li>
                *                      <p>The <code>alias</code> of the time series.</p>
                *                   </li>
                *                   <li>
                *                      <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                */
            describeTimeSeries(args: DescribeTimeSeriesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTimeSeriesCommandOutput>;
            describeTimeSeries(args: DescribeTimeSeriesCommandInput, cb: (err: any, data?: DescribeTimeSeriesCommandOutput) => void): void;
            describeTimeSeries(args: DescribeTimeSeriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTimeSeriesCommandOutput) => void): void;
            /**
                * <p>Disassociates a child asset from the given parent asset through a hierarchy defined in the
                *       parent asset's model.</p>
                */
            disassociateAssets(args: DisassociateAssetsCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateAssetsCommandOutput>;
            disassociateAssets(args: DisassociateAssetsCommandInput, cb: (err: any, data?: DisassociateAssetsCommandOutput) => void): void;
            disassociateAssets(args: DisassociateAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateAssetsCommandOutput) => void): void;
            /**
                * <p>Disassociates a time series (data stream) from an asset property.</p>
                */
            disassociateTimeSeriesFromAssetProperty(args: DisassociateTimeSeriesFromAssetPropertyCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateTimeSeriesFromAssetPropertyCommandOutput>;
            disassociateTimeSeriesFromAssetProperty(args: DisassociateTimeSeriesFromAssetPropertyCommandInput, cb: (err: any, data?: DisassociateTimeSeriesFromAssetPropertyCommandOutput) => void): void;
            disassociateTimeSeriesFromAssetProperty(args: DisassociateTimeSeriesFromAssetPropertyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateTimeSeriesFromAssetPropertyCommandOutput) => void): void;
            /**
                * <p>Gets aggregated values for an asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying
                *         aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>To identify an asset property, you must specify one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
                *             </li>
                *             <li>
                *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
                *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                *             </li>
                *          </ul>
                */
            getAssetPropertyAggregates(args: GetAssetPropertyAggregatesCommandInput, options?: __HttpHandlerOptions): Promise<GetAssetPropertyAggregatesCommandOutput>;
            getAssetPropertyAggregates(args: GetAssetPropertyAggregatesCommandInput, cb: (err: any, data?: GetAssetPropertyAggregatesCommandOutput) => void): void;
            getAssetPropertyAggregates(args: GetAssetPropertyAggregatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssetPropertyAggregatesCommandOutput) => void): void;
            /**
                * <p>Gets an asset property's current value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying
                *         current values</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>To identify an asset property, you must specify one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
                *             </li>
                *             <li>
                *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
                *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                *             </li>
                *          </ul>
                */
            getAssetPropertyValue(args: GetAssetPropertyValueCommandInput, options?: __HttpHandlerOptions): Promise<GetAssetPropertyValueCommandOutput>;
            getAssetPropertyValue(args: GetAssetPropertyValueCommandInput, cb: (err: any, data?: GetAssetPropertyValueCommandOutput) => void): void;
            getAssetPropertyValue(args: GetAssetPropertyValueCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssetPropertyValueCommandOutput) => void): void;
            /**
                * <p>Gets the history of an asset property's values. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying
                *         historical values</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>To identify an asset property, you must specify one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
                *             </li>
                *             <li>
                *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
                *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                *             </li>
                *          </ul>
                */
            getAssetPropertyValueHistory(args: GetAssetPropertyValueHistoryCommandInput, options?: __HttpHandlerOptions): Promise<GetAssetPropertyValueHistoryCommandOutput>;
            getAssetPropertyValueHistory(args: GetAssetPropertyValueHistoryCommandInput, cb: (err: any, data?: GetAssetPropertyValueHistoryCommandOutput) => void): void;
            getAssetPropertyValueHistory(args: GetAssetPropertyValueHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssetPropertyValueHistoryCommandOutput) => void): void;
            /**
                * <p>Get interpolated values for an asset property for a specified time interval, during a
                *       period of time. If your time series is missing data points during the specified time interval,
                *       you can use interpolation to estimate the missing data.</p>
                *          <p>For example, you can use this operation to return the interpolated temperature values for
                *       a wind turbine every 24 hours over a duration of 7 days.</p>
                *          <p>To identify an asset property, you must specify one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
                *             </li>
                *             <li>
                *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
                *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                *             </li>
                *          </ul>
                */
            getInterpolatedAssetPropertyValues(args: GetInterpolatedAssetPropertyValuesCommandInput, options?: __HttpHandlerOptions): Promise<GetInterpolatedAssetPropertyValuesCommandOutput>;
            getInterpolatedAssetPropertyValues(args: GetInterpolatedAssetPropertyValuesCommandInput, cb: (err: any, data?: GetInterpolatedAssetPropertyValuesCommandOutput) => void): void;
            getInterpolatedAssetPropertyValues(args: GetInterpolatedAssetPropertyValuesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetInterpolatedAssetPropertyValuesCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of access policies for an identity (an Amazon Web Services SSO user, an Amazon Web Services SSO
                *       group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).</p>
                */
            listAccessPolicies(args: ListAccessPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListAccessPoliciesCommandOutput>;
            listAccessPolicies(args: ListAccessPoliciesCommandInput, cb: (err: any, data?: ListAccessPoliciesCommandOutput) => void): void;
            listAccessPolicies(args: ListAccessPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccessPoliciesCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of summaries of all asset models.</p>
                */
            listAssetModels(args: ListAssetModelsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssetModelsCommandOutput>;
            listAssetModels(args: ListAssetModelsCommandInput, cb: (err: any, data?: ListAssetModelsCommandOutput) => void): void;
            listAssetModels(args: ListAssetModelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssetModelsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of asset relationships for an asset. You can use this operation
                *       to identify an asset's root asset and all associated assets between that asset and its
                *       root.</p>
                */
            listAssetRelationships(args: ListAssetRelationshipsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssetRelationshipsCommandOutput>;
            listAssetRelationships(args: ListAssetRelationshipsCommandInput, cb: (err: any, data?: ListAssetRelationshipsCommandOutput) => void): void;
            listAssetRelationships(args: ListAssetRelationshipsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssetRelationshipsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of asset summaries.</p>
                *          <p>You can use this operation to do the following:</p>
                *          <ul>
                *             <li>
                *                <p>List assets based on a specific asset model.</p>
                *             </li>
                *             <li>
                *                <p>List top-level assets.</p>
                *             </li>
                *          </ul>
                *          <p>You can't use this operation to list all assets. To retrieve summaries for all of your
                *       assets, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html">ListAssetModels</a> to get all of your asset model IDs. Then, use ListAssets to get all
                *       assets for each asset model.</p>
                */
            listAssets(args: ListAssetsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssetsCommandOutput>;
            listAssets(args: ListAssetsCommandInput, cb: (err: any, data?: ListAssetsCommandOutput) => void): void;
            listAssets(args: ListAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssetsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of associated assets.</p>
                *          <p>You can use this operation to do the following:</p>
                *          <ul>
                *             <li>
                *                <p>List child assets associated to a parent asset by a hierarchy that you specify.</p>
                *             </li>
                *             <li>
                *                <p>List an asset's parent asset.</p>
                *             </li>
                *          </ul>
                */
            listAssociatedAssets(args: ListAssociatedAssetsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssociatedAssetsCommandOutput>;
            listAssociatedAssets(args: ListAssociatedAssetsCommandInput, cb: (err: any, data?: ListAssociatedAssetsCommandOutput) => void): void;
            listAssociatedAssets(args: ListAssociatedAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssociatedAssetsCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
                *       We recommend that you use this operation only with test data, and not in production environments.</p>
                *          </note>
                *          <p>Retrieves a paginated list of bulk import job requests. For more information,
                *     see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ListBulkImportJobs.html">List bulk import jobs (CLI)</a>
                *     in the <i>Amazon Simple Storage Service User Guide</i>.</p>
                */
            listBulkImportJobs(args: ListBulkImportJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListBulkImportJobsCommandOutput>;
            listBulkImportJobs(args: ListBulkImportJobsCommandInput, cb: (err: any, data?: ListBulkImportJobsCommandOutput) => void): void;
            listBulkImportJobs(args: ListBulkImportJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBulkImportJobsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.</p>
                */
            listDashboards(args: ListDashboardsCommandInput, options?: __HttpHandlerOptions): Promise<ListDashboardsCommandOutput>;
            listDashboards(args: ListDashboardsCommandInput, cb: (err: any, data?: ListDashboardsCommandOutput) => void): void;
            listDashboards(args: ListDashboardsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDashboardsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of gateways.</p>
                */
            listGateways(args: ListGatewaysCommandInput, options?: __HttpHandlerOptions): Promise<ListGatewaysCommandOutput>;
            listGateways(args: ListGatewaysCommandInput, cb: (err: any, data?: ListGatewaysCommandOutput) => void): void;
            listGateways(args: ListGatewaysCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListGatewaysCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of IoT SiteWise Monitor portals.</p>
                */
            listPortals(args: ListPortalsCommandInput, options?: __HttpHandlerOptions): Promise<ListPortalsCommandOutput>;
            listPortals(args: ListPortalsCommandInput, cb: (err: any, data?: ListPortalsCommandOutput) => void): void;
            listPortals(args: ListPortalsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPortalsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.</p>
                */
            listProjectAssets(args: ListProjectAssetsCommandInput, options?: __HttpHandlerOptions): Promise<ListProjectAssetsCommandOutput>;
            listProjectAssets(args: ListProjectAssetsCommandInput, cb: (err: any, data?: ListProjectAssetsCommandOutput) => void): void;
            listProjectAssets(args: ListProjectAssetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProjectAssetsCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.</p>
                */
            listProjects(args: ListProjectsCommandInput, options?: __HttpHandlerOptions): Promise<ListProjectsCommandOutput>;
            listProjects(args: ListProjectsCommandInput, cb: (err: any, data?: ListProjectsCommandOutput) => void): void;
            listProjects(args: ListProjectsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProjectsCommandOutput) => void): void;
            /**
                * <p>Retrieves the list of tags for an IoT SiteWise resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Retrieves a paginated list of time series (data streams).</p>
                */
            listTimeSeries(args: ListTimeSeriesCommandInput, options?: __HttpHandlerOptions): Promise<ListTimeSeriesCommandOutput>;
            listTimeSeries(args: ListTimeSeriesCommandInput, cb: (err: any, data?: ListTimeSeriesCommandOutput) => void): void;
            listTimeSeries(args: ListTimeSeriesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTimeSeriesCommandOutput) => void): void;
            /**
                * <p>Sets the default encryption configuration for the Amazon Web Services account. For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in
                *       the <i>IoT SiteWise User Guide</i>.</p>
                */
            putDefaultEncryptionConfiguration(args: PutDefaultEncryptionConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutDefaultEncryptionConfigurationCommandOutput>;
            putDefaultEncryptionConfiguration(args: PutDefaultEncryptionConfigurationCommandInput, cb: (err: any, data?: PutDefaultEncryptionConfigurationCommandOutput) => void): void;
            putDefaultEncryptionConfiguration(args: PutDefaultEncryptionConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutDefaultEncryptionConfigurationCommandOutput) => void): void;
            /**
                * <p>Sets logging options for IoT SiteWise.</p>
                */
            putLoggingOptions(args: PutLoggingOptionsCommandInput, options?: __HttpHandlerOptions): Promise<PutLoggingOptionsCommandOutput>;
            putLoggingOptions(args: PutLoggingOptionsCommandInput, cb: (err: any, data?: PutLoggingOptionsCommandOutput) => void): void;
            putLoggingOptions(args: PutLoggingOptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutLoggingOptionsCommandOutput) => void): void;
            /**
                * <p>Configures storage settings for IoT SiteWise.</p>
                */
            putStorageConfiguration(args: PutStorageConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutStorageConfigurationCommandOutput>;
            putStorageConfiguration(args: PutStorageConfigurationCommandInput, cb: (err: any, data?: PutStorageConfigurationCommandOutput) => void): void;
            putStorageConfiguration(args: PutStorageConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutStorageConfigurationCommandOutput) => void): void;
            /**
                * <p>Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation
                *       updates the tag's value.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes a tag from an IoT SiteWise resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor
                *       portal or project resource.</p>
                */
            updateAccessPolicy(args: UpdateAccessPolicyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAccessPolicyCommandOutput>;
            updateAccessPolicy(args: UpdateAccessPolicyCommandInput, cb: (err: any, data?: UpdateAccessPolicyCommandOutput) => void): void;
            updateAccessPolicy(args: UpdateAccessPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAccessPolicyCommandOutput) => void): void;
            /**
                * <p>Updates an asset's name. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            updateAsset(args: UpdateAssetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAssetCommandOutput>;
            updateAsset(args: UpdateAssetCommandInput, cb: (err: any, data?: UpdateAssetCommandOutput) => void): void;
            updateAsset(args: UpdateAssetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAssetCommandOutput) => void): void;
            /**
                * <p>Updates an asset model and all of the assets that were created from the model. Each asset
                *       created from the model inherits the updated asset model's property and hierarchy definitions.
                *       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                *          <important>
                *             <p>This operation overwrites the existing model with the provided model. To avoid deleting
                *         your asset model's properties or hierarchies, you must include their IDs and definitions in
                *         the updated asset model payload. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a>.</p>
                *             <p>If you remove a property from an asset model, IoT SiteWise deletes all previous data for that
                *         property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every
                *         asset associated with that hierarchy. You can't change the type or data type of an existing
                *         property.</p>
                *          </important>
                */
            updateAssetModel(args: UpdateAssetModelCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAssetModelCommandOutput>;
            updateAssetModel(args: UpdateAssetModelCommandInput, cb: (err: any, data?: UpdateAssetModelCommandOutput) => void): void;
            updateAssetModel(args: UpdateAssetModelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAssetModelCommandOutput) => void): void;
            /**
                * <p>Updates an asset property's alias and notification state.</p>
                *          <important>
                *             <p>This operation overwrites the property's existing alias and notification state. To keep
                *         your existing property's alias or notification state, you must include the existing values
                *         in the UpdateAssetProperty request. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html">DescribeAssetProperty</a>.</p>
                *          </important>
                */
            updateAssetProperty(args: UpdateAssetPropertyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAssetPropertyCommandOutput>;
            updateAssetProperty(args: UpdateAssetPropertyCommandInput, cb: (err: any, data?: UpdateAssetPropertyCommandOutput) => void): void;
            updateAssetProperty(args: UpdateAssetPropertyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAssetPropertyCommandOutput) => void): void;
            /**
                * <p>Updates an IoT SiteWise Monitor dashboard.</p>
                */
            updateDashboard(args: UpdateDashboardCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDashboardCommandOutput>;
            updateDashboard(args: UpdateDashboardCommandInput, cb: (err: any, data?: UpdateDashboardCommandOutput) => void): void;
            updateDashboard(args: UpdateDashboardCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDashboardCommandOutput) => void): void;
            /**
                * <p>Updates a gateway's name.</p>
                */
            updateGateway(args: UpdateGatewayCommandInput, options?: __HttpHandlerOptions): Promise<UpdateGatewayCommandOutput>;
            updateGateway(args: UpdateGatewayCommandInput, cb: (err: any, data?: UpdateGatewayCommandOutput) => void): void;
            updateGateway(args: UpdateGatewayCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateGatewayCommandOutput) => void): void;
            /**
                * <p>Updates a gateway capability configuration or defines a new capability configuration.
                *       Each gateway capability defines data sources for a gateway. A capability configuration
                *       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
                *       the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
                *       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
                */
            updateGatewayCapabilityConfiguration(args: UpdateGatewayCapabilityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateGatewayCapabilityConfigurationCommandOutput>;
            updateGatewayCapabilityConfiguration(args: UpdateGatewayCapabilityConfigurationCommandInput, cb: (err: any, data?: UpdateGatewayCapabilityConfigurationCommandOutput) => void): void;
            updateGatewayCapabilityConfiguration(args: UpdateGatewayCapabilityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateGatewayCapabilityConfigurationCommandOutput) => void): void;
            /**
                * <p>Updates an IoT SiteWise Monitor portal.</p>
                */
            updatePortal(args: UpdatePortalCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePortalCommandOutput>;
            updatePortal(args: UpdatePortalCommandInput, cb: (err: any, data?: UpdatePortalCommandOutput) => void): void;
            updatePortal(args: UpdatePortalCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePortalCommandOutput) => void): void;
            /**
                * <p>Updates an IoT SiteWise Monitor project.</p>
                */
            updateProject(args: UpdateProjectCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProjectCommandOutput>;
            updateProject(args: UpdateProjectCommandInput, cb: (err: any, data?: UpdateProjectCommandOutput) => void): void;
            updateProject(args: UpdateProjectCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProjectCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { AssociateAssetsRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface AssociateAssetsCommandInput extends AssociateAssetsRequest {
    }
    export interface AssociateAssetsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Associates a child asset with the given parent asset through a hierarchy defined in the
        *       parent asset's model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html">Associating assets</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, AssociateAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, AssociateAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new AssociateAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateAssetsCommandInput} for command's `input` shape.
        * @see {@link AssociateAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class AssociateAssetsCommand extends $Command<AssociateAssetsCommandInput, AssociateAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: AssociateAssetsCommandInput;
            constructor(input: AssociateAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateAssetsCommandInput, AssociateAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateTimeSeriesToAssetPropertyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { AssociateTimeSeriesToAssetPropertyRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface AssociateTimeSeriesToAssetPropertyCommandInput extends AssociateTimeSeriesToAssetPropertyRequest {
    }
    export interface AssociateTimeSeriesToAssetPropertyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Associates a time series (data stream) with an asset property.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, AssociateTimeSeriesToAssetPropertyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, AssociateTimeSeriesToAssetPropertyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new AssociateTimeSeriesToAssetPropertyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateTimeSeriesToAssetPropertyCommandInput} for command's `input` shape.
        * @see {@link AssociateTimeSeriesToAssetPropertyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class AssociateTimeSeriesToAssetPropertyCommand extends $Command<AssociateTimeSeriesToAssetPropertyCommandInput, AssociateTimeSeriesToAssetPropertyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: AssociateTimeSeriesToAssetPropertyCommandInput;
            constructor(input: AssociateTimeSeriesToAssetPropertyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateTimeSeriesToAssetPropertyCommandInput, AssociateTimeSeriesToAssetPropertyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchAssociateProjectAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchAssociateProjectAssetsRequest, BatchAssociateProjectAssetsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchAssociateProjectAssetsCommandInput extends BatchAssociateProjectAssetsRequest {
    }
    export interface BatchAssociateProjectAssetsCommandOutput extends BatchAssociateProjectAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>Associates a group (batch) of assets with an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchAssociateProjectAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchAssociateProjectAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchAssociateProjectAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchAssociateProjectAssetsCommandInput} for command's `input` shape.
        * @see {@link BatchAssociateProjectAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchAssociateProjectAssetsCommand extends $Command<BatchAssociateProjectAssetsCommandInput, BatchAssociateProjectAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchAssociateProjectAssetsCommandInput;
            constructor(input: BatchAssociateProjectAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchAssociateProjectAssetsCommandInput, BatchAssociateProjectAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchDisassociateProjectAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchDisassociateProjectAssetsRequest, BatchDisassociateProjectAssetsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchDisassociateProjectAssetsCommandInput extends BatchDisassociateProjectAssetsRequest {
    }
    export interface BatchDisassociateProjectAssetsCommandOutput extends BatchDisassociateProjectAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchDisassociateProjectAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchDisassociateProjectAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchDisassociateProjectAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchDisassociateProjectAssetsCommandInput} for command's `input` shape.
        * @see {@link BatchDisassociateProjectAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchDisassociateProjectAssetsCommand extends $Command<BatchDisassociateProjectAssetsCommandInput, BatchDisassociateProjectAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchDisassociateProjectAssetsCommandInput;
            constructor(input: BatchDisassociateProjectAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchDisassociateProjectAssetsCommandInput, BatchDisassociateProjectAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyAggregatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchGetAssetPropertyAggregatesRequest, BatchGetAssetPropertyAggregatesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchGetAssetPropertyAggregatesCommandInput extends BatchGetAssetPropertyAggregatesRequest {
    }
    export interface BatchGetAssetPropertyAggregatesCommandOutput extends BatchGetAssetPropertyAggregatesResponse, __MetadataBearer {
    }
    /**
        * <p>Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties.
        *     For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying
        *     aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchGetAssetPropertyAggregatesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchGetAssetPropertyAggregatesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchGetAssetPropertyAggregatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchGetAssetPropertyAggregatesCommandInput} for command's `input` shape.
        * @see {@link BatchGetAssetPropertyAggregatesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchGetAssetPropertyAggregatesCommand extends $Command<BatchGetAssetPropertyAggregatesCommandInput, BatchGetAssetPropertyAggregatesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchGetAssetPropertyAggregatesCommandInput;
            constructor(input: BatchGetAssetPropertyAggregatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchGetAssetPropertyAggregatesCommandInput, BatchGetAssetPropertyAggregatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchGetAssetPropertyValueRequest, BatchGetAssetPropertyValueResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchGetAssetPropertyValueCommandInput extends BatchGetAssetPropertyValueRequest {
    }
    export interface BatchGetAssetPropertyValueCommandOutput extends BatchGetAssetPropertyValueResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the current value for one or more asset properties. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying
        *     current values</a> in the <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchGetAssetPropertyValueCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchGetAssetPropertyValueCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchGetAssetPropertyValueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchGetAssetPropertyValueCommandInput} for command's `input` shape.
        * @see {@link BatchGetAssetPropertyValueCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchGetAssetPropertyValueCommand extends $Command<BatchGetAssetPropertyValueCommandInput, BatchGetAssetPropertyValueCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchGetAssetPropertyValueCommandInput;
            constructor(input: BatchGetAssetPropertyValueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchGetAssetPropertyValueCommandInput, BatchGetAssetPropertyValueCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueHistoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchGetAssetPropertyValueHistoryRequest, BatchGetAssetPropertyValueHistoryResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchGetAssetPropertyValueHistoryCommandInput extends BatchGetAssetPropertyValueHistoryRequest {
    }
    export interface BatchGetAssetPropertyValueHistoryCommandOutput extends BatchGetAssetPropertyValueHistoryResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the historical values for one or more asset properties. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying
        *     historical values</a> in the <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchGetAssetPropertyValueHistoryCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchGetAssetPropertyValueHistoryCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchGetAssetPropertyValueHistoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchGetAssetPropertyValueHistoryCommandInput} for command's `input` shape.
        * @see {@link BatchGetAssetPropertyValueHistoryCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchGetAssetPropertyValueHistoryCommand extends $Command<BatchGetAssetPropertyValueHistoryCommandInput, BatchGetAssetPropertyValueHistoryCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchGetAssetPropertyValueHistoryCommandInput;
            constructor(input: BatchGetAssetPropertyValueHistoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchGetAssetPropertyValueHistoryCommandInput, BatchGetAssetPropertyValueHistoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchPutAssetPropertyValueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { BatchPutAssetPropertyValueRequest, BatchPutAssetPropertyValueResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface BatchPutAssetPropertyValueCommandInput extends BatchPutAssetPropertyValueRequest {
    }
    export interface BatchPutAssetPropertyValueCommandOutput extends BatchPutAssetPropertyValueResponse, __MetadataBearer {
    }
    /**
        * <p>Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value
        *       (TQV) data point. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html">Ingesting data using the API</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        *          <important>
        *             <p>With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more
        *         than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps
        *         outside of the inclusive range of [-7 days, +10 minutes] and returns a
        *           <code>TimestampOutOfRangeException</code> error.</p>
        *             <p>For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer
        *         TQV has a different quality. For example, if you store a TQV <code>{T1, GOOD, V1}</code>,
        *         then storing <code>{T1, GOOD, V2}</code> replaces the existing TQV.</p>
        *          </important>
        *          <p>IoT SiteWise authorizes access to each <code>BatchPutAssetPropertyValue</code> entry individually.
        *       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action">BatchPutAssetPropertyValue authorization</a> in the
        *       <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, BatchPutAssetPropertyValueCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, BatchPutAssetPropertyValueCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new BatchPutAssetPropertyValueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link BatchPutAssetPropertyValueCommandInput} for command's `input` shape.
        * @see {@link BatchPutAssetPropertyValueCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class BatchPutAssetPropertyValueCommand extends $Command<BatchPutAssetPropertyValueCommandInput, BatchPutAssetPropertyValueCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: BatchPutAssetPropertyValueCommandInput;
            constructor(input: BatchPutAssetPropertyValueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchPutAssetPropertyValueCommandInput, BatchPutAssetPropertyValueCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateAccessPolicyRequest, CreateAccessPolicyResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateAccessPolicyCommandInput extends CreateAccessPolicyRequest {
    }
    export interface CreateAccessPolicyCommandOutput extends CreateAccessPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an access policy that grants the specified identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or
        *       IAM user) access to the specified IoT SiteWise Monitor portal or project resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateAccessPolicyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateAccessPolicyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link CreateAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateAccessPolicyCommand extends $Command<CreateAccessPolicyCommandInput, CreateAccessPolicyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateAccessPolicyCommandInput;
            constructor(input: CreateAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAccessPolicyCommandInput, CreateAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateAssetRequest, CreateAssetResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateAssetCommandInput extends CreateAssetRequest {
    }
    export interface CreateAssetCommandOutput extends CreateAssetResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an asset from an existing asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html">Creating assets</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateAssetCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateAssetCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAssetCommandInput} for command's `input` shape.
        * @see {@link CreateAssetCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateAssetCommand extends $Command<CreateAssetCommandInput, CreateAssetCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateAssetCommandInput;
            constructor(input: CreateAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAssetCommandInput, CreateAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetModelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateAssetModelRequest, CreateAssetModelResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateAssetModelCommandInput extends CreateAssetModelRequest {
    }
    export interface CreateAssetModelCommandOutput extends CreateAssetModelResponse, __MetadataBearer {
    }
    /**
        * <p>Creates an asset model from specified property and hierarchy definitions. You create
        *       assets from asset models. With asset models, you can easily create assets of the same type
        *       that have standardized definitions. Each asset created from a model inherits the asset model's
        *       property and hierarchy definitions. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html">Defining asset models</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateAssetModelCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateAssetModelCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateAssetModelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAssetModelCommandInput} for command's `input` shape.
        * @see {@link CreateAssetModelCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateAssetModelCommand extends $Command<CreateAssetModelCommandInput, CreateAssetModelCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateAssetModelCommandInput;
            constructor(input: CreateAssetModelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAssetModelCommandInput, CreateAssetModelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateBulkImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateBulkImportJobRequest, CreateBulkImportJobResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateBulkImportJobCommandInput extends CreateBulkImportJobRequest {
    }
    export interface CreateBulkImportJobCommandOutput extends CreateBulkImportJobResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
        *       We recommend that you use this operation only with test data, and not in production environments.</p>
        *          </note>
        *          <p>Defines a job to ingest data to IoT SiteWise from Amazon S3. For more information,
        *   see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/CreateBulkImportJob.html">Create a bulk import job (CLI)</a>
        *   in the <i>Amazon Simple Storage Service User Guide</i>.</p>
        *          <important>
        *             <p>You must enable IoT SiteWise to export data to Amazon S3 before you create a bulk import job.
        *       For more information about how to configure storage settings,
        *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_PutStorageConfiguration.html">PutStorageConfiguration</a>.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateBulkImportJobCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateBulkImportJobCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateBulkImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBulkImportJobCommandInput} for command's `input` shape.
        * @see {@link CreateBulkImportJobCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateBulkImportJobCommand extends $Command<CreateBulkImportJobCommandInput, CreateBulkImportJobCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateBulkImportJobCommandInput;
            constructor(input: CreateBulkImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBulkImportJobCommandInput, CreateBulkImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateDashboardCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateDashboardRequest, CreateDashboardResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateDashboardCommandInput extends CreateDashboardRequest {
    }
    export interface CreateDashboardCommandOutput extends CreateDashboardResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a dashboard in an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateDashboardCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateDashboardCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateDashboardCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateDashboardCommandInput} for command's `input` shape.
        * @see {@link CreateDashboardCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateDashboardCommand extends $Command<CreateDashboardCommandInput, CreateDashboardCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateDashboardCommandInput;
            constructor(input: CreateDashboardCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDashboardCommandInput, CreateDashboardCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateGatewayCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateGatewayRequest, CreateGatewayResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateGatewayCommandInput extends CreateGatewayRequest {
    }
    export interface CreateGatewayCommandOutput extends CreateGatewayResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a gateway, which is a virtual or edge device that delivers industrial data streams
        *       from local servers to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateGatewayCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateGatewayCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateGatewayCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateGatewayCommandInput} for command's `input` shape.
        * @see {@link CreateGatewayCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateGatewayCommand extends $Command<CreateGatewayCommandInput, CreateGatewayCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateGatewayCommandInput;
            constructor(input: CreateGatewayCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateGatewayCommandInput, CreateGatewayCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreatePortalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreatePortalRequest, CreatePortalResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreatePortalCommandInput extends CreatePortalRequest {
    }
    export interface CreatePortalCommandOutput extends CreatePortalResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses Amazon Web Services SSO or IAM
        *       to authenticate portal users and manage user permissions.</p>
        *          <note>
        *             <p>Before you can sign in to a new portal, you must add at least one identity to that
        *         portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins">Adding or removing portal
        *           administrators</a> in the <i>IoT SiteWise User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreatePortalCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreatePortalCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreatePortalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreatePortalCommandInput} for command's `input` shape.
        * @see {@link CreatePortalCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreatePortalCommand extends $Command<CreatePortalCommandInput, CreatePortalCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreatePortalCommandInput;
            constructor(input: CreatePortalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreatePortalCommandInput, CreatePortalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateProjectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { CreateProjectRequest, CreateProjectResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface CreateProjectCommandInput extends CreateProjectRequest {
    }
    export interface CreateProjectCommandOutput extends CreateProjectResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a project in the specified portal.</p>
        *          <note>
        *             <p>Make sure that the project name and description don't contain confidential
        *         information.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, CreateProjectCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, CreateProjectCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new CreateProjectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateProjectCommandInput} for command's `input` shape.
        * @see {@link CreateProjectCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class CreateProjectCommand extends $Command<CreateProjectCommandInput, CreateProjectCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: CreateProjectCommandInput;
            constructor(input: CreateProjectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProjectCommandInput, CreateProjectCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteAccessPolicyRequest, DeleteAccessPolicyResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteAccessPolicyCommandInput extends DeleteAccessPolicyRequest {
    }
    export interface DeleteAccessPolicyCommandOutput extends DeleteAccessPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an access policy that grants the specified identity access to the specified
        *       IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor
        *       resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteAccessPolicyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteAccessPolicyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteAccessPolicyCommand extends $Command<DeleteAccessPolicyCommandInput, DeleteAccessPolicyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteAccessPolicyCommandInput;
            constructor(input: DeleteAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessPolicyCommandInput, DeleteAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteAssetRequest, DeleteAssetResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteAssetCommandInput extends DeleteAssetRequest {
    }
    export interface DeleteAssetCommandOutput extends DeleteAssetResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an asset. This action can't be undone. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and
        *         models</a> in the <i>IoT SiteWise User Guide</i>. </p>
        *          <note>
        *             <p>You can't delete an asset that's associated to another asset. For more information, see
        *           <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html">DisassociateAssets</a>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteAssetCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteAssetCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssetCommandInput} for command's `input` shape.
        * @see {@link DeleteAssetCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteAssetCommand extends $Command<DeleteAssetCommandInput, DeleteAssetCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteAssetCommandInput;
            constructor(input: DeleteAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssetCommandInput, DeleteAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetModelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteAssetModelRequest, DeleteAssetModelResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteAssetModelCommandInput extends DeleteAssetModelRequest {
    }
    export interface DeleteAssetModelCommandOutput extends DeleteAssetModelResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an asset model. This action can't be undone. You must delete all assets created
        *       from an asset model before you can delete the model. Also, you can't delete an asset model if
        *       a parent asset model exists that contains a property formula expression that depends on the
        *       asset model that you want to delete. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and models</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteAssetModelCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteAssetModelCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteAssetModelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAssetModelCommandInput} for command's `input` shape.
        * @see {@link DeleteAssetModelCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteAssetModelCommand extends $Command<DeleteAssetModelCommandInput, DeleteAssetModelCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteAssetModelCommandInput;
            constructor(input: DeleteAssetModelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAssetModelCommandInput, DeleteAssetModelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteDashboardCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteDashboardRequest, DeleteDashboardResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteDashboardCommandInput extends DeleteDashboardRequest {
    }
    export interface DeleteDashboardCommandOutput extends DeleteDashboardResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a dashboard from IoT SiteWise Monitor.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteDashboardCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteDashboardCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteDashboardCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteDashboardCommandInput} for command's `input` shape.
        * @see {@link DeleteDashboardCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteDashboardCommand extends $Command<DeleteDashboardCommandInput, DeleteDashboardCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteDashboardCommandInput;
            constructor(input: DeleteDashboardCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteDashboardCommandInput, DeleteDashboardCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteGatewayCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteGatewayRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteGatewayCommandInput extends DeleteGatewayRequest {
    }
    export interface DeleteGatewayCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway's files remain
        *       in your gateway's file system.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteGatewayCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteGatewayCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteGatewayCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteGatewayCommandInput} for command's `input` shape.
        * @see {@link DeleteGatewayCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteGatewayCommand extends $Command<DeleteGatewayCommandInput, DeleteGatewayCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteGatewayCommandInput;
            constructor(input: DeleteGatewayCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteGatewayCommandInput, DeleteGatewayCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeletePortalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeletePortalRequest, DeletePortalResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeletePortalCommandInput extends DeletePortalRequest {
    }
    export interface DeletePortalCommandOutput extends DeletePortalResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a portal from IoT SiteWise Monitor.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeletePortalCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeletePortalCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeletePortalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePortalCommandInput} for command's `input` shape.
        * @see {@link DeletePortalCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeletePortalCommand extends $Command<DeletePortalCommandInput, DeletePortalCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeletePortalCommandInput;
            constructor(input: DeletePortalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePortalCommandInput, DeletePortalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteProjectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteProjectRequest, DeleteProjectResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteProjectCommandInput extends DeleteProjectRequest {
    }
    export interface DeleteProjectCommandOutput extends DeleteProjectResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a project from IoT SiteWise Monitor.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteProjectCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteProjectCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteProjectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteProjectCommandInput} for command's `input` shape.
        * @see {@link DeleteProjectCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteProjectCommand extends $Command<DeleteProjectCommandInput, DeleteProjectCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteProjectCommandInput;
            constructor(input: DeleteProjectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteProjectCommandInput, DeleteProjectCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteTimeSeriesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DeleteTimeSeriesRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DeleteTimeSeriesCommandInput extends DeleteTimeSeriesRequest {
    }
    export interface DeleteTimeSeriesCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes a time series (data stream). If you delete a time series that's associated with an
        *       asset property, the asset property still exists, but the time series will no longer be
        *       associated with this asset property.</p>
        *          <p>To identify a time series, do one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>If the time series isn't associated with an asset property,
        *           specify the <code>alias</code> of the time series.</p>
        *             </li>
        *             <li>
        *                <p>If the time series is associated with an asset property,
        *           specify one of the following: </p>
        *                <ul>
        *                   <li>
        *                      <p>The <code>alias</code> of the time series.</p>
        *                   </li>
        *                   <li>
        *                      <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DeleteTimeSeriesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DeleteTimeSeriesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DeleteTimeSeriesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteTimeSeriesCommandInput} for command's `input` shape.
        * @see {@link DeleteTimeSeriesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DeleteTimeSeriesCommand extends $Command<DeleteTimeSeriesCommandInput, DeleteTimeSeriesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DeleteTimeSeriesCommandInput;
            constructor(input: DeleteTimeSeriesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteTimeSeriesCommandInput, DeleteTimeSeriesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeAccessPolicyRequest, DescribeAccessPolicyResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeAccessPolicyCommandInput extends DescribeAccessPolicyRequest {
    }
    export interface DescribeAccessPolicyCommandOutput extends DescribeAccessPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Describes an access policy, which specifies an identity's access to an IoT SiteWise Monitor portal or
        *       project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeAccessPolicyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeAccessPolicyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link DescribeAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeAccessPolicyCommand extends $Command<DescribeAccessPolicyCommandInput, DescribeAccessPolicyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeAccessPolicyCommandInput;
            constructor(input: DescribeAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAccessPolicyCommandInput, DescribeAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeAssetRequest, DescribeAssetResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeAssetCommandInput extends DescribeAssetRequest {
    }
    export interface DescribeAssetCommandOutput extends DescribeAssetResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about an asset.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeAssetCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeAssetCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssetCommandInput} for command's `input` shape.
        * @see {@link DescribeAssetCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeAssetCommand extends $Command<DescribeAssetCommandInput, DescribeAssetCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeAssetCommandInput;
            constructor(input: DescribeAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssetCommandInput, DescribeAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetModelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeAssetModelRequest, DescribeAssetModelResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeAssetModelCommandInput extends DescribeAssetModelRequest {
    }
    export interface DescribeAssetModelCommandOutput extends DescribeAssetModelResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about an asset model.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeAssetModelCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeAssetModelCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeAssetModelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssetModelCommandInput} for command's `input` shape.
        * @see {@link DescribeAssetModelCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeAssetModelCommand extends $Command<DescribeAssetModelCommandInput, DescribeAssetModelCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeAssetModelCommandInput;
            constructor(input: DescribeAssetModelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssetModelCommandInput, DescribeAssetModelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetPropertyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeAssetPropertyRequest, DescribeAssetPropertyResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeAssetPropertyCommandInput extends DescribeAssetPropertyRequest {
    }
    export interface DescribeAssetPropertyCommandOutput extends DescribeAssetPropertyResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about an asset property.</p>
        *          <note>
        *             <p>When you call this operation for an attribute property, this response includes the
        *         default attribute value that you define in the asset model. If you update the default value
        *         in the model, this operation's response includes the new default value.</p>
        *          </note>
        *          <p>This operation doesn't return the value of the asset property. To get the value of an
        *       asset property, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html">GetAssetPropertyValue</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeAssetPropertyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeAssetPropertyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeAssetPropertyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAssetPropertyCommandInput} for command's `input` shape.
        * @see {@link DescribeAssetPropertyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeAssetPropertyCommand extends $Command<DescribeAssetPropertyCommandInput, DescribeAssetPropertyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeAssetPropertyCommandInput;
            constructor(input: DescribeAssetPropertyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAssetPropertyCommandInput, DescribeAssetPropertyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeBulkImportJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeBulkImportJobRequest, DescribeBulkImportJobResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeBulkImportJobCommandInput extends DescribeBulkImportJobRequest {
    }
    export interface DescribeBulkImportJobCommandOutput extends DescribeBulkImportJobResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
        *       We recommend that you use this operation only with test data, and not in production environments.</p>
        *          </note>
        *          <p>Retrieves information about a bulk import job request. For more information,
        *     see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/DescribeBulkImportJob.html">Describe a bulk import job (CLI)</a>
        *     in the <i>Amazon Simple Storage Service User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeBulkImportJobCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeBulkImportJobCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeBulkImportJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeBulkImportJobCommandInput} for command's `input` shape.
        * @see {@link DescribeBulkImportJobCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeBulkImportJobCommand extends $Command<DescribeBulkImportJobCommandInput, DescribeBulkImportJobCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeBulkImportJobCommandInput;
            constructor(input: DescribeBulkImportJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeBulkImportJobCommandInput, DescribeBulkImportJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDashboardCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeDashboardRequest, DescribeDashboardResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeDashboardCommandInput extends DescribeDashboardRequest {
    }
    export interface DescribeDashboardCommandOutput extends DescribeDashboardResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a dashboard.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeDashboardCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeDashboardCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeDashboardCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDashboardCommandInput} for command's `input` shape.
        * @see {@link DescribeDashboardCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeDashboardCommand extends $Command<DescribeDashboardCommandInput, DescribeDashboardCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeDashboardCommandInput;
            constructor(input: DescribeDashboardCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDashboardCommandInput, DescribeDashboardCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDefaultEncryptionConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeDefaultEncryptionConfigurationRequest, DescribeDefaultEncryptionConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeDefaultEncryptionConfigurationCommandInput extends DescribeDefaultEncryptionConfigurationRequest {
    }
    export interface DescribeDefaultEncryptionConfigurationCommandOutput extends DescribeDefaultEncryptionConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about the default encryption configuration for the Amazon Web Services account in
        *       the default or specified Region. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeDefaultEncryptionConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeDefaultEncryptionConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeDefaultEncryptionConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDefaultEncryptionConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeDefaultEncryptionConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeDefaultEncryptionConfigurationCommand extends $Command<DescribeDefaultEncryptionConfigurationCommandInput, DescribeDefaultEncryptionConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeDefaultEncryptionConfigurationCommandInput;
            constructor(input: DescribeDefaultEncryptionConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDefaultEncryptionConfigurationCommandInput, DescribeDefaultEncryptionConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCapabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeGatewayCapabilityConfigurationRequest, DescribeGatewayCapabilityConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeGatewayCapabilityConfigurationCommandInput extends DescribeGatewayCapabilityConfigurationRequest {
    }
    export interface DescribeGatewayCapabilityConfigurationCommandOutput extends DescribeGatewayCapabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a gateway capability configuration.
        *       Each gateway capability defines data sources for a gateway. A capability configuration
        *       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
        *       the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
        *       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeGatewayCapabilityConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeGatewayCapabilityConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeGatewayCapabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeGatewayCapabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeGatewayCapabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeGatewayCapabilityConfigurationCommand extends $Command<DescribeGatewayCapabilityConfigurationCommandInput, DescribeGatewayCapabilityConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeGatewayCapabilityConfigurationCommandInput;
            constructor(input: DescribeGatewayCapabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeGatewayCapabilityConfigurationCommandInput, DescribeGatewayCapabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeGatewayRequest, DescribeGatewayResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeGatewayCommandInput extends DescribeGatewayRequest {
    }
    export interface DescribeGatewayCommandOutput extends DescribeGatewayResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a gateway.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeGatewayCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeGatewayCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeGatewayCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeGatewayCommandInput} for command's `input` shape.
        * @see {@link DescribeGatewayCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeGatewayCommand extends $Command<DescribeGatewayCommandInput, DescribeGatewayCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeGatewayCommandInput;
            constructor(input: DescribeGatewayCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeGatewayCommandInput, DescribeGatewayCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeLoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeLoggingOptionsRequest, DescribeLoggingOptionsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeLoggingOptionsCommandInput extends DescribeLoggingOptionsRequest {
    }
    export interface DescribeLoggingOptionsCommandOutput extends DescribeLoggingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the current IoT SiteWise logging options.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeLoggingOptionsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeLoggingOptionsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeLoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeLoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link DescribeLoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeLoggingOptionsCommand extends $Command<DescribeLoggingOptionsCommandInput, DescribeLoggingOptionsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeLoggingOptionsCommandInput;
            constructor(input: DescribeLoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeLoggingOptionsCommandInput, DescribeLoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribePortalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribePortalRequest, DescribePortalResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribePortalCommandInput extends DescribePortalRequest {
    }
    export interface DescribePortalCommandOutput extends DescribePortalResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a portal.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribePortalCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribePortalCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribePortalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribePortalCommandInput} for command's `input` shape.
        * @see {@link DescribePortalCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribePortalCommand extends $Command<DescribePortalCommandInput, DescribePortalCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribePortalCommandInput;
            constructor(input: DescribePortalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePortalCommandInput, DescribePortalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeProjectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeProjectRequest, DescribeProjectResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeProjectCommandInput extends DescribeProjectRequest {
    }
    export interface DescribeProjectCommandOutput extends DescribeProjectResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeProjectCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeProjectCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeProjectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeProjectCommandInput} for command's `input` shape.
        * @see {@link DescribeProjectCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeProjectCommand extends $Command<DescribeProjectCommandInput, DescribeProjectCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeProjectCommandInput;
            constructor(input: DescribeProjectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeProjectCommandInput, DescribeProjectCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeStorageConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeStorageConfigurationRequest, DescribeStorageConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeStorageConfigurationCommandInput extends DescribeStorageConfigurationRequest {
    }
    export interface DescribeStorageConfigurationCommandOutput extends DescribeStorageConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about the storage configuration for IoT SiteWise.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeStorageConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeStorageConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeStorageConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeStorageConfigurationCommandInput} for command's `input` shape.
        * @see {@link DescribeStorageConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeStorageConfigurationCommand extends $Command<DescribeStorageConfigurationCommandInput, DescribeStorageConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeStorageConfigurationCommandInput;
            constructor(input: DescribeStorageConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeStorageConfigurationCommandInput, DescribeStorageConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeTimeSeriesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DescribeTimeSeriesRequest, DescribeTimeSeriesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DescribeTimeSeriesCommandInput extends DescribeTimeSeriesRequest {
    }
    export interface DescribeTimeSeriesCommandOutput extends DescribeTimeSeriesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves information about a time series (data stream).</p>
        *          <p>To identify a time series, do one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>If the time series isn't associated with an asset property,
        *           specify the <code>alias</code> of the time series.</p>
        *             </li>
        *             <li>
        *                <p>If the time series is associated with an asset property,
        *           specify one of the following: </p>
        *                <ul>
        *                   <li>
        *                      <p>The <code>alias</code> of the time series.</p>
        *                   </li>
        *                   <li>
        *                      <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DescribeTimeSeriesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DescribeTimeSeriesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DescribeTimeSeriesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeTimeSeriesCommandInput} for command's `input` shape.
        * @see {@link DescribeTimeSeriesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DescribeTimeSeriesCommand extends $Command<DescribeTimeSeriesCommandInput, DescribeTimeSeriesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DescribeTimeSeriesCommandInput;
            constructor(input: DescribeTimeSeriesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeTimeSeriesCommandInput, DescribeTimeSeriesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DisassociateAssetsRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DisassociateAssetsCommandInput extends DisassociateAssetsRequest {
    }
    export interface DisassociateAssetsCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disassociates a child asset from the given parent asset through a hierarchy defined in the
        *       parent asset's model.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DisassociateAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DisassociateAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DisassociateAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateAssetsCommandInput} for command's `input` shape.
        * @see {@link DisassociateAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DisassociateAssetsCommand extends $Command<DisassociateAssetsCommandInput, DisassociateAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DisassociateAssetsCommandInput;
            constructor(input: DisassociateAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateAssetsCommandInput, DisassociateAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateTimeSeriesFromAssetPropertyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { DisassociateTimeSeriesFromAssetPropertyRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface DisassociateTimeSeriesFromAssetPropertyCommandInput extends DisassociateTimeSeriesFromAssetPropertyRequest {
    }
    export interface DisassociateTimeSeriesFromAssetPropertyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Disassociates a time series (data stream) from an asset property.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, DisassociateTimeSeriesFromAssetPropertyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, DisassociateTimeSeriesFromAssetPropertyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new DisassociateTimeSeriesFromAssetPropertyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DisassociateTimeSeriesFromAssetPropertyCommandInput} for command's `input` shape.
        * @see {@link DisassociateTimeSeriesFromAssetPropertyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class DisassociateTimeSeriesFromAssetPropertyCommand extends $Command<DisassociateTimeSeriesFromAssetPropertyCommandInput, DisassociateTimeSeriesFromAssetPropertyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: DisassociateTimeSeriesFromAssetPropertyCommandInput;
            constructor(input: DisassociateTimeSeriesFromAssetPropertyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisassociateTimeSeriesFromAssetPropertyCommandInput, DisassociateTimeSeriesFromAssetPropertyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyAggregatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { GetAssetPropertyAggregatesRequest, GetAssetPropertyAggregatesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface GetAssetPropertyAggregatesCommandInput extends GetAssetPropertyAggregatesRequest {
    }
    export interface GetAssetPropertyAggregatesCommandOutput extends GetAssetPropertyAggregatesResponse, __MetadataBearer {
    }
    /**
        * <p>Gets aggregated values for an asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying
        *         aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, GetAssetPropertyAggregatesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, GetAssetPropertyAggregatesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new GetAssetPropertyAggregatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAssetPropertyAggregatesCommandInput} for command's `input` shape.
        * @see {@link GetAssetPropertyAggregatesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class GetAssetPropertyAggregatesCommand extends $Command<GetAssetPropertyAggregatesCommandInput, GetAssetPropertyAggregatesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: GetAssetPropertyAggregatesCommandInput;
            constructor(input: GetAssetPropertyAggregatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAssetPropertyAggregatesCommandInput, GetAssetPropertyAggregatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { GetAssetPropertyValueRequest, GetAssetPropertyValueResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface GetAssetPropertyValueCommandInput extends GetAssetPropertyValueRequest {
    }
    export interface GetAssetPropertyValueCommandOutput extends GetAssetPropertyValueResponse, __MetadataBearer {
    }
    /**
        * <p>Gets an asset property's current value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying
        *         current values</a> in the <i>IoT SiteWise User Guide</i>.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, GetAssetPropertyValueCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, GetAssetPropertyValueCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new GetAssetPropertyValueCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAssetPropertyValueCommandInput} for command's `input` shape.
        * @see {@link GetAssetPropertyValueCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class GetAssetPropertyValueCommand extends $Command<GetAssetPropertyValueCommandInput, GetAssetPropertyValueCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: GetAssetPropertyValueCommandInput;
            constructor(input: GetAssetPropertyValueCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAssetPropertyValueCommandInput, GetAssetPropertyValueCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueHistoryCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { GetAssetPropertyValueHistoryRequest, GetAssetPropertyValueHistoryResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface GetAssetPropertyValueHistoryCommandInput extends GetAssetPropertyValueHistoryRequest {
    }
    export interface GetAssetPropertyValueHistoryCommandOutput extends GetAssetPropertyValueHistoryResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the history of an asset property's values. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying
        *         historical values</a> in the <i>IoT SiteWise User Guide</i>.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, GetAssetPropertyValueHistoryCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, GetAssetPropertyValueHistoryCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new GetAssetPropertyValueHistoryCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAssetPropertyValueHistoryCommandInput} for command's `input` shape.
        * @see {@link GetAssetPropertyValueHistoryCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class GetAssetPropertyValueHistoryCommand extends $Command<GetAssetPropertyValueHistoryCommandInput, GetAssetPropertyValueHistoryCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: GetAssetPropertyValueHistoryCommandInput;
            constructor(input: GetAssetPropertyValueHistoryCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAssetPropertyValueHistoryCommandInput, GetAssetPropertyValueHistoryCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetInterpolatedAssetPropertyValuesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { GetInterpolatedAssetPropertyValuesRequest, GetInterpolatedAssetPropertyValuesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface GetInterpolatedAssetPropertyValuesCommandInput extends GetInterpolatedAssetPropertyValuesRequest {
    }
    export interface GetInterpolatedAssetPropertyValuesCommandOutput extends GetInterpolatedAssetPropertyValuesResponse, __MetadataBearer {
    }
    /**
        * <p>Get interpolated values for an asset property for a specified time interval, during a
        *       period of time. If your time series is missing data points during the specified time interval,
        *       you can use interpolation to estimate the missing data.</p>
        *          <p>For example, you can use this operation to return the interpolated temperature values for
        *       a wind turbine every 24 hours over a duration of 7 days.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, GetInterpolatedAssetPropertyValuesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, GetInterpolatedAssetPropertyValuesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new GetInterpolatedAssetPropertyValuesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetInterpolatedAssetPropertyValuesCommandInput} for command's `input` shape.
        * @see {@link GetInterpolatedAssetPropertyValuesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class GetInterpolatedAssetPropertyValuesCommand extends $Command<GetInterpolatedAssetPropertyValuesCommandInput, GetInterpolatedAssetPropertyValuesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: GetInterpolatedAssetPropertyValuesCommandInput;
            constructor(input: GetInterpolatedAssetPropertyValuesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetInterpolatedAssetPropertyValuesCommandInput, GetInterpolatedAssetPropertyValuesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAccessPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListAccessPoliciesRequest, ListAccessPoliciesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListAccessPoliciesCommandInput extends ListAccessPoliciesRequest {
    }
    export interface ListAccessPoliciesCommandOutput extends ListAccessPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of access policies for an identity (an Amazon Web Services SSO user, an Amazon Web Services SSO
        *       group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListAccessPoliciesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListAccessPoliciesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListAccessPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccessPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListAccessPoliciesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListAccessPoliciesCommand extends $Command<ListAccessPoliciesCommandInput, ListAccessPoliciesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListAccessPoliciesCommandInput;
            constructor(input: ListAccessPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccessPoliciesCommandInput, ListAccessPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetModelsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListAssetModelsRequest, ListAssetModelsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListAssetModelsCommandInput extends ListAssetModelsRequest {
    }
    export interface ListAssetModelsCommandOutput extends ListAssetModelsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of summaries of all asset models.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListAssetModelsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListAssetModelsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListAssetModelsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssetModelsCommandInput} for command's `input` shape.
        * @see {@link ListAssetModelsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListAssetModelsCommand extends $Command<ListAssetModelsCommandInput, ListAssetModelsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListAssetModelsCommandInput;
            constructor(input: ListAssetModelsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssetModelsCommandInput, ListAssetModelsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetRelationshipsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListAssetRelationshipsRequest, ListAssetRelationshipsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListAssetRelationshipsCommandInput extends ListAssetRelationshipsRequest {
    }
    export interface ListAssetRelationshipsCommandOutput extends ListAssetRelationshipsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of asset relationships for an asset. You can use this operation
        *       to identify an asset's root asset and all associated assets between that asset and its
        *       root.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListAssetRelationshipsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListAssetRelationshipsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListAssetRelationshipsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssetRelationshipsCommandInput} for command's `input` shape.
        * @see {@link ListAssetRelationshipsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListAssetRelationshipsCommand extends $Command<ListAssetRelationshipsCommandInput, ListAssetRelationshipsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListAssetRelationshipsCommandInput;
            constructor(input: ListAssetRelationshipsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssetRelationshipsCommandInput, ListAssetRelationshipsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListAssetsRequest, ListAssetsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListAssetsCommandInput extends ListAssetsRequest {
    }
    export interface ListAssetsCommandOutput extends ListAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of asset summaries.</p>
        *          <p>You can use this operation to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>List assets based on a specific asset model.</p>
        *             </li>
        *             <li>
        *                <p>List top-level assets.</p>
        *             </li>
        *          </ul>
        *          <p>You can't use this operation to list all assets. To retrieve summaries for all of your
        *       assets, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html">ListAssetModels</a> to get all of your asset model IDs. Then, use ListAssets to get all
        *       assets for each asset model.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssetsCommandInput} for command's `input` shape.
        * @see {@link ListAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListAssetsCommand extends $Command<ListAssetsCommandInput, ListAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListAssetsCommandInput;
            constructor(input: ListAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssetsCommandInput, ListAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssociatedAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListAssociatedAssetsRequest, ListAssociatedAssetsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListAssociatedAssetsCommandInput extends ListAssociatedAssetsRequest {
    }
    export interface ListAssociatedAssetsCommandOutput extends ListAssociatedAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of associated assets.</p>
        *          <p>You can use this operation to do the following:</p>
        *          <ul>
        *             <li>
        *                <p>List child assets associated to a parent asset by a hierarchy that you specify.</p>
        *             </li>
        *             <li>
        *                <p>List an asset's parent asset.</p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListAssociatedAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListAssociatedAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListAssociatedAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAssociatedAssetsCommandInput} for command's `input` shape.
        * @see {@link ListAssociatedAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListAssociatedAssetsCommand extends $Command<ListAssociatedAssetsCommandInput, ListAssociatedAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListAssociatedAssetsCommandInput;
            constructor(input: ListAssociatedAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAssociatedAssetsCommandInput, ListAssociatedAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListBulkImportJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListBulkImportJobsRequest, ListBulkImportJobsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListBulkImportJobsCommandInput extends ListBulkImportJobsRequest {
    }
    export interface ListBulkImportJobsCommandOutput extends ListBulkImportJobsResponse, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This API operation is in preview release for IoT SiteWise and is subject to change.
        *       We recommend that you use this operation only with test data, and not in production environments.</p>
        *          </note>
        *          <p>Retrieves a paginated list of bulk import job requests. For more information,
        *     see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ListBulkImportJobs.html">List bulk import jobs (CLI)</a>
        *     in the <i>Amazon Simple Storage Service User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListBulkImportJobsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListBulkImportJobsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListBulkImportJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListBulkImportJobsCommandInput} for command's `input` shape.
        * @see {@link ListBulkImportJobsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListBulkImportJobsCommand extends $Command<ListBulkImportJobsCommandInput, ListBulkImportJobsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListBulkImportJobsCommandInput;
            constructor(input: ListBulkImportJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListBulkImportJobsCommandInput, ListBulkImportJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListDashboardsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListDashboardsRequest, ListDashboardsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListDashboardsCommandInput extends ListDashboardsRequest {
    }
    export interface ListDashboardsCommandOutput extends ListDashboardsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListDashboardsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListDashboardsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListDashboardsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListDashboardsCommandInput} for command's `input` shape.
        * @see {@link ListDashboardsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListDashboardsCommand extends $Command<ListDashboardsCommandInput, ListDashboardsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListDashboardsCommandInput;
            constructor(input: ListDashboardsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListDashboardsCommandInput, ListDashboardsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListGatewaysCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListGatewaysRequest, ListGatewaysResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListGatewaysCommandInput extends ListGatewaysRequest {
    }
    export interface ListGatewaysCommandOutput extends ListGatewaysResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of gateways.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListGatewaysCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListGatewaysCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListGatewaysCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListGatewaysCommandInput} for command's `input` shape.
        * @see {@link ListGatewaysCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListGatewaysCommand extends $Command<ListGatewaysCommandInput, ListGatewaysCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListGatewaysCommandInput;
            constructor(input: ListGatewaysCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListGatewaysCommandInput, ListGatewaysCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListPortalsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListPortalsRequest, ListPortalsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListPortalsCommandInput extends ListPortalsRequest {
    }
    export interface ListPortalsCommandOutput extends ListPortalsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of IoT SiteWise Monitor portals.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListPortalsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListPortalsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListPortalsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListPortalsCommandInput} for command's `input` shape.
        * @see {@link ListPortalsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListPortalsCommand extends $Command<ListPortalsCommandInput, ListPortalsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListPortalsCommandInput;
            constructor(input: ListPortalsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPortalsCommandInput, ListPortalsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectAssetsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListProjectAssetsRequest, ListProjectAssetsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListProjectAssetsCommandInput extends ListProjectAssetsRequest {
    }
    export interface ListProjectAssetsCommandOutput extends ListProjectAssetsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListProjectAssetsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListProjectAssetsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListProjectAssetsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProjectAssetsCommandInput} for command's `input` shape.
        * @see {@link ListProjectAssetsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListProjectAssetsCommand extends $Command<ListProjectAssetsCommandInput, ListProjectAssetsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListProjectAssetsCommandInput;
            constructor(input: ListProjectAssetsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProjectAssetsCommandInput, ListProjectAssetsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListProjectsRequest, ListProjectsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListProjectsCommandInput extends ListProjectsRequest {
    }
    export interface ListProjectsCommandOutput extends ListProjectsResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListProjectsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListProjectsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListProjectsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListProjectsCommandInput} for command's `input` shape.
        * @see {@link ListProjectsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListProjectsCommand extends $Command<ListProjectsCommandInput, ListProjectsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListProjectsCommandInput;
            constructor(input: ListProjectsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListProjectsCommandInput, ListProjectsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves the list of tags for an IoT SiteWise resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListTagsForResourceCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListTagsForResourceCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTimeSeriesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { ListTimeSeriesRequest, ListTimeSeriesResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface ListTimeSeriesCommandInput extends ListTimeSeriesRequest {
    }
    export interface ListTimeSeriesCommandOutput extends ListTimeSeriesResponse, __MetadataBearer {
    }
    /**
        * <p>Retrieves a paginated list of time series (data streams).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, ListTimeSeriesCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, ListTimeSeriesCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new ListTimeSeriesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTimeSeriesCommandInput} for command's `input` shape.
        * @see {@link ListTimeSeriesCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class ListTimeSeriesCommand extends $Command<ListTimeSeriesCommandInput, ListTimeSeriesCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: ListTimeSeriesCommandInput;
            constructor(input: ListTimeSeriesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTimeSeriesCommandInput, ListTimeSeriesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutDefaultEncryptionConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { PutDefaultEncryptionConfigurationRequest, PutDefaultEncryptionConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface PutDefaultEncryptionConfigurationCommandInput extends PutDefaultEncryptionConfigurationRequest {
    }
    export interface PutDefaultEncryptionConfigurationCommandOutput extends PutDefaultEncryptionConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Sets the default encryption configuration for the Amazon Web Services account. For more information, see
        *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in
        *       the <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, PutDefaultEncryptionConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, PutDefaultEncryptionConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new PutDefaultEncryptionConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutDefaultEncryptionConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutDefaultEncryptionConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class PutDefaultEncryptionConfigurationCommand extends $Command<PutDefaultEncryptionConfigurationCommandInput, PutDefaultEncryptionConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: PutDefaultEncryptionConfigurationCommandInput;
            constructor(input: PutDefaultEncryptionConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutDefaultEncryptionConfigurationCommandInput, PutDefaultEncryptionConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutLoggingOptionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { PutLoggingOptionsRequest, PutLoggingOptionsResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface PutLoggingOptionsCommandInput extends PutLoggingOptionsRequest {
    }
    export interface PutLoggingOptionsCommandOutput extends PutLoggingOptionsResponse, __MetadataBearer {
    }
    /**
        * <p>Sets logging options for IoT SiteWise.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, PutLoggingOptionsCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, PutLoggingOptionsCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new PutLoggingOptionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutLoggingOptionsCommandInput} for command's `input` shape.
        * @see {@link PutLoggingOptionsCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class PutLoggingOptionsCommand extends $Command<PutLoggingOptionsCommandInput, PutLoggingOptionsCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: PutLoggingOptionsCommandInput;
            constructor(input: PutLoggingOptionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutLoggingOptionsCommandInput, PutLoggingOptionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutStorageConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { PutStorageConfigurationRequest, PutStorageConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface PutStorageConfigurationCommandInput extends PutStorageConfigurationRequest {
    }
    export interface PutStorageConfigurationCommandOutput extends PutStorageConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Configures storage settings for IoT SiteWise.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, PutStorageConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, PutStorageConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new PutStorageConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutStorageConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutStorageConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class PutStorageConfigurationCommand extends $Command<PutStorageConfigurationCommandInput, PutStorageConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: PutStorageConfigurationCommandInput;
            constructor(input: PutStorageConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutStorageConfigurationCommandInput, PutStorageConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation
        *       updates the tag's value.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, TagResourceCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, TagResourceCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a tag from an IoT SiteWise resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UntagResourceCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UntagResourceCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAccessPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateAccessPolicyRequest, UpdateAccessPolicyResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateAccessPolicyCommandInput extends UpdateAccessPolicyRequest {
    }
    export interface UpdateAccessPolicyCommandOutput extends UpdateAccessPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor
        *       portal or project resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateAccessPolicyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateAccessPolicyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateAccessPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAccessPolicyCommandInput} for command's `input` shape.
        * @see {@link UpdateAccessPolicyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateAccessPolicyCommand extends $Command<UpdateAccessPolicyCommandInput, UpdateAccessPolicyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateAccessPolicyCommandInput;
            constructor(input: UpdateAccessPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccessPolicyCommandInput, UpdateAccessPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateAssetRequest, UpdateAssetResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateAssetCommandInput extends UpdateAssetRequest {
    }
    export interface UpdateAssetCommandOutput extends UpdateAssetResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an asset's name. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateAssetCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateAssetCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateAssetCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAssetCommandInput} for command's `input` shape.
        * @see {@link UpdateAssetCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateAssetCommand extends $Command<UpdateAssetCommandInput, UpdateAssetCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateAssetCommandInput;
            constructor(input: UpdateAssetCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAssetCommandInput, UpdateAssetCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetModelCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateAssetModelRequest, UpdateAssetModelResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateAssetModelCommandInput extends UpdateAssetModelRequest {
    }
    export interface UpdateAssetModelCommandOutput extends UpdateAssetModelResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an asset model and all of the assets that were created from the model. Each asset
        *       created from the model inherits the updated asset model's property and hierarchy definitions.
        *       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        *          <important>
        *             <p>This operation overwrites the existing model with the provided model. To avoid deleting
        *         your asset model's properties or hierarchies, you must include their IDs and definitions in
        *         the updated asset model payload. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a>.</p>
        *             <p>If you remove a property from an asset model, IoT SiteWise deletes all previous data for that
        *         property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every
        *         asset associated with that hierarchy. You can't change the type or data type of an existing
        *         property.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateAssetModelCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateAssetModelCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateAssetModelCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAssetModelCommandInput} for command's `input` shape.
        * @see {@link UpdateAssetModelCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateAssetModelCommand extends $Command<UpdateAssetModelCommandInput, UpdateAssetModelCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateAssetModelCommandInput;
            constructor(input: UpdateAssetModelCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAssetModelCommandInput, UpdateAssetModelCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetPropertyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateAssetPropertyRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateAssetPropertyCommandInput extends UpdateAssetPropertyRequest {
    }
    export interface UpdateAssetPropertyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates an asset property's alias and notification state.</p>
        *          <important>
        *             <p>This operation overwrites the property's existing alias and notification state. To keep
        *         your existing property's alias or notification state, you must include the existing values
        *         in the UpdateAssetProperty request. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html">DescribeAssetProperty</a>.</p>
        *          </important>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateAssetPropertyCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateAssetPropertyCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateAssetPropertyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAssetPropertyCommandInput} for command's `input` shape.
        * @see {@link UpdateAssetPropertyCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateAssetPropertyCommand extends $Command<UpdateAssetPropertyCommandInput, UpdateAssetPropertyCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateAssetPropertyCommandInput;
            constructor(input: UpdateAssetPropertyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAssetPropertyCommandInput, UpdateAssetPropertyCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateDashboardCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateDashboardRequest, UpdateDashboardResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateDashboardCommandInput extends UpdateDashboardRequest {
    }
    export interface UpdateDashboardCommandOutput extends UpdateDashboardResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an IoT SiteWise Monitor dashboard.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateDashboardCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateDashboardCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateDashboardCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateDashboardCommandInput} for command's `input` shape.
        * @see {@link UpdateDashboardCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateDashboardCommand extends $Command<UpdateDashboardCommandInput, UpdateDashboardCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateDashboardCommandInput;
            constructor(input: UpdateDashboardCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDashboardCommandInput, UpdateDashboardCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCapabilityConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateGatewayCapabilityConfigurationRequest, UpdateGatewayCapabilityConfigurationResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateGatewayCapabilityConfigurationCommandInput extends UpdateGatewayCapabilityConfigurationRequest {
    }
    export interface UpdateGatewayCapabilityConfigurationCommandOutput extends UpdateGatewayCapabilityConfigurationResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a gateway capability configuration or defines a new capability configuration.
        *       Each gateway capability defines data sources for a gateway. A capability configuration
        *       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
        *       the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
        *       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateGatewayCapabilityConfigurationCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateGatewayCapabilityConfigurationCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateGatewayCapabilityConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateGatewayCapabilityConfigurationCommandInput} for command's `input` shape.
        * @see {@link UpdateGatewayCapabilityConfigurationCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateGatewayCapabilityConfigurationCommand extends $Command<UpdateGatewayCapabilityConfigurationCommandInput, UpdateGatewayCapabilityConfigurationCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateGatewayCapabilityConfigurationCommandInput;
            constructor(input: UpdateGatewayCapabilityConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateGatewayCapabilityConfigurationCommandInput, UpdateGatewayCapabilityConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateGatewayRequest } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateGatewayCommandInput extends UpdateGatewayRequest {
    }
    export interface UpdateGatewayCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Updates a gateway's name.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateGatewayCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateGatewayCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateGatewayCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateGatewayCommandInput} for command's `input` shape.
        * @see {@link UpdateGatewayCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateGatewayCommand extends $Command<UpdateGatewayCommandInput, UpdateGatewayCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateGatewayCommandInput;
            constructor(input: UpdateGatewayCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateGatewayCommandInput, UpdateGatewayCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdatePortalCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdatePortalRequest, UpdatePortalResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdatePortalCommandInput extends UpdatePortalRequest {
    }
    export interface UpdatePortalCommandOutput extends UpdatePortalResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an IoT SiteWise Monitor portal.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdatePortalCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdatePortalCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdatePortalCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdatePortalCommandInput} for command's `input` shape.
        * @see {@link UpdatePortalCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdatePortalCommand extends $Command<UpdatePortalCommandInput, UpdatePortalCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdatePortalCommandInput;
            constructor(input: UpdatePortalCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdatePortalCommandInput, UpdatePortalCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateProjectCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTSiteWiseClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient";
    import { UpdateProjectRequest, UpdateProjectResponse } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0";
    export interface UpdateProjectCommandInput extends UpdateProjectRequest {
    }
    export interface UpdateProjectCommandOutput extends UpdateProjectResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an IoT SiteWise Monitor project.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTSiteWiseClient, UpdateProjectCommand } from "@aws-sdk/client-iotsitewise"; // ES Modules import
        * // const { IoTSiteWiseClient, UpdateProjectCommand } = require("@aws-sdk/client-iotsitewise"); // CommonJS import
        * const client = new IoTSiteWiseClient(config);
        * const command = new UpdateProjectCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateProjectCommandInput} for command's `input` shape.
        * @see {@link UpdateProjectCommandOutput} for command's `response` shape.
        * @see {@link IoTSiteWiseClientResolvedConfig | config} for IoTSiteWiseClient's `config` shape.
        *
        */
    export class UpdateProjectCommand extends $Command<UpdateProjectCommandInput, UpdateProjectCommandOutput, IoTSiteWiseClientResolvedConfig> {
            readonly input: UpdateProjectCommandInput;
            constructor(input: UpdateProjectCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTSiteWiseClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateProjectCommandInput, UpdateProjectCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/IoTSiteWiseClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateAssetsCommandInput, AssociateAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateAssetsCommand";
    import { AssociateTimeSeriesToAssetPropertyCommandInput, AssociateTimeSeriesToAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/AssociateTimeSeriesToAssetPropertyCommand";
    import { BatchAssociateProjectAssetsCommandInput, BatchAssociateProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchAssociateProjectAssetsCommand";
    import { BatchDisassociateProjectAssetsCommandInput, BatchDisassociateProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchDisassociateProjectAssetsCommand";
    import { BatchGetAssetPropertyAggregatesCommandInput, BatchGetAssetPropertyAggregatesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyAggregatesCommand";
    import { BatchGetAssetPropertyValueCommandInput, BatchGetAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueCommand";
    import { BatchGetAssetPropertyValueHistoryCommandInput, BatchGetAssetPropertyValueHistoryCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchGetAssetPropertyValueHistoryCommand";
    import { BatchPutAssetPropertyValueCommandInput, BatchPutAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/BatchPutAssetPropertyValueCommand";
    import { CreateAccessPolicyCommandInput, CreateAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAccessPolicyCommand";
    import { CreateAssetCommandInput, CreateAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetCommand";
    import { CreateAssetModelCommandInput, CreateAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateAssetModelCommand";
    import { CreateBulkImportJobCommandInput, CreateBulkImportJobCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateBulkImportJobCommand";
    import { CreateDashboardCommandInput, CreateDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateDashboardCommand";
    import { CreateGatewayCommandInput, CreateGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateGatewayCommand";
    import { CreatePortalCommandInput, CreatePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreatePortalCommand";
    import { CreateProjectCommandInput, CreateProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/CreateProjectCommand";
    import { DeleteAccessPolicyCommandInput, DeleteAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAccessPolicyCommand";
    import { DeleteAssetCommandInput, DeleteAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetCommand";
    import { DeleteAssetModelCommandInput, DeleteAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteAssetModelCommand";
    import { DeleteDashboardCommandInput, DeleteDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteDashboardCommand";
    import { DeleteGatewayCommandInput, DeleteGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteGatewayCommand";
    import { DeletePortalCommandInput, DeletePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeletePortalCommand";
    import { DeleteProjectCommandInput, DeleteProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteProjectCommand";
    import { DeleteTimeSeriesCommandInput, DeleteTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DeleteTimeSeriesCommand";
    import { DescribeAccessPolicyCommandInput, DescribeAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAccessPolicyCommand";
    import { DescribeAssetCommandInput, DescribeAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetCommand";
    import { DescribeAssetModelCommandInput, DescribeAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetModelCommand";
    import { DescribeAssetPropertyCommandInput, DescribeAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeAssetPropertyCommand";
    import { DescribeBulkImportJobCommandInput, DescribeBulkImportJobCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeBulkImportJobCommand";
    import { DescribeDashboardCommandInput, DescribeDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDashboardCommand";
    import { DescribeDefaultEncryptionConfigurationCommandInput, DescribeDefaultEncryptionConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeDefaultEncryptionConfigurationCommand";
    import { DescribeGatewayCapabilityConfigurationCommandInput, DescribeGatewayCapabilityConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCapabilityConfigurationCommand";
    import { DescribeGatewayCommandInput, DescribeGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeGatewayCommand";
    import { DescribeLoggingOptionsCommandInput, DescribeLoggingOptionsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeLoggingOptionsCommand";
    import { DescribePortalCommandInput, DescribePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribePortalCommand";
    import { DescribeProjectCommandInput, DescribeProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeProjectCommand";
    import { DescribeStorageConfigurationCommandInput, DescribeStorageConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeStorageConfigurationCommand";
    import { DescribeTimeSeriesCommandInput, DescribeTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DescribeTimeSeriesCommand";
    import { DisassociateAssetsCommandInput, DisassociateAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateAssetsCommand";
    import { DisassociateTimeSeriesFromAssetPropertyCommandInput, DisassociateTimeSeriesFromAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/DisassociateTimeSeriesFromAssetPropertyCommand";
    import { GetAssetPropertyAggregatesCommandInput, GetAssetPropertyAggregatesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyAggregatesCommand";
    import { GetAssetPropertyValueCommandInput, GetAssetPropertyValueCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueCommand";
    import { GetAssetPropertyValueHistoryCommandInput, GetAssetPropertyValueHistoryCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetAssetPropertyValueHistoryCommand";
    import { GetInterpolatedAssetPropertyValuesCommandInput, GetInterpolatedAssetPropertyValuesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/GetInterpolatedAssetPropertyValuesCommand";
    import { ListAccessPoliciesCommandInput, ListAccessPoliciesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAccessPoliciesCommand";
    import { ListAssetModelsCommandInput, ListAssetModelsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetModelsCommand";
    import { ListAssetRelationshipsCommandInput, ListAssetRelationshipsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetRelationshipsCommand";
    import { ListAssetsCommandInput, ListAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssetsCommand";
    import { ListAssociatedAssetsCommandInput, ListAssociatedAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListAssociatedAssetsCommand";
    import { ListBulkImportJobsCommandInput, ListBulkImportJobsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListBulkImportJobsCommand";
    import { ListDashboardsCommandInput, ListDashboardsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListDashboardsCommand";
    import { ListGatewaysCommandInput, ListGatewaysCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListGatewaysCommand";
    import { ListPortalsCommandInput, ListPortalsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListPortalsCommand";
    import { ListProjectAssetsCommandInput, ListProjectAssetsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectAssetsCommand";
    import { ListProjectsCommandInput, ListProjectsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListProjectsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTagsForResourceCommand";
    import { ListTimeSeriesCommandInput, ListTimeSeriesCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/ListTimeSeriesCommand";
    import { PutDefaultEncryptionConfigurationCommandInput, PutDefaultEncryptionConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutDefaultEncryptionConfigurationCommand";
    import { PutLoggingOptionsCommandInput, PutLoggingOptionsCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutLoggingOptionsCommand";
    import { PutStorageConfigurationCommandInput, PutStorageConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/PutStorageConfigurationCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UntagResourceCommand";
    import { UpdateAccessPolicyCommandInput, UpdateAccessPolicyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAccessPolicyCommand";
    import { UpdateAssetCommandInput, UpdateAssetCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetCommand";
    import { UpdateAssetModelCommandInput, UpdateAssetModelCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetModelCommand";
    import { UpdateAssetPropertyCommandInput, UpdateAssetPropertyCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateAssetPropertyCommand";
    import { UpdateDashboardCommandInput, UpdateDashboardCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateDashboardCommand";
    import { UpdateGatewayCapabilityConfigurationCommandInput, UpdateGatewayCapabilityConfigurationCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCapabilityConfigurationCommand";
    import { UpdateGatewayCommandInput, UpdateGatewayCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateGatewayCommand";
    import { UpdatePortalCommandInput, UpdatePortalCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdatePortalCommand";
    import { UpdateProjectCommandInput, UpdateProjectCommandOutput } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/commands/UpdateProjectCommand";
    export type ServiceInputTypes = AssociateAssetsCommandInput | AssociateTimeSeriesToAssetPropertyCommandInput | BatchAssociateProjectAssetsCommandInput | BatchDisassociateProjectAssetsCommandInput | BatchGetAssetPropertyAggregatesCommandInput | BatchGetAssetPropertyValueCommandInput | BatchGetAssetPropertyValueHistoryCommandInput | BatchPutAssetPropertyValueCommandInput | CreateAccessPolicyCommandInput | CreateAssetCommandInput | CreateAssetModelCommandInput | CreateBulkImportJobCommandInput | CreateDashboardCommandInput | CreateGatewayCommandInput | CreatePortalCommandInput | CreateProjectCommandInput | DeleteAccessPolicyCommandInput | DeleteAssetCommandInput | DeleteAssetModelCommandInput | DeleteDashboardCommandInput | DeleteGatewayCommandInput | DeletePortalCommandInput | DeleteProjectCommandInput | DeleteTimeSeriesCommandInput | DescribeAccessPolicyCommandInput | DescribeAssetCommandInput | DescribeAssetModelCommandInput | DescribeAssetPropertyCommandInput | DescribeBulkImportJobCommandInput | DescribeDashboardCommandInput | DescribeDefaultEncryptionConfigurationCommandInput | DescribeGatewayCapabilityConfigurationCommandInput | DescribeGatewayCommandInput | DescribeLoggingOptionsCommandInput | DescribePortalCommandInput | DescribeProjectCommandInput | DescribeStorageConfigurationCommandInput | DescribeTimeSeriesCommandInput | DisassociateAssetsCommandInput | DisassociateTimeSeriesFromAssetPropertyCommandInput | GetAssetPropertyAggregatesCommandInput | GetAssetPropertyValueCommandInput | GetAssetPropertyValueHistoryCommandInput | GetInterpolatedAssetPropertyValuesCommandInput | ListAccessPoliciesCommandInput | ListAssetModelsCommandInput | ListAssetRelationshipsCommandInput | ListAssetsCommandInput | ListAssociatedAssetsCommandInput | ListBulkImportJobsCommandInput | ListDashboardsCommandInput | ListGatewaysCommandInput | ListPortalsCommandInput | ListProjectAssetsCommandInput | ListProjectsCommandInput | ListTagsForResourceCommandInput | ListTimeSeriesCommandInput | PutDefaultEncryptionConfigurationCommandInput | PutLoggingOptionsCommandInput | PutStorageConfigurationCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAccessPolicyCommandInput | UpdateAssetCommandInput | UpdateAssetModelCommandInput | UpdateAssetPropertyCommandInput | UpdateDashboardCommandInput | UpdateGatewayCapabilityConfigurationCommandInput | UpdateGatewayCommandInput | UpdatePortalCommandInput | UpdateProjectCommandInput;
    export type ServiceOutputTypes = AssociateAssetsCommandOutput | AssociateTimeSeriesToAssetPropertyCommandOutput | BatchAssociateProjectAssetsCommandOutput | BatchDisassociateProjectAssetsCommandOutput | BatchGetAssetPropertyAggregatesCommandOutput | BatchGetAssetPropertyValueCommandOutput | BatchGetAssetPropertyValueHistoryCommandOutput | BatchPutAssetPropertyValueCommandOutput | CreateAccessPolicyCommandOutput | CreateAssetCommandOutput | CreateAssetModelCommandOutput | CreateBulkImportJobCommandOutput | CreateDashboardCommandOutput | CreateGatewayCommandOutput | CreatePortalCommandOutput | CreateProjectCommandOutput | DeleteAccessPolicyCommandOutput | DeleteAssetCommandOutput | DeleteAssetModelCommandOutput | DeleteDashboardCommandOutput | DeleteGatewayCommandOutput | DeletePortalCommandOutput | DeleteProjectCommandOutput | DeleteTimeSeriesCommandOutput | DescribeAccessPolicyCommandOutput | DescribeAssetCommandOutput | DescribeAssetModelCommandOutput | DescribeAssetPropertyCommandOutput | DescribeBulkImportJobCommandOutput | DescribeDashboardCommandOutput | DescribeDefaultEncryptionConfigurationCommandOutput | DescribeGatewayCapabilityConfigurationCommandOutput | DescribeGatewayCommandOutput | DescribeLoggingOptionsCommandOutput | DescribePortalCommandOutput | DescribeProjectCommandOutput | DescribeStorageConfigurationCommandOutput | DescribeTimeSeriesCommandOutput | DisassociateAssetsCommandOutput | DisassociateTimeSeriesFromAssetPropertyCommandOutput | GetAssetPropertyAggregatesCommandOutput | GetAssetPropertyValueCommandOutput | GetAssetPropertyValueHistoryCommandOutput | GetInterpolatedAssetPropertyValuesCommandOutput | ListAccessPoliciesCommandOutput | ListAssetModelsCommandOutput | ListAssetRelationshipsCommandOutput | ListAssetsCommandOutput | ListAssociatedAssetsCommandOutput | ListBulkImportJobsCommandOutput | ListDashboardsCommandOutput | ListGatewaysCommandOutput | ListPortalsCommandOutput | ListProjectAssetsCommandOutput | ListProjectsCommandOutput | ListTagsForResourceCommandOutput | ListTimeSeriesCommandOutput | PutDefaultEncryptionConfigurationCommandOutput | PutLoggingOptionsCommandOutput | PutStorageConfigurationCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAccessPolicyCommandOutput | UpdateAssetCommandOutput | UpdateAssetModelCommandOutput | UpdateAssetPropertyCommandOutput | UpdateDashboardCommandOutput | UpdateGatewayCapabilityConfigurationCommandOutput | UpdateGatewayCommandOutput | UpdatePortalCommandOutput | UpdateProjectCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IoTSiteWiseClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IoTSiteWiseClient class constructor that set the region, credentials and other options.
        */
    export interface IoTSiteWiseClientConfig extends IoTSiteWiseClientConfigType {
    }
    type IoTSiteWiseClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IoTSiteWiseClient class. This is resolved and normalized from the {@link IoTSiteWiseClientConfig | constructor configuration interface}.
        */
    export interface IoTSiteWiseClientResolvedConfig extends IoTSiteWiseClientResolvedConfigType {
    }
    /**
        * <p>Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the
        *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export class IoTSiteWiseClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IoTSiteWiseClientResolvedConfig> {
            /**
                * The resolved configuration of IoTSiteWiseClient class. This is resolved and normalized from the {@link IoTSiteWiseClientConfig | constructor configuration interface}.
                */
            readonly config: IoTSiteWiseClientResolvedConfig;
            constructor(configuration: IoTSiteWiseClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTSiteWiseServiceException as __BaseException } from "@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/IoTSiteWiseServiceException";
    /**
        * <p>Contains information for a group identity in an access policy.</p>
        */
    export interface GroupIdentity {
            /**
                * <p>The Amazon Web Services SSO ID of the group.</p>
                */
            id: string | undefined;
    }
    export namespace GroupIdentity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GroupIdentity) => any;
    }
    /**
        * <p>Contains information about an Identity and Access Management role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM roles</a> in the
        *         <i>IAM User Guide</i>.</p>
        */
    export interface IAMRoleIdentity {
            /**
                * <p>The ARN of the IAM role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the
                *         <i>IAM User Guide</i>.</p>
                */
            arn: string | undefined;
    }
    export namespace IAMRoleIdentity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IAMRoleIdentity) => any;
    }
    /**
        * <p>Contains information about an Identity and Access Management user.</p>
        */
    export interface IAMUserIdentity {
            /**
                * <p>The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the
                *         <i>IAM User Guide</i>.</p>
                *          <note>
                *             <p>If you delete the IAM user, access policies that contain this identity include an
                *         empty <code>arn</code>. You can delete the access policy for the IAM user that no longer
                *         exists.</p>
                *          </note>
                */
            arn: string | undefined;
    }
    export namespace IAMUserIdentity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: IAMUserIdentity) => any;
    }
    /**
        * <p>Contains information for a user identity in an access policy.</p>
        */
    export interface UserIdentity {
            /**
                * <p>The Amazon Web Services SSO ID of the user.</p>
                */
            id: string | undefined;
    }
    export namespace UserIdentity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UserIdentity) => any;
    }
    /**
        * <p>Contains an identity that can access an IoT SiteWise Monitor resource.</p>
        *          <note>
        *             <p>Currently, you can't use Amazon Web Services APIs to retrieve Amazon Web Services SSO identity IDs. You can find the
        *         Amazon Web Services SSO identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">Amazon Web Services SSO console</a>.</p>
        *          </note>
        */
    export interface Identity {
            /**
                * <p>An Amazon Web Services SSO user identity.</p>
                */
            user?: UserIdentity;
            /**
                * <p>An Amazon Web Services SSO group identity.</p>
                */
            group?: GroupIdentity;
            /**
                * <p>An IAM user identity.</p>
                */
            iamUser?: IAMUserIdentity;
            /**
                * <p>An IAM role identity.</p>
                */
            iamRole?: IAMRoleIdentity;
    }
    export namespace Identity {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Identity) => any;
    }
    export enum Permission {
            ADMINISTRATOR = "ADMINISTRATOR",
            VIEWER = "VIEWER"
    }
    /**
        * <p>Identifies an IoT SiteWise Monitor portal.</p>
        */
    export interface PortalResource {
            /**
                * <p>The ID of the portal.</p>
                */
            id: string | undefined;
    }
    export namespace PortalResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PortalResource) => any;
    }
    /**
        * <p>Identifies a specific IoT SiteWise Monitor project.</p>
        */
    export interface ProjectResource {
            /**
                * <p>The ID of the project.</p>
                */
            id: string | undefined;
    }
    export namespace ProjectResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProjectResource) => any;
    }
    /**
        * <p>Contains an IoT SiteWise Monitor resource ID for a portal or project.</p>
        */
    export interface Resource {
            /**
                * <p>A portal resource.</p>
                */
            portal?: PortalResource;
            /**
                * <p>A project resource.</p>
                */
            project?: ProjectResource;
    }
    export namespace Resource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Resource) => any;
    }
    /**
        * <p>Contains an access policy that defines an identity's access to an IoT SiteWise Monitor
        *       resource.</p>
        */
    export interface AccessPolicySummary {
            /**
                * <p>The ID of the access policy.</p>
                */
            id: string | undefined;
            /**
                * <p>The identity (an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user).</p>
                */
            identity: Identity | undefined;
            /**
                * <p>The IoT SiteWise Monitor resource (a portal or project).</p>
                */
            resource: Resource | undefined;
            /**
                * <p>The permissions for the access policy. Note that a project <code>ADMINISTRATOR</code> is
                *       also known as a project owner.</p>
                */
            permission: Permission | string | undefined;
            /**
                * <p>The date the access policy was created, in Unix epoch time.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the access policy was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate?: Date;
    }
    export namespace AccessPolicySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccessPolicySummary) => any;
    }
    export enum Quality {
            BAD = "BAD",
            GOOD = "GOOD",
            UNCERTAIN = "UNCERTAIN"
    }
    /**
        * <p>Contains the (pre-calculated) aggregate values for an asset property.</p>
        */
    export interface Aggregates {
            /**
                * <p>The average (mean) value of the time series over a time interval window.</p>
                */
            average?: number;
            /**
                * <p>The count of data points in the time series over a time interval window.</p>
                */
            count?: number;
            /**
                * <p>The maximum value of the time series over a time interval window.</p>
                */
            maximum?: number;
            /**
                * <p>The minimum value of the time series over a time interval window.</p>
                */
            minimum?: number;
            /**
                * <p>The sum of the time series over a time interval window.</p>
                */
            sum?: number;
            /**
                * <p>The standard deviation of the time series over a time interval window.</p>
                */
            standardDeviation?: number;
    }
    export namespace Aggregates {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Aggregates) => any;
    }
    /**
        * <p>Contains aggregated asset property values (for example, average, minimum, and
        *       maximum).</p>
        */
    export interface AggregatedValue {
            /**
                * <p>The date the aggregating computations occurred, in Unix epoch time.</p>
                */
            timestamp: Date | undefined;
            /**
                * <p>The quality of the aggregated data.</p>
                */
            quality?: Quality | string;
            /**
                * <p>The value of the aggregates.</p>
                */
            value: Aggregates | undefined;
    }
    export namespace AggregatedValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AggregatedValue) => any;
    }
    export enum AggregateType {
            AVERAGE = "AVERAGE",
            COUNT = "COUNT",
            MAXIMUM = "MAXIMUM",
            MINIMUM = "MINIMUM",
            STANDARD_DEVIATION = "STANDARD_DEVIATION",
            SUM = "SUM"
    }
    /**
        * <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.
        *   You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
        *   For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.</p>
        */
    export interface Alarms {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows the alarm to perform actions and access Amazon Web Services
                *       resources and services, such as IoT Events.</p>
                */
            alarmRoleArn: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Lambda function that manages alarm notifications. For more
                *       information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">Managing alarm
                *         notifications</a> in the <i>IoT Events Developer Guide</i>.</p>
                */
            notificationLambdaArn?: string;
    }
    export namespace Alarms {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Alarms) => any;
    }
    export enum PropertyDataType {
            BOOLEAN = "BOOLEAN",
            DOUBLE = "DOUBLE",
            INTEGER = "INTEGER",
            STRING = "STRING",
            STRUCT = "STRUCT"
    }
    export enum PropertyNotificationState {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    /**
        * <p>Contains asset property value notification information. When the notification state is enabled, IoT SiteWise publishes property value
        *       updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface PropertyNotification {
            /**
                * <p>The MQTT topic to which IoT SiteWise publishes property value update notifications.</p>
                */
            topic: string | undefined;
            /**
                * <p>The current notification state.</p>
                */
            state: PropertyNotificationState | string | undefined;
    }
    export namespace PropertyNotification {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PropertyNotification) => any;
    }
    /**
        * <p>Contains asset property information.</p>
        */
    export interface AssetProperty {
            /**
                * <p>The ID of the asset property.</p>
                */
            id: string | undefined;
            /**
                * <p>The name of the property.</p>
                */
            name: string | undefined;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            alias?: string;
            /**
                * <p>The asset property's notification topic and state. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                */
            notification?: PropertyNotification;
            /**
                * <p>The data type of the asset property.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The data type of the structure for this property. This parameter exists on properties that
                *       have the <code>STRUCT</code> data type.</p>
                */
            dataTypeSpec?: string;
            /**
                * <p>The unit (such as <code>Newtons</code> or <code>RPM</code>) of the asset property.</p>
                */
            unit?: string;
    }
    export namespace AssetProperty {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetProperty) => any;
    }
    /**
        * <p>Contains information about a composite model in an asset. This object contains the asset's
        *       properties that you define in the composite model.</p>
        */
    export interface AssetCompositeModel {
            /**
                * <p>The name of the composite model.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the composite model.</p>
                */
            description?: string;
            /**
                * <p>The type of the composite model. For alarm composite models, this type is
                *         <code>AWS/ALARM</code>.</p>
                */
            type: string | undefined;
            /**
                * <p>The asset properties that this composite model defines.</p>
                */
            properties: AssetProperty[] | undefined;
    }
    export namespace AssetCompositeModel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetCompositeModel) => any;
    }
    export enum AssetErrorCode {
            INTERNAL_FAILURE = "INTERNAL_FAILURE"
    }
    /**
        * <p>Contains error details for the requested associate project asset action.</p>
        */
    export interface AssetErrorDetails {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The error code.</p>
                */
            code: AssetErrorCode | string | undefined;
            /**
                * <p>The error message.</p>
                */
            message: string | undefined;
    }
    export namespace AssetErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetErrorDetails) => any;
    }
    /**
        * <p>Describes an asset hierarchy that contains a hierarchy's name and ID.</p>
        */
    export interface AssetHierarchy {
            /**
                * <p>The ID of the hierarchy. This ID is a <code>hierarchyId</code>.</p>
                */
            id?: string;
            /**
                * <p>The hierarchy name provided in the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a>
                *       API operation.</p>
                */
            name: string | undefined;
    }
    export namespace AssetHierarchy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetHierarchy) => any;
    }
    /**
        * <p>Contains information about a parent asset and a child asset that are related through an
        *       asset hierarchy.</p>
        */
    export interface AssetHierarchyInfo {
            /**
                * <p>The ID of the parent asset in this asset relationship.</p>
                */
            parentAssetId?: string;
            /**
                * <p>The ID of the child asset in this asset relationship.</p>
                */
            childAssetId?: string;
    }
    export namespace AssetHierarchyInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetHierarchyInfo) => any;
    }
    /**
        * <p>Contains an asset attribute property. For more information, see
        *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes">Attributes</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface Attribute {
            /**
                * <p>The default value of the asset model property attribute. All assets that you create from
                *       the asset model contain this attribute value. You can update an attribute's value after you
                *       create an asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-attribute-values.html">Updating attribute values</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            defaultValue?: string;
    }
    export namespace Attribute {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Attribute) => any;
    }
    export enum ForwardingConfigState {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    /**
        * <p>The forwarding configuration for a given property.</p>
        */
    export interface ForwardingConfig {
            /**
                * <p>The forwarding state for the given property. </p>
                */
            state: ForwardingConfigState | string | undefined;
    }
    export namespace ForwardingConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ForwardingConfig) => any;
    }
    /**
        * <p>The processing configuration for the given measurement property.
        *       You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud.
        *       By default, measurements are forwarded to the cloud.</p>
        */
    export interface MeasurementProcessingConfig {
            /**
                * <p>The forwarding configuration for the given measurement property. </p>
                */
            forwardingConfig: ForwardingConfig | undefined;
    }
    export namespace MeasurementProcessingConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MeasurementProcessingConfig) => any;
    }
    /**
        * <p>Contains an asset measurement property. For more information, see
        *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements">Measurements</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface Measurement {
            /**
                * <p>The processing configuration for the given measurement property.
                *       You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud.
                *       By default, measurements are forwarded to the cloud.</p>
                */
            processingConfig?: MeasurementProcessingConfig;
    }
    export namespace Measurement {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Measurement) => any;
    }
    export enum ComputeLocation {
            CLOUD = "CLOUD",
            EDGE = "EDGE"
    }
    /**
        * <p>The processing configuration for the given metric property.
        *       You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud.
        *       By default, metrics are forwarded to the cloud.</p>
        */
    export interface MetricProcessingConfig {
            /**
                * <p>The compute location for the given metric property. </p>
                */
            computeLocation: ComputeLocation | string | undefined;
    }
    export namespace MetricProcessingConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricProcessingConfig) => any;
    }
    /**
        * <p>Identifies a property value used in an expression.</p>
        */
    export interface VariableValue {
            /**
                * <p>The ID of the property to use as the variable. You can use the property <code>name</code>
                *       if it's from the same asset model.</p>
                */
            propertyId: string | undefined;
            /**
                * <p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name
                *       instead of the hierarchy's ID.</p>
                *          <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies
                *       using the same model and therefore the same <code>propertyId</code>. For example, you might
                *       have separately grouped assets that come from the same asset model. For more information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            hierarchyId?: string;
    }
    export namespace VariableValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VariableValue) => any;
    }
    /**
        * <p>Contains expression variable information.</p>
        */
    export interface ExpressionVariable {
            /**
                * <p>The friendly name of the variable to be used in the expression.</p>
                */
            name: string | undefined;
            /**
                * <p>The variable that identifies an asset property from which to use values.</p>
                */
            value: VariableValue | undefined;
    }
    export namespace ExpressionVariable {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ExpressionVariable) => any;
    }
    /**
        * <p>Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and
        *       contiguous time window. You can use this window in metrics to aggregate data from properties
        *       and other assets.</p>
        *          <p>You can use <code>m</code>, <code>h</code>, <code>d</code>, and <code>w</code> when you
        *       specify an interval or offset. Note that <code>m</code> represents minutes, <code>h</code>
        *       represents hours, <code>d</code> represents days, and <code>w</code> represents weeks. You can
        *       also use <code>s</code> to represent seconds in <code>offset</code>.</p>
        *          <p>The <code>interval</code> and <code>offset</code> parameters support the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a>. For example,
        *         <code>PT5S</code> represents 5 seconds, <code>PT5M</code> represents 5 minutes, and
        *         <code>PT5H</code> represents 5 hours.</p>
        */
    export interface TumblingWindow {
            /**
                * <p>The time interval for the tumbling window. The interval time must be between 1 minute and
                *       1 week.</p>
                *          <p>IoT SiteWise computes the <code>1w</code> interval the end of Sunday at midnight each week (UTC),
                *       the <code>1d</code> interval at the end of each day at midnight (UTC), the <code>1h</code>
                *       interval at the end of each hour, and so on. </p>
                *          <p>When IoT SiteWise aggregates data points for metric computations, the start of each interval is
                *       exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at
                *       the end of the interval.</p>
                */
            interval: string | undefined;
            /**
                * <p>The offset for the tumbling window. The <code>offset</code> parameter accepts the
                *       following:</p>
                *          <ul>
                *             <li>
                *                <p>The offset time.</p>
                *                <p>For example, if you specify <code>18h</code> for <code>offset</code> and
                *             <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following
                *           ways:</p>
                *                <ul>
                *                   <li>
                *                      <p>If you create the metric before or at 6 PM (UTC), you get the first aggregation
                *               result at 6 PM (UTC) on the day when you create the metric.</p>
                *                   </li>
                *                   <li>
                *                      <p>If you create the metric after 6 PM (UTC), you get the first aggregation result at
                *               6 PM (UTC) the next day.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *             <li>
                *                <p>The ISO 8601 format.</p>
                *                <p>For example, if you specify <code>PT18H</code> for <code>offset</code> and
                *             <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following
                *           ways:</p>
                *                <ul>
                *                   <li>
                *                      <p>If you create the metric before or at 6 PM (UTC), you get the first aggregation
                *               result at 6 PM (UTC) on the day when you create the metric.</p>
                *                   </li>
                *                   <li>
                *                      <p>If you create the metric after 6 PM (UTC), you get the first aggregation result at
                *               6 PM (UTC) the next day.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *             <li>
                *                <p>The 24-hour clock.</p>
                *                <p>For example, if you specify <code>00:03:00</code> for <code>offset</code>,
                *             <code>5m</code> for <code>interval</code>, and you create the metric at 2 PM (UTC), you
                *           get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result
                *           at 2:08 PM (UTC). </p>
                *             </li>
                *             <li>
                *                <p>The offset time zone.</p>
                *                <p>For example, if you specify <code>2021-07-23T18:00-08</code> for <code>offset</code>
                *           and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the
                *           following ways:</p>
                *                <ul>
                *                   <li>
                *                      <p>If you create the metric before or at 6 PM (PST), you get the first aggregation
                *               result at 6 PM (PST) on the day when you create the metric.</p>
                *                   </li>
                *                   <li>
                *                      <p>If you create the metric after 6 PM (PST), you get the first aggregation result at
                *               6 PM (PST) the next day.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                */
            offset?: string;
    }
    export namespace TumblingWindow {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TumblingWindow) => any;
    }
    /**
        * <p>Contains a time interval window used for data aggregate computations (for example,
        *       average, sum, count, and so on).</p>
        */
    export interface MetricWindow {
            /**
                * <p>The tumbling time interval window.</p>
                */
            tumbling?: TumblingWindow;
    }
    export namespace MetricWindow {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricWindow) => any;
    }
    /**
        * <p>Contains an asset metric property. With metrics, you can calculate aggregate functions,
        *       such as an average, maximum, or minimum, as specified through an expression. A metric maps
        *       several values to a single value (such as a sum).</p>
        *          <p>The maximum number of dependent/cascading variables used in any one metric calculation is
        *       10. Therefore, a <i>root</i> metric can have
        *       up to 10 cascading metrics in its computational dependency
        *       tree. Additionally, a metric can only have a data type of <code>DOUBLE</code> and consume
        *       properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics">Metrics</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface Metric {
            /**
                * <p>The mathematical expression that defines the metric aggregation function. You can specify
                *       up to 10 variables per expression. You can specify up to 10 functions
                *       per expression. </p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            expression: string | undefined;
            /**
                * <p>The list of variables used in the expression.</p>
                */
            variables: ExpressionVariable[] | undefined;
            /**
                * <p>The window (time interval) over which IoT SiteWise computes the metric's aggregation expression.
                *       IoT SiteWise computes one data point per <code>window</code>.</p>
                */
            window: MetricWindow | undefined;
            /**
                * <p>The processing configuration for the given metric property.
                *       You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud.
                *       By default, metrics are forwarded to the cloud.</p>
                */
            processingConfig?: MetricProcessingConfig;
    }
    export namespace Metric {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Metric) => any;
    }
    /**
        * <p>The processing configuration for the given transform property.
        *       You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud.
        *       You can also configure transforms to be computed at the edge or in the cloud.</p>
        */
    export interface TransformProcessingConfig {
            /**
                * <p>The compute location for the given transform property. </p>
                */
            computeLocation: ComputeLocation | string | undefined;
            /**
                * <p>The forwarding configuration for a given property.</p>
                */
            forwardingConfig?: ForwardingConfig;
    }
    export namespace TransformProcessingConfig {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TransformProcessingConfig) => any;
    }
    /**
        * <p>Contains an asset transform property. A transform is a one-to-one mapping of a property's
        *       data points from one form to another. For example, you can use a transform to convert a
        *       Celsius data stream to Fahrenheit by applying the transformation expression to each data point
        *       of the Celsius stream. A transform can only have a data type of <code>DOUBLE</code> and
        *       consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms">Transforms</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface Transform {
            /**
                * <p>The mathematical expression that defines the transformation function. You can specify up
                *       to 10 variables per expression. You can specify up to 10 functions per
                *       expression. </p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            expression: string | undefined;
            /**
                * <p>The list of variables used in the expression.</p>
                */
            variables: ExpressionVariable[] | undefined;
            /**
                * <p>The processing configuration for the given transform property.
                *       You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud.
                *       You can also configure transforms to be computed at the edge or in the cloud.</p>
                */
            processingConfig?: TransformProcessingConfig;
    }
    export namespace Transform {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Transform) => any;
    }
    /**
        * <p>Contains a property type, which can be one of <code>attribute</code>,
        *         <code>measurement</code>, <code>metric</code>, or <code>transform</code>.</p>
        */
    export interface PropertyType {
            /**
                * <p>Specifies an asset attribute property. An attribute generally contains static information,
                *       such as the serial number of an <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">IIoT</a> wind turbine.</p>
                */
            attribute?: Attribute;
            /**
                * <p>Specifies an asset measurement property. A measurement represents a device's raw sensor
                *       data stream, such as timestamped temperature values or timestamped power values.</p>
                */
            measurement?: Measurement;
            /**
                * <p>Specifies an asset transform property. A transform contains a mathematical expression that
                *       maps a property's data points from one form to another, such as a unit conversion from Celsius
                *       to Fahrenheit.</p>
                */
            transform?: Transform;
            /**
                * <p>Specifies an asset metric property. A metric contains a mathematical expression that uses
                *       aggregate functions to process all input data points over a time interval and output a single
                *       data point, such as to calculate the average hourly temperature.</p>
                */
            metric?: Metric;
    }
    export namespace PropertyType {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PropertyType) => any;
    }
    /**
        * <p>Contains information about an asset model property.</p>
        */
    export interface AssetModelProperty {
            /**
                * <p>The ID of the asset model property.</p>
                */
            id?: string;
            /**
                * <p>The name of the asset model property.</p>
                */
            name: string | undefined;
            /**
                * <p>The data type of the asset model property.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The data type of the structure for this property. This parameter exists on properties that
                *       have the <code>STRUCT</code> data type.</p>
                */
            dataTypeSpec?: string;
            /**
                * <p>The unit of the asset model property, such as <code>Newtons</code> or
                *       <code>RPM</code>.</p>
                */
            unit?: string;
            /**
                * <p>The property type (see <code>PropertyType</code>).</p>
                */
            type: PropertyType | undefined;
    }
    export namespace AssetModelProperty {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelProperty) => any;
    }
    /**
        * <p>Contains information about a composite model in an asset model. This object contains the
        *       asset property definitions that you define in the composite model.</p>
        */
    export interface AssetModelCompositeModel {
            /**
                * <p>The name of the composite model.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the composite model.</p>
                */
            description?: string;
            /**
                * <p>The type of the composite model. For alarm composite models, this type is
                *         <code>AWS/ALARM</code>.</p>
                */
            type: string | undefined;
            /**
                * <p>The asset property definitions for this composite model.</p>
                */
            properties?: AssetModelProperty[];
    }
    export namespace AssetModelCompositeModel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelCompositeModel) => any;
    }
    /**
        * <p>Contains an asset model property definition. This property definition is applied to all
        *       assets created from the asset model.</p>
        */
    export interface AssetModelPropertyDefinition {
            /**
                * <p>The name of the property definition.</p>
                */
            name: string | undefined;
            /**
                * <p>The data type of the property definition.</p>
                *          <p>If you specify <code>STRUCT</code>, you must also specify <code>dataTypeSpec</code> to
                *       identify the type of the structure for this property.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The data type of the structure for this property. This parameter is required on properties
                *       that have the <code>STRUCT</code> data type.</p>
                *          <p>The options for this parameter depend on the type of the composite model in which you
                *       define this property. Use <code>AWS/ALARM_STATE</code> for alarm state in alarm composite
                *       models.</p>
                */
            dataTypeSpec?: string;
            /**
                * <p>The unit of the property definition, such as <code>Newtons</code> or
                *       <code>RPM</code>.</p>
                */
            unit?: string;
            /**
                * <p>The property definition type (see <code>PropertyType</code>). You can only specify one
                *       type in a property definition.</p>
                */
            type: PropertyType | undefined;
    }
    export namespace AssetModelPropertyDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelPropertyDefinition) => any;
    }
    /**
        * <p>Contains a composite model definition in an asset model. This composite model definition
        *       is applied to all assets created from the asset model.</p>
        */
    export interface AssetModelCompositeModelDefinition {
            /**
                * <p>The name of the composite model.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the composite model.</p>
                */
            description?: string;
            /**
                * <p>The type of the composite model. For alarm composite models, this type is
                *         <code>AWS/ALARM</code>.</p>
                */
            type: string | undefined;
            /**
                * <p>The asset property definitions for this composite model.</p>
                */
            properties?: AssetModelPropertyDefinition[];
    }
    export namespace AssetModelCompositeModelDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelCompositeModelDefinition) => any;
    }
    /**
        * <p>Describes an asset hierarchy that contains a hierarchy's name, ID, and child asset model
        *       ID that specifies the type of asset that can be in this hierarchy.</p>
        */
    export interface AssetModelHierarchy {
            /**
                * <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
                */
            id?: string;
            /**
                * <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
                */
            name: string | undefined;
            /**
                * <p>The ID of the asset model. All assets in this hierarchy must be instances of the
                *         <code>childAssetModelId</code> asset model.</p>
                */
            childAssetModelId: string | undefined;
    }
    export namespace AssetModelHierarchy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelHierarchy) => any;
    }
    /**
        * <p>Contains an asset model hierarchy used in asset model creation. An asset model hierarchy
        *       determines the kind (or type) of asset that can belong to a hierarchy.</p>
        */
    export interface AssetModelHierarchyDefinition {
            /**
                * <p>The name of the asset model hierarchy definition (as specified in the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation).</p>
                */
            name: string | undefined;
            /**
                * <p>The ID of an asset model for this hierarchy.</p>
                */
            childAssetModelId: string | undefined;
    }
    export namespace AssetModelHierarchyDefinition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelHierarchyDefinition) => any;
    }
    export enum AssetModelState {
            ACTIVE = "ACTIVE",
            CREATING = "CREATING",
            DELETING = "DELETING",
            FAILED = "FAILED",
            PROPAGATING = "PROPAGATING",
            UPDATING = "UPDATING"
    }
    export enum ErrorCode {
            INTERNAL_FAILURE = "INTERNAL_FAILURE",
            VALIDATION_ERROR = "VALIDATION_ERROR"
    }
    export enum DetailedErrorCode {
            INCOMPATIBLE_COMPUTE_LOCATION = "INCOMPATIBLE_COMPUTE_LOCATION",
            INCOMPATIBLE_FORWARDING_CONFIGURATION = "INCOMPATIBLE_FORWARDING_CONFIGURATION"
    }
    /**
        * <p>Contains detailed error information. </p>
        */
    export interface DetailedError {
            /**
                * <p>The error code. </p>
                */
            code: DetailedErrorCode | string | undefined;
            /**
                * <p>The error message. </p>
                */
            message: string | undefined;
    }
    export namespace DetailedError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DetailedError) => any;
    }
    /**
        * <p>Contains the details of an IoT SiteWise error.</p>
        */
    export interface ErrorDetails {
            /**
                * <p>The error code.</p>
                */
            code: ErrorCode | string | undefined;
            /**
                * <p>The error message.</p>
                */
            message: string | undefined;
            /**
                * <p> A list of detailed errors. </p>
                */
            details?: DetailedError[];
    }
    export namespace ErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ErrorDetails) => any;
    }
    /**
        * <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model
        *         states</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface AssetModelStatus {
            /**
                * <p>The current state of the asset model.</p>
                */
            state: AssetModelState | string | undefined;
            /**
                * <p>Contains associated error information, if any.</p>
                */
            error?: ErrorDetails;
    }
    export namespace AssetModelStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelStatus) => any;
    }
    /**
        * <p>Contains a summary of an asset model.</p>
        */
    export interface AssetModelSummary {
            /**
                * <p>The ID of the asset model (used with IoT SiteWise APIs).</p>
                */
            id: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code>
                *          </p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the asset model.</p>
                */
            name: string | undefined;
            /**
                * <p>The asset model description.</p>
                */
            description: string | undefined;
            /**
                * <p>The date the asset model was created, in Unix epoch time.</p>
                */
            creationDate: Date | undefined;
            /**
                * <p>The date the asset model was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate: Date | undefined;
            /**
                * <p>The current status of the asset model.</p>
                */
            status: AssetModelStatus | undefined;
    }
    export namespace AssetModelSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetModelSummary) => any;
    }
    /**
        * <p>Contains a timestamp with optional nanosecond granularity.</p>
        */
    export interface TimeInNanos {
            /**
                * <p>The timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is
                *       provided by <code>offsetInNanos</code>.</p>
                */
            timeInSeconds: number | undefined;
            /**
                * <p>The nanosecond offset from <code>timeInSeconds</code>.</p>
                */
            offsetInNanos?: number;
    }
    export namespace TimeInNanos {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimeInNanos) => any;
    }
    /**
        * <p>Contains an asset property value (of a single type only).</p>
        */
    export interface Variant {
            /**
                * <p>Asset property data of type string (sequence of characters).</p>
                */
            stringValue?: string;
            /**
                * <p>Asset property data of type integer (whole number).</p>
                */
            integerValue?: number;
            /**
                * <p>Asset property data of type double (floating point number).</p>
                */
            doubleValue?: number;
            /**
                * <p>Asset property data of type Boolean (true or false).</p>
                */
            booleanValue?: boolean;
    }
    export namespace Variant {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Variant) => any;
    }
    /**
        * <p>Contains asset property value information.</p>
        */
    export interface AssetPropertyValue {
            /**
                * <p>The value of the asset property (see <code>Variant</code>).</p>
                */
            value: Variant | undefined;
            /**
                * <p>The timestamp of the asset property value.</p>
                */
            timestamp: TimeInNanos | undefined;
            /**
                * <p>The quality of the asset property value.</p>
                */
            quality?: Quality | string;
    }
    export namespace AssetPropertyValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetPropertyValue) => any;
    }
    export enum AssetRelationshipType {
            HIERARCHY = "HIERARCHY"
    }
    /**
        * <p>Contains information about assets that are related to one another.</p>
        */
    export interface AssetRelationshipSummary {
            /**
                * <p>The assets that are related through an asset hierarchy.</p>
                *          <p>This object is present if the <code>relationshipType</code> is
                *       <code>HIERARCHY</code>.</p>
                */
            hierarchyInfo?: AssetHierarchyInfo;
            /**
                * <p>The relationship type of the assets in this relationship. This value is one of the
                *       following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>HIERARCHY</code> – The assets are related through an asset hierarchy. If
                *           you specify this relationship type, this asset relationship includes the
                *             <code>hierarchyInfo</code> object.</p>
                *             </li>
                *          </ul>
                */
            relationshipType: AssetRelationshipType | string | undefined;
    }
    export namespace AssetRelationshipSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetRelationshipSummary) => any;
    }
    export enum AssetState {
            ACTIVE = "ACTIVE",
            CREATING = "CREATING",
            DELETING = "DELETING",
            FAILED = "FAILED",
            UPDATING = "UPDATING"
    }
    /**
        * <p>Contains information about the current status of an asset. For more information, see
        *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model
        *         states</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface AssetStatus {
            /**
                * <p>The current status of the asset.</p>
                */
            state: AssetState | string | undefined;
            /**
                * <p>Contains associated error information, if any.</p>
                */
            error?: ErrorDetails;
    }
    export namespace AssetStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetStatus) => any;
    }
    /**
        * <p>Contains a summary of an asset.</p>
        */
    export interface AssetSummary {
            /**
                * <p>The ID of the asset.</p>
                */
            id: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code>
                *          </p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the asset.</p>
                */
            name: string | undefined;
            /**
                * <p>The ID of the asset model used to create this asset.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The date the asset was created, in Unix epoch time.</p>
                */
            creationDate: Date | undefined;
            /**
                * <p>The date the asset was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate: Date | undefined;
            /**
                * <p>The current status of the asset.</p>
                */
            status: AssetStatus | undefined;
            /**
                * <p>A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.</p>
                */
            hierarchies: AssetHierarchy[] | undefined;
            /**
                * <p>A description for the asset.</p>
                */
            description?: string;
    }
    export namespace AssetSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssetSummary) => any;
    }
    export interface AssociateAssetsRequest {
            /**
                * <p>The ID of the parent asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of a hierarchy in the parent asset's model. Hierarchies allow different groupings
                *       of assets to be formed that all come from the same asset model. For more information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            hierarchyId: string | undefined;
            /**
                * <p>The ID of the child asset to be associated.</p>
                */
            childAssetId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace AssociateAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateAssetsRequest) => any;
    }
    /**
        * <p>Your request has conflicting operations. This can occur if you're trying to perform more
        *       than one operation on the same resource at the same time.</p>
        */
    export class ConflictingOperationException extends __BaseException {
            readonly name: "ConflictingOperationException";
            readonly $fault: "client";
            /**
                * <p>The ID of the resource that conflicts with this operation.</p>
                */
            resourceId: string | undefined;
            /**
                * <p>The ARN of the resource that conflicts with this operation.</p>
                */
            resourceArn: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictingOperationException, __BaseException>);
    }
    /**
        * <p>IoT SiteWise can't process your request right now. Try again later.</p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p>The request isn't valid. This can occur if your request contains malformed JSON or
        *       unsupported characters. Check your request and try again.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>You've reached the limit for a resource. For example, this can occur if you're trying to
        *       associate more than the allowed number of child assets or attempting to create more than the
        *       allowed number of properties for an asset model.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p>The requested resource can't be found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>Your request exceeded a rate limit. For example, you might have exceeded the number of
        *       IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so
        *       on.</p>
        *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>Contains a summary of an associated asset.</p>
        */
    export interface AssociatedAssetsSummary {
            /**
                * <p>The ID of the asset.</p>
                */
            id: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code>
                *          </p>
                */
            arn: string | undefined;
            /**
                * <p>The name of the asset.</p>
                */
            name: string | undefined;
            /**
                * <p>The ID of the asset model used to create the asset.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The date the asset was created, in Unix epoch time.</p>
                */
            creationDate: Date | undefined;
            /**
                * <p>The date the asset was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate: Date | undefined;
            /**
                * <p>The current status of the asset.</p>
                */
            status: AssetStatus | undefined;
            /**
                * <p>A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.</p>
                */
            hierarchies: AssetHierarchy[] | undefined;
            /**
                * <p>A description for the asset.</p>
                */
            description?: string;
    }
    export namespace AssociatedAssetsSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociatedAssetsSummary) => any;
    }
    export interface AssociateTimeSeriesToAssetPropertyRequest {
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias: string | undefined;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace AssociateTimeSeriesToAssetPropertyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateTimeSeriesToAssetPropertyRequest) => any;
    }
    export enum AuthMode {
            IAM = "IAM",
            SSO = "SSO"
    }
    export interface BatchAssociateProjectAssetsRequest {
            /**
                * <p>The ID of the project to which to associate the assets.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The IDs of the assets to be associated to the project.</p>
                */
            assetIds: string[] | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace BatchAssociateProjectAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchAssociateProjectAssetsRequest) => any;
    }
    export interface BatchAssociateProjectAssetsResponse {
            /**
                * <p>A list of associated error information, if any.</p>
                */
            errors?: AssetErrorDetails[];
    }
    export namespace BatchAssociateProjectAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchAssociateProjectAssetsResponse) => any;
    }
    export interface BatchDisassociateProjectAssetsRequest {
            /**
                * <p>The ID of the project from which to disassociate the assets.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The IDs of the assets to be disassociated from the project.</p>
                */
            assetIds: string[] | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace BatchDisassociateProjectAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDisassociateProjectAssetsRequest) => any;
    }
    export interface BatchDisassociateProjectAssetsResponse {
            /**
                * <p>A list of associated error information, if any.</p>
                */
            errors?: AssetErrorDetails[];
    }
    export namespace BatchDisassociateProjectAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchDisassociateProjectAssetsResponse) => any;
    }
    export enum TimeOrdering {
            ASCENDING = "ASCENDING",
            DESCENDING = "DESCENDING"
    }
    /**
        * <p>Contains information for an asset property aggregate entry that is associated with the
        *   <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> API.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        */
    export interface BatchGetAssetPropertyAggregatesEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The data aggregating function.</p>
                */
            aggregateTypes: (AggregateType | string)[] | undefined;
            /**
                * <p>The time interval over which to aggregate data.</p>
                */
            resolution: string | undefined;
            /**
                * <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            startDate: Date | undefined;
            /**
                * <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            endDate: Date | undefined;
            /**
                * <p>The quality by which to filter asset data.</p>
                */
            qualities?: (Quality | string)[];
            /**
                * <p>The chronological sorting order of the requested information.</p>
                *          <p>Default: <code>ASCENDING</code>
                *          </p>
                */
            timeOrdering?: TimeOrdering | string;
    }
    export namespace BatchGetAssetPropertyAggregatesEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesEntry) => any;
    }
    export interface BatchGetAssetPropertyAggregatesRequest {
            /**
                * <p>The list of asset property aggregate entries for the batch get request.
                *   You can specify up to 16 entries per request.</p>
                */
            entries: BatchGetAssetPropertyAggregatesEntry[] | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p>
                *          <ul>
                *             <li>
                *                <p>The size of the result set is less than 1 MB.</p>
                *             </li>
                *             <li>
                *                <p>The number of data points in the result set is less than the value of <code>maxResults</code>.
                *         The maximum value of <code>maxResults</code> is 4000.</p>
                *             </li>
                *          </ul>
                */
            maxResults?: number;
    }
    export namespace BatchGetAssetPropertyAggregatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesRequest) => any;
    }
    export enum BatchGetAssetPropertyAggregatesErrorCode {
            AccessDeniedException = "AccessDeniedException",
            InvalidRequestException = "InvalidRequestException",
            ResourceNotFoundException = "ResourceNotFoundException"
    }
    /**
        * <p>Contains error information for an asset property aggregate entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> API.</p>
        */
    export interface BatchGetAssetPropertyAggregatesErrorEntry {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyAggregatesErrorCode | string | undefined;
            /**
                * <p>The associated error message.</p>
                */
            errorMessage: string | undefined;
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
    }
    export namespace BatchGetAssetPropertyAggregatesErrorEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesErrorEntry) => any;
    }
    export enum BatchEntryCompletionStatus {
            ERROR = "ERROR",
            SUCCESS = "SUCCESS"
    }
    /**
        * <p>Contains the error code and the timestamp for an asset property aggregate entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> API.</p>
        */
    export interface BatchGetAssetPropertyAggregatesErrorInfo {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyAggregatesErrorCode | string | undefined;
            /**
                * <p>The date the error occurred, in Unix epoch time.</p>
                */
            errorTimestamp: Date | undefined;
    }
    export namespace BatchGetAssetPropertyAggregatesErrorInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesErrorInfo) => any;
    }
    /**
        * <p>Contains information for an entry that has been processed by the previous
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> request.</p>
        */
    export interface BatchGetAssetPropertyAggregatesSkippedEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The completion status of each entry that is associated with the
                *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> API.</p>
                */
            completionStatus: BatchEntryCompletionStatus | string | undefined;
            /**
                * <p>The error information, such as the error code and the timestamp.</p>
                */
            errorInfo?: BatchGetAssetPropertyAggregatesErrorInfo;
    }
    export namespace BatchGetAssetPropertyAggregatesSkippedEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesSkippedEntry) => any;
    }
    /**
        * <p>Contains success information for an entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html">BatchGetAssetPropertyAggregates</a> API.</p>
        */
    export interface BatchGetAssetPropertyAggregatesSuccessEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The requested aggregated asset property values (for example, average, minimum, and maximum).</p>
                */
            aggregatedValues: AggregatedValue[] | undefined;
    }
    export namespace BatchGetAssetPropertyAggregatesSuccessEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesSuccessEntry) => any;
    }
    export interface BatchGetAssetPropertyAggregatesResponse {
            /**
                * <p>A list of the errors (if any) associated with the batch request. Each error entry
                *       contains the <code>entryId</code> of the entry that failed.</p>
                */
            errorEntries: BatchGetAssetPropertyAggregatesErrorEntry[] | undefined;
            /**
                * <p>A list of entries that were processed successfully by this batch request. Each success entry
                *       contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
                */
            successEntries: BatchGetAssetPropertyAggregatesSuccessEntry[] | undefined;
            /**
                * <p>A list of entries that were not processed by this batch request.
                *       because these entries had been completely processed by previous paginated requests.
                *       Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
                */
            skippedEntries: BatchGetAssetPropertyAggregatesSkippedEntry[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace BatchGetAssetPropertyAggregatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyAggregatesResponse) => any;
    }
    /**
        * <p>The requested service is unavailable.</p>
        */
    export class ServiceUnavailableException extends __BaseException {
            readonly name: "ServiceUnavailableException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>);
    }
    /**
        * <p>Contains information for an asset property value entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValue</a> API.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        */
    export interface BatchGetAssetPropertyValueEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
    }
    export namespace BatchGetAssetPropertyValueEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueEntry) => any;
    }
    export interface BatchGetAssetPropertyValueRequest {
            /**
                * <p>The list of asset property value entries for the batch get request.
                *     You can specify up to 16 entries per request.</p>
                */
            entries: BatchGetAssetPropertyValueEntry[] | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
    }
    export namespace BatchGetAssetPropertyValueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueRequest) => any;
    }
    export enum BatchGetAssetPropertyValueErrorCode {
            AccessDeniedException = "AccessDeniedException",
            InvalidRequestException = "InvalidRequestException",
            ResourceNotFoundException = "ResourceNotFoundException"
    }
    /**
        * <p>Contains error information for an asset property value entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValue</a> API.</p>
        */
    export interface BatchGetAssetPropertyValueErrorEntry {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyValueErrorCode | string | undefined;
            /**
                * <p>The associated error message.</p>
                */
            errorMessage: string | undefined;
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
    }
    export namespace BatchGetAssetPropertyValueErrorEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueErrorEntry) => any;
    }
    /**
        * <p>The error information, such as the error code and the timestamp.</p>
        */
    export interface BatchGetAssetPropertyValueErrorInfo {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyValueErrorCode | string | undefined;
            /**
                * <p>The date the error occurred, in Unix epoch time.</p>
                */
            errorTimestamp: Date | undefined;
    }
    export namespace BatchGetAssetPropertyValueErrorInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueErrorInfo) => any;
    }
    /**
        * <p>Contains information for an entry that has been processed by the previous
        *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValue</a> request.</p>
        */
    export interface BatchGetAssetPropertyValueSkippedEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The completion status of each entry that is associated with the
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValue</a> request.</p>
                */
            completionStatus: BatchEntryCompletionStatus | string | undefined;
            /**
                * <p>The error information, such as the error code and the timestamp.</p>
                */
            errorInfo?: BatchGetAssetPropertyValueErrorInfo;
    }
    export namespace BatchGetAssetPropertyValueSkippedEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueSkippedEntry) => any;
    }
    /**
        * <p>Contains success information for an entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValue</a> API.</p>
        */
    export interface BatchGetAssetPropertyValueSuccessEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>Contains asset property value information.</p>
                */
            assetPropertyValue?: AssetPropertyValue;
    }
    export namespace BatchGetAssetPropertyValueSuccessEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueSuccessEntry) => any;
    }
    export interface BatchGetAssetPropertyValueResponse {
            /**
                * <p>A list of the errors (if any) associated with the batch request. Each error entry
                *       contains the <code>entryId</code> of the entry that failed.</p>
                */
            errorEntries: BatchGetAssetPropertyValueErrorEntry[] | undefined;
            /**
                * <p>A list of entries that were processed successfully by this batch request. Each success entry
                *       contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
                */
            successEntries: BatchGetAssetPropertyValueSuccessEntry[] | undefined;
            /**
                * <p>A list of entries that were not processed by this batch request.
                *       because these entries had been completely processed by previous paginated requests.
                *       Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
                */
            skippedEntries: BatchGetAssetPropertyValueSkippedEntry[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace BatchGetAssetPropertyValueResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueResponse) => any;
    }
    /**
        * <p>Contains information for an asset property historical value entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValueHistory</a> API.</p>
        *          <p>To identify an asset property, you must specify one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
        *             </li>
        *             <li>
        *                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
        *           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
        *             </li>
        *          </ul>
        */
    export interface BatchGetAssetPropertyValueHistoryEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            startDate?: Date;
            /**
                * <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            endDate?: Date;
            /**
                * <p>The quality by which to filter asset data.</p>
                */
            qualities?: (Quality | string)[];
            /**
                * <p>The chronological sorting order of the requested information.</p>
                *          <p>Default: <code>ASCENDING</code>
                *          </p>
                */
            timeOrdering?: TimeOrdering | string;
    }
    export namespace BatchGetAssetPropertyValueHistoryEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistoryEntry) => any;
    }
    export interface BatchGetAssetPropertyValueHistoryRequest {
            /**
                * <p>The list of asset property historical value entries for the batch get request.
                *     You can specify up to 16 entries per request.</p>
                */
            entries: BatchGetAssetPropertyValueHistoryEntry[] | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p>
                *          <ul>
                *             <li>
                *                <p>The size of the result set is less than 1 MB.</p>
                *             </li>
                *             <li>
                *                <p>The number of data points in the result set is less than the value of <code>maxResults</code>.
                *         The maximum value of <code>maxResults</code> is 4000.</p>
                *             </li>
                *          </ul>
                */
            maxResults?: number;
    }
    export namespace BatchGetAssetPropertyValueHistoryRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistoryRequest) => any;
    }
    export enum BatchGetAssetPropertyValueHistoryErrorCode {
            AccessDeniedException = "AccessDeniedException",
            InvalidRequestException = "InvalidRequestException",
            ResourceNotFoundException = "ResourceNotFoundException"
    }
    /**
        * <p>A list of the errors (if any) associated with the batch request. Each error entry
        *       contains the <code>entryId</code> of the entry that failed.</p>
        */
    export interface BatchGetAssetPropertyValueHistoryErrorEntry {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyValueHistoryErrorCode | string | undefined;
            /**
                * <p>The associated error message.</p>
                */
            errorMessage: string | undefined;
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
    }
    export namespace BatchGetAssetPropertyValueHistoryErrorEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistoryErrorEntry) => any;
    }
    /**
        * <p>The error information, such as the error code and the timestamp.</p>
        */
    export interface BatchGetAssetPropertyValueHistoryErrorInfo {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchGetAssetPropertyValueHistoryErrorCode | string | undefined;
            /**
                * <p>The date the error occurred, in Unix epoch time.</p>
                */
            errorTimestamp: Date | undefined;
    }
    export namespace BatchGetAssetPropertyValueHistoryErrorInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistoryErrorInfo) => any;
    }
    /**
        * <p>Contains information for an entry that has been processed by the previous
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValueHistory</a> request.</p>
        */
    export interface BatchGetAssetPropertyValueHistorySkippedEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The completion status of each entry that is associated with the
                *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValueHistory.html">BatchGetAssetPropertyValueHistory</a> API.</p>
                */
            completionStatus: BatchEntryCompletionStatus | string | undefined;
            /**
                * <p>The error information, such as the error code and the timestamp.</p>
                */
            errorInfo?: BatchGetAssetPropertyValueHistoryErrorInfo;
    }
    export namespace BatchGetAssetPropertyValueHistorySkippedEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistorySkippedEntry) => any;
    }
    /**
        * <p>Contains success information for an entry that is associated with the
        *     <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValueHistory</a> API.</p>
        */
    export interface BatchGetAssetPropertyValueHistorySuccessEntry {
            /**
                * <p>The ID of the entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The requested historical values for the specified asset property.</p>
                */
            assetPropertyValueHistory: AssetPropertyValue[] | undefined;
    }
    export namespace BatchGetAssetPropertyValueHistorySuccessEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistorySuccessEntry) => any;
    }
    export interface BatchGetAssetPropertyValueHistoryResponse {
            /**
                * <p>A list of the errors (if any) associated with the batch request. Each error entry
                *       contains the <code>entryId</code> of the entry that failed.</p>
                */
            errorEntries: BatchGetAssetPropertyValueHistoryErrorEntry[] | undefined;
            /**
                * <p>A list of entries that were processed successfully by this batch request. Each success entry
                *       contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
                */
            successEntries: BatchGetAssetPropertyValueHistorySuccessEntry[] | undefined;
            /**
                * <p>A list of entries that were not processed by this batch request.
                *       because these entries had been completely processed by previous paginated requests.
                *       Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
                */
            skippedEntries: BatchGetAssetPropertyValueHistorySkippedEntry[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace BatchGetAssetPropertyValueHistoryResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchGetAssetPropertyValueHistoryResponse) => any;
    }
    /**
        * <p>Contains a list of value updates for an asset property in the list of asset entries
        *       consumed by the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API
        *       operation.</p>
        */
    export interface PutAssetPropertyValueEntry {
            /**
                * <p>The user specified ID for the entry. You can use this ID to identify which entries
                *       failed.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The ID of the asset to update.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property for this entry.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The list of property values to upload. You can specify up to 10
                *         <code>propertyValues</code> array elements. </p>
                */
            propertyValues: AssetPropertyValue[] | undefined;
    }
    export namespace PutAssetPropertyValueEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAssetPropertyValueEntry) => any;
    }
    export interface BatchPutAssetPropertyValueRequest {
            /**
                * <p>The list of asset property value entries for the batch put request. You can specify up to
                *       10 entries per request.</p>
                */
            entries: PutAssetPropertyValueEntry[] | undefined;
    }
    export namespace BatchPutAssetPropertyValueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchPutAssetPropertyValueRequest) => any;
    }
    export enum BatchPutAssetPropertyValueErrorCode {
            AccessDeniedException = "AccessDeniedException",
            ConflictingOperationException = "ConflictingOperationException",
            InternalFailureException = "InternalFailureException",
            InvalidRequestException = "InvalidRequestException",
            LimitExceededException = "LimitExceededException",
            ResourceNotFoundException = "ResourceNotFoundException",
            ServiceUnavailableException = "ServiceUnavailableException",
            ThrottlingException = "ThrottlingException",
            TimestampOutOfRangeException = "TimestampOutOfRangeException"
    }
    /**
        * <p>Contains error information from updating a batch of asset property values.</p>
        */
    export interface BatchPutAssetPropertyError {
            /**
                * <p>The error code.</p>
                */
            errorCode: BatchPutAssetPropertyValueErrorCode | string | undefined;
            /**
                * <p>The associated error message.</p>
                */
            errorMessage: string | undefined;
            /**
                * <p>A list of timestamps for each  error, if any.</p>
                */
            timestamps: TimeInNanos[] | undefined;
    }
    export namespace BatchPutAssetPropertyError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchPutAssetPropertyError) => any;
    }
    /**
        * <p>Contains error information for asset property value entries that are associated with the
        *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API.</p>
        */
    export interface BatchPutAssetPropertyErrorEntry {
            /**
                * <p>The ID of the failed entry.</p>
                */
            entryId: string | undefined;
            /**
                * <p>The list of update property value errors.</p>
                */
            errors: BatchPutAssetPropertyError[] | undefined;
    }
    export namespace BatchPutAssetPropertyErrorEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchPutAssetPropertyErrorEntry) => any;
    }
    export interface BatchPutAssetPropertyValueResponse {
            /**
                * <p>A list of the errors (if any) associated with the batch put request. Each error entry
                *       contains the <code>entryId</code> of the entry that failed.</p>
                */
            errorEntries: BatchPutAssetPropertyErrorEntry[] | undefined;
    }
    export namespace BatchPutAssetPropertyValueResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BatchPutAssetPropertyValueResponse) => any;
    }
    export interface CreateAccessPolicyRequest {
            /**
                * <p>The identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.</p>
                */
            accessPolicyIdentity: Identity | undefined;
            /**
                * <p>The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.</p>
                */
            accessPolicyResource: Resource | undefined;
            /**
                * <p>The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
                */
            accessPolicyPermission: Permission | string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A list of key-value pairs that contain metadata for the access policy. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your
                *         IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateAccessPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPolicyRequest) => any;
    }
    export interface CreateAccessPolicyResponse {
            /**
                * <p>The ID of the access policy.</p>
                */
            accessPolicyId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code>
                *          </p>
                */
            accessPolicyArn: string | undefined;
    }
    export namespace CreateAccessPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPolicyResponse) => any;
    }
    export interface CreateAssetRequest {
            /**
                * <p>A unique, friendly name for the asset.</p>
                */
            assetName: string | undefined;
            /**
                * <p>The ID of the asset model from which to create the asset.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A list of key-value pairs that contain metadata for the asset. For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>A description for the asset.</p>
                */
            assetDescription?: string;
    }
    export namespace CreateAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssetRequest) => any;
    }
    export interface CreateAssetResponse {
            /**
                * <p>The ID of the asset. This ID uniquely identifies the asset within IoT SiteWise and can be used with other
                *       IoT SiteWise APIs.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code>
                *          </p>
                */
            assetArn: string | undefined;
            /**
                * <p>The status of the asset, which contains a state (<code>CREATING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            assetStatus: AssetStatus | undefined;
    }
    export namespace CreateAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssetResponse) => any;
    }
    /**
        * <p>The resource already exists.</p>
        */
    export class ResourceAlreadyExistsException extends __BaseException {
            readonly name: "ResourceAlreadyExistsException";
            readonly $fault: "client";
            /**
                * <p>The ID of the resource that already exists.</p>
                */
            resourceId: string | undefined;
            /**
                * <p>The ARN of the resource that already exists.</p>
                */
            resourceArn: string | undefined;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>);
    }
    export interface CreateAssetModelRequest {
            /**
                * <p>A unique, friendly name for the asset model.</p>
                */
            assetModelName: string | undefined;
            /**
                * <p>A description for the asset model.</p>
                */
            assetModelDescription?: string;
            /**
                * <p>The property definitions of the asset model. For more information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>You can specify up to 200 properties per asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            assetModelProperties?: AssetModelPropertyDefinition[];
            /**
                * <p>The hierarchy definitions of the asset model. Each hierarchy specifies an asset model
                *       whose assets can be children of any other assets created from this asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>You can specify up to 10 hierarchies per asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            assetModelHierarchies?: AssetModelHierarchyDefinition[];
            /**
                * <p>The composite asset models that are part of this asset model.
                *       Composite asset models are asset models that contain specific properties. Each composite model
                *       has a type that defines the properties that the composite model supports. Use composite asset
                *       models to define alarms on this asset model.</p>
                */
            assetModelCompositeModels?: AssetModelCompositeModelDefinition[];
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A list of key-value pairs that contain metadata for the asset model. For more information,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateAssetModelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssetModelRequest) => any;
    }
    export interface CreateAssetModelResponse {
            /**
                * <p>The ID of the asset model. You can use this ID when you call other IoT SiteWise APIs.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code>
                *          </p>
                */
            assetModelArn: string | undefined;
            /**
                * <p>The status of the asset model, which contains a state (<code>CREATING</code> after
                *       successfully calling this operation) and any error message.</p>
                */
            assetModelStatus: AssetModelStatus | undefined;
    }
    export namespace CreateAssetModelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAssetModelResponse) => any;
    }
    /**
        * <p>The Amazon S3 destination where errors associated with the job creation request are saved.</p>
        */
    export interface ErrorReportLocation {
            /**
                * <p>The name of the Amazon S3 bucket to which errors associated with the bulk import job are sent.</p>
                */
            bucket: string | undefined;
            /**
                * <p>Amazon S3 uses the prefix as a folder name to organize data in the bucket.
                *   Each Amazon S3 object has a key that is its unique identifier in the bucket.
                *   Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
                *   For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html">Organizing objects using prefixes</a>
                *   in the <i>Amazon Simple Storage Service User Guide</i>.</p>
                */
            prefix: string | undefined;
    }
    export namespace ErrorReportLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ErrorReportLocation) => any;
    }
    /**
        * <p>The file in Amazon S3 where your data is saved. </p>
        */
    export interface File {
            /**
                * <p>The name of the Amazon S3 bucket from which data is imported.</p>
                */
            bucket: string | undefined;
            /**
                * <p>The key of the Amazon S3 object that contains your data. Each object has a key that is a
                *     unique identifier. Each object has exactly one key.</p>
                */
            key: string | undefined;
            /**
                * <p>The version ID to identify a specific version of the Amazon S3 object that contains your data.</p>
                */
            versionId?: string;
    }
    export namespace File {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: File) => any;
    }
    export enum ColumnName {
            ALIAS = "ALIAS",
            ASSET_ID = "ASSET_ID",
            DATA_TYPE = "DATA_TYPE",
            PROPERTY_ID = "PROPERTY_ID",
            QUALITY = "QUALITY",
            TIMESTAMP_NANO_OFFSET = "TIMESTAMP_NANO_OFFSET",
            TIMESTAMP_SECONDS = "TIMESTAMP_SECONDS",
            VALUE = "VALUE"
    }
    /**
        * <p>A .csv file.</p>
        */
    export interface Csv {
            /**
                * <p>The column names specified in the .csv file.</p>
                */
            columnNames?: (ColumnName | string)[];
    }
    export namespace Csv {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Csv) => any;
    }
    /**
        * <p>The file format of the data.</p>
        */
    export interface FileFormat {
            /**
                * <p>The .csv file format.</p>
                */
            csv?: Csv;
    }
    export namespace FileFormat {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FileFormat) => any;
    }
    /**
        * <p>Contains the configuration information of a job, such as the file format used to save data in Amazon S3.</p>
        */
    export interface JobConfiguration {
            /**
                * <p>The file format of the data in Amazon S3.</p>
                */
            fileFormat: FileFormat | undefined;
    }
    export namespace JobConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobConfiguration) => any;
    }
    export interface CreateBulkImportJobRequest {
            /**
                * <p>The unique name that helps identify the job request.</p>
                */
            jobName: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.</p>
                */
            jobRoleArn: string | undefined;
            /**
                * <p>The files in the specified Amazon S3 bucket that contain your data.</p>
                */
            files: File[] | undefined;
            /**
                * <p>The Amazon S3 destination where errors associated with the job creation request are saved.</p>
                */
            errorReportLocation: ErrorReportLocation | undefined;
            /**
                * <p>Contains the configuration information of a job, such as the file format used to save data in Amazon S3.</p>
                */
            jobConfiguration: JobConfiguration | undefined;
    }
    export namespace CreateBulkImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBulkImportJobRequest) => any;
    }
    export enum JobStatus {
            CANCELLED = "CANCELLED",
            COMPLETED = "COMPLETED",
            COMPLETED_WITH_FAILURES = "COMPLETED_WITH_FAILURES",
            FAILED = "FAILED",
            PENDING = "PENDING",
            RUNNING = "RUNNING"
    }
    export interface CreateBulkImportJobResponse {
            /**
                * <p>The ID of the job.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The unique name that helps identify the job request.</p>
                */
            jobName: string | undefined;
            /**
                * <p>The status of the bulk import job can be one of following values.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>PENDING</code> – IoT SiteWise is waiting for the current bulk import job to finish.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>CANCELLED</code> – The bulk import job has been canceled.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>RUNNING</code> – IoT SiteWise is processing your request to import your data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED</code> – IoT SiteWise successfully completed your request to import data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FAILED</code> – IoT SiteWise couldn't process your request to import data from Amazon S3.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED_WITH_FAILURES</code> – IoT SiteWise completed your request to import data from Amazon S3 with errors.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *          </ul>
                */
            jobStatus: JobStatus | string | undefined;
    }
    export namespace CreateBulkImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBulkImportJobResponse) => any;
    }
    export interface CreateDashboardRequest {
            /**
                * <p>The ID of the project in which to create the dashboard.</p>
                */
            projectId: string | undefined;
            /**
                * <p>A friendly name for the dashboard.</p>
                */
            dashboardName: string | undefined;
            /**
                * <p>A description for the dashboard.</p>
                */
            dashboardDescription?: string;
            /**
                * <p>The dashboard definition specified in a JSON literal. For detailed information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            dashboardDefinition: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A list of key-value pairs that contain metadata for the dashboard. For more information,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateDashboardRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDashboardRequest) => any;
    }
    export interface CreateDashboardResponse {
            /**
                * <p>The ID of the dashboard.</p>
                */
            dashboardId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code>
                *          </p>
                */
            dashboardArn: string | undefined;
    }
    export namespace CreateDashboardResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateDashboardResponse) => any;
    }
    /**
        * <p>Contains details for a gateway that runs on IoT Greengrass. To create a gateway that runs on IoT Greengrass,
        *       you must add the IoT SiteWise connector to a Greengrass group and deploy it. Your Greengrass
        *       group must also have permissions to upload data to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a
        *         gateway</a> in the <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface Greengrass {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Greengrass group. For more information about how to find a group's
                *       ARN, see <a href="https://docs.aws.amazon.com/greengrass/latest/apireference/listgroups-get.html">ListGroups</a> and <a href="https://docs.aws.amazon.com/greengrass/latest/apireference/getgroup-get.html">GetGroup</a> in the
                *         <i>IoT Greengrass API Reference</i>.</p>
                */
            groupArn: string | undefined;
    }
    export namespace Greengrass {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Greengrass) => any;
    }
    /**
        * <p>Contains details for a gateway that runs on IoT Greengrass V2. To create a gateway that runs on IoT Greengrass
        *       V2, you must deploy the IoT SiteWise Edge component to your gateway device. Your <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/device-service-role.html">Greengrass
        *         device role</a> must use the <code>AWSIoTSiteWiseEdgeAccess</code> policy. For more
        *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/sw-gateways.html">Using IoT SiteWise at the edge</a> in the
        *         <i>IoT SiteWise User Guide</i>.</p>
        */
    export interface GreengrassV2 {
            /**
                * <p>The name of the IoT thing for your IoT Greengrass V2 core device.</p>
                */
            coreDeviceThingName: string | undefined;
    }
    export namespace GreengrassV2 {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GreengrassV2) => any;
    }
    /**
        * <p>Contains a gateway's platform information.</p>
        */
    export interface GatewayPlatform {
            /**
                * <p>A gateway that runs on IoT Greengrass.</p>
                */
            greengrass?: Greengrass;
            /**
                * <p>A gateway that runs on IoT Greengrass V2.</p>
                */
            greengrassV2?: GreengrassV2;
    }
    export namespace GatewayPlatform {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GatewayPlatform) => any;
    }
    export interface CreateGatewayRequest {
            /**
                * <p>A unique, friendly name for the gateway.</p>
                */
            gatewayName: string | undefined;
            /**
                * <p>The gateway's platform. You can only specify one platform in a gateway.</p>
                */
            gatewayPlatform: GatewayPlatform | undefined;
            /**
                * <p>A list of key-value pairs that contain metadata for the gateway. For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateGatewayRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGatewayRequest) => any;
    }
    export interface CreateGatewayResponse {
            /**
                * <p>The ID of the gateway device. You can use this ID when you call other IoT SiteWise APIs.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code>
                *          </p>
                */
            gatewayArn: string | undefined;
    }
    export namespace CreateGatewayResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateGatewayResponse) => any;
    }
    export enum ImageFileType {
            PNG = "PNG"
    }
    /**
        * <p>Contains an image file.</p>
        */
    export interface ImageFile {
            /**
                * <p>The image file contents, represented as a base64-encoded string. The file size must be
                *       less than 1 MB.</p>
                */
            data: Uint8Array | undefined;
            /**
                * <p>The file type of the image.</p>
                */
            type: ImageFileType | string | undefined;
    }
    export namespace ImageFile {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImageFile) => any;
    }
    export interface CreatePortalRequest {
            /**
                * <p>A friendly name for the portal.</p>
                */
            portalName: string | undefined;
            /**
                * <p>A description for the portal.</p>
                */
            portalDescription?: string;
            /**
                * <p>The Amazon Web Services administrator's contact email address.</p>
                */
            portalContactEmail: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A logo image to display in the portal. Upload a square, high-resolution image. The
                *       image is displayed on a dark background.</p>
                */
            portalLogoImageFile?: ImageFile;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise
                *       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>A list of key-value pairs that contain metadata for the portal. For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>The service to use to authenticate users to the portal. Choose from the following
                *       options:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>SSO</code> – The portal uses Amazon Web Services Single Sign On to authenticate users and manage
                *           user permissions. Before you can create a portal that uses Amazon Web Services SSO, you must enable Amazon Web Services SSO.
                *           For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso">Enabling Amazon Web Services SSO</a> in the
                *             <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than
                *           the China Regions.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage
                *           user permissions.</p>
                *             </li>
                *          </ul>
                *          <p>You can't change this value after you create a portal.</p>
                *          <p>Default: <code>SSO</code>
                *          </p>
                */
            portalAuthMode?: AuthMode | string;
            /**
                * <p>The email address that sends alarm notifications.</p>
                *          <important>
                *             <p>If you use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">IoT Events managed Lambda
                *           function</a> to manage your emails, you must <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html">verify the sender email
                *           address in Amazon SES</a>.</p>
                *          </important>
                */
            notificationSenderEmail?: string;
            /**
                * <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.
                *   You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
                *   For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.</p>
                */
            alarms?: Alarms;
    }
    export namespace CreatePortalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortalRequest) => any;
    }
    export enum MonitorErrorCode {
            INTERNAL_FAILURE = "INTERNAL_FAILURE",
            LIMIT_EXCEEDED = "LIMIT_EXCEEDED",
            VALIDATION_ERROR = "VALIDATION_ERROR"
    }
    /**
        * <p>Contains IoT SiteWise Monitor error details.</p>
        */
    export interface MonitorErrorDetails {
            /**
                * <p>The error code.</p>
                */
            code?: MonitorErrorCode | string;
            /**
                * <p>The error message.</p>
                */
            message?: string;
    }
    export namespace MonitorErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MonitorErrorDetails) => any;
    }
    export enum PortalState {
            ACTIVE = "ACTIVE",
            CREATING = "CREATING",
            DELETING = "DELETING",
            FAILED = "FAILED",
            UPDATING = "UPDATING"
    }
    /**
        * <p>Contains information about the current status of a portal.</p>
        */
    export interface PortalStatus {
            /**
                * <p>The current state of the portal.</p>
                */
            state: PortalState | string | undefined;
            /**
                * <p>Contains associated error information, if any.</p>
                */
            error?: MonitorErrorDetails;
    }
    export namespace PortalStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PortalStatus) => any;
    }
    export interface CreatePortalResponse {
            /**
                * <p>The ID of the created portal.</p>
                */
            portalId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code>
                *          </p>
                */
            portalArn: string | undefined;
            /**
                * <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that
                *       use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the
                *       IoT SiteWise console to get a URL that you can use to access the portal.</p>
                */
            portalStartUrl: string | undefined;
            /**
                * <p>The status of the portal, which contains a state (<code>CREATING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            portalStatus: PortalStatus | undefined;
            /**
                * <p>The associated Amazon Web Services SSO application ID, if the portal uses Amazon Web Services SSO.</p>
                */
            ssoApplicationId: string | undefined;
    }
    export namespace CreatePortalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreatePortalResponse) => any;
    }
    export interface CreateProjectRequest {
            /**
                * <p>The ID of the portal in which to create the project.</p>
                */
            portalId: string | undefined;
            /**
                * <p>A friendly name for the project.</p>
                */
            projectName: string | undefined;
            /**
                * <p>A description for the project.</p>
                */
            projectDescription?: string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A list of key-value pairs that contain metadata for the project. For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateProjectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProjectRequest) => any;
    }
    export interface CreateProjectResponse {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code>
                *          </p>
                */
            projectArn: string | undefined;
    }
    export namespace CreateProjectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateProjectResponse) => any;
    }
    export interface DeleteAccessPolicyRequest {
            /**
                * <p>The ID of the access policy to be deleted.</p>
                */
            accessPolicyId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteAccessPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPolicyRequest) => any;
    }
    export interface DeleteAccessPolicyResponse {
    }
    export namespace DeleteAccessPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPolicyResponse) => any;
    }
    export interface DeleteAssetRequest {
            /**
                * <p>The ID of the asset to delete.</p>
                */
            assetId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssetRequest) => any;
    }
    export interface DeleteAssetResponse {
            /**
                * <p>The status of the asset, which contains a state (<code>DELETING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            assetStatus: AssetStatus | undefined;
    }
    export namespace DeleteAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssetResponse) => any;
    }
    export interface DeleteAssetModelRequest {
            /**
                * <p>The ID of the asset model to delete.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteAssetModelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssetModelRequest) => any;
    }
    export interface DeleteAssetModelResponse {
            /**
                * <p>The status of the asset model, which contains a state (<code>DELETING</code> after
                *       successfully calling this operation) and any error message.</p>
                */
            assetModelStatus: AssetModelStatus | undefined;
    }
    export namespace DeleteAssetModelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAssetModelResponse) => any;
    }
    export interface DeleteDashboardRequest {
            /**
                * <p>The ID of the dashboard to delete.</p>
                */
            dashboardId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteDashboardRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDashboardRequest) => any;
    }
    export interface DeleteDashboardResponse {
    }
    export namespace DeleteDashboardResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteDashboardResponse) => any;
    }
    export interface DeleteGatewayRequest {
            /**
                * <p>The ID of the gateway to delete.</p>
                */
            gatewayId: string | undefined;
    }
    export namespace DeleteGatewayRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteGatewayRequest) => any;
    }
    export interface DeletePortalRequest {
            /**
                * <p>The ID of the portal to delete.</p>
                */
            portalId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeletePortalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortalRequest) => any;
    }
    export interface DeletePortalResponse {
            /**
                * <p>The status of the portal, which contains a state (<code>DELETING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            portalStatus: PortalStatus | undefined;
    }
    export namespace DeletePortalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePortalResponse) => any;
    }
    export interface DeleteProjectRequest {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteProjectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProjectRequest) => any;
    }
    export interface DeleteProjectResponse {
    }
    export namespace DeleteProjectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteProjectResponse) => any;
    }
    export interface DeleteTimeSeriesRequest {
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias?: string;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteTimeSeriesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteTimeSeriesRequest) => any;
    }
    export interface DescribeAccessPolicyRequest {
            /**
                * <p>The ID of the access policy.</p>
                */
            accessPolicyId: string | undefined;
    }
    export namespace DescribeAccessPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccessPolicyRequest) => any;
    }
    export interface DescribeAccessPolicyResponse {
            /**
                * <p>The ID of the access policy.</p>
                */
            accessPolicyId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code>
                *          </p>
                */
            accessPolicyArn: string | undefined;
            /**
                * <p>The identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user) to which this access policy
                *       applies.</p>
                */
            accessPolicyIdentity: Identity | undefined;
            /**
                * <p>The IoT SiteWise Monitor resource (portal or project) to which this access policy provides
                *       access.</p>
                */
            accessPolicyResource: Resource | undefined;
            /**
                * <p>The access policy permission. Note that a project <code>ADMINISTRATOR</code> is also known
                *       as a project owner.</p>
                */
            accessPolicyPermission: Permission | string | undefined;
            /**
                * <p>The date the access policy was created, in Unix epoch time.</p>
                */
            accessPolicyCreationDate: Date | undefined;
            /**
                * <p>The date the access policy was last updated, in Unix epoch time.</p>
                */
            accessPolicyLastUpdateDate: Date | undefined;
    }
    export namespace DescribeAccessPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAccessPolicyResponse) => any;
    }
    export interface DescribeAssetRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
    }
    export namespace DescribeAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetRequest) => any;
    }
    export interface DescribeAssetResponse {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code>
                *          </p>
                */
            assetArn: string | undefined;
            /**
                * <p>The name of the asset.</p>
                */
            assetName: string | undefined;
            /**
                * <p>The ID of the asset model that was used to create the asset.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The list of asset properties for the asset.</p>
                *          <p>This object doesn't include properties that you define in composite models. You can find
                *       composite model properties in the <code>assetCompositeModels</code> object.</p>
                */
            assetProperties: AssetProperty[] | undefined;
            /**
                * <p>A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.</p>
                */
            assetHierarchies: AssetHierarchy[] | undefined;
            /**
                * <p>The composite models for the asset.</p>
                */
            assetCompositeModels?: AssetCompositeModel[];
            /**
                * <p>The date the asset was created, in Unix epoch time.</p>
                */
            assetCreationDate: Date | undefined;
            /**
                * <p>The date the asset was last updated, in Unix epoch time.</p>
                */
            assetLastUpdateDate: Date | undefined;
            /**
                * <p>The current status of the asset, which contains a state and any error message.</p>
                */
            assetStatus: AssetStatus | undefined;
            /**
                * <p>A description for the asset.</p>
                */
            assetDescription?: string;
    }
    export namespace DescribeAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetResponse) => any;
    }
    export interface DescribeAssetModelRequest {
            /**
                * <p>The ID of the asset model.</p>
                */
            assetModelId: string | undefined;
    }
    export namespace DescribeAssetModelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetModelRequest) => any;
    }
    export interface DescribeAssetModelResponse {
            /**
                * <p>The ID of the asset model.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code>
                *          </p>
                */
            assetModelArn: string | undefined;
            /**
                * <p>The name of the asset model.</p>
                */
            assetModelName: string | undefined;
            /**
                * <p>The asset model's description.</p>
                */
            assetModelDescription: string | undefined;
            /**
                * <p>The list of asset properties for the asset model.</p>
                *          <p>This object doesn't include properties that you define in composite models. You can find
                *       composite model properties in the <code>assetModelCompositeModels</code> object.</p>
                */
            assetModelProperties: AssetModelProperty[] | undefined;
            /**
                * <p>A list of asset model hierarchies that each contain a <code>childAssetModelId</code> and a
                *         <code>hierarchyId</code> (named <code>id</code>). A hierarchy specifies allowed parent/child
                *       asset relationships for an asset model.</p>
                */
            assetModelHierarchies: AssetModelHierarchy[] | undefined;
            /**
                * <p>The list of composite asset models for the asset model.</p>
                */
            assetModelCompositeModels?: AssetModelCompositeModel[];
            /**
                * <p>The date the asset model was created, in Unix epoch time.</p>
                */
            assetModelCreationDate: Date | undefined;
            /**
                * <p>The date the asset model was last updated, in Unix epoch time.</p>
                */
            assetModelLastUpdateDate: Date | undefined;
            /**
                * <p>The current status of the asset model, which contains a state and any error
                *       message.</p>
                */
            assetModelStatus: AssetModelStatus | undefined;
    }
    export namespace DescribeAssetModelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetModelResponse) => any;
    }
    export interface DescribeAssetPropertyRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId: string | undefined;
    }
    export namespace DescribeAssetPropertyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetPropertyRequest) => any;
    }
    /**
        * <p>Contains asset property information.</p>
        */
    export interface Property {
            /**
                * <p>The ID of the asset property.</p>
                */
            id: string | undefined;
            /**
                * <p>The name of the property.</p>
                */
            name: string | undefined;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            alias?: string;
            /**
                * <p>The asset property's notification topic and state. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
                */
            notification?: PropertyNotification;
            /**
                * <p>The property data type.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The unit (such as <code>Newtons</code> or <code>RPM</code>) of the asset property.</p>
                */
            unit?: string;
            /**
                * <p>The property type (see <code>PropertyType</code>). A property contains one type.</p>
                */
            type?: PropertyType;
    }
    export namespace Property {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Property) => any;
    }
    /**
        * <p>Contains information about a composite model property on an asset.</p>
        */
    export interface CompositeModelProperty {
            /**
                * <p>The name of the property.</p>
                */
            name: string | undefined;
            /**
                * <p>The type of the composite model that defines this property.</p>
                */
            type: string | undefined;
            /**
                * <p>Contains asset property information.</p>
                */
            assetProperty: Property | undefined;
    }
    export namespace CompositeModelProperty {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CompositeModelProperty) => any;
    }
    export interface DescribeAssetPropertyResponse {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The name of the asset.</p>
                */
            assetName: string | undefined;
            /**
                * <p>The ID of the asset model.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>The asset property's definition, alias, and notification state.</p>
                *          <p>This response includes this object for normal asset properties. If you describe an asset
                *       property in a composite model, this response includes the asset property information in
                *         <code>compositeModel</code>.</p>
                */
            assetProperty?: Property;
            /**
                * <p>The composite asset model that declares this asset property, if this asset property exists
                *       in a composite model.</p>
                */
            compositeModel?: CompositeModelProperty;
    }
    export namespace DescribeAssetPropertyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAssetPropertyResponse) => any;
    }
    export interface DescribeBulkImportJobRequest {
            /**
                * <p>The ID of the job.</p>
                */
            jobId: string | undefined;
    }
    export namespace DescribeBulkImportJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeBulkImportJobRequest) => any;
    }
    export interface DescribeBulkImportJobResponse {
            /**
                * <p>The ID of the job.</p>
                */
            jobId: string | undefined;
            /**
                * <p>The unique name that helps identify the job request.</p>
                */
            jobName: string | undefined;
            /**
                * <p>The status of the bulk import job can be one of following values.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>PENDING</code> – IoT SiteWise is waiting for the current bulk import job to finish.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>CANCELLED</code> – The bulk import job has been canceled.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>RUNNING</code> – IoT SiteWise is processing your request to import your data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED</code> – IoT SiteWise successfully completed your request to import data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FAILED</code> – IoT SiteWise couldn't process your request to import data from Amazon S3.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED_WITH_FAILURES</code> – IoT SiteWise completed your request to import data from Amazon S3 with errors.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *          </ul>
                */
            jobStatus: JobStatus | string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.</p>
                */
            jobRoleArn: string | undefined;
            /**
                * <p>The files in the specified Amazon S3 bucket that contain your data.</p>
                */
            files: File[] | undefined;
            /**
                * <p>The Amazon S3 destination where errors associated with the job creation request are saved.</p>
                */
            errorReportLocation: ErrorReportLocation | undefined;
            /**
                * <p>Contains the configuration information of a job, such as the file format used to save data in Amazon S3.</p>
                */
            jobConfiguration: JobConfiguration | undefined;
            /**
                * <p>The date the job was created, in Unix epoch TIME.</p>
                */
            jobCreationDate: Date | undefined;
            /**
                * <p>The date the job was last updated, in Unix epoch time.</p>
                */
            jobLastUpdateDate: Date | undefined;
    }
    export namespace DescribeBulkImportJobResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeBulkImportJobResponse) => any;
    }
    export interface DescribeDashboardRequest {
            /**
                * <p>The ID of the dashboard.</p>
                */
            dashboardId: string | undefined;
    }
    export namespace DescribeDashboardRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDashboardRequest) => any;
    }
    export interface DescribeDashboardResponse {
            /**
                * <p>The ID of the dashboard.</p>
                */
            dashboardId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code>
                *          </p>
                */
            dashboardArn: string | undefined;
            /**
                * <p>The name of the dashboard.</p>
                */
            dashboardName: string | undefined;
            /**
                * <p>The ID of the project that the dashboard is in.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The dashboard's description.</p>
                */
            dashboardDescription?: string;
            /**
                * <p>The dashboard's definition JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating
                *         dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            dashboardDefinition: string | undefined;
            /**
                * <p>The date the dashboard was created, in Unix epoch time.</p>
                */
            dashboardCreationDate: Date | undefined;
            /**
                * <p>The date the dashboard was last updated, in Unix epoch time.</p>
                */
            dashboardLastUpdateDate: Date | undefined;
    }
    export namespace DescribeDashboardResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDashboardResponse) => any;
    }
    export interface DescribeDefaultEncryptionConfigurationRequest {
    }
    export namespace DescribeDefaultEncryptionConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDefaultEncryptionConfigurationRequest) => any;
    }
    /**
        * <p>Contains the details of an IoT SiteWise configuration error.</p>
        */
    export interface ConfigurationErrorDetails {
            /**
                * <p>The error code.</p>
                */
            code: ErrorCode | string | undefined;
            /**
                * <p>The error message.</p>
                */
            message: string | undefined;
    }
    export namespace ConfigurationErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConfigurationErrorDetails) => any;
    }
    export enum ConfigurationState {
            ACTIVE = "ACTIVE",
            UPDATE_FAILED = "UPDATE_FAILED",
            UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS"
    }
    /**
        * <p>Contains current status information for the configuration.</p>
        */
    export interface ConfigurationStatus {
            /**
                * <p>The current state of the configuration.</p>
                */
            state: ConfigurationState | string | undefined;
            /**
                * <p>Contains associated error information, if any.</p>
                */
            error?: ConfigurationErrorDetails;
    }
    export namespace ConfigurationStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConfigurationStatus) => any;
    }
    export enum EncryptionType {
            KMS_BASED_ENCRYPTION = "KMS_BASED_ENCRYPTION",
            SITEWISE_DEFAULT_ENCRYPTION = "SITEWISE_DEFAULT_ENCRYPTION"
    }
    export interface DescribeDefaultEncryptionConfigurationResponse {
            /**
                * <p>The type of encryption used for the encryption configuration.</p>
                */
            encryptionType: EncryptionType | string | undefined;
            /**
                * <p>The key ARN of the customer managed key used for KMS encryption if you use
                *         <code>KMS_BASED_ENCRYPTION</code>.</p>
                */
            kmsKeyArn?: string;
            /**
                * <p>The status of the account configuration. This contains the
                *       <code>ConfigurationState</code>. If there's an error, it also contains the
                *         <code>ErrorDetails</code>.</p>
                */
            configurationStatus: ConfigurationStatus | undefined;
    }
    export namespace DescribeDefaultEncryptionConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDefaultEncryptionConfigurationResponse) => any;
    }
    export interface DescribeGatewayRequest {
            /**
                * <p>The ID of the gateway device.</p>
                */
            gatewayId: string | undefined;
    }
    export namespace DescribeGatewayRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGatewayRequest) => any;
    }
    export enum CapabilitySyncStatus {
            IN_SYNC = "IN_SYNC",
            OUT_OF_SYNC = "OUT_OF_SYNC",
            SYNC_FAILED = "SYNC_FAILED",
            UNKNOWN = "UNKNOWN"
    }
    /**
        * <p>Contains a summary of a gateway capability configuration.</p>
        */
    export interface GatewayCapabilitySummary {
            /**
                * <p>The namespace of the capability configuration.
                *       For example, if you configure OPC-UA
                *       sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace
                *         <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as
                *         <code>1</code>.</p>
                */
            capabilityNamespace: string | undefined;
            /**
                * <p>The synchronization status of the capability configuration. The sync status can be one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>IN_SYNC</code> – The gateway is running the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>OUT_OF_SYNC</code> – The gateway hasn't received the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p>
                *             </li>
                *          </ul>
                */
            capabilitySyncStatus: CapabilitySyncStatus | string | undefined;
    }
    export namespace GatewayCapabilitySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GatewayCapabilitySummary) => any;
    }
    export interface DescribeGatewayResponse {
            /**
                * <p>The ID of the gateway device.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The name of the gateway.</p>
                */
            gatewayName: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code>
                *          </p>
                */
            gatewayArn: string | undefined;
            /**
                * <p>The gateway's platform.</p>
                */
            gatewayPlatform?: GatewayPlatform;
            /**
                * <p>A list of gateway capability summaries that each contain a namespace and status. Each
                *       gateway capability defines data sources for the gateway. To retrieve a capability
                *       configuration's definition, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html">DescribeGatewayCapabilityConfiguration</a>.</p>
                */
            gatewayCapabilitySummaries: GatewayCapabilitySummary[] | undefined;
            /**
                * <p>The date the gateway was created, in Unix epoch time.</p>
                */
            creationDate: Date | undefined;
            /**
                * <p>The date the gateway was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate: Date | undefined;
    }
    export namespace DescribeGatewayResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGatewayResponse) => any;
    }
    export interface DescribeGatewayCapabilityConfigurationRequest {
            /**
                * <p>The ID of the gateway that defines the capability configuration.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The namespace of the capability configuration.
                *       For example, if you configure OPC-UA
                *       sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace
                *         <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as
                *         <code>1</code>.</p>
                */
            capabilityNamespace: string | undefined;
    }
    export namespace DescribeGatewayCapabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGatewayCapabilityConfigurationRequest) => any;
    }
    export interface DescribeGatewayCapabilityConfigurationResponse {
            /**
                * <p>The ID of the gateway that defines the capability configuration.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The namespace of the gateway capability.</p>
                */
            capabilityNamespace: string | undefined;
            /**
                * <p>The JSON document that defines the gateway capability's configuration. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            capabilityConfiguration: string | undefined;
            /**
                * <p>The synchronization status of the capability configuration. The sync status can be one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>IN_SYNC</code> – The gateway is running the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>OUT_OF_SYNC</code> – The gateway hasn't received the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p>
                *             </li>
                *          </ul>
                */
            capabilitySyncStatus: CapabilitySyncStatus | string | undefined;
    }
    export namespace DescribeGatewayCapabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeGatewayCapabilityConfigurationResponse) => any;
    }
    export interface DescribeLoggingOptionsRequest {
    }
    export namespace DescribeLoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeLoggingOptionsRequest) => any;
    }
    export enum LoggingLevel {
            ERROR = "ERROR",
            INFO = "INFO",
            OFF = "OFF"
    }
    /**
        * <p>Contains logging options.</p>
        */
    export interface LoggingOptions {
            /**
                * <p>The IoT SiteWise logging verbosity level.</p>
                */
            level: LoggingLevel | string | undefined;
    }
    export namespace LoggingOptions {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingOptions) => any;
    }
    export interface DescribeLoggingOptionsResponse {
            /**
                * <p>The current logging options.</p>
                */
            loggingOptions: LoggingOptions | undefined;
    }
    export namespace DescribeLoggingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeLoggingOptionsResponse) => any;
    }
    export interface DescribePortalRequest {
            /**
                * <p>The ID of the portal.</p>
                */
            portalId: string | undefined;
    }
    export namespace DescribePortalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortalRequest) => any;
    }
    /**
        * <p>Contains an image that is uploaded to IoT SiteWise and available at a URL.</p>
        */
    export interface ImageLocation {
            /**
                * <p>The ID of the image.</p>
                */
            id: string | undefined;
            /**
                * <p>The URL where the image is available. The URL is valid for 15 minutes so that you can view
                *       and download the image</p>
                */
            url: string | undefined;
    }
    export namespace ImageLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImageLocation) => any;
    }
    export interface DescribePortalResponse {
            /**
                * <p>The ID of the portal.</p>
                */
            portalId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code>
                *          </p>
                */
            portalArn: string | undefined;
            /**
                * <p>The name of the portal.</p>
                */
            portalName: string | undefined;
            /**
                * <p>The portal's description.</p>
                */
            portalDescription?: string;
            /**
                * <p>The Amazon Web Services SSO application generated client ID (used with Amazon Web Services SSO APIs). IoT SiteWise includes
                *         <code>portalClientId</code> for only portals that use Amazon Web Services SSO to authenticate users.</p>
                */
            portalClientId: string | undefined;
            /**
                * <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that
                *       use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the
                *       IoT SiteWise console to get a URL that you can use to access the portal.</p>
                */
            portalStartUrl: string | undefined;
            /**
                * <p>The Amazon Web Services administrator's contact email address.</p>
                */
            portalContactEmail: string | undefined;
            /**
                * <p>The current status of the portal, which contains a state and any error message.</p>
                */
            portalStatus: PortalStatus | undefined;
            /**
                * <p>The date the portal was created, in Unix epoch time.</p>
                */
            portalCreationDate: Date | undefined;
            /**
                * <p>The date the portal was last updated, in Unix epoch time.</p>
                */
            portalLastUpdateDate: Date | undefined;
            /**
                * <p>The portal's logo image, which is available at a URL.</p>
                */
            portalLogoImageLocation?: ImageLocation;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise
                *       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            roleArn?: string;
            /**
                * <p>The service to use to authenticate users to the portal.</p>
                */
            portalAuthMode?: AuthMode | string;
            /**
                * <p>The email address that sends alarm notifications.</p>
                */
            notificationSenderEmail?: string;
            /**
                * <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.</p>
                */
            alarms?: Alarms;
    }
    export namespace DescribePortalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribePortalResponse) => any;
    }
    export interface DescribeProjectRequest {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
    }
    export namespace DescribeProjectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProjectRequest) => any;
    }
    export interface DescribeProjectResponse {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
                *         <p>
                *             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code>
                *          </p>
                */
            projectArn: string | undefined;
            /**
                * <p>The name of the project.</p>
                */
            projectName: string | undefined;
            /**
                * <p>The ID of the portal that the project is in.</p>
                */
            portalId: string | undefined;
            /**
                * <p>The project's description.</p>
                */
            projectDescription?: string;
            /**
                * <p>The date the project was created, in Unix epoch time.</p>
                */
            projectCreationDate: Date | undefined;
            /**
                * <p>The date the project was last updated, in Unix epoch time.</p>
                */
            projectLastUpdateDate: Date | undefined;
    }
    export namespace DescribeProjectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeProjectResponse) => any;
    }
    export interface DescribeStorageConfigurationRequest {
    }
    export namespace DescribeStorageConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeStorageConfigurationRequest) => any;
    }
    export enum DisassociatedDataStorageState {
            DISABLED = "DISABLED",
            ENABLED = "ENABLED"
    }
    /**
        * <p>Contains information about a customer managed Amazon S3 bucket.</p>
        */
    export interface CustomerManagedS3Storage {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Amazon S3 object. For more information about how to find the ARN for an
                *       Amazon S3 object, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-arn-format.html">Amazon S3 resources</a> in the
                *         <i>Amazon Simple Storage Service User Guide</i>.</p>
                */
            s3ResourceArn: string | undefined;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Identity and Access Management role that allows IoT SiteWise to send data to Amazon S3.</p>
                */
            roleArn: string | undefined;
    }
    export namespace CustomerManagedS3Storage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CustomerManagedS3Storage) => any;
    }
    /**
        * <p>Contains information about the storage destination.</p>
        */
    export interface MultiLayerStorage {
            /**
                * <p>Contains information about a customer managed Amazon S3 bucket.</p>
                */
            customerManagedS3Storage: CustomerManagedS3Storage | undefined;
    }
    export namespace MultiLayerStorage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MultiLayerStorage) => any;
    }
    /**
        * <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
        */
    export interface RetentionPeriod {
            /**
                * <p>The number of days that your data is kept.</p>
                *          <note>
                *             <p>If you specified a value for this parameter, the <code>unlimited</code> parameter must
                *         be <code>false</code>.</p>
                *          </note>
                */
            numberOfDays?: number;
            /**
                * <p>If true, your data is kept indefinitely.</p>
                *          <note>
                *             <p>If configured to <code>true</code>, you must not specify a value for the
                *           <code>numberOfDays</code> parameter.</p>
                *          </note>
                */
            unlimited?: boolean;
    }
    export namespace RetentionPeriod {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RetentionPeriod) => any;
    }
    export enum StorageType {
            MULTI_LAYER_STORAGE = "MULTI_LAYER_STORAGE",
            SITEWISE_DEFAULT_STORAGE = "SITEWISE_DEFAULT_STORAGE"
    }
    export interface DescribeStorageConfigurationResponse {
            /**
                * <p>The storage tier that you specified for your data.
                *       The <code>storageType</code> parameter can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier.
                *           The hot tier is a service-managed database.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier.
                *           The cold tier is a customer-managed Amazon S3 bucket.</p>
                *             </li>
                *          </ul>
                */
            storageType: StorageType | string | undefined;
            /**
                * <p>Contains information about the storage destination.</p>
                */
            multiLayerStorage?: MultiLayerStorage;
            /**
                * <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties.
                *       The <code>disassociatedDataStorage</code> can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p>
                *                <important>
                *                   <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>
                *                </important>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a>
                *     in the <i>IoT SiteWise User Guide</i>.</p>
                */
            disassociatedDataStorage?: DisassociatedDataStorageState | string;
            /**
                * <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
                */
            retentionPeriod?: RetentionPeriod;
            /**
                * <p>Contains current status information for the configuration.</p>
                */
            configurationStatus: ConfigurationStatus | undefined;
            /**
                * <p>The date the storage configuration was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate?: Date;
    }
    export namespace DescribeStorageConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeStorageConfigurationResponse) => any;
    }
    export interface DescribeTimeSeriesRequest {
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias?: string;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
    }
    export namespace DescribeTimeSeriesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTimeSeriesRequest) => any;
    }
    export interface DescribeTimeSeriesResponse {
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias?: string;
            /**
                * <p>The ID of the time series.</p>
                */
            timeSeriesId: string | undefined;
            /**
                * <p>The data type of the time series.</p>
                *          <p>If you specify <code>STRUCT</code>, you must also specify <code>dataTypeSpec</code> to identify the type of the structure for this time series.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The data type of the structure for this time series. This parameter is required for time series
                *       that have the <code>STRUCT</code> data type.</p>
                *          <p>The options for this parameter depend on the type of the composite model
                *       in which you created the asset property that is associated with your time series.
                *       Use <code>AWS/ALARM_STATE</code> for alarm state in alarm composite models.</p>
                */
            dataTypeSpec?: string;
            /**
                * <p>The date that the time series was created, in Unix epoch time.</p>
                */
            timeSeriesCreationDate: Date | undefined;
            /**
                * <p>The date that the time series was last updated, in Unix epoch time.</p>
                */
            timeSeriesLastUpdateDate: Date | undefined;
    }
    export namespace DescribeTimeSeriesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeTimeSeriesResponse) => any;
    }
    export interface DisassociateAssetsRequest {
            /**
                * <p>The ID of the parent asset from which to disassociate the child asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of a hierarchy in the parent asset's model. Hierarchies allow different groupings
                *       of assets to be formed that all come from the same asset model. You can use the hierarchy ID
                *       to identify the correct asset to disassociate. For more information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            hierarchyId: string | undefined;
            /**
                * <p>The ID of the child asset to disassociate.</p>
                */
            childAssetId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateAssetsRequest) => any;
    }
    export interface DisassociateTimeSeriesFromAssetPropertyRequest {
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias: string | undefined;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace DisassociateTimeSeriesFromAssetPropertyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisassociateTimeSeriesFromAssetPropertyRequest) => any;
    }
    export interface GetAssetPropertyAggregatesRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The data aggregating function.</p>
                */
            aggregateTypes: (AggregateType | string)[] | undefined;
            /**
                * <p>The time interval over which to aggregate data.</p>
                */
            resolution: string | undefined;
            /**
                * <p>The quality by which to filter asset data.</p>
                */
            qualities?: (Quality | string)[];
            /**
                * <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            startDate: Date | undefined;
            /**
                * <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            endDate: Date | undefined;
            /**
                * <p>The chronological sorting order of the requested information.</p>
                *          <p>Default: <code>ASCENDING</code>
                *          </p>
                */
            timeOrdering?: TimeOrdering | string;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 100</p>
                */
            maxResults?: number;
    }
    export namespace GetAssetPropertyAggregatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyAggregatesRequest) => any;
    }
    export interface GetAssetPropertyAggregatesResponse {
            /**
                * <p>The requested aggregated values.</p>
                */
            aggregatedValues: AggregatedValue[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace GetAssetPropertyAggregatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyAggregatesResponse) => any;
    }
    export interface GetAssetPropertyValueRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
    }
    export namespace GetAssetPropertyValueRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyValueRequest) => any;
    }
    export interface GetAssetPropertyValueResponse {
            /**
                * <p>The current asset property value.</p>
                */
            propertyValue?: AssetPropertyValue;
    }
    export namespace GetAssetPropertyValueResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyValueResponse) => any;
    }
    export interface GetAssetPropertyValueHistoryRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            startDate?: Date;
            /**
                * <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
                */
            endDate?: Date;
            /**
                * <p>The quality by which to filter asset data.</p>
                */
            qualities?: (Quality | string)[];
            /**
                * <p>The chronological sorting order of the requested information.</p>
                *          <p>Default: <code>ASCENDING</code>
                *          </p>
                */
            timeOrdering?: TimeOrdering | string;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 100</p>
                */
            maxResults?: number;
    }
    export namespace GetAssetPropertyValueHistoryRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyValueHistoryRequest) => any;
    }
    export interface GetAssetPropertyValueHistoryResponse {
            /**
                * <p>The asset property's value history.</p>
                */
            assetPropertyValueHistory: AssetPropertyValue[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace GetAssetPropertyValueHistoryResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAssetPropertyValueHistoryResponse) => any;
    }
    export interface GetInterpolatedAssetPropertyValuesRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The exclusive start of the range from which to interpolate data, expressed in seconds in
                *       Unix epoch time.</p>
                */
            startTimeInSeconds: number | undefined;
            /**
                * <p>The nanosecond offset converted from <code>startTimeInSeconds</code>.</p>
                */
            startTimeOffsetInNanos?: number;
            /**
                * <p>The inclusive end of the range from which to interpolate data, expressed in seconds in
                *       Unix epoch time.</p>
                */
            endTimeInSeconds: number | undefined;
            /**
                * <p>The nanosecond offset converted from <code>endTimeInSeconds</code>.</p>
                */
            endTimeOffsetInNanos?: number;
            /**
                * <p>The quality of the asset property value. You can use this parameter as a filter to choose
                *       only the asset property values that have a specific quality.</p>
                */
            quality: Quality | string | undefined;
            /**
                * <p>The time interval in seconds over which to interpolate data. Each interval starts when the
                *       previous one ends.</p>
                */
            intervalInSeconds: number | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request. If not specified, the default value is 10.</p>
                */
            maxResults?: number;
            /**
                * <p>The interpolation type.</p>
                *          <p>Valid values: <code>LINEAR_INTERPOLATION | LOCF_INTERPOLATION</code>
                *          </p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>LINEAR_INTERPOLATION</code> – Estimates missing data using <a href="https://en.wikipedia.org/wiki/Linear_interpolation">linear
                *           interpolation</a>.</p>
                *                <p>For example, you can use this operation to return the interpolated temperature values
                *           for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts
                *           July 1, 2021, at 9 AM, IoT SiteWise returns the first interpolated value on July 2, 2021, at 9 AM,
                *           the second interpolated value on July 3, 2021, at 9 AM, and so on.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>LOCF_INTERPOLATION</code> – Estimates missing data using last observation
                *           carried forward interpolation</p>
                *                <p>If no data point is found for an interval, IoT SiteWise returns the last observed data point
                *           for the previous interval and carries forward this interpolated value until a new data
                *           point is found.</p>
                *                <p>For example, you can get the state of an on-off valve every 24 hours over a duration
                *           of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns the last
                *           observed data point between July 1, 2021, at 9 AM and July 2, 2021, at 9 AM as the first
                *           interpolated value. If a data point isn't found after 9 AM on July 2, 2021, IoT SiteWise uses the
                *           same interpolated value for the rest of the days.</p>
                *             </li>
                *          </ul>
                */
            type: string | undefined;
            /**
                * <p>The query interval for the window, in seconds. IoT SiteWise computes each interpolated value by
                *       using data points from the timestamp of each interval, minus the window to the timestamp of
                *       each interval plus the window. If not specified, the window ranges between the start time
                *       minus the interval and the end time plus the interval.</p>
                *          <note>
                *             <ul>
                *                <li>
                *                   <p>If you specify a value for the <code>intervalWindowInSeconds</code> parameter, the
                *             value for the <code>type</code> parameter must be
                *             <code>LINEAR_INTERPOLATION</code>.</p>
                *                </li>
                *                <li>
                *                   <p>If a data point isn't found during the specified query window, IoT SiteWise won't return an
                *             interpolated value for the interval. This indicates that there's a gap in the ingested
                *             data points.</p>
                *                </li>
                *             </ul>
                *          </note>
                *          <p>For example, you can get the interpolated temperature values for a wind turbine every 24
                *       hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM with a
                *       window of 2 hours, IoT SiteWise uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM
                *       plus 2 hours) on July 2, 2021 to compute the first interpolated value. Next, IoT SiteWise uses the
                *       data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on July 3, 2021 to
                *       compute the second interpolated value, and so on. </p>
                */
            intervalWindowInSeconds?: number;
    }
    export namespace GetInterpolatedAssetPropertyValuesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetInterpolatedAssetPropertyValuesRequest) => any;
    }
    /**
        * <p>Contains information about an interpolated asset property value.</p>
        */
    export interface InterpolatedAssetPropertyValue {
            /**
                * <p>Contains a timestamp with optional nanosecond granularity.</p>
                */
            timestamp: TimeInNanos | undefined;
            /**
                * <p>Contains an asset property value (of a single type only).</p>
                */
            value: Variant | undefined;
    }
    export namespace InterpolatedAssetPropertyValue {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: InterpolatedAssetPropertyValue) => any;
    }
    export interface GetInterpolatedAssetPropertyValuesResponse {
            /**
                * <p>The requested interpolated values.</p>
                */
            interpolatedAssetPropertyValues: InterpolatedAssetPropertyValue[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace GetInterpolatedAssetPropertyValuesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetInterpolatedAssetPropertyValuesResponse) => any;
    }
    export enum IdentityType {
            GROUP = "GROUP",
            IAM = "IAM",
            USER = "USER"
    }
    export enum ResourceType {
            PORTAL = "PORTAL",
            PROJECT = "PROJECT"
    }
    export interface ListAccessPoliciesRequest {
            /**
                * <p>The type of identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user). This parameter is required
                *       if you specify <code>identityId</code>.</p>
                */
            identityType?: IdentityType | string;
            /**
                * <p>The ID of the identity. This parameter is required if you specify <code>USER</code> or
                *         <code>GROUP</code> for <code>identityType</code>.</p>
                */
            identityId?: string;
            /**
                * <p>The type of resource (portal or project). This parameter is required if you specify
                *         <code>resourceId</code>.</p>
                */
            resourceType?: ResourceType | string;
            /**
                * <p>The ID of the resource. This parameter is required if you specify
                *         <code>resourceType</code>.</p>
                */
            resourceId?: string;
            /**
                * <p>The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the
                *         <i>IAM User Guide</i>. This parameter is required if you specify
                *         <code>IAM</code> for <code>identityType</code>.</p>
                */
            iamArn?: string;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListAccessPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPoliciesRequest) => any;
    }
    export interface ListAccessPoliciesResponse {
            /**
                * <p>A list that summarizes each access policy.</p>
                */
            accessPolicySummaries: AccessPolicySummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAccessPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPoliciesResponse) => any;
    }
    export interface ListAssetModelsRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListAssetModelsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetModelsRequest) => any;
    }
    export interface ListAssetModelsResponse {
            /**
                * <p>A list that summarizes each asset model.</p>
                */
            assetModelSummaries: AssetModelSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssetModelsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetModelsResponse) => any;
    }
    export enum TraversalType {
            PATH_TO_ROOT = "PATH_TO_ROOT"
    }
    export interface ListAssetRelationshipsRequest {
            /**
                * <p>The ID of the asset.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The type of traversal to use to identify asset relationships. Choose the following
                *       option:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>PATH_TO_ROOT</code> – Identify the asset's parent assets up to the root
                *           asset. The asset that you specify in <code>assetId</code> is the first result in the list
                *           of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p>
                *             </li>
                *          </ul>
                */
            traversalType: TraversalType | string | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                */
            maxResults?: number;
    }
    export namespace ListAssetRelationshipsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetRelationshipsRequest) => any;
    }
    export interface ListAssetRelationshipsResponse {
            /**
                * <p>A list that summarizes each asset relationship.</p>
                */
            assetRelationshipSummaries: AssetRelationshipSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssetRelationshipsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetRelationshipsResponse) => any;
    }
    export enum ListAssetsFilter {
            ALL = "ALL",
            TOP_LEVEL = "TOP_LEVEL"
    }
    export interface ListAssetsRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
            /**
                * <p>The ID of the asset model by which to filter the list of assets. This parameter is
                *       required if you choose <code>ALL</code> for <code>filter</code>.</p>
                */
            assetModelId?: string;
            /**
                * <p>The filter for the requested list of assets. Choose one of the following options:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ALL</code> – The list includes all assets for a given asset model ID. The
                *             <code>assetModelId</code> parameter is required if you filter by
                *           <code>ALL</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>TOP_LEVEL</code> – The list includes only top-level assets in the asset
                *           hierarchy tree.</p>
                *             </li>
                *          </ul>
                *          <p>Default: <code>ALL</code>
                *          </p>
                */
            filter?: ListAssetsFilter | string;
    }
    export namespace ListAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetsRequest) => any;
    }
    export interface ListAssetsResponse {
            /**
                * <p>A list that summarizes each asset.</p>
                */
            assetSummaries: AssetSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssetsResponse) => any;
    }
    export enum TraversalDirection {
            CHILD = "CHILD",
            PARENT = "PARENT"
    }
    export interface ListAssociatedAssetsRequest {
            /**
                * <p>The ID of the asset to query.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of the hierarchy by which child assets are associated to the asset. To find a
                *       hierarchy ID, use the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAsset.html">DescribeAsset</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a> operations. This
                *       parameter is required if you choose <code>CHILD</code> for
                *       <code>traversalDirection</code>.</p>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            hierarchyId?: string;
            /**
                * <p>The direction to list associated assets. Choose one of the following options:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>CHILD</code> – The list includes all child assets associated to the
                *           asset. The <code>hierarchyId</code> parameter is required if you choose
                *           <code>CHILD</code>.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>PARENT</code> – The list includes the asset's parent asset.</p>
                *             </li>
                *          </ul>
                *          <p>Default: <code>CHILD</code>
                *          </p>
                */
            traversalDirection?: TraversalDirection | string;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListAssociatedAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssociatedAssetsRequest) => any;
    }
    export interface ListAssociatedAssetsResponse {
            /**
                * <p>A list that summarizes the associated assets.</p>
                */
            assetSummaries: AssociatedAssetsSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAssociatedAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAssociatedAssetsResponse) => any;
    }
    export enum ListBulkImportJobsFilter {
            ALL = "ALL",
            CANCELLED = "CANCELLED",
            COMPLETED = "COMPLETED",
            COMPLETED_WITH_FAILURES = "COMPLETED_WITH_FAILURES",
            FAILED = "FAILED",
            PENDING = "PENDING",
            RUNNING = "RUNNING"
    }
    export interface ListBulkImportJobsRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                */
            maxResults?: number;
            /**
                * <p>You can use a filter to select the bulk import jobs that you want to retrieve.</p>
                */
            filter?: ListBulkImportJobsFilter | string;
    }
    export namespace ListBulkImportJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBulkImportJobsRequest) => any;
    }
    /**
        * <p>Contains a job summary information.</p>
        */
    export interface JobSummary {
            /**
                * <p>The ID of the job.</p>
                */
            id: string | undefined;
            /**
                * <p>The unique name that helps identify the job request.</p>
                */
            name: string | undefined;
            /**
                * <p>The status of the bulk import job can be one of following values.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>PENDING</code> – IoT SiteWise is waiting for the current bulk import job to finish.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>CANCELLED</code> – The bulk import job has been canceled.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>RUNNING</code> – IoT SiteWise is processing your request to import your data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED</code> – IoT SiteWise successfully completed your request to import data from Amazon S3.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>FAILED</code> – IoT SiteWise couldn't process your request to import data from Amazon S3.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>COMPLETED_WITH_FAILURES</code> – IoT SiteWise completed your request to import data from Amazon S3 with errors.
                *         You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p>
                *             </li>
                *          </ul>
                */
            status: JobStatus | string | undefined;
    }
    export namespace JobSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobSummary) => any;
    }
    export interface ListBulkImportJobsResponse {
            /**
                * <p>One or more job summaries to list.</p>
                */
            jobSummaries: JobSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListBulkImportJobsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListBulkImportJobsResponse) => any;
    }
    export interface ListDashboardsRequest {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListDashboardsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDashboardsRequest) => any;
    }
    /**
        * <p>Contains a dashboard summary.</p>
        */
    export interface DashboardSummary {
            /**
                * <p>The ID of the dashboard.</p>
                */
            id: string | undefined;
            /**
                * <p>The name of the dashboard</p>
                */
            name: string | undefined;
            /**
                * <p>The dashboard's description.</p>
                */
            description?: string;
            /**
                * <p>The date the dashboard was created, in Unix epoch time.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the dashboard was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate?: Date;
    }
    export namespace DashboardSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DashboardSummary) => any;
    }
    export interface ListDashboardsResponse {
            /**
                * <p>A list that summarizes each dashboard in the project.</p>
                */
            dashboardSummaries: DashboardSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListDashboardsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListDashboardsResponse) => any;
    }
    export interface ListGatewaysRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListGatewaysRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGatewaysRequest) => any;
    }
    /**
        * <p>Contains a summary of a gateway.</p>
        */
    export interface GatewaySummary {
            /**
                * <p>The ID of the gateway device.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The name of the asset.</p>
                */
            gatewayName: string | undefined;
            /**
                * <p>Contains a gateway's platform information.</p>
                */
            gatewayPlatform?: GatewayPlatform;
            /**
                * <p>A list of gateway capability summaries that each contain a namespace and status. Each
                *       gateway capability defines data sources for the gateway. To retrieve a capability
                *       configuration's definition, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html">DescribeGatewayCapabilityConfiguration</a>.</p>
                */
            gatewayCapabilitySummaries?: GatewayCapabilitySummary[];
            /**
                * <p>The date the gateway was created, in Unix epoch time.</p>
                */
            creationDate: Date | undefined;
            /**
                * <p>The date the gateway was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate: Date | undefined;
    }
    export namespace GatewaySummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GatewaySummary) => any;
    }
    export interface ListGatewaysResponse {
            /**
                * <p>A list that summarizes each gateway.</p>
                */
            gatewaySummaries: GatewaySummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListGatewaysResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListGatewaysResponse) => any;
    }
    export interface ListPortalsRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListPortalsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortalsRequest) => any;
    }
    /**
        * <p>Contains a portal summary.</p>
        */
    export interface PortalSummary {
            /**
                * <p>The ID of the portal.</p>
                */
            id: string | undefined;
            /**
                * <p>The name of the portal.</p>
                */
            name: string | undefined;
            /**
                * <p>The portal's description.</p>
                */
            description?: string;
            /**
                * <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that
                *       use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the
                *       IoT SiteWise console to get a URL that you can use to access the portal.</p>
                */
            startUrl: string | undefined;
            /**
                * <p>The date the portal was created, in Unix epoch time.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the portal was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate?: Date;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise
                *       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            roleArn?: string;
            /**
                * <p>Contains information about the current status of a portal.</p>
                */
            status: PortalStatus | undefined;
    }
    export namespace PortalSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PortalSummary) => any;
    }
    export interface ListPortalsResponse {
            /**
                * <p>A list that summarizes each portal.</p>
                */
            portalSummaries?: PortalSummary[];
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListPortalsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListPortalsResponse) => any;
    }
    export interface ListProjectAssetsRequest {
            /**
                * <p>The ID of the project.</p>
                */
            projectId: string | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListProjectAssetsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProjectAssetsRequest) => any;
    }
    export interface ListProjectAssetsResponse {
            /**
                * <p>A list that contains the IDs of each asset associated with the project.</p>
                */
            assetIds: string[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProjectAssetsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProjectAssetsResponse) => any;
    }
    export interface ListProjectsRequest {
            /**
                * <p>The ID of the portal.</p>
                */
            portalId: string | undefined;
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                *          <p>Default: 50</p>
                */
            maxResults?: number;
    }
    export namespace ListProjectsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProjectsRequest) => any;
    }
    /**
        * <p>Contains project summary information.</p>
        */
    export interface ProjectSummary {
            /**
                * <p>The ID of the project.</p>
                */
            id: string | undefined;
            /**
                * <p>The name of the project.</p>
                */
            name: string | undefined;
            /**
                * <p>The project's description.</p>
                */
            description?: string;
            /**
                * <p>The date the project was created, in Unix epoch time.</p>
                */
            creationDate?: Date;
            /**
                * <p>The date the project was last updated, in Unix epoch time.</p>
                */
            lastUpdateDate?: Date;
    }
    export namespace ProjectSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProjectSummary) => any;
    }
    export interface ListProjectsResponse {
            /**
                * <p>A list that summarizes each project in the portal.</p>
                */
            projectSummaries: ProjectSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListProjectsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListProjectsResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource.</p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The list of key-value pairs that contain metadata for the resource. For more information,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    /**
        * <p>You are not authorized.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    export enum ListTimeSeriesType {
            ASSOCIATED = "ASSOCIATED",
            DISASSOCIATED = "DISASSOCIATED"
    }
    export interface ListTimeSeriesRequest {
            /**
                * <p>The token to be used for the next set of paginated results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return for each paginated request.</p>
                */
            maxResults?: number;
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The alias prefix of the time series.</p>
                */
            aliasPrefix?: string;
            /**
                * <p>The type of the time series. The time series type can be one of the following
                *       values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ASSOCIATED</code> – The time series is associated with an asset
                *           property.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DISASSOCIATED</code> – The time series isn't associated with any asset
                *           property.</p>
                *             </li>
                *          </ul>
                */
            timeSeriesType?: ListTimeSeriesType | string;
    }
    export namespace ListTimeSeriesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTimeSeriesRequest) => any;
    }
    /**
        * <p>Contains a summary of a time series (data stream).</p>
        */
    export interface TimeSeriesSummary {
            /**
                * <p>The ID of the asset in which the asset property was created.</p>
                */
            assetId?: string;
            /**
                * <p>The ID of the asset property.</p>
                */
            propertyId?: string;
            /**
                * <p>The alias that identifies the time series.</p>
                */
            alias?: string;
            /**
                * <p>The ID of the time series.</p>
                */
            timeSeriesId: string | undefined;
            /**
                * <p>The data type of the time series.</p>
                *          <p>If you specify <code>STRUCT</code>, you must also specify <code>dataTypeSpec</code> to identify the type of the structure for this time series.</p>
                */
            dataType: PropertyDataType | string | undefined;
            /**
                * <p>The data type of the structure for this time series. This parameter is required for time series
                *       that have the <code>STRUCT</code> data type.</p>
                *          <p>The options for this parameter depend on the type of the composite model
                *       in which you created the asset property that is associated with your time series.
                *       Use <code>AWS/ALARM_STATE</code> for alarm state in alarm composite models.</p>
                */
            dataTypeSpec?: string;
            /**
                * <p>The date that the time series was created, in Unix epoch time.</p>
                */
            timeSeriesCreationDate: Date | undefined;
            /**
                * <p>The date that the time series was last updated, in Unix epoch time.</p>
                */
            timeSeriesLastUpdateDate: Date | undefined;
    }
    export namespace TimeSeriesSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TimeSeriesSummary) => any;
    }
    export interface ListTimeSeriesResponse {
            /**
                * <p>One or more time series summaries to list.</p>
                */
            TimeSeriesSummaries: TimeSeriesSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no additional results.</p>
                */
            nextToken?: string;
    }
    export namespace ListTimeSeriesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTimeSeriesResponse) => any;
    }
    export interface PutDefaultEncryptionConfigurationRequest {
            /**
                * <p>The type of encryption used for the encryption configuration.</p>
                */
            encryptionType: EncryptionType | string | undefined;
            /**
                * <p>The Key ID of the customer managed key used for KMS encryption. This is required if you
                *       use <code>KMS_BASED_ENCRYPTION</code>.</p>
                */
            kmsKeyId?: string;
    }
    export namespace PutDefaultEncryptionConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDefaultEncryptionConfigurationRequest) => any;
    }
    export interface PutDefaultEncryptionConfigurationResponse {
            /**
                * <p>The type of encryption used for the encryption configuration.</p>
                */
            encryptionType: EncryptionType | string | undefined;
            /**
                * <p>The Key ARN of the KMS key used for KMS encryption if you use
                *         <code>KMS_BASED_ENCRYPTION</code>.</p>
                */
            kmsKeyArn?: string;
            /**
                * <p>The status of the account configuration. This contains the
                *       <code>ConfigurationState</code>. If there is an error, it also contains the
                *         <code>ErrorDetails</code>.</p>
                */
            configurationStatus: ConfigurationStatus | undefined;
    }
    export namespace PutDefaultEncryptionConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDefaultEncryptionConfigurationResponse) => any;
    }
    export interface PutLoggingOptionsRequest {
            /**
                * <p>The logging options to set.</p>
                */
            loggingOptions: LoggingOptions | undefined;
    }
    export namespace PutLoggingOptionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutLoggingOptionsRequest) => any;
    }
    export interface PutLoggingOptionsResponse {
    }
    export namespace PutLoggingOptionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutLoggingOptionsResponse) => any;
    }
    export interface PutStorageConfigurationRequest {
            /**
                * <p>The storage tier that you specified for your data.
                *       The <code>storageType</code> parameter can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier.
                *           The hot tier is a service-managed database.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier.
                *           The cold tier is a customer-managed Amazon S3 bucket.</p>
                *             </li>
                *          </ul>
                */
            storageType: StorageType | string | undefined;
            /**
                * <p>Identifies a storage destination. If you specified <code>MULTI_LAYER_STORAGE</code> for the storage type,
                *       you must specify a <code>MultiLayerStorage</code> object.</p>
                */
            multiLayerStorage?: MultiLayerStorage;
            /**
                * <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties.
                *       The <code>disassociatedDataStorage</code> can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p>
                *                <important>
                *                   <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>
                *                </important>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a>
                *     in the <i>IoT SiteWise User Guide</i>.</p>
                */
            disassociatedDataStorage?: DisassociatedDataStorageState | string;
            /**
                * <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
                */
            retentionPeriod?: RetentionPeriod;
    }
    export namespace PutStorageConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutStorageConfigurationRequest) => any;
    }
    export interface PutStorageConfigurationResponse {
            /**
                * <p>The storage tier that you specified for your data.
                *       The <code>storageType</code> parameter can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier.
                *           The hot tier is a service-managed database.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier.
                *           The cold tier is a customer-managed Amazon S3 bucket.</p>
                *             </li>
                *          </ul>
                */
            storageType: StorageType | string | undefined;
            /**
                * <p>Contains information about the storage destination.</p>
                */
            multiLayerStorage?: MultiLayerStorage;
            /**
                * <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties.
                *       The <code>disassociatedDataStorage</code> can be one of the following values:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p>
                *                <important>
                *                   <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>
                *                </important>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p>
                *             </li>
                *          </ul>
                *          <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a>
                *     in the <i>IoT SiteWise User Guide</i>.</p>
                */
            disassociatedDataStorage?: DisassociatedDataStorageState | string;
            /**
                * <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
                */
            retentionPeriod?: RetentionPeriod;
            /**
                * <p>Contains current status information for the configuration.</p>
                */
            configurationStatus: ConfigurationStatus | undefined;
    }
    export namespace PutStorageConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutStorageConfigurationResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to tag.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of key-value pairs that contain metadata for the resource. For more information,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise
                *         resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    /**
        * <p>You've reached the limit for the number of tags allowed for a resource. For more
        *       information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions">Tag naming limits and
        *         requirements</a> in the <i>Amazon Web Services General Reference</i>.</p>
        */
    export class TooManyTagsException extends __BaseException {
            readonly name: "TooManyTagsException";
            readonly $fault: "client";
            /**
                * <p>The name of the resource with too many tags.</p>
                */
            resourceName?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
    }
    export interface UntagResourceRequest {
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to untag.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of keys for tags to remove from the resource.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateAccessPolicyRequest {
            /**
                * <p>The ID of the access policy.</p>
                */
            accessPolicyId: string | undefined;
            /**
                * <p>The identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.</p>
                */
            accessPolicyIdentity: Identity | undefined;
            /**
                * <p>The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.</p>
                */
            accessPolicyResource: Resource | undefined;
            /**
                * <p>The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
                */
            accessPolicyPermission: Permission | string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateAccessPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccessPolicyRequest) => any;
    }
    export interface UpdateAccessPolicyResponse {
    }
    export namespace UpdateAccessPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAccessPolicyResponse) => any;
    }
    export interface UpdateAssetRequest {
            /**
                * <p>The ID of the asset to update.</p>
                */
            assetId: string | undefined;
            /**
                * <p>A unique, friendly name for the asset.</p>
                */
            assetName: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>A description for the asset.</p>
                */
            assetDescription?: string;
    }
    export namespace UpdateAssetRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetRequest) => any;
    }
    export interface UpdateAssetResponse {
            /**
                * <p>The status of the asset, which contains a state (<code>UPDATING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            assetStatus: AssetStatus | undefined;
    }
    export namespace UpdateAssetResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetResponse) => any;
    }
    export interface UpdateAssetModelRequest {
            /**
                * <p>The ID of the asset model to update.</p>
                */
            assetModelId: string | undefined;
            /**
                * <p>A unique, friendly name for the asset model.</p>
                */
            assetModelName: string | undefined;
            /**
                * <p>A description for the asset model.</p>
                */
            assetModelDescription?: string;
            /**
                * <p>The updated property definitions of the asset model. For more information, see
                *       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>You can specify up to 200 properties per asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            assetModelProperties?: AssetModelProperty[];
            /**
                * <p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset
                *       model whose assets can be children of any other assets created from this asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>You can specify up to 10 hierarchies per asset model. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            assetModelHierarchies?: AssetModelHierarchy[];
            /**
                * <p>The composite asset models that are part of this asset model.
                *       Composite asset models are asset models that contain specific properties. Each composite model
                *       has a type that defines the properties that the composite model supports. Use composite asset
                *       models to define alarms on this asset model.</p>
                */
            assetModelCompositeModels?: AssetModelCompositeModel[];
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateAssetModelRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetModelRequest) => any;
    }
    export interface UpdateAssetModelResponse {
            /**
                * <p>The status of the asset model, which contains a state (<code>UPDATING</code> after
                *       successfully calling this operation) and any error message.</p>
                */
            assetModelStatus: AssetModelStatus | undefined;
    }
    export namespace UpdateAssetModelResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetModelResponse) => any;
    }
    export interface UpdateAssetPropertyRequest {
            /**
                * <p>The ID of the asset to be updated.</p>
                */
            assetId: string | undefined;
            /**
                * <p>The ID of the asset property to be updated.</p>
                */
            propertyId: string | undefined;
            /**
                * <p>The alias that identifies the property, such as an OPC-UA server data stream path
                *         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
                *         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                *          <p>If you omit this parameter, the alias is removed from the property.</p>
                */
            propertyAlias?: string;
            /**
                * <p>The MQTT notification state (enabled or disabled) for this asset property.
                *       When the notification state is enabled, IoT SiteWise publishes property value
                *       updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p>
                *          <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>
                */
            propertyNotificationState?: PropertyNotificationState | string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateAssetPropertyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAssetPropertyRequest) => any;
    }
    export interface UpdateDashboardRequest {
            /**
                * <p>The ID of the dashboard to update.</p>
                */
            dashboardId: string | undefined;
            /**
                * <p>A new friendly name for the dashboard.</p>
                */
            dashboardName: string | undefined;
            /**
                * <p>A new description for the dashboard.</p>
                */
            dashboardDescription?: string;
            /**
                * <p>The new dashboard definition, as specified in a JSON literal. For detailed information,
                *       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            dashboardDefinition: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateDashboardRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDashboardRequest) => any;
    }
    export interface UpdateDashboardResponse {
    }
    export namespace UpdateDashboardResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateDashboardResponse) => any;
    }
    export interface UpdateGatewayRequest {
            /**
                * <p>The ID of the gateway to update.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>A unique, friendly name for the gateway.</p>
                */
            gatewayName: string | undefined;
    }
    export namespace UpdateGatewayRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGatewayRequest) => any;
    }
    export interface UpdateGatewayCapabilityConfigurationRequest {
            /**
                * <p>The ID of the gateway to be updated.</p>
                */
            gatewayId: string | undefined;
            /**
                * <p>The namespace of the gateway capability configuration to be updated.
                *       For example, if you configure OPC-UA
                *       sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace
                *         <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as
                *         <code>1</code>.</p>
                */
            capabilityNamespace: string | undefined;
            /**
                * <p>The JSON document that defines the configuration for the gateway capability. For more
                *       information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
                */
            capabilityConfiguration: string | undefined;
    }
    export namespace UpdateGatewayCapabilityConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGatewayCapabilityConfigurationRequest) => any;
    }
    export interface UpdateGatewayCapabilityConfigurationResponse {
            /**
                * <p>The namespace of the gateway capability.</p>
                */
            capabilityNamespace: string | undefined;
            /**
                * <p>The synchronization status of the capability configuration. The sync status can be one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <code>IN_SYNC</code> – The gateway is running the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>OUT_OF_SYNC</code> – The gateway hasn't received the capability configuration.</p>
                *             </li>
                *             <li>
                *                <p>
                *                   <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p>
                *             </li>
                *          </ul>
                *          <p>After you update a capability configuration, its sync status is <code>OUT_OF_SYNC</code>
                *       until the gateway receives and applies or rejects the updated configuration.</p>
                */
            capabilitySyncStatus: CapabilitySyncStatus | string | undefined;
    }
    export namespace UpdateGatewayCapabilityConfigurationResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateGatewayCapabilityConfigurationResponse) => any;
    }
    /**
        * <p>Contains an image that is one of the following:</p>
        *          <ul>
        *             <li>
        *                <p>An image file. Choose this option to upload a new image.</p>
        *             </li>
        *             <li>
        *                <p>The ID of an existing image. Choose this option to keep an existing image.</p>
        *             </li>
        *          </ul>
        */
    export interface Image {
            /**
                * <p>The ID of an existing image. Specify this parameter to keep an existing image.</p>
                */
            id?: string;
            /**
                * <p>Contains an image file.</p>
                */
            file?: ImageFile;
    }
    export namespace Image {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Image) => any;
    }
    export interface UpdatePortalRequest {
            /**
                * <p>The ID of the portal to update.</p>
                */
            portalId: string | undefined;
            /**
                * <p>A new friendly name for the portal.</p>
                */
            portalName: string | undefined;
            /**
                * <p>A new description for the portal.</p>
                */
            portalDescription?: string;
            /**
                * <p>The Amazon Web Services administrator's contact email address.</p>
                */
            portalContactEmail: string | undefined;
            /**
                * <p>Contains an image that is one of the following:</p>
                *          <ul>
                *             <li>
                *                <p>An image file. Choose this option to upload a new image.</p>
                *             </li>
                *             <li>
                *                <p>The ID of an existing image. Choose this option to keep an existing image.</p>
                *             </li>
                *          </ul>
                */
            portalLogoImage?: Image;
            /**
                * <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise
                *       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the
                *         <i>IoT SiteWise User Guide</i>.</p>
                */
            roleArn: string | undefined;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
            /**
                * <p>The email address that sends alarm notifications.</p>
                */
            notificationSenderEmail?: string;
            /**
                * <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.
                *   You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
                *   For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.</p>
                */
            alarms?: Alarms;
    }
    export namespace UpdatePortalRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortalRequest) => any;
    }
    export interface UpdatePortalResponse {
            /**
                * <p>The status of the portal, which contains a state (<code>UPDATING</code> after successfully
                *       calling this operation) and any error message.</p>
                */
            portalStatus: PortalStatus | undefined;
    }
    export namespace UpdatePortalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdatePortalResponse) => any;
    }
    export interface UpdateProjectRequest {
            /**
                * <p>The ID of the project to update.</p>
                */
            projectId: string | undefined;
            /**
                * <p>A new friendly name for the project.</p>
                */
            projectName: string | undefined;
            /**
                * <p>A new description for the project.</p>
                */
            projectDescription?: string;
            /**
                * <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
                */
            clientToken?: string;
    }
    export namespace UpdateProjectRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProjectRequest) => any;
    }
    export interface UpdateProjectResponse {
    }
    export namespace UpdateProjectResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateProjectResponse) => any;
    }
}

declare module '@aws-sdk/client-iotsitewise/node_modules/@aws-sdk/client-iotsitewise/dist-types/models/IoTSiteWiseServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from IoTSiteWise service.
        */
    export class IoTSiteWiseServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

