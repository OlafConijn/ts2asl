// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-mwaa' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateCliTokenCommandInput, CreateCliTokenCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateCliTokenCommand";
    import { CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateEnvironmentCommand";
    import { CreateWebLoginTokenCommandInput, CreateWebLoginTokenCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateWebLoginTokenCommand";
    import { DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/DeleteEnvironmentCommand";
    import { GetEnvironmentCommandInput, GetEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/GetEnvironmentCommand";
    import { ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListEnvironmentsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListTagsForResourceCommand";
    import { PublishMetricsCommandInput, PublishMetricsCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/PublishMetricsCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UntagResourceCommand";
    import { UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UpdateEnvironmentCommand";
    import { MWAAClient } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    /**
        * <fullname>Amazon Managed Workflows for Apache Airflow</fullname>
        *         <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html">What Is Amazon MWAA?</a>.</p>
        *         <p>
        *             <b>Endpoints</b>
        *          </p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html">CreateEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html">DeleteEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html">GetEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html">ListEnvironments</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html">ListTagsForResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html">TagResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html">UntagResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html">UpdateEnvironment</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html ">CreateCliToken</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html">CreateWebLoginToken</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html ">PublishMetrics</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *          </ul>
        *         <p>
        *             <b>Regions</b>
        *          </p>
        *         <p>For a list of regions that Amazon MWAA supports, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p>
        */
    export class MWAA extends MWAAClient {
            /**
                * <p>Creates a CLI token for the Airflow CLI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-cli.html">Creating an Apache Airflow CLI token</a>.</p>
                */
            createCliToken(args: CreateCliTokenCommandInput, options?: __HttpHandlerOptions): Promise<CreateCliTokenCommandOutput>;
            createCliToken(args: CreateCliTokenCommandInput, cb: (err: any, data?: CreateCliTokenCommandOutput) => void): void;
            createCliToken(args: CreateCliTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateCliTokenCommandOutput) => void): void;
            /**
                * <p>Creates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
                */
            createEnvironment(args: CreateEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<CreateEnvironmentCommandOutput>;
            createEnvironment(args: CreateEnvironmentCommandInput, cb: (err: any, data?: CreateEnvironmentCommandOutput) => void): void;
            createEnvironment(args: CreateEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEnvironmentCommandOutput) => void): void;
            /**
                * <p>Creates a web login token for the Airflow Web UI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-web.html">Creating an Apache Airflow web login token</a>.</p>
                */
            createWebLoginToken(args: CreateWebLoginTokenCommandInput, options?: __HttpHandlerOptions): Promise<CreateWebLoginTokenCommandOutput>;
            createWebLoginToken(args: CreateWebLoginTokenCommandInput, cb: (err: any, data?: CreateWebLoginTokenCommandOutput) => void): void;
            createWebLoginToken(args: CreateWebLoginTokenCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWebLoginTokenCommandOutput) => void): void;
            /**
                * <p>Deletes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
                */
            deleteEnvironment(args: DeleteEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEnvironmentCommandOutput>;
            deleteEnvironment(args: DeleteEnvironmentCommandInput, cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void): void;
            deleteEnvironment(args: DeleteEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void): void;
            /**
                * <p>Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
                */
            getEnvironment(args: GetEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<GetEnvironmentCommandOutput>;
            getEnvironment(args: GetEnvironmentCommandInput, cb: (err: any, data?: GetEnvironmentCommandOutput) => void): void;
            getEnvironment(args: GetEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEnvironmentCommandOutput) => void): void;
            /**
                * <p>Lists the Amazon Managed Workflows for Apache Airflow (MWAA) environments.</p>
                */
            listEnvironments(args: ListEnvironmentsCommandInput, options?: __HttpHandlerOptions): Promise<ListEnvironmentsCommandOutput>;
            listEnvironments(args: ListEnvironmentsCommandInput, cb: (err: any, data?: ListEnvironmentsCommandOutput) => void): void;
            listEnvironments(args: ListEnvironmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEnvironmentsCommandOutput) => void): void;
            /**
                * <p>Lists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>. </p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>
                *             <b>Internal only</b>. Publishes environment health metrics to Amazon CloudWatch.</p>
                */
            publishMetrics(args: PublishMetricsCommandInput, options?: __HttpHandlerOptions): Promise<PublishMetricsCommandOutput>;
            publishMetrics(args: PublishMetricsCommandInput, cb: (err: any, data?: PublishMetricsCommandOutput) => void): void;
            publishMetrics(args: PublishMetricsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PublishMetricsCommandOutput) => void): void;
            /**
                * <p>Associates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. </p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
                */
            updateEnvironment(args: UpdateEnvironmentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEnvironmentCommandOutput>;
            updateEnvironment(args: UpdateEnvironmentCommandInput, cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void): void;
            updateEnvironment(args: UpdateEnvironmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateCliTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateCliTokenRequest, CreateCliTokenResponse } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface CreateCliTokenCommandInput extends CreateCliTokenRequest {
    }
    export interface CreateCliTokenCommandOutput extends CreateCliTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a CLI token for the Airflow CLI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-cli.html">Creating an Apache Airflow CLI token</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, CreateCliTokenCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, CreateCliTokenCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new CreateCliTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateCliTokenCommandInput} for command's `input` shape.
        * @see {@link CreateCliTokenCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class CreateCliTokenCommand extends $Command<CreateCliTokenCommandInput, CreateCliTokenCommandOutput, MWAAClientResolvedConfig> {
            readonly input: CreateCliTokenCommandInput;
            constructor(input: CreateCliTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateCliTokenCommandInput, CreateCliTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateEnvironmentInput, CreateEnvironmentOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface CreateEnvironmentCommandInput extends CreateEnvironmentInput {
    }
    export interface CreateEnvironmentCommandOutput extends CreateEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Creates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, CreateEnvironmentCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, CreateEnvironmentCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new CreateEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateEnvironmentCommandInput} for command's `input` shape.
        * @see {@link CreateEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class CreateEnvironmentCommand extends $Command<CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput, MWAAClientResolvedConfig> {
            readonly input: CreateEnvironmentCommandInput;
            constructor(input: CreateEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateWebLoginTokenCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateWebLoginTokenRequest, CreateWebLoginTokenResponse } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface CreateWebLoginTokenCommandInput extends CreateWebLoginTokenRequest {
    }
    export interface CreateWebLoginTokenCommandOutput extends CreateWebLoginTokenResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a web login token for the Airflow Web UI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-web.html">Creating an Apache Airflow web login token</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, CreateWebLoginTokenCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, CreateWebLoginTokenCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new CreateWebLoginTokenCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateWebLoginTokenCommandInput} for command's `input` shape.
        * @see {@link CreateWebLoginTokenCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class CreateWebLoginTokenCommand extends $Command<CreateWebLoginTokenCommandInput, CreateWebLoginTokenCommandOutput, MWAAClientResolvedConfig> {
            readonly input: CreateWebLoginTokenCommandInput;
            constructor(input: CreateWebLoginTokenCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateWebLoginTokenCommandInput, CreateWebLoginTokenCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/DeleteEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteEnvironmentInput, DeleteEnvironmentOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface DeleteEnvironmentCommandInput extends DeleteEnvironmentInput {
    }
    export interface DeleteEnvironmentCommandOutput extends DeleteEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Deletes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, DeleteEnvironmentCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, DeleteEnvironmentCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new DeleteEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteEnvironmentCommandInput} for command's `input` shape.
        * @see {@link DeleteEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class DeleteEnvironmentCommand extends $Command<DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput, MWAAClientResolvedConfig> {
            readonly input: DeleteEnvironmentCommandInput;
            constructor(input: DeleteEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/GetEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetEnvironmentInput, GetEnvironmentOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface GetEnvironmentCommandInput extends GetEnvironmentInput {
    }
    export interface GetEnvironmentCommandOutput extends GetEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, GetEnvironmentCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, GetEnvironmentCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new GetEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEnvironmentCommandInput} for command's `input` shape.
        * @see {@link GetEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class GetEnvironmentCommand extends $Command<GetEnvironmentCommandInput, GetEnvironmentCommandOutput, MWAAClientResolvedConfig> {
            readonly input: GetEnvironmentCommandInput;
            constructor(input: GetEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEnvironmentCommandInput, GetEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListEnvironmentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListEnvironmentsInput, ListEnvironmentsOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface ListEnvironmentsCommandInput extends ListEnvironmentsInput {
    }
    export interface ListEnvironmentsCommandOutput extends ListEnvironmentsOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the Amazon Managed Workflows for Apache Airflow (MWAA) environments.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, ListEnvironmentsCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, ListEnvironmentsCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new ListEnvironmentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListEnvironmentsCommandInput} for command's `input` shape.
        * @see {@link ListEnvironmentsCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class ListEnvironmentsCommand extends $Command<ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput, MWAAClientResolvedConfig> {
            readonly input: ListEnvironmentsCommandInput;
            constructor(input: ListEnvironmentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceInput, ListTagsForResourceOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceInput {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Lists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, ListTagsForResourceCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, ListTagsForResourceCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, MWAAClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/PublishMetricsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PublishMetricsInput, PublishMetricsOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface PublishMetricsCommandInput extends PublishMetricsInput {
    }
    export interface PublishMetricsCommandOutput extends PublishMetricsOutput, __MetadataBearer {
    }
    /**
        * <p>
        *             <b>Internal only</b>. Publishes environment health metrics to Amazon CloudWatch.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, PublishMetricsCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, PublishMetricsCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new PublishMetricsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PublishMetricsCommandInput} for command's `input` shape.
        * @see {@link PublishMetricsCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class PublishMetricsCommand extends $Command<PublishMetricsCommandInput, PublishMetricsCommandOutput, MWAAClientResolvedConfig> {
            readonly input: PublishMetricsCommandInput;
            constructor(input: PublishMetricsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PublishMetricsCommandInput, PublishMetricsCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceInput, TagResourceOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface TagResourceCommandInput extends TagResourceInput {
    }
    export interface TagResourceCommandOutput extends TagResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Associates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, TagResourceCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, TagResourceCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, MWAAClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceInput, UntagResourceOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface UntagResourceCommandInput extends UntagResourceInput {
    }
    export interface UntagResourceCommandOutput extends UntagResourceOutput, __MetadataBearer {
    }
    /**
        * <p>Removes key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, UntagResourceCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, UntagResourceCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, MWAAClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UpdateEnvironmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateEnvironmentInput, UpdateEnvironmentOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0";
    import { MWAAClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient";
    export interface UpdateEnvironmentCommandInput extends UpdateEnvironmentInput {
    }
    export interface UpdateEnvironmentCommandOutput extends UpdateEnvironmentOutput, __MetadataBearer {
    }
    /**
        * <p>Updates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { MWAAClient, UpdateEnvironmentCommand } from "@aws-sdk/client-mwaa"; // ES Modules import
        * // const { MWAAClient, UpdateEnvironmentCommand } = require("@aws-sdk/client-mwaa"); // CommonJS import
        * const client = new MWAAClient(config);
        * const command = new UpdateEnvironmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateEnvironmentCommandInput} for command's `input` shape.
        * @see {@link UpdateEnvironmentCommandOutput} for command's `response` shape.
        * @see {@link MWAAClientResolvedConfig | config} for MWAAClient's `config` shape.
        *
        */
    export class UpdateEnvironmentCommand extends $Command<UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput, MWAAClientResolvedConfig> {
            readonly input: UpdateEnvironmentCommandInput;
            constructor(input: UpdateEnvironmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: MWAAClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/MWAAClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateCliTokenCommandInput, CreateCliTokenCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateCliTokenCommand";
    import { CreateEnvironmentCommandInput, CreateEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateEnvironmentCommand";
    import { CreateWebLoginTokenCommandInput, CreateWebLoginTokenCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/CreateWebLoginTokenCommand";
    import { DeleteEnvironmentCommandInput, DeleteEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/DeleteEnvironmentCommand";
    import { GetEnvironmentCommandInput, GetEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/GetEnvironmentCommand";
    import { ListEnvironmentsCommandInput, ListEnvironmentsCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListEnvironmentsCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/ListTagsForResourceCommand";
    import { PublishMetricsCommandInput, PublishMetricsCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/PublishMetricsCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UntagResourceCommand";
    import { UpdateEnvironmentCommandInput, UpdateEnvironmentCommandOutput } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/commands/UpdateEnvironmentCommand";
    export type ServiceInputTypes = CreateCliTokenCommandInput | CreateEnvironmentCommandInput | CreateWebLoginTokenCommandInput | DeleteEnvironmentCommandInput | GetEnvironmentCommandInput | ListEnvironmentsCommandInput | ListTagsForResourceCommandInput | PublishMetricsCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateEnvironmentCommandInput;
    export type ServiceOutputTypes = CreateCliTokenCommandOutput | CreateEnvironmentCommandOutput | CreateWebLoginTokenCommandOutput | DeleteEnvironmentCommandOutput | GetEnvironmentCommandOutput | ListEnvironmentsCommandOutput | ListTagsForResourceCommandOutput | PublishMetricsCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateEnvironmentCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type MWAAClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of MWAAClient class constructor that set the region, credentials and other options.
        */
    export interface MWAAClientConfig extends MWAAClientConfigType {
    }
    type MWAAClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of MWAAClient class. This is resolved and normalized from the {@link MWAAClientConfig | constructor configuration interface}.
        */
    export interface MWAAClientResolvedConfig extends MWAAClientResolvedConfigType {
    }
    /**
        * <fullname>Amazon Managed Workflows for Apache Airflow</fullname>
        *         <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html">What Is Amazon MWAA?</a>.</p>
        *         <p>
        *             <b>Endpoints</b>
        *          </p>
        *         <ul>
        *             <li>
        *                 <p>
        *                   <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html">CreateEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html">DeleteEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html">GetEnvironment</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html">ListEnvironments</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html">ListTagsForResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html">TagResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html">UntagResource</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html">UpdateEnvironment</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html ">CreateCliToken</a>
        *                      </p>
        *                     </li>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html">CreateWebLoginToken</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *             <li>
        *                 <p>
        *                   <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p>
        *                 <ul>
        *                   <li>
        *                         <p>
        *                         <a href="https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html ">PublishMetrics</a>
        *                      </p>
        *                     </li>
        *                </ul>
        *             </li>
        *          </ul>
        *         <p>
        *             <b>Regions</b>
        *          </p>
        *         <p>For a list of regions that Amazon MWAA supports, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p>
        */
    export class MWAAClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, MWAAClientResolvedConfig> {
            /**
                * The resolved configuration of MWAAClient class. This is resolved and normalized from the {@link MWAAClientConfig | constructor configuration interface}.
                */
            readonly config: MWAAClientResolvedConfig;
            constructor(configuration: MWAAClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { MWAAServiceException as __BaseException } from "@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/MWAAServiceException";
    /**
        * <p>Access to the Apache Airflow Web UI or CLI has been denied due to insufficient permissions. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/access-policies.html">Accessing an Amazon MWAA environment</a>.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export interface CreateCliTokenRequest {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace CreateCliTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCliTokenRequest) => any;
    }
    export interface CreateCliTokenResponse {
            /**
                * <p>An Airflow CLI login token.</p>
                */
            CliToken?: string;
            /**
                * <p>The Airflow web server hostname for the environment.</p>
                */
            WebServerHostname?: string;
    }
    export namespace CreateCliTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateCliTokenResponse) => any;
    }
    /**
        * <p>ResourceNotFoundException: The resource is not available.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export enum LoggingLevel {
            CRITICAL = "CRITICAL",
            DEBUG = "DEBUG",
            ERROR = "ERROR",
            INFO = "INFO",
            WARNING = "WARNING"
    }
    /**
        * <p>Enables the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>) and defines the log level to send to CloudWatch Logs (e.g. <code>INFO</code>).</p>
        */
    export interface ModuleLoggingConfigurationInput {
            /**
                * <p>Indicates whether to enable the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>).</p>
                */
            Enabled: boolean | undefined;
            /**
                * <p>Defines the Apache Airflow log level (e.g. <code>INFO</code>) to send to CloudWatch Logs.</p>
                */
            LogLevel: LoggingLevel | string | undefined;
    }
    export namespace ModuleLoggingConfigurationInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ModuleLoggingConfigurationInput) => any;
    }
    /**
        * <p>Defines the Apache Airflow log types to send to CloudWatch Logs.</p>
        */
    export interface LoggingConfigurationInput {
            /**
                * <p>Publishes Airflow DAG processing logs to CloudWatch Logs.</p>
                */
            DagProcessingLogs?: ModuleLoggingConfigurationInput;
            /**
                * <p>Publishes Airflow scheduler logs to CloudWatch Logs.</p>
                */
            SchedulerLogs?: ModuleLoggingConfigurationInput;
            /**
                * <p>Publishes Airflow web server logs to CloudWatch Logs.</p>
                */
            WebserverLogs?: ModuleLoggingConfigurationInput;
            /**
                * <p>Publishes Airflow worker logs to CloudWatch Logs.</p>
                */
            WorkerLogs?: ModuleLoggingConfigurationInput;
            /**
                * <p>Publishes Airflow task logs to CloudWatch Logs.</p>
                */
            TaskLogs?: ModuleLoggingConfigurationInput;
    }
    export namespace LoggingConfigurationInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingConfigurationInput) => any;
    }
    /**
        * <p>Describes the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
        */
    export interface NetworkConfiguration {
            /**
                * <p>A list of subnet IDs. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
                */
            SubnetIds?: string[];
            /**
                * <p>A list of security group IDs. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security in your VPC on Amazon MWAA</a>.</p>
                */
            SecurityGroupIds?: string[];
    }
    export namespace NetworkConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NetworkConfiguration) => any;
    }
    export enum WebserverAccessMode {
            PRIVATE_ONLY = "PRIVATE_ONLY",
            PUBLIC_ONLY = "PUBLIC_ONLY"
    }
    /**
        * <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation to create an environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get started with Amazon Managed Workflows for Apache Airflow</a>.</p>
        */
    export interface CreateEnvironmentInput {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an Amazon Web Services Identity and Access Management (IAM) role that grants MWAA permission to access Amazon Web Services services and resources used by your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.</p>
                */
            ExecutionRoleArn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.</p>
                */
            SourceBucketArn: string | undefined;
            /**
                * <p>The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.</p>
                */
            DagS3Path: string | undefined;
            /**
                * <p>The VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
                */
            NetworkConfiguration: NetworkConfiguration | undefined;
            /**
                * <p>The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the plugins.zip version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.</p>
                */
            PluginsS3Path?: string;
            /**
                * <p>The version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
                */
            PluginsS3ObjectVersion?: string;
            /**
                * <p>The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a file version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.</p>
                */
            RequirementsS3Path?: string;
            /**
                * <p>The version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
                */
            RequirementsS3ObjectVersion?: string;
            /**
                * <p>A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.</p>
                */
            AirflowConfigurationOptions?: Record<string, string>;
            /**
                * <p>The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.</p>
                */
            EnvironmentClass?: string;
            /**
                * <p>The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.</p>
                */
            MaxWorkers?: number;
            /**
                * <p>The Amazon Web Services Key Management Service (KMS) key to encrypt the data in your environment. You can use an Amazon Web Services owned CMK, or a Customer managed CMK (advanced). To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/create-environment.html">Create an Amazon MWAA environment</a>.</p>
                */
            KmsKey?: string;
            /**
                * <p>The Apache Airflow version for your environment. If no value is specified, it defaults to the latest version. Valid values:
                *             <code>1.10.12</code>, <code>2.0.2</code>, and <code>2.2.2</code>.
                *             To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/airflow-versions.html">Apache Airflow versions on Amazon Managed Workflows for Apache Airflow (MWAA)</a>.</p>
                */
            AirflowVersion?: string;
            /**
                * <p>Defines the Apache Airflow logs to send to CloudWatch Logs.</p>
                */
            LoggingConfiguration?: LoggingConfigurationInput;
            /**
                * <p>The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only.</p>
                */
            WeeklyMaintenanceWindowStart?: string;
            /**
                * <p>The key-value tag pairs you want to associate to your environment. For example, <code>"Environment": "Staging"</code>. To learn more, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The Apache Airflow <i>Web server</i> access mode. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.</p>
                */
            WebserverAccessMode?: WebserverAccessMode | string;
            /**
                * <p>The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.</p>
                */
            MinWorkers?: number;
            /**
                * <p>The number of Apache Airflow schedulers to run in your environment. Valid values:</p>
                *         <ul>
                *             <li>
                *                 <p>v2 - Accepts between 2 to 5. Defaults to 2.</p>
                *             </li>
                *             <li>
                *                 <p>v1 - Accepts 1.</p>
                *             </li>
                *          </ul>
                */
            Schedulers?: number;
    }
    export namespace CreateEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentInput) => any;
    }
    export interface CreateEnvironmentOutput {
            /**
                * <p>The Amazon Resource Name (ARN) returned in the response for the environment.</p>
                */
            Arn?: string;
    }
    export namespace CreateEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateEnvironmentOutput) => any;
    }
    /**
        * <p>InternalServerException: An internal error has occurred.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>ValidationException: The provided input is not valid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export interface CreateWebLoginTokenRequest {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace CreateWebLoginTokenRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebLoginTokenRequest) => any;
    }
    export interface CreateWebLoginTokenResponse {
            /**
                * <p>An Airflow web server login token.</p>
                */
            WebToken?: string;
            /**
                * <p>The Airflow web server hostname for the environment.</p>
                */
            WebServerHostname?: string;
    }
    export namespace CreateWebLoginTokenResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateWebLoginTokenResponse) => any;
    }
    export interface DeleteEnvironmentInput {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace DeleteEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentInput) => any;
    }
    export interface DeleteEnvironmentOutput {
    }
    export namespace DeleteEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteEnvironmentOutput) => any;
    }
    export interface GetEnvironmentInput {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
    }
    export namespace GetEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentInput) => any;
    }
    /**
        * <p>Describes the error(s) encountered with the last update of the environment.</p>
        */
    export interface UpdateError {
            /**
                * <p>The error code that corresponds to the error with the last update.</p>
                */
            ErrorCode?: string;
            /**
                * <p>The error message that corresponds to the error code.</p>
                */
            ErrorMessage?: string;
    }
    export namespace UpdateError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateError) => any;
    }
    export enum UpdateStatus {
            FAILED = "FAILED",
            PENDING = "PENDING",
            SUCCESS = "SUCCESS"
    }
    /**
        * <p>Describes the status of the last update on the environment, and any errors that were encountered.</p>
        */
    export interface LastUpdate {
            /**
                * <p>The status of the last update on the environment.</p>
                */
            Status?: UpdateStatus | string;
            /**
                * <p>The day and time of the last update on the environment.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The error that was encountered during the last update of the environment.</p>
                */
            Error?: UpdateError;
            /**
                * <p>The source of the last update to the environment. Includes internal processes by Amazon MWAA, such as an environment maintenance update.</p>
                */
            Source?: string;
    }
    export namespace LastUpdate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LastUpdate) => any;
    }
    /**
        * <p>Describes the Apache Airflow log details for the log type (e.g. <code>DagProcessingLogs</code>).</p>
        */
    export interface ModuleLoggingConfiguration {
            /**
                * <p>Indicates whether the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>) is enabled.</p>
                */
            Enabled?: boolean;
            /**
                * <p>The Apache Airflow log level for the log type (e.g. <code>DagProcessingLogs</code>). </p>
                */
            LogLevel?: LoggingLevel | string;
            /**
                * <p>The Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>) is published. For example, <code>arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:*</code>.</p>
                */
            CloudWatchLogGroupArn?: string;
    }
    export namespace ModuleLoggingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ModuleLoggingConfiguration) => any;
    }
    /**
        * <p>Describes the Apache Airflow log types that are published to CloudWatch Logs.</p>
        */
    export interface LoggingConfiguration {
            /**
                * <p>The Airflow DAG processing logs published to CloudWatch Logs and the log level.</p>
                */
            DagProcessingLogs?: ModuleLoggingConfiguration;
            /**
                * <p>The Airflow scheduler logs published to CloudWatch Logs and the log level.</p>
                */
            SchedulerLogs?: ModuleLoggingConfiguration;
            /**
                * <p>The Airflow web server logs published to CloudWatch Logs and the log level.</p>
                */
            WebserverLogs?: ModuleLoggingConfiguration;
            /**
                * <p>The Airflow worker logs published to CloudWatch Logs and the log level.</p>
                */
            WorkerLogs?: ModuleLoggingConfiguration;
            /**
                * <p>The Airflow task logs published to CloudWatch Logs and the log level.</p>
                */
            TaskLogs?: ModuleLoggingConfiguration;
    }
    export namespace LoggingConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LoggingConfiguration) => any;
    }
    export enum EnvironmentStatus {
            AVAILABLE = "AVAILABLE",
            CREATE_FAILED = "CREATE_FAILED",
            CREATING = "CREATING",
            DELETED = "DELETED",
            DELETING = "DELETING",
            UNAVAILABLE = "UNAVAILABLE",
            UPDATE_FAILED = "UPDATE_FAILED",
            UPDATING = "UPDATING"
    }
    /**
        * <p>Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.</p>
        */
    export interface Environment {
            /**
                * <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name?: string;
            /**
                * <p>The status of the Amazon MWAA environment. Valid values:</p>
                *         <ul>
                *             <li>
                *                 <p>
                *                   <code>CREATING</code> - Indicates the request to create the environment is in progress.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>CREATE_FAILED</code> - Indicates the request to create the environment failed, and the environment could not be created.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>AVAILABLE</code> - Indicates the request was successful and the environment is ready to use.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>UPDATING</code> - Indicates the request to update the environment is in progress.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>DELETING</code> - Indicates the request to delete the environment is in progress.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>DELETED</code> - Indicates the request to delete the environment is complete, and the environment has been deleted.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>UNAVAILABLE</code> - Indicates the request failed, but the environment was unable to rollback and is not in a stable state.</p>
                *             </li>
                *             <li>
                *                 <p>
                *                   <code>UPDATE_FAILED</code> - Indicates the request to update the environment failed, and the environment has rolled back successfully and is ready to use.</p>
                *             </li>
                *          </ul>
                *         <p>We recommend reviewing our troubleshooting guide for a list of common errors and their solutions. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/troubleshooting.html">Amazon MWAA troubleshooting</a>.</p>
                */
            Status?: EnvironmentStatus | string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon MWAA environment.</p>
                */
            Arn?: string;
            /**
                * <p>The day and time the environment was created.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The Apache Airflow <i>Web server</i> host name for the Amazon MWAA environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/access-airflow-ui.html">Accessing the Apache Airflow UI</a>.</p>
                */
            WebserverUrl?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access Amazon Web Services resources in your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.</p>
                */
            ExecutionRoleArn?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for the service-linked role of the environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-slr.html">Amazon MWAA Service-linked role</a>.</p>
                */
            ServiceRoleArn?: string;
            /**
                * <p>The Amazon Web Services Key Management Service (KMS) encryption key used to encrypt the data in your environment.</p>
                */
            KmsKey?: string;
            /**
                * <p>The Apache Airflow version on your environment. Valid values: <code>1.10.12</code>, <code>2.0.2</code>, and <code>2.2.2</code>.</p>
                */
            AirflowVersion?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.</p>
                */
            SourceBucketArn?: string;
            /**
                * <p>The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.</p>
                */
            DagS3Path?: string;
            /**
                * <p>The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.</p>
                */
            PluginsS3Path?: string;
            /**
                * <p>The version of the plugins.zip file on your Amazon S3 bucket. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.</p>
                */
            PluginsS3ObjectVersion?: string;
            /**
                * <p>The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.</p>
                */
            RequirementsS3Path?: string;
            /**
                * <p>The version of the requirements.txt file on your Amazon S3 bucket. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.</p>
                */
            RequirementsS3ObjectVersion?: string;
            /**
                * <p>A list of key-value pairs containing the Apache Airflow configuration options attached to your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.</p>
                */
            AirflowConfigurationOptions?: Record<string, string>;
            /**
                * <p>The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.</p>
                */
            EnvironmentClass?: string;
            /**
                * <p>The maximum number of workers that run in your environment. For example, <code>20</code>.</p>
                */
            MaxWorkers?: number;
            /**
                * <p>Describes the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
                */
            NetworkConfiguration?: NetworkConfiguration;
            /**
                * <p>The Apache Airflow logs published to CloudWatch Logs.</p>
                */
            LoggingConfiguration?: LoggingConfiguration;
            /**
                * <p>The status of the last update on the environment.</p>
                */
            LastUpdate?: LastUpdate;
            /**
                * <p>The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: <code>TUE:03:30</code>.</p>
                */
            WeeklyMaintenanceWindowStart?: string;
            /**
                * <p>The key-value tag pairs associated to your environment. For example, <code>"Environment": "Staging"</code>. To learn more, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>
                */
            Tags?: Record<string, string>;
            /**
                * <p>The Apache Airflow <i>Web server</i> access mode. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.</p>
                */
            WebserverAccessMode?: WebserverAccessMode | string;
            /**
                * <p>The minimum number of workers that run in your environment. For example, <code>2</code>.</p>
                */
            MinWorkers?: number;
            /**
                * <p>The number of Apache Airflow schedulers that run in your Amazon MWAA environment.</p>
                */
            Schedulers?: number;
    }
    export namespace Environment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Environment) => any;
    }
    export interface GetEnvironmentOutput {
            /**
                * <p>An object containing all available details about the environment.</p>
                */
            Environment?: Environment;
    }
    export namespace GetEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEnvironmentOutput) => any;
    }
    export interface ListEnvironmentsInput {
            /**
                * <p>Retrieves the next page of the results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of results to retrieve per page. For example, <code>5</code> environments per page.</p>
                */
            MaxResults?: number;
    }
    export namespace ListEnvironmentsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentsInput) => any;
    }
    export interface ListEnvironmentsOutput {
            /**
                * <p>Returns a list of Amazon MWAA environments.</p>
                */
            Environments: string[] | undefined;
            /**
                * <p>Retrieves the next page of the results.</p>
                */
            NextToken?: string;
    }
    export namespace ListEnvironmentsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListEnvironmentsOutput) => any;
    }
    export interface ListTagsForResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceInput) => any;
    }
    export interface ListTagsForResourceOutput {
            /**
                * <p>The key-value tag pairs associated to your environment. To learn more, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>
                */
            Tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceOutput) => any;
    }
    /**
        * <p>
        *             <b>Internal only</b>. Represents the dimensions of a metric. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.</p>
        */
    export interface Dimension {
            /**
                * <p>
                *             <b>Internal only</b>. The name of the dimension.</p>
                */
            Name: string | undefined;
            /**
                * <p>
                *             <b>Internal only</b>. The value of the dimension.</p>
                */
            Value: string | undefined;
    }
    export namespace Dimension {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Dimension) => any;
    }
    /**
        * <p>
        *             <b>Internal only</b>. Represents a set of statistics that describe a specific metric. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.</p>
        */
    export interface StatisticSet {
            /**
                * <p>
                *             <b>Internal only</b>. The number of samples used for the statistic set.</p>
                */
            SampleCount?: number;
            /**
                * <p>
                *             <b>Internal only</b>. The sum of values for the sample set.</p>
                */
            Sum?: number;
            /**
                * <p>
                *             <b>Internal only</b>. The minimum value of the sample set.</p>
                */
            Minimum?: number;
            /**
                * <p>
                *             <b>Internal only</b>. The maximum value of the sample set.</p>
                */
            Maximum?: number;
    }
    export namespace StatisticSet {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StatisticSet) => any;
    }
    export enum Unit {
            BITS = "Bits",
            BITS_PER_SECOND = "Bits/Second",
            BYTES = "Bytes",
            BYTES_PER_SECOND = "Bytes/Second",
            COUNT = "Count",
            COUNT_PER_SECOND = "Count/Second",
            GIGABITS = "Gigabits",
            GIGABITS_PER_SECOND = "Gigabits/Second",
            GIGABYTES = "Gigabytes",
            GIGABYTES_PER_SECOND = "Gigabytes/Second",
            KILOBITS = "Kilobits",
            KILOBITS_PER_SECOND = "Kilobits/Second",
            KILOBYTES = "Kilobytes",
            KILOBYTES_PER_SECOND = "Kilobytes/Second",
            MEGABITS = "Megabits",
            MEGABITS_PER_SECOND = "Megabits/Second",
            MEGABYTES = "Megabytes",
            MEGABYTES_PER_SECOND = "Megabytes/Second",
            MICROSECONDS = "Microseconds",
            MILLISECONDS = "Milliseconds",
            NONE = "None",
            PERCENT = "Percent",
            SECONDS = "Seconds",
            TERABITS = "Terabits",
            TERABITS_PER_SECOND = "Terabits/Second",
            TERABYTES = "Terabytes",
            TERABYTES_PER_SECOND = "Terabytes/Second"
    }
    /**
        * <p>
        *             <b>Internal only</b>. Collects Apache Airflow metrics. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.</p>
        */
    export interface MetricDatum {
            /**
                * <p>
                *             <b>Internal only</b>. The name of the metric.</p>
                */
            MetricName: string | undefined;
            /**
                * <p>
                *             <b>Internal only</b>. The time the metric data was received.</p>
                */
            Timestamp: Date | undefined;
            /**
                * <p>
                *             <b>Internal only</b>. The dimensions associated with the metric.</p>
                */
            Dimensions?: Dimension[];
            /**
                * <p>
                *             <b>Internal only</b>. The value for the metric.</p>
                */
            Value?: number;
            /**
                * <p>
                *             <b>Internal only</b>. The unit used to store the metric.</p>
                */
            Unit?: Unit | string;
            /**
                * <p>
                *             <b>Internal only</b>. The statistical values for the metric.</p>
                */
            StatisticValues?: StatisticSet;
    }
    export namespace MetricDatum {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricDatum) => any;
    }
    export interface PublishMetricsInput {
            /**
                * <p>
                *             <b>Internal only</b>. The name of the environment.</p>
                */
            EnvironmentName: string | undefined;
            /**
                * <p>
                *             <b>Internal only</b>. Publishes metrics to Amazon CloudWatch. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.</p>
                */
            MetricData: MetricDatum[] | undefined;
    }
    export namespace PublishMetricsInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishMetricsInput) => any;
    }
    export interface PublishMetricsOutput {
    }
    export namespace PublishMetricsOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishMetricsOutput) => any;
    }
    export interface TagResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The key-value tag pairs you want to associate to your environment. For example, <code>"Environment": "Staging"</code>. To learn more, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>
                */
            Tags: Record<string, string> | undefined;
    }
    export namespace TagResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceInput) => any;
    }
    export interface TagResourceOutput {
    }
    export namespace TagResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceOutput) => any;
    }
    export interface UntagResourceInput {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The key-value tag pair you want to remove. For example, <code>"Environment": "Staging"</code>. </p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceInput) => any;
    }
    export interface UntagResourceOutput {
    }
    export namespace UntagResourceOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceOutput) => any;
    }
    /**
        * <p>Defines the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
        */
    export interface UpdateNetworkConfigurationInput {
            /**
                * <p>A list of security group IDs. A security group must be attached to the same VPC as the subnets. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security in your VPC on Amazon MWAA</a>.</p>
                */
            SecurityGroupIds: string[] | undefined;
    }
    export namespace UpdateNetworkConfigurationInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateNetworkConfigurationInput) => any;
    }
    export interface UpdateEnvironmentInput {
            /**
                * <p>The name of your Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
                */
            Name: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access Amazon Web Services resources in your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.</p>
                */
            ExecutionRoleArn?: string;
            /**
                * <p>The Apache Airflow version for your environment. If no value is specified, defaults to the latest version.
                *             Valid values: <code>1.10.12</code>, <code>2.0.2</code>, and <code>2.2.2</code>.</p>
                */
            AirflowVersion?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.</p>
                */
            SourceBucketArn?: string;
            /**
                * <p>The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.</p>
                */
            DagS3Path?: string;
            /**
                * <p>The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the plugins.zip version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.</p>
                */
            PluginsS3Path?: string;
            /**
                * <p>The version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
                */
            PluginsS3ObjectVersion?: string;
            /**
                * <p>The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a file version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.</p>
                */
            RequirementsS3Path?: string;
            /**
                * <p>The version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
                */
            RequirementsS3ObjectVersion?: string;
            /**
                * <p>A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.</p>
                */
            AirflowConfigurationOptions?: Record<string, string>;
            /**
                * <p>The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.</p>
                */
            EnvironmentClass?: string;
            /**
                * <p>The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.</p>
                */
            MaxWorkers?: number;
            /**
                * <p>The VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
                */
            NetworkConfiguration?: UpdateNetworkConfigurationInput;
            /**
                * <p>The Apache Airflow log types to send to CloudWatch Logs.</p>
                */
            LoggingConfiguration?: LoggingConfigurationInput;
            /**
                * <p>The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only.</p>
                */
            WeeklyMaintenanceWindowStart?: string;
            /**
                * <p>The Apache Airflow <i>Web server</i> access mode. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.</p>
                */
            WebserverAccessMode?: WebserverAccessMode | string;
            /**
                * <p>The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.</p>
                */
            MinWorkers?: number;
            /**
                * <p>The number of Apache Airflow schedulers to run in your Amazon MWAA environment.</p>
                */
            Schedulers?: number;
    }
    export namespace UpdateEnvironmentInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentInput) => any;
    }
    export interface UpdateEnvironmentOutput {
            /**
                * <p>The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.</p>
                */
            Arn?: string;
    }
    export namespace UpdateEnvironmentOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateEnvironmentOutput) => any;
    }
}

declare module '@aws-sdk/client-mwaa/node_modules/@aws-sdk/client-mwaa/dist-types/models/MWAAServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from MWAA service.
        */
    export class MWAAServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

