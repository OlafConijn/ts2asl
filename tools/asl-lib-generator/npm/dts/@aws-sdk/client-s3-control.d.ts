// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-sdk-s3-control
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http
//   stream

declare module '@aws-sdk/client-s3-control' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateAccessPointCommandInput, CreateAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointCommand";
    import { CreateAccessPointForObjectLambdaCommandInput, CreateAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointForObjectLambdaCommand";
    import { CreateBucketCommandInput, CreateBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateBucketCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateJobCommand";
    import { CreateMultiRegionAccessPointCommandInput, CreateMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateMultiRegionAccessPointCommand";
    import { DeleteAccessPointCommandInput, DeleteAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointCommand";
    import { DeleteAccessPointForObjectLambdaCommandInput, DeleteAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointForObjectLambdaCommand";
    import { DeleteAccessPointPolicyCommandInput, DeleteAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyCommand";
    import { DeleteAccessPointPolicyForObjectLambdaCommandInput, DeleteAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyForObjectLambdaCommand";
    import { DeleteBucketCommandInput, DeleteBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketCommand";
    import { DeleteBucketLifecycleConfigurationCommandInput, DeleteBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketLifecycleConfigurationCommand";
    import { DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketPolicyCommand";
    import { DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketTaggingCommand";
    import { DeleteJobTaggingCommandInput, DeleteJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteJobTaggingCommand";
    import { DeleteMultiRegionAccessPointCommandInput, DeleteMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteMultiRegionAccessPointCommand";
    import { DeletePublicAccessBlockCommandInput, DeletePublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeletePublicAccessBlockCommand";
    import { DeleteStorageLensConfigurationCommandInput, DeleteStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationCommand";
    import { DeleteStorageLensConfigurationTaggingCommandInput, DeleteStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationTaggingCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeJobCommand";
    import { DescribeMultiRegionAccessPointOperationCommandInput, DescribeMultiRegionAccessPointOperationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeMultiRegionAccessPointOperationCommand";
    import { GetAccessPointCommandInput, GetAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointCommand";
    import { GetAccessPointConfigurationForObjectLambdaCommandInput, GetAccessPointConfigurationForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointConfigurationForObjectLambdaCommand";
    import { GetAccessPointForObjectLambdaCommandInput, GetAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointForObjectLambdaCommand";
    import { GetAccessPointPolicyCommandInput, GetAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyCommand";
    import { GetAccessPointPolicyForObjectLambdaCommandInput, GetAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyForObjectLambdaCommand";
    import { GetAccessPointPolicyStatusCommandInput, GetAccessPointPolicyStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusCommand";
    import { GetAccessPointPolicyStatusForObjectLambdaCommandInput, GetAccessPointPolicyStatusForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusForObjectLambdaCommand";
    import { GetBucketCommandInput, GetBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketCommand";
    import { GetBucketLifecycleConfigurationCommandInput, GetBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketLifecycleConfigurationCommand";
    import { GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketPolicyCommand";
    import { GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketTaggingCommand";
    import { GetJobTaggingCommandInput, GetJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetJobTaggingCommand";
    import { GetMultiRegionAccessPointCommandInput, GetMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointCommand";
    import { GetMultiRegionAccessPointPolicyCommandInput, GetMultiRegionAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyCommand";
    import { GetMultiRegionAccessPointPolicyStatusCommandInput, GetMultiRegionAccessPointPolicyStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyStatusCommand";
    import { GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetPublicAccessBlockCommand";
    import { GetStorageLensConfigurationCommandInput, GetStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationCommand";
    import { GetStorageLensConfigurationTaggingCommandInput, GetStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationTaggingCommand";
    import { ListAccessPointsCommandInput, ListAccessPointsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsCommand";
    import { ListAccessPointsForObjectLambdaCommandInput, ListAccessPointsForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsForObjectLambdaCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListJobsCommand";
    import { ListMultiRegionAccessPointsCommandInput, ListMultiRegionAccessPointsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListMultiRegionAccessPointsCommand";
    import { ListRegionalBucketsCommandInput, ListRegionalBucketsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListRegionalBucketsCommand";
    import { ListStorageLensConfigurationsCommandInput, ListStorageLensConfigurationsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListStorageLensConfigurationsCommand";
    import { PutAccessPointConfigurationForObjectLambdaCommandInput, PutAccessPointConfigurationForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointConfigurationForObjectLambdaCommand";
    import { PutAccessPointPolicyCommandInput, PutAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyCommand";
    import { PutAccessPointPolicyForObjectLambdaCommandInput, PutAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyForObjectLambdaCommand";
    import { PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketLifecycleConfigurationCommand";
    import { PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketPolicyCommand";
    import { PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketTaggingCommand";
    import { PutJobTaggingCommandInput, PutJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutJobTaggingCommand";
    import { PutMultiRegionAccessPointPolicyCommandInput, PutMultiRegionAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutMultiRegionAccessPointPolicyCommand";
    import { PutPublicAccessBlockCommandInput, PutPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutPublicAccessBlockCommand";
    import { PutStorageLensConfigurationCommandInput, PutStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationCommand";
    import { PutStorageLensConfigurationTaggingCommandInput, PutStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationTaggingCommand";
    import { UpdateJobPriorityCommandInput, UpdateJobPriorityCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobPriorityCommand";
    import { UpdateJobStatusCommandInput, UpdateJobStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobStatusCommand";
    import { S3ControlClient } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    /**
        * <p> Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. </p>
        */
    export class S3Control extends S3ControlClient {
            /**
                * <p>Creates an access point and associates it with the specified bucket. For more information, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing
                *             Data Access with Amazon S3 Access Points</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <note>
                *             <p>S3 on Outposts only supports VPC-style access points. </p>
                *             <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Accessing Amazon S3 on Outposts using
                *                virtual private cloud (VPC) only access points</a> in the
                *                <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples">Examples</a> section.</p>
                *          <p></p>
                *          <p>The following actions are related to <code>CreateAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createAccessPoint(args: CreateAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<CreateAccessPointCommandOutput>;
            createAccessPoint(args: CreateAccessPointCommandInput, cb: (err: any, data?: CreateAccessPointCommandOutput) => void): void;
            createAccessPoint(args: CreateAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAccessPointCommandOutput) => void): void;
            /**
                * <p>Creates an Object Lambda Access Point. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming objects with
                *             Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to
                *          <code>CreateAccessPointForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createAccessPointForObjectLambda(args: CreateAccessPointForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<CreateAccessPointForObjectLambdaCommandOutput>;
            createAccessPointForObjectLambda(args: CreateAccessPointForObjectLambdaCommandInput, cb: (err: any, data?: CreateAccessPointForObjectLambdaCommandOutput) => void): void;
            createAccessPointForObjectLambda(args: CreateAccessPointForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAccessPointForObjectLambdaCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">Create
                *                Bucket</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To
                *          create an Outposts bucket, you must have S3 on Outposts. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
                *          <p>Not every string is an acceptable bucket name. For information on bucket naming
                *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules">Working with
                *             Amazon S3 Buckets</a>.</p>
                *          <p>S3 on Outposts buckets support:</p>
                *          <ul>
                *             <li>
                *                <p>Tags</p>
                *             </li>
                *             <li>
                *                <p>LifecycleConfigurations for deleting expired objects</p>
                *             </li>
                *          </ul>
                *          <p>For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html">
                *             Amazon S3 on Outposts Restrictions and Limitations</a>.</p>
                *          <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
                *          endpoint hostname prefix and <code>x-amz-outpost-id</code> in your API request, see the
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>CreateBucket</code> for
                *          Amazon S3 on Outposts:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createBucket(args: CreateBucketCommandInput, options?: __HttpHandlerOptions): Promise<CreateBucketCommandOutput>;
            createBucket(args: CreateBucketCommandInput, cb: (err: any, data?: CreateBucketCommandOutput) => void): void;
            createBucket(args: CreateBucketCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateBucketCommandOutput) => void): void;
            /**
                * <p>You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects.
                *          Batch Operations can run a single action on lists of Amazon S3 objects that you specify. For more
                *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This action creates a S3 Batch Operations job.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html">JobOperation</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createJob(args: CreateJobCommandInput, options?: __HttpHandlerOptions): Promise<CreateJobCommandOutput>;
            createJob(args: CreateJobCommandInput, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            createJob(args: CreateJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateJobCommandOutput) => void): void;
            /**
                * <p>Creates a Multi-Region Access Point and associates it with the specified buckets. For more information
                *          about creating Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html">Creating
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This request is asynchronous, meaning that you might receive a response before the
                *          command has completed. When this request provides a response, it provides a token that you
                *          can use to monitor the status of the request with
                *             <code>DescribeMultiRegionAccessPointOperation</code>.</p>
                *          <p>The following actions are related to <code>CreateMultiRegionAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            createMultiRegionAccessPoint(args: CreateMultiRegionAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<CreateMultiRegionAccessPointCommandOutput>;
            createMultiRegionAccessPoint(args: CreateMultiRegionAccessPointCommandInput, cb: (err: any, data?: CreateMultiRegionAccessPointCommandOutput) => void): void;
            createMultiRegionAccessPoint(args: CreateMultiRegionAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMultiRegionAccessPointCommandOutput) => void): void;
            /**
                * <p>Deletes the specified access point.</p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to <code>DeleteAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteAccessPoint(args: DeleteAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessPointCommandOutput>;
            deleteAccessPoint(args: DeleteAccessPointCommandInput, cb: (err: any, data?: DeleteAccessPointCommandOutput) => void): void;
            deleteAccessPoint(args: DeleteAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessPointCommandOutput) => void): void;
            /**
                * <p>Deletes the specified Object Lambda Access Point.</p>
                *          <p>The following actions are related to
                *          <code>DeleteAccessPointForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteAccessPointForObjectLambda(args: DeleteAccessPointForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessPointForObjectLambdaCommandOutput>;
            deleteAccessPointForObjectLambda(args: DeleteAccessPointForObjectLambdaCommandInput, cb: (err: any, data?: DeleteAccessPointForObjectLambdaCommandOutput) => void): void;
            deleteAccessPointForObjectLambda(args: DeleteAccessPointForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessPointForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Deletes the access point policy for the specified access point.</p>
                *          <p></p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to <code>DeleteAccessPointPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteAccessPointPolicy(args: DeleteAccessPointPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessPointPolicyCommandOutput>;
            deleteAccessPointPolicy(args: DeleteAccessPointPolicyCommandInput, cb: (err: any, data?: DeleteAccessPointPolicyCommandOutput) => void): void;
            deleteAccessPointPolicy(args: DeleteAccessPointPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessPointPolicyCommandOutput) => void): void;
            /**
                * <p>Removes the resource policy for an Object Lambda Access Point.</p>
                *          <p>The following actions are related to
                *          <code>DeleteAccessPointPolicyForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteAccessPointPolicyForObjectLambda(args: DeleteAccessPointPolicyForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAccessPointPolicyForObjectLambdaCommandOutput>;
            deleteAccessPointPolicyForObjectLambda(args: DeleteAccessPointPolicyForObjectLambdaCommandInput, cb: (err: any, data?: DeleteAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            deleteAccessPointPolicyForObjectLambda(args: DeleteAccessPointPolicyForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and
                *          delete markers) in the bucket must be deleted before the bucket itself can be deleted. For
                *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples">Examples</a> section.</p>
                *          <p class="title">
                *             <b>Related Resources</b>
                *          </p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteBucket(args: DeleteBucketCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBucketCommandOutput>;
            deleteBucket(args: DeleteBucketCommandInput, cb: (err: any, data?: DeleteBucketCommandOutput) => void): void;
            deleteBucket(args: DeleteBucketCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBucketCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action deletes an Amazon S3 on Outposts bucket's lifecycle configuration. To delete
                *             an S3 bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Deletes the lifecycle configuration from the specified Outposts bucket.
                *          Amazon S3 on Outposts removes all the lifecycle configuration rules in the lifecycle subresource
                *          associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer
                *          automatically deletes any objects on the basis of rules contained in the deleted lifecycle
                *          configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p>To use this action, you must have permission to perform the
                *             <code>s3-outposts:DeleteLifecycleConfiguration</code> action. By default, the bucket
                *          owner has this permission and the Outposts bucket owner can grant this permission to
                *          others.</p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
                *
                *          <p>For more information about object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements to Describe Lifecycle Actions</a>.</p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteBucketLifecycleConfiguration(args: DeleteBucketLifecycleConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBucketLifecycleConfigurationCommandOutput>;
            deleteBucketLifecycleConfiguration(args: DeleteBucketLifecycleConfigurationCommandInput, cb: (err: any, data?: DeleteBucketLifecycleConfigurationCommandOutput) => void): void;
            deleteBucketLifecycleConfiguration(args: DeleteBucketLifecycleConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBucketLifecycleConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action deletes an Amazon S3 on Outposts bucket policy. To delete an S3 bucket policy,
                *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html">DeleteBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>This implementation of the DELETE action uses the policy subresource to delete the
                *          policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the
                *          root user of the Amazon Web Services account that owns the bucket, the calling identity must have the
                *             <code>s3-outposts:DeleteBucketPolicy</code> permissions on the specified Outposts bucket
                *          and belong to the bucket owner's account to use this action. For more information, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
                *
                *          <p>If you don't have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403
                *             Access Denied</code> error. If you have the correct permissions, but you're not using an
                *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not
                *             Allowed</code> error. </p>
                *
                *
                *          <important>
                *             <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
                *             always use this action, even if the policy explicitly denies the root user the ability
                *             to perform this action.</p>
                *          </important>
                *
                *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
                *             Policies</a>. </p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>DeleteBucketPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteBucketPolicy(args: DeleteBucketPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBucketPolicyCommandOutput>;
            deleteBucketPolicy(args: DeleteBucketPolicyCommandInput, cb: (err: any, data?: DeleteBucketPolicyCommandOutput) => void): void;
            deleteBucketPolicy(args: DeleteBucketPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBucketPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action deletes an Amazon S3 on Outposts bucket's tags. To delete an S3 bucket tags,
                *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Deletes the tags from the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
                *
                *          <p>To use this action, you must have permission to perform the
                *             <code>PutBucketTagging</code> action. By default, the bucket owner has this permission
                *          and can grant this permission to others. </p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>DeleteBucketTagging</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteBucketTagging(args: DeleteBucketTaggingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteBucketTaggingCommandOutput>;
            deleteBucketTagging(args: DeleteBucketTaggingCommandInput, cb: (err: any, data?: DeleteBucketTaggingCommandOutput) => void): void;
            deleteBucketTagging(args: DeleteBucketTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteBucketTaggingCommandOutput) => void): void;
            /**
                * <p>Removes the entire tag set from the specified S3 Batch Operations job. To use this operation,
                *          you must have permission to perform the <code>s3:DeleteJobTagging</code> action. For more
                *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
                *             access and labeling jobs using tags</a> in the
                *          <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteJobTagging(args: DeleteJobTaggingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteJobTaggingCommandOutput>;
            deleteJobTagging(args: DeleteJobTaggingCommandInput, cb: (err: any, data?: DeleteJobTaggingCommandOutput) => void): void;
            deleteJobTagging(args: DeleteJobTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteJobTaggingCommandOutput) => void): void;
            /**
                * <p>Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point,
                *          only the Multi-Region Access Point itself.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This request is asynchronous, meaning that you might receive a response before the
                *          command has completed. When this request provides a response, it provides a token that you
                *          can use to monitor the status of the request with
                *             <code>DescribeMultiRegionAccessPointOperation</code>.</p>
                *          <p>The following actions are related to <code>DeleteMultiRegionAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deleteMultiRegionAccessPoint(args: DeleteMultiRegionAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<DeleteMultiRegionAccessPointCommandOutput>;
            deleteMultiRegionAccessPoint(args: DeleteMultiRegionAccessPointCommandInput, cb: (err: any, data?: DeleteMultiRegionAccessPointCommandOutput) => void): void;
            deleteMultiRegionAccessPoint(args: DeleteMultiRegionAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteMultiRegionAccessPointCommandOutput) => void): void;
            /**
                * <p>Removes the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For more
                *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
                *             public access</a>.</p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            deletePublicAccessBlock(args: DeletePublicAccessBlockCommandInput, options?: __HttpHandlerOptions): Promise<DeletePublicAccessBlockCommandOutput>;
            deletePublicAccessBlock(args: DeletePublicAccessBlockCommandInput, cb: (err: any, data?: DeletePublicAccessBlockCommandOutput) => void): void;
            deletePublicAccessBlock(args: DeletePublicAccessBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePublicAccessBlockCommandOutput) => void): void;
            /**
                * <p>Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
                *             activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:DeleteStorageLensConfiguration</code> action. For more information, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
                *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            deleteStorageLensConfiguration(args: DeleteStorageLensConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStorageLensConfigurationCommandOutput>;
            deleteStorageLensConfiguration(args: DeleteStorageLensConfigurationCommandInput, cb: (err: any, data?: DeleteStorageLensConfigurationCommandOutput) => void): void;
            deleteStorageLensConfiguration(args: DeleteStorageLensConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStorageLensConfigurationCommandOutput) => void): void;
            /**
                * <p>Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
                *             storage activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:DeleteStorageLensConfigurationTagging</code> action. For more information,
                *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
                *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            deleteStorageLensConfigurationTagging(args: DeleteStorageLensConfigurationTaggingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStorageLensConfigurationTaggingCommandOutput>;
            deleteStorageLensConfigurationTagging(args: DeleteStorageLensConfigurationTaggingCommandInput, cb: (err: any, data?: DeleteStorageLensConfigurationTaggingCommandOutput) => void): void;
            deleteStorageLensConfigurationTagging(args: DeleteStorageLensConfigurationTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStorageLensConfigurationTaggingCommandOutput) => void): void;
            /**
                * <p>Retrieves the configuration parameters and status for a Batch Operations job. For more
                *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            describeJob(args: DescribeJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobCommandOutput>;
            describeJob(args: DescribeJobCommandInput, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            describeJob(args: DescribeJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobCommandOutput) => void): void;
            /**
                * <p>Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information
                *          about managing Multi-Region Access Points and how asynchronous requests work, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            describeMultiRegionAccessPointOperation(args: DescribeMultiRegionAccessPointOperationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeMultiRegionAccessPointOperationCommandOutput>;
            describeMultiRegionAccessPointOperation(args: DescribeMultiRegionAccessPointOperationCommandInput, cb: (err: any, data?: DescribeMultiRegionAccessPointOperationCommandOutput) => void): void;
            describeMultiRegionAccessPointOperation(args: DescribeMultiRegionAccessPointOperationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeMultiRegionAccessPointOperationCommandOutput) => void): void;
            /**
                * <p>Returns configuration information about the specified access point.</p>
                *          <p></p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to <code>GetAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getAccessPoint(args: GetAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointCommandOutput>;
            getAccessPoint(args: GetAccessPointCommandInput, cb: (err: any, data?: GetAccessPointCommandOutput) => void): void;
            getAccessPoint(args: GetAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointCommandOutput) => void): void;
            /**
                * <p>Returns configuration for an Object Lambda Access Point.</p>
                *          <p>The following actions are related to
                *             <code>GetAccessPointConfigurationForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html">PutAccessPointConfigurationForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getAccessPointConfigurationForObjectLambda(args: GetAccessPointConfigurationForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointConfigurationForObjectLambdaCommandOutput>;
            getAccessPointConfigurationForObjectLambda(args: GetAccessPointConfigurationForObjectLambdaCommandInput, cb: (err: any, data?: GetAccessPointConfigurationForObjectLambdaCommandOutput) => void): void;
            getAccessPointConfigurationForObjectLambda(args: GetAccessPointConfigurationForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointConfigurationForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Returns configuration information about the specified Object Lambda Access Point</p>
                *          <p>The following actions are related to <code>GetAccessPointForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getAccessPointForObjectLambda(args: GetAccessPointForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointForObjectLambdaCommandOutput>;
            getAccessPointForObjectLambda(args: GetAccessPointForObjectLambdaCommandInput, cb: (err: any, data?: GetAccessPointForObjectLambdaCommandOutput) => void): void;
            getAccessPointForObjectLambda(args: GetAccessPointForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Returns the access point policy associated with the specified access point.</p>
                *          <p>The following actions are related to <code>GetAccessPointPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getAccessPointPolicy(args: GetAccessPointPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointPolicyCommandOutput>;
            getAccessPointPolicy(args: GetAccessPointPolicyCommandInput, cb: (err: any, data?: GetAccessPointPolicyCommandOutput) => void): void;
            getAccessPointPolicy(args: GetAccessPointPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointPolicyCommandOutput) => void): void;
            /**
                * <p>Returns the resource policy for an Object Lambda Access Point.</p>
                *          <p>The following actions are related to
                *          <code>GetAccessPointPolicyForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getAccessPointPolicyForObjectLambda(args: GetAccessPointPolicyForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointPolicyForObjectLambdaCommandOutput>;
            getAccessPointPolicyForObjectLambda(args: GetAccessPointPolicyForObjectLambdaCommandInput, cb: (err: any, data?: GetAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            getAccessPointPolicyForObjectLambda(args: GetAccessPointPolicyForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Indicates whether the specified access point currently has a policy that allows public access.
                *          For more information about public access through access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3
                *             access points</a> in the <i>Amazon S3 User Guide</i>.</p>
                */
            getAccessPointPolicyStatus(args: GetAccessPointPolicyStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointPolicyStatusCommandOutput>;
            getAccessPointPolicyStatus(args: GetAccessPointPolicyStatusCommandInput, cb: (err: any, data?: GetAccessPointPolicyStatusCommandOutput) => void): void;
            getAccessPointPolicyStatus(args: GetAccessPointPolicyStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointPolicyStatusCommandOutput) => void): void;
            /**
                * <p>Returns the status of the resource policy associated with an Object Lambda Access Point.</p>
                */
            getAccessPointPolicyStatusForObjectLambda(args: GetAccessPointPolicyStatusForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<GetAccessPointPolicyStatusForObjectLambdaCommandOutput>;
            getAccessPointPolicyStatusForObjectLambda(args: GetAccessPointPolicyStatusForObjectLambdaCommandInput, cb: (err: any, data?: GetAccessPointPolicyStatusForObjectLambdaCommandOutput) => void): void;
            getAccessPointPolicyStatusForObjectLambda(args: GetAccessPointPolicyStatusForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAccessPointPolicyStatusForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Gets an Amazon S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Using Amazon S3 on Outposts</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
                *          Outposts bucket, the calling identity must have the <code>s3-outposts:GetBucket</code>
                *          permissions on the specified Outposts bucket and belong to the Outposts bucket owner's
                *          account in order to use this action. Only users from Outposts bucket owner account with
                *          the right permissions can perform actions on an Outposts bucket. </p>
                *          <p> If you don't have <code>s3-outposts:GetBucket</code> permissions or you're not using an
                *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>403 Access
                *             Denied</code> error.</p>
                *          <p>The following actions are related to <code>GetBucket</code> for Amazon S3 on Outposts:</p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples">Examples</a> section.</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getBucket(args: GetBucketCommandInput, options?: __HttpHandlerOptions): Promise<GetBucketCommandOutput>;
            getBucket(args: GetBucketCommandInput, cb: (err: any, data?: GetBucketCommandOutput) => void): void;
            getBucket(args: GetBucketCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBucketCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action gets an Amazon S3 on Outposts bucket's lifecycle configuration. To get an S3
                *             bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.
                *          </p>
                *          </note>
                *          <p>Returns the lifecycle configuration information set on the Outposts bucket. For more
                *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> and for
                *          information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html"> Object Lifecycle
                *             Management</a> in <i>Amazon S3 User Guide</i>.</p>
                *
                *          <p>To use this action, you must have permission to perform the
                *             <code>s3-outposts:GetLifecycleConfiguration</code> action. The Outposts bucket owner
                *          has this permission, by default. The bucket owner can grant this permission to others. For
                *          more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
                *             Access Permissions to Your Amazon S3 Resources</a>.</p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
                *
                *          <p>
                *             <code>GetBucketLifecycleConfiguration</code> has the following special error:</p>
                *          <ul>
                *             <li>
                *                <p>Error code: <code>NoSuchLifecycleConfiguration</code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: The lifecycle configuration does not exist.</p>
                *                   </li>
                *                   <li>
                *                      <p>HTTP Status Code: 404 Not Found</p>
                *                   </li>
                *                   <li>
                *                      <p>SOAP Fault Code Prefix: Client</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                *          <p>The following actions are related to
                *          <code>GetBucketLifecycleConfiguration</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getBucketLifecycleConfiguration(args: GetBucketLifecycleConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetBucketLifecycleConfigurationCommandOutput>;
            getBucketLifecycleConfiguration(args: GetBucketLifecycleConfigurationCommandInput, cb: (err: any, data?: GetBucketLifecycleConfigurationCommandOutput) => void): void;
            getBucketLifecycleConfiguration(args: GetBucketLifecycleConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBucketLifecycleConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for
                *             an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html">GetBucketPolicy</a> in the
                *                <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Returns the policy of a specified Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
                *          bucket, the calling identity must have the <code>GetBucketPolicy</code> permissions on the
                *          specified bucket and belong to the bucket owner's account in order to use this
                *          action.</p>
                *
                *          <p>Only users from Outposts bucket owner account with the right permissions can perform
                *          actions on an Outposts bucket. If you don't have <code>s3-outposts:GetBucketPolicy</code>
                *          permissions or you're not using an identity that belongs to the bucket owner's account,
                *          Amazon S3 returns a <code>403 Access Denied</code> error.</p>
                *
                *          <important>
                *             <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
                *             always use this action, even if the policy explicitly denies the root user the ability
                *             to perform this action.</p>
                *          </important>
                *
                *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
                *             Policies</a>.</p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>GetBucketPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getBucketPolicy(args: GetBucketPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetBucketPolicyCommandOutput>;
            getBucketPolicy(args: GetBucketPolicyCommandInput, cb: (err: any, data?: GetBucketPolicyCommandOutput) => void): void;
            getBucketPolicy(args: GetBucketPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBucketPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action gets an Amazon S3 on Outposts bucket's tags. To get an S3 bucket tags, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Returns the tag set associated with the Outposts bucket. For more information, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>To use this action, you must have permission to perform the
                *             <code>GetBucketTagging</code> action. By default, the bucket owner has this permission
                *          and can grant this permission to others.</p>
                *
                *          <p>
                *             <code>GetBucketTagging</code> has the following special error:</p>
                *          <ul>
                *             <li>
                *                <p>Error code: <code>NoSuchTagSetError</code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: There is no tag set associated with the bucket.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>GetBucketTagging</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getBucketTagging(args: GetBucketTaggingCommandInput, options?: __HttpHandlerOptions): Promise<GetBucketTaggingCommandOutput>;
            getBucketTagging(args: GetBucketTaggingCommandInput, cb: (err: any, data?: GetBucketTaggingCommandOutput) => void): void;
            getBucketTagging(args: GetBucketTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBucketTaggingCommandOutput) => void): void;
            /**
                * <p>Returns the tags on an S3 Batch Operations job. To use this operation, you must have
                *          permission to perform the <code>s3:GetJobTagging</code> action. For more information, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
                *             access and labeling jobs using tags</a> in the
                *          <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getJobTagging(args: GetJobTaggingCommandInput, options?: __HttpHandlerOptions): Promise<GetJobTaggingCommandOutput>;
            getJobTagging(args: GetJobTaggingCommandInput, cb: (err: any, data?: GetJobTaggingCommandOutput) => void): void;
            getJobTagging(args: GetJobTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetJobTaggingCommandOutput) => void): void;
            /**
                * <p>Returns configuration information about the specified Multi-Region Access Point.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getMultiRegionAccessPoint(args: GetMultiRegionAccessPointCommandInput, options?: __HttpHandlerOptions): Promise<GetMultiRegionAccessPointCommandOutput>;
            getMultiRegionAccessPoint(args: GetMultiRegionAccessPointCommandInput, cb: (err: any, data?: GetMultiRegionAccessPointCommandOutput) => void): void;
            getMultiRegionAccessPoint(args: GetMultiRegionAccessPointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMultiRegionAccessPointCommandOutput) => void): void;
            /**
                * <p>Returns the access control policy of the specified Multi-Region Access Point.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to
                *          <code>GetMultiRegionAccessPointPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getMultiRegionAccessPointPolicy(args: GetMultiRegionAccessPointPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetMultiRegionAccessPointPolicyCommandOutput>;
            getMultiRegionAccessPointPolicy(args: GetMultiRegionAccessPointPolicyCommandInput, cb: (err: any, data?: GetMultiRegionAccessPointPolicyCommandOutput) => void): void;
            getMultiRegionAccessPointPolicy(args: GetMultiRegionAccessPointPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMultiRegionAccessPointPolicyCommandOutput) => void): void;
            /**
                * <p>Indicates whether the specified Multi-Region Access Point has an access control policy that allows public
                *          access.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to
                *          <code>GetMultiRegionAccessPointPolicyStatus</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getMultiRegionAccessPointPolicyStatus(args: GetMultiRegionAccessPointPolicyStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetMultiRegionAccessPointPolicyStatusCommandOutput>;
            getMultiRegionAccessPointPolicyStatus(args: GetMultiRegionAccessPointPolicyStatusCommandInput, cb: (err: any, data?: GetMultiRegionAccessPointPolicyStatusCommandOutput) => void): void;
            getMultiRegionAccessPointPolicyStatus(args: GetMultiRegionAccessPointPolicyStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMultiRegionAccessPointPolicyStatusCommandOutput) => void): void;
            /**
                * <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For
                *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
                *             public access</a>.</p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            getPublicAccessBlock(args: GetPublicAccessBlockCommandInput, options?: __HttpHandlerOptions): Promise<GetPublicAccessBlockCommandOutput>;
            getPublicAccessBlock(args: GetPublicAccessBlockCommandInput, cb: (err: any, data?: GetPublicAccessBlockCommandOutput) => void): void;
            getPublicAccessBlock(args: GetPublicAccessBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPublicAccessBlockCommandOutput) => void): void;
            /**
                * <p>Gets the Amazon S3 Storage Lens configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
                *             activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:GetStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the
                *                <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            getStorageLensConfiguration(args: GetStorageLensConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetStorageLensConfigurationCommandOutput>;
            getStorageLensConfiguration(args: GetStorageLensConfigurationCommandInput, cb: (err: any, data?: GetStorageLensConfigurationCommandOutput) => void): void;
            getStorageLensConfiguration(args: GetStorageLensConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetStorageLensConfigurationCommandOutput) => void): void;
            /**
                * <p>Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
                *             storage activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:GetStorageLensConfigurationTagging</code> action. For more information, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
                *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            getStorageLensConfigurationTagging(args: GetStorageLensConfigurationTaggingCommandInput, options?: __HttpHandlerOptions): Promise<GetStorageLensConfigurationTaggingCommandOutput>;
            getStorageLensConfigurationTagging(args: GetStorageLensConfigurationTaggingCommandInput, cb: (err: any, data?: GetStorageLensConfigurationTaggingCommandOutput) => void): void;
            getStorageLensConfigurationTagging(args: GetStorageLensConfigurationTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetStorageLensConfigurationTaggingCommandOutput) => void): void;
            /**
                * <p>Returns a list of the access points currently associated with the specified bucket. You can
                *          retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or
                *          the number specified in <code>maxResults</code>, whichever is less), the response will
                *          include a continuation token that you can use to list the additional access points.</p>
                *          <p></p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to <code>ListAccessPoints</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listAccessPoints(args: ListAccessPointsCommandInput, options?: __HttpHandlerOptions): Promise<ListAccessPointsCommandOutput>;
            listAccessPoints(args: ListAccessPointsCommandInput, cb: (err: any, data?: ListAccessPointsCommandOutput) => void): void;
            listAccessPoints(args: ListAccessPointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccessPointsCommandOutput) => void): void;
            /**
                * <p>Returns some or all (up to 1,000) access points associated with the Object Lambda Access Point per call. If there
                *          are more access points than what can be returned in one call, the response will include a
                *          continuation token that you can use to list the additional access points.</p>
                *          <p>The following actions are related to
                *          <code>ListAccessPointsForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listAccessPointsForObjectLambda(args: ListAccessPointsForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<ListAccessPointsForObjectLambdaCommandOutput>;
            listAccessPointsForObjectLambda(args: ListAccessPointsForObjectLambdaCommandInput, cb: (err: any, data?: ListAccessPointsForObjectLambdaCommandOutput) => void): void;
            listAccessPointsForObjectLambda(args: ListAccessPointsForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccessPointsForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Lists current S3 Batch Operations jobs and jobs that have ended within the last 30 days for
                *          the Amazon Web Services account making the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p>Related actions include:</p>
                *          <p></p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listJobs(args: ListJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListJobsCommandOutput>;
            listJobs(args: ListJobsCommandInput, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            listJobs(args: ListJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListJobsCommandOutput) => void): void;
            /**
                * <p>Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account.
                *          Each call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be
                *          associated with a single account.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to <code>ListMultiRegionAccessPoint</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            listMultiRegionAccessPoints(args: ListMultiRegionAccessPointsCommandInput, options?: __HttpHandlerOptions): Promise<ListMultiRegionAccessPointsCommandOutput>;
            listMultiRegionAccessPoints(args: ListMultiRegionAccessPointsCommandInput, cb: (err: any, data?: ListMultiRegionAccessPointsCommandOutput) => void): void;
            listMultiRegionAccessPoints(args: ListMultiRegionAccessPointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMultiRegionAccessPointsCommandOutput) => void): void;
            /**
                * <p>Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated
                *          sender of the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
                *          endpoint hostname prefix and <code>x-amz-outpost-id</code> in your request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples">Examples</a> section.</p>
                */
            listRegionalBuckets(args: ListRegionalBucketsCommandInput, options?: __HttpHandlerOptions): Promise<ListRegionalBucketsCommandOutput>;
            listRegionalBuckets(args: ListRegionalBucketsCommandInput, cb: (err: any, data?: ListRegionalBucketsCommandOutput) => void): void;
            listRegionalBuckets(args: ListRegionalBucketsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRegionalBucketsCommandOutput) => void): void;
            /**
                * <p>Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see
                *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
                *             storage activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:ListStorageLensConfigurations</code> action. For more information, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
                *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            listStorageLensConfigurations(args: ListStorageLensConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListStorageLensConfigurationsCommandOutput>;
            listStorageLensConfigurations(args: ListStorageLensConfigurationsCommandInput, cb: (err: any, data?: ListStorageLensConfigurationsCommandOutput) => void): void;
            listStorageLensConfigurations(args: ListStorageLensConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStorageLensConfigurationsCommandOutput) => void): void;
            /**
                * <p>Replaces configuration for an Object Lambda Access Point.</p>
                *          <p>The following actions are related to
                *             <code>PutAccessPointConfigurationForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html">GetAccessPointConfigurationForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putAccessPointConfigurationForObjectLambda(args: PutAccessPointConfigurationForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<PutAccessPointConfigurationForObjectLambdaCommandOutput>;
            putAccessPointConfigurationForObjectLambda(args: PutAccessPointConfigurationForObjectLambdaCommandInput, cb: (err: any, data?: PutAccessPointConfigurationForObjectLambdaCommandOutput) => void): void;
            putAccessPointConfigurationForObjectLambda(args: PutAccessPointConfigurationForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccessPointConfigurationForObjectLambdaCommandOutput) => void): void;
            /**
                * <p>Associates an access policy with the specified access point. Each access point can have only one policy,
                *          so a request made to this API replaces any existing policy associated with the specified
                *          access point.</p>
                *          <p></p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to <code>PutAccessPointPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putAccessPointPolicy(args: PutAccessPointPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutAccessPointPolicyCommandOutput>;
            putAccessPointPolicy(args: PutAccessPointPolicyCommandInput, cb: (err: any, data?: PutAccessPointPolicyCommandOutput) => void): void;
            putAccessPointPolicy(args: PutAccessPointPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccessPointPolicyCommandOutput) => void): void;
            /**
                * <p>Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli">Creating Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to
                *          <code>PutAccessPointPolicyForObjectLambda</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putAccessPointPolicyForObjectLambda(args: PutAccessPointPolicyForObjectLambdaCommandInput, options?: __HttpHandlerOptions): Promise<PutAccessPointPolicyForObjectLambdaCommandOutput>;
            putAccessPointPolicyForObjectLambda(args: PutAccessPointPolicyForObjectLambdaCommandInput, cb: (err: any, data?: PutAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            putAccessPointPolicyForObjectLambda(args: PutAccessPointPolicyForObjectLambdaCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAccessPointPolicyForObjectLambdaCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a
                *             lifecycle configuration to an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.
                *          </p>
                *          </note>
                *          <p>Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an
                *          existing lifecycle configuration. Outposts buckets only support lifecycle configurations
                *          that delete/expire objects after a certain period of time and abort incomplete multipart
                *          uploads.</p>
                *          <p></p>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
                *          <p>The following actions are related to
                *          <code>PutBucketLifecycleConfiguration</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putBucketLifecycleConfiguration(args: PutBucketLifecycleConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutBucketLifecycleConfigurationCommandOutput>;
            putBucketLifecycleConfiguration(args: PutBucketLifecycleConfigurationCommandInput, cb: (err: any, data?: PutBucketLifecycleConfigurationCommandOutput) => void): void;
            putBucketLifecycleConfiguration(args: PutBucketLifecycleConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutBucketLifecycleConfigurationCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an
                *             S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html">PutBucketPolicy</a> in the
                *                <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
                *          Outposts bucket, the calling identity must have the <code>PutBucketPolicy</code>
                *          permissions on the specified Outposts bucket and belong to the bucket owner's account in
                *          order to use this action.</p>
                *
                *          <p>If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403
                *             Access Denied</code> error. If you have the correct permissions, but you're not using an
                *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not
                *             Allowed</code> error.</p>
                *
                *          <important>
                *             <p> As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
                *             always use this action, even if the policy explicitly denies the root user the ability
                *             to perform this action. </p>
                *          </important>
                *
                *
                *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
                *             Policies</a>.</p>
                *
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>PutBucketPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putBucketPolicy(args: PutBucketPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutBucketPolicyCommandOutput>;
            putBucketPolicy(args: PutBucketPolicyCommandInput, cb: (err: any, data?: PutBucketPolicyCommandOutput) => void): void;
            putBucketPolicy(args: PutBucketPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutBucketPolicyCommandOutput) => void): void;
            /**
                * <note>
                *             <p>This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
                *          </note>
                *          <p>Sets the tags for an S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
                *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this,
                *          sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost
                *          of combined resources, organize your billing information according to resources with the
                *          same tag key values. For example, you can tag several resources with a specific application
                *          name, and then organize your billing information to see the total cost of that application
                *          across several services. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost allocation and
                *             tagging</a>.</p>
                *
                *          <note>
                *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new
                *             value overwrites the old value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html"> Using cost allocation in Amazon S3
                *                bucket tags</a>.</p>
                *          </note>
                *          <p>To use this action, you must have permissions to perform the
                *             <code>s3-outposts:PutBucketTagging</code> action. The Outposts bucket owner has this
                *          permission by default and can grant this permission to others. For more information about
                *          permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources"> Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
                *             access permissions to your Amazon S3 resources</a>.</p>
                *
                *          <p>
                *             <code>PutBucketTagging</code> has the following special errors:</p>
                *          <ul>
                *             <li>
                *                <p>Error code: <code>InvalidTagError</code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: The tag provided was not a valid tag. This error can occur if
                *                      the tag did not pass input validation. For information about tag restrictions,
                *                      see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">
                *                         User-Defined Tag Restrictions</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html">
                *                         Amazon Web Services-Generated Cost Allocation Tag Restrictions</a>.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *             <li>
                *                <p>Error code: <code>MalformedXMLError</code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: The XML provided does not match the schema.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *             <li>
                *                <p>Error code: <code>OperationAbortedError </code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: A conflicting conditional action is currently in progress
                *                      against this resource. Try again.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *             <li>
                *                <p>Error code: <code>InternalError</code>
                *                </p>
                *                <ul>
                *                   <li>
                *                      <p>Description: The service was unable to apply the provided tag to the
                *                      bucket.</p>
                *                   </li>
                *                </ul>
                *             </li>
                *          </ul>
                *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples">Examples</a> section.</p>
                *
                *          <p>The following actions are related to <code>PutBucketTagging</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putBucketTagging(args: PutBucketTaggingCommandInput, options?: __HttpHandlerOptions): Promise<PutBucketTaggingCommandOutput>;
            putBucketTagging(args: PutBucketTaggingCommandInput, cb: (err: any, data?: PutBucketTaggingCommandOutput) => void): void;
            putBucketTagging(args: PutBucketTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutBucketTaggingCommandOutput) => void): void;
            /**
                * <p>Sets the supplied tag-set on an S3 Batch Operations job.</p>
                *          <p>A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending
                *          a PUT request against the tagging subresource that is associated with the job. To modify
                *          the existing tag set, you can either replace the existing tag set entirely, or make changes
                *          within the existing tag set by retrieving the existing tag set using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>, modify that tag set, and use this action to replace the tag set
                *          with the one you modified. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
                *             access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>. </p>
                *          <p></p>
                *          <note>
                *             <ul>
                *                <li>
                *                   <p>If you send this request with an empty tag set, Amazon S3 deletes the existing
                *                   tag set on the Batch Operations job. If you use this method, you are charged for a Tier
                *                   1 Request (PUT). For more information, see <a href="http://aws.amazon.com/s3/pricing/">Amazon S3 pricing</a>.</p>
                *                </li>
                *                <li>
                *                   <p>For deleting existing tags for your Batch Operations job, a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a> request is preferred because it achieves the same
                *                   result without incurring charges.</p>
                *                </li>
                *                <li>
                *                   <p>A few things to consider about using tags:</p>
                *                   <ul>
                *                      <li>
                *                         <p>Amazon S3 limits the maximum number of tags to 50 tags per job.</p>
                *                      </li>
                *                      <li>
                *                         <p>You can associate up to 50 tags with a job as long as they have unique
                *                         tag keys.</p>
                *                      </li>
                *                      <li>
                *                         <p>A tag key can be up to 128 Unicode characters in length, and tag values
                *                         can be up to 256 Unicode characters in length.</p>
                *                      </li>
                *                      <li>
                *                         <p>The key and values are case sensitive.</p>
                *                      </li>
                *                      <li>
                *                         <p>For tagging-related restrictions related to characters and encodings, see
                *                            <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>
                *                      </li>
                *                   </ul>
                *                </li>
                *             </ul>
                *          </note>
                *          <p></p>
                *          <p>To use this action, you must have permission to perform the
                *             <code>s3:PutJobTagging</code> action.</p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putJobTagging(args: PutJobTaggingCommandInput, options?: __HttpHandlerOptions): Promise<PutJobTaggingCommandOutput>;
            putJobTagging(args: PutJobTaggingCommandInput, cb: (err: any, data?: PutJobTaggingCommandOutput) => void): void;
            putJobTagging(args: PutJobTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutJobTaggingCommandOutput) => void): void;
            /**
                * <p>Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only
                *          one policy, so a request made to this action replaces any existing policy that is
                *          associated with the specified Multi-Region Access Point.</p>
                *          <p>This action will always be routed to the US West (Oregon) Region. For more information
                *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
                *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>The following actions are related to
                *          <code>PutMultiRegionAccessPointPolicy</code>:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putMultiRegionAccessPointPolicy(args: PutMultiRegionAccessPointPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutMultiRegionAccessPointPolicyCommandOutput>;
            putMultiRegionAccessPointPolicy(args: PutMultiRegionAccessPointPolicyCommandInput, cb: (err: any, data?: PutMultiRegionAccessPointPolicyCommandOutput) => void): void;
            putMultiRegionAccessPointPolicy(args: PutMultiRegionAccessPointPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutMultiRegionAccessPointPolicyCommandOutput) => void): void;
            /**
                * <p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an
                *          Amazon Web Services account. For this operation, users must have the
                *             <code>s3:PutBucketPublicAccessBlock</code> permission. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">
                *             Using Amazon S3 block public access</a>.</p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            putPublicAccessBlock(args: PutPublicAccessBlockCommandInput, options?: __HttpHandlerOptions): Promise<PutPublicAccessBlockCommandOutput>;
            putPublicAccessBlock(args: PutPublicAccessBlockCommandInput, cb: (err: any, data?: PutPublicAccessBlockCommandOutput) => void): void;
            putPublicAccessBlock(args: PutPublicAccessBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutPublicAccessBlockCommandOutput) => void): void;
            /**
                * <p>Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Working with
                *             Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:PutStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the
                *                <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            putStorageLensConfiguration(args: PutStorageLensConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutStorageLensConfigurationCommandOutput>;
            putStorageLensConfiguration(args: PutStorageLensConfigurationCommandInput, cb: (err: any, data?: PutStorageLensConfigurationCommandOutput) => void): void;
            putStorageLensConfiguration(args: PutStorageLensConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutStorageLensConfigurationCommandOutput) => void): void;
            /**
                * <p>Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information
                *          about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                *          <note>
                *             <p>To use this action, you must have permission to perform the
                *                <code>s3:PutStorageLensConfigurationTagging</code> action. For more information, see
                *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
                *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          </note>
                */
            putStorageLensConfigurationTagging(args: PutStorageLensConfigurationTaggingCommandInput, options?: __HttpHandlerOptions): Promise<PutStorageLensConfigurationTaggingCommandOutput>;
            putStorageLensConfigurationTagging(args: PutStorageLensConfigurationTaggingCommandInput, cb: (err: any, data?: PutStorageLensConfigurationTaggingCommandOutput) => void): void;
            putStorageLensConfigurationTagging(args: PutStorageLensConfigurationTaggingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutStorageLensConfigurationTaggingCommandOutput) => void): void;
            /**
                * <p>Updates an existing S3 Batch Operations job's priority. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            updateJobPriority(args: UpdateJobPriorityCommandInput, options?: __HttpHandlerOptions): Promise<UpdateJobPriorityCommandOutput>;
            updateJobPriority(args: UpdateJobPriorityCommandInput, cb: (err: any, data?: UpdateJobPriorityCommandOutput) => void): void;
            updateJobPriority(args: UpdateJobPriorityCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateJobPriorityCommandOutput) => void): void;
            /**
                * <p>Updates the status for the specified job. Use this action to confirm that you want to
                *          run a job or to cancel an existing job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p></p>
                *          <p>Related actions include:</p>
                *          <ul>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
                *                </p>
                *             </li>
                *             <li>
                *                <p>
                *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
                *                </p>
                *             </li>
                *          </ul>
                */
            updateJobStatus(args: UpdateJobStatusCommandInput, options?: __HttpHandlerOptions): Promise<UpdateJobStatusCommandOutput>;
            updateJobStatus(args: UpdateJobStatusCommandInput, cb: (err: any, data?: UpdateJobStatusCommandOutput) => void): void;
            updateJobStatus(args: UpdateJobStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateJobStatusCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAccessPointRequest, CreateAccessPointResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface CreateAccessPointCommandInput extends CreateAccessPointRequest {
    }
    export interface CreateAccessPointCommandOutput extends CreateAccessPointResult, __MetadataBearer {
    }
    /**
        * <p>Creates an access point and associates it with the specified bucket. For more information, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing
        *             Data Access with Amazon S3 Access Points</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <note>
        *             <p>S3 on Outposts only supports VPC-style access points. </p>
        *             <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Accessing Amazon S3 on Outposts using
        *                virtual private cloud (VPC) only access points</a> in the
        *                <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples">Examples</a> section.</p>
        *          <p></p>
        *          <p>The following actions are related to <code>CreateAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, CreateAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, CreateAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new CreateAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAccessPointCommandInput} for command's `input` shape.
        * @see {@link CreateAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class CreateAccessPointCommand extends $Command<CreateAccessPointCommandInput, CreateAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: CreateAccessPointCommandInput;
            constructor(input: CreateAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAccessPointCommandInput, CreateAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAccessPointForObjectLambdaRequest, CreateAccessPointForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface CreateAccessPointForObjectLambdaCommandInput extends CreateAccessPointForObjectLambdaRequest {
    }
    export interface CreateAccessPointForObjectLambdaCommandOutput extends CreateAccessPointForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Creates an Object Lambda Access Point. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming objects with
        *             Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to
        *          <code>CreateAccessPointForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, CreateAccessPointForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, CreateAccessPointForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new CreateAccessPointForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAccessPointForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link CreateAccessPointForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class CreateAccessPointForObjectLambdaCommand extends $Command<CreateAccessPointForObjectLambdaCommandInput, CreateAccessPointForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: CreateAccessPointForObjectLambdaCommandInput;
            constructor(input: CreateAccessPointForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAccessPointForObjectLambdaCommandInput, CreateAccessPointForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateBucketCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateBucketRequest, CreateBucketResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface CreateBucketCommandInput extends CreateBucketRequest {
    }
    export interface CreateBucketCommandOutput extends CreateBucketResult, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">Create
        *                Bucket</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To
        *          create an Outposts bucket, you must have S3 on Outposts. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
        *          <p>Not every string is an acceptable bucket name. For information on bucket naming
        *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules">Working with
        *             Amazon S3 Buckets</a>.</p>
        *          <p>S3 on Outposts buckets support:</p>
        *          <ul>
        *             <li>
        *                <p>Tags</p>
        *             </li>
        *             <li>
        *                <p>LifecycleConfigurations for deleting expired objects</p>
        *             </li>
        *          </ul>
        *          <p>For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html">
        *             Amazon S3 on Outposts Restrictions and Limitations</a>.</p>
        *          <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
        *          endpoint hostname prefix and <code>x-amz-outpost-id</code> in your API request, see the
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>CreateBucket</code> for
        *          Amazon S3 on Outposts:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, CreateBucketCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, CreateBucketCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new CreateBucketCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateBucketCommandInput} for command's `input` shape.
        * @see {@link CreateBucketCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class CreateBucketCommand extends $Command<CreateBucketCommandInput, CreateBucketCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: CreateBucketCommandInput;
            constructor(input: CreateBucketCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateBucketCommandInput, CreateBucketCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateJobRequest, CreateJobResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface CreateJobCommandInput extends CreateJobRequest {
    }
    export interface CreateJobCommandOutput extends CreateJobResult, __MetadataBearer {
    }
    /**
        * <p>You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects.
        *          Batch Operations can run a single action on lists of Amazon S3 objects that you specify. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>This action creates a S3 Batch Operations job.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html">JobOperation</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, CreateJobCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, CreateJobCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new CreateJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateJobCommandInput} for command's `input` shape.
        * @see {@link CreateJobCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class CreateJobCommand extends $Command<CreateJobCommandInput, CreateJobCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: CreateJobCommandInput;
            constructor(input: CreateJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateJobCommandInput, CreateJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateMultiRegionAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateMultiRegionAccessPointRequest, CreateMultiRegionAccessPointResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface CreateMultiRegionAccessPointCommandInput extends CreateMultiRegionAccessPointRequest {
    }
    export interface CreateMultiRegionAccessPointCommandOutput extends CreateMultiRegionAccessPointResult, __MetadataBearer {
    }
    /**
        * <p>Creates a Multi-Region Access Point and associates it with the specified buckets. For more information
        *          about creating Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html">Creating
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>This request is asynchronous, meaning that you might receive a response before the
        *          command has completed. When this request provides a response, it provides a token that you
        *          can use to monitor the status of the request with
        *             <code>DescribeMultiRegionAccessPointOperation</code>.</p>
        *          <p>The following actions are related to <code>CreateMultiRegionAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, CreateMultiRegionAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, CreateMultiRegionAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new CreateMultiRegionAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateMultiRegionAccessPointCommandInput} for command's `input` shape.
        * @see {@link CreateMultiRegionAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class CreateMultiRegionAccessPointCommand extends $Command<CreateMultiRegionAccessPointCommandInput, CreateMultiRegionAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: CreateMultiRegionAccessPointCommandInput;
            constructor(input: CreateMultiRegionAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMultiRegionAccessPointCommandInput, CreateMultiRegionAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAccessPointRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteAccessPointCommandInput extends DeleteAccessPointRequest {
    }
    export interface DeleteAccessPointCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified access point.</p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to <code>DeleteAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessPointCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteAccessPointCommand extends $Command<DeleteAccessPointCommandInput, DeleteAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteAccessPointCommandInput;
            constructor(input: DeleteAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessPointCommandInput, DeleteAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAccessPointForObjectLambdaRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteAccessPointForObjectLambdaCommandInput extends DeleteAccessPointForObjectLambdaRequest {
    }
    export interface DeleteAccessPointForObjectLambdaCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the specified Object Lambda Access Point.</p>
        *          <p>The following actions are related to
        *          <code>DeleteAccessPointForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteAccessPointForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteAccessPointForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteAccessPointForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessPointForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessPointForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteAccessPointForObjectLambdaCommand extends $Command<DeleteAccessPointForObjectLambdaCommandInput, DeleteAccessPointForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteAccessPointForObjectLambdaCommandInput;
            constructor(input: DeleteAccessPointForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessPointForObjectLambdaCommandInput, DeleteAccessPointForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAccessPointPolicyRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteAccessPointPolicyCommandInput extends DeleteAccessPointPolicyRequest {
    }
    export interface DeleteAccessPointPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the access point policy for the specified access point.</p>
        *          <p></p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to <code>DeleteAccessPointPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteAccessPointPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteAccessPointPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteAccessPointPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessPointPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessPointPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteAccessPointPolicyCommand extends $Command<DeleteAccessPointPolicyCommandInput, DeleteAccessPointPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteAccessPointPolicyCommandInput;
            constructor(input: DeleteAccessPointPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessPointPolicyCommandInput, DeleteAccessPointPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAccessPointPolicyForObjectLambdaRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteAccessPointPolicyForObjectLambdaCommandInput extends DeleteAccessPointPolicyForObjectLambdaRequest {
    }
    export interface DeleteAccessPointPolicyForObjectLambdaCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the resource policy for an Object Lambda Access Point.</p>
        *          <p>The following actions are related to
        *          <code>DeleteAccessPointPolicyForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteAccessPointPolicyForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteAccessPointPolicyForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteAccessPointPolicyForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAccessPointPolicyForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link DeleteAccessPointPolicyForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteAccessPointPolicyForObjectLambdaCommand extends $Command<DeleteAccessPointPolicyForObjectLambdaCommandInput, DeleteAccessPointPolicyForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteAccessPointPolicyForObjectLambdaCommandInput;
            constructor(input: DeleteAccessPointPolicyForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAccessPointPolicyForObjectLambdaCommandInput, DeleteAccessPointPolicyForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteBucketRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteBucketCommandInput extends DeleteBucketRequest {
    }
    export interface DeleteBucketCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and
        *          delete markers) in the bucket must be deleted before the bucket itself can be deleted. For
        *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples">Examples</a> section.</p>
        *          <p class="title">
        *             <b>Related Resources</b>
        *          </p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteBucketCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteBucketCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteBucketCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBucketCommandInput} for command's `input` shape.
        * @see {@link DeleteBucketCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteBucketCommand extends $Command<DeleteBucketCommandInput, DeleteBucketCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteBucketCommandInput;
            constructor(input: DeleteBucketCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBucketCommandInput, DeleteBucketCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketLifecycleConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteBucketLifecycleConfigurationRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteBucketLifecycleConfigurationCommandInput extends DeleteBucketLifecycleConfigurationRequest {
    }
    export interface DeleteBucketLifecycleConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action deletes an Amazon S3 on Outposts bucket's lifecycle configuration. To delete
        *             an S3 bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Deletes the lifecycle configuration from the specified Outposts bucket.
        *          Amazon S3 on Outposts removes all the lifecycle configuration rules in the lifecycle subresource
        *          associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer
        *          automatically deletes any objects on the basis of rules contained in the deleted lifecycle
        *          configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p>To use this action, you must have permission to perform the
        *             <code>s3-outposts:DeleteLifecycleConfiguration</code> action. By default, the bucket
        *          owner has this permission and the Outposts bucket owner can grant this permission to
        *          others.</p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
        *
        *          <p>For more information about object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements to Describe Lifecycle Actions</a>.</p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteBucketLifecycleConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteBucketLifecycleConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteBucketLifecycleConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBucketLifecycleConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteBucketLifecycleConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteBucketLifecycleConfigurationCommand extends $Command<DeleteBucketLifecycleConfigurationCommandInput, DeleteBucketLifecycleConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteBucketLifecycleConfigurationCommandInput;
            constructor(input: DeleteBucketLifecycleConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBucketLifecycleConfigurationCommandInput, DeleteBucketLifecycleConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteBucketPolicyRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteBucketPolicyCommandInput extends DeleteBucketPolicyRequest {
    }
    export interface DeleteBucketPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action deletes an Amazon S3 on Outposts bucket policy. To delete an S3 bucket policy,
        *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html">DeleteBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>This implementation of the DELETE action uses the policy subresource to delete the
        *          policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the
        *          root user of the Amazon Web Services account that owns the bucket, the calling identity must have the
        *             <code>s3-outposts:DeleteBucketPolicy</code> permissions on the specified Outposts bucket
        *          and belong to the bucket owner's account to use this action. For more information, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
        *
        *          <p>If you don't have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403
        *             Access Denied</code> error. If you have the correct permissions, but you're not using an
        *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not
        *             Allowed</code> error. </p>
        *
        *
        *          <important>
        *             <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
        *             always use this action, even if the policy explicitly denies the root user the ability
        *             to perform this action.</p>
        *          </important>
        *
        *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
        *             Policies</a>. </p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>DeleteBucketPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteBucketPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteBucketPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteBucketPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBucketPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteBucketPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteBucketPolicyCommand extends $Command<DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteBucketPolicyCommandInput;
            constructor(input: DeleteBucketPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteBucketTaggingRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteBucketTaggingCommandInput extends DeleteBucketTaggingRequest {
    }
    export interface DeleteBucketTaggingCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action deletes an Amazon S3 on Outposts bucket's tags. To delete an S3 bucket tags,
        *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Deletes the tags from the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>
        *
        *          <p>To use this action, you must have permission to perform the
        *             <code>PutBucketTagging</code> action. By default, the bucket owner has this permission
        *          and can grant this permission to others. </p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>DeleteBucketTagging</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteBucketTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteBucketTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteBucketTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteBucketTaggingCommandInput} for command's `input` shape.
        * @see {@link DeleteBucketTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteBucketTaggingCommand extends $Command<DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteBucketTaggingCommandInput;
            constructor(input: DeleteBucketTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteJobTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteJobTaggingRequest, DeleteJobTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteJobTaggingCommandInput extends DeleteJobTaggingRequest {
    }
    export interface DeleteJobTaggingCommandOutput extends DeleteJobTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Removes the entire tag set from the specified S3 Batch Operations job. To use this operation,
        *          you must have permission to perform the <code>s3:DeleteJobTagging</code> action. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
        *             access and labeling jobs using tags</a> in the
        *          <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteJobTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteJobTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteJobTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteJobTaggingCommandInput} for command's `input` shape.
        * @see {@link DeleteJobTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteJobTaggingCommand extends $Command<DeleteJobTaggingCommandInput, DeleteJobTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteJobTaggingCommandInput;
            constructor(input: DeleteJobTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteJobTaggingCommandInput, DeleteJobTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteMultiRegionAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteMultiRegionAccessPointRequest, DeleteMultiRegionAccessPointResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteMultiRegionAccessPointCommandInput extends DeleteMultiRegionAccessPointRequest {
    }
    export interface DeleteMultiRegionAccessPointCommandOutput extends DeleteMultiRegionAccessPointResult, __MetadataBearer {
    }
    /**
        * <p>Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point,
        *          only the Multi-Region Access Point itself.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>This request is asynchronous, meaning that you might receive a response before the
        *          command has completed. When this request provides a response, it provides a token that you
        *          can use to monitor the status of the request with
        *             <code>DescribeMultiRegionAccessPointOperation</code>.</p>
        *          <p>The following actions are related to <code>DeleteMultiRegionAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteMultiRegionAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteMultiRegionAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteMultiRegionAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteMultiRegionAccessPointCommandInput} for command's `input` shape.
        * @see {@link DeleteMultiRegionAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteMultiRegionAccessPointCommand extends $Command<DeleteMultiRegionAccessPointCommandInput, DeleteMultiRegionAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteMultiRegionAccessPointCommandInput;
            constructor(input: DeleteMultiRegionAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteMultiRegionAccessPointCommandInput, DeleteMultiRegionAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeletePublicAccessBlockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeletePublicAccessBlockRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeletePublicAccessBlockCommandInput extends DeletePublicAccessBlockRequest {
    }
    export interface DeletePublicAccessBlockCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
        *             public access</a>.</p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeletePublicAccessBlockCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeletePublicAccessBlockCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeletePublicAccessBlockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeletePublicAccessBlockCommandInput} for command's `input` shape.
        * @see {@link DeletePublicAccessBlockCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeletePublicAccessBlockCommand extends $Command<DeletePublicAccessBlockCommandInput, DeletePublicAccessBlockCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeletePublicAccessBlockCommandInput;
            constructor(input: DeletePublicAccessBlockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeletePublicAccessBlockCommandInput, DeletePublicAccessBlockCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteStorageLensConfigurationRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteStorageLensConfigurationCommandInput extends DeleteStorageLensConfigurationRequest {
    }
    export interface DeleteStorageLensConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
        *             activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:DeleteStorageLensConfiguration</code> action. For more information, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
        *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteStorageLensConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteStorageLensConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteStorageLensConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteStorageLensConfigurationCommandInput} for command's `input` shape.
        * @see {@link DeleteStorageLensConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteStorageLensConfigurationCommand extends $Command<DeleteStorageLensConfigurationCommandInput, DeleteStorageLensConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteStorageLensConfigurationCommandInput;
            constructor(input: DeleteStorageLensConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteStorageLensConfigurationCommandInput, DeleteStorageLensConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteStorageLensConfigurationTaggingRequest, DeleteStorageLensConfigurationTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DeleteStorageLensConfigurationTaggingCommandInput extends DeleteStorageLensConfigurationTaggingRequest {
    }
    export interface DeleteStorageLensConfigurationTaggingCommandOutput extends DeleteStorageLensConfigurationTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
        *             storage activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:DeleteStorageLensConfigurationTagging</code> action. For more information,
        *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
        *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DeleteStorageLensConfigurationTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DeleteStorageLensConfigurationTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DeleteStorageLensConfigurationTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteStorageLensConfigurationTaggingCommandInput} for command's `input` shape.
        * @see {@link DeleteStorageLensConfigurationTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DeleteStorageLensConfigurationTaggingCommand extends $Command<DeleteStorageLensConfigurationTaggingCommandInput, DeleteStorageLensConfigurationTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DeleteStorageLensConfigurationTaggingCommandInput;
            constructor(input: DeleteStorageLensConfigurationTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteStorageLensConfigurationTaggingCommandInput, DeleteStorageLensConfigurationTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeJobCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeJobRequest, DescribeJobResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DescribeJobCommandInput extends DescribeJobRequest {
    }
    export interface DescribeJobCommandOutput extends DescribeJobResult, __MetadataBearer {
    }
    /**
        * <p>Retrieves the configuration parameters and status for a Batch Operations job. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DescribeJobCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DescribeJobCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DescribeJobCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeJobCommandInput} for command's `input` shape.
        * @see {@link DescribeJobCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DescribeJobCommand extends $Command<DescribeJobCommandInput, DescribeJobCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DescribeJobCommandInput;
            constructor(input: DescribeJobCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJobCommandInput, DescribeJobCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeMultiRegionAccessPointOperationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeMultiRegionAccessPointOperationRequest, DescribeMultiRegionAccessPointOperationResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface DescribeMultiRegionAccessPointOperationCommandInput extends DescribeMultiRegionAccessPointOperationRequest {
    }
    export interface DescribeMultiRegionAccessPointOperationCommandOutput extends DescribeMultiRegionAccessPointOperationResult, __MetadataBearer {
    }
    /**
        * <p>Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information
        *          about managing Multi-Region Access Points and how asynchronous requests work, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, DescribeMultiRegionAccessPointOperationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, DescribeMultiRegionAccessPointOperationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new DescribeMultiRegionAccessPointOperationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeMultiRegionAccessPointOperationCommandInput} for command's `input` shape.
        * @see {@link DescribeMultiRegionAccessPointOperationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class DescribeMultiRegionAccessPointOperationCommand extends $Command<DescribeMultiRegionAccessPointOperationCommandInput, DescribeMultiRegionAccessPointOperationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: DescribeMultiRegionAccessPointOperationCommandInput;
            constructor(input: DescribeMultiRegionAccessPointOperationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeMultiRegionAccessPointOperationCommandInput, DescribeMultiRegionAccessPointOperationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointRequest, GetAccessPointResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointCommandInput extends GetAccessPointRequest {
    }
    export interface GetAccessPointCommandOutput extends GetAccessPointResult, __MetadataBearer {
    }
    /**
        * <p>Returns configuration information about the specified access point.</p>
        *          <p></p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to <code>GetAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointCommand extends $Command<GetAccessPointCommandInput, GetAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointCommandInput;
            constructor(input: GetAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointCommandInput, GetAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointConfigurationForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointConfigurationForObjectLambdaRequest, GetAccessPointConfigurationForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointConfigurationForObjectLambdaCommandInput extends GetAccessPointConfigurationForObjectLambdaRequest {
    }
    export interface GetAccessPointConfigurationForObjectLambdaCommandOutput extends GetAccessPointConfigurationForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Returns configuration for an Object Lambda Access Point.</p>
        *          <p>The following actions are related to
        *             <code>GetAccessPointConfigurationForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html">PutAccessPointConfigurationForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointConfigurationForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointConfigurationForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointConfigurationForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointConfigurationForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointConfigurationForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointConfigurationForObjectLambdaCommand extends $Command<GetAccessPointConfigurationForObjectLambdaCommandInput, GetAccessPointConfigurationForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointConfigurationForObjectLambdaCommandInput;
            constructor(input: GetAccessPointConfigurationForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointConfigurationForObjectLambdaCommandInput, GetAccessPointConfigurationForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointForObjectLambdaRequest, GetAccessPointForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointForObjectLambdaCommandInput extends GetAccessPointForObjectLambdaRequest {
    }
    export interface GetAccessPointForObjectLambdaCommandOutput extends GetAccessPointForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Returns configuration information about the specified Object Lambda Access Point</p>
        *          <p>The following actions are related to <code>GetAccessPointForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointForObjectLambdaCommand extends $Command<GetAccessPointForObjectLambdaCommandInput, GetAccessPointForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointForObjectLambdaCommandInput;
            constructor(input: GetAccessPointForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointForObjectLambdaCommandInput, GetAccessPointForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointPolicyRequest, GetAccessPointPolicyResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointPolicyCommandInput extends GetAccessPointPolicyRequest {
    }
    export interface GetAccessPointPolicyCommandOutput extends GetAccessPointPolicyResult, __MetadataBearer {
    }
    /**
        * <p>Returns the access point policy associated with the specified access point.</p>
        *          <p>The following actions are related to <code>GetAccessPointPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointPolicyCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointPolicyCommand extends $Command<GetAccessPointPolicyCommandInput, GetAccessPointPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointPolicyCommandInput;
            constructor(input: GetAccessPointPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointPolicyCommandInput, GetAccessPointPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointPolicyForObjectLambdaRequest, GetAccessPointPolicyForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointPolicyForObjectLambdaCommandInput extends GetAccessPointPolicyForObjectLambdaRequest {
    }
    export interface GetAccessPointPolicyForObjectLambdaCommandOutput extends GetAccessPointPolicyForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Returns the resource policy for an Object Lambda Access Point.</p>
        *          <p>The following actions are related to
        *          <code>GetAccessPointPolicyForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointPolicyForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointPolicyForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointPolicyForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointPolicyForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointPolicyForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointPolicyForObjectLambdaCommand extends $Command<GetAccessPointPolicyForObjectLambdaCommandInput, GetAccessPointPolicyForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointPolicyForObjectLambdaCommandInput;
            constructor(input: GetAccessPointPolicyForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointPolicyForObjectLambdaCommandInput, GetAccessPointPolicyForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointPolicyStatusRequest, GetAccessPointPolicyStatusResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointPolicyStatusCommandInput extends GetAccessPointPolicyStatusRequest {
    }
    export interface GetAccessPointPolicyStatusCommandOutput extends GetAccessPointPolicyStatusResult, __MetadataBearer {
    }
    /**
        * <p>Indicates whether the specified access point currently has a policy that allows public access.
        *          For more information about public access through access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3
        *             access points</a> in the <i>Amazon S3 User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointPolicyStatusCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointPolicyStatusCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointPolicyStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointPolicyStatusCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointPolicyStatusCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointPolicyStatusCommand extends $Command<GetAccessPointPolicyStatusCommandInput, GetAccessPointPolicyStatusCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointPolicyStatusCommandInput;
            constructor(input: GetAccessPointPolicyStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointPolicyStatusCommandInput, GetAccessPointPolicyStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetAccessPointPolicyStatusForObjectLambdaRequest, GetAccessPointPolicyStatusForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetAccessPointPolicyStatusForObjectLambdaCommandInput extends GetAccessPointPolicyStatusForObjectLambdaRequest {
    }
    export interface GetAccessPointPolicyStatusForObjectLambdaCommandOutput extends GetAccessPointPolicyStatusForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Returns the status of the resource policy associated with an Object Lambda Access Point.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetAccessPointPolicyStatusForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetAccessPointPolicyStatusForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetAccessPointPolicyStatusForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetAccessPointPolicyStatusForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link GetAccessPointPolicyStatusForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetAccessPointPolicyStatusForObjectLambdaCommand extends $Command<GetAccessPointPolicyStatusForObjectLambdaCommandInput, GetAccessPointPolicyStatusForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetAccessPointPolicyStatusForObjectLambdaCommandInput;
            constructor(input: GetAccessPointPolicyStatusForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessPointPolicyStatusForObjectLambdaCommandInput, GetAccessPointPolicyStatusForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetBucketRequest, GetBucketResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetBucketCommandInput extends GetBucketRequest {
    }
    export interface GetBucketCommandOutput extends GetBucketResult, __MetadataBearer {
    }
    /**
        * <p>Gets an Amazon S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html"> Using Amazon S3 on Outposts</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
        *          Outposts bucket, the calling identity must have the <code>s3-outposts:GetBucket</code>
        *          permissions on the specified Outposts bucket and belong to the Outposts bucket owner's
        *          account in order to use this action. Only users from Outposts bucket owner account with
        *          the right permissions can perform actions on an Outposts bucket. </p>
        *          <p> If you don't have <code>s3-outposts:GetBucket</code> permissions or you're not using an
        *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>403 Access
        *             Denied</code> error.</p>
        *          <p>The following actions are related to <code>GetBucket</code> for Amazon S3 on Outposts:</p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples">Examples</a> section.</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetBucketCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetBucketCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetBucketCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBucketCommandInput} for command's `input` shape.
        * @see {@link GetBucketCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetBucketCommand extends $Command<GetBucketCommandInput, GetBucketCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetBucketCommandInput;
            constructor(input: GetBucketCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBucketCommandInput, GetBucketCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketLifecycleConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetBucketLifecycleConfigurationRequest, GetBucketLifecycleConfigurationResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetBucketLifecycleConfigurationCommandInput extends GetBucketLifecycleConfigurationRequest {
    }
    export interface GetBucketLifecycleConfigurationCommandOutput extends GetBucketLifecycleConfigurationResult, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action gets an Amazon S3 on Outposts bucket's lifecycle configuration. To get an S3
        *             bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.
        *          </p>
        *          </note>
        *          <p>Returns the lifecycle configuration information set on the Outposts bucket. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> and for
        *          information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html"> Object Lifecycle
        *             Management</a> in <i>Amazon S3 User Guide</i>.</p>
        *
        *          <p>To use this action, you must have permission to perform the
        *             <code>s3-outposts:GetLifecycleConfiguration</code> action. The Outposts bucket owner
        *          has this permission, by default. The bucket owner can grant this permission to others. For
        *          more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
        *             Access Permissions to Your Amazon S3 Resources</a>.</p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
        *
        *          <p>
        *             <code>GetBucketLifecycleConfiguration</code> has the following special error:</p>
        *          <ul>
        *             <li>
        *                <p>Error code: <code>NoSuchLifecycleConfiguration</code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: The lifecycle configuration does not exist.</p>
        *                   </li>
        *                   <li>
        *                      <p>HTTP Status Code: 404 Not Found</p>
        *                   </li>
        *                   <li>
        *                      <p>SOAP Fault Code Prefix: Client</p>
        *                   </li>
        *                </ul>
        *             </li>
        *          </ul>
        *          <p>The following actions are related to
        *          <code>GetBucketLifecycleConfiguration</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetBucketLifecycleConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetBucketLifecycleConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetBucketLifecycleConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBucketLifecycleConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetBucketLifecycleConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetBucketLifecycleConfigurationCommand extends $Command<GetBucketLifecycleConfigurationCommandInput, GetBucketLifecycleConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetBucketLifecycleConfigurationCommandInput;
            constructor(input: GetBucketLifecycleConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBucketLifecycleConfigurationCommandInput, GetBucketLifecycleConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetBucketPolicyRequest, GetBucketPolicyResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetBucketPolicyCommandInput extends GetBucketPolicyRequest {
    }
    export interface GetBucketPolicyCommandOutput extends GetBucketPolicyResult, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for
        *             an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html">GetBucketPolicy</a> in the
        *                <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Returns the policy of a specified Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
        *          bucket, the calling identity must have the <code>GetBucketPolicy</code> permissions on the
        *          specified bucket and belong to the bucket owner's account in order to use this
        *          action.</p>
        *
        *          <p>Only users from Outposts bucket owner account with the right permissions can perform
        *          actions on an Outposts bucket. If you don't have <code>s3-outposts:GetBucketPolicy</code>
        *          permissions or you're not using an identity that belongs to the bucket owner's account,
        *          Amazon S3 returns a <code>403 Access Denied</code> error.</p>
        *
        *          <important>
        *             <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
        *             always use this action, even if the policy explicitly denies the root user the ability
        *             to perform this action.</p>
        *          </important>
        *
        *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
        *             Policies</a>.</p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>GetBucketPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetBucketPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetBucketPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetBucketPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBucketPolicyCommandInput} for command's `input` shape.
        * @see {@link GetBucketPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetBucketPolicyCommand extends $Command<GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetBucketPolicyCommandInput;
            constructor(input: GetBucketPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetBucketTaggingRequest, GetBucketTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetBucketTaggingCommandInput extends GetBucketTaggingRequest {
    }
    export interface GetBucketTaggingCommandOutput extends GetBucketTaggingResult, __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action gets an Amazon S3 on Outposts bucket's tags. To get an S3 bucket tags, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Returns the tag set associated with the Outposts bucket. For more information, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>To use this action, you must have permission to perform the
        *             <code>GetBucketTagging</code> action. By default, the bucket owner has this permission
        *          and can grant this permission to others.</p>
        *
        *          <p>
        *             <code>GetBucketTagging</code> has the following special error:</p>
        *          <ul>
        *             <li>
        *                <p>Error code: <code>NoSuchTagSetError</code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: There is no tag set associated with the bucket.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *          </ul>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>GetBucketTagging</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetBucketTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetBucketTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetBucketTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetBucketTaggingCommandInput} for command's `input` shape.
        * @see {@link GetBucketTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetBucketTaggingCommand extends $Command<GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetBucketTaggingCommandInput;
            constructor(input: GetBucketTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetJobTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetJobTaggingRequest, GetJobTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetJobTaggingCommandInput extends GetJobTaggingRequest {
    }
    export interface GetJobTaggingCommandOutput extends GetJobTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Returns the tags on an S3 Batch Operations job. To use this operation, you must have
        *          permission to perform the <code>s3:GetJobTagging</code> action. For more information, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
        *             access and labeling jobs using tags</a> in the
        *          <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetJobTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetJobTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetJobTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetJobTaggingCommandInput} for command's `input` shape.
        * @see {@link GetJobTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetJobTaggingCommand extends $Command<GetJobTaggingCommandInput, GetJobTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetJobTaggingCommandInput;
            constructor(input: GetJobTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetJobTaggingCommandInput, GetJobTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMultiRegionAccessPointRequest, GetMultiRegionAccessPointResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetMultiRegionAccessPointCommandInput extends GetMultiRegionAccessPointRequest {
    }
    export interface GetMultiRegionAccessPointCommandOutput extends GetMultiRegionAccessPointResult, __MetadataBearer {
    }
    /**
        * <p>Returns configuration information about the specified Multi-Region Access Point.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetMultiRegionAccessPointCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetMultiRegionAccessPointCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetMultiRegionAccessPointCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMultiRegionAccessPointCommandInput} for command's `input` shape.
        * @see {@link GetMultiRegionAccessPointCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetMultiRegionAccessPointCommand extends $Command<GetMultiRegionAccessPointCommandInput, GetMultiRegionAccessPointCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetMultiRegionAccessPointCommandInput;
            constructor(input: GetMultiRegionAccessPointCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMultiRegionAccessPointCommandInput, GetMultiRegionAccessPointCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMultiRegionAccessPointPolicyRequest, GetMultiRegionAccessPointPolicyResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetMultiRegionAccessPointPolicyCommandInput extends GetMultiRegionAccessPointPolicyRequest {
    }
    export interface GetMultiRegionAccessPointPolicyCommandOutput extends GetMultiRegionAccessPointPolicyResult, __MetadataBearer {
    }
    /**
        * <p>Returns the access control policy of the specified Multi-Region Access Point.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to
        *          <code>GetMultiRegionAccessPointPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetMultiRegionAccessPointPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetMultiRegionAccessPointPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetMultiRegionAccessPointPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMultiRegionAccessPointPolicyCommandInput} for command's `input` shape.
        * @see {@link GetMultiRegionAccessPointPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetMultiRegionAccessPointPolicyCommand extends $Command<GetMultiRegionAccessPointPolicyCommandInput, GetMultiRegionAccessPointPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetMultiRegionAccessPointPolicyCommandInput;
            constructor(input: GetMultiRegionAccessPointPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMultiRegionAccessPointPolicyCommandInput, GetMultiRegionAccessPointPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetMultiRegionAccessPointPolicyStatusRequest, GetMultiRegionAccessPointPolicyStatusResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetMultiRegionAccessPointPolicyStatusCommandInput extends GetMultiRegionAccessPointPolicyStatusRequest {
    }
    export interface GetMultiRegionAccessPointPolicyStatusCommandOutput extends GetMultiRegionAccessPointPolicyStatusResult, __MetadataBearer {
    }
    /**
        * <p>Indicates whether the specified Multi-Region Access Point has an access control policy that allows public
        *          access.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to
        *          <code>GetMultiRegionAccessPointPolicyStatus</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetMultiRegionAccessPointPolicyStatusCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetMultiRegionAccessPointPolicyStatusCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetMultiRegionAccessPointPolicyStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetMultiRegionAccessPointPolicyStatusCommandInput} for command's `input` shape.
        * @see {@link GetMultiRegionAccessPointPolicyStatusCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetMultiRegionAccessPointPolicyStatusCommand extends $Command<GetMultiRegionAccessPointPolicyStatusCommandInput, GetMultiRegionAccessPointPolicyStatusCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetMultiRegionAccessPointPolicyStatusCommandInput;
            constructor(input: GetMultiRegionAccessPointPolicyStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetMultiRegionAccessPointPolicyStatusCommandInput, GetMultiRegionAccessPointPolicyStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetPublicAccessBlockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetPublicAccessBlockOutput, GetPublicAccessBlockRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetPublicAccessBlockCommandInput extends GetPublicAccessBlockRequest {
    }
    export interface GetPublicAccessBlockCommandOutput extends GetPublicAccessBlockOutput, __MetadataBearer {
    }
    /**
        * <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For
        *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
        *             public access</a>.</p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetPublicAccessBlockCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetPublicAccessBlockCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetPublicAccessBlockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetPublicAccessBlockCommandInput} for command's `input` shape.
        * @see {@link GetPublicAccessBlockCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetPublicAccessBlockCommand extends $Command<GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetPublicAccessBlockCommandInput;
            constructor(input: GetPublicAccessBlockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetStorageLensConfigurationRequest, GetStorageLensConfigurationResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetStorageLensConfigurationCommandInput extends GetStorageLensConfigurationRequest {
    }
    export interface GetStorageLensConfigurationCommandOutput extends GetStorageLensConfigurationResult, __MetadataBearer {
    }
    /**
        * <p>Gets the Amazon S3 Storage Lens configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
        *             activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:GetStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the
        *                <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetStorageLensConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetStorageLensConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetStorageLensConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetStorageLensConfigurationCommandInput} for command's `input` shape.
        * @see {@link GetStorageLensConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetStorageLensConfigurationCommand extends $Command<GetStorageLensConfigurationCommandInput, GetStorageLensConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetStorageLensConfigurationCommandInput;
            constructor(input: GetStorageLensConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStorageLensConfigurationCommandInput, GetStorageLensConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetStorageLensConfigurationTaggingRequest, GetStorageLensConfigurationTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface GetStorageLensConfigurationTaggingCommandInput extends GetStorageLensConfigurationTaggingRequest {
    }
    export interface GetStorageLensConfigurationTaggingCommandOutput extends GetStorageLensConfigurationTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
        *             storage activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:GetStorageLensConfigurationTagging</code> action. For more information, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
        *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, GetStorageLensConfigurationTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, GetStorageLensConfigurationTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new GetStorageLensConfigurationTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetStorageLensConfigurationTaggingCommandInput} for command's `input` shape.
        * @see {@link GetStorageLensConfigurationTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class GetStorageLensConfigurationTaggingCommand extends $Command<GetStorageLensConfigurationTaggingCommandInput, GetStorageLensConfigurationTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: GetStorageLensConfigurationTaggingCommandInput;
            constructor(input: GetStorageLensConfigurationTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStorageLensConfigurationTaggingCommandInput, GetStorageLensConfigurationTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccessPointsRequest, ListAccessPointsResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListAccessPointsCommandInput extends ListAccessPointsRequest {
    }
    export interface ListAccessPointsCommandOutput extends ListAccessPointsResult, __MetadataBearer {
    }
    /**
        * <p>Returns a list of the access points currently associated with the specified bucket. You can
        *          retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or
        *          the number specified in <code>maxResults</code>, whichever is less), the response will
        *          include a continuation token that you can use to list the additional access points.</p>
        *          <p></p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to <code>ListAccessPoints</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListAccessPointsCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListAccessPointsCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListAccessPointsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccessPointsCommandInput} for command's `input` shape.
        * @see {@link ListAccessPointsCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListAccessPointsCommand extends $Command<ListAccessPointsCommandInput, ListAccessPointsCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListAccessPointsCommandInput;
            constructor(input: ListAccessPointsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccessPointsCommandInput, ListAccessPointsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccessPointsForObjectLambdaRequest, ListAccessPointsForObjectLambdaResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListAccessPointsForObjectLambdaCommandInput extends ListAccessPointsForObjectLambdaRequest {
    }
    export interface ListAccessPointsForObjectLambdaCommandOutput extends ListAccessPointsForObjectLambdaResult, __MetadataBearer {
    }
    /**
        * <p>Returns some or all (up to 1,000) access points associated with the Object Lambda Access Point per call. If there
        *          are more access points than what can be returned in one call, the response will include a
        *          continuation token that you can use to list the additional access points.</p>
        *          <p>The following actions are related to
        *          <code>ListAccessPointsForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListAccessPointsForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListAccessPointsForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListAccessPointsForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccessPointsForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link ListAccessPointsForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListAccessPointsForObjectLambdaCommand extends $Command<ListAccessPointsForObjectLambdaCommandInput, ListAccessPointsForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListAccessPointsForObjectLambdaCommandInput;
            constructor(input: ListAccessPointsForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccessPointsForObjectLambdaCommandInput, ListAccessPointsForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListJobsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListJobsRequest, ListJobsResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListJobsCommandInput extends ListJobsRequest {
    }
    export interface ListJobsCommandOutput extends ListJobsResult, __MetadataBearer {
    }
    /**
        * <p>Lists current S3 Batch Operations jobs and jobs that have ended within the last 30 days for
        *          the Amazon Web Services account making the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p>Related actions include:</p>
        *          <p></p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListJobsCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListJobsCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListJobsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListJobsCommandInput} for command's `input` shape.
        * @see {@link ListJobsCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListJobsCommand extends $Command<ListJobsCommandInput, ListJobsCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListJobsCommandInput;
            constructor(input: ListJobsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListJobsCommandInput, ListJobsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListMultiRegionAccessPointsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListMultiRegionAccessPointsRequest, ListMultiRegionAccessPointsResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListMultiRegionAccessPointsCommandInput extends ListMultiRegionAccessPointsRequest {
    }
    export interface ListMultiRegionAccessPointsCommandOutput extends ListMultiRegionAccessPointsResult, __MetadataBearer {
    }
    /**
        * <p>Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account.
        *          Each call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be
        *          associated with a single account.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to <code>ListMultiRegionAccessPoint</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListMultiRegionAccessPointsCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListMultiRegionAccessPointsCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListMultiRegionAccessPointsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListMultiRegionAccessPointsCommandInput} for command's `input` shape.
        * @see {@link ListMultiRegionAccessPointsCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListMultiRegionAccessPointsCommand extends $Command<ListMultiRegionAccessPointsCommandInput, ListMultiRegionAccessPointsCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListMultiRegionAccessPointsCommandInput;
            constructor(input: ListMultiRegionAccessPointsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMultiRegionAccessPointsCommandInput, ListMultiRegionAccessPointsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListRegionalBucketsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRegionalBucketsRequest, ListRegionalBucketsResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListRegionalBucketsCommandInput extends ListRegionalBucketsRequest {
    }
    export interface ListRegionalBucketsCommandOutput extends ListRegionalBucketsResult, __MetadataBearer {
    }
    /**
        * <p>Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated
        *          sender of the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
        *          endpoint hostname prefix and <code>x-amz-outpost-id</code> in your request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples">Examples</a> section.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListRegionalBucketsCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListRegionalBucketsCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListRegionalBucketsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRegionalBucketsCommandInput} for command's `input` shape.
        * @see {@link ListRegionalBucketsCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListRegionalBucketsCommand extends $Command<ListRegionalBucketsCommandInput, ListRegionalBucketsCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListRegionalBucketsCommandInput;
            constructor(input: ListRegionalBucketsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRegionalBucketsCommandInput, ListRegionalBucketsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListStorageLensConfigurationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListStorageLensConfigurationsRequest, ListStorageLensConfigurationsResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface ListStorageLensConfigurationsCommandInput extends ListStorageLensConfigurationsRequest {
    }
    export interface ListStorageLensConfigurationsCommandOutput extends ListStorageLensConfigurationsResult, __MetadataBearer {
    }
    /**
        * <p>Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see
        *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your
        *             storage activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:ListStorageLensConfigurations</code> action. For more information, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
        *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, ListStorageLensConfigurationsCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, ListStorageLensConfigurationsCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new ListStorageLensConfigurationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListStorageLensConfigurationsCommandInput} for command's `input` shape.
        * @see {@link ListStorageLensConfigurationsCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class ListStorageLensConfigurationsCommand extends $Command<ListStorageLensConfigurationsCommandInput, ListStorageLensConfigurationsCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: ListStorageLensConfigurationsCommandInput;
            constructor(input: ListStorageLensConfigurationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListStorageLensConfigurationsCommandInput, ListStorageLensConfigurationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointConfigurationForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccessPointConfigurationForObjectLambdaRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutAccessPointConfigurationForObjectLambdaCommandInput extends PutAccessPointConfigurationForObjectLambdaRequest {
    }
    export interface PutAccessPointConfigurationForObjectLambdaCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Replaces configuration for an Object Lambda Access Point.</p>
        *          <p>The following actions are related to
        *             <code>PutAccessPointConfigurationForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html">GetAccessPointConfigurationForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutAccessPointConfigurationForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutAccessPointConfigurationForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutAccessPointConfigurationForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccessPointConfigurationForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link PutAccessPointConfigurationForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutAccessPointConfigurationForObjectLambdaCommand extends $Command<PutAccessPointConfigurationForObjectLambdaCommandInput, PutAccessPointConfigurationForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutAccessPointConfigurationForObjectLambdaCommandInput;
            constructor(input: PutAccessPointConfigurationForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccessPointConfigurationForObjectLambdaCommandInput, PutAccessPointConfigurationForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccessPointPolicyRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutAccessPointPolicyCommandInput extends PutAccessPointPolicyRequest {
    }
    export interface PutAccessPointPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Associates an access policy with the specified access point. Each access point can have only one policy,
        *          so a request made to this API replaces any existing policy associated with the specified
        *          access point.</p>
        *          <p></p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to <code>PutAccessPointPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutAccessPointPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutAccessPointPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutAccessPointPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccessPointPolicyCommandInput} for command's `input` shape.
        * @see {@link PutAccessPointPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutAccessPointPolicyCommand extends $Command<PutAccessPointPolicyCommandInput, PutAccessPointPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutAccessPointPolicyCommandInput;
            constructor(input: PutAccessPointPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccessPointPolicyCommandInput, PutAccessPointPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyForObjectLambdaCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutAccessPointPolicyForObjectLambdaRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutAccessPointPolicyForObjectLambdaCommandInput extends PutAccessPointPolicyForObjectLambdaRequest {
    }
    export interface PutAccessPointPolicyForObjectLambdaCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli">Creating Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to
        *          <code>PutAccessPointPolicyForObjectLambda</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutAccessPointPolicyForObjectLambdaCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutAccessPointPolicyForObjectLambdaCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutAccessPointPolicyForObjectLambdaCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutAccessPointPolicyForObjectLambdaCommandInput} for command's `input` shape.
        * @see {@link PutAccessPointPolicyForObjectLambdaCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutAccessPointPolicyForObjectLambdaCommand extends $Command<PutAccessPointPolicyForObjectLambdaCommandInput, PutAccessPointPolicyForObjectLambdaCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutAccessPointPolicyForObjectLambdaCommandInput;
            constructor(input: PutAccessPointPolicyForObjectLambdaCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutAccessPointPolicyForObjectLambdaCommandInput, PutAccessPointPolicyForObjectLambdaCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketLifecycleConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutBucketLifecycleConfigurationRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutBucketLifecycleConfigurationCommandInput extends PutBucketLifecycleConfigurationRequest {
    }
    export interface PutBucketLifecycleConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a
        *             lifecycle configuration to an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.
        *          </p>
        *          </note>
        *          <p>Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an
        *          existing lifecycle configuration. Outposts buckets only support lifecycle configurations
        *          that delete/expire objects after a certain period of time and abort incomplete multipart
        *          uploads.</p>
        *          <p></p>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples">Examples</a> section.</p>
        *          <p>The following actions are related to
        *          <code>PutBucketLifecycleConfiguration</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutBucketLifecycleConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutBucketLifecycleConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutBucketLifecycleConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutBucketLifecycleConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutBucketLifecycleConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutBucketLifecycleConfigurationCommand extends $Command<PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutBucketLifecycleConfigurationCommandInput;
            constructor(input: PutBucketLifecycleConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutBucketPolicyRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutBucketPolicyCommandInput extends PutBucketPolicyRequest {
    }
    export interface PutBucketPolicyCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an
        *             S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html">PutBucketPolicy</a> in the
        *                <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the
        *          Outposts bucket, the calling identity must have the <code>PutBucketPolicy</code>
        *          permissions on the specified Outposts bucket and belong to the bucket owner's account in
        *          order to use this action.</p>
        *
        *          <p>If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403
        *             Access Denied</code> error. If you have the correct permissions, but you're not using an
        *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not
        *             Allowed</code> error.</p>
        *
        *          <important>
        *             <p> As a security precaution, the root user of the Amazon Web Services account that owns a bucket can
        *             always use this action, even if the policy explicitly denies the root user the ability
        *             to perform this action. </p>
        *          </important>
        *
        *
        *          <p>For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User
        *             Policies</a>.</p>
        *
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>PutBucketPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutBucketPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutBucketPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutBucketPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutBucketPolicyCommandInput} for command's `input` shape.
        * @see {@link PutBucketPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutBucketPolicyCommand extends $Command<PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutBucketPolicyCommandInput;
            constructor(input: PutBucketPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutBucketTaggingRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutBucketTaggingCommandInput extends PutBucketTaggingRequest {
    }
    export interface PutBucketTaggingCommandOutput extends __MetadataBearer {
    }
    /**
        * <note>
        *             <p>This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>
        *          </note>
        *          <p>Sets the tags for an S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
        *             Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this,
        *          sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost
        *          of combined resources, organize your billing information according to resources with the
        *          same tag key values. For example, you can tag several resources with a specific application
        *          name, and then organize your billing information to see the total cost of that application
        *          across several services. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost allocation and
        *             tagging</a>.</p>
        *
        *          <note>
        *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new
        *             value overwrites the old value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html"> Using cost allocation in Amazon S3
        *                bucket tags</a>.</p>
        *          </note>
        *          <p>To use this action, you must have permissions to perform the
        *             <code>s3-outposts:PutBucketTagging</code> action. The Outposts bucket owner has this
        *          permission by default and can grant this permission to others. For more information about
        *          permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources"> Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
        *             access permissions to your Amazon S3 resources</a>.</p>
        *
        *          <p>
        *             <code>PutBucketTagging</code> has the following special errors:</p>
        *          <ul>
        *             <li>
        *                <p>Error code: <code>InvalidTagError</code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: The tag provided was not a valid tag. This error can occur if
        *                      the tag did not pass input validation. For information about tag restrictions,
        *                      see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">
        *                         User-Defined Tag Restrictions</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html">
        *                         Amazon Web Services-Generated Cost Allocation Tag Restrictions</a>.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *             <li>
        *                <p>Error code: <code>MalformedXMLError</code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: The XML provided does not match the schema.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *             <li>
        *                <p>Error code: <code>OperationAbortedError </code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: A conflicting conditional action is currently in progress
        *                      against this resource. Try again.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *             <li>
        *                <p>Error code: <code>InternalError</code>
        *                </p>
        *                <ul>
        *                   <li>
        *                      <p>Description: The service was unable to apply the provided tag to the
        *                      bucket.</p>
        *                   </li>
        *                </ul>
        *             </li>
        *          </ul>
        *          <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples">Examples</a> section.</p>
        *
        *          <p>The following actions are related to <code>PutBucketTagging</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutBucketTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutBucketTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutBucketTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutBucketTaggingCommandInput} for command's `input` shape.
        * @see {@link PutBucketTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutBucketTaggingCommand extends $Command<PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutBucketTaggingCommandInput;
            constructor(input: PutBucketTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutJobTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutJobTaggingRequest, PutJobTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutJobTaggingCommandInput extends PutJobTaggingRequest {
    }
    export interface PutJobTaggingCommandOutput extends PutJobTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Sets the supplied tag-set on an S3 Batch Operations job.</p>
        *          <p>A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending
        *          a PUT request against the tagging subresource that is associated with the job. To modify
        *          the existing tag set, you can either replace the existing tag set entirely, or make changes
        *          within the existing tag set by retrieving the existing tag set using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>, modify that tag set, and use this action to replace the tag set
        *          with the one you modified. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
        *             access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>. </p>
        *          <p></p>
        *          <note>
        *             <ul>
        *                <li>
        *                   <p>If you send this request with an empty tag set, Amazon S3 deletes the existing
        *                   tag set on the Batch Operations job. If you use this method, you are charged for a Tier
        *                   1 Request (PUT). For more information, see <a href="http://aws.amazon.com/s3/pricing/">Amazon S3 pricing</a>.</p>
        *                </li>
        *                <li>
        *                   <p>For deleting existing tags for your Batch Operations job, a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a> request is preferred because it achieves the same
        *                   result without incurring charges.</p>
        *                </li>
        *                <li>
        *                   <p>A few things to consider about using tags:</p>
        *                   <ul>
        *                      <li>
        *                         <p>Amazon S3 limits the maximum number of tags to 50 tags per job.</p>
        *                      </li>
        *                      <li>
        *                         <p>You can associate up to 50 tags with a job as long as they have unique
        *                         tag keys.</p>
        *                      </li>
        *                      <li>
        *                         <p>A tag key can be up to 128 Unicode characters in length, and tag values
        *                         can be up to 256 Unicode characters in length.</p>
        *                      </li>
        *                      <li>
        *                         <p>The key and values are case sensitive.</p>
        *                      </li>
        *                      <li>
        *                         <p>For tagging-related restrictions related to characters and encodings, see
        *                            <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>
        *                      </li>
        *                   </ul>
        *                </li>
        *             </ul>
        *          </note>
        *          <p></p>
        *          <p>To use this action, you must have permission to perform the
        *             <code>s3:PutJobTagging</code> action.</p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutJobTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutJobTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutJobTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutJobTaggingCommandInput} for command's `input` shape.
        * @see {@link PutJobTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutJobTaggingCommand extends $Command<PutJobTaggingCommandInput, PutJobTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutJobTaggingCommandInput;
            constructor(input: PutJobTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutJobTaggingCommandInput, PutJobTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutMultiRegionAccessPointPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutMultiRegionAccessPointPolicyRequest, PutMultiRegionAccessPointPolicyResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutMultiRegionAccessPointPolicyCommandInput extends PutMultiRegionAccessPointPolicyRequest {
    }
    export interface PutMultiRegionAccessPointPolicyCommandOutput extends PutMultiRegionAccessPointPolicyResult, __MetadataBearer {
    }
    /**
        * <p>Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only
        *          one policy, so a request made to this action replaces any existing policy that is
        *          associated with the specified Multi-Region Access Point.</p>
        *          <p>This action will always be routed to the US West (Oregon) Region. For more information
        *          about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
        *             Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>The following actions are related to
        *          <code>PutMultiRegionAccessPointPolicy</code>:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutMultiRegionAccessPointPolicyCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutMultiRegionAccessPointPolicyCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutMultiRegionAccessPointPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutMultiRegionAccessPointPolicyCommandInput} for command's `input` shape.
        * @see {@link PutMultiRegionAccessPointPolicyCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutMultiRegionAccessPointPolicyCommand extends $Command<PutMultiRegionAccessPointPolicyCommandInput, PutMultiRegionAccessPointPolicyCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutMultiRegionAccessPointPolicyCommandInput;
            constructor(input: PutMultiRegionAccessPointPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutMultiRegionAccessPointPolicyCommandInput, PutMultiRegionAccessPointPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutPublicAccessBlockCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutPublicAccessBlockRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutPublicAccessBlockCommandInput extends PutPublicAccessBlockRequest {
    }
    export interface PutPublicAccessBlockCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an
        *          Amazon Web Services account. For this operation, users must have the
        *             <code>s3:PutBucketPublicAccessBlock</code> permission. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">
        *             Using Amazon S3 block public access</a>.</p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutPublicAccessBlockCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutPublicAccessBlockCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutPublicAccessBlockCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutPublicAccessBlockCommandInput} for command's `input` shape.
        * @see {@link PutPublicAccessBlockCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutPublicAccessBlockCommand extends $Command<PutPublicAccessBlockCommandInput, PutPublicAccessBlockCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutPublicAccessBlockCommandInput;
            constructor(input: PutPublicAccessBlockCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutPublicAccessBlockCommandInput, PutPublicAccessBlockCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutStorageLensConfigurationRequest } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutStorageLensConfigurationCommandInput extends PutStorageLensConfigurationRequest {
    }
    export interface PutStorageLensConfigurationCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Working with
        *             Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:PutStorageLensConfiguration</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens</a> in the
        *                <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutStorageLensConfigurationCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutStorageLensConfigurationCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutStorageLensConfigurationCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutStorageLensConfigurationCommandInput} for command's `input` shape.
        * @see {@link PutStorageLensConfigurationCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutStorageLensConfigurationCommand extends $Command<PutStorageLensConfigurationCommandInput, PutStorageLensConfigurationCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutStorageLensConfigurationCommandInput;
            constructor(input: PutStorageLensConfigurationCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutStorageLensConfigurationCommandInput, PutStorageLensConfigurationCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationTaggingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutStorageLensConfigurationTaggingRequest, PutStorageLensConfigurationTaggingResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface PutStorageLensConfigurationTaggingCommandInput extends PutStorageLensConfigurationTaggingRequest {
    }
    export interface PutStorageLensConfigurationTaggingCommandOutput extends PutStorageLensConfigurationTaggingResult, __MetadataBearer {
    }
    /**
        * <p>Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information
        *          about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        *          <note>
        *             <p>To use this action, you must have permission to perform the
        *                <code>s3:PutStorageLensConfigurationTagging</code> action. For more information, see
        *                <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to
        *                use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          </note>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, PutStorageLensConfigurationTaggingCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, PutStorageLensConfigurationTaggingCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new PutStorageLensConfigurationTaggingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutStorageLensConfigurationTaggingCommandInput} for command's `input` shape.
        * @see {@link PutStorageLensConfigurationTaggingCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class PutStorageLensConfigurationTaggingCommand extends $Command<PutStorageLensConfigurationTaggingCommandInput, PutStorageLensConfigurationTaggingCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: PutStorageLensConfigurationTaggingCommandInput;
            constructor(input: PutStorageLensConfigurationTaggingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutStorageLensConfigurationTaggingCommandInput, PutStorageLensConfigurationTaggingCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobPriorityCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateJobPriorityRequest, UpdateJobPriorityResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface UpdateJobPriorityCommandInput extends UpdateJobPriorityRequest {
    }
    export interface UpdateJobPriorityCommandOutput extends UpdateJobPriorityResult, __MetadataBearer {
    }
    /**
        * <p>Updates an existing S3 Batch Operations job's priority. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, UpdateJobPriorityCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, UpdateJobPriorityCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new UpdateJobPriorityCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateJobPriorityCommandInput} for command's `input` shape.
        * @see {@link UpdateJobPriorityCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class UpdateJobPriorityCommand extends $Command<UpdateJobPriorityCommandInput, UpdateJobPriorityCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: UpdateJobPriorityCommandInput;
            constructor(input: UpdateJobPriorityCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateJobPriorityCommandInput, UpdateJobPriorityCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateJobStatusRequest, UpdateJobStatusResult } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0";
    import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient";
    export interface UpdateJobStatusCommandInput extends UpdateJobStatusRequest {
    }
    export interface UpdateJobStatusCommandOutput extends UpdateJobStatusResult, __MetadataBearer {
    }
    /**
        * <p>Updates the status for the specified job. Use this action to confirm that you want to
        *          run a job or to cancel an existing job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p></p>
        *          <p>Related actions include:</p>
        *          <ul>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob</a>
        *                </p>
        *             </li>
        *             <li>
        *                <p>
        *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus</a>
        *                </p>
        *             </li>
        *          </ul>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { S3ControlClient, UpdateJobStatusCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
        * // const { S3ControlClient, UpdateJobStatusCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
        * const client = new S3ControlClient(config);
        * const command = new UpdateJobStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateJobStatusCommandInput} for command's `input` shape.
        * @see {@link UpdateJobStatusCommandOutput} for command's `response` shape.
        * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
        *
        */
    export class UpdateJobStatusCommand extends $Command<UpdateJobStatusCommandInput, UpdateJobStatusCommandOutput, S3ControlClientResolvedConfig> {
            readonly input: UpdateJobStatusCommandInput;
            constructor(input: UpdateJobStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateJobStatusCommandInput, UpdateJobStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/S3ControlClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { S3ControlInputConfig, S3ControlResolvedConfig } from "@aws-sdk/middleware-sdk-s3-control";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, StreamHasher as __StreamHasher, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { Readable } from "stream";
    import { CreateAccessPointCommandInput, CreateAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointCommand";
    import { CreateAccessPointForObjectLambdaCommandInput, CreateAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateAccessPointForObjectLambdaCommand";
    import { CreateBucketCommandInput, CreateBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateBucketCommand";
    import { CreateJobCommandInput, CreateJobCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateJobCommand";
    import { CreateMultiRegionAccessPointCommandInput, CreateMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/CreateMultiRegionAccessPointCommand";
    import { DeleteAccessPointCommandInput, DeleteAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointCommand";
    import { DeleteAccessPointForObjectLambdaCommandInput, DeleteAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointForObjectLambdaCommand";
    import { DeleteAccessPointPolicyCommandInput, DeleteAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyCommand";
    import { DeleteAccessPointPolicyForObjectLambdaCommandInput, DeleteAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteAccessPointPolicyForObjectLambdaCommand";
    import { DeleteBucketCommandInput, DeleteBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketCommand";
    import { DeleteBucketLifecycleConfigurationCommandInput, DeleteBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketLifecycleConfigurationCommand";
    import { DeleteBucketPolicyCommandInput, DeleteBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketPolicyCommand";
    import { DeleteBucketTaggingCommandInput, DeleteBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteBucketTaggingCommand";
    import { DeleteJobTaggingCommandInput, DeleteJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteJobTaggingCommand";
    import { DeleteMultiRegionAccessPointCommandInput, DeleteMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteMultiRegionAccessPointCommand";
    import { DeletePublicAccessBlockCommandInput, DeletePublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeletePublicAccessBlockCommand";
    import { DeleteStorageLensConfigurationCommandInput, DeleteStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationCommand";
    import { DeleteStorageLensConfigurationTaggingCommandInput, DeleteStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DeleteStorageLensConfigurationTaggingCommand";
    import { DescribeJobCommandInput, DescribeJobCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeJobCommand";
    import { DescribeMultiRegionAccessPointOperationCommandInput, DescribeMultiRegionAccessPointOperationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/DescribeMultiRegionAccessPointOperationCommand";
    import { GetAccessPointCommandInput, GetAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointCommand";
    import { GetAccessPointConfigurationForObjectLambdaCommandInput, GetAccessPointConfigurationForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointConfigurationForObjectLambdaCommand";
    import { GetAccessPointForObjectLambdaCommandInput, GetAccessPointForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointForObjectLambdaCommand";
    import { GetAccessPointPolicyCommandInput, GetAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyCommand";
    import { GetAccessPointPolicyForObjectLambdaCommandInput, GetAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyForObjectLambdaCommand";
    import { GetAccessPointPolicyStatusCommandInput, GetAccessPointPolicyStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusCommand";
    import { GetAccessPointPolicyStatusForObjectLambdaCommandInput, GetAccessPointPolicyStatusForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetAccessPointPolicyStatusForObjectLambdaCommand";
    import { GetBucketCommandInput, GetBucketCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketCommand";
    import { GetBucketLifecycleConfigurationCommandInput, GetBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketLifecycleConfigurationCommand";
    import { GetBucketPolicyCommandInput, GetBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketPolicyCommand";
    import { GetBucketTaggingCommandInput, GetBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetBucketTaggingCommand";
    import { GetJobTaggingCommandInput, GetJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetJobTaggingCommand";
    import { GetMultiRegionAccessPointCommandInput, GetMultiRegionAccessPointCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointCommand";
    import { GetMultiRegionAccessPointPolicyCommandInput, GetMultiRegionAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyCommand";
    import { GetMultiRegionAccessPointPolicyStatusCommandInput, GetMultiRegionAccessPointPolicyStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetMultiRegionAccessPointPolicyStatusCommand";
    import { GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetPublicAccessBlockCommand";
    import { GetStorageLensConfigurationCommandInput, GetStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationCommand";
    import { GetStorageLensConfigurationTaggingCommandInput, GetStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/GetStorageLensConfigurationTaggingCommand";
    import { ListAccessPointsCommandInput, ListAccessPointsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsCommand";
    import { ListAccessPointsForObjectLambdaCommandInput, ListAccessPointsForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListAccessPointsForObjectLambdaCommand";
    import { ListJobsCommandInput, ListJobsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListJobsCommand";
    import { ListMultiRegionAccessPointsCommandInput, ListMultiRegionAccessPointsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListMultiRegionAccessPointsCommand";
    import { ListRegionalBucketsCommandInput, ListRegionalBucketsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListRegionalBucketsCommand";
    import { ListStorageLensConfigurationsCommandInput, ListStorageLensConfigurationsCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/ListStorageLensConfigurationsCommand";
    import { PutAccessPointConfigurationForObjectLambdaCommandInput, PutAccessPointConfigurationForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointConfigurationForObjectLambdaCommand";
    import { PutAccessPointPolicyCommandInput, PutAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyCommand";
    import { PutAccessPointPolicyForObjectLambdaCommandInput, PutAccessPointPolicyForObjectLambdaCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutAccessPointPolicyForObjectLambdaCommand";
    import { PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketLifecycleConfigurationCommand";
    import { PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketPolicyCommand";
    import { PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutBucketTaggingCommand";
    import { PutJobTaggingCommandInput, PutJobTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutJobTaggingCommand";
    import { PutMultiRegionAccessPointPolicyCommandInput, PutMultiRegionAccessPointPolicyCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutMultiRegionAccessPointPolicyCommand";
    import { PutPublicAccessBlockCommandInput, PutPublicAccessBlockCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutPublicAccessBlockCommand";
    import { PutStorageLensConfigurationCommandInput, PutStorageLensConfigurationCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationCommand";
    import { PutStorageLensConfigurationTaggingCommandInput, PutStorageLensConfigurationTaggingCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/PutStorageLensConfigurationTaggingCommand";
    import { UpdateJobPriorityCommandInput, UpdateJobPriorityCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobPriorityCommand";
    import { UpdateJobStatusCommandInput, UpdateJobStatusCommandOutput } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/commands/UpdateJobStatusCommand";
    export type ServiceInputTypes = CreateAccessPointCommandInput | CreateAccessPointForObjectLambdaCommandInput | CreateBucketCommandInput | CreateJobCommandInput | CreateMultiRegionAccessPointCommandInput | DeleteAccessPointCommandInput | DeleteAccessPointForObjectLambdaCommandInput | DeleteAccessPointPolicyCommandInput | DeleteAccessPointPolicyForObjectLambdaCommandInput | DeleteBucketCommandInput | DeleteBucketLifecycleConfigurationCommandInput | DeleteBucketPolicyCommandInput | DeleteBucketTaggingCommandInput | DeleteJobTaggingCommandInput | DeleteMultiRegionAccessPointCommandInput | DeletePublicAccessBlockCommandInput | DeleteStorageLensConfigurationCommandInput | DeleteStorageLensConfigurationTaggingCommandInput | DescribeJobCommandInput | DescribeMultiRegionAccessPointOperationCommandInput | GetAccessPointCommandInput | GetAccessPointConfigurationForObjectLambdaCommandInput | GetAccessPointForObjectLambdaCommandInput | GetAccessPointPolicyCommandInput | GetAccessPointPolicyForObjectLambdaCommandInput | GetAccessPointPolicyStatusCommandInput | GetAccessPointPolicyStatusForObjectLambdaCommandInput | GetBucketCommandInput | GetBucketLifecycleConfigurationCommandInput | GetBucketPolicyCommandInput | GetBucketTaggingCommandInput | GetJobTaggingCommandInput | GetMultiRegionAccessPointCommandInput | GetMultiRegionAccessPointPolicyCommandInput | GetMultiRegionAccessPointPolicyStatusCommandInput | GetPublicAccessBlockCommandInput | GetStorageLensConfigurationCommandInput | GetStorageLensConfigurationTaggingCommandInput | ListAccessPointsCommandInput | ListAccessPointsForObjectLambdaCommandInput | ListJobsCommandInput | ListMultiRegionAccessPointsCommandInput | ListRegionalBucketsCommandInput | ListStorageLensConfigurationsCommandInput | PutAccessPointConfigurationForObjectLambdaCommandInput | PutAccessPointPolicyCommandInput | PutAccessPointPolicyForObjectLambdaCommandInput | PutBucketLifecycleConfigurationCommandInput | PutBucketPolicyCommandInput | PutBucketTaggingCommandInput | PutJobTaggingCommandInput | PutMultiRegionAccessPointPolicyCommandInput | PutPublicAccessBlockCommandInput | PutStorageLensConfigurationCommandInput | PutStorageLensConfigurationTaggingCommandInput | UpdateJobPriorityCommandInput | UpdateJobStatusCommandInput;
    export type ServiceOutputTypes = CreateAccessPointCommandOutput | CreateAccessPointForObjectLambdaCommandOutput | CreateBucketCommandOutput | CreateJobCommandOutput | CreateMultiRegionAccessPointCommandOutput | DeleteAccessPointCommandOutput | DeleteAccessPointForObjectLambdaCommandOutput | DeleteAccessPointPolicyCommandOutput | DeleteAccessPointPolicyForObjectLambdaCommandOutput | DeleteBucketCommandOutput | DeleteBucketLifecycleConfigurationCommandOutput | DeleteBucketPolicyCommandOutput | DeleteBucketTaggingCommandOutput | DeleteJobTaggingCommandOutput | DeleteMultiRegionAccessPointCommandOutput | DeletePublicAccessBlockCommandOutput | DeleteStorageLensConfigurationCommandOutput | DeleteStorageLensConfigurationTaggingCommandOutput | DescribeJobCommandOutput | DescribeMultiRegionAccessPointOperationCommandOutput | GetAccessPointCommandOutput | GetAccessPointConfigurationForObjectLambdaCommandOutput | GetAccessPointForObjectLambdaCommandOutput | GetAccessPointPolicyCommandOutput | GetAccessPointPolicyForObjectLambdaCommandOutput | GetAccessPointPolicyStatusCommandOutput | GetAccessPointPolicyStatusForObjectLambdaCommandOutput | GetBucketCommandOutput | GetBucketLifecycleConfigurationCommandOutput | GetBucketPolicyCommandOutput | GetBucketTaggingCommandOutput | GetJobTaggingCommandOutput | GetMultiRegionAccessPointCommandOutput | GetMultiRegionAccessPointPolicyCommandOutput | GetMultiRegionAccessPointPolicyStatusCommandOutput | GetPublicAccessBlockCommandOutput | GetStorageLensConfigurationCommandOutput | GetStorageLensConfigurationTaggingCommandOutput | ListAccessPointsCommandOutput | ListAccessPointsForObjectLambdaCommandOutput | ListJobsCommandOutput | ListMultiRegionAccessPointsCommandOutput | ListRegionalBucketsCommandOutput | ListStorageLensConfigurationsCommandOutput | PutAccessPointConfigurationForObjectLambdaCommandOutput | PutAccessPointPolicyCommandOutput | PutAccessPointPolicyForObjectLambdaCommandOutput | PutBucketLifecycleConfigurationCommandOutput | PutBucketPolicyCommandOutput | PutBucketTaggingCommandOutput | PutJobTaggingCommandOutput | PutMultiRegionAccessPointPolicyCommandOutput | PutPublicAccessBlockCommandOutput | PutStorageLensConfigurationCommandOutput | PutStorageLensConfigurationTaggingCommandOutput | UpdateJobPriorityCommandOutput | UpdateJobStatusCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * A function that, given a hash constructor and a stream, calculates the
                * hash of the streamed value.
                * @internal
                */
            streamHasher?: __StreamHasher<Readable> | __StreamHasher<Blob>;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes MD5 hashes.
                * @internal
                */
            md5?: __HashConstructor;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type S3ControlClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & S3ControlInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of S3ControlClient class constructor that set the region, credentials and other options.
        */
    export interface S3ControlClientConfig extends S3ControlClientConfigType {
    }
    type S3ControlClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & S3ControlResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of S3ControlClient class. This is resolved and normalized from the {@link S3ControlClientConfig | constructor configuration interface}.
        */
    export interface S3ControlClientResolvedConfig extends S3ControlClientResolvedConfigType {
    }
    /**
        * <p> Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. </p>
        */
    export class S3ControlClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, S3ControlClientResolvedConfig> {
            /**
                * The resolved configuration of S3ControlClient class. This is resolved and normalized from the {@link S3ControlClientConfig | constructor configuration interface}.
                */
            readonly config: S3ControlClientResolvedConfig;
            constructor(configuration: S3ControlClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { S3ControlServiceException as __BaseException } from "@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/S3ControlServiceException";
    /**
        * <p>The container for abort incomplete multipart upload</p>
        */
    export interface AbortIncompleteMultipartUpload {
            /**
                * <p>Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload to
                *          the Outposts bucket.</p>
                */
            DaysAfterInitiation?: number;
    }
    export namespace AbortIncompleteMultipartUpload {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AbortIncompleteMultipartUpload) => any;
    }
    export enum NetworkOrigin {
            Internet = "Internet",
            VPC = "VPC"
    }
    /**
        * <p>The virtual private cloud (VPC) configuration for an access point.</p>
        */
    export interface VpcConfiguration {
            /**
                * <p>If this field is specified, this access point will only allow connections from the specified VPC
                *          ID.</p>
                */
            VpcId: string | undefined;
    }
    export namespace VpcConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: VpcConfiguration) => any;
    }
    /**
        * <p>An access point used to access a bucket.</p>
        */
    export interface AccessPoint {
            /**
                * <p>The name of this access point.</p>
                */
            Name: string | undefined;
            /**
                * <p>Indicates whether this access point allows access from the public internet. If
                *             <code>VpcConfiguration</code> is specified for this access point, then
                *             <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn't allow access from
                *          the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and
                *          the access point allows access from the public internet, subject to the access point and bucket access
                *          policies.</p>
                */
            NetworkOrigin: NetworkOrigin | string | undefined;
            /**
                * <p>The virtual private cloud (VPC) configuration for this access point, if one exists.</p>
                *          <note>
                *             <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other
                *                Amazon Web Services.</p>
                *          </note>
                */
            VpcConfiguration?: VpcConfiguration;
            /**
                * <p>The name of the bucket associated with this access point.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>The ARN for the access point.</p>
                */
            AccessPointArn?: string;
            /**
                * <p>The name or alias of the access point.</p>
                */
            Alias?: string;
    }
    export namespace AccessPoint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccessPoint) => any;
    }
    /**
        * <p>A container for the activity metrics.</p>
        */
    export interface ActivityMetrics {
            /**
                * <p>A container for whether the activity metrics are enabled.</p>
                */
            IsEnabled?: boolean;
    }
    export namespace ActivityMetrics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ActivityMetrics) => any;
    }
    /**
        * <p></p>
        */
    export interface SelectionCriteria {
            /**
                * <p>A container for the delimiter of the selection criteria being used.</p>
                */
            Delimiter?: string;
            /**
                * <p>The max depth of the selection criteria</p>
                */
            MaxDepth?: number;
            /**
                * <p>The minimum number of storage bytes percentage whose metrics will be selected.</p>
                *          <note>
                *             <p>You must choose a value greater than or equal to <code>1.0</code>.</p>
                *          </note>
                */
            MinStorageBytesPercentage?: number;
    }
    export namespace SelectionCriteria {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SelectionCriteria) => any;
    }
    /**
        * <p>A container for the prefix-level storage metrics for S3 Storage Lens.</p>
        */
    export interface PrefixLevelStorageMetrics {
            /**
                * <p>A container for whether prefix-level storage metrics are enabled.</p>
                */
            IsEnabled?: boolean;
            /**
                * <p></p>
                */
            SelectionCriteria?: SelectionCriteria;
    }
    export namespace PrefixLevelStorageMetrics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PrefixLevelStorageMetrics) => any;
    }
    /**
        * <p>A container for the prefix-level configuration.</p>
        */
    export interface PrefixLevel {
            /**
                * <p>A container for the prefix-level storage metrics for S3 Storage Lens.</p>
                */
            StorageMetrics: PrefixLevelStorageMetrics | undefined;
    }
    export namespace PrefixLevel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PrefixLevel) => any;
    }
    /**
        * <p>A container for the bucket-level configuration.</p>
        */
    export interface BucketLevel {
            /**
                * <p>A container for the bucket-level activity metrics for Amazon S3 Storage Lens</p>
                */
            ActivityMetrics?: ActivityMetrics;
            /**
                * <p>A container for the bucket-level prefix-level metrics for S3 Storage Lens</p>
                */
            PrefixLevel?: PrefixLevel;
    }
    export namespace BucketLevel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: BucketLevel) => any;
    }
    /**
        * <p>A container for the account level Amazon S3 Storage Lens configuration.</p>
        */
    export interface AccountLevel {
            /**
                * <p>A container for the S3 Storage Lens activity metrics.</p>
                */
            ActivityMetrics?: ActivityMetrics;
            /**
                * <p>A container for the S3 Storage Lens bucket-level configuration.</p>
                */
            BucketLevel: BucketLevel | undefined;
    }
    export namespace AccountLevel {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccountLevel) => any;
    }
    /**
        * <p>Error details for the failed asynchronous operation.</p>
        */
    export interface AsyncErrorDetails {
            /**
                * <p>A string that uniquely identifies the error condition.</p>
                */
            Code?: string;
            /**
                * <p>A generic descritpion of the error condition in English.</p>
                */
            Message?: string;
            /**
                * <p>The identifier of the resource associated with the error.</p>
                */
            Resource?: string;
            /**
                * <p>The ID of the request associated with the error.</p>
                */
            RequestId?: string;
    }
    export namespace AsyncErrorDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AsyncErrorDetails) => any;
    }
    export enum AsyncOperationName {
            CreateMultiRegionAccessPoint = "CreateMultiRegionAccessPoint",
            DeleteMultiRegionAccessPoint = "DeleteMultiRegionAccessPoint",
            PutMultiRegionAccessPointPolicy = "PutMultiRegionAccessPointPolicy"
    }
    /**
        * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3
        *          account. You can enable the configuration options in any combination. For more information
        *          about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p>
        *          <p>This is not supported for Amazon S3 on Outposts.</p>
        */
    export interface PublicAccessBlockConfiguration {
            /**
                * <p>Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets
                *          in this account. Setting this element to <code>TRUE</code> causes the following
                *          behavior:</p>
                *          <ul>
                *             <li>
                *                <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is
                *                public.</p>
                *             </li>
                *             <li>
                *                <p>PUT Object calls fail if the request includes a public ACL.</p>
                *             </li>
                *             <li>
                *                <p>PUT Bucket calls fail if the request includes a public ACL.</p>
                *             </li>
                *          </ul>
                *          <p>Enabling this setting doesn't affect existing policies or ACLs.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            BlockPublicAcls?: boolean;
            /**
                * <p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting
                *          this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in
                *          this account and any objects that they contain. </p>
                *          <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't
                *          prevent new public ACLs from being set.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            IgnorePublicAcls?: boolean;
            /**
                * <p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account.
                *          Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket
                *          policy if the specified bucket policy allows public access. </p>
                *          <p>Enabling this setting doesn't affect existing bucket policies.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            BlockPublicPolicy?: boolean;
            /**
                * <p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this
                *          account. Setting this element to <code>TRUE</code> restricts access to buckets with public
                *          policies to only Amazon Web Service principals and authorized users within this
                *          account.</p>
                *          <p>Enabling this setting doesn't affect previously stored bucket policies, except that
                *          public and cross-account access within any public bucket policy, including non-public
                *          delegation to specific accounts, is blocked.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            RestrictPublicBuckets?: boolean;
    }
    export namespace PublicAccessBlockConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublicAccessBlockConfiguration) => any;
    }
    /**
        * <p>A Region that supports a Multi-Region Access Point as well as the associated bucket for the Region.</p>
        */
    export interface Region {
            /**
                * <p>The name of the associated bucket for the Region.</p>
                */
            Bucket: string | undefined;
    }
    export namespace Region {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Region) => any;
    }
    /**
        * <p>A container for the information associated with a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a> request. </p>
        */
    export interface CreateMultiRegionAccessPointInput {
            /**
                * <p>The name of the Multi-Region Access Point associated with this request.</p>
                */
            Name: string | undefined;
            /**
                * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3
                *          account. You can enable the configuration options in any combination. For more information
                *          about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            PublicAccessBlock?: PublicAccessBlockConfiguration;
            /**
                * <p>The buckets in different Regions that are associated with the Multi-Region Access Point.</p>
                */
            Regions: Region[] | undefined;
    }
    export namespace CreateMultiRegionAccessPointInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMultiRegionAccessPointInput) => any;
    }
    /**
        * <p>A container for the information associated with a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a> request.</p>
        */
    export interface DeleteMultiRegionAccessPointInput {
            /**
                * <p>The name of the Multi-Region Access Point associated with this request.</p>
                */
            Name: string | undefined;
    }
    export namespace DeleteMultiRegionAccessPointInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMultiRegionAccessPointInput) => any;
    }
    /**
        * <p>A container for the information associated with a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPoint.html">PutMultiRegionAccessPoint</a> request.</p>
        */
    export interface PutMultiRegionAccessPointPolicyInput {
            /**
                * <p>The name of the Multi-Region Access Point associated with the request.</p>
                */
            Name: string | undefined;
            /**
                * <p>The policy details for the <code>PutMultiRegionAccessPoint</code> request.</p>
                */
            Policy: string | undefined;
    }
    export namespace PutMultiRegionAccessPointPolicyInput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMultiRegionAccessPointPolicyInput) => any;
    }
    /**
        * <p>A container for the request parameters associated with an asynchronous request.</p>
        */
    export interface AsyncRequestParameters {
            /**
                * <p>A container of the parameters for a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint</a> request.</p>
                */
            CreateMultiRegionAccessPointRequest?: CreateMultiRegionAccessPointInput;
            /**
                * <p>A container of the parameters for a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint</a> request.</p>
                */
            DeleteMultiRegionAccessPointRequest?: DeleteMultiRegionAccessPointInput;
            /**
                * <p>A container of the parameters for a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPoint.html">PutMultiRegionAccessPoint</a> request.</p>
                */
            PutMultiRegionAccessPointPolicyRequest?: PutMultiRegionAccessPointPolicyInput;
    }
    export namespace AsyncRequestParameters {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AsyncRequestParameters) => any;
    }
    /**
        * <p>Status information for a single Multi-Region Access Point Region.</p>
        */
    export interface MultiRegionAccessPointRegionalResponse {
            /**
                * <p>The name of the Region in the Multi-Region Access Point.</p>
                */
            Name?: string;
            /**
                * <p>The current status of the Multi-Region Access Point in this Region.</p>
                */
            RequestStatus?: string;
    }
    export namespace MultiRegionAccessPointRegionalResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MultiRegionAccessPointRegionalResponse) => any;
    }
    /**
        * <p>The Multi-Region Access Point details that are returned when querying about an asynchronous request.</p>
        */
    export interface MultiRegionAccessPointsAsyncResponse {
            /**
                * <p>A collection of status information for the different Regions that a Multi-Region Access Point
                *          supports.</p>
                */
            Regions?: MultiRegionAccessPointRegionalResponse[];
    }
    export namespace MultiRegionAccessPointsAsyncResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MultiRegionAccessPointsAsyncResponse) => any;
    }
    /**
        * <p>A container for the response details that are returned when querying about an
        *          asynchronous request.</p>
        */
    export interface AsyncResponseDetails {
            /**
                * <p>The details for the Multi-Region Access Point.</p>
                */
            MultiRegionAccessPointDetails?: MultiRegionAccessPointsAsyncResponse;
            /**
                * <p>Error details for an asynchronous request.</p>
                */
            ErrorDetails?: AsyncErrorDetails;
    }
    export namespace AsyncResponseDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AsyncResponseDetails) => any;
    }
    /**
        * <p>A container for the information about an asynchronous operation.</p>
        */
    export interface AsyncOperation {
            /**
                * <p>The time that the request was sent to the service.</p>
                */
            CreationTime?: Date;
            /**
                * <p>The specific operation for the asynchronous request.</p>
                */
            Operation?: AsyncOperationName | string;
            /**
                * <p>The request token associated with the request.</p>
                */
            RequestTokenARN?: string;
            /**
                * <p>The parameters associated with the request.</p>
                */
            RequestParameters?: AsyncRequestParameters;
            /**
                * <p>The current status of the request.</p>
                */
            RequestStatus?: string;
            /**
                * <p>The details of the response.</p>
                */
            ResponseDetails?: AsyncResponseDetails;
    }
    export namespace AsyncOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AsyncOperation) => any;
    }
    /**
        * <p>Lambda function used to transform objects through an Object Lambda Access Point.</p>
        */
    export interface AwsLambdaTransformation {
            /**
                * <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
                */
            FunctionArn: string | undefined;
            /**
                * <p>Additional JSON that provides supplemental data to the Lambda function used to transform
                *          objects.</p>
                */
            FunctionPayload?: string;
    }
    export namespace AwsLambdaTransformation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AwsLambdaTransformation) => any;
    }
    export interface CreateAccessPointRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the bucket for which you want to create an
                *          access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name you want to assign to this access point.</p>
                */
            Name: string | undefined;
            /**
                * <p>The name of the bucket that you want to associate this access point with.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
            /**
                * <p>If you include this field, Amazon S3 restricts access to this access point to requests from the
                *          specified virtual private cloud (VPC).</p>
                *          <note>
                *             <p>This is required for creating an access point for Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            VpcConfiguration?: VpcConfiguration;
            /**
                * <p> The <code>PublicAccessBlock</code> configuration that you want to apply to the access point.
                *       </p>
                */
            PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
    }
    export namespace CreateAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPointRequest) => any;
    }
    export interface CreateAccessPointResult {
            /**
                * <p>The ARN of the access point.</p>
                *          <note>
                *             <p>This is only supported by Amazon S3 on Outposts.</p>
                *          </note>
                */
            AccessPointArn?: string;
            /**
                * <p>The name or alias of the access point.</p>
                */
            Alias?: string;
    }
    export namespace CreateAccessPointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPointResult) => any;
    }
    export enum ObjectLambdaAllowedFeature {
            GetObjectPartNumber = "GetObject-PartNumber",
            GetObjectRange = "GetObject-Range"
    }
    export enum ObjectLambdaTransformationConfigurationAction {
            GetObject = "GetObject"
    }
    /**
        * <p>A container for AwsLambdaTransformation.</p>
        */
    export type ObjectLambdaContentTransformation = ObjectLambdaContentTransformation.AwsLambdaMember | ObjectLambdaContentTransformation.$UnknownMember;
    export namespace ObjectLambdaContentTransformation {
            /**
                * <p>A container for an Lambda function.</p>
                */
            interface AwsLambdaMember {
                    AwsLambda: AwsLambdaTransformation;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    AwsLambda?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    AwsLambda: (value: AwsLambdaTransformation) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: ObjectLambdaContentTransformation, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObjectLambdaContentTransformation) => any;
    }
    /**
        * <p>A configuration used when creating an Object Lambda Access Point transformation.</p>
        */
    export interface ObjectLambdaTransformationConfiguration {
            /**
                * <p>A container for the action of an Object Lambda Access Point configuration. Valid input is
                *             <code>GetObject</code>.</p>
                */
            Actions: (ObjectLambdaTransformationConfigurationAction | string)[] | undefined;
            /**
                * <p>A container for the content transformation of an Object Lambda Access Point configuration.</p>
                */
            ContentTransformation: ObjectLambdaContentTransformation | undefined;
    }
    export namespace ObjectLambdaTransformationConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObjectLambdaTransformationConfiguration) => any;
    }
    /**
        * <p>A configuration used when creating an Object Lambda Access Point.</p>
        */
    export interface ObjectLambdaConfiguration {
            /**
                * <p>Standard access point associated with the Object Lambda Access Point.</p>
                */
            SupportingAccessPoint: string | undefined;
            /**
                * <p>A container for whether the CloudWatch metrics configuration is enabled.</p>
                */
            CloudWatchMetricsEnabled?: boolean;
            /**
                * <p>A container for allowed features. Valid inputs are <code>GetObject-Range</code> and
                *             <code>GetObject-PartNumber</code>.</p>
                */
            AllowedFeatures?: (ObjectLambdaAllowedFeature | string)[];
            /**
                * <p>A container for transformation configurations for an Object Lambda Access Point.</p>
                */
            TransformationConfigurations: ObjectLambdaTransformationConfiguration[] | undefined;
    }
    export namespace ObjectLambdaConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObjectLambdaConfiguration) => any;
    }
    export interface CreateAccessPointForObjectLambdaRequest {
            /**
                * <p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name you want to assign to this Object Lambda Access Point.</p>
                */
            Name: string | undefined;
            /**
                * <p>Object Lambda Access Point configuration as a JSON document.</p>
                */
            Configuration: ObjectLambdaConfiguration | undefined;
    }
    export namespace CreateAccessPointForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPointForObjectLambdaRequest) => any;
    }
    export interface CreateAccessPointForObjectLambdaResult {
            /**
                * <p>Specifies the ARN for the Object Lambda Access Point.</p>
                */
            ObjectLambdaAccessPointArn?: string;
    }
    export namespace CreateAccessPointForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAccessPointForObjectLambdaResult) => any;
    }
    /**
        * <p>The requested Outposts bucket name is not available. The bucket namespace is shared by
        *          all users of the Outposts in this Region. Select a different name and try
        *          again.</p>
        */
    export class BucketAlreadyExists extends __BaseException {
            readonly name: "BucketAlreadyExists";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BucketAlreadyExists, __BaseException>);
    }
    /**
        * <p>The Outposts bucket you tried to create already exists, and you own it. </p>
        */
    export class BucketAlreadyOwnedByYou extends __BaseException {
            readonly name: "BucketAlreadyOwnedByYou";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BucketAlreadyOwnedByYou, __BaseException>);
    }
    export type BucketCannedACL = "authenticated-read" | "private" | "public-read" | "public-read-write";
    export type BucketLocationConstraint = "EU" | "ap-northeast-1" | "ap-south-1" | "ap-southeast-1" | "ap-southeast-2" | "cn-north-1" | "eu-central-1" | "eu-west-1" | "sa-east-1" | "us-west-1" | "us-west-2";
    /**
        * <p>The container for the bucket configuration.</p>
        *          <note>
        *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
        *          </note>
        */
    export interface CreateBucketConfiguration {
            /**
                * <p>Specifies the Region where the bucket will be created. If you are creating a bucket on
                *          the US East (N. Virginia) Region (us-east-1), you do not need to specify the location. </p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            LocationConstraint?: BucketLocationConstraint | string;
    }
    export namespace CreateBucketConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBucketConfiguration) => any;
    }
    export interface CreateBucketRequest {
            /**
                * <p>The canned ACL to apply to the bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            ACL?: BucketCannedACL | string;
            /**
                * <p>The name of the bucket.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>The configuration information for the bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            CreateBucketConfiguration?: CreateBucketConfiguration;
            /**
                * <p>Allows grantee the read, write, read ACP, and write ACP permissions on the
                *          bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            GrantFullControl?: string;
            /**
                * <p>Allows grantee to list the objects in the bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            GrantRead?: string;
            /**
                * <p>Allows grantee to read the bucket ACL.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            GrantReadACP?: string;
            /**
                * <p>Allows grantee to create, overwrite, and delete any object in the bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            GrantWrite?: string;
            /**
                * <p>Allows grantee to write the ACL for the applicable bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            GrantWriteACP?: string;
            /**
                * <p>Specifies whether you want S3 Object Lock to be enabled for the new bucket.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            ObjectLockEnabledForBucket?: boolean;
            /**
                * <p>The ID of the Outposts where the bucket is being created.</p>
                *          <note>
                *             <p>This is required by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            OutpostId?: string;
    }
    export namespace CreateBucketRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBucketRequest) => any;
    }
    export interface CreateBucketResult {
            /**
                * <p>The location of the bucket.</p>
                */
            Location?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            BucketArn?: string;
    }
    export namespace CreateBucketResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateBucketResult) => any;
    }
    /**
        * <p></p>
        */
    export class BadRequestException extends __BaseException {
            readonly name: "BadRequestException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<BadRequestException, __BaseException>);
    }
    /**
        * <p>Contains the information required to locate a manifest object.</p>
        */
    export interface JobManifestLocation {
            /**
                * <p>The Amazon Resource Name (ARN) for a manifest object.</p>
                *          <important>
                *             <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using
                *          XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
                *             XML related object key constraints</a>.</p>
                *          </important>
                */
            ObjectArn: string | undefined;
            /**
                * <p>The optional version ID to identify a specific version of the manifest object.</p>
                */
            ObjectVersionId?: string;
            /**
                * <p>The ETag for the specified manifest object.</p>
                */
            ETag: string | undefined;
    }
    export namespace JobManifestLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobManifestLocation) => any;
    }
    export enum JobManifestFieldName {
            Bucket = "Bucket",
            Ignore = "Ignore",
            Key = "Key",
            VersionId = "VersionId"
    }
    export enum JobManifestFormat {
            S3BatchOperations_CSV_20180820 = "S3BatchOperations_CSV_20180820",
            S3InventoryReport_CSV_20161130 = "S3InventoryReport_CSV_20161130"
    }
    /**
        * <p>Describes the format of a manifest. If the manifest is in CSV format, also describes the
        *          columns contained within the manifest.</p>
        */
    export interface JobManifestSpec {
            /**
                * <p>Indicates which of the available formats the specified manifest uses.</p>
                */
            Format: JobManifestFormat | string | undefined;
            /**
                * <p>If the specified manifest object is in the <code>S3BatchOperations_CSV_20180820</code>
                *          format, this element describes which columns contain the required data.</p>
                */
            Fields?: (JobManifestFieldName | string)[];
    }
    export namespace JobManifestSpec {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobManifestSpec) => any;
    }
    /**
        * <p>Contains the configuration information for a job's manifest.</p>
        */
    export interface JobManifest {
            /**
                * <p>Describes the format of the specified job's manifest. If the manifest is in CSV format,
                *          also describes the columns contained within the manifest.</p>
                */
            Spec: JobManifestSpec | undefined;
            /**
                * <p>Contains the information required to locate the specified job's manifest.</p>
                */
            Location: JobManifestLocation | undefined;
    }
    export namespace JobManifest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobManifest) => any;
    }
    export enum ReplicationStatus {
            COMPLETED = "COMPLETED",
            FAILED = "FAILED",
            NONE = "NONE",
            REPLICA = "REPLICA"
    }
    /**
        * <p>The filter used to describe a set of objects for the job's manifest.</p>
        */
    export interface JobManifestGeneratorFilter {
            /**
                * <p>Include objects in the generated manifest only if they are eligible for replication
                *          according to the Replication configuration on the source bucket.</p>
                */
            EligibleForReplication?: boolean;
            /**
                * <p>If provided, the generated manifest should include only source bucket objects that were
                *          created after this time.</p>
                */
            CreatedAfter?: Date;
            /**
                * <p>If provided, the generated manifest should include only source bucket objects that were
                *          created before this time.</p>
                */
            CreatedBefore?: Date;
            /**
                * <p>If provided, the generated manifest should include only source bucket objects that have
                *          one of the specified Replication statuses.</p>
                */
            ObjectReplicationStatuses?: (ReplicationStatus | string)[];
    }
    export namespace JobManifestGeneratorFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobManifestGeneratorFilter) => any;
    }
    /**
        * <p>Configuration for the use of SSE-KMS to encrypt generated manifest objects.</p>
        */
    export interface SSEKMSEncryption {
            /**
                * <p>Specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed
                *          key to use for encrypting generated manifest objects.</p>
                */
            KeyId: string | undefined;
    }
    export namespace SSEKMSEncryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SSEKMSEncryption) => any;
    }
    /**
        * <p>Configuration for the use of SSE-S3 to encrypt generated manifest objects.</p>
        */
    export interface SSES3Encryption {
    }
    export namespace SSES3Encryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SSES3Encryption) => any;
    }
    /**
        * <p>The encryption configuration to use when storing the generated manifest.</p>
        */
    export interface GeneratedManifestEncryption {
            /**
                * <p>Specifies the use of SSE-S3 to encrypt generated manifest objects.</p>
                */
            SSES3?: SSES3Encryption;
            /**
                * <p>Configuration details on how SSE-KMS is used to encrypt generated manifest
                *          objects.</p>
                */
            SSEKMS?: SSEKMSEncryption;
    }
    export namespace GeneratedManifestEncryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GeneratedManifestEncryption) => any;
    }
    export enum GeneratedManifestFormat {
            S3InventoryReport_CSV_20211130 = "S3InventoryReport_CSV_20211130"
    }
    /**
        * <p>Location details for where the generated manifest should be written.</p>
        */
    export interface S3ManifestOutputLocation {
            /**
                * <p>The Account ID that owns the bucket the generated manifest is written to.</p>
                */
            ExpectedManifestBucketOwner?: string;
            /**
                * <p>The bucket ARN the generated manifest should be written to.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>Prefix identifying one or more objects to which the manifest applies.</p>
                */
            ManifestPrefix?: string;
            /**
                * <p>Specifies what encryption should be used when the generated manifest objects are
                *          written.</p>
                */
            ManifestEncryption?: GeneratedManifestEncryption;
            /**
                * <p>The format of the generated manifest.</p>
                */
            ManifestFormat: GeneratedManifestFormat | string | undefined;
    }
    export namespace S3ManifestOutputLocation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ManifestOutputLocation) => any;
    }
    /**
        * <p>The container for the service that will create the S3 manifest.</p>
        */
    export interface S3JobManifestGenerator {
            /**
                * <p>The Amazon Web Services account ID that owns the bucket the generated manifest is written to. If
                *          provided the generated manifest bucket's owner Amazon Web Services account ID must match this value, else
                *          the job fails.</p>
                */
            ExpectedBucketOwner?: string;
            /**
                * <p>The source bucket used by the ManifestGenerator.</p>
                */
            SourceBucket: string | undefined;
            /**
                * <p>Specifies the location the generated manifest will be written to.</p>
                */
            ManifestOutputLocation?: S3ManifestOutputLocation;
            /**
                * <p>Specifies rules the S3JobManifestGenerator should use to use to decide whether an object
                *          in the source bucket should or should not be included in the generated job manifest.</p>
                */
            Filter?: JobManifestGeneratorFilter;
            /**
                * <p>Determines whether or not to write the job's generated manifest to a bucket.</p>
                */
            EnableManifestOutput: boolean | undefined;
    }
    export namespace S3JobManifestGenerator {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3JobManifestGenerator) => any;
    }
    /**
        * <p>Configures the type of the job's ManifestGenerator.</p>
        */
    export type JobManifestGenerator = JobManifestGenerator.S3JobManifestGeneratorMember | JobManifestGenerator.$UnknownMember;
    export namespace JobManifestGenerator {
            /**
                * <p>The S3 job ManifestGenerator's configuration details.</p>
                */
            interface S3JobManifestGeneratorMember {
                    S3JobManifestGenerator: S3JobManifestGenerator;
                    $unknown?: never;
            }
            interface $UnknownMember {
                    S3JobManifestGenerator?: never;
                    $unknown: [string, any];
            }
            interface Visitor<T> {
                    S3JobManifestGenerator: (value: S3JobManifestGenerator) => T;
                    _: (name: string, value: any) => T;
            }
            const visit: <T>(value: JobManifestGenerator, visitor: Visitor<T>) => T;
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobManifestGenerator) => any;
    }
    /**
        * <p>Contains the configuration parameters for a <code>Lambda Invoke</code> operation.</p>
        */
    export interface LambdaInvokeOperation {
            /**
                * <p>The Amazon Resource Name (ARN) for the Lambda function that the specified job will
                *          invoke on every object in the manifest.</p>
                */
            FunctionArn?: string;
    }
    export namespace LambdaInvokeOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LambdaInvokeOperation) => any;
    }
    /**
        * <p>Contains no configuration parameters because the DELETE Object tagging API only accepts
        *          the bucket name and key name as parameters, which are defined in the job's manifest.</p>
        */
    export interface S3DeleteObjectTaggingOperation {
    }
    export namespace S3DeleteObjectTaggingOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3DeleteObjectTaggingOperation) => any;
    }
    export enum S3GlacierJobTier {
            BULK = "BULK",
            STANDARD = "STANDARD"
    }
    /**
        * <p>Contains the configuration parameters for an S3 Initiate Restore Object job.
        *          S3 Batch Operations passes every object to the underlying POST Object restore API. For more
        *          information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html#RESTObjectPOSTrestore-restore-request">RestoreObject</a>.</p>
        */
    export interface S3InitiateRestoreObjectOperation {
            /**
                * <p>This argument specifies how long the S3 Glacier or S3 Glacier Deep Archive object remains
                *          available in Amazon S3. S3 Initiate Restore Object jobs that target S3 Glacier and S3 Glacier Deep Archive
                *          objects require <code>ExpirationInDays</code> set to 1 or greater.</p>
                *          <p>Conversely, do <i>not</i> set <code>ExpirationInDays</code> when creating
                *          S3 Initiate Restore Object jobs that target S3 Intelligent-Tiering Archive Access and
                *          Deep Archive Access tier objects. Objects in S3 Intelligent-Tiering archive access tiers are
                *          not subject to restore expiry, so specifying <code>ExpirationInDays</code> results in
                *          restore request failure.</p>
                *          <p>S3 Batch Operations jobs can operate either on S3 Glacier and S3 Glacier Deep Archive storage class
                *          objects or on S3 Intelligent-Tiering Archive Access and Deep Archive Access storage tier
                *          objects, but not both types in the same job. If you need to restore objects of both types
                *          you <i>must</i> create separate Batch Operations jobs. </p>
                */
            ExpirationInDays?: number;
            /**
                * <p>S3 Batch Operations supports <code>STANDARD</code> and <code>BULK</code> retrieval tiers, but
                *          not the <code>EXPEDITED</code> retrieval tier.</p>
                */
            GlacierJobTier?: S3GlacierJobTier | string;
    }
    export namespace S3InitiateRestoreObjectOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3InitiateRestoreObjectOperation) => any;
    }
    export enum S3GranteeTypeIdentifier {
            CANONICAL = "id",
            EMAIL_ADDRESS = "emailAddress",
            GROUP = "uri"
    }
    /**
        * <p></p>
        */
    export interface S3Grantee {
            /**
                * <p></p>
                */
            TypeIdentifier?: S3GranteeTypeIdentifier | string;
            /**
                * <p></p>
                */
            Identifier?: string;
            /**
                * <p></p>
                */
            DisplayName?: string;
    }
    export namespace S3Grantee {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Grantee) => any;
    }
    export enum S3Permission {
            FULL_CONTROL = "FULL_CONTROL",
            READ = "READ",
            READ_ACP = "READ_ACP",
            WRITE = "WRITE",
            WRITE_ACP = "WRITE_ACP"
    }
    /**
        * <p></p>
        */
    export interface S3Grant {
            /**
                * <p></p>
                */
            Grantee?: S3Grantee;
            /**
                * <p></p>
                */
            Permission?: S3Permission | string;
    }
    export namespace S3Grant {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Grant) => any;
    }
    /**
        * <p></p>
        */
    export interface S3ObjectOwner {
            /**
                * <p></p>
                */
            ID?: string;
            /**
                * <p></p>
                */
            DisplayName?: string;
    }
    export namespace S3ObjectOwner {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ObjectOwner) => any;
    }
    /**
        * <p></p>
        */
    export interface S3AccessControlList {
            /**
                * <p></p>
                */
            Owner: S3ObjectOwner | undefined;
            /**
                * <p></p>
                */
            Grants?: S3Grant[];
    }
    export namespace S3AccessControlList {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3AccessControlList) => any;
    }
    export enum S3CannedAccessControlList {
            AUTHENTICATED_READ = "authenticated-read",
            AWS_EXEC_READ = "aws-exec-read",
            BUCKET_OWNER_FULL_CONTROL = "bucket-owner-full-control",
            BUCKET_OWNER_READ = "bucket-owner-read",
            PRIVATE = "private",
            PUBLIC_READ = "public-read",
            PUBLIC_READ_WRITE = "public-read-write"
    }
    /**
        * <p></p>
        */
    export interface S3AccessControlPolicy {
            /**
                * <p></p>
                */
            AccessControlList?: S3AccessControlList;
            /**
                * <p></p>
                */
            CannedAccessControlList?: S3CannedAccessControlList | string;
    }
    export namespace S3AccessControlPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3AccessControlPolicy) => any;
    }
    /**
        * <p>Contains the configuration parameters for a Set Object ACL operation. S3 Batch Operations
        *          passes every object to the underlying PUT Object acl API. For more information about the
        *          parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTacl.html">PUT Object acl</a>.</p>
        */
    export interface S3SetObjectAclOperation {
            /**
                * <p></p>
                */
            AccessControlPolicy?: S3AccessControlPolicy;
    }
    export namespace S3SetObjectAclOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3SetObjectAclOperation) => any;
    }
    export enum S3ChecksumAlgorithm {
            CRC32 = "CRC32",
            CRC32C = "CRC32C",
            SHA1 = "SHA1",
            SHA256 = "SHA256"
    }
    export enum S3MetadataDirective {
            COPY = "COPY",
            REPLACE = "REPLACE"
    }
    export enum S3SSEAlgorithm {
            AES256 = "AES256",
            KMS = "KMS"
    }
    /**
        * <p></p>
        */
    export interface S3ObjectMetadata {
            /**
                * <p></p>
                */
            CacheControl?: string;
            /**
                * <p></p>
                */
            ContentDisposition?: string;
            /**
                * <p></p>
                */
            ContentEncoding?: string;
            /**
                * <p></p>
                */
            ContentLanguage?: string;
            /**
                * <p></p>
                */
            UserMetadata?: Record<string, string>;
            /**
                * <p></p>
                */
            ContentLength?: number;
            /**
                * <p></p>
                */
            ContentMD5?: string;
            /**
                * <p></p>
                */
            ContentType?: string;
            /**
                * <p></p>
                */
            HttpExpiresDate?: Date;
            /**
                * <p></p>
                */
            RequesterCharged?: boolean;
            /**
                * <p></p>
                */
            SSEAlgorithm?: S3SSEAlgorithm | string;
    }
    export namespace S3ObjectMetadata {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ObjectMetadata) => any;
    }
    /**
        * <p></p>
        */
    export interface S3Tag {
            /**
                * <p></p>
                */
            Key: string | undefined;
            /**
                * <p></p>
                */
            Value: string | undefined;
    }
    export namespace S3Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Tag) => any;
    }
    export enum S3ObjectLockLegalHoldStatus {
            OFF = "OFF",
            ON = "ON"
    }
    export enum S3ObjectLockMode {
            COMPLIANCE = "COMPLIANCE",
            GOVERNANCE = "GOVERNANCE"
    }
    export enum S3StorageClass {
            DEEP_ARCHIVE = "DEEP_ARCHIVE",
            GLACIER = "GLACIER",
            GLACIER_IR = "GLACIER_IR",
            INTELLIGENT_TIERING = "INTELLIGENT_TIERING",
            ONEZONE_IA = "ONEZONE_IA",
            STANDARD = "STANDARD",
            STANDARD_IA = "STANDARD_IA"
    }
    /**
        * <p>Contains the configuration parameters for a PUT Copy object operation. S3 Batch Operations
        *          passes every object to the underlying PUT Copy object API. For more information about the
        *          parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectCOPY.html">PUT Object - Copy</a>.</p>
        */
    export interface S3CopyObjectOperation {
            /**
                * <p>Specifies the destination bucket ARN for the batch copy operation. For example, to copy
                *          objects to a bucket named "destinationBucket", set the TargetResource to
                *          "arn:aws:s3:::destinationBucket".</p>
                */
            TargetResource?: string;
            /**
                * <p></p>
                */
            CannedAccessControlList?: S3CannedAccessControlList | string;
            /**
                * <p></p>
                */
            AccessControlGrants?: S3Grant[];
            /**
                * <p></p>
                */
            MetadataDirective?: S3MetadataDirective | string;
            /**
                * <p></p>
                */
            ModifiedSinceConstraint?: Date;
            /**
                * <p>If you don't provide this parameter, Amazon S3 copies all the metadata from the original
                *          objects. If you specify an empty set, the new objects will have no tags. Otherwise, Amazon S3
                *          assigns the supplied tags to the new objects.</p>
                */
            NewObjectMetadata?: S3ObjectMetadata;
            /**
                * <p></p>
                */
            NewObjectTagging?: S3Tag[];
            /**
                * <p>Specifies an optional metadata property for website redirects,
                *             <code>x-amz-website-redirect-location</code>. Allows webpage redirects if the object is
                *          accessed through a website endpoint.</p>
                */
            RedirectLocation?: string;
            /**
                * <p></p>
                */
            RequesterPays?: boolean;
            /**
                * <p></p>
                */
            StorageClass?: S3StorageClass | string;
            /**
                * <p></p>
                */
            UnModifiedSinceConstraint?: Date;
            /**
                * <p></p>
                */
            SSEAwsKmsKeyId?: string;
            /**
                * <p>Specifies the folder prefix into which you would like the objects to be copied. For
                *          example, to copy objects into a folder named <code>Folder1</code> in the destination bucket, set the
                *          TargetKeyPrefix to <code>Folder1</code>.</p>
                */
            TargetKeyPrefix?: string;
            /**
                * <p>The legal hold status to be applied to all objects in the Batch Operations job.</p>
                */
            ObjectLockLegalHoldStatus?: S3ObjectLockLegalHoldStatus | string;
            /**
                * <p>The retention mode to be applied to all objects in the Batch Operations job.</p>
                */
            ObjectLockMode?: S3ObjectLockMode | string;
            /**
                * <p>The date when the applied object retention configuration expires on all objects in the
                *          Batch Operations job.</p>
                */
            ObjectLockRetainUntilDate?: Date;
            /**
                * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
                *          server-side encryption using Amazon Web Services KMS (SSE-KMS). Setting this header to <code>true</code>
                *          causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>
                *          <p>Specifying this header with an <i>object</i> action doesn’t affect
                *             <i>bucket-level</i> settings for S3 Bucket Key.</p>
                */
            BucketKeyEnabled?: boolean;
            /**
                * <p>Indicates the algorithm you want Amazon S3 to use to create the checksum. For more information
                *             see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CheckingObjectIntegrity.xml">
                *                 Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
                */
            ChecksumAlgorithm?: S3ChecksumAlgorithm | string;
    }
    export namespace S3CopyObjectOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3CopyObjectOperation) => any;
    }
    /**
        * <p>Whether S3 Object Lock legal hold will be applied to objects in an S3 Batch Operations
        *          job.</p>
        */
    export interface S3ObjectLockLegalHold {
            /**
                * <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations
                *          job.</p>
                */
            Status: S3ObjectLockLegalHoldStatus | string | undefined;
    }
    export namespace S3ObjectLockLegalHold {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ObjectLockLegalHold) => any;
    }
    /**
        * <p>Contains the configuration for an S3 Object Lock legal hold operation that an
        *          S3 Batch Operations job passes every object to the underlying <code>PutObjectLegalHold</code>
        *          API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-legal-hold.html">Using S3 Object Lock legal hold
        *             with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        */
    export interface S3SetObjectLegalHoldOperation {
            /**
                * <p>Contains the Object Lock legal hold status to be applied to all objects in the
                *          Batch Operations job.</p>
                */
            LegalHold: S3ObjectLockLegalHold | undefined;
    }
    export namespace S3SetObjectLegalHoldOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3SetObjectLegalHoldOperation) => any;
    }
    export enum S3ObjectLockRetentionMode {
            COMPLIANCE = "COMPLIANCE",
            GOVERNANCE = "GOVERNANCE"
    }
    /**
        * <p>Contains the S3 Object Lock retention mode to be applied to all objects in the
        *          S3 Batch Operations job. If you don't provide <code>Mode</code> and <code>RetainUntilDate</code>
        *          data types in your operation, you will remove the retention from your objects. For more
        *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using S3 Object Lock retention
        *             with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
        */
    export interface S3Retention {
            /**
                * <p>The date when the applied Object Lock retention will expire on all objects set by the
                *          Batch Operations job.</p>
                */
            RetainUntilDate?: Date;
            /**
                * <p>The Object Lock retention mode to be applied to all objects in the Batch Operations
                *          job.</p>
                */
            Mode?: S3ObjectLockRetentionMode | string;
    }
    export namespace S3Retention {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Retention) => any;
    }
    /**
        * <p>Contains the configuration parameters for the Object Lock retention action for an
        *          S3 Batch Operations job. Batch Operations passes every object to the underlying
        *             <code>PutObjectRetention</code> API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using
        *             S3 Object Lock retention with S3 Batch Operations</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        */
    export interface S3SetObjectRetentionOperation {
            /**
                * <p>Indicates if the action should be applied to objects in the Batch Operations job even if they
                *          have Object Lock <code> GOVERNANCE</code> type in place.</p>
                */
            BypassGovernanceRetention?: boolean;
            /**
                * <p>Contains the Object Lock retention mode to be applied to all objects in the Batch Operations
                *          job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using S3 Object Lock retention
                *             with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                */
            Retention: S3Retention | undefined;
    }
    export namespace S3SetObjectRetentionOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3SetObjectRetentionOperation) => any;
    }
    /**
        * <p>Contains the configuration parameters for a Set Object Tagging operation. S3 Batch Operations
        *          passes every object to the underlying PUT Object tagging API. For more information about
        *          the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html">PUT Object tagging</a>.</p>
        */
    export interface S3SetObjectTaggingOperation {
            /**
                * <p></p>
                */
            TagSet?: S3Tag[];
    }
    export namespace S3SetObjectTaggingOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3SetObjectTaggingOperation) => any;
    }
    /**
        * <p>Directs the specified job to invoke <code>ReplicateObject</code> on every object in the job's
        *          manifest.</p>
        */
    export interface S3ReplicateObjectOperation {
    }
    export namespace S3ReplicateObjectOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3ReplicateObjectOperation) => any;
    }
    /**
        * <p>The operation that you want this job to perform on every object listed in the manifest.
        *          For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Operations</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        */
    export interface JobOperation {
            /**
                * <p>Directs the specified job to invoke an Lambda function on every object in the
                *          manifest.</p>
                */
            LambdaInvoke?: LambdaInvokeOperation;
            /**
                * <p>Directs the specified job to run a PUT Copy object call on every object in the
                *          manifest.</p>
                */
            S3PutObjectCopy?: S3CopyObjectOperation;
            /**
                * <p>Directs the specified job to run a PUT Object acl call on every object in the
                *          manifest.</p>
                */
            S3PutObjectAcl?: S3SetObjectAclOperation;
            /**
                * <p>Directs the specified job to run a PUT Object tagging call on every object in the
                *          manifest.</p>
                */
            S3PutObjectTagging?: S3SetObjectTaggingOperation;
            /**
                * <p>Directs the specified job to execute a DELETE Object tagging call on every object in the
                *          manifest.</p>
                */
            S3DeleteObjectTagging?: S3DeleteObjectTaggingOperation;
            /**
                * <p>Directs the specified job to initiate restore requests for every archived object in the
                *          manifest.</p>
                */
            S3InitiateRestoreObject?: S3InitiateRestoreObjectOperation;
            /**
                * <p>Contains the configuration for an S3 Object Lock legal hold operation that an
                *          S3 Batch Operations job passes every object to the underlying <code>PutObjectLegalHold</code>
                *          API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-legal-hold.html">Using S3 Object Lock legal hold
                *             with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>
                */
            S3PutObjectLegalHold?: S3SetObjectLegalHoldOperation;
            /**
                * <p>Contains the configuration parameters for the Object Lock retention action for an
                *          S3 Batch Operations job. Batch Operations passes every object to the underlying
                *             <code>PutObjectRetention</code> API. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html">Using
                *             S3 Object Lock retention with S3 Batch Operations</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                */
            S3PutObjectRetention?: S3SetObjectRetentionOperation;
            /**
                * <p>Directs the specified job to invoke <code>ReplicateObject</code> on every object in the
                *          job's manifest.</p>
                */
            S3ReplicateObject?: S3ReplicateObjectOperation;
    }
    export namespace JobOperation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobOperation) => any;
    }
    export enum JobReportFormat {
            Report_CSV_20180820 = "Report_CSV_20180820"
    }
    export enum JobReportScope {
            AllTasks = "AllTasks",
            FailedTasksOnly = "FailedTasksOnly"
    }
    /**
        * <p>Contains the configuration parameters for a job-completion report.</p>
        */
    export interface JobReport {
            /**
                * <p>The Amazon Resource Name (ARN) for the bucket where specified job-completion report will
                *          be stored.</p>
                */
            Bucket?: string;
            /**
                * <p>The format of the specified job-completion report.</p>
                */
            Format?: JobReportFormat | string;
            /**
                * <p>Indicates whether the specified job will generate a job-completion report.</p>
                */
            Enabled: boolean | undefined;
            /**
                * <p>An optional prefix to describe where in the specified bucket the job-completion report
                *          will be stored. Amazon S3 stores the job-completion report at
                *             <code><prefix>/job-<job-id>/report.json</code>.</p>
                */
            Prefix?: string;
            /**
                * <p>Indicates whether the job-completion report will include details of all tasks or only
                *          failed tasks.</p>
                */
            ReportScope?: JobReportScope | string;
    }
    export namespace JobReport {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobReport) => any;
    }
    export interface CreateJobRequest {
            /**
                * <p>The Amazon Web Services account ID that creates the job.</p>
                */
            AccountId?: string;
            /**
                * <p>Indicates whether confirmation is required before Amazon S3 runs the job. Confirmation is
                *          only required for jobs created through the Amazon S3 console.</p>
                */
            ConfirmationRequired?: boolean;
            /**
                * <p>The action that you want this job to perform on every object listed in the manifest. For
                *          more information about the available actions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-actions.html">Operations</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                */
            Operation: JobOperation | undefined;
            /**
                * <p>Configuration parameters for the optional job-completion report.</p>
                */
            Report: JobReport | undefined;
            /**
                * <p>An idempotency token to ensure that you don't accidentally submit the same request
                *          twice. You can use any string up to the maximum length.</p>
                */
            ClientRequestToken?: string;
            /**
                * <p>Configuration parameters for the manifest.</p>
                */
            Manifest?: JobManifest;
            /**
                * <p>A description for this job. You can use any string within the permitted length.
                *          Descriptions don't need to be unique and can be used for multiple jobs.</p>
                */
            Description?: string;
            /**
                * <p>The numerical priority for this job. Higher numbers indicate higher priority.</p>
                */
            Priority: number | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will
                *          use to run this job's action on every object in the manifest.</p>
                */
            RoleArn: string | undefined;
            /**
                * <p>A set of tags to associate with the S3 Batch Operations job. This is an optional parameter.
                *       </p>
                */
            Tags?: S3Tag[];
            /**
                * <p>The attribute container for the ManifestGenerator details. Jobs must be created with
                *          either a manifest file or a ManifestGenerator, but not both.</p>
                */
            ManifestGenerator?: JobManifestGenerator;
    }
    export namespace CreateJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobRequest) => any;
    }
    export interface CreateJobResult {
            /**
                * <p>The ID for this job. Amazon S3 generates this ID automatically and returns it after a
                *          successful <code>Create Job</code> request.</p>
                */
            JobId?: string;
    }
    export namespace CreateJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateJobResult) => any;
    }
    /**
        * <p></p>
        */
    export class IdempotencyException extends __BaseException {
            readonly name: "IdempotencyException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<IdempotencyException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class InternalServiceException extends __BaseException {
            readonly name: "InternalServiceException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServiceException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    export interface CreateMultiRegionAccessPointRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point. The owner of the Multi-Region Access Point also must own
                *          the underlying buckets.</p>
                */
            AccountId?: string;
            /**
                * <p>An idempotency token used to identify the request and guarantee that requests are
                *          unique.</p>
                */
            ClientToken?: string;
            /**
                * <p>A container element containing details about the Multi-Region Access Point.</p>
                */
            Details: CreateMultiRegionAccessPointInput | undefined;
    }
    export namespace CreateMultiRegionAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMultiRegionAccessPointRequest) => any;
    }
    export interface CreateMultiRegionAccessPointResult {
            /**
                * <p>The request token associated with the request. You can use this token with <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous
                *          requests.</p>
                */
            RequestTokenARN?: string;
    }
    export namespace CreateMultiRegionAccessPointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateMultiRegionAccessPointResult) => any;
    }
    export interface DeleteAccessPointRequest {
            /**
                * <p>The account ID for the account that owns the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point you want to delete.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>
                */
            Name: string | undefined;
    }
    export namespace DeleteAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPointRequest) => any;
    }
    export interface DeleteAccessPointForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point you want to delete.</p>
                */
            Name: string | undefined;
    }
    export namespace DeleteAccessPointForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPointForObjectLambdaRequest) => any;
    }
    export interface DeleteAccessPointPolicyRequest {
            /**
                * <p>The account ID for the account that owns the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point whose policy you want to delete.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>
                */
            Name: string | undefined;
    }
    export namespace DeleteAccessPointPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPointPolicyRequest) => any;
    }
    export interface DeleteAccessPointPolicyForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point you want to delete the policy for.</p>
                */
            Name: string | undefined;
    }
    export namespace DeleteAccessPointPolicyForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAccessPointPolicyForObjectLambdaRequest) => any;
    }
    export interface DeleteBucketRequest {
            /**
                * <p>The account ID that owns the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket being deleted.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace DeleteBucketRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBucketRequest) => any;
    }
    export interface DeleteBucketLifecycleConfigurationRequest {
            /**
                * <p>The account ID of the lifecycle configuration to delete.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace DeleteBucketLifecycleConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBucketLifecycleConfigurationRequest) => any;
    }
    export interface DeleteBucketPolicyRequest {
            /**
                * <p>The account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace DeleteBucketPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBucketPolicyRequest) => any;
    }
    export interface DeleteBucketTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket tag set to be removed.</p>
                */
            AccountId?: string;
            /**
                * <p>The bucket ARN that has the tag set to be removed.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace DeleteBucketTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteBucketTaggingRequest) => any;
    }
    export interface DeleteJobTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID for the S3 Batch Operations job whose tags you want to delete.</p>
                */
            JobId: string | undefined;
    }
    export namespace DeleteJobTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobTaggingRequest) => any;
    }
    export interface DeleteJobTaggingResult {
    }
    export namespace DeleteJobTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteJobTaggingResult) => any;
    }
    /**
        * <p></p>
        */
    export class NotFoundException extends __BaseException {
            readonly name: "NotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
    }
    export interface DeleteMultiRegionAccessPointRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>An idempotency token used to identify the request and guarantee that requests are
                *          unique.</p>
                */
            ClientToken?: string;
            /**
                * <p>A container element containing details about the Multi-Region Access Point.</p>
                */
            Details: DeleteMultiRegionAccessPointInput | undefined;
    }
    export namespace DeleteMultiRegionAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMultiRegionAccessPointRequest) => any;
    }
    export interface DeleteMultiRegionAccessPointResult {
            /**
                * <p>The request token associated with the request. You can use this token with <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous
                *          requests.</p>
                */
            RequestTokenARN?: string;
    }
    export namespace DeleteMultiRegionAccessPointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteMultiRegionAccessPointResult) => any;
    }
    export interface DeletePublicAccessBlockRequest {
            /**
                * <p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration
                *          you want to remove.</p>
                */
            AccountId?: string;
    }
    export namespace DeletePublicAccessBlockRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeletePublicAccessBlockRequest) => any;
    }
    export interface DeleteStorageLensConfigurationRequest {
            /**
                * <p>The ID of the S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
    }
    export namespace DeleteStorageLensConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteStorageLensConfigurationRequest) => any;
    }
    export interface DeleteStorageLensConfigurationTaggingRequest {
            /**
                * <p>The ID of the S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
    }
    export namespace DeleteStorageLensConfigurationTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteStorageLensConfigurationTaggingRequest) => any;
    }
    export interface DeleteStorageLensConfigurationTaggingResult {
    }
    export namespace DeleteStorageLensConfigurationTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteStorageLensConfigurationTaggingResult) => any;
    }
    export interface DescribeJobRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID for the job whose information you want to retrieve.</p>
                */
            JobId: string | undefined;
    }
    export namespace DescribeJobRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobRequest) => any;
    }
    /**
        * <p>If this job failed, this element indicates why the job failed.</p>
        */
    export interface JobFailure {
            /**
                * <p>The failure code, if any, for the specified job.</p>
                */
            FailureCode?: string;
            /**
                * <p>The failure reason, if any, for the specified job.</p>
                */
            FailureReason?: string;
    }
    export namespace JobFailure {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobFailure) => any;
    }
    /**
        * <p>Describes the specified job's generated manifest. Batch Operations jobs created with a
        *          ManifestGenerator populate details of this descriptor after execution of the
        *          ManifestGenerator.</p>
        */
    export interface S3GeneratedManifestDescriptor {
            /**
                * <p>The format of the generated manifest.</p>
                */
            Format?: GeneratedManifestFormat | string;
            /**
                * <p>Contains the information required to locate a manifest object.</p>
                */
            Location?: JobManifestLocation;
    }
    export namespace S3GeneratedManifestDescriptor {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3GeneratedManifestDescriptor) => any;
    }
    /**
        * <p>Provides timing details for the job.</p>
        */
    export interface JobTimers {
            /**
                * <p>Indicates the elapsed time in seconds the job has been in the Active job state.</p>
                */
            ElapsedTimeInActiveSeconds?: number;
    }
    export namespace JobTimers {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobTimers) => any;
    }
    /**
        * <p>Describes the total number of tasks that the specified job has started, the number of
        *          tasks that succeeded, and the number of tasks that failed.</p>
        */
    export interface JobProgressSummary {
            /**
                * <p></p>
                */
            TotalNumberOfTasks?: number;
            /**
                * <p></p>
                */
            NumberOfTasksSucceeded?: number;
            /**
                * <p></p>
                */
            NumberOfTasksFailed?: number;
            /**
                * <p>The JobTimers attribute of a job's progress summary.</p>
                */
            Timers?: JobTimers;
    }
    export namespace JobProgressSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobProgressSummary) => any;
    }
    export enum JobStatus {
            Active = "Active",
            Cancelled = "Cancelled",
            Cancelling = "Cancelling",
            Complete = "Complete",
            Completing = "Completing",
            Failed = "Failed",
            Failing = "Failing",
            New = "New",
            Paused = "Paused",
            Pausing = "Pausing",
            Preparing = "Preparing",
            Ready = "Ready",
            Suspended = "Suspended"
    }
    /**
        * <p>A container element for the job configuration and status information returned by a
        *             <code>Describe Job</code> request.</p>
        */
    export interface JobDescriptor {
            /**
                * <p>The ID for the specified job.</p>
                */
            JobId?: string;
            /**
                * <p>Indicates whether confirmation is required before Amazon S3 begins running the specified job.
                *          Confirmation is required only for jobs created through the Amazon S3 console.</p>
                */
            ConfirmationRequired?: boolean;
            /**
                * <p>The description for this job, if one was provided in this job's <code>Create Job</code>
                *          request.</p>
                */
            Description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) for this job.</p>
                */
            JobArn?: string;
            /**
                * <p>The current status of the specified job.</p>
                */
            Status?: JobStatus | string;
            /**
                * <p>The configuration information for the specified job's manifest object.</p>
                */
            Manifest?: JobManifest;
            /**
                * <p>The operation that the specified job is configured to run on the objects listed in the
                *          manifest.</p>
                */
            Operation?: JobOperation;
            /**
                * <p>The priority of the specified job.</p>
                */
            Priority?: number;
            /**
                * <p>Describes the total number of tasks that the specified job has run, the number of tasks
                *          that succeeded, and the number of tasks that failed.</p>
                */
            ProgressSummary?: JobProgressSummary;
            /**
                * <p>The reason for updating the job.</p>
                */
            StatusUpdateReason?: string;
            /**
                * <p>If the specified job failed, this field contains information describing the
                *          failure.</p>
                */
            FailureReasons?: JobFailure[];
            /**
                * <p>Contains the configuration information for the job-completion report if you requested
                *          one in the <code>Create Job</code> request.</p>
                */
            Report?: JobReport;
            /**
                * <p>A timestamp indicating when this job was created.</p>
                */
            CreationTime?: Date;
            /**
                * <p>A timestamp indicating when this job terminated. A job's termination date is the date
                *          and time when it succeeded, failed, or was canceled.</p>
                */
            TerminationDate?: Date;
            /**
                * <p>The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role assigned to run the tasks
                *          for this job.</p>
                */
            RoleArn?: string;
            /**
                * <p>The timestamp when this job was suspended, if it has been suspended.</p>
                */
            SuspendedDate?: Date;
            /**
                * <p>The reason why the specified job was suspended. A job is only suspended if you create it
                *          through the Amazon S3 console. When you create the job, it enters the <code>Suspended</code>
                *          state to await confirmation before running. After you confirm the job, it automatically
                *          exits the <code>Suspended</code> state.</p>
                */
            SuspendedCause?: string;
            /**
                * <p>The manifest generator that was used to generate a job manifest for this job.</p>
                */
            ManifestGenerator?: JobManifestGenerator;
            /**
                * <p>The attribute of the JobDescriptor containing details about the job's generated
                *          manifest.</p>
                */
            GeneratedManifestDescriptor?: S3GeneratedManifestDescriptor;
    }
    export namespace JobDescriptor {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobDescriptor) => any;
    }
    export interface DescribeJobResult {
            /**
                * <p>Contains the configuration parameters and status for the job specified in the
                *             <code>Describe Job</code> request.</p>
                */
            Job?: JobDescriptor;
    }
    export namespace DescribeJobResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeJobResult) => any;
    }
    export interface DescribeMultiRegionAccessPointOperationRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The request token associated with the request you want to know about. This request token
                *          is returned as part of the response when you make an asynchronous request. You provide this
                *          token to query about the status of the asynchronous action.</p>
                */
            RequestTokenARN: string | undefined;
    }
    export namespace DescribeMultiRegionAccessPointOperationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMultiRegionAccessPointOperationRequest) => any;
    }
    export interface DescribeMultiRegionAccessPointOperationResult {
            /**
                * <p>A container element containing the details of the asynchronous operation.</p>
                */
            AsyncOperation?: AsyncOperation;
    }
    export namespace DescribeMultiRegionAccessPointOperationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeMultiRegionAccessPointOperationResult) => any;
    }
    export interface GetAccessPointRequest {
            /**
                * <p>The account ID for the account that owns the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point whose configuration information you want to retrieve.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointRequest) => any;
    }
    export interface GetAccessPointResult {
            /**
                * <p>The name of the specified access point.</p>
                */
            Name?: string;
            /**
                * <p>The name of the bucket associated with the specified access point.</p>
                */
            Bucket?: string;
            /**
                * <p>Indicates whether this access point allows access from the public internet. If
                *             <code>VpcConfiguration</code> is specified for this access point, then
                *             <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn't allow access from
                *          the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and
                *          the access point allows access from the public internet, subject to the access point and bucket access
                *          policies.</p>
                *          <p>This will always be true for an Amazon S3 on Outposts access point</p>
                */
            NetworkOrigin?: NetworkOrigin | string;
            /**
                * <p>Contains the virtual private cloud (VPC) configuration for the specified access point.</p>
                *          <note>
                *             <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other
                *                Amazon Web Services.</p>
                *          </note>
                */
            VpcConfiguration?: VpcConfiguration;
            /**
                * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3
                *          account. You can enable the configuration options in any combination. For more information
                *          about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
            /**
                * <p>The date and time when the specified access point was created.</p>
                */
            CreationDate?: Date;
            /**
                * <p>The name or alias of the access point.</p>
                */
            Alias?: string;
            /**
                * <p>The ARN of the access point.</p>
                */
            AccessPointArn?: string;
            /**
                * <p>The VPC endpoint for the access point.</p>
                */
            Endpoints?: Record<string, string>;
    }
    export namespace GetAccessPointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointResult) => any;
    }
    export interface GetAccessPointConfigurationForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point you want to return the configuration for.</p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointConfigurationForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointConfigurationForObjectLambdaRequest) => any;
    }
    export interface GetAccessPointConfigurationForObjectLambdaResult {
            /**
                * <p>Object Lambda Access Point configuration document.</p>
                */
            Configuration?: ObjectLambdaConfiguration;
    }
    export namespace GetAccessPointConfigurationForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointConfigurationForObjectLambdaResult) => any;
    }
    export interface GetAccessPointForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointForObjectLambdaRequest) => any;
    }
    export interface GetAccessPointForObjectLambdaResult {
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name?: string;
            /**
                * <p>Configuration to block all public access. This setting is turned on and can not be
                *          edited. </p>
                */
            PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
            /**
                * <p>The date and time when the specified Object Lambda Access Point was created.</p>
                */
            CreationDate?: Date;
    }
    export namespace GetAccessPointForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointForObjectLambdaResult) => any;
    }
    export interface GetAccessPointPolicyRequest {
            /**
                * <p>The account ID for the account that owns the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point whose policy you want to retrieve.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyRequest) => any;
    }
    export interface GetAccessPointPolicyResult {
            /**
                * <p>The access point policy associated with the specified access point.</p>
                */
            Policy?: string;
    }
    export namespace GetAccessPointPolicyResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyResult) => any;
    }
    export interface GetAccessPointPolicyForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointPolicyForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyForObjectLambdaRequest) => any;
    }
    export interface GetAccessPointPolicyForObjectLambdaResult {
            /**
                * <p>Object Lambda Access Point resource policy document.</p>
                */
            Policy?: string;
    }
    export namespace GetAccessPointPolicyForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyForObjectLambdaResult) => any;
    }
    export interface GetAccessPointPolicyStatusRequest {
            /**
                * <p>The account ID for the account that owns the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point whose policy status you want to retrieve.</p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointPolicyStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyStatusRequest) => any;
    }
    /**
        * <p>Indicates whether this access point policy is public. For more information about how Amazon S3
        *          evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. </p>
        */
    export interface PolicyStatus {
            /**
                * <p></p>
                */
            IsPublic?: boolean;
    }
    export namespace PolicyStatus {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PolicyStatus) => any;
    }
    export interface GetAccessPointPolicyStatusResult {
            /**
                * <p>Indicates the current policy status of the specified access point.</p>
                */
            PolicyStatus?: PolicyStatus;
    }
    export namespace GetAccessPointPolicyStatusResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyStatusResult) => any;
    }
    export interface GetAccessPointPolicyStatusForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
    }
    export namespace GetAccessPointPolicyStatusForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyStatusForObjectLambdaRequest) => any;
    }
    export interface GetAccessPointPolicyStatusForObjectLambdaResult {
            /**
                * <p>Indicates whether this access point policy is public. For more information about how Amazon S3
                *          evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. </p>
                */
            PolicyStatus?: PolicyStatus;
    }
    export namespace GetAccessPointPolicyStatusForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetAccessPointPolicyStatusForObjectLambdaResult) => any;
    }
    export interface GetBucketRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace GetBucketRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketRequest) => any;
    }
    export interface GetBucketResult {
            /**
                * <p>The Outposts bucket requested.</p>
                */
            Bucket?: string;
            /**
                * <p></p>
                */
            PublicAccessBlockEnabled?: boolean;
            /**
                * <p>The creation date of the Outposts bucket.</p>
                */
            CreationDate?: Date;
    }
    export namespace GetBucketResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketResult) => any;
    }
    export interface GetBucketLifecycleConfigurationRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace GetBucketLifecycleConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketLifecycleConfigurationRequest) => any;
    }
    /**
        * <p>The container of the Outposts bucket lifecycle expiration.</p>
        */
    export interface LifecycleExpiration {
            /**
                * <p>Indicates at what date the object is to be deleted. Should be in GMT ISO 8601
                *          format.</p>
                */
            Date?: Date;
            /**
                * <p>Indicates the lifetime, in days, of the objects that are subject to the rule. The value
                *          must be a non-zero positive integer.</p>
                */
            Days?: number;
            /**
                * <p>Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set
                *          to true, the delete marker will be expired. If set to false, the policy takes no action.
                *          This cannot be specified with Days or Date in a Lifecycle Expiration Policy.</p>
                */
            ExpiredObjectDeleteMarker?: boolean;
    }
    export namespace LifecycleExpiration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LifecycleExpiration) => any;
    }
    /**
        * <p>The container for the Outposts bucket lifecycle rule and operator.</p>
        */
    export interface LifecycleRuleAndOperator {
            /**
                * <p>Prefix identifying one or more objects to which the rule applies.</p>
                */
            Prefix?: string;
            /**
                * <p>All of these tags must exist in the object's tag set in order for the rule to
                *          apply.</p>
                */
            Tags?: S3Tag[];
    }
    export namespace LifecycleRuleAndOperator {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LifecycleRuleAndOperator) => any;
    }
    /**
        * <p>The container for the filter of the lifecycle rule.</p>
        */
    export interface LifecycleRuleFilter {
            /**
                * <p>Prefix identifying one or more objects to which the rule applies.</p>
                *          <important>
                *             <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using
                *          XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
                *             XML related object key constraints</a>.</p>
                *          </important>
                */
            Prefix?: string;
            /**
                * <p></p>
                */
            Tag?: S3Tag;
            /**
                * <p>The container for the <code>AND</code> condition for the lifecycle rule.</p>
                */
            And?: LifecycleRuleAndOperator;
    }
    export namespace LifecycleRuleFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LifecycleRuleFilter) => any;
    }
    /**
        * <p>The container of the noncurrent version expiration.</p>
        */
    export interface NoncurrentVersionExpiration {
            /**
                * <p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the
                *          associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How
                *             Amazon S3 Calculates When an Object Became Noncurrent</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                */
            NoncurrentDays?: number;
    }
    export namespace NoncurrentVersionExpiration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NoncurrentVersionExpiration) => any;
    }
    export type TransitionStorageClass = "DEEP_ARCHIVE" | "GLACIER" | "INTELLIGENT_TIERING" | "ONEZONE_IA" | "STANDARD_IA";
    /**
        * <p>The container for the noncurrent version transition.</p>
        */
    export interface NoncurrentVersionTransition {
            /**
                * <p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the
                *          associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations"> How
                *             Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                */
            NoncurrentDays?: number;
            /**
                * <p>The class of storage used to store the object.</p>
                */
            StorageClass?: TransitionStorageClass | string;
    }
    export namespace NoncurrentVersionTransition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: NoncurrentVersionTransition) => any;
    }
    export type ExpirationStatus = "Disabled" | "Enabled";
    /**
        * <p>Specifies when an object transitions to a specified storage class. For more information
        *          about Amazon S3 Lifecycle configuration rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html">
        *             Transitioning objects using Amazon S3 Lifecycle</a> in the
        *             <i>Amazon S3 User Guide</i>.</p>
        */
    export interface Transition {
            /**
                * <p>Indicates when objects are transitioned to the specified storage class. The date value
                *          must be in ISO 8601 format. The time is always midnight UTC.</p>
                */
            Date?: Date;
            /**
                * <p>Indicates the number of days after creation when objects are transitioned to the
                *          specified storage class. The value must be a positive integer.</p>
                */
            Days?: number;
            /**
                * <p>The storage class to which you want the object to transition.</p>
                */
            StorageClass?: TransitionStorageClass | string;
    }
    export namespace Transition {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Transition) => any;
    }
    /**
        * <p>The container for the Outposts bucket lifecycle rule.</p>
        */
    export interface LifecycleRule {
            /**
                * <p>Specifies the expiration for the lifecycle of the object in the form of date, days and,
                *          whether the object has a delete marker.</p>
                */
            Expiration?: LifecycleExpiration;
            /**
                * <p>Unique identifier for the rule. The value cannot be longer than 255 characters.</p>
                */
            ID?: string;
            /**
                * <p>The container for the filter of lifecycle rule.</p>
                */
            Filter?: LifecycleRuleFilter;
            /**
                * <p>If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not
                *          currently being applied.</p>
                */
            Status: ExpirationStatus | string | undefined;
            /**
                * <p>Specifies when an Amazon S3 object transitions to a specified storage class.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            Transitions?: Transition[];
            /**
                * <p> Specifies the transition rule for the lifecycle rule that describes when noncurrent
                *          objects transition to a specific storage class. If your bucket is versioning-enabled (or
                *          versioning is suspended), you can set this action to request that Amazon S3 transition
                *          noncurrent object versions to a specific storage class at a set period in the object's
                *          lifetime. </p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            NoncurrentVersionTransitions?: NoncurrentVersionTransition[];
            /**
                * <p>The noncurrent version expiration of the lifecycle rule.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            NoncurrentVersionExpiration?: NoncurrentVersionExpiration;
            /**
                * <p>Specifies the days since the initiation of an incomplete multipart upload that Amazon S3
                *          waits before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
                *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the
                *             <i>Amazon S3 User Guide</i>.</p>
                */
            AbortIncompleteMultipartUpload?: AbortIncompleteMultipartUpload;
    }
    export namespace LifecycleRule {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LifecycleRule) => any;
    }
    export interface GetBucketLifecycleConfigurationResult {
            /**
                * <p>Container for the lifecycle rule of the Outposts bucket.</p>
                */
            Rules?: LifecycleRule[];
    }
    export namespace GetBucketLifecycleConfigurationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketLifecycleConfigurationResult) => any;
    }
    export interface GetBucketPolicyRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace GetBucketPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketPolicyRequest) => any;
    }
    export interface GetBucketPolicyResult {
            /**
                * <p>The policy of the Outposts bucket.</p>
                */
            Policy?: string;
    }
    export namespace GetBucketPolicyResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketPolicyResult) => any;
    }
    export interface GetBucketTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
    }
    export namespace GetBucketTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketTaggingRequest) => any;
    }
    export interface GetBucketTaggingResult {
            /**
                * <p>The tags set of the Outposts bucket.</p>
                */
            TagSet: S3Tag[] | undefined;
    }
    export namespace GetBucketTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetBucketTaggingResult) => any;
    }
    export interface GetJobTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID for the S3 Batch Operations job whose tags you want to retrieve.</p>
                */
            JobId: string | undefined;
    }
    export namespace GetJobTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobTaggingRequest) => any;
    }
    export interface GetJobTaggingResult {
            /**
                * <p>The set of tags associated with the S3 Batch Operations job.</p>
                */
            Tags?: S3Tag[];
    }
    export namespace GetJobTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetJobTaggingResult) => any;
    }
    export interface GetMultiRegionAccessPointRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Multi-Region Access Point whose configuration information you want to receive. The name of
                *          the Multi-Region Access Point is different from the alias. For more information about the distinction between
                *          the name and the alias of an Multi-Region Access Point, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming">Managing Multi-Region Access Points</a> in the
                *          <i>Amazon S3 User Guide</i>.</p>
                */
            Name: string | undefined;
    }
    export namespace GetMultiRegionAccessPointRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointRequest) => any;
    }
    /**
        * <p>A combination of a bucket and Region that's part of a Multi-Region Access Point.</p>
        */
    export interface RegionReport {
            /**
                * <p>The name of the bucket.</p>
                */
            Bucket?: string;
            /**
                * <p>The name of the Region.</p>
                */
            Region?: string;
    }
    export namespace RegionReport {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegionReport) => any;
    }
    export enum MultiRegionAccessPointStatus {
            CREATING = "CREATING",
            DELETING = "DELETING",
            INCONSISTENT_ACROSS_REGIONS = "INCONSISTENT_ACROSS_REGIONS",
            PARTIALLY_CREATED = "PARTIALLY_CREATED",
            PARTIALLY_DELETED = "PARTIALLY_DELETED",
            READY = "READY"
    }
    /**
        * <p>A collection of statuses for a Multi-Region Access Point in the various Regions it supports.</p>
        */
    export interface MultiRegionAccessPointReport {
            /**
                * <p>The name of the Multi-Region Access Point.</p>
                */
            Name?: string;
            /**
                * <p>The alias for the Multi-Region Access Point. For more information about the distinction between the name
                *          and the alias of an Multi-Region Access Point, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming">Managing Multi-Region Access Points</a>.</p>
                */
            Alias?: string;
            /**
                * <p>When the Multi-Region Access Point create request was received.</p>
                */
            CreatedAt?: Date;
            /**
                * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3
                *          account. You can enable the configuration options in any combination. For more information
                *          about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p>
                *          <p>This is not supported for Amazon S3 on Outposts.</p>
                */
            PublicAccessBlock?: PublicAccessBlockConfiguration;
            /**
                * <p>The current status of the Multi-Region Access Point.</p>
                *          <p>
                *             <code>CREATING</code> and <code>DELETING</code> are temporary states that exist while
                *          the request is propogating and being completed. If a Multi-Region Access Point has a status of
                *             <code>PARTIALLY_CREATED</code>, you can retry creation or send a request to delete the
                *          Multi-Region Access Point. If a Multi-Region Access Point has a status of <code>PARTIALLY_DELETED</code>, you can retry a delete
                *          request to finish the deletion of the Multi-Region Access Point.</p>
                */
            Status?: MultiRegionAccessPointStatus | string;
            /**
                * <p>A collection of the Regions and buckets associated with the Multi-Region Access Point.</p>
                */
            Regions?: RegionReport[];
    }
    export namespace MultiRegionAccessPointReport {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MultiRegionAccessPointReport) => any;
    }
    export interface GetMultiRegionAccessPointResult {
            /**
                * <p>A container element containing the details of the requested Multi-Region Access Point.</p>
                */
            AccessPoint?: MultiRegionAccessPointReport;
    }
    export namespace GetMultiRegionAccessPointResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointResult) => any;
    }
    export interface GetMultiRegionAccessPointPolicyRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the Multi-Region Access Point. The name of the Multi-Region Access Point is different from the alias. For more
                *          information about the distinction between the name and the alias of an Multi-Region Access Point, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming">Managing Multi-Region Access Points</a> in the
                *          <i>Amazon S3 User Guide</i>.</p>
                */
            Name: string | undefined;
    }
    export namespace GetMultiRegionAccessPointPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointPolicyRequest) => any;
    }
    /**
        * <p>The last established access control policy for a Multi-Region Access Point.</p>
        *          <p>When you update the policy, the update is first listed as the proposed policy. After the
        *          update is finished and all Regions have been updated, the proposed policy is listed as the
        *          established policy. If both policies have the same version number, the proposed policy is
        *          the established policy.</p>
        */
    export interface EstablishedMultiRegionAccessPointPolicy {
            /**
                * <p>The details of the last established policy.</p>
                */
            Policy?: string;
    }
    export namespace EstablishedMultiRegionAccessPointPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EstablishedMultiRegionAccessPointPolicy) => any;
    }
    /**
        * <p>The proposed access control policy for the Multi-Region Access Point.</p>
        *          <p>When you update the policy, the update is first listed as the proposed policy. After the
        *          update is finished and all Regions have been updated, the proposed policy is listed as the
        *          established policy. If both policies have the same version number, the proposed policy is
        *          the established policy.</p>
        */
    export interface ProposedMultiRegionAccessPointPolicy {
            /**
                * <p>The details of the proposed policy.</p>
                */
            Policy?: string;
    }
    export namespace ProposedMultiRegionAccessPointPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ProposedMultiRegionAccessPointPolicy) => any;
    }
    /**
        * <p>The Multi-Region Access Point access control policy.</p>
        *          <p>When you update the policy, the update is first listed as the proposed policy. After the
        *          update is finished and all Regions have been updated, the proposed policy is listed as the
        *          established policy. If both policies have the same version number, the proposed policy is
        *          the established policy.</p>
        */
    export interface MultiRegionAccessPointPolicyDocument {
            /**
                * <p>The last established policy for the Multi-Region Access Point.</p>
                */
            Established?: EstablishedMultiRegionAccessPointPolicy;
            /**
                * <p>The proposed policy for the Multi-Region Access Point.</p>
                */
            Proposed?: ProposedMultiRegionAccessPointPolicy;
    }
    export namespace MultiRegionAccessPointPolicyDocument {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MultiRegionAccessPointPolicyDocument) => any;
    }
    export interface GetMultiRegionAccessPointPolicyResult {
            /**
                * <p>The policy associated with the specified Multi-Region Access Point.</p>
                */
            Policy?: MultiRegionAccessPointPolicyDocument;
    }
    export namespace GetMultiRegionAccessPointPolicyResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointPolicyResult) => any;
    }
    export interface GetMultiRegionAccessPointPolicyStatusRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the Multi-Region Access Point. The name of the Multi-Region Access Point is different from the alias. For more
                *          information about the distinction between the name and the alias of an Multi-Region Access Point, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming">Managing Multi-Region Access Points</a> in the
                *          <i>Amazon S3 User Guide</i>.</p>
                */
            Name: string | undefined;
    }
    export namespace GetMultiRegionAccessPointPolicyStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointPolicyStatusRequest) => any;
    }
    export interface GetMultiRegionAccessPointPolicyStatusResult {
            /**
                * <p>Indicates whether this access point policy is public. For more information about how Amazon S3
                *          evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>. </p>
                */
            Established?: PolicyStatus;
    }
    export namespace GetMultiRegionAccessPointPolicyStatusResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetMultiRegionAccessPointPolicyStatusResult) => any;
    }
    export interface GetPublicAccessBlockOutput {
            /**
                * <p>The <code>PublicAccessBlock</code> configuration currently in effect for this
                *          Amazon Web Services account.</p>
                */
            PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
    }
    export namespace GetPublicAccessBlockOutput {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPublicAccessBlockOutput) => any;
    }
    export interface GetPublicAccessBlockRequest {
            /**
                * <p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration
                *          you want to retrieve.</p>
                */
            AccountId?: string;
    }
    export namespace GetPublicAccessBlockRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetPublicAccessBlockRequest) => any;
    }
    /**
        * <p>Amazon S3 throws this exception if you make a <code>GetPublicAccessBlock</code> request
        *          against an account that doesn't have a <code>PublicAccessBlockConfiguration</code>
        *          set.</p>
        */
    export class NoSuchPublicAccessBlockConfiguration extends __BaseException {
            readonly name: "NoSuchPublicAccessBlockConfiguration";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<NoSuchPublicAccessBlockConfiguration, __BaseException>);
    }
    export interface GetStorageLensConfigurationRequest {
            /**
                * <p>The ID of the Amazon S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
    }
    export namespace GetStorageLensConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStorageLensConfigurationRequest) => any;
    }
    /**
        * <p>The Amazon Web Services organization for your S3 Storage Lens.</p>
        */
    export interface StorageLensAwsOrg {
            /**
                * <p>A container for the Amazon Resource Name (ARN) of the Amazon Web Services organization. This property
                *          is read-only and follows the following format: <code>
                *                arn:aws:organizations:<i>us-east-1</i>:<i>example-account-id</i>:organization/<i>o-ex2l495dck</i>
                *             </code>
                *          </p>
                */
            Arn: string | undefined;
    }
    export namespace StorageLensAwsOrg {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StorageLensAwsOrg) => any;
    }
    /**
        * <p>A container for enabling Amazon CloudWatch publishing for S3 Storage Lens metrics.</p>
        *          <p>For more information about publishing S3 Storage Lens metrics to CloudWatch, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_view_metrics_cloudwatch.html">Monitor
        *             S3 Storage Lens metrics in CloudWatch</a> in the <i>Amazon S3 User Guide</i>.</p>
        */
    export interface CloudWatchMetrics {
            /**
                * <p>A container that indicates whether CloudWatch publishing for S3 Storage Lens metrics is enabled. A
                *          value of <code>true</code> indicates that CloudWatch publishing for S3 Storage Lens metrics is
                *          enabled.</p>
                */
            IsEnabled: boolean | undefined;
    }
    export namespace CloudWatchMetrics {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CloudWatchMetrics) => any;
    }
    /**
        * <p></p>
        */
    export interface SSEKMS {
            /**
                * <p>A container for the ARN of the SSE-KMS encryption. This property is read-only and
                *          follows the following format: <code>
                *                arn:aws:kms:<i>us-east-1</i>:<i>example-account-id</i>:key/<i>example-9a73-4afc-8d29-8f5900cef44e</i>
                *             </code>
                *          </p>
                */
            KeyId: string | undefined;
    }
    export namespace SSEKMS {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SSEKMS) => any;
    }
    /**
        * <p></p>
        */
    export interface SSES3 {
    }
    export namespace SSES3 {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SSES3) => any;
    }
    /**
        * <p>A container for the encryption of the S3 Storage Lens metrics exports.</p>
        */
    export interface StorageLensDataExportEncryption {
            /**
                * <p></p>
                */
            SSES3?: SSES3;
            /**
                * <p></p>
                */
            SSEKMS?: SSEKMS;
    }
    export namespace StorageLensDataExportEncryption {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StorageLensDataExportEncryption) => any;
    }
    export type Format = "CSV" | "Parquet";
    export type OutputSchemaVersion = "V_1";
    /**
        * <p>A container for the bucket where the Amazon S3 Storage Lens metrics export files are
        *          located.</p>
        */
    export interface S3BucketDestination {
            /**
                * <p></p>
                */
            Format: Format | string | undefined;
            /**
                * <p>The schema version of the export file.</p>
                */
            OutputSchemaVersion: OutputSchemaVersion | string | undefined;
            /**
                * <p>The account ID of the owner of the S3 Storage Lens metrics export bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the bucket. This property is read-only and follows the
                *          following format: <code>
                *                arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:bucket/<i>your-destination-bucket-name</i>
                *             </code>
                *          </p>
                */
            Arn: string | undefined;
            /**
                * <p>The prefix of the destination bucket where the metrics export will be delivered.</p>
                */
            Prefix?: string;
            /**
                * <p>The container for the type encryption of the metrics exports in this bucket.</p>
                */
            Encryption?: StorageLensDataExportEncryption;
    }
    export namespace S3BucketDestination {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3BucketDestination) => any;
    }
    /**
        * <p>A container to specify the properties of your S3 Storage Lens metrics export, including the
        *          destination, schema, and format.</p>
        */
    export interface StorageLensDataExport {
            /**
                * <p>A container for the bucket where the S3 Storage Lens metrics export will be located.</p>
                *          <note>
                *             <p>This bucket must be located in the same Region as the storage lens configuration.
                *          </p>
                *          </note>
                */
            S3BucketDestination?: S3BucketDestination;
            /**
                * <p>A container for enabling Amazon CloudWatch publishing for S3 Storage Lens metrics.</p>
                */
            CloudWatchMetrics?: CloudWatchMetrics;
    }
    export namespace StorageLensDataExport {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StorageLensDataExport) => any;
    }
    /**
        * <p>A container for what Amazon S3 Storage Lens will exclude.</p>
        */
    export interface _Exclude {
            /**
                * <p>A container for the S3 Storage Lens bucket excludes.</p>
                */
            Buckets?: string[];
            /**
                * <p>A container for the S3 Storage Lens Region excludes.</p>
                */
            Regions?: string[];
    }
    export namespace _Exclude {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: _Exclude) => any;
    }
    /**
        * <p>A container for what Amazon S3 Storage Lens configuration includes.</p>
        */
    export interface Include {
            /**
                * <p>A container for the S3 Storage Lens bucket includes.</p>
                */
            Buckets?: string[];
            /**
                * <p>A container for the S3 Storage Lens Region includes.</p>
                */
            Regions?: string[];
    }
    export namespace Include {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Include) => any;
    }
    /**
        * <p>A container for the Amazon S3 Storage Lens configuration.</p>
        */
    export interface StorageLensConfiguration {
            /**
                * <p>A container for the Amazon S3 Storage Lens configuration ID.</p>
                */
            Id: string | undefined;
            /**
                * <p>A container for all the account-level configurations of your S3 Storage Lens
                *          configuration.</p>
                */
            AccountLevel: AccountLevel | undefined;
            /**
                * <p>A container for what is included in this configuration. This container can only be valid
                *          if there is no <code>Exclude</code> container submitted, and it's not empty. </p>
                */
            Include?: Include;
            /**
                * <p>A container for what is excluded in this configuration. This container can only be valid
                *          if there is no <code>Include</code> container submitted, and it's not empty. </p>
                */
            Exclude?: _Exclude;
            /**
                * <p>A container to specify the properties of your S3 Storage Lens metrics export including, the
                *          destination, schema and format.</p>
                */
            DataExport?: StorageLensDataExport;
            /**
                * <p>A container for whether the S3 Storage Lens configuration is enabled.</p>
                */
            IsEnabled: boolean | undefined;
            /**
                * <p>A container for the Amazon Web Services organization for this S3 Storage Lens configuration.</p>
                */
            AwsOrg?: StorageLensAwsOrg;
            /**
                * <p>The Amazon Resource Name (ARN) of the S3 Storage Lens configuration. This property is read-only
                *          and follows the following format: <code>
                *                arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:storage-lens/<i>your-dashboard-name</i>
                *             </code>
                *          </p>
                */
            StorageLensArn?: string;
    }
    export namespace StorageLensConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StorageLensConfiguration) => any;
    }
    export interface GetStorageLensConfigurationResult {
            /**
                * <p>The S3 Storage Lens configuration requested.</p>
                */
            StorageLensConfiguration?: StorageLensConfiguration;
    }
    export namespace GetStorageLensConfigurationResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStorageLensConfigurationResult) => any;
    }
    export interface GetStorageLensConfigurationTaggingRequest {
            /**
                * <p>The ID of the Amazon S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
    }
    export namespace GetStorageLensConfigurationTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStorageLensConfigurationTaggingRequest) => any;
    }
    /**
        * <p></p>
        */
    export interface StorageLensTag {
            /**
                * <p></p>
                */
            Key: string | undefined;
            /**
                * <p></p>
                */
            Value: string | undefined;
    }
    export namespace StorageLensTag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StorageLensTag) => any;
    }
    export interface GetStorageLensConfigurationTaggingResult {
            /**
                * <p>The tags of S3 Storage Lens configuration requested.</p>
                */
            Tags?: StorageLensTag[];
    }
    export namespace GetStorageLensConfigurationTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetStorageLensConfigurationTaggingResult) => any;
    }
    export interface ListAccessPointsRequest {
            /**
                * <p>The Amazon Web Services account ID for owner of the bucket whose access points you want to list.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the bucket whose associated access points you want to list.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket?: string;
            /**
                * <p>A continuation token. If a previous call to <code>ListAccessPoints</code> returned a
                *          continuation token in the <code>NextToken</code> field, then providing that value here
                *          causes Amazon S3 to retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of access points that you want to include in the list. If the specified
                *          bucket has more than this number of access points, then the response will include a continuation
                *          token in the <code>NextToken</code> field that you can use to retrieve the next page of
                *          access points.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAccessPointsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPointsRequest) => any;
    }
    export interface ListAccessPointsResult {
            /**
                * <p>Contains identification and configuration information for one or more access points associated
                *          with the specified bucket.</p>
                */
            AccessPointList?: AccessPoint[];
            /**
                * <p>If the specified bucket has more access points than can be returned in one call to this API,
                *          this field contains a continuation token that you can provide in subsequent calls to this
                *          API to retrieve additional access points.</p>
                */
            NextToken?: string;
    }
    export namespace ListAccessPointsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPointsResult) => any;
    }
    export interface ListAccessPointsForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>If the list has more access points than can be returned in one call to this API, this field
                *          contains a continuation token that you can provide in subsequent calls to this API to
                *          retrieve additional access points.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of access points that you want to include in the list. The response may
                *          contain fewer access points but will never contain more. If there are more than this number of
                *          access points, then the response will include a continuation token in the <code>NextToken</code>
                *          field that you can use to retrieve the next page of access points.</p>
                */
            MaxResults?: number;
    }
    export namespace ListAccessPointsForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPointsForObjectLambdaRequest) => any;
    }
    /**
        * <p>An access point with an attached Lambda function used to access transformed data from an Amazon S3
        *          bucket.</p>
        */
    export interface ObjectLambdaAccessPoint {
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
            /**
                * <p>Specifies the ARN for the Object Lambda Access Point.</p>
                */
            ObjectLambdaAccessPointArn?: string;
    }
    export namespace ObjectLambdaAccessPoint {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ObjectLambdaAccessPoint) => any;
    }
    export interface ListAccessPointsForObjectLambdaResult {
            /**
                * <p>Returns list of Object Lambda Access Points.</p>
                */
            ObjectLambdaAccessPointList?: ObjectLambdaAccessPoint[];
            /**
                * <p>If the list has more access points than can be returned in one call to this API, this field
                *          contains a continuation token that you can provide in subsequent calls to this API to
                *          retrieve additional access points.</p>
                */
            NextToken?: string;
    }
    export namespace ListAccessPointsForObjectLambdaResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccessPointsForObjectLambdaResult) => any;
    }
    /**
        * <p></p>
        */
    export class InvalidNextTokenException extends __BaseException {
            readonly name: "InvalidNextTokenException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    export interface ListJobsRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The <code>List Jobs</code> request returns jobs that match the statuses listed in this
                *          element.</p>
                */
            JobStatuses?: (JobStatus | string)[];
            /**
                * <p>A pagination token to request the next page of results. Use the token that Amazon S3 returned
                *          in the <code>NextToken</code> element of the <code>ListJobsResult</code> from the previous
                *             <code>List Jobs</code> request.</p>
                */
            NextToken?: string;
            /**
                * <p>The maximum number of jobs that Amazon S3 will include in the <code>List Jobs</code>
                *          response. If there are more jobs than this number, the response will include a pagination
                *          token in the <code>NextToken</code> field to enable you to retrieve the next page of
                *          results.</p>
                */
            MaxResults?: number;
    }
    export namespace ListJobsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsRequest) => any;
    }
    export enum OperationName {
            LambdaInvoke = "LambdaInvoke",
            S3DeleteObjectTagging = "S3DeleteObjectTagging",
            S3InitiateRestoreObject = "S3InitiateRestoreObject",
            S3PutObjectAcl = "S3PutObjectAcl",
            S3PutObjectCopy = "S3PutObjectCopy",
            S3PutObjectLegalHold = "S3PutObjectLegalHold",
            S3PutObjectRetention = "S3PutObjectRetention",
            S3PutObjectTagging = "S3PutObjectTagging",
            S3ReplicateObject = "S3ReplicateObject"
    }
    /**
        * <p>Contains the configuration and status information for a single job retrieved as part of
        *          a job list.</p>
        */
    export interface JobListDescriptor {
            /**
                * <p>The ID for the specified job.</p>
                */
            JobId?: string;
            /**
                * <p>The user-specified description that was included in the specified job's <code>Create
                *             Job</code> request.</p>
                */
            Description?: string;
            /**
                * <p>The operation that the specified job is configured to run on every object listed in the
                *          manifest.</p>
                */
            Operation?: OperationName | string;
            /**
                * <p>The current priority for the specified job.</p>
                */
            Priority?: number;
            /**
                * <p>The specified job's current status.</p>
                */
            Status?: JobStatus | string;
            /**
                * <p>A timestamp indicating when the specified job was created.</p>
                */
            CreationTime?: Date;
            /**
                * <p>A timestamp indicating when the specified job terminated. A job's termination date is
                *          the date and time when it succeeded, failed, or was canceled.</p>
                */
            TerminationDate?: Date;
            /**
                * <p>Describes the total number of tasks that the specified job has run, the number of tasks
                *          that succeeded, and the number of tasks that failed.</p>
                */
            ProgressSummary?: JobProgressSummary;
    }
    export namespace JobListDescriptor {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: JobListDescriptor) => any;
    }
    export interface ListJobsResult {
            /**
                * <p>If the <code>List Jobs</code> request produced more than the maximum number of results,
                *          you can pass this value into a subsequent <code>List Jobs</code> request in order to
                *          retrieve the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The list of current jobs and jobs that have ended within the last 30 days.</p>
                */
            Jobs?: JobListDescriptor[];
    }
    export namespace ListJobsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListJobsResult) => any;
    }
    export interface ListMultiRegionAccessPointsRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>Not currently used. Do not use this parameter.</p>
                */
            NextToken?: string;
            /**
                * <p>Not currently used. Do not use this parameter.</p>
                */
            MaxResults?: number;
    }
    export namespace ListMultiRegionAccessPointsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMultiRegionAccessPointsRequest) => any;
    }
    export interface ListMultiRegionAccessPointsResult {
            /**
                * <p>The list of Multi-Region Access Points associated with the user.</p>
                */
            AccessPoints?: MultiRegionAccessPointReport[];
            /**
                * <p>If the specified bucket has more Multi-Region Access Points than can be returned in one call to this
                *          action, this field contains a continuation token. You can use this token tin subsequent
                *          calls to this action to retrieve additional Multi-Region Access Points.</p>
                */
            NextToken?: string;
    }
    export namespace ListMultiRegionAccessPointsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListMultiRegionAccessPointsResult) => any;
    }
    export interface ListRegionalBucketsRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p></p>
                */
            NextToken?: string;
            /**
                * <p></p>
                */
            MaxResults?: number;
            /**
                * <p>The ID of the Outposts.</p>
                *          <note>
                *             <p>This is required by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            OutpostId?: string;
    }
    export namespace ListRegionalBucketsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegionalBucketsRequest) => any;
    }
    /**
        * <p>The container for the regional bucket.</p>
        */
    export interface RegionalBucket {
            /**
                * <p></p>
                */
            Bucket: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
                */
            BucketArn?: string;
            /**
                * <p></p>
                */
            PublicAccessBlockEnabled: boolean | undefined;
            /**
                * <p>The creation date of the regional bucket</p>
                */
            CreationDate: Date | undefined;
            /**
                * <p>The Outposts ID of the regional bucket.</p>
                */
            OutpostId?: string;
    }
    export namespace RegionalBucket {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RegionalBucket) => any;
    }
    export interface ListRegionalBucketsResult {
            /**
                * <p></p>
                */
            RegionalBucketList?: RegionalBucket[];
            /**
                * <p>
                *             <code>NextToken</code> is sent when <code>isTruncated</code> is true, which means there
                *          are more buckets that can be listed. The next list requests to Amazon S3 can be continued with
                *          this <code>NextToken</code>. <code>NextToken</code> is obfuscated and is not a real
                *          key.</p>
                */
            NextToken?: string;
    }
    export namespace ListRegionalBucketsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRegionalBucketsResult) => any;
    }
    export interface ListStorageLensConfigurationsRequest {
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
            /**
                * <p>A pagination token to request the next page of results.</p>
                */
            NextToken?: string;
    }
    export namespace ListStorageLensConfigurationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStorageLensConfigurationsRequest) => any;
    }
    /**
        * <p>Part of <code>ListStorageLensConfigurationResult</code>. Each entry includes the
        *          description of the S3 Storage Lens configuration, its home Region, whether it is enabled, its
        *          Amazon Resource Name (ARN), and config ID.</p>
        */
    export interface ListStorageLensConfigurationEntry {
            /**
                * <p>A container for the S3 Storage Lens configuration ID.</p>
                */
            Id: string | undefined;
            /**
                * <p>The ARN of the S3 Storage Lens configuration. This property is read-only.</p>
                */
            StorageLensArn: string | undefined;
            /**
                * <p>A container for the S3 Storage Lens home Region. Your metrics data is stored and retained in
                *          your designated S3 Storage Lens home Region.</p>
                */
            HomeRegion: string | undefined;
            /**
                * <p>A container for whether the S3 Storage Lens configuration is enabled. This property is
                *          required.</p>
                */
            IsEnabled?: boolean;
    }
    export namespace ListStorageLensConfigurationEntry {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStorageLensConfigurationEntry) => any;
    }
    export interface ListStorageLensConfigurationsResult {
            /**
                * <p>If the request produced more than the maximum number of S3 Storage Lens configuration results,
                *          you can pass this value into a subsequent request to retrieve the next page of
                *          results.</p>
                */
            NextToken?: string;
            /**
                * <p>A list of S3 Storage Lens configurations.</p>
                */
            StorageLensConfigurationList?: ListStorageLensConfigurationEntry[];
    }
    export namespace ListStorageLensConfigurationsResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListStorageLensConfigurationsResult) => any;
    }
    export interface PutAccessPointConfigurationForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
            /**
                * <p>Object Lambda Access Point configuration document.</p>
                */
            Configuration: ObjectLambdaConfiguration | undefined;
    }
    export namespace PutAccessPointConfigurationForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccessPointConfigurationForObjectLambdaRequest) => any;
    }
    export interface PutAccessPointPolicyRequest {
            /**
                * <p>The Amazon Web Services account ID for owner of the bucket associated with the specified access point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the access point that you want to associate with the specified policy.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>
                */
            Name: string | undefined;
            /**
                * <p>The policy that you want to apply to the specified access point. For more information about access point
                *          policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing data access with Amazon S3
                *             access points</a> in the <i>Amazon S3 User Guide</i>.</p>
                */
            Policy: string | undefined;
    }
    export namespace PutAccessPointPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccessPointPolicyRequest) => any;
    }
    export interface PutAccessPointPolicyForObjectLambdaRequest {
            /**
                * <p>The account ID for the account that owns the specified Object Lambda Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the Object Lambda Access Point.</p>
                */
            Name: string | undefined;
            /**
                * <p>Object Lambda Access Point resource policy document.</p>
                */
            Policy: string | undefined;
    }
    export namespace PutAccessPointPolicyForObjectLambdaRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutAccessPointPolicyForObjectLambdaRequest) => any;
    }
    /**
        * <p>The container for the Outposts bucket lifecycle configuration.</p>
        */
    export interface LifecycleConfiguration {
            /**
                * <p>A lifecycle rule for individual objects in an Outposts bucket. </p>
                */
            Rules?: LifecycleRule[];
    }
    export namespace LifecycleConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LifecycleConfiguration) => any;
    }
    export interface PutBucketLifecycleConfigurationRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>The name of the bucket for which to set the configuration.</p>
                */
            Bucket: string | undefined;
            /**
                * <p>Container for lifecycle rules. You can add as many as 1,000 rules.</p>
                */
            LifecycleConfiguration?: LifecycleConfiguration;
    }
    export namespace PutBucketLifecycleConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutBucketLifecycleConfigurationRequest) => any;
    }
    export interface PutBucketPolicyRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>Specifies the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
            /**
                * <p>Set this parameter to true to confirm that you want to remove your permissions to change
                *          this bucket policy in the future.</p>
                *          <note>
                *             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
                *          </note>
                */
            ConfirmRemoveSelfBucketAccess?: boolean;
            /**
                * <p>The bucket policy as a JSON document.</p>
                */
            Policy: string | undefined;
    }
    export namespace PutBucketPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutBucketPolicyRequest) => any;
    }
    /**
        * <p></p>
        */
    export interface Tagging {
            /**
                * <p>A collection for a set of tags.</p>
                */
            TagSet: S3Tag[] | undefined;
    }
    export namespace Tagging {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tagging) => any;
    }
    export interface PutBucketTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID of the Outposts bucket.</p>
                */
            AccountId?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the bucket.</p>
                *          <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>
                *          <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>
                */
            Bucket: string | undefined;
            /**
                * <p></p>
                */
            Tagging: Tagging | undefined;
    }
    export namespace PutBucketTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutBucketTaggingRequest) => any;
    }
    export interface PutJobTaggingRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID for the S3 Batch Operations job whose tags you want to replace.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The set of tags to associate with the S3 Batch Operations job.</p>
                */
            Tags: S3Tag[] | undefined;
    }
    export namespace PutJobTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutJobTaggingRequest) => any;
    }
    export interface PutJobTaggingResult {
    }
    export namespace PutJobTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutJobTaggingResult) => any;
    }
    /**
        * <p>Amazon S3 throws this exception if you have too many tags in your tag set.</p>
        */
    export class TooManyTagsException extends __BaseException {
            readonly name: "TooManyTagsException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
    }
    export interface PutMultiRegionAccessPointPolicyRequest {
            /**
                * <p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>
                */
            AccountId?: string;
            /**
                * <p>An idempotency token used to identify the request and guarantee that requests are
                *          unique.</p>
                */
            ClientToken?: string;
            /**
                * <p>A container element containing the details of the policy for the Multi-Region Access Point.</p>
                */
            Details: PutMultiRegionAccessPointPolicyInput | undefined;
    }
    export namespace PutMultiRegionAccessPointPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMultiRegionAccessPointPolicyRequest) => any;
    }
    export interface PutMultiRegionAccessPointPolicyResult {
            /**
                * <p>The request token associated with the request. You can use this token with <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous
                *          requests.</p>
                */
            RequestTokenARN?: string;
    }
    export namespace PutMultiRegionAccessPointPolicyResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutMultiRegionAccessPointPolicyResult) => any;
    }
    export interface PutPublicAccessBlockRequest {
            /**
                * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to the specified
                *          Amazon Web Services account.</p>
                */
            PublicAccessBlockConfiguration: PublicAccessBlockConfiguration | undefined;
            /**
                * <p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration
                *          you want to set.</p>
                */
            AccountId?: string;
    }
    export namespace PutPublicAccessBlockRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutPublicAccessBlockRequest) => any;
    }
    export interface PutStorageLensConfigurationRequest {
            /**
                * <p>The ID of the S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
            /**
                * <p>The S3 Storage Lens configuration.</p>
                */
            StorageLensConfiguration: StorageLensConfiguration | undefined;
            /**
                * <p>The tag set of the S3 Storage Lens configuration.</p>
                *          <note>
                *             <p>You can set up to a maximum of 50 tags.</p>
                *          </note>
                */
            Tags?: StorageLensTag[];
    }
    export namespace PutStorageLensConfigurationRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutStorageLensConfigurationRequest) => any;
    }
    export interface PutStorageLensConfigurationTaggingRequest {
            /**
                * <p>The ID of the S3 Storage Lens configuration.</p>
                */
            ConfigId: string | undefined;
            /**
                * <p>The account ID of the requester.</p>
                */
            AccountId?: string;
            /**
                * <p>The tag set of the S3 Storage Lens configuration.</p>
                *          <note>
                *             <p>You can set up to a maximum of 50 tags.</p>
                *          </note>
                */
            Tags: StorageLensTag[] | undefined;
    }
    export namespace PutStorageLensConfigurationTaggingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutStorageLensConfigurationTaggingRequest) => any;
    }
    export interface PutStorageLensConfigurationTaggingResult {
    }
    export namespace PutStorageLensConfigurationTaggingResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutStorageLensConfigurationTaggingResult) => any;
    }
    export interface UpdateJobPriorityRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID for the job whose priority you want to update.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The priority you want to assign to this job.</p>
                */
            Priority: number | undefined;
    }
    export namespace UpdateJobPriorityRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateJobPriorityRequest) => any;
    }
    export interface UpdateJobPriorityResult {
            /**
                * <p>The ID for the job whose priority Amazon S3 updated.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The new priority assigned to the specified job.</p>
                */
            Priority: number | undefined;
    }
    export namespace UpdateJobPriorityResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateJobPriorityResult) => any;
    }
    /**
        * <p></p>
        */
    export class JobStatusException extends __BaseException {
            readonly name: "JobStatusException";
            readonly $fault: "client";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<JobStatusException, __BaseException>);
    }
    export enum RequestedJobStatus {
            Cancelled = "Cancelled",
            Ready = "Ready"
    }
    export interface UpdateJobStatusRequest {
            /**
                * <p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>
                */
            AccountId?: string;
            /**
                * <p>The ID of the job whose status you want to update.</p>
                */
            JobId: string | undefined;
            /**
                * <p>The status that you want to move the specified job to.</p>
                */
            RequestedJobStatus: RequestedJobStatus | string | undefined;
            /**
                * <p>A description of the reason why you want to change the specified job's status. This
                *          field can be any string up to the maximum length.</p>
                */
            StatusUpdateReason?: string;
    }
    export namespace UpdateJobStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateJobStatusRequest) => any;
    }
    export interface UpdateJobStatusResult {
            /**
                * <p>The ID for the job whose status was updated.</p>
                */
            JobId?: string;
            /**
                * <p>The current status for the specified job.</p>
                */
            Status?: JobStatus | string;
            /**
                * <p>The reason that the specified job's status was updated.</p>
                */
            StatusUpdateReason?: string;
    }
    export namespace UpdateJobStatusResult {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateJobStatusResult) => any;
    }
}

declare module '@aws-sdk/client-s3-control/node_modules/@aws-sdk/client-s3-control/dist-types/models/S3ControlServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from S3Control service.
        */
    export class S3ControlServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

