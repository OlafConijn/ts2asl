// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-iotthingsgraph' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AssociateEntityToThingCommandInput, AssociateEntityToThingCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/AssociateEntityToThingCommand";
    import { CreateFlowTemplateCommandInput, CreateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateFlowTemplateCommand";
    import { CreateSystemInstanceCommandInput, CreateSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemInstanceCommand";
    import { CreateSystemTemplateCommandInput, CreateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemTemplateCommand";
    import { DeleteFlowTemplateCommandInput, DeleteFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteFlowTemplateCommand";
    import { DeleteNamespaceCommandInput, DeleteNamespaceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteNamespaceCommand";
    import { DeleteSystemInstanceCommandInput, DeleteSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemInstanceCommand";
    import { DeleteSystemTemplateCommandInput, DeleteSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemTemplateCommand";
    import { DeploySystemInstanceCommandInput, DeploySystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeploySystemInstanceCommand";
    import { DeprecateFlowTemplateCommandInput, DeprecateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateFlowTemplateCommand";
    import { DeprecateSystemTemplateCommandInput, DeprecateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateSystemTemplateCommand";
    import { DescribeNamespaceCommandInput, DescribeNamespaceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DescribeNamespaceCommand";
    import { DissociateEntityFromThingCommandInput, DissociateEntityFromThingCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DissociateEntityFromThingCommand";
    import { GetEntitiesCommandInput, GetEntitiesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetEntitiesCommand";
    import { GetFlowTemplateCommandInput, GetFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateCommand";
    import { GetFlowTemplateRevisionsCommandInput, GetFlowTemplateRevisionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateRevisionsCommand";
    import { GetNamespaceDeletionStatusCommandInput, GetNamespaceDeletionStatusCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetNamespaceDeletionStatusCommand";
    import { GetSystemInstanceCommandInput, GetSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemInstanceCommand";
    import { GetSystemTemplateCommandInput, GetSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateCommand";
    import { GetSystemTemplateRevisionsCommandInput, GetSystemTemplateRevisionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateRevisionsCommand";
    import { GetUploadStatusCommandInput, GetUploadStatusCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetUploadStatusCommand";
    import { ListFlowExecutionMessagesCommandInput, ListFlowExecutionMessagesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListFlowExecutionMessagesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListTagsForResourceCommand";
    import { SearchEntitiesCommandInput, SearchEntitiesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchEntitiesCommand";
    import { SearchFlowExecutionsCommandInput, SearchFlowExecutionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowExecutionsCommand";
    import { SearchFlowTemplatesCommandInput, SearchFlowTemplatesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowTemplatesCommand";
    import { SearchSystemInstancesCommandInput, SearchSystemInstancesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemInstancesCommand";
    import { SearchSystemTemplatesCommandInput, SearchSystemTemplatesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemTemplatesCommand";
    import { SearchThingsCommandInput, SearchThingsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchThingsCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/TagResourceCommand";
    import { UndeploySystemInstanceCommandInput, UndeploySystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UndeploySystemInstanceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UntagResourceCommand";
    import { UpdateFlowTemplateCommandInput, UpdateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateFlowTemplateCommand";
    import { UpdateSystemTemplateCommandInput, UpdateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateSystemTemplateCommand";
    import { UploadEntityDefinitionsCommandInput, UploadEntityDefinitionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UploadEntityDefinitionsCommand";
    import { IoTThingsGraphClient } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    /**
        * <fullname>AWS IoT Things Graph</fullname>
        *          <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards,
        *        such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services
        *        and defining how they interact at an abstract level.</p>
        *          <p>For more information about how AWS IoT Things Graph works, see the <a href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html">User Guide</a>.</p>
        */
    export class IoTThingsGraph extends IoTThingsGraphClient {
            /**
                * <p>Associates a device with a concrete thing that is in the user's registry.</p>
                *          <p>A thing can be associated with only one device at a time. If you associate a thing with a new device id, its previous association will be removed.</p>
                */
            associateEntityToThing(args: AssociateEntityToThingCommandInput, options?: __HttpHandlerOptions): Promise<AssociateEntityToThingCommandOutput>;
            associateEntityToThing(args: AssociateEntityToThingCommandInput, cb: (err: any, data?: AssociateEntityToThingCommandOutput) => void): void;
            associateEntityToThing(args: AssociateEntityToThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateEntityToThingCommandOutput) => void): void;
            /**
                * <p>Creates a workflow template. Workflows can be created only in the user's namespace. (The public namespace contains only
                *          entities.) The workflow can contain only entities in the specified namespace. The workflow is validated against the entities in the
                *       latest version of the user's namespace unless another namespace version is specified in the request.</p>
                */
            createFlowTemplate(args: CreateFlowTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateFlowTemplateCommandOutput>;
            createFlowTemplate(args: CreateFlowTemplateCommandInput, cb: (err: any, data?: CreateFlowTemplateCommandOutput) => void): void;
            createFlowTemplate(args: CreateFlowTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFlowTemplateCommandOutput) => void): void;
            /**
                * <p>Creates a system instance. </p>
                *          <p>This action validates the system instance, prepares the deployment-related resources. For Greengrass deployments, it updates the Greengrass group that is
                *             specified by the <code>greengrassGroupName</code> parameter. It also adds a file to the S3 bucket specified by the <code>s3BucketName</code> parameter. You need to
                *             call <code>DeploySystemInstance</code> after running this action.</p>
                *          <p>For Greengrass deployments, since this action modifies and adds resources to a Greengrass group and an S3 bucket on the caller's behalf, the calling identity must have write permissions
                *          to both the specified Greengrass group and S3 bucket. Otherwise, the call will fail with an authorization error.</p>
                *          <p>For cloud deployments, this action requires a <code>flowActionsRoleArn</code> value. This is an IAM role
                *       that has permissions to access AWS services, such as AWS Lambda and AWS IoT, that the flow uses when it executes.</p>
                *          <p>If the definition document doesn't specify a version of the user's namespace, the latest version will be used by default.</p>
                */
            createSystemInstance(args: CreateSystemInstanceCommandInput, options?: __HttpHandlerOptions): Promise<CreateSystemInstanceCommandOutput>;
            createSystemInstance(args: CreateSystemInstanceCommandInput, cb: (err: any, data?: CreateSystemInstanceCommandOutput) => void): void;
            createSystemInstance(args: CreateSystemInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSystemInstanceCommandOutput) => void): void;
            /**
                * <p>Creates a system. The system is validated against the entities in the
                *          latest version of the user's namespace unless another namespace version is specified in the request.</p>
                */
            createSystemTemplate(args: CreateSystemTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateSystemTemplateCommandOutput>;
            createSystemTemplate(args: CreateSystemTemplateCommandInput, cb: (err: any, data?: CreateSystemTemplateCommandOutput) => void): void;
            createSystemTemplate(args: CreateSystemTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSystemTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes a workflow. Any new system or deployment that contains this workflow will fail to update or deploy.
                *          Existing deployments that contain the workflow will continue to run (since they use a snapshot of the workflow taken at the time of deployment).</p>
                */
            deleteFlowTemplate(args: DeleteFlowTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFlowTemplateCommandOutput>;
            deleteFlowTemplate(args: DeleteFlowTemplateCommandInput, cb: (err: any, data?: DeleteFlowTemplateCommandOutput) => void): void;
            deleteFlowTemplate(args: DeleteFlowTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFlowTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes the specified namespace. This action deletes all of the entities in the namespace. Delete the systems and flows that use entities in the namespace before performing this action.</p>
                */
            deleteNamespace(args: DeleteNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteNamespaceCommandOutput>;
            deleteNamespace(args: DeleteNamespaceCommandInput, cb: (err: any, data?: DeleteNamespaceCommandOutput) => void): void;
            deleteNamespace(args: DeleteNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteNamespaceCommandOutput) => void): void;
            /**
                * <p>Deletes a system instance.
                *          Only system instances that have never been deployed, or that have been undeployed can be deleted.</p>
                *          <p>Users can create a new system instance that has the same ID as a deleted system instance.</p>
                */
            deleteSystemInstance(args: DeleteSystemInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSystemInstanceCommandOutput>;
            deleteSystemInstance(args: DeleteSystemInstanceCommandInput, cb: (err: any, data?: DeleteSystemInstanceCommandOutput) => void): void;
            deleteSystemInstance(args: DeleteSystemInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSystemInstanceCommandOutput) => void): void;
            /**
                * <p>Deletes a system. New deployments can't contain the system after its deletion.
                *       Existing deployments that contain the system will continue to work because they use a snapshot of the system that is taken when it is deployed.</p>
                */
            deleteSystemTemplate(args: DeleteSystemTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSystemTemplateCommandOutput>;
            deleteSystemTemplate(args: DeleteSystemTemplateCommandInput, cb: (err: any, data?: DeleteSystemTemplateCommandOutput) => void): void;
            deleteSystemTemplate(args: DeleteSystemTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSystemTemplateCommandOutput) => void): void;
            /**
                * <p>
                *             <b>Greengrass and Cloud Deployments</b>
                *          </p>
                *          <p>Deploys the system instance to the target specified in <code>CreateSystemInstance</code>. </p>
                *          <p>
                *             <b>Greengrass Deployments</b>
                *          </p>
                *          <p>If the system or any workflows and entities have been updated before this action is called, then the deployment will create a new Amazon Simple Storage Service
                *          resource file and then deploy it.</p>
                *          <p>Since this action creates a Greengrass deployment on the caller's behalf, the calling identity must have write permissions
                *          to the specified Greengrass group. Otherwise, the call will fail with an authorization error.</p>
                *          <p>For information about the artifacts that get added to your Greengrass core device when you use this API, see <a href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-greengrass.html">AWS IoT Things Graph and AWS IoT Greengrass</a>.</p>
                */
            deploySystemInstance(args: DeploySystemInstanceCommandInput, options?: __HttpHandlerOptions): Promise<DeploySystemInstanceCommandOutput>;
            deploySystemInstance(args: DeploySystemInstanceCommandInput, cb: (err: any, data?: DeploySystemInstanceCommandOutput) => void): void;
            deploySystemInstance(args: DeploySystemInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeploySystemInstanceCommandOutput) => void): void;
            /**
                * <p>Deprecates the specified workflow. This action marks the workflow for deletion. Deprecated flows can't be deployed, but existing deployments will continue to run.</p>
                */
            deprecateFlowTemplate(args: DeprecateFlowTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeprecateFlowTemplateCommandOutput>;
            deprecateFlowTemplate(args: DeprecateFlowTemplateCommandInput, cb: (err: any, data?: DeprecateFlowTemplateCommandOutput) => void): void;
            deprecateFlowTemplate(args: DeprecateFlowTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprecateFlowTemplateCommandOutput) => void): void;
            /**
                * <p>Deprecates the specified system.</p>
                */
            deprecateSystemTemplate(args: DeprecateSystemTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeprecateSystemTemplateCommandOutput>;
            deprecateSystemTemplate(args: DeprecateSystemTemplateCommandInput, cb: (err: any, data?: DeprecateSystemTemplateCommandOutput) => void): void;
            deprecateSystemTemplate(args: DeprecateSystemTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeprecateSystemTemplateCommandOutput) => void): void;
            /**
                * <p>Gets the latest version of the user's namespace and the public version that it is tracking.</p>
                */
            describeNamespace(args: DescribeNamespaceCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNamespaceCommandOutput>;
            describeNamespace(args: DescribeNamespaceCommandInput, cb: (err: any, data?: DescribeNamespaceCommandOutput) => void): void;
            describeNamespace(args: DescribeNamespaceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNamespaceCommandOutput) => void): void;
            /**
                * <p>Dissociates a device entity from a concrete thing. The action takes only the type of the entity that you need to dissociate because only
                *          one entity of a particular type can be associated with a thing.</p>
                */
            dissociateEntityFromThing(args: DissociateEntityFromThingCommandInput, options?: __HttpHandlerOptions): Promise<DissociateEntityFromThingCommandOutput>;
            dissociateEntityFromThing(args: DissociateEntityFromThingCommandInput, cb: (err: any, data?: DissociateEntityFromThingCommandOutput) => void): void;
            dissociateEntityFromThing(args: DissociateEntityFromThingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DissociateEntityFromThingCommandOutput) => void): void;
            /**
                * <p>Gets definitions of the specified entities. Uses the latest version of the user's namespace by default. This API returns the
                *       following TDM entities.</p>
                *          <ul>
                *             <li>
                *                <p>Properties</p>
                *             </li>
                *             <li>
                *                <p>States</p>
                *             </li>
                *             <li>
                *                <p>Events</p>
                *             </li>
                *             <li>
                *                <p>Actions</p>
                *             </li>
                *             <li>
                *                <p>Capabilities</p>
                *             </li>
                *             <li>
                *                <p>Mappings</p>
                *             </li>
                *             <li>
                *                <p>Devices</p>
                *             </li>
                *             <li>
                *                <p>Device Models</p>
                *             </li>
                *             <li>
                *                <p>Services</p>
                *             </li>
                *          </ul>
                *          <p>This action doesn't return definitions for systems, flows, and deployments.</p>
                */
            getEntities(args: GetEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<GetEntitiesCommandOutput>;
            getEntities(args: GetEntitiesCommandInput, cb: (err: any, data?: GetEntitiesCommandOutput) => void): void;
            getEntities(args: GetEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetEntitiesCommandOutput) => void): void;
            /**
                * <p>Gets the latest version of the <code>DefinitionDocument</code> and <code>FlowTemplateSummary</code> for the specified workflow.</p>
                */
            getFlowTemplate(args: GetFlowTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetFlowTemplateCommandOutput>;
            getFlowTemplate(args: GetFlowTemplateCommandInput, cb: (err: any, data?: GetFlowTemplateCommandOutput) => void): void;
            getFlowTemplate(args: GetFlowTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetFlowTemplateCommandOutput) => void): void;
            /**
                * <p>Gets revisions of the specified workflow. Only the last 100 revisions are stored. If the workflow has been deprecated,
                *       this action will return revisions that occurred before the deprecation. This action won't work for workflows that have been deleted.</p>
                */
            getFlowTemplateRevisions(args: GetFlowTemplateRevisionsCommandInput, options?: __HttpHandlerOptions): Promise<GetFlowTemplateRevisionsCommandOutput>;
            getFlowTemplateRevisions(args: GetFlowTemplateRevisionsCommandInput, cb: (err: any, data?: GetFlowTemplateRevisionsCommandOutput) => void): void;
            getFlowTemplateRevisions(args: GetFlowTemplateRevisionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetFlowTemplateRevisionsCommandOutput) => void): void;
            /**
                * <p>Gets the status of a namespace deletion task.</p>
                */
            getNamespaceDeletionStatus(args: GetNamespaceDeletionStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetNamespaceDeletionStatusCommandOutput>;
            getNamespaceDeletionStatus(args: GetNamespaceDeletionStatusCommandInput, cb: (err: any, data?: GetNamespaceDeletionStatusCommandOutput) => void): void;
            getNamespaceDeletionStatus(args: GetNamespaceDeletionStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetNamespaceDeletionStatusCommandOutput) => void): void;
            /**
                * <p>Gets a system instance.</p>
                */
            getSystemInstance(args: GetSystemInstanceCommandInput, options?: __HttpHandlerOptions): Promise<GetSystemInstanceCommandOutput>;
            getSystemInstance(args: GetSystemInstanceCommandInput, cb: (err: any, data?: GetSystemInstanceCommandOutput) => void): void;
            getSystemInstance(args: GetSystemInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSystemInstanceCommandOutput) => void): void;
            /**
                * <p>Gets a system.</p>
                */
            getSystemTemplate(args: GetSystemTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetSystemTemplateCommandOutput>;
            getSystemTemplate(args: GetSystemTemplateCommandInput, cb: (err: any, data?: GetSystemTemplateCommandOutput) => void): void;
            getSystemTemplate(args: GetSystemTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSystemTemplateCommandOutput) => void): void;
            /**
                * <p>Gets revisions made to the specified system template. Only the previous 100 revisions are stored. If the system has been deprecated, this action will return
                *       the revisions that occurred before its deprecation. This action won't work with systems that have been deleted.</p>
                */
            getSystemTemplateRevisions(args: GetSystemTemplateRevisionsCommandInput, options?: __HttpHandlerOptions): Promise<GetSystemTemplateRevisionsCommandOutput>;
            getSystemTemplateRevisions(args: GetSystemTemplateRevisionsCommandInput, cb: (err: any, data?: GetSystemTemplateRevisionsCommandOutput) => void): void;
            getSystemTemplateRevisions(args: GetSystemTemplateRevisionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSystemTemplateRevisionsCommandOutput) => void): void;
            /**
                * <p>Gets the status of the specified upload.</p>
                */
            getUploadStatus(args: GetUploadStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetUploadStatusCommandOutput>;
            getUploadStatus(args: GetUploadStatusCommandInput, cb: (err: any, data?: GetUploadStatusCommandOutput) => void): void;
            getUploadStatus(args: GetUploadStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUploadStatusCommandOutput) => void): void;
            /**
                * <p>Returns a list of objects that contain information about events in a flow execution.</p>
                */
            listFlowExecutionMessages(args: ListFlowExecutionMessagesCommandInput, options?: __HttpHandlerOptions): Promise<ListFlowExecutionMessagesCommandOutput>;
            listFlowExecutionMessages(args: ListFlowExecutionMessagesCommandInput, cb: (err: any, data?: ListFlowExecutionMessagesCommandOutput) => void): void;
            listFlowExecutionMessages(args: ListFlowExecutionMessagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListFlowExecutionMessagesCommandOutput) => void): void;
            /**
                * <p>Lists all tags on an AWS IoT Things Graph resource.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Searches for entities of the specified type. You can search for entities in your namespace and the public namespace that you're tracking.</p>
                */
            searchEntities(args: SearchEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<SearchEntitiesCommandOutput>;
            searchEntities(args: SearchEntitiesCommandInput, cb: (err: any, data?: SearchEntitiesCommandOutput) => void): void;
            searchEntities(args: SearchEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchEntitiesCommandOutput) => void): void;
            /**
                * <p>Searches for AWS IoT Things Graph workflow execution instances.</p>
                */
            searchFlowExecutions(args: SearchFlowExecutionsCommandInput, options?: __HttpHandlerOptions): Promise<SearchFlowExecutionsCommandOutput>;
            searchFlowExecutions(args: SearchFlowExecutionsCommandInput, cb: (err: any, data?: SearchFlowExecutionsCommandOutput) => void): void;
            searchFlowExecutions(args: SearchFlowExecutionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchFlowExecutionsCommandOutput) => void): void;
            /**
                * <p>Searches for summary information about workflows.</p>
                */
            searchFlowTemplates(args: SearchFlowTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<SearchFlowTemplatesCommandOutput>;
            searchFlowTemplates(args: SearchFlowTemplatesCommandInput, cb: (err: any, data?: SearchFlowTemplatesCommandOutput) => void): void;
            searchFlowTemplates(args: SearchFlowTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchFlowTemplatesCommandOutput) => void): void;
            /**
                * <p>Searches for system instances in the user's account.</p>
                */
            searchSystemInstances(args: SearchSystemInstancesCommandInput, options?: __HttpHandlerOptions): Promise<SearchSystemInstancesCommandOutput>;
            searchSystemInstances(args: SearchSystemInstancesCommandInput, cb: (err: any, data?: SearchSystemInstancesCommandOutput) => void): void;
            searchSystemInstances(args: SearchSystemInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchSystemInstancesCommandOutput) => void): void;
            /**
                * <p>Searches for summary information about systems in the user's account. You can filter by the ID of a workflow to return only systems that use the specified workflow.</p>
                */
            searchSystemTemplates(args: SearchSystemTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<SearchSystemTemplatesCommandOutput>;
            searchSystemTemplates(args: SearchSystemTemplatesCommandInput, cb: (err: any, data?: SearchSystemTemplatesCommandOutput) => void): void;
            searchSystemTemplates(args: SearchSystemTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchSystemTemplatesCommandOutput) => void): void;
            /**
                * <p>Searches for things associated with the specified entity. You can search by both device and device model.</p>
                *          <p>For example, if two different devices, camera1 and camera2, implement the camera device model, the user can associate thing1 to camera1 and thing2 to camera2.
                *          <code>SearchThings(camera2)</code> will return only thing2, but <code>SearchThings(camera)</code> will return both thing1 and thing2.</p>
                *          <p>This action searches for exact matches and doesn't perform partial text matching.</p>
                */
            searchThings(args: SearchThingsCommandInput, options?: __HttpHandlerOptions): Promise<SearchThingsCommandOutput>;
            searchThings(args: SearchThingsCommandInput, cb: (err: any, data?: SearchThingsCommandOutput) => void): void;
            searchThings(args: SearchThingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchThingsCommandOutput) => void): void;
            /**
                * <p>Creates a tag for the specified resource.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes a system instance from its target (Cloud or Greengrass).</p>
                */
            undeploySystemInstance(args: UndeploySystemInstanceCommandInput, options?: __HttpHandlerOptions): Promise<UndeploySystemInstanceCommandOutput>;
            undeploySystemInstance(args: UndeploySystemInstanceCommandInput, cb: (err: any, data?: UndeploySystemInstanceCommandOutput) => void): void;
            undeploySystemInstance(args: UndeploySystemInstanceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UndeploySystemInstanceCommandOutput) => void): void;
            /**
                * <p>Removes a tag from the specified resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates the specified workflow. All deployed systems and system instances that use the workflow will see the changes in the flow when it is redeployed. If you don't want this
                *          behavior, copy the workflow (creating a new workflow with a different ID), and update the copy. The workflow can contain only entities in the specified namespace. </p>
                */
            updateFlowTemplate(args: UpdateFlowTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateFlowTemplateCommandOutput>;
            updateFlowTemplate(args: UpdateFlowTemplateCommandInput, cb: (err: any, data?: UpdateFlowTemplateCommandOutput) => void): void;
            updateFlowTemplate(args: UpdateFlowTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateFlowTemplateCommandOutput) => void): void;
            /**
                * <p>Updates the specified system. You don't need to run this action after updating a workflow. Any deployment that uses the system will see the changes in the system when it is redeployed.</p>
                */
            updateSystemTemplate(args: UpdateSystemTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateSystemTemplateCommandOutput>;
            updateSystemTemplate(args: UpdateSystemTemplateCommandInput, cb: (err: any, data?: UpdateSystemTemplateCommandOutput) => void): void;
            updateSystemTemplate(args: UpdateSystemTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateSystemTemplateCommandOutput) => void): void;
            /**
                * <p>Asynchronously uploads one or more entity definitions to the user's namespace. The <code>document</code> parameter is required if
                *       <code>syncWithPublicNamespace</code> and <code>deleteExistingEntites</code> are false. If the <code>syncWithPublicNamespace</code> parameter  is set to
                *          <code>true</code>, the user's namespace will synchronize with the latest version of the public namespace. If <code>deprecateExistingEntities</code> is set to true,
                *       all entities in the latest version will be deleted before the new <code>DefinitionDocument</code> is uploaded.</p>
                *          <p>When a user uploads entity definitions for the first time, the service creates a new namespace for the user. The new namespace tracks the public namespace. Currently users
                *       can have only one namespace. The namespace version increments whenever a user uploads entity definitions that are backwards-incompatible and whenever a user sets the
                *          <code>syncWithPublicNamespace</code> parameter or the <code>deprecateExistingEntities</code> parameter to <code>true</code>.</p>
                *          <p>The IDs for all of the entities should be in URN format. Each entity must be in the user's namespace. Users can't create entities in the public namespace, but entity definitions can refer to entities in the public namespace.</p>
                *          <p>Valid entities are <code>Device</code>, <code>DeviceModel</code>, <code>Service</code>, <code>Capability</code>, <code>State</code>, <code>Action</code>, <code>Event</code>, <code>Property</code>,
                *          <code>Mapping</code>, <code>Enum</code>.
                *          </p>
                */
            uploadEntityDefinitions(args: UploadEntityDefinitionsCommandInput, options?: __HttpHandlerOptions): Promise<UploadEntityDefinitionsCommandOutput>;
            uploadEntityDefinitions(args: UploadEntityDefinitionsCommandInput, cb: (err: any, data?: UploadEntityDefinitionsCommandOutput) => void): void;
            uploadEntityDefinitions(args: UploadEntityDefinitionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UploadEntityDefinitionsCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/AssociateEntityToThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { AssociateEntityToThingRequest, AssociateEntityToThingResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface AssociateEntityToThingCommandInput extends AssociateEntityToThingRequest {
    }
    export interface AssociateEntityToThingCommandOutput extends AssociateEntityToThingResponse, __MetadataBearer {
    }
    /**
        * <p>Associates a device with a concrete thing that is in the user's registry.</p>
        *          <p>A thing can be associated with only one device at a time. If you associate a thing with a new device id, its previous association will be removed.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, AssociateEntityToThingCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, AssociateEntityToThingCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new AssociateEntityToThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AssociateEntityToThingCommandInput} for command's `input` shape.
        * @see {@link AssociateEntityToThingCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class AssociateEntityToThingCommand extends $Command<AssociateEntityToThingCommandInput, AssociateEntityToThingCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: AssociateEntityToThingCommandInput;
            constructor(input: AssociateEntityToThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AssociateEntityToThingCommandInput, AssociateEntityToThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateFlowTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { CreateFlowTemplateRequest, CreateFlowTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface CreateFlowTemplateCommandInput extends CreateFlowTemplateRequest {
    }
    export interface CreateFlowTemplateCommandOutput extends CreateFlowTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a workflow template. Workflows can be created only in the user's namespace. (The public namespace contains only
        *          entities.) The workflow can contain only entities in the specified namespace. The workflow is validated against the entities in the
        *       latest version of the user's namespace unless another namespace version is specified in the request.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, CreateFlowTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, CreateFlowTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new CreateFlowTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateFlowTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateFlowTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class CreateFlowTemplateCommand extends $Command<CreateFlowTemplateCommandInput, CreateFlowTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: CreateFlowTemplateCommandInput;
            constructor(input: CreateFlowTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateFlowTemplateCommandInput, CreateFlowTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { CreateSystemInstanceRequest, CreateSystemInstanceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface CreateSystemInstanceCommandInput extends CreateSystemInstanceRequest {
    }
    export interface CreateSystemInstanceCommandOutput extends CreateSystemInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a system instance. </p>
        *          <p>This action validates the system instance, prepares the deployment-related resources. For Greengrass deployments, it updates the Greengrass group that is
        *             specified by the <code>greengrassGroupName</code> parameter. It also adds a file to the S3 bucket specified by the <code>s3BucketName</code> parameter. You need to
        *             call <code>DeploySystemInstance</code> after running this action.</p>
        *          <p>For Greengrass deployments, since this action modifies and adds resources to a Greengrass group and an S3 bucket on the caller's behalf, the calling identity must have write permissions
        *          to both the specified Greengrass group and S3 bucket. Otherwise, the call will fail with an authorization error.</p>
        *          <p>For cloud deployments, this action requires a <code>flowActionsRoleArn</code> value. This is an IAM role
        *       that has permissions to access AWS services, such as AWS Lambda and AWS IoT, that the flow uses when it executes.</p>
        *          <p>If the definition document doesn't specify a version of the user's namespace, the latest version will be used by default.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, CreateSystemInstanceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, CreateSystemInstanceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new CreateSystemInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSystemInstanceCommandInput} for command's `input` shape.
        * @see {@link CreateSystemInstanceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class CreateSystemInstanceCommand extends $Command<CreateSystemInstanceCommandInput, CreateSystemInstanceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: CreateSystemInstanceCommandInput;
            constructor(input: CreateSystemInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSystemInstanceCommandInput, CreateSystemInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { CreateSystemTemplateRequest, CreateSystemTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface CreateSystemTemplateCommandInput extends CreateSystemTemplateRequest {
    }
    export interface CreateSystemTemplateCommandOutput extends CreateSystemTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a system. The system is validated against the entities in the
        *          latest version of the user's namespace unless another namespace version is specified in the request.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, CreateSystemTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, CreateSystemTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new CreateSystemTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateSystemTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateSystemTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class CreateSystemTemplateCommand extends $Command<CreateSystemTemplateCommandInput, CreateSystemTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: CreateSystemTemplateCommandInput;
            constructor(input: CreateSystemTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateSystemTemplateCommandInput, CreateSystemTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteFlowTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeleteFlowTemplateRequest, DeleteFlowTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeleteFlowTemplateCommandInput extends DeleteFlowTemplateRequest {
    }
    export interface DeleteFlowTemplateCommandOutput extends DeleteFlowTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a workflow. Any new system or deployment that contains this workflow will fail to update or deploy.
        *          Existing deployments that contain the workflow will continue to run (since they use a snapshot of the workflow taken at the time of deployment).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeleteFlowTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeleteFlowTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeleteFlowTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteFlowTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteFlowTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeleteFlowTemplateCommand extends $Command<DeleteFlowTemplateCommandInput, DeleteFlowTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeleteFlowTemplateCommandInput;
            constructor(input: DeleteFlowTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteFlowTemplateCommandInput, DeleteFlowTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeleteNamespaceRequest, DeleteNamespaceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeleteNamespaceCommandInput extends DeleteNamespaceRequest {
    }
    export interface DeleteNamespaceCommandOutput extends DeleteNamespaceResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes the specified namespace. This action deletes all of the entities in the namespace. Delete the systems and flows that use entities in the namespace before performing this action.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeleteNamespaceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeleteNamespaceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeleteNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteNamespaceCommandInput} for command's `input` shape.
        * @see {@link DeleteNamespaceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeleteNamespaceCommand extends $Command<DeleteNamespaceCommandInput, DeleteNamespaceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeleteNamespaceCommandInput;
            constructor(input: DeleteNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteNamespaceCommandInput, DeleteNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeleteSystemInstanceRequest, DeleteSystemInstanceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeleteSystemInstanceCommandInput extends DeleteSystemInstanceRequest {
    }
    export interface DeleteSystemInstanceCommandOutput extends DeleteSystemInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a system instance.
        *          Only system instances that have never been deployed, or that have been undeployed can be deleted.</p>
        *          <p>Users can create a new system instance that has the same ID as a deleted system instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeleteSystemInstanceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeleteSystemInstanceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeleteSystemInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSystemInstanceCommandInput} for command's `input` shape.
        * @see {@link DeleteSystemInstanceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeleteSystemInstanceCommand extends $Command<DeleteSystemInstanceCommandInput, DeleteSystemInstanceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeleteSystemInstanceCommandInput;
            constructor(input: DeleteSystemInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSystemInstanceCommandInput, DeleteSystemInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeleteSystemTemplateRequest, DeleteSystemTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeleteSystemTemplateCommandInput extends DeleteSystemTemplateRequest {
    }
    export interface DeleteSystemTemplateCommandOutput extends DeleteSystemTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a system. New deployments can't contain the system after its deletion.
        *       Existing deployments that contain the system will continue to work because they use a snapshot of the system that is taken when it is deployed.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeleteSystemTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeleteSystemTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeleteSystemTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteSystemTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteSystemTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeleteSystemTemplateCommand extends $Command<DeleteSystemTemplateCommandInput, DeleteSystemTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeleteSystemTemplateCommandInput;
            constructor(input: DeleteSystemTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteSystemTemplateCommandInput, DeleteSystemTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeploySystemInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeploySystemInstanceRequest, DeploySystemInstanceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeploySystemInstanceCommandInput extends DeploySystemInstanceRequest {
    }
    export interface DeploySystemInstanceCommandOutput extends DeploySystemInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>
        *             <b>Greengrass and Cloud Deployments</b>
        *          </p>
        *          <p>Deploys the system instance to the target specified in <code>CreateSystemInstance</code>. </p>
        *          <p>
        *             <b>Greengrass Deployments</b>
        *          </p>
        *          <p>If the system or any workflows and entities have been updated before this action is called, then the deployment will create a new Amazon Simple Storage Service
        *          resource file and then deploy it.</p>
        *          <p>Since this action creates a Greengrass deployment on the caller's behalf, the calling identity must have write permissions
        *          to the specified Greengrass group. Otherwise, the call will fail with an authorization error.</p>
        *          <p>For information about the artifacts that get added to your Greengrass core device when you use this API, see <a href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-greengrass.html">AWS IoT Things Graph and AWS IoT Greengrass</a>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeploySystemInstanceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeploySystemInstanceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeploySystemInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeploySystemInstanceCommandInput} for command's `input` shape.
        * @see {@link DeploySystemInstanceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeploySystemInstanceCommand extends $Command<DeploySystemInstanceCommandInput, DeploySystemInstanceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeploySystemInstanceCommandInput;
            constructor(input: DeploySystemInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeploySystemInstanceCommandInput, DeploySystemInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateFlowTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeprecateFlowTemplateRequest, DeprecateFlowTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeprecateFlowTemplateCommandInput extends DeprecateFlowTemplateRequest {
    }
    export interface DeprecateFlowTemplateCommandOutput extends DeprecateFlowTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deprecates the specified workflow. This action marks the workflow for deletion. Deprecated flows can't be deployed, but existing deployments will continue to run.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeprecateFlowTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeprecateFlowTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeprecateFlowTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeprecateFlowTemplateCommandInput} for command's `input` shape.
        * @see {@link DeprecateFlowTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeprecateFlowTemplateCommand extends $Command<DeprecateFlowTemplateCommandInput, DeprecateFlowTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeprecateFlowTemplateCommandInput;
            constructor(input: DeprecateFlowTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeprecateFlowTemplateCommandInput, DeprecateFlowTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateSystemTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DeprecateSystemTemplateRequest, DeprecateSystemTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DeprecateSystemTemplateCommandInput extends DeprecateSystemTemplateRequest {
    }
    export interface DeprecateSystemTemplateCommandOutput extends DeprecateSystemTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deprecates the specified system.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DeprecateSystemTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DeprecateSystemTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DeprecateSystemTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeprecateSystemTemplateCommandInput} for command's `input` shape.
        * @see {@link DeprecateSystemTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DeprecateSystemTemplateCommand extends $Command<DeprecateSystemTemplateCommandInput, DeprecateSystemTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DeprecateSystemTemplateCommandInput;
            constructor(input: DeprecateSystemTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeprecateSystemTemplateCommandInput, DeprecateSystemTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DescribeNamespaceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DescribeNamespaceRequest, DescribeNamespaceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DescribeNamespaceCommandInput extends DescribeNamespaceRequest {
    }
    export interface DescribeNamespaceCommandOutput extends DescribeNamespaceResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the latest version of the user's namespace and the public version that it is tracking.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DescribeNamespaceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DescribeNamespaceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DescribeNamespaceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeNamespaceCommandInput} for command's `input` shape.
        * @see {@link DescribeNamespaceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DescribeNamespaceCommand extends $Command<DescribeNamespaceCommandInput, DescribeNamespaceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DescribeNamespaceCommandInput;
            constructor(input: DescribeNamespaceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeNamespaceCommandInput, DescribeNamespaceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DissociateEntityFromThingCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { DissociateEntityFromThingRequest, DissociateEntityFromThingResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface DissociateEntityFromThingCommandInput extends DissociateEntityFromThingRequest {
    }
    export interface DissociateEntityFromThingCommandOutput extends DissociateEntityFromThingResponse, __MetadataBearer {
    }
    /**
        * <p>Dissociates a device entity from a concrete thing. The action takes only the type of the entity that you need to dissociate because only
        *          one entity of a particular type can be associated with a thing.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, DissociateEntityFromThingCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, DissociateEntityFromThingCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new DissociateEntityFromThingCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DissociateEntityFromThingCommandInput} for command's `input` shape.
        * @see {@link DissociateEntityFromThingCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class DissociateEntityFromThingCommand extends $Command<DissociateEntityFromThingCommandInput, DissociateEntityFromThingCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: DissociateEntityFromThingCommandInput;
            constructor(input: DissociateEntityFromThingCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DissociateEntityFromThingCommandInput, DissociateEntityFromThingCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetEntitiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetEntitiesRequest, GetEntitiesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetEntitiesCommandInput extends GetEntitiesRequest {
    }
    export interface GetEntitiesCommandOutput extends GetEntitiesResponse, __MetadataBearer {
    }
    /**
        * <p>Gets definitions of the specified entities. Uses the latest version of the user's namespace by default. This API returns the
        *       following TDM entities.</p>
        *          <ul>
        *             <li>
        *                <p>Properties</p>
        *             </li>
        *             <li>
        *                <p>States</p>
        *             </li>
        *             <li>
        *                <p>Events</p>
        *             </li>
        *             <li>
        *                <p>Actions</p>
        *             </li>
        *             <li>
        *                <p>Capabilities</p>
        *             </li>
        *             <li>
        *                <p>Mappings</p>
        *             </li>
        *             <li>
        *                <p>Devices</p>
        *             </li>
        *             <li>
        *                <p>Device Models</p>
        *             </li>
        *             <li>
        *                <p>Services</p>
        *             </li>
        *          </ul>
        *          <p>This action doesn't return definitions for systems, flows, and deployments.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetEntitiesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetEntitiesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetEntitiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetEntitiesCommandInput} for command's `input` shape.
        * @see {@link GetEntitiesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetEntitiesCommand extends $Command<GetEntitiesCommandInput, GetEntitiesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetEntitiesCommandInput;
            constructor(input: GetEntitiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEntitiesCommandInput, GetEntitiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetFlowTemplateRequest, GetFlowTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetFlowTemplateCommandInput extends GetFlowTemplateRequest {
    }
    export interface GetFlowTemplateCommandOutput extends GetFlowTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the latest version of the <code>DefinitionDocument</code> and <code>FlowTemplateSummary</code> for the specified workflow.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetFlowTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetFlowTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetFlowTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetFlowTemplateCommandInput} for command's `input` shape.
        * @see {@link GetFlowTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetFlowTemplateCommand extends $Command<GetFlowTemplateCommandInput, GetFlowTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetFlowTemplateCommandInput;
            constructor(input: GetFlowTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetFlowTemplateCommandInput, GetFlowTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateRevisionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetFlowTemplateRevisionsRequest, GetFlowTemplateRevisionsResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetFlowTemplateRevisionsCommandInput extends GetFlowTemplateRevisionsRequest {
    }
    export interface GetFlowTemplateRevisionsCommandOutput extends GetFlowTemplateRevisionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets revisions of the specified workflow. Only the last 100 revisions are stored. If the workflow has been deprecated,
        *       this action will return revisions that occurred before the deprecation. This action won't work for workflows that have been deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetFlowTemplateRevisionsCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetFlowTemplateRevisionsCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetFlowTemplateRevisionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetFlowTemplateRevisionsCommandInput} for command's `input` shape.
        * @see {@link GetFlowTemplateRevisionsCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetFlowTemplateRevisionsCommand extends $Command<GetFlowTemplateRevisionsCommandInput, GetFlowTemplateRevisionsCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetFlowTemplateRevisionsCommandInput;
            constructor(input: GetFlowTemplateRevisionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetFlowTemplateRevisionsCommandInput, GetFlowTemplateRevisionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetNamespaceDeletionStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetNamespaceDeletionStatusRequest, GetNamespaceDeletionStatusResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetNamespaceDeletionStatusCommandInput extends GetNamespaceDeletionStatusRequest {
    }
    export interface GetNamespaceDeletionStatusCommandOutput extends GetNamespaceDeletionStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the status of a namespace deletion task.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetNamespaceDeletionStatusCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetNamespaceDeletionStatusCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetNamespaceDeletionStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetNamespaceDeletionStatusCommandInput} for command's `input` shape.
        * @see {@link GetNamespaceDeletionStatusCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetNamespaceDeletionStatusCommand extends $Command<GetNamespaceDeletionStatusCommandInput, GetNamespaceDeletionStatusCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetNamespaceDeletionStatusCommandInput;
            constructor(input: GetNamespaceDeletionStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetNamespaceDeletionStatusCommandInput, GetNamespaceDeletionStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetSystemInstanceRequest, GetSystemInstanceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetSystemInstanceCommandInput extends GetSystemInstanceRequest {
    }
    export interface GetSystemInstanceCommandOutput extends GetSystemInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a system instance.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetSystemInstanceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetSystemInstanceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetSystemInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSystemInstanceCommandInput} for command's `input` shape.
        * @see {@link GetSystemInstanceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetSystemInstanceCommand extends $Command<GetSystemInstanceCommandInput, GetSystemInstanceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetSystemInstanceCommandInput;
            constructor(input: GetSystemInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSystemInstanceCommandInput, GetSystemInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetSystemTemplateRequest, GetSystemTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetSystemTemplateCommandInput extends GetSystemTemplateRequest {
    }
    export interface GetSystemTemplateCommandOutput extends GetSystemTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Gets a system.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetSystemTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetSystemTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetSystemTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSystemTemplateCommandInput} for command's `input` shape.
        * @see {@link GetSystemTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetSystemTemplateCommand extends $Command<GetSystemTemplateCommandInput, GetSystemTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetSystemTemplateCommandInput;
            constructor(input: GetSystemTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSystemTemplateCommandInput, GetSystemTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateRevisionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetSystemTemplateRevisionsRequest, GetSystemTemplateRevisionsResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetSystemTemplateRevisionsCommandInput extends GetSystemTemplateRevisionsRequest {
    }
    export interface GetSystemTemplateRevisionsCommandOutput extends GetSystemTemplateRevisionsResponse, __MetadataBearer {
    }
    /**
        * <p>Gets revisions made to the specified system template. Only the previous 100 revisions are stored. If the system has been deprecated, this action will return
        *       the revisions that occurred before its deprecation. This action won't work with systems that have been deleted.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetSystemTemplateRevisionsCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetSystemTemplateRevisionsCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetSystemTemplateRevisionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetSystemTemplateRevisionsCommandInput} for command's `input` shape.
        * @see {@link GetSystemTemplateRevisionsCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetSystemTemplateRevisionsCommand extends $Command<GetSystemTemplateRevisionsCommandInput, GetSystemTemplateRevisionsCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetSystemTemplateRevisionsCommandInput;
            constructor(input: GetSystemTemplateRevisionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetSystemTemplateRevisionsCommandInput, GetSystemTemplateRevisionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetUploadStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { GetUploadStatusRequest, GetUploadStatusResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface GetUploadStatusCommandInput extends GetUploadStatusRequest {
    }
    export interface GetUploadStatusCommandOutput extends GetUploadStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Gets the status of the specified upload.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, GetUploadStatusCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, GetUploadStatusCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new GetUploadStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetUploadStatusCommandInput} for command's `input` shape.
        * @see {@link GetUploadStatusCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class GetUploadStatusCommand extends $Command<GetUploadStatusCommandInput, GetUploadStatusCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: GetUploadStatusCommandInput;
            constructor(input: GetUploadStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetUploadStatusCommandInput, GetUploadStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListFlowExecutionMessagesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { ListFlowExecutionMessagesRequest, ListFlowExecutionMessagesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface ListFlowExecutionMessagesCommandInput extends ListFlowExecutionMessagesRequest {
    }
    export interface ListFlowExecutionMessagesCommandOutput extends ListFlowExecutionMessagesResponse, __MetadataBearer {
    }
    /**
        * <p>Returns a list of objects that contain information about events in a flow execution.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, ListFlowExecutionMessagesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, ListFlowExecutionMessagesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new ListFlowExecutionMessagesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListFlowExecutionMessagesCommandInput} for command's `input` shape.
        * @see {@link ListFlowExecutionMessagesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class ListFlowExecutionMessagesCommand extends $Command<ListFlowExecutionMessagesCommandInput, ListFlowExecutionMessagesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: ListFlowExecutionMessagesCommandInput;
            constructor(input: ListFlowExecutionMessagesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFlowExecutionMessagesCommandInput, ListFlowExecutionMessagesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all tags on an AWS IoT Things Graph resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, ListTagsForResourceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, ListTagsForResourceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchEntitiesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchEntitiesRequest, SearchEntitiesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchEntitiesCommandInput extends SearchEntitiesRequest {
    }
    export interface SearchEntitiesCommandOutput extends SearchEntitiesResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for entities of the specified type. You can search for entities in your namespace and the public namespace that you're tracking.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchEntitiesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchEntitiesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchEntitiesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchEntitiesCommandInput} for command's `input` shape.
        * @see {@link SearchEntitiesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchEntitiesCommand extends $Command<SearchEntitiesCommandInput, SearchEntitiesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchEntitiesCommandInput;
            constructor(input: SearchEntitiesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchEntitiesCommandInput, SearchEntitiesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowExecutionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchFlowExecutionsRequest, SearchFlowExecutionsResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchFlowExecutionsCommandInput extends SearchFlowExecutionsRequest {
    }
    export interface SearchFlowExecutionsCommandOutput extends SearchFlowExecutionsResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for AWS IoT Things Graph workflow execution instances.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchFlowExecutionsCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchFlowExecutionsCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchFlowExecutionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchFlowExecutionsCommandInput} for command's `input` shape.
        * @see {@link SearchFlowExecutionsCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchFlowExecutionsCommand extends $Command<SearchFlowExecutionsCommandInput, SearchFlowExecutionsCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchFlowExecutionsCommandInput;
            constructor(input: SearchFlowExecutionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchFlowExecutionsCommandInput, SearchFlowExecutionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchFlowTemplatesRequest, SearchFlowTemplatesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchFlowTemplatesCommandInput extends SearchFlowTemplatesRequest {
    }
    export interface SearchFlowTemplatesCommandOutput extends SearchFlowTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for summary information about workflows.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchFlowTemplatesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchFlowTemplatesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchFlowTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchFlowTemplatesCommandInput} for command's `input` shape.
        * @see {@link SearchFlowTemplatesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchFlowTemplatesCommand extends $Command<SearchFlowTemplatesCommandInput, SearchFlowTemplatesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchFlowTemplatesCommandInput;
            constructor(input: SearchFlowTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchFlowTemplatesCommandInput, SearchFlowTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemInstancesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchSystemInstancesRequest, SearchSystemInstancesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchSystemInstancesCommandInput extends SearchSystemInstancesRequest {
    }
    export interface SearchSystemInstancesCommandOutput extends SearchSystemInstancesResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for system instances in the user's account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchSystemInstancesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchSystemInstancesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchSystemInstancesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchSystemInstancesCommandInput} for command's `input` shape.
        * @see {@link SearchSystemInstancesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchSystemInstancesCommand extends $Command<SearchSystemInstancesCommandInput, SearchSystemInstancesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchSystemInstancesCommandInput;
            constructor(input: SearchSystemInstancesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchSystemInstancesCommandInput, SearchSystemInstancesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchSystemTemplatesRequest, SearchSystemTemplatesResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchSystemTemplatesCommandInput extends SearchSystemTemplatesRequest {
    }
    export interface SearchSystemTemplatesCommandOutput extends SearchSystemTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for summary information about systems in the user's account. You can filter by the ID of a workflow to return only systems that use the specified workflow.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchSystemTemplatesCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchSystemTemplatesCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchSystemTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchSystemTemplatesCommandInput} for command's `input` shape.
        * @see {@link SearchSystemTemplatesCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchSystemTemplatesCommand extends $Command<SearchSystemTemplatesCommandInput, SearchSystemTemplatesCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchSystemTemplatesCommandInput;
            constructor(input: SearchSystemTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchSystemTemplatesCommandInput, SearchSystemTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchThingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { SearchThingsRequest, SearchThingsResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface SearchThingsCommandInput extends SearchThingsRequest {
    }
    export interface SearchThingsCommandOutput extends SearchThingsResponse, __MetadataBearer {
    }
    /**
        * <p>Searches for things associated with the specified entity. You can search by both device and device model.</p>
        *          <p>For example, if two different devices, camera1 and camera2, implement the camera device model, the user can associate thing1 to camera1 and thing2 to camera2.
        *          <code>SearchThings(camera2)</code> will return only thing2, but <code>SearchThings(camera)</code> will return both thing1 and thing2.</p>
        *          <p>This action searches for exact matches and doesn't perform partial text matching.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, SearchThingsCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, SearchThingsCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new SearchThingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link SearchThingsCommandInput} for command's `input` shape.
        * @see {@link SearchThingsCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class SearchThingsCommand extends $Command<SearchThingsCommandInput, SearchThingsCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: SearchThingsCommandInput;
            constructor(input: SearchThingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchThingsCommandInput, SearchThingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a tag for the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, TagResourceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, TagResourceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UndeploySystemInstanceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { UndeploySystemInstanceRequest, UndeploySystemInstanceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface UndeploySystemInstanceCommandInput extends UndeploySystemInstanceRequest {
    }
    export interface UndeploySystemInstanceCommandOutput extends UndeploySystemInstanceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a system instance from its target (Cloud or Greengrass).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, UndeploySystemInstanceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, UndeploySystemInstanceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new UndeploySystemInstanceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UndeploySystemInstanceCommandInput} for command's `input` shape.
        * @see {@link UndeploySystemInstanceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class UndeploySystemInstanceCommand extends $Command<UndeploySystemInstanceCommandInput, UndeploySystemInstanceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: UndeploySystemInstanceCommandInput;
            constructor(input: UndeploySystemInstanceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UndeploySystemInstanceCommandInput, UndeploySystemInstanceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes a tag from the specified resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, UntagResourceCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, UntagResourceCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateFlowTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { UpdateFlowTemplateRequest, UpdateFlowTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface UpdateFlowTemplateCommandInput extends UpdateFlowTemplateRequest {
    }
    export interface UpdateFlowTemplateCommandOutput extends UpdateFlowTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the specified workflow. All deployed systems and system instances that use the workflow will see the changes in the flow when it is redeployed. If you don't want this
        *          behavior, copy the workflow (creating a new workflow with a different ID), and update the copy. The workflow can contain only entities in the specified namespace. </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, UpdateFlowTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, UpdateFlowTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new UpdateFlowTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateFlowTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateFlowTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class UpdateFlowTemplateCommand extends $Command<UpdateFlowTemplateCommandInput, UpdateFlowTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: UpdateFlowTemplateCommandInput;
            constructor(input: UpdateFlowTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateFlowTemplateCommandInput, UpdateFlowTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateSystemTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { UpdateSystemTemplateRequest, UpdateSystemTemplateResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface UpdateSystemTemplateCommandInput extends UpdateSystemTemplateRequest {
    }
    export interface UpdateSystemTemplateCommandOutput extends UpdateSystemTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Updates the specified system. You don't need to run this action after updating a workflow. Any deployment that uses the system will see the changes in the system when it is redeployed.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, UpdateSystemTemplateCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, UpdateSystemTemplateCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new UpdateSystemTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateSystemTemplateCommandInput} for command's `input` shape.
        * @see {@link UpdateSystemTemplateCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class UpdateSystemTemplateCommand extends $Command<UpdateSystemTemplateCommandInput, UpdateSystemTemplateCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: UpdateSystemTemplateCommandInput;
            constructor(input: UpdateSystemTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateSystemTemplateCommandInput, UpdateSystemTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UploadEntityDefinitionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { IoTThingsGraphClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient";
    import { UploadEntityDefinitionsRequest, UploadEntityDefinitionsResponse } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0";
    export interface UploadEntityDefinitionsCommandInput extends UploadEntityDefinitionsRequest {
    }
    export interface UploadEntityDefinitionsCommandOutput extends UploadEntityDefinitionsResponse, __MetadataBearer {
    }
    /**
        * <p>Asynchronously uploads one or more entity definitions to the user's namespace. The <code>document</code> parameter is required if
        *       <code>syncWithPublicNamespace</code> and <code>deleteExistingEntites</code> are false. If the <code>syncWithPublicNamespace</code> parameter  is set to
        *          <code>true</code>, the user's namespace will synchronize with the latest version of the public namespace. If <code>deprecateExistingEntities</code> is set to true,
        *       all entities in the latest version will be deleted before the new <code>DefinitionDocument</code> is uploaded.</p>
        *          <p>When a user uploads entity definitions for the first time, the service creates a new namespace for the user. The new namespace tracks the public namespace. Currently users
        *       can have only one namespace. The namespace version increments whenever a user uploads entity definitions that are backwards-incompatible and whenever a user sets the
        *          <code>syncWithPublicNamespace</code> parameter or the <code>deprecateExistingEntities</code> parameter to <code>true</code>.</p>
        *          <p>The IDs for all of the entities should be in URN format. Each entity must be in the user's namespace. Users can't create entities in the public namespace, but entity definitions can refer to entities in the public namespace.</p>
        *          <p>Valid entities are <code>Device</code>, <code>DeviceModel</code>, <code>Service</code>, <code>Capability</code>, <code>State</code>, <code>Action</code>, <code>Event</code>, <code>Property</code>,
        *          <code>Mapping</code>, <code>Enum</code>.
        *          </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { IoTThingsGraphClient, UploadEntityDefinitionsCommand } from "@aws-sdk/client-iotthingsgraph"; // ES Modules import
        * // const { IoTThingsGraphClient, UploadEntityDefinitionsCommand } = require("@aws-sdk/client-iotthingsgraph"); // CommonJS import
        * const client = new IoTThingsGraphClient(config);
        * const command = new UploadEntityDefinitionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UploadEntityDefinitionsCommandInput} for command's `input` shape.
        * @see {@link UploadEntityDefinitionsCommandOutput} for command's `response` shape.
        * @see {@link IoTThingsGraphClientResolvedConfig | config} for IoTThingsGraphClient's `config` shape.
        *
        */
    export class UploadEntityDefinitionsCommand extends $Command<UploadEntityDefinitionsCommandInput, UploadEntityDefinitionsCommandOutput, IoTThingsGraphClientResolvedConfig> {
            readonly input: UploadEntityDefinitionsCommandInput;
            constructor(input: UploadEntityDefinitionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTThingsGraphClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UploadEntityDefinitionsCommandInput, UploadEntityDefinitionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/IoTThingsGraphClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AssociateEntityToThingCommandInput, AssociateEntityToThingCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/AssociateEntityToThingCommand";
    import { CreateFlowTemplateCommandInput, CreateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateFlowTemplateCommand";
    import { CreateSystemInstanceCommandInput, CreateSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemInstanceCommand";
    import { CreateSystemTemplateCommandInput, CreateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/CreateSystemTemplateCommand";
    import { DeleteFlowTemplateCommandInput, DeleteFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteFlowTemplateCommand";
    import { DeleteNamespaceCommandInput, DeleteNamespaceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteNamespaceCommand";
    import { DeleteSystemInstanceCommandInput, DeleteSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemInstanceCommand";
    import { DeleteSystemTemplateCommandInput, DeleteSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeleteSystemTemplateCommand";
    import { DeploySystemInstanceCommandInput, DeploySystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeploySystemInstanceCommand";
    import { DeprecateFlowTemplateCommandInput, DeprecateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateFlowTemplateCommand";
    import { DeprecateSystemTemplateCommandInput, DeprecateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DeprecateSystemTemplateCommand";
    import { DescribeNamespaceCommandInput, DescribeNamespaceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DescribeNamespaceCommand";
    import { DissociateEntityFromThingCommandInput, DissociateEntityFromThingCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/DissociateEntityFromThingCommand";
    import { GetEntitiesCommandInput, GetEntitiesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetEntitiesCommand";
    import { GetFlowTemplateCommandInput, GetFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateCommand";
    import { GetFlowTemplateRevisionsCommandInput, GetFlowTemplateRevisionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetFlowTemplateRevisionsCommand";
    import { GetNamespaceDeletionStatusCommandInput, GetNamespaceDeletionStatusCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetNamespaceDeletionStatusCommand";
    import { GetSystemInstanceCommandInput, GetSystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemInstanceCommand";
    import { GetSystemTemplateCommandInput, GetSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateCommand";
    import { GetSystemTemplateRevisionsCommandInput, GetSystemTemplateRevisionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetSystemTemplateRevisionsCommand";
    import { GetUploadStatusCommandInput, GetUploadStatusCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/GetUploadStatusCommand";
    import { ListFlowExecutionMessagesCommandInput, ListFlowExecutionMessagesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListFlowExecutionMessagesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/ListTagsForResourceCommand";
    import { SearchEntitiesCommandInput, SearchEntitiesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchEntitiesCommand";
    import { SearchFlowExecutionsCommandInput, SearchFlowExecutionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowExecutionsCommand";
    import { SearchFlowTemplatesCommandInput, SearchFlowTemplatesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchFlowTemplatesCommand";
    import { SearchSystemInstancesCommandInput, SearchSystemInstancesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemInstancesCommand";
    import { SearchSystemTemplatesCommandInput, SearchSystemTemplatesCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchSystemTemplatesCommand";
    import { SearchThingsCommandInput, SearchThingsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/SearchThingsCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/TagResourceCommand";
    import { UndeploySystemInstanceCommandInput, UndeploySystemInstanceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UndeploySystemInstanceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UntagResourceCommand";
    import { UpdateFlowTemplateCommandInput, UpdateFlowTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateFlowTemplateCommand";
    import { UpdateSystemTemplateCommandInput, UpdateSystemTemplateCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UpdateSystemTemplateCommand";
    import { UploadEntityDefinitionsCommandInput, UploadEntityDefinitionsCommandOutput } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/commands/UploadEntityDefinitionsCommand";
    export type ServiceInputTypes = AssociateEntityToThingCommandInput | CreateFlowTemplateCommandInput | CreateSystemInstanceCommandInput | CreateSystemTemplateCommandInput | DeleteFlowTemplateCommandInput | DeleteNamespaceCommandInput | DeleteSystemInstanceCommandInput | DeleteSystemTemplateCommandInput | DeploySystemInstanceCommandInput | DeprecateFlowTemplateCommandInput | DeprecateSystemTemplateCommandInput | DescribeNamespaceCommandInput | DissociateEntityFromThingCommandInput | GetEntitiesCommandInput | GetFlowTemplateCommandInput | GetFlowTemplateRevisionsCommandInput | GetNamespaceDeletionStatusCommandInput | GetSystemInstanceCommandInput | GetSystemTemplateCommandInput | GetSystemTemplateRevisionsCommandInput | GetUploadStatusCommandInput | ListFlowExecutionMessagesCommandInput | ListTagsForResourceCommandInput | SearchEntitiesCommandInput | SearchFlowExecutionsCommandInput | SearchFlowTemplatesCommandInput | SearchSystemInstancesCommandInput | SearchSystemTemplatesCommandInput | SearchThingsCommandInput | TagResourceCommandInput | UndeploySystemInstanceCommandInput | UntagResourceCommandInput | UpdateFlowTemplateCommandInput | UpdateSystemTemplateCommandInput | UploadEntityDefinitionsCommandInput;
    export type ServiceOutputTypes = AssociateEntityToThingCommandOutput | CreateFlowTemplateCommandOutput | CreateSystemInstanceCommandOutput | CreateSystemTemplateCommandOutput | DeleteFlowTemplateCommandOutput | DeleteNamespaceCommandOutput | DeleteSystemInstanceCommandOutput | DeleteSystemTemplateCommandOutput | DeploySystemInstanceCommandOutput | DeprecateFlowTemplateCommandOutput | DeprecateSystemTemplateCommandOutput | DescribeNamespaceCommandOutput | DissociateEntityFromThingCommandOutput | GetEntitiesCommandOutput | GetFlowTemplateCommandOutput | GetFlowTemplateRevisionsCommandOutput | GetNamespaceDeletionStatusCommandOutput | GetSystemInstanceCommandOutput | GetSystemTemplateCommandOutput | GetSystemTemplateRevisionsCommandOutput | GetUploadStatusCommandOutput | ListFlowExecutionMessagesCommandOutput | ListTagsForResourceCommandOutput | SearchEntitiesCommandOutput | SearchFlowExecutionsCommandOutput | SearchFlowTemplatesCommandOutput | SearchSystemInstancesCommandOutput | SearchSystemTemplatesCommandOutput | SearchThingsCommandOutput | TagResourceCommandOutput | UndeploySystemInstanceCommandOutput | UntagResourceCommandOutput | UpdateFlowTemplateCommandOutput | UpdateSystemTemplateCommandOutput | UploadEntityDefinitionsCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type IoTThingsGraphClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of IoTThingsGraphClient class constructor that set the region, credentials and other options.
        */
    export interface IoTThingsGraphClientConfig extends IoTThingsGraphClientConfigType {
    }
    type IoTThingsGraphClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of IoTThingsGraphClient class. This is resolved and normalized from the {@link IoTThingsGraphClientConfig | constructor configuration interface}.
        */
    export interface IoTThingsGraphClientResolvedConfig extends IoTThingsGraphClientResolvedConfigType {
    }
    /**
        * <fullname>AWS IoT Things Graph</fullname>
        *          <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards,
        *        such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services
        *        and defining how they interact at an abstract level.</p>
        *          <p>For more information about how AWS IoT Things Graph works, see the <a href="https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html">User Guide</a>.</p>
        */
    export class IoTThingsGraphClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, IoTThingsGraphClientResolvedConfig> {
            /**
                * The resolved configuration of IoTThingsGraphClient class. This is resolved and normalized from the {@link IoTThingsGraphClientConfig | constructor configuration interface}.
                */
            readonly config: IoTThingsGraphClientResolvedConfig;
            constructor(configuration: IoTThingsGraphClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { IoTThingsGraphServiceException as __BaseException } from "@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/IoTThingsGraphServiceException";
    export interface AssociateEntityToThingRequest {
            /**
                * <p>The name of the thing to which the entity is to be associated.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The ID of the device to be associated with the thing.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:device:DEVICENAME</code>
                *          </p>
                */
            entityId: string | undefined;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                */
            namespaceVersion?: number;
    }
    export namespace AssociateEntityToThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateEntityToThingRequest) => any;
    }
    export interface AssociateEntityToThingResponse {
    }
    export namespace AssociateEntityToThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AssociateEntityToThingResponse) => any;
    }
    /**
        * <p></p>
        */
    export class InternalFailureException extends __BaseException {
            readonly name: "InternalFailureException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalFailureException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    export enum DefinitionLanguage {
            GRAPHQL = "GRAPHQL"
    }
    /**
        * <p>A document that defines an entity. </p>
        */
    export interface DefinitionDocument {
            /**
                * <p>The language used to define the entity. <code>GRAPHQL</code> is the only valid value.</p>
                */
            language: DefinitionLanguage | string | undefined;
            /**
                * <p>The GraphQL text that defines the entity.</p>
                */
            text: string | undefined;
    }
    export namespace DefinitionDocument {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DefinitionDocument) => any;
    }
    export interface CreateFlowTemplateRequest {
            /**
                * <p>The workflow <code>DefinitionDocument</code>.</p>
                */
            definition: DefinitionDocument | undefined;
            /**
                * <p>The namespace version in which the workflow is to be created.</p>
                *          <p>If no value is specified, the latest version is used by default.</p>
                */
            compatibleNamespaceVersion?: number;
    }
    export namespace CreateFlowTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFlowTemplateRequest) => any;
    }
    /**
        * <p>An object that contains summary information about a workflow.</p>
        */
    export interface FlowTemplateSummary {
            /**
                * <p>The ID of the workflow.</p>
                */
            id?: string;
            /**
                * <p>The ARN of the workflow.</p>
                */
            arn?: string;
            /**
                * <p>The revision number of the workflow.</p>
                */
            revisionNumber?: number;
            /**
                * <p>The date when the workflow was created.</p>
                */
            createdAt?: Date;
    }
    export namespace FlowTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FlowTemplateSummary) => any;
    }
    export interface CreateFlowTemplateResponse {
            /**
                * <p>The summary object that describes the created workflow.</p>
                */
            summary?: FlowTemplateSummary;
    }
    export namespace CreateFlowTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateFlowTemplateResponse) => any;
    }
    /**
        * <p></p>
        */
    export class LimitExceededException extends __BaseException {
            readonly name: "LimitExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
    }
    /**
        * <p></p>
        */
    export class ResourceAlreadyExistsException extends __BaseException {
            readonly name: "ResourceAlreadyExistsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>);
    }
    /**
        * <p>An object that specifies whether cloud metrics are collected in a deployment and, if so, what role is used to collect metrics.</p>
        */
    export interface MetricsConfiguration {
            /**
                * <p>A Boolean that specifies whether cloud metrics are collected.</p>
                */
            cloudMetricEnabled?: boolean;
            /**
                * <p>The ARN of the role that is used to collect cloud metrics.</p>
                */
            metricRuleRoleArn?: string;
    }
    export namespace MetricsConfiguration {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: MetricsConfiguration) => any;
    }
    /**
        * <p>Metadata assigned to an AWS IoT Things Graph resource consisting of a key-value pair.</p>
        */
    export interface Tag {
            /**
                * <p>The required name of the tag. The string value can be from 1 to 128 Unicode characters in length.</p>
                */
            key: string | undefined;
            /**
                * <p>The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length.</p>
                */
            value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export enum DeploymentTarget {
            CLOUD = "CLOUD",
            GREENGRASS = "GREENGRASS"
    }
    export interface CreateSystemInstanceRequest {
            /**
                * <p>Metadata, consisting of key-value pairs, that can be used to categorize your system instances.</p>
                */
            tags?: Tag[];
            /**
                * <p>A document that defines an entity. </p>
                */
            definition: DefinitionDocument | undefined;
            /**
                * <p>The target type of the deployment. Valid values are <code>GREENGRASS</code> and <code>CLOUD</code>.</p>
                */
            target: DeploymentTarget | string | undefined;
            /**
                * <p>The name of the Greengrass group where the system instance will be deployed. This value is required if
                *       the value of the <code>target</code> parameter is <code>GREENGRASS</code>.</p>
                */
            greengrassGroupName?: string;
            /**
                * <p>The name of the Amazon Simple Storage Service bucket that will be used to store and deploy the system instance's resource file. This value is required if
                *          the value of the <code>target</code> parameter is <code>GREENGRASS</code>.</p>
                */
            s3BucketName?: string;
            /**
                * <p>An object that specifies whether cloud metrics are collected in a deployment and, if so, what role is used to collect metrics.</p>
                */
            metricsConfiguration?: MetricsConfiguration;
            /**
                * <p>The ARN of the IAM role that AWS IoT Things Graph will assume when it executes the flow. This role must have
                *       read and write access to AWS Lambda and AWS IoT and any other AWS services that the flow uses when it executes.  This
                *       value is required if the value of the <code>target</code> parameter is <code>CLOUD</code>.</p>
                */
            flowActionsRoleArn?: string;
    }
    export namespace CreateSystemInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSystemInstanceRequest) => any;
    }
    export enum SystemInstanceDeploymentStatus {
            BOOTSTRAP = "BOOTSTRAP",
            DELETED_IN_TARGET = "DELETED_IN_TARGET",
            DEPLOYED_IN_TARGET = "DEPLOYED_IN_TARGET",
            DEPLOY_IN_PROGRESS = "DEPLOY_IN_PROGRESS",
            FAILED = "FAILED",
            NOT_DEPLOYED = "NOT_DEPLOYED",
            PENDING_DELETE = "PENDING_DELETE",
            UNDEPLOY_IN_PROGRESS = "UNDEPLOY_IN_PROGRESS"
    }
    /**
        * <p>An object that contains summary information about a system instance.</p>
        */
    export interface SystemInstanceSummary {
            /**
                * <p>The ID of the system instance.</p>
                */
            id?: string;
            /**
                * <p>The ARN of the system instance.</p>
                */
            arn?: string;
            /**
                * <p>The status of the system instance.</p>
                */
            status?: SystemInstanceDeploymentStatus | string;
            /**
                * <p>The target of the system instance.</p>
                */
            target?: DeploymentTarget | string;
            /**
                * <p>The ID of the Greengrass group where the system instance is deployed.</p>
                */
            greengrassGroupName?: string;
            /**
                * <p>The date when the system instance was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>
                *
                *          The date and time when the system instance was last updated.</p>
                */
            updatedAt?: Date;
            /**
                * <p>The ID of the Greengrass group where the system instance is deployed.</p>
                */
            greengrassGroupId?: string;
            /**
                * <p>The version of the Greengrass group where the system instance is deployed.</p>
                */
            greengrassGroupVersionId?: string;
    }
    export namespace SystemInstanceSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemInstanceSummary) => any;
    }
    export interface CreateSystemInstanceResponse {
            /**
                * <p>The summary object that describes the new system instance.</p>
                */
            summary?: SystemInstanceSummary;
    }
    export namespace CreateSystemInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSystemInstanceResponse) => any;
    }
    export interface CreateSystemTemplateRequest {
            /**
                * <p>The <code>DefinitionDocument</code> used to create the system.</p>
                */
            definition: DefinitionDocument | undefined;
            /**
                * <p>The namespace version in which the system is to be created.</p>
                *          <p>If no value is specified, the latest version is used by default.</p>
                */
            compatibleNamespaceVersion?: number;
    }
    export namespace CreateSystemTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSystemTemplateRequest) => any;
    }
    /**
        * <p>An object that contains information about a system.</p>
        */
    export interface SystemTemplateSummary {
            /**
                * <p>The ID of the system.</p>
                */
            id?: string;
            /**
                * <p>The ARN of the system.</p>
                */
            arn?: string;
            /**
                * <p>The revision number of the system.</p>
                */
            revisionNumber?: number;
            /**
                * <p>The date when the system was created.</p>
                */
            createdAt?: Date;
    }
    export namespace SystemTemplateSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemTemplateSummary) => any;
    }
    export interface CreateSystemTemplateResponse {
            /**
                * <p>The summary object that describes the created system.</p>
                */
            summary?: SystemTemplateSummary;
    }
    export namespace CreateSystemTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateSystemTemplateResponse) => any;
    }
    export interface DeleteFlowTemplateRequest {
            /**
                * <p>The ID of the workflow to be deleted.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
                *          </p>
                */
            id: string | undefined;
    }
    export namespace DeleteFlowTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFlowTemplateRequest) => any;
    }
    export interface DeleteFlowTemplateResponse {
    }
    export namespace DeleteFlowTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteFlowTemplateResponse) => any;
    }
    /**
        * <p></p>
        */
    export class ResourceInUseException extends __BaseException {
            readonly name: "ResourceInUseException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceInUseException, __BaseException>);
    }
    export interface DeleteNamespaceRequest {
    }
    export namespace DeleteNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteNamespaceRequest) => any;
    }
    export interface DeleteNamespaceResponse {
            /**
                * <p>The ARN of the namespace to be deleted.</p>
                */
            namespaceArn?: string;
            /**
                * <p>The name of the namespace to be deleted.</p>
                */
            namespaceName?: string;
    }
    export namespace DeleteNamespaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteNamespaceResponse) => any;
    }
    export interface DeleteSystemInstanceRequest {
            /**
                * <p>The ID of the system instance to be deleted.</p>
                */
            id?: string;
    }
    export namespace DeleteSystemInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSystemInstanceRequest) => any;
    }
    export interface DeleteSystemInstanceResponse {
    }
    export namespace DeleteSystemInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSystemInstanceResponse) => any;
    }
    export interface DeleteSystemTemplateRequest {
            /**
                * <p>The ID of the system to be deleted.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
                *          </p>
                */
            id: string | undefined;
    }
    export namespace DeleteSystemTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSystemTemplateRequest) => any;
    }
    export interface DeleteSystemTemplateResponse {
    }
    export namespace DeleteSystemTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteSystemTemplateResponse) => any;
    }
    /**
        * <p>An object that contains the ID and revision number of a workflow or system that is part of a deployment.</p>
        */
    export interface DependencyRevision {
            /**
                * <p>The ID of the workflow or system.</p>
                */
            id?: string;
            /**
                * <p>The revision number of the workflow or system.</p>
                */
            revisionNumber?: number;
    }
    export namespace DependencyRevision {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DependencyRevision) => any;
    }
    export interface DeploySystemInstanceRequest {
            /**
                * <p>The ID of the system instance. This value is returned by the <code>CreateSystemInstance</code> action.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:deployment:DEPLOYMENTNAME</code>
                *          </p>
                */
            id?: string;
    }
    export namespace DeploySystemInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeploySystemInstanceRequest) => any;
    }
    export interface DeploySystemInstanceResponse {
            /**
                * <p>An object that contains summary information about a system instance that was deployed. </p>
                */
            summary: SystemInstanceSummary | undefined;
            /**
                * <p>The ID of the Greengrass deployment used to deploy the system instance.</p>
                */
            greengrassDeploymentId?: string;
    }
    export namespace DeploySystemInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeploySystemInstanceResponse) => any;
    }
    export interface DeprecateFlowTemplateRequest {
            /**
                * <p>The ID of the workflow to be deleted.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
                *          </p>
                */
            id: string | undefined;
    }
    export namespace DeprecateFlowTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateFlowTemplateRequest) => any;
    }
    export interface DeprecateFlowTemplateResponse {
    }
    export namespace DeprecateFlowTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateFlowTemplateResponse) => any;
    }
    export interface DeprecateSystemTemplateRequest {
            /**
                * <p>The ID of the system to delete.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
                *          </p>
                */
            id: string | undefined;
    }
    export namespace DeprecateSystemTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateSystemTemplateRequest) => any;
    }
    export interface DeprecateSystemTemplateResponse {
    }
    export namespace DeprecateSystemTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeprecateSystemTemplateResponse) => any;
    }
    export interface DescribeNamespaceRequest {
            /**
                * <p>The name of the user's namespace. Set this to <code>aws</code> to get the public namespace.</p>
                */
            namespaceName?: string;
    }
    export namespace DescribeNamespaceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeNamespaceRequest) => any;
    }
    export interface DescribeNamespaceResponse {
            /**
                * <p>The ARN of the namespace.</p>
                */
            namespaceArn?: string;
            /**
                * <p>The name of the namespace.</p>
                */
            namespaceName?: string;
            /**
                * <p>The name of the public namespace that the latest namespace version is tracking.</p>
                */
            trackingNamespaceName?: string;
            /**
                * <p>The version of the public namespace that the latest version is tracking.</p>
                */
            trackingNamespaceVersion?: number;
            /**
                * <p>The version of the user's namespace to describe.</p>
                */
            namespaceVersion?: number;
    }
    export namespace DescribeNamespaceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeNamespaceResponse) => any;
    }
    export enum EntityType {
            ACTION = "ACTION",
            CAPABILITY = "CAPABILITY",
            DEVICE = "DEVICE",
            DEVICE_MODEL = "DEVICE_MODEL",
            ENUM = "ENUM",
            EVENT = "EVENT",
            MAPPING = "MAPPING",
            PROPERTY = "PROPERTY",
            SERVICE = "SERVICE",
            STATE = "STATE"
    }
    export interface DissociateEntityFromThingRequest {
            /**
                * <p>The name of the thing to disassociate.</p>
                */
            thingName: string | undefined;
            /**
                * <p>The entity type from which to disassociate the thing.</p>
                */
            entityType: EntityType | string | undefined;
    }
    export namespace DissociateEntityFromThingRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DissociateEntityFromThingRequest) => any;
    }
    export interface DissociateEntityFromThingResponse {
    }
    export namespace DissociateEntityFromThingResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DissociateEntityFromThingResponse) => any;
    }
    /**
        * <p>Describes the properties of an entity.</p>
        */
    export interface EntityDescription {
            /**
                * <p>The entity ID.</p>
                */
            id?: string;
            /**
                * <p>The entity ARN.</p>
                */
            arn?: string;
            /**
                * <p>The entity type.</p>
                */
            type?: EntityType | string;
            /**
                * <p>The time at which the entity was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The definition document of the entity.</p>
                */
            definition?: DefinitionDocument;
    }
    export namespace EntityDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EntityDescription) => any;
    }
    export enum EntityFilterName {
            NAME = "NAME",
            NAMESPACE = "NAMESPACE",
            REFERENCED_ENTITY_ID = "REFERENCED_ENTITY_ID",
            SEMANTIC_TYPE_PATH = "SEMANTIC_TYPE_PATH"
    }
    /**
        * <p>An object that filters an entity search. Multiple filters function as OR criteria in the search. For example a search that includes
        *       a <code>NAMESPACE</code> and a <code>REFERENCED_ENTITY_ID</code> filter searches for entities in the specified namespace that use the entity specified by
        *       the value of <code>REFERENCED_ENTITY_ID</code>.</p>
        */
    export interface EntityFilter {
            /**
                * <p>The name of the entity search filter field. <code>REFERENCED_ENTITY_ID</code> filters on entities that are used by the entity in the result set. For example,
                *          you can filter on the ID of a property that is used in a state.</p>
                */
            name?: EntityFilterName | string;
            /**
                * <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
                */
            value?: string[];
    }
    export namespace EntityFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: EntityFilter) => any;
    }
    export enum FlowExecutionEventType {
            ACKNOWLEDGE_TASK_MESSAGE = "ACKNOWLEDGE_TASK_MESSAGE",
            ACTIVITY_FAILED = "ACTIVITY_FAILED",
            ACTIVITY_SCHEDULED = "ACTIVITY_SCHEDULED",
            ACTIVITY_STARTED = "ACTIVITY_STARTED",
            ACTIVITY_SUCCEEDED = "ACTIVITY_SUCCEEDED",
            EXECUTION_ABORTED = "EXECUTION_ABORTED",
            EXECUTION_FAILED = "EXECUTION_FAILED",
            EXECUTION_STARTED = "EXECUTION_STARTED",
            EXECUTION_SUCCEEDED = "EXECUTION_SUCCEEDED",
            SCHEDULE_NEXT_READY_STEPS_TASK = "SCHEDULE_NEXT_READY_STEPS_TASK",
            START_FLOW_EXECUTION_TASK = "START_FLOW_EXECUTION_TASK",
            STEP_FAILED = "STEP_FAILED",
            STEP_STARTED = "STEP_STARTED",
            STEP_SUCCEEDED = "STEP_SUCCEEDED",
            THING_ACTION_TASK = "THING_ACTION_TASK",
            THING_ACTION_TASK_FAILED = "THING_ACTION_TASK_FAILED",
            THING_ACTION_TASK_SUCCEEDED = "THING_ACTION_TASK_SUCCEEDED"
    }
    /**
        * <p>An object that contains information about a flow event.</p>
        */
    export interface FlowExecutionMessage {
            /**
                * <p>The unique identifier of the message.</p>
                */
            messageId?: string;
            /**
                * <p>The type of flow event .</p>
                */
            eventType?: FlowExecutionEventType | string;
            /**
                * <p>The date and time when the message was last updated.</p>
                */
            timestamp?: Date;
            /**
                * <p>A string containing information about the flow event.</p>
                */
            payload?: string;
    }
    export namespace FlowExecutionMessage {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FlowExecutionMessage) => any;
    }
    export enum FlowExecutionStatus {
            ABORTED = "ABORTED",
            FAILED = "FAILED",
            RUNNING = "RUNNING",
            SUCCEEDED = "SUCCEEDED"
    }
    /**
        * <p>An object that contains summary information about a flow execution.</p>
        */
    export interface FlowExecutionSummary {
            /**
                * <p>The ID of the flow execution.</p>
                */
            flowExecutionId?: string;
            /**
                * <p>The current status of the flow execution.</p>
                */
            status?: FlowExecutionStatus | string;
            /**
                * <p>The ID of the system instance that contains the flow.</p>
                */
            systemInstanceId?: string;
            /**
                * <p>The ID of the flow.</p>
                */
            flowTemplateId?: string;
            /**
                * <p>The date and time when the flow execution summary was created.</p>
                */
            createdAt?: Date;
            /**
                * <p>The date and time when the flow execution summary was last updated.</p>
                */
            updatedAt?: Date;
    }
    export namespace FlowExecutionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FlowExecutionSummary) => any;
    }
    /**
        * <p>An object that contains a workflow's definition and summary information.</p>
        */
    export interface FlowTemplateDescription {
            /**
                * <p>An object that contains summary information about a workflow.</p>
                */
            summary?: FlowTemplateSummary;
            /**
                * <p>A workflow's definition document.</p>
                */
            definition?: DefinitionDocument;
            /**
                * <p>The version of the user's namespace against which the workflow was validated. Use this value in your system instance.</p>
                */
            validatedNamespaceVersion?: number;
    }
    export namespace FlowTemplateDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FlowTemplateDescription) => any;
    }
    export enum FlowTemplateFilterName {
            DEVICE_MODEL_ID = "DEVICE_MODEL_ID"
    }
    /**
        * <p>An object that filters a workflow search.</p>
        */
    export interface FlowTemplateFilter {
            /**
                * <p>The name of the search filter field.</p>
                */
            name: FlowTemplateFilterName | string | undefined;
            /**
                * <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
                */
            value: string[] | undefined;
    }
    export namespace FlowTemplateFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FlowTemplateFilter) => any;
    }
    export interface GetEntitiesRequest {
            /**
                * <p>An array of entity IDs.</p>
                *          <p>The IDs should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:device:DEVICENAME</code>
                *          </p>
                */
            ids: string[] | undefined;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                */
            namespaceVersion?: number;
    }
    export namespace GetEntitiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEntitiesRequest) => any;
    }
    export interface GetEntitiesResponse {
            /**
                * <p>An array of descriptions for the specified entities.</p>
                */
            descriptions?: EntityDescription[];
    }
    export namespace GetEntitiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetEntitiesResponse) => any;
    }
    export interface GetFlowTemplateRequest {
            /**
                * <p>The ID of the workflow.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The number of the workflow revision to retrieve.</p>
                */
            revisionNumber?: number;
    }
    export namespace GetFlowTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFlowTemplateRequest) => any;
    }
    export interface GetFlowTemplateResponse {
            /**
                * <p>The object that describes the specified workflow.</p>
                */
            description?: FlowTemplateDescription;
    }
    export namespace GetFlowTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFlowTemplateResponse) => any;
    }
    export interface GetFlowTemplateRevisionsRequest {
            /**
                * <p>The ID of the workflow.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace GetFlowTemplateRevisionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFlowTemplateRevisionsRequest) => any;
    }
    export interface GetFlowTemplateRevisionsResponse {
            /**
                * <p>An array of objects that provide summary data about each revision.</p>
                */
            summaries?: FlowTemplateSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace GetFlowTemplateRevisionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetFlowTemplateRevisionsResponse) => any;
    }
    export interface GetNamespaceDeletionStatusRequest {
    }
    export namespace GetNamespaceDeletionStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetNamespaceDeletionStatusRequest) => any;
    }
    export enum NamespaceDeletionStatusErrorCodes {
            VALIDATION_FAILED = "VALIDATION_FAILED"
    }
    export enum NamespaceDeletionStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    export interface GetNamespaceDeletionStatusResponse {
            /**
                * <p>The ARN of the namespace that is being deleted.</p>
                */
            namespaceArn?: string;
            /**
                * <p>The name of the namespace that is being deleted.</p>
                */
            namespaceName?: string;
            /**
                * <p>The status of the deletion request.</p>
                */
            status?: NamespaceDeletionStatus | string;
            /**
                * <p>An error code returned by the namespace deletion task.</p>
                */
            errorCode?: NamespaceDeletionStatusErrorCodes | string;
            /**
                * <p>An error code returned by the namespace deletion task.</p>
                */
            errorMessage?: string;
    }
    export namespace GetNamespaceDeletionStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetNamespaceDeletionStatusResponse) => any;
    }
    export interface GetSystemInstanceRequest {
            /**
                * <p>The ID of the system deployment instance. This value is returned by <code>CreateSystemInstance</code>.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:deployment:DEPLOYMENTNAME</code>
                *          </p>
                */
            id: string | undefined;
    }
    export namespace GetSystemInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemInstanceRequest) => any;
    }
    /**
        * <p>An object that contains a system instance definition and summary information.</p>
        */
    export interface SystemInstanceDescription {
            /**
                * <p>An object that contains summary information about a system instance.</p>
                */
            summary?: SystemInstanceSummary;
            /**
                * <p>A document that defines an entity. </p>
                */
            definition?: DefinitionDocument;
            /**
                * <p>The Amazon Simple Storage Service bucket where information about a system instance is stored.</p>
                */
            s3BucketName?: string;
            /**
                * <p>An object that specifies whether cloud metrics are collected in a deployment and, if so, what role is used to collect metrics.</p>
                */
            metricsConfiguration?: MetricsConfiguration;
            /**
                * <p>The version of the user's namespace against which the system instance was validated.</p>
                */
            validatedNamespaceVersion?: number;
            /**
                * <p>A list of objects that contain all of the IDs and revision numbers of workflows and systems that are used in a system instance.</p>
                */
            validatedDependencyRevisions?: DependencyRevision[];
            /**
                * <p>The AWS Identity and Access Management (IAM) role that AWS IoT Things Graph assumes during flow execution in a
                *       cloud deployment. This role must have read and write permissionss to AWS Lambda and AWS IoT and to any other
                *       AWS services that the flow uses.</p>
                */
            flowActionsRoleArn?: string;
    }
    export namespace SystemInstanceDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemInstanceDescription) => any;
    }
    export interface GetSystemInstanceResponse {
            /**
                * <p>An object that describes the system instance.</p>
                */
            description?: SystemInstanceDescription;
    }
    export namespace GetSystemInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemInstanceResponse) => any;
    }
    export interface GetSystemTemplateRequest {
            /**
                * <p>The ID of the system to get. This ID must be in the user's namespace.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The number that specifies the revision of the system to get.</p>
                */
            revisionNumber?: number;
    }
    export namespace GetSystemTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemTemplateRequest) => any;
    }
    /**
        * <p>An object that contains a system's definition document and summary information.</p>
        */
    export interface SystemTemplateDescription {
            /**
                * <p>An object that contains summary information about a system.</p>
                */
            summary?: SystemTemplateSummary;
            /**
                * <p>The definition document of a system.</p>
                */
            definition?: DefinitionDocument;
            /**
                * <p>The namespace version against which the system was validated. Use this value in your system instance.</p>
                */
            validatedNamespaceVersion?: number;
    }
    export namespace SystemTemplateDescription {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemTemplateDescription) => any;
    }
    export interface GetSystemTemplateResponse {
            /**
                * <p>An object that contains summary data about the system.</p>
                */
            description?: SystemTemplateDescription;
    }
    export namespace GetSystemTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemTemplateResponse) => any;
    }
    export interface GetSystemTemplateRevisionsRequest {
            /**
                * <p>The ID of the system template.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace GetSystemTemplateRevisionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemTemplateRevisionsRequest) => any;
    }
    export interface GetSystemTemplateRevisionsResponse {
            /**
                * <p>An array of objects that contain summary data about the system template revisions.</p>
                */
            summaries?: SystemTemplateSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results. </p>
                */
            nextToken?: string;
    }
    export namespace GetSystemTemplateRevisionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetSystemTemplateRevisionsResponse) => any;
    }
    export interface GetUploadStatusRequest {
            /**
                * <p>The ID of the upload. This value is returned by the <code>UploadEntityDefinitions</code> action.</p>
                */
            uploadId: string | undefined;
    }
    export namespace GetUploadStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUploadStatusRequest) => any;
    }
    export enum UploadStatus {
            FAILED = "FAILED",
            IN_PROGRESS = "IN_PROGRESS",
            SUCCEEDED = "SUCCEEDED"
    }
    export interface GetUploadStatusResponse {
            /**
                * <p>The ID of the upload.</p>
                */
            uploadId: string | undefined;
            /**
                * <p>The status of the upload. The initial status is <code>IN_PROGRESS</code>. The response show all validation failures if the upload fails.</p>
                */
            uploadStatus: UploadStatus | string | undefined;
            /**
                * <p>The ARN of the upload.</p>
                */
            namespaceArn?: string;
            /**
                * <p>The name of the upload's namespace.</p>
                */
            namespaceName?: string;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                */
            namespaceVersion?: number;
            /**
                * <p>The reason for an upload failure.</p>
                */
            failureReason?: string[];
            /**
                * <p>The date at which the upload was created.</p>
                */
            createdDate: Date | undefined;
    }
    export namespace GetUploadStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetUploadStatusResponse) => any;
    }
    export interface ListFlowExecutionMessagesRequest {
            /**
                * <p>The ID of the flow execution.</p>
                */
            flowExecutionId: string | undefined;
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace ListFlowExecutionMessagesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFlowExecutionMessagesRequest) => any;
    }
    export interface ListFlowExecutionMessagesResponse {
            /**
                * <p>A list of objects that contain information about events in the specified flow execution.</p>
                */
            messages?: FlowExecutionMessage[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results. </p>
                */
            nextToken?: string;
    }
    export namespace ListFlowExecutionMessagesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListFlowExecutionMessagesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The maximum number of tags to return.</p>
                */
            maxResults?: number;
            /**
                * <p>The Amazon Resource Name (ARN) of the resource whose tags are to be returned.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The token that specifies the next page of results to return.</p>
                */
            nextToken?: string;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>List of tags returned by the <code>ListTagsForResource</code> operation.</p>
                */
            tags?: Tag[];
            /**
                * <p>The token that specifies the next page of results to return.</p>
                */
            nextToken?: string;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface SearchEntitiesRequest {
            /**
                * <p>The entity types for which to search.</p>
                */
            entityTypes: (EntityType | string)[] | undefined;
            /**
                * <p>Optional filter to apply to the search. Valid filters are <code>NAME</code>
                *             <code>NAMESPACE</code>, <code>SEMANTIC_TYPE_PATH</code> and <code>REFERENCED_ENTITY_ID</code>.
                *          <code>REFERENCED_ENTITY_ID</code> filters on entities that are used by the entity in the result set. For example,
                *       you can filter on the ID of a property that is used in a state.</p>
                *          <p>Multiple filters function as OR criteria in the query. Multiple values passed inside the filter function as AND criteria.</p>
                */
            filters?: EntityFilter[];
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                */
            namespaceVersion?: number;
    }
    export namespace SearchEntitiesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchEntitiesRequest) => any;
    }
    export interface SearchEntitiesResponse {
            /**
                * <p>An array of descriptions for each entity returned in the search result.</p>
                */
            descriptions?: EntityDescription[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace SearchEntitiesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchEntitiesResponse) => any;
    }
    export interface SearchFlowExecutionsRequest {
            /**
                * <p>The ID of the system instance that contains the flow.</p>
                */
            systemInstanceId: string | undefined;
            /**
                * <p>The ID of a flow execution.</p>
                */
            flowExecutionId?: string;
            /**
                * <p>The date and time of the earliest flow execution to return.</p>
                */
            startTime?: Date;
            /**
                * <p>The date and time of the latest flow execution to return.</p>
                */
            endTime?: Date;
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace SearchFlowExecutionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchFlowExecutionsRequest) => any;
    }
    export interface SearchFlowExecutionsResponse {
            /**
                * <p>An array of objects that contain summary information about each workflow execution in the result set.</p>
                */
            summaries?: FlowExecutionSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace SearchFlowExecutionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchFlowExecutionsResponse) => any;
    }
    export interface SearchFlowTemplatesRequest {
            /**
                * <p>An array of objects that limit the result set. The only valid filter is <code>DEVICE_MODEL_ID</code>.</p>
                */
            filters?: FlowTemplateFilter[];
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace SearchFlowTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchFlowTemplatesRequest) => any;
    }
    export interface SearchFlowTemplatesResponse {
            /**
                * <p>An array of objects that contain summary information about each workflow in the result set.</p>
                */
            summaries?: FlowTemplateSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace SearchFlowTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchFlowTemplatesResponse) => any;
    }
    export enum SystemInstanceFilterName {
            GREENGRASS_GROUP_NAME = "GREENGRASS_GROUP_NAME",
            STATUS = "STATUS",
            SYSTEM_TEMPLATE_ID = "SYSTEM_TEMPLATE_ID"
    }
    /**
        * <p>An object that filters a system instance search.
        *          Multiple filters function as OR criteria in the search. For example a search that includes a GREENGRASS_GROUP_NAME and a
        *          STATUS filter searches for system instances in the specified Greengrass group that have the specified status.</p>
        */
    export interface SystemInstanceFilter {
            /**
                * <p>The name of the search filter field.</p>
                */
            name?: SystemInstanceFilterName | string;
            /**
                * <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search. </p>
                */
            value?: string[];
    }
    export namespace SystemInstanceFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemInstanceFilter) => any;
    }
    export interface SearchSystemInstancesRequest {
            /**
                * <p>Optional filter to apply to the search. Valid filters are <code>SYSTEM_TEMPLATE_ID</code>, <code>STATUS</code>, and
                *          <code>GREENGRASS_GROUP_NAME</code>.</p>
                *          <p>Multiple filters function as OR criteria in the query. Multiple values passed inside the filter function as AND criteria.</p>
                */
            filters?: SystemInstanceFilter[];
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace SearchSystemInstancesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchSystemInstancesRequest) => any;
    }
    export interface SearchSystemInstancesResponse {
            /**
                * <p>An array of objects that contain summary data abour the system instances in the result set.</p>
                */
            summaries?: SystemInstanceSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results. </p>
                */
            nextToken?: string;
    }
    export namespace SearchSystemInstancesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchSystemInstancesResponse) => any;
    }
    export enum SystemTemplateFilterName {
            FLOW_TEMPLATE_ID = "FLOW_TEMPLATE_ID"
    }
    /**
        * <p>An object that filters a system search.</p>
        */
    export interface SystemTemplateFilter {
            /**
                * <p>The name of the system search filter field.</p>
                */
            name: SystemTemplateFilterName | string | undefined;
            /**
                * <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
                */
            value: string[] | undefined;
    }
    export namespace SystemTemplateFilter {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SystemTemplateFilter) => any;
    }
    export interface SearchSystemTemplatesRequest {
            /**
                * <p>An array of filters that limit the result set. The only valid filter is <code>FLOW_TEMPLATE_ID</code>.</p>
                */
            filters?: SystemTemplateFilter[];
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
    }
    export namespace SearchSystemTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchSystemTemplatesRequest) => any;
    }
    export interface SearchSystemTemplatesResponse {
            /**
                * <p>An array of objects that contain summary information about each system deployment in the result set.</p>
                */
            summaries?: SystemTemplateSummary[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace SearchSystemTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchSystemTemplatesResponse) => any;
    }
    export interface SearchThingsRequest {
            /**
                * <p>The ID of the entity to which the things are associated.</p>
                *          <p>The IDs should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:device:DEVICENAME</code>
                *          </p>
                */
            entityId: string | undefined;
            /**
                * <p>The string that specifies the next page of results. Use this when you're paginating results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to return in the response.</p>
                */
            maxResults?: number;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                */
            namespaceVersion?: number;
    }
    export namespace SearchThingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchThingsRequest) => any;
    }
    /**
        * <p>An AWS IoT thing.</p>
        */
    export interface Thing {
            /**
                * <p>The ARN of the thing.</p>
                */
            thingArn?: string;
            /**
                * <p>The name of the thing.</p>
                */
            thingName?: string;
    }
    export namespace Thing {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Thing) => any;
    }
    export interface SearchThingsResponse {
            /**
                * <p>An array of things in the result set.</p>
                */
            things?: Thing[];
            /**
                * <p>The string to specify as <code>nextToken</code> when you request the next page of results.</p>
                */
            nextToken?: string;
    }
    export namespace SearchThingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SearchThingsResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource whose tags are returned.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of tags to add to the resource.></p>
                */
            tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UndeploySystemInstanceRequest {
            /**
                * <p>The ID of the system instance to remove from its target.</p>
                */
            id?: string;
    }
    export namespace UndeploySystemInstanceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UndeploySystemInstanceRequest) => any;
    }
    export interface UndeploySystemInstanceResponse {
            /**
                * <p>An object that contains summary information about the system instance that was removed from its target.</p>
                */
            summary?: SystemInstanceSummary;
    }
    export namespace UndeploySystemInstanceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UndeploySystemInstanceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource whose tags are to be removed.</p>
                */
            resourceArn: string | undefined;
            /**
                * <p>A list of tag key names to remove from the resource. You don't specify the value. Both the key and its associated value are removed. </p>
                *          <p>This parameter to the API requires a JSON text string argument. For information on how to format a JSON parameter for the various command line tool environments, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html#cli-using-param-json">Using JSON for Parameters</a> in the <i>AWS CLI User Guide</i>. </p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateFlowTemplateRequest {
            /**
                * <p>The ID of the workflow to be updated.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The <code>DefinitionDocument</code> that contains the updated workflow definition.</p>
                */
            definition: DefinitionDocument | undefined;
            /**
                * <p>The version of the user's namespace.</p>
                *          <p>If no value is specified, the latest version is used by default. Use the <code>GetFlowTemplateRevisions</code> if you want to find earlier revisions of the flow
                *       to update.</p>
                */
            compatibleNamespaceVersion?: number;
    }
    export namespace UpdateFlowTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateFlowTemplateRequest) => any;
    }
    export interface UpdateFlowTemplateResponse {
            /**
                * <p>An object containing summary information about the updated workflow.</p>
                */
            summary?: FlowTemplateSummary;
    }
    export namespace UpdateFlowTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateFlowTemplateResponse) => any;
    }
    export interface UpdateSystemTemplateRequest {
            /**
                * <p>The ID of the system to be updated.</p>
                *          <p>The ID should be in the following format.</p>
                *          <p>
                *             <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
                *          </p>
                */
            id: string | undefined;
            /**
                * <p>The <code>DefinitionDocument</code> that contains the updated system definition.</p>
                */
            definition: DefinitionDocument | undefined;
            /**
                * <p>The version of the user's namespace. Defaults to the latest version of the user's namespace.</p>
                *          <p>If no value is specified, the latest version is used by default.</p>
                */
            compatibleNamespaceVersion?: number;
    }
    export namespace UpdateSystemTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSystemTemplateRequest) => any;
    }
    export interface UpdateSystemTemplateResponse {
            /**
                * <p>An object containing summary information about the updated system.</p>
                */
            summary?: SystemTemplateSummary;
    }
    export namespace UpdateSystemTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateSystemTemplateResponse) => any;
    }
    export interface UploadEntityDefinitionsRequest {
            /**
                * <p>The <code>DefinitionDocument</code> that defines the updated entities.</p>
                */
            document?: DefinitionDocument;
            /**
                * <p>A Boolean that specifies whether to synchronize with the latest version of the public namespace. If set to <code>true</code>, the upload will create a new namespace version.</p>
                */
            syncWithPublicNamespace?: boolean;
            /**
                * <p>A Boolean that specifies whether to deprecate all entities in the latest version before uploading the new <code>DefinitionDocument</code>.
                *          If set to <code>true</code>, the upload will create a new namespace version.</p>
                */
            deprecateExistingEntities?: boolean;
    }
    export namespace UploadEntityDefinitionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadEntityDefinitionsRequest) => any;
    }
    export interface UploadEntityDefinitionsResponse {
            /**
                * <p>The ID that specifies the upload action. You can use this to track the status of the upload.</p>
                */
            uploadId: string | undefined;
    }
    export namespace UploadEntityDefinitionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UploadEntityDefinitionsResponse) => any;
    }
}

declare module '@aws-sdk/client-iotthingsgraph/node_modules/@aws-sdk/client-iotthingsgraph/dist-types/models/IoTThingsGraphServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from IoTThingsGraph service.
        */
    export class IoTThingsGraphServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

