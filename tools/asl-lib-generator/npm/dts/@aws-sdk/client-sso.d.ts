// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-sso' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { GetRoleCredentialsCommandInput, GetRoleCredentialsCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/GetRoleCredentialsCommand";
    import { ListAccountRolesCommandInput, ListAccountRolesCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountRolesCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountsCommand";
    import { LogoutCommandInput, LogoutCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/LogoutCommand";
    import { SSOClient } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient";
    /**
        * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user
        *       access to AWS SSO resources such as the user portal. Users can get AWS account applications
        *       and roles assigned to them and get federated into the application.</p>
        *
        *          <p>For general information about AWS SSO, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">What is AWS
        *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>
        *
        *          <p>This API reference guide describes the AWS SSO Portal operations that you can call
        *       programatically and includes detailed information on data types and errors.</p>
        *
        *          <note>
        *             <p>AWS provides SDKs that consist of libraries and sample code for various programming
        *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a
        *         convenient way to create programmatic access to AWS SSO and other AWS services. For more
        *         information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p>
        *          </note>
        */
    export class SSO extends SSOClient {
            /**
                * <p>Returns the STS short-term credentials for a given role name that is assigned to the
                *       user.</p>
                */
            getRoleCredentials(args: GetRoleCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<GetRoleCredentialsCommandOutput>;
            getRoleCredentials(args: GetRoleCredentialsCommandInput, cb: (err: any, data?: GetRoleCredentialsCommandOutput) => void): void;
            getRoleCredentials(args: GetRoleCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRoleCredentialsCommandOutput) => void): void;
            /**
                * <p>Lists all roles that are assigned to the user for a given AWS account.</p>
                */
            listAccountRoles(args: ListAccountRolesCommandInput, options?: __HttpHandlerOptions): Promise<ListAccountRolesCommandOutput>;
            listAccountRoles(args: ListAccountRolesCommandInput, cb: (err: any, data?: ListAccountRolesCommandOutput) => void): void;
            listAccountRoles(args: ListAccountRolesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccountRolesCommandOutput) => void): void;
            /**
                * <p>Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the
                *       administrator of the account. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers">Assign User Access</a> in the <i>AWS SSO User Guide</i>. This operation
                *       returns a paginated response.</p>
                */
            listAccounts(args: ListAccountsCommandInput, options?: __HttpHandlerOptions): Promise<ListAccountsCommandOutput>;
            listAccounts(args: ListAccountsCommandInput, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            listAccounts(args: ListAccountsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAccountsCommandOutput) => void): void;
            /**
                * <p>Removes the client- and server-side session that is associated with the user.</p>
                */
            logout(args: LogoutCommandInput, options?: __HttpHandlerOptions): Promise<LogoutCommandOutput>;
            logout(args: LogoutCommandInput, cb: (err: any, data?: LogoutCommandOutput) => void): void;
            logout(args: LogoutCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: LogoutCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/GetRoleCredentialsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRoleCredentialsRequest, GetRoleCredentialsResponse } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SSOClientResolvedConfig } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient";
    export interface GetRoleCredentialsCommandInput extends GetRoleCredentialsRequest {
    }
    export interface GetRoleCredentialsCommandOutput extends GetRoleCredentialsResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the STS short-term credentials for a given role name that is assigned to the
        *       user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SSOClient, GetRoleCredentialsCommand } from "@aws-sdk/client-sso"; // ES Modules import
        * // const { SSOClient, GetRoleCredentialsCommand } = require("@aws-sdk/client-sso"); // CommonJS import
        * const client = new SSOClient(config);
        * const command = new GetRoleCredentialsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRoleCredentialsCommandInput} for command's `input` shape.
        * @see {@link GetRoleCredentialsCommandOutput} for command's `response` shape.
        * @see {@link SSOClientResolvedConfig | config} for SSOClient's `config` shape.
        *
        */
    export class GetRoleCredentialsCommand extends $Command<GetRoleCredentialsCommandInput, GetRoleCredentialsCommandOutput, SSOClientResolvedConfig> {
            readonly input: GetRoleCredentialsCommandInput;
            constructor(input: GetRoleCredentialsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSOClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRoleCredentialsCommandInput, GetRoleCredentialsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountRolesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccountRolesRequest, ListAccountRolesResponse } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SSOClientResolvedConfig } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient";
    export interface ListAccountRolesCommandInput extends ListAccountRolesRequest {
    }
    export interface ListAccountRolesCommandOutput extends ListAccountRolesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all roles that are assigned to the user for a given AWS account.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SSOClient, ListAccountRolesCommand } from "@aws-sdk/client-sso"; // ES Modules import
        * // const { SSOClient, ListAccountRolesCommand } = require("@aws-sdk/client-sso"); // CommonJS import
        * const client = new SSOClient(config);
        * const command = new ListAccountRolesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccountRolesCommandInput} for command's `input` shape.
        * @see {@link ListAccountRolesCommandOutput} for command's `response` shape.
        * @see {@link SSOClientResolvedConfig | config} for SSOClient's `config` shape.
        *
        */
    export class ListAccountRolesCommand extends $Command<ListAccountRolesCommandInput, ListAccountRolesCommandOutput, SSOClientResolvedConfig> {
            readonly input: ListAccountRolesCommandInput;
            constructor(input: ListAccountRolesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSOClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccountRolesCommandInput, ListAccountRolesCommandOutput>;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAccountsRequest, ListAccountsResponse } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SSOClientResolvedConfig } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient";
    export interface ListAccountsCommandInput extends ListAccountsRequest {
    }
    export interface ListAccountsCommandOutput extends ListAccountsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the
        *       administrator of the account. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers">Assign User Access</a> in the <i>AWS SSO User Guide</i>. This operation
        *       returns a paginated response.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SSOClient, ListAccountsCommand } from "@aws-sdk/client-sso"; // ES Modules import
        * // const { SSOClient, ListAccountsCommand } = require("@aws-sdk/client-sso"); // CommonJS import
        * const client = new SSOClient(config);
        * const command = new ListAccountsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAccountsCommandInput} for command's `input` shape.
        * @see {@link ListAccountsCommandOutput} for command's `response` shape.
        * @see {@link SSOClientResolvedConfig | config} for SSOClient's `config` shape.
        *
        */
    export class ListAccountsCommand extends $Command<ListAccountsCommandInput, ListAccountsCommandOutput, SSOClientResolvedConfig> {
            readonly input: ListAccountsCommandInput;
            constructor(input: ListAccountsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSOClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAccountsCommandInput, ListAccountsCommandOutput>;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/LogoutCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { LogoutRequest } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/models_0";
    import { ServiceInputTypes, ServiceOutputTypes, SSOClientResolvedConfig } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient";
    export interface LogoutCommandInput extends LogoutRequest {
    }
    export interface LogoutCommandOutput extends __MetadataBearer {
    }
    /**
        * <p>Removes the client- and server-side session that is associated with the user.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { SSOClient, LogoutCommand } from "@aws-sdk/client-sso"; // ES Modules import
        * // const { SSOClient, LogoutCommand } = require("@aws-sdk/client-sso"); // CommonJS import
        * const client = new SSOClient(config);
        * const command = new LogoutCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link LogoutCommandInput} for command's `input` shape.
        * @see {@link LogoutCommandOutput} for command's `response` shape.
        * @see {@link SSOClientResolvedConfig | config} for SSOClient's `config` shape.
        *
        */
    export class LogoutCommand extends $Command<LogoutCommandInput, LogoutCommandOutput, SSOClientResolvedConfig> {
            readonly input: LogoutCommandInput;
            constructor(input: LogoutCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSOClientResolvedConfig, options?: __HttpHandlerOptions): Handler<LogoutCommandInput, LogoutCommandOutput>;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/SSOClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { GetRoleCredentialsCommandInput, GetRoleCredentialsCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/GetRoleCredentialsCommand";
    import { ListAccountRolesCommandInput, ListAccountRolesCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountRolesCommand";
    import { ListAccountsCommandInput, ListAccountsCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/ListAccountsCommand";
    import { LogoutCommandInput, LogoutCommandOutput } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/commands/LogoutCommand";
    export type ServiceInputTypes = GetRoleCredentialsCommandInput | ListAccountRolesCommandInput | ListAccountsCommandInput | LogoutCommandInput;
    export type ServiceOutputTypes = GetRoleCredentialsCommandOutput | ListAccountRolesCommandOutput | ListAccountsCommandOutput | LogoutCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type SSOClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of SSOClient class constructor that set the region, credentials and other options.
        */
    export interface SSOClientConfig extends SSOClientConfigType {
    }
    type SSOClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of SSOClient class. This is resolved and normalized from the {@link SSOClientConfig | constructor configuration interface}.
        */
    export interface SSOClientResolvedConfig extends SSOClientResolvedConfigType {
    }
    /**
        * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user
        *       access to AWS SSO resources such as the user portal. Users can get AWS account applications
        *       and roles assigned to them and get federated into the application.</p>
        *
        *          <p>For general information about AWS SSO, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">What is AWS
        *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>
        *
        *          <p>This API reference guide describes the AWS SSO Portal operations that you can call
        *       programatically and includes detailed information on data types and errors.</p>
        *
        *          <note>
        *             <p>AWS provides SDKs that consist of libraries and sample code for various programming
        *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a
        *         convenient way to create programmatic access to AWS SSO and other AWS services. For more
        *         information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p>
        *          </note>
        */
    export class SSOClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, SSOClientResolvedConfig> {
            /**
                * The resolved configuration of SSOClient class. This is resolved and normalized from the {@link SSOClientConfig | constructor configuration interface}.
                */
            readonly config: SSOClientResolvedConfig;
            constructor(configuration: SSOClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { SSOServiceException as __BaseException } from "@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/SSOServiceException";
    /**
        * <p>Provides information about your AWS account.</p>
        */
    export interface AccountInfo {
            /**
                * <p>The identifier of the AWS account that is assigned to the user.</p>
                */
            accountId?: string;
            /**
                * <p>The display name of the AWS account that is assigned to the user.</p>
                */
            accountName?: string;
            /**
                * <p>The email address of the AWS account that is assigned to the user.</p>
                */
            emailAddress?: string;
    }
    export namespace AccountInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AccountInfo) => any;
    }
    export interface GetRoleCredentialsRequest {
            /**
                * <p>The friendly name of the role that is assigned to the user.</p>
                */
            roleName: string | undefined;
            /**
                * <p>The identifier for the AWS account that is assigned to the user.</p>
                */
            accountId: string | undefined;
            /**
                * <p>The token issued by the <code>CreateToken</code> API call. For more information, see
                *         <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.</p>
                */
            accessToken: string | undefined;
    }
    export namespace GetRoleCredentialsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRoleCredentialsRequest) => any;
    }
    /**
        * <p>Provides information about the role credentials that are assigned to the user.</p>
        */
    export interface RoleCredentials {
            /**
                * <p>The identifier used for the temporary security credentials. For more information, see
                *         <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the
                *         <i>AWS IAM User Guide</i>.</p>
                */
            accessKeyId?: string;
            /**
                * <p>The key that is used to sign the request. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the
                *         <i>AWS IAM User Guide</i>.</p>
                */
            secretAccessKey?: string;
            /**
                * <p>The token used for temporary credentials. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the
                *         <i>AWS IAM User Guide</i>.</p>
                */
            sessionToken?: string;
            /**
                * <p>The date on which temporary security credentials expire.</p>
                */
            expiration?: number;
    }
    export namespace RoleCredentials {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoleCredentials) => any;
    }
    export interface GetRoleCredentialsResponse {
            /**
                * <p>The credentials for the role that is assigned to the user.</p>
                */
            roleCredentials?: RoleCredentials;
    }
    export namespace GetRoleCredentialsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRoleCredentialsResponse) => any;
    }
    /**
        * <p>Indicates that a problem occurred with the input to the request. For example, a required
        *       parameter might be missing or out of range.</p>
        */
    export class InvalidRequestException extends __BaseException {
            readonly name: "InvalidRequestException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InvalidRequestException, __BaseException>);
    }
    /**
        * <p>The specified resource doesn't exist.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>Indicates that the request is being made too frequently and is more than what the server can handle.</p>
        */
    export class TooManyRequestsException extends __BaseException {
            readonly name: "TooManyRequestsException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>);
    }
    /**
        * <p>Indicates that the request is not authorized. This can happen due to an invalid access token in the request.</p>
        */
    export class UnauthorizedException extends __BaseException {
            readonly name: "UnauthorizedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<UnauthorizedException, __BaseException>);
    }
    export interface ListAccountRolesRequest {
            /**
                * <p>The page token from the previous response output when you request subsequent pages.</p>
                */
            nextToken?: string;
            /**
                * <p>The number of items that clients can request per page.</p>
                */
            maxResults?: number;
            /**
                * <p>The token issued by the <code>CreateToken</code> API call. For more information, see
                *         <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.</p>
                */
            accessToken: string | undefined;
            /**
                * <p>The identifier for the AWS account that is assigned to the user.</p>
                */
            accountId: string | undefined;
    }
    export namespace ListAccountRolesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountRolesRequest) => any;
    }
    /**
        * <p>Provides information about the role that is assigned to the user.</p>
        */
    export interface RoleInfo {
            /**
                * <p>The friendly name of the role that is assigned to the user.</p>
                */
            roleName?: string;
            /**
                * <p>The identifier of the AWS account assigned to the user.</p>
                */
            accountId?: string;
    }
    export namespace RoleInfo {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RoleInfo) => any;
    }
    export interface ListAccountRolesResponse {
            /**
                * <p>The page token client that is used to retrieve the list of accounts.</p>
                */
            nextToken?: string;
            /**
                * <p>A paginated response with the list of roles and the next token if more results are available.</p>
                */
            roleList?: RoleInfo[];
    }
    export namespace ListAccountRolesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountRolesResponse) => any;
    }
    export interface ListAccountsRequest {
            /**
                * <p>(Optional) When requesting subsequent pages, this is the page token from the previous response output.</p>
                */
            nextToken?: string;
            /**
                * <p>This is the number of items clients can request per page.</p>
                */
            maxResults?: number;
            /**
                * <p>The token issued by the <code>CreateToken</code> API call. For more information, see
                *         <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.</p>
                */
            accessToken: string | undefined;
    }
    export namespace ListAccountsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsRequest) => any;
    }
    export interface ListAccountsResponse {
            /**
                * <p>The page token client that is used to retrieve the list of accounts.</p>
                */
            nextToken?: string;
            /**
                * <p>A paginated response with the list of account information and the next token if more results are available.</p>
                */
            accountList?: AccountInfo[];
    }
    export namespace ListAccountsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAccountsResponse) => any;
    }
    export interface LogoutRequest {
            /**
                * <p>The token issued by the <code>CreateToken</code> API call. For more information, see
                *         <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.</p>
                */
            accessToken: string | undefined;
    }
    export namespace LogoutRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogoutRequest) => any;
    }
}

declare module '@aws-sdk/client-sso/node_modules/@aws-sdk/client-sso/dist-types/models/SSOServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from SSO service.
        */
    export class SSOServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

