// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-resiliencehub' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { AddDraftAppVersionResourceMappingsCommandInput, AddDraftAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/AddDraftAppVersionResourceMappingsCommand";
    import { CreateAppCommandInput, CreateAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateAppCommand";
    import { CreateRecommendationTemplateCommandInput, CreateRecommendationTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateRecommendationTemplateCommand";
    import { CreateResiliencyPolicyCommandInput, CreateResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateResiliencyPolicyCommand";
    import { DeleteAppAssessmentCommandInput, DeleteAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppAssessmentCommand";
    import { DeleteAppCommandInput, DeleteAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppCommand";
    import { DeleteRecommendationTemplateCommandInput, DeleteRecommendationTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteRecommendationTemplateCommand";
    import { DeleteResiliencyPolicyCommandInput, DeleteResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteResiliencyPolicyCommand";
    import { DescribeAppAssessmentCommandInput, DescribeAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppAssessmentCommand";
    import { DescribeAppCommandInput, DescribeAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppCommand";
    import { DescribeAppVersionResourcesResolutionStatusCommandInput, DescribeAppVersionResourcesResolutionStatusCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionResourcesResolutionStatusCommand";
    import { DescribeAppVersionTemplateCommandInput, DescribeAppVersionTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionTemplateCommand";
    import { DescribeDraftAppVersionResourcesImportStatusCommandInput, DescribeDraftAppVersionResourcesImportStatusCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeDraftAppVersionResourcesImportStatusCommand";
    import { DescribeResiliencyPolicyCommandInput, DescribeResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeResiliencyPolicyCommand";
    import { ImportResourcesToDraftAppVersionCommandInput, ImportResourcesToDraftAppVersionCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ImportResourcesToDraftAppVersionCommand";
    import { ListAlarmRecommendationsCommandInput, ListAlarmRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAlarmRecommendationsCommand";
    import { ListAppAssessmentsCommandInput, ListAppAssessmentsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppAssessmentsCommand";
    import { ListAppComponentCompliancesCommandInput, ListAppComponentCompliancesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentCompliancesCommand";
    import { ListAppComponentRecommendationsCommandInput, ListAppComponentRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentRecommendationsCommand";
    import { ListAppsCommandInput, ListAppsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppsCommand";
    import { ListAppVersionResourceMappingsCommandInput, ListAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourceMappingsCommand";
    import { ListAppVersionResourcesCommandInput, ListAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourcesCommand";
    import { ListAppVersionsCommandInput, ListAppVersionsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionsCommand";
    import { ListRecommendationTemplatesCommandInput, ListRecommendationTemplatesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListRecommendationTemplatesCommand";
    import { ListResiliencyPoliciesCommandInput, ListResiliencyPoliciesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListResiliencyPoliciesCommand";
    import { ListSopRecommendationsCommandInput, ListSopRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSopRecommendationsCommand";
    import { ListSuggestedResiliencyPoliciesCommandInput, ListSuggestedResiliencyPoliciesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSuggestedResiliencyPoliciesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTagsForResourceCommand";
    import { ListTestRecommendationsCommandInput, ListTestRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTestRecommendationsCommand";
    import { ListUnsupportedAppVersionResourcesCommandInput, ListUnsupportedAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListUnsupportedAppVersionResourcesCommand";
    import { PublishAppVersionCommandInput, PublishAppVersionCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PublishAppVersionCommand";
    import { PutDraftAppVersionTemplateCommandInput, PutDraftAppVersionTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PutDraftAppVersionTemplateCommand";
    import { RemoveDraftAppVersionResourceMappingsCommandInput, RemoveDraftAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/RemoveDraftAppVersionResourceMappingsCommand";
    import { ResolveAppVersionResourcesCommandInput, ResolveAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ResolveAppVersionResourcesCommand";
    import { StartAppAssessmentCommandInput, StartAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/StartAppAssessmentCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UntagResourceCommand";
    import { UpdateAppCommandInput, UpdateAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateAppCommand";
    import { UpdateResiliencyPolicyCommandInput, UpdateResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateResiliencyPolicyCommand";
    import { ResiliencehubClient } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    /**
        * <p>AWS Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from
        *       disruptions. Resilience Hub offers continuous resiliency assessment and validation that integrates
        *       into your software development lifecycle. This enables you to uncover resiliency weaknesses,
        *       ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your
        *       applications are met, and resolve issues before they are released into production. </p>
        */
    export class Resiliencehub extends ResiliencehubClient {
            /**
                * <p>Adds the resource mapping for the draft application version.</p>
                */
            addDraftAppVersionResourceMappings(args: AddDraftAppVersionResourceMappingsCommandInput, options?: __HttpHandlerOptions): Promise<AddDraftAppVersionResourceMappingsCommandOutput>;
            addDraftAppVersionResourceMappings(args: AddDraftAppVersionResourceMappingsCommandInput, cb: (err: any, data?: AddDraftAppVersionResourceMappingsCommandOutput) => void): void;
            addDraftAppVersionResourceMappings(args: AddDraftAppVersionResourceMappingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddDraftAppVersionResourceMappingsCommandOutput) => void): void;
            /**
                * <p>Creates a Resilience Hub application. A Resilience Hub application is a collection of Amazon Web Services
                *       resources structured to prevent and recover Amazon Web Services application disruptions. To describe a
                *       Resilience Hub application, you provide an application name, resources from one or more–up to
                *       five–CloudFormation stacks, and an appropriate resiliency policy.</p>
                *
                *          <p>After you create a Resilience Hub application, you publish it so that you can run a resiliency
                *       assessment on it. You can then use recommendations from the assessment to improve resiliency
                *       by running another assessment, comparing results, and then iterating the process until you
                *       achieve your goals for recovery time objective (RTO) and recovery point objective
                *       (RPO).</p>
                */
            createApp(args: CreateAppCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppCommandOutput>;
            createApp(args: CreateAppCommandInput, cb: (err: any, data?: CreateAppCommandOutput) => void): void;
            createApp(args: CreateAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppCommandOutput) => void): void;
            /**
                * <p>Creates a new recommendation template.</p>
                */
            createRecommendationTemplate(args: CreateRecommendationTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateRecommendationTemplateCommandOutput>;
            createRecommendationTemplate(args: CreateRecommendationTemplateCommandInput, cb: (err: any, data?: CreateRecommendationTemplateCommandOutput) => void): void;
            createRecommendationTemplate(args: CreateRecommendationTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRecommendationTemplateCommandOutput) => void): void;
            /**
                * <p>Creates a resiliency policy for an application.</p>
                */
            createResiliencyPolicy(args: CreateResiliencyPolicyCommandInput, options?: __HttpHandlerOptions): Promise<CreateResiliencyPolicyCommandOutput>;
            createResiliencyPolicy(args: CreateResiliencyPolicyCommandInput, cb: (err: any, data?: CreateResiliencyPolicyCommandOutput) => void): void;
            createResiliencyPolicy(args: CreateResiliencyPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateResiliencyPolicyCommandOutput) => void): void;
            /**
                * <p>Deletes an AWS Resilience Hub application. This is a destructive action that can't be
                *       undone.</p>
                */
            deleteApp(args: DeleteAppCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppCommandOutput>;
            deleteApp(args: DeleteAppCommandInput, cb: (err: any, data?: DeleteAppCommandOutput) => void): void;
            deleteApp(args: DeleteAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppCommandOutput) => void): void;
            /**
                * <p>Deletes an AWS Resilience Hub application assessment. This is a destructive action that can't
                *       be undone.</p>
                */
            deleteAppAssessment(args: DeleteAppAssessmentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppAssessmentCommandOutput>;
            deleteAppAssessment(args: DeleteAppAssessmentCommandInput, cb: (err: any, data?: DeleteAppAssessmentCommandOutput) => void): void;
            deleteAppAssessment(args: DeleteAppAssessmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppAssessmentCommandOutput) => void): void;
            /**
                * <p>Deletes a recommendation template. This is a destructive action that can't be
                *       undone.</p>
                */
            deleteRecommendationTemplate(args: DeleteRecommendationTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRecommendationTemplateCommandOutput>;
            deleteRecommendationTemplate(args: DeleteRecommendationTemplateCommandInput, cb: (err: any, data?: DeleteRecommendationTemplateCommandOutput) => void): void;
            deleteRecommendationTemplate(args: DeleteRecommendationTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRecommendationTemplateCommandOutput) => void): void;
            /**
                * <p>Deletes a resiliency policy. This is a destructive action that can't be undone.</p>
                */
            deleteResiliencyPolicy(args: DeleteResiliencyPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DeleteResiliencyPolicyCommandOutput>;
            deleteResiliencyPolicy(args: DeleteResiliencyPolicyCommandInput, cb: (err: any, data?: DeleteResiliencyPolicyCommandOutput) => void): void;
            deleteResiliencyPolicy(args: DeleteResiliencyPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteResiliencyPolicyCommandOutput) => void): void;
            /**
                * <p>Describes an AWS Resilience Hub application.</p>
                */
            describeApp(args: DescribeAppCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppCommandOutput>;
            describeApp(args: DescribeAppCommandInput, cb: (err: any, data?: DescribeAppCommandOutput) => void): void;
            describeApp(args: DescribeAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppCommandOutput) => void): void;
            /**
                * <p>Describes an assessment for an AWS Resilience Hub application.</p>
                */
            describeAppAssessment(args: DescribeAppAssessmentCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppAssessmentCommandOutput>;
            describeAppAssessment(args: DescribeAppAssessmentCommandInput, cb: (err: any, data?: DescribeAppAssessmentCommandOutput) => void): void;
            describeAppAssessment(args: DescribeAppAssessmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppAssessmentCommandOutput) => void): void;
            /**
                * <p>Returns the resolution status for the specified resolution identifier for an application
                *       version. If <code>resolutionId</code> is not specified, the current resolution status is
                *       returned.</p>
                */
            describeAppVersionResourcesResolutionStatus(args: DescribeAppVersionResourcesResolutionStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppVersionResourcesResolutionStatusCommandOutput>;
            describeAppVersionResourcesResolutionStatus(args: DescribeAppVersionResourcesResolutionStatusCommandInput, cb: (err: any, data?: DescribeAppVersionResourcesResolutionStatusCommandOutput) => void): void;
            describeAppVersionResourcesResolutionStatus(args: DescribeAppVersionResourcesResolutionStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppVersionResourcesResolutionStatusCommandOutput) => void): void;
            /**
                * <p>Describes details about an AWS Resilience Hub </p>
                */
            describeAppVersionTemplate(args: DescribeAppVersionTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppVersionTemplateCommandOutput>;
            describeAppVersionTemplate(args: DescribeAppVersionTemplateCommandInput, cb: (err: any, data?: DescribeAppVersionTemplateCommandOutput) => void): void;
            describeAppVersionTemplate(args: DescribeAppVersionTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppVersionTemplateCommandOutput) => void): void;
            /**
                * <p>Describes the status of importing resources to an application version.</p>
                */
            describeDraftAppVersionResourcesImportStatus(args: DescribeDraftAppVersionResourcesImportStatusCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDraftAppVersionResourcesImportStatusCommandOutput>;
            describeDraftAppVersionResourcesImportStatus(args: DescribeDraftAppVersionResourcesImportStatusCommandInput, cb: (err: any, data?: DescribeDraftAppVersionResourcesImportStatusCommandOutput) => void): void;
            describeDraftAppVersionResourcesImportStatus(args: DescribeDraftAppVersionResourcesImportStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDraftAppVersionResourcesImportStatusCommandOutput) => void): void;
            /**
                * <p>Describes a specified resiliency policy for an AWS Resilience Hub application. The returned
                *       policy object includes creation time, data location constraints, the Amazon Resource Name
                *       (ARN) for the policy, tags, tier, and more.</p>
                */
            describeResiliencyPolicy(args: DescribeResiliencyPolicyCommandInput, options?: __HttpHandlerOptions): Promise<DescribeResiliencyPolicyCommandOutput>;
            describeResiliencyPolicy(args: DescribeResiliencyPolicyCommandInput, cb: (err: any, data?: DescribeResiliencyPolicyCommandOutput) => void): void;
            describeResiliencyPolicy(args: DescribeResiliencyPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeResiliencyPolicyCommandOutput) => void): void;
            /**
                * <p>Imports resources from sources such as a CloudFormation stack, resource-groups, or application
                *       registry app to a draft application version.</p>
                */
            importResourcesToDraftAppVersion(args: ImportResourcesToDraftAppVersionCommandInput, options?: __HttpHandlerOptions): Promise<ImportResourcesToDraftAppVersionCommandOutput>;
            importResourcesToDraftAppVersion(args: ImportResourcesToDraftAppVersionCommandInput, cb: (err: any, data?: ImportResourcesToDraftAppVersionCommandOutput) => void): void;
            importResourcesToDraftAppVersion(args: ImportResourcesToDraftAppVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportResourcesToDraftAppVersionCommandOutput) => void): void;
            /**
                * <p>Lists the alarm recommendations for a AWS Resilience Hub application.</p>
                */
            listAlarmRecommendations(args: ListAlarmRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<ListAlarmRecommendationsCommandOutput>;
            listAlarmRecommendations(args: ListAlarmRecommendationsCommandInput, cb: (err: any, data?: ListAlarmRecommendationsCommandOutput) => void): void;
            listAlarmRecommendations(args: ListAlarmRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAlarmRecommendationsCommandOutput) => void): void;
            /**
                * <p>Lists the assessments for an AWS Resilience Hub application. You can use request parameters to
                *       refine the results for the response object.</p>
                */
            listAppAssessments(args: ListAppAssessmentsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppAssessmentsCommandOutput>;
            listAppAssessments(args: ListAppAssessmentsCommandInput, cb: (err: any, data?: ListAppAssessmentsCommandOutput) => void): void;
            listAppAssessments(args: ListAppAssessmentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppAssessmentsCommandOutput) => void): void;
            /**
                * <p>Lists the compliances for an AWS Resilience Hub component.</p>
                */
            listAppComponentCompliances(args: ListAppComponentCompliancesCommandInput, options?: __HttpHandlerOptions): Promise<ListAppComponentCompliancesCommandOutput>;
            listAppComponentCompliances(args: ListAppComponentCompliancesCommandInput, cb: (err: any, data?: ListAppComponentCompliancesCommandOutput) => void): void;
            listAppComponentCompliances(args: ListAppComponentCompliancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppComponentCompliancesCommandOutput) => void): void;
            /**
                * <p>Lists the recommendations for an AWS Resilience Hub component.</p>
                */
            listAppComponentRecommendations(args: ListAppComponentRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppComponentRecommendationsCommandOutput>;
            listAppComponentRecommendations(args: ListAppComponentRecommendationsCommandInput, cb: (err: any, data?: ListAppComponentRecommendationsCommandOutput) => void): void;
            listAppComponentRecommendations(args: ListAppComponentRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppComponentRecommendationsCommandOutput) => void): void;
            /**
                * <p>Lists your Resilience Hub applications.</p>
                */
            listApps(args: ListAppsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppsCommandOutput>;
            listApps(args: ListAppsCommandInput, cb: (err: any, data?: ListAppsCommandOutput) => void): void;
            listApps(args: ListAppsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppsCommandOutput) => void): void;
            /**
                * <p>Lists how the resources in an application version are mapped/sourced from. Mappings can be
                *       physical resource identifiers, CloudFormation stacks, resource-groups, or an application registry
                *       app.</p>
                */
            listAppVersionResourceMappings(args: ListAppVersionResourceMappingsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppVersionResourceMappingsCommandOutput>;
            listAppVersionResourceMappings(args: ListAppVersionResourceMappingsCommandInput, cb: (err: any, data?: ListAppVersionResourceMappingsCommandOutput) => void): void;
            listAppVersionResourceMappings(args: ListAppVersionResourceMappingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppVersionResourceMappingsCommandOutput) => void): void;
            /**
                * <p>Lists all the resources in an application version.</p>
                */
            listAppVersionResources(args: ListAppVersionResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListAppVersionResourcesCommandOutput>;
            listAppVersionResources(args: ListAppVersionResourcesCommandInput, cb: (err: any, data?: ListAppVersionResourcesCommandOutput) => void): void;
            listAppVersionResources(args: ListAppVersionResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppVersionResourcesCommandOutput) => void): void;
            /**
                * <p>Lists the different versions for the Resilience Hub applications.</p>
                */
            listAppVersions(args: ListAppVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListAppVersionsCommandOutput>;
            listAppVersions(args: ListAppVersionsCommandInput, cb: (err: any, data?: ListAppVersionsCommandOutput) => void): void;
            listAppVersions(args: ListAppVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAppVersionsCommandOutput) => void): void;
            /**
                * <p>Lists the recommendation templates for the Resilience Hub applications.</p>
                */
            listRecommendationTemplates(args: ListRecommendationTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListRecommendationTemplatesCommandOutput>;
            listRecommendationTemplates(args: ListRecommendationTemplatesCommandInput, cb: (err: any, data?: ListRecommendationTemplatesCommandOutput) => void): void;
            listRecommendationTemplates(args: ListRecommendationTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRecommendationTemplatesCommandOutput) => void): void;
            /**
                * <p>Lists the resiliency policies for the Resilience Hub applications.</p>
                */
            listResiliencyPolicies(args: ListResiliencyPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListResiliencyPoliciesCommandOutput>;
            listResiliencyPolicies(args: ListResiliencyPoliciesCommandInput, cb: (err: any, data?: ListResiliencyPoliciesCommandOutput) => void): void;
            listResiliencyPolicies(args: ListResiliencyPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListResiliencyPoliciesCommandOutput) => void): void;
            /**
                * <p>Lists the standard operating procedure (SOP) recommendations for the Resilience Hub
                *       applications.</p>
                */
            listSopRecommendations(args: ListSopRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<ListSopRecommendationsCommandOutput>;
            listSopRecommendations(args: ListSopRecommendationsCommandInput, cb: (err: any, data?: ListSopRecommendationsCommandOutput) => void): void;
            listSopRecommendations(args: ListSopRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSopRecommendationsCommandOutput) => void): void;
            /**
                * <p>Lists the suggested resiliency policies for the Resilience Hub applications.</p>
                */
            listSuggestedResiliencyPolicies(args: ListSuggestedResiliencyPoliciesCommandInput, options?: __HttpHandlerOptions): Promise<ListSuggestedResiliencyPoliciesCommandOutput>;
            listSuggestedResiliencyPolicies(args: ListSuggestedResiliencyPoliciesCommandInput, cb: (err: any, data?: ListSuggestedResiliencyPoliciesCommandOutput) => void): void;
            listSuggestedResiliencyPolicies(args: ListSuggestedResiliencyPoliciesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSuggestedResiliencyPoliciesCommandOutput) => void): void;
            /**
                * <p>Lists the tags for your resources in your Resilience Hub applications.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Lists the test recommendations for the Resilience Hub application.</p>
                */
            listTestRecommendations(args: ListTestRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<ListTestRecommendationsCommandOutput>;
            listTestRecommendations(args: ListTestRecommendationsCommandInput, cb: (err: any, data?: ListTestRecommendationsCommandOutput) => void): void;
            listTestRecommendations(args: ListTestRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTestRecommendationsCommandOutput) => void): void;
            /**
                * <p>Lists the resources that are not currently supported in AWS Resilience Hub. An unsupported
                *       resource is a resource that exists in the object that was used to create an app, but is not
                *       supported by Resilience Hub.</p>
                */
            listUnsupportedAppVersionResources(args: ListUnsupportedAppVersionResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ListUnsupportedAppVersionResourcesCommandOutput>;
            listUnsupportedAppVersionResources(args: ListUnsupportedAppVersionResourcesCommandInput, cb: (err: any, data?: ListUnsupportedAppVersionResourcesCommandOutput) => void): void;
            listUnsupportedAppVersionResources(args: ListUnsupportedAppVersionResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListUnsupportedAppVersionResourcesCommandOutput) => void): void;
            /**
                * <p>Publishes a new version of a specific Resilience Hub application.</p>
                */
            publishAppVersion(args: PublishAppVersionCommandInput, options?: __HttpHandlerOptions): Promise<PublishAppVersionCommandOutput>;
            publishAppVersion(args: PublishAppVersionCommandInput, cb: (err: any, data?: PublishAppVersionCommandOutput) => void): void;
            publishAppVersion(args: PublishAppVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PublishAppVersionCommandOutput) => void): void;
            /**
                * <p>Adds or updates the app template for a draft version of a Resilience Hub app.</p>
                */
            putDraftAppVersionTemplate(args: PutDraftAppVersionTemplateCommandInput, options?: __HttpHandlerOptions): Promise<PutDraftAppVersionTemplateCommandOutput>;
            putDraftAppVersionTemplate(args: PutDraftAppVersionTemplateCommandInput, cb: (err: any, data?: PutDraftAppVersionTemplateCommandOutput) => void): void;
            putDraftAppVersionTemplate(args: PutDraftAppVersionTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutDraftAppVersionTemplateCommandOutput) => void): void;
            /**
                * <p>Removes resource mappings from a draft application version.</p>
                */
            removeDraftAppVersionResourceMappings(args: RemoveDraftAppVersionResourceMappingsCommandInput, options?: __HttpHandlerOptions): Promise<RemoveDraftAppVersionResourceMappingsCommandOutput>;
            removeDraftAppVersionResourceMappings(args: RemoveDraftAppVersionResourceMappingsCommandInput, cb: (err: any, data?: RemoveDraftAppVersionResourceMappingsCommandOutput) => void): void;
            removeDraftAppVersionResourceMappings(args: RemoveDraftAppVersionResourceMappingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveDraftAppVersionResourceMappingsCommandOutput) => void): void;
            /**
                * <p>Resolves the resources for an application version.</p>
                */
            resolveAppVersionResources(args: ResolveAppVersionResourcesCommandInput, options?: __HttpHandlerOptions): Promise<ResolveAppVersionResourcesCommandOutput>;
            resolveAppVersionResources(args: ResolveAppVersionResourcesCommandInput, cb: (err: any, data?: ResolveAppVersionResourcesCommandOutput) => void): void;
            resolveAppVersionResources(args: ResolveAppVersionResourcesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ResolveAppVersionResourcesCommandOutput) => void): void;
            /**
                * <p>Creates a new application assessment for an application.</p>
                */
            startAppAssessment(args: StartAppAssessmentCommandInput, options?: __HttpHandlerOptions): Promise<StartAppAssessmentCommandOutput>;
            startAppAssessment(args: StartAppAssessmentCommandInput, cb: (err: any, data?: StartAppAssessmentCommandOutput) => void): void;
            startAppAssessment(args: StartAppAssessmentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartAppAssessmentCommandOutput) => void): void;
            /**
                * <p>Applies one or more tags to a resource.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Removes one or more tags from a resource.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates an application.</p>
                */
            updateApp(args: UpdateAppCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAppCommandOutput>;
            updateApp(args: UpdateAppCommandInput, cb: (err: any, data?: UpdateAppCommandOutput) => void): void;
            updateApp(args: UpdateAppCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAppCommandOutput) => void): void;
            /**
                * <p>Updates a resiliency policy.</p>
                */
            updateResiliencyPolicy(args: UpdateResiliencyPolicyCommandInput, options?: __HttpHandlerOptions): Promise<UpdateResiliencyPolicyCommandOutput>;
            updateResiliencyPolicy(args: UpdateResiliencyPolicyCommandInput, cb: (err: any, data?: UpdateResiliencyPolicyCommandOutput) => void): void;
            updateResiliencyPolicy(args: UpdateResiliencyPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateResiliencyPolicyCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/AddDraftAppVersionResourceMappingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { AddDraftAppVersionResourceMappingsRequest, AddDraftAppVersionResourceMappingsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface AddDraftAppVersionResourceMappingsCommandInput extends AddDraftAppVersionResourceMappingsRequest {
    }
    export interface AddDraftAppVersionResourceMappingsCommandOutput extends AddDraftAppVersionResourceMappingsResponse, __MetadataBearer {
    }
    /**
        * <p>Adds the resource mapping for the draft application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, AddDraftAppVersionResourceMappingsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, AddDraftAppVersionResourceMappingsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new AddDraftAppVersionResourceMappingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link AddDraftAppVersionResourceMappingsCommandInput} for command's `input` shape.
        * @see {@link AddDraftAppVersionResourceMappingsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class AddDraftAppVersionResourceMappingsCommand extends $Command<AddDraftAppVersionResourceMappingsCommandInput, AddDraftAppVersionResourceMappingsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: AddDraftAppVersionResourceMappingsCommandInput;
            constructor(input: AddDraftAppVersionResourceMappingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AddDraftAppVersionResourceMappingsCommandInput, AddDraftAppVersionResourceMappingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateAppRequest, CreateAppResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface CreateAppCommandInput extends CreateAppRequest {
    }
    export interface CreateAppCommandOutput extends CreateAppResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a Resilience Hub application. A Resilience Hub application is a collection of Amazon Web Services
        *       resources structured to prevent and recover Amazon Web Services application disruptions. To describe a
        *       Resilience Hub application, you provide an application name, resources from one or more–up to
        *       five–CloudFormation stacks, and an appropriate resiliency policy.</p>
        *
        *          <p>After you create a Resilience Hub application, you publish it so that you can run a resiliency
        *       assessment on it. You can then use recommendations from the assessment to improve resiliency
        *       by running another assessment, comparing results, and then iterating the process until you
        *       achieve your goals for recovery time objective (RTO) and recovery point objective
        *       (RPO).</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, CreateAppCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, CreateAppCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new CreateAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateAppCommandInput} for command's `input` shape.
        * @see {@link CreateAppCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class CreateAppCommand extends $Command<CreateAppCommandInput, CreateAppCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: CreateAppCommandInput;
            constructor(input: CreateAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAppCommandInput, CreateAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateRecommendationTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRecommendationTemplateRequest, CreateRecommendationTemplateResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface CreateRecommendationTemplateCommandInput extends CreateRecommendationTemplateRequest {
    }
    export interface CreateRecommendationTemplateCommandOutput extends CreateRecommendationTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new recommendation template.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, CreateRecommendationTemplateCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, CreateRecommendationTemplateCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new CreateRecommendationTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRecommendationTemplateCommandInput} for command's `input` shape.
        * @see {@link CreateRecommendationTemplateCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class CreateRecommendationTemplateCommand extends $Command<CreateRecommendationTemplateCommandInput, CreateRecommendationTemplateCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: CreateRecommendationTemplateCommandInput;
            constructor(input: CreateRecommendationTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRecommendationTemplateCommandInput, CreateRecommendationTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateResiliencyPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateResiliencyPolicyRequest, CreateResiliencyPolicyResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface CreateResiliencyPolicyCommandInput extends CreateResiliencyPolicyRequest {
    }
    export interface CreateResiliencyPolicyCommandOutput extends CreateResiliencyPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a resiliency policy for an application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, CreateResiliencyPolicyCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, CreateResiliencyPolicyCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new CreateResiliencyPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateResiliencyPolicyCommandInput} for command's `input` shape.
        * @see {@link CreateResiliencyPolicyCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class CreateResiliencyPolicyCommand extends $Command<CreateResiliencyPolicyCommandInput, CreateResiliencyPolicyCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: CreateResiliencyPolicyCommandInput;
            constructor(input: CreateResiliencyPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateResiliencyPolicyCommandInput, CreateResiliencyPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppAssessmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAppAssessmentRequest, DeleteAppAssessmentResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DeleteAppAssessmentCommandInput extends DeleteAppAssessmentRequest {
    }
    export interface DeleteAppAssessmentCommandOutput extends DeleteAppAssessmentResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an AWS Resilience Hub application assessment. This is a destructive action that can't
        *       be undone.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DeleteAppAssessmentCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DeleteAppAssessmentCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DeleteAppAssessmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppAssessmentCommandInput} for command's `input` shape.
        * @see {@link DeleteAppAssessmentCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DeleteAppAssessmentCommand extends $Command<DeleteAppAssessmentCommandInput, DeleteAppAssessmentCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DeleteAppAssessmentCommandInput;
            constructor(input: DeleteAppAssessmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppAssessmentCommandInput, DeleteAppAssessmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteAppRequest, DeleteAppResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DeleteAppCommandInput extends DeleteAppRequest {
    }
    export interface DeleteAppCommandOutput extends DeleteAppResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes an AWS Resilience Hub application. This is a destructive action that can't be
        *       undone.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DeleteAppCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DeleteAppCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DeleteAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteAppCommandInput} for command's `input` shape.
        * @see {@link DeleteAppCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DeleteAppCommand extends $Command<DeleteAppCommandInput, DeleteAppCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DeleteAppCommandInput;
            constructor(input: DeleteAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAppCommandInput, DeleteAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteRecommendationTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRecommendationTemplateRequest, DeleteRecommendationTemplateResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DeleteRecommendationTemplateCommandInput extends DeleteRecommendationTemplateRequest {
    }
    export interface DeleteRecommendationTemplateCommandOutput extends DeleteRecommendationTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a recommendation template. This is a destructive action that can't be
        *       undone.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DeleteRecommendationTemplateCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DeleteRecommendationTemplateCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DeleteRecommendationTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRecommendationTemplateCommandInput} for command's `input` shape.
        * @see {@link DeleteRecommendationTemplateCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DeleteRecommendationTemplateCommand extends $Command<DeleteRecommendationTemplateCommandInput, DeleteRecommendationTemplateCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DeleteRecommendationTemplateCommandInput;
            constructor(input: DeleteRecommendationTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRecommendationTemplateCommandInput, DeleteRecommendationTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteResiliencyPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteResiliencyPolicyRequest, DeleteResiliencyPolicyResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DeleteResiliencyPolicyCommandInput extends DeleteResiliencyPolicyRequest {
    }
    export interface DeleteResiliencyPolicyCommandOutput extends DeleteResiliencyPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a resiliency policy. This is a destructive action that can't be undone.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DeleteResiliencyPolicyCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DeleteResiliencyPolicyCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DeleteResiliencyPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteResiliencyPolicyCommandInput} for command's `input` shape.
        * @see {@link DeleteResiliencyPolicyCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DeleteResiliencyPolicyCommand extends $Command<DeleteResiliencyPolicyCommandInput, DeleteResiliencyPolicyCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DeleteResiliencyPolicyCommandInput;
            constructor(input: DeleteResiliencyPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteResiliencyPolicyCommandInput, DeleteResiliencyPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppAssessmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAppAssessmentRequest, DescribeAppAssessmentResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeAppAssessmentCommandInput extends DescribeAppAssessmentRequest {
    }
    export interface DescribeAppAssessmentCommandOutput extends DescribeAppAssessmentResponse, __MetadataBearer {
    }
    /**
        * <p>Describes an assessment for an AWS Resilience Hub application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeAppAssessmentCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeAppAssessmentCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeAppAssessmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppAssessmentCommandInput} for command's `input` shape.
        * @see {@link DescribeAppAssessmentCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeAppAssessmentCommand extends $Command<DescribeAppAssessmentCommandInput, DescribeAppAssessmentCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeAppAssessmentCommandInput;
            constructor(input: DescribeAppAssessmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppAssessmentCommandInput, DescribeAppAssessmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAppRequest, DescribeAppResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeAppCommandInput extends DescribeAppRequest {
    }
    export interface DescribeAppCommandOutput extends DescribeAppResponse, __MetadataBearer {
    }
    /**
        * <p>Describes an AWS Resilience Hub application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeAppCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeAppCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppCommandInput} for command's `input` shape.
        * @see {@link DescribeAppCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeAppCommand extends $Command<DescribeAppCommandInput, DescribeAppCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeAppCommandInput;
            constructor(input: DescribeAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppCommandInput, DescribeAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionResourcesResolutionStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAppVersionResourcesResolutionStatusRequest, DescribeAppVersionResourcesResolutionStatusResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeAppVersionResourcesResolutionStatusCommandInput extends DescribeAppVersionResourcesResolutionStatusRequest {
    }
    export interface DescribeAppVersionResourcesResolutionStatusCommandOutput extends DescribeAppVersionResourcesResolutionStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Returns the resolution status for the specified resolution identifier for an application
        *       version. If <code>resolutionId</code> is not specified, the current resolution status is
        *       returned.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeAppVersionResourcesResolutionStatusCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeAppVersionResourcesResolutionStatusCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeAppVersionResourcesResolutionStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppVersionResourcesResolutionStatusCommandInput} for command's `input` shape.
        * @see {@link DescribeAppVersionResourcesResolutionStatusCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeAppVersionResourcesResolutionStatusCommand extends $Command<DescribeAppVersionResourcesResolutionStatusCommandInput, DescribeAppVersionResourcesResolutionStatusCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeAppVersionResourcesResolutionStatusCommandInput;
            constructor(input: DescribeAppVersionResourcesResolutionStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppVersionResourcesResolutionStatusCommandInput, DescribeAppVersionResourcesResolutionStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeAppVersionTemplateRequest, DescribeAppVersionTemplateResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeAppVersionTemplateCommandInput extends DescribeAppVersionTemplateRequest {
    }
    export interface DescribeAppVersionTemplateCommandOutput extends DescribeAppVersionTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Describes details about an AWS Resilience Hub </p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeAppVersionTemplateCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeAppVersionTemplateCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeAppVersionTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeAppVersionTemplateCommandInput} for command's `input` shape.
        * @see {@link DescribeAppVersionTemplateCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeAppVersionTemplateCommand extends $Command<DescribeAppVersionTemplateCommandInput, DescribeAppVersionTemplateCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeAppVersionTemplateCommandInput;
            constructor(input: DescribeAppVersionTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAppVersionTemplateCommandInput, DescribeAppVersionTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeDraftAppVersionResourcesImportStatusCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeDraftAppVersionResourcesImportStatusRequest, DescribeDraftAppVersionResourcesImportStatusResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeDraftAppVersionResourcesImportStatusCommandInput extends DescribeDraftAppVersionResourcesImportStatusRequest {
    }
    export interface DescribeDraftAppVersionResourcesImportStatusCommandOutput extends DescribeDraftAppVersionResourcesImportStatusResponse, __MetadataBearer {
    }
    /**
        * <p>Describes the status of importing resources to an application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeDraftAppVersionResourcesImportStatusCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeDraftAppVersionResourcesImportStatusCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeDraftAppVersionResourcesImportStatusCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeDraftAppVersionResourcesImportStatusCommandInput} for command's `input` shape.
        * @see {@link DescribeDraftAppVersionResourcesImportStatusCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeDraftAppVersionResourcesImportStatusCommand extends $Command<DescribeDraftAppVersionResourcesImportStatusCommandInput, DescribeDraftAppVersionResourcesImportStatusCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeDraftAppVersionResourcesImportStatusCommandInput;
            constructor(input: DescribeDraftAppVersionResourcesImportStatusCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDraftAppVersionResourcesImportStatusCommandInput, DescribeDraftAppVersionResourcesImportStatusCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeResiliencyPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DescribeResiliencyPolicyRequest, DescribeResiliencyPolicyResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface DescribeResiliencyPolicyCommandInput extends DescribeResiliencyPolicyRequest {
    }
    export interface DescribeResiliencyPolicyCommandOutput extends DescribeResiliencyPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Describes a specified resiliency policy for an AWS Resilience Hub application. The returned
        *       policy object includes creation time, data location constraints, the Amazon Resource Name
        *       (ARN) for the policy, tags, tier, and more.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, DescribeResiliencyPolicyCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, DescribeResiliencyPolicyCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new DescribeResiliencyPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DescribeResiliencyPolicyCommandInput} for command's `input` shape.
        * @see {@link DescribeResiliencyPolicyCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class DescribeResiliencyPolicyCommand extends $Command<DescribeResiliencyPolicyCommandInput, DescribeResiliencyPolicyCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: DescribeResiliencyPolicyCommandInput;
            constructor(input: DescribeResiliencyPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeResiliencyPolicyCommandInput, DescribeResiliencyPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ImportResourcesToDraftAppVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ImportResourcesToDraftAppVersionRequest, ImportResourcesToDraftAppVersionResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ImportResourcesToDraftAppVersionCommandInput extends ImportResourcesToDraftAppVersionRequest {
    }
    export interface ImportResourcesToDraftAppVersionCommandOutput extends ImportResourcesToDraftAppVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Imports resources from sources such as a CloudFormation stack, resource-groups, or application
        *       registry app to a draft application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ImportResourcesToDraftAppVersionCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ImportResourcesToDraftAppVersionCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ImportResourcesToDraftAppVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ImportResourcesToDraftAppVersionCommandInput} for command's `input` shape.
        * @see {@link ImportResourcesToDraftAppVersionCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ImportResourcesToDraftAppVersionCommand extends $Command<ImportResourcesToDraftAppVersionCommandInput, ImportResourcesToDraftAppVersionCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ImportResourcesToDraftAppVersionCommandInput;
            constructor(input: ImportResourcesToDraftAppVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportResourcesToDraftAppVersionCommandInput, ImportResourcesToDraftAppVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAlarmRecommendationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAlarmRecommendationsRequest, ListAlarmRecommendationsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAlarmRecommendationsCommandInput extends ListAlarmRecommendationsRequest {
    }
    export interface ListAlarmRecommendationsCommandOutput extends ListAlarmRecommendationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the alarm recommendations for a AWS Resilience Hub application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAlarmRecommendationsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAlarmRecommendationsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAlarmRecommendationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAlarmRecommendationsCommandInput} for command's `input` shape.
        * @see {@link ListAlarmRecommendationsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAlarmRecommendationsCommand extends $Command<ListAlarmRecommendationsCommandInput, ListAlarmRecommendationsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAlarmRecommendationsCommandInput;
            constructor(input: ListAlarmRecommendationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAlarmRecommendationsCommandInput, ListAlarmRecommendationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppAssessmentsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppAssessmentsRequest, ListAppAssessmentsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppAssessmentsCommandInput extends ListAppAssessmentsRequest {
    }
    export interface ListAppAssessmentsCommandOutput extends ListAppAssessmentsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the assessments for an AWS Resilience Hub application. You can use request parameters to
        *       refine the results for the response object.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppAssessmentsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppAssessmentsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppAssessmentsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppAssessmentsCommandInput} for command's `input` shape.
        * @see {@link ListAppAssessmentsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppAssessmentsCommand extends $Command<ListAppAssessmentsCommandInput, ListAppAssessmentsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppAssessmentsCommandInput;
            constructor(input: ListAppAssessmentsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppAssessmentsCommandInput, ListAppAssessmentsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentCompliancesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppComponentCompliancesRequest, ListAppComponentCompliancesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppComponentCompliancesCommandInput extends ListAppComponentCompliancesRequest {
    }
    export interface ListAppComponentCompliancesCommandOutput extends ListAppComponentCompliancesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the compliances for an AWS Resilience Hub component.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppComponentCompliancesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppComponentCompliancesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppComponentCompliancesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppComponentCompliancesCommandInput} for command's `input` shape.
        * @see {@link ListAppComponentCompliancesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppComponentCompliancesCommand extends $Command<ListAppComponentCompliancesCommandInput, ListAppComponentCompliancesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppComponentCompliancesCommandInput;
            constructor(input: ListAppComponentCompliancesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppComponentCompliancesCommandInput, ListAppComponentCompliancesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentRecommendationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppComponentRecommendationsRequest, ListAppComponentRecommendationsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppComponentRecommendationsCommandInput extends ListAppComponentRecommendationsRequest {
    }
    export interface ListAppComponentRecommendationsCommandOutput extends ListAppComponentRecommendationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the recommendations for an AWS Resilience Hub component.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppComponentRecommendationsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppComponentRecommendationsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppComponentRecommendationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppComponentRecommendationsCommandInput} for command's `input` shape.
        * @see {@link ListAppComponentRecommendationsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppComponentRecommendationsCommand extends $Command<ListAppComponentRecommendationsCommandInput, ListAppComponentRecommendationsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppComponentRecommendationsCommandInput;
            constructor(input: ListAppComponentRecommendationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppComponentRecommendationsCommandInput, ListAppComponentRecommendationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppsRequest, ListAppsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppsCommandInput extends ListAppsRequest {
    }
    export interface ListAppsCommandOutput extends ListAppsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists your Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppsCommandInput} for command's `input` shape.
        * @see {@link ListAppsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppsCommand extends $Command<ListAppsCommandInput, ListAppsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppsCommandInput;
            constructor(input: ListAppsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppsCommandInput, ListAppsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourceMappingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppVersionResourceMappingsRequest, ListAppVersionResourceMappingsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppVersionResourceMappingsCommandInput extends ListAppVersionResourceMappingsRequest {
    }
    export interface ListAppVersionResourceMappingsCommandOutput extends ListAppVersionResourceMappingsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists how the resources in an application version are mapped/sourced from. Mappings can be
        *       physical resource identifiers, CloudFormation stacks, resource-groups, or an application registry
        *       app.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppVersionResourceMappingsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppVersionResourceMappingsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppVersionResourceMappingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppVersionResourceMappingsCommandInput} for command's `input` shape.
        * @see {@link ListAppVersionResourceMappingsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppVersionResourceMappingsCommand extends $Command<ListAppVersionResourceMappingsCommandInput, ListAppVersionResourceMappingsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppVersionResourceMappingsCommandInput;
            constructor(input: ListAppVersionResourceMappingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppVersionResourceMappingsCommandInput, ListAppVersionResourceMappingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppVersionResourcesRequest, ListAppVersionResourcesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppVersionResourcesCommandInput extends ListAppVersionResourcesRequest {
    }
    export interface ListAppVersionResourcesCommandOutput extends ListAppVersionResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists all the resources in an application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppVersionResourcesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppVersionResourcesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppVersionResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppVersionResourcesCommandInput} for command's `input` shape.
        * @see {@link ListAppVersionResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppVersionResourcesCommand extends $Command<ListAppVersionResourcesCommandInput, ListAppVersionResourcesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppVersionResourcesCommandInput;
            constructor(input: ListAppVersionResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppVersionResourcesCommandInput, ListAppVersionResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListAppVersionsRequest, ListAppVersionsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListAppVersionsCommandInput extends ListAppVersionsRequest {
    }
    export interface ListAppVersionsCommandOutput extends ListAppVersionsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the different versions for the Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListAppVersionsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListAppVersionsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListAppVersionsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListAppVersionsCommandInput} for command's `input` shape.
        * @see {@link ListAppVersionsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListAppVersionsCommand extends $Command<ListAppVersionsCommandInput, ListAppVersionsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListAppVersionsCommandInput;
            constructor(input: ListAppVersionsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAppVersionsCommandInput, ListAppVersionsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListRecommendationTemplatesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRecommendationTemplatesRequest, ListRecommendationTemplatesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListRecommendationTemplatesCommandInput extends ListRecommendationTemplatesRequest {
    }
    export interface ListRecommendationTemplatesCommandOutput extends ListRecommendationTemplatesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the recommendation templates for the Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListRecommendationTemplatesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListRecommendationTemplatesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListRecommendationTemplatesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRecommendationTemplatesCommandInput} for command's `input` shape.
        * @see {@link ListRecommendationTemplatesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListRecommendationTemplatesCommand extends $Command<ListRecommendationTemplatesCommandInput, ListRecommendationTemplatesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListRecommendationTemplatesCommandInput;
            constructor(input: ListRecommendationTemplatesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRecommendationTemplatesCommandInput, ListRecommendationTemplatesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListResiliencyPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListResiliencyPoliciesRequest, ListResiliencyPoliciesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListResiliencyPoliciesCommandInput extends ListResiliencyPoliciesRequest {
    }
    export interface ListResiliencyPoliciesCommandOutput extends ListResiliencyPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the resiliency policies for the Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListResiliencyPoliciesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListResiliencyPoliciesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListResiliencyPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListResiliencyPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListResiliencyPoliciesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListResiliencyPoliciesCommand extends $Command<ListResiliencyPoliciesCommandInput, ListResiliencyPoliciesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListResiliencyPoliciesCommandInput;
            constructor(input: ListResiliencyPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListResiliencyPoliciesCommandInput, ListResiliencyPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSopRecommendationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSopRecommendationsRequest, ListSopRecommendationsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListSopRecommendationsCommandInput extends ListSopRecommendationsRequest {
    }
    export interface ListSopRecommendationsCommandOutput extends ListSopRecommendationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the standard operating procedure (SOP) recommendations for the Resilience Hub
        *       applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListSopRecommendationsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListSopRecommendationsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListSopRecommendationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSopRecommendationsCommandInput} for command's `input` shape.
        * @see {@link ListSopRecommendationsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListSopRecommendationsCommand extends $Command<ListSopRecommendationsCommandInput, ListSopRecommendationsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListSopRecommendationsCommandInput;
            constructor(input: ListSopRecommendationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSopRecommendationsCommandInput, ListSopRecommendationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSuggestedResiliencyPoliciesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListSuggestedResiliencyPoliciesRequest, ListSuggestedResiliencyPoliciesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListSuggestedResiliencyPoliciesCommandInput extends ListSuggestedResiliencyPoliciesRequest {
    }
    export interface ListSuggestedResiliencyPoliciesCommandOutput extends ListSuggestedResiliencyPoliciesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the suggested resiliency policies for the Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListSuggestedResiliencyPoliciesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListSuggestedResiliencyPoliciesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListSuggestedResiliencyPoliciesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListSuggestedResiliencyPoliciesCommandInput} for command's `input` shape.
        * @see {@link ListSuggestedResiliencyPoliciesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListSuggestedResiliencyPoliciesCommand extends $Command<ListSuggestedResiliencyPoliciesCommandInput, ListSuggestedResiliencyPoliciesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListSuggestedResiliencyPoliciesCommandInput;
            constructor(input: ListSuggestedResiliencyPoliciesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListSuggestedResiliencyPoliciesCommandInput, ListSuggestedResiliencyPoliciesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags for your resources in your Resilience Hub applications.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListTagsForResourceCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListTagsForResourceCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTestRecommendationsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTestRecommendationsRequest, ListTestRecommendationsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListTestRecommendationsCommandInput extends ListTestRecommendationsRequest {
    }
    export interface ListTestRecommendationsCommandOutput extends ListTestRecommendationsResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the test recommendations for the Resilience Hub application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListTestRecommendationsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListTestRecommendationsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListTestRecommendationsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTestRecommendationsCommandInput} for command's `input` shape.
        * @see {@link ListTestRecommendationsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListTestRecommendationsCommand extends $Command<ListTestRecommendationsCommandInput, ListTestRecommendationsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListTestRecommendationsCommandInput;
            constructor(input: ListTestRecommendationsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTestRecommendationsCommandInput, ListTestRecommendationsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListUnsupportedAppVersionResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListUnsupportedAppVersionResourcesRequest, ListUnsupportedAppVersionResourcesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ListUnsupportedAppVersionResourcesCommandInput extends ListUnsupportedAppVersionResourcesRequest {
    }
    export interface ListUnsupportedAppVersionResourcesCommandOutput extends ListUnsupportedAppVersionResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the resources that are not currently supported in AWS Resilience Hub. An unsupported
        *       resource is a resource that exists in the object that was used to create an app, but is not
        *       supported by Resilience Hub.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ListUnsupportedAppVersionResourcesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ListUnsupportedAppVersionResourcesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ListUnsupportedAppVersionResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListUnsupportedAppVersionResourcesCommandInput} for command's `input` shape.
        * @see {@link ListUnsupportedAppVersionResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ListUnsupportedAppVersionResourcesCommand extends $Command<ListUnsupportedAppVersionResourcesCommandInput, ListUnsupportedAppVersionResourcesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ListUnsupportedAppVersionResourcesCommandInput;
            constructor(input: ListUnsupportedAppVersionResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUnsupportedAppVersionResourcesCommandInput, ListUnsupportedAppVersionResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PublishAppVersionCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PublishAppVersionRequest, PublishAppVersionResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface PublishAppVersionCommandInput extends PublishAppVersionRequest {
    }
    export interface PublishAppVersionCommandOutput extends PublishAppVersionResponse, __MetadataBearer {
    }
    /**
        * <p>Publishes a new version of a specific Resilience Hub application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, PublishAppVersionCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, PublishAppVersionCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new PublishAppVersionCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PublishAppVersionCommandInput} for command's `input` shape.
        * @see {@link PublishAppVersionCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class PublishAppVersionCommand extends $Command<PublishAppVersionCommandInput, PublishAppVersionCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: PublishAppVersionCommandInput;
            constructor(input: PublishAppVersionCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PublishAppVersionCommandInput, PublishAppVersionCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PutDraftAppVersionTemplateCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { PutDraftAppVersionTemplateRequest, PutDraftAppVersionTemplateResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface PutDraftAppVersionTemplateCommandInput extends PutDraftAppVersionTemplateRequest {
    }
    export interface PutDraftAppVersionTemplateCommandOutput extends PutDraftAppVersionTemplateResponse, __MetadataBearer {
    }
    /**
        * <p>Adds or updates the app template for a draft version of a Resilience Hub app.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, PutDraftAppVersionTemplateCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, PutDraftAppVersionTemplateCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new PutDraftAppVersionTemplateCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link PutDraftAppVersionTemplateCommandInput} for command's `input` shape.
        * @see {@link PutDraftAppVersionTemplateCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class PutDraftAppVersionTemplateCommand extends $Command<PutDraftAppVersionTemplateCommandInput, PutDraftAppVersionTemplateCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: PutDraftAppVersionTemplateCommandInput;
            constructor(input: PutDraftAppVersionTemplateCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutDraftAppVersionTemplateCommandInput, PutDraftAppVersionTemplateCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/RemoveDraftAppVersionResourceMappingsCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { RemoveDraftAppVersionResourceMappingsRequest, RemoveDraftAppVersionResourceMappingsResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface RemoveDraftAppVersionResourceMappingsCommandInput extends RemoveDraftAppVersionResourceMappingsRequest {
    }
    export interface RemoveDraftAppVersionResourceMappingsCommandOutput extends RemoveDraftAppVersionResourceMappingsResponse, __MetadataBearer {
    }
    /**
        * <p>Removes resource mappings from a draft application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, RemoveDraftAppVersionResourceMappingsCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, RemoveDraftAppVersionResourceMappingsCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new RemoveDraftAppVersionResourceMappingsCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link RemoveDraftAppVersionResourceMappingsCommandInput} for command's `input` shape.
        * @see {@link RemoveDraftAppVersionResourceMappingsCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class RemoveDraftAppVersionResourceMappingsCommand extends $Command<RemoveDraftAppVersionResourceMappingsCommandInput, RemoveDraftAppVersionResourceMappingsCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: RemoveDraftAppVersionResourceMappingsCommandInput;
            constructor(input: RemoveDraftAppVersionResourceMappingsCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RemoveDraftAppVersionResourceMappingsCommandInput, RemoveDraftAppVersionResourceMappingsCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ResolveAppVersionResourcesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ResolveAppVersionResourcesRequest, ResolveAppVersionResourcesResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface ResolveAppVersionResourcesCommandInput extends ResolveAppVersionResourcesRequest {
    }
    export interface ResolveAppVersionResourcesCommandOutput extends ResolveAppVersionResourcesResponse, __MetadataBearer {
    }
    /**
        * <p>Resolves the resources for an application version.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, ResolveAppVersionResourcesCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, ResolveAppVersionResourcesCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new ResolveAppVersionResourcesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ResolveAppVersionResourcesCommandInput} for command's `input` shape.
        * @see {@link ResolveAppVersionResourcesCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class ResolveAppVersionResourcesCommand extends $Command<ResolveAppVersionResourcesCommandInput, ResolveAppVersionResourcesCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: ResolveAppVersionResourcesCommandInput;
            constructor(input: ResolveAppVersionResourcesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ResolveAppVersionResourcesCommandInput, ResolveAppVersionResourcesCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/StartAppAssessmentCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { StartAppAssessmentRequest, StartAppAssessmentResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface StartAppAssessmentCommandInput extends StartAppAssessmentRequest {
    }
    export interface StartAppAssessmentCommandOutput extends StartAppAssessmentResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a new application assessment for an application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, StartAppAssessmentCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, StartAppAssessmentCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new StartAppAssessmentCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link StartAppAssessmentCommandInput} for command's `input` shape.
        * @see {@link StartAppAssessmentCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class StartAppAssessmentCommand extends $Command<StartAppAssessmentCommandInput, StartAppAssessmentCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: StartAppAssessmentCommandInput;
            constructor(input: StartAppAssessmentCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartAppAssessmentCommandInput, StartAppAssessmentCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Applies one or more tags to a resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, TagResourceCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, TagResourceCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Removes one or more tags from a resource.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, UntagResourceCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, UntagResourceCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateAppCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateAppRequest, UpdateAppResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface UpdateAppCommandInput extends UpdateAppRequest {
    }
    export interface UpdateAppCommandOutput extends UpdateAppResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an application.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, UpdateAppCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, UpdateAppCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new UpdateAppCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateAppCommandInput} for command's `input` shape.
        * @see {@link UpdateAppCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class UpdateAppCommand extends $Command<UpdateAppCommandInput, UpdateAppCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: UpdateAppCommandInput;
            constructor(input: UpdateAppCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAppCommandInput, UpdateAppCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateResiliencyPolicyCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateResiliencyPolicyRequest, UpdateResiliencyPolicyResponse } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0";
    import { ResiliencehubClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient";
    export interface UpdateResiliencyPolicyCommandInput extends UpdateResiliencyPolicyRequest {
    }
    export interface UpdateResiliencyPolicyCommandOutput extends UpdateResiliencyPolicyResponse, __MetadataBearer {
    }
    /**
        * <p>Updates a resiliency policy.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { ResiliencehubClient, UpdateResiliencyPolicyCommand } from "@aws-sdk/client-resiliencehub"; // ES Modules import
        * // const { ResiliencehubClient, UpdateResiliencyPolicyCommand } = require("@aws-sdk/client-resiliencehub"); // CommonJS import
        * const client = new ResiliencehubClient(config);
        * const command = new UpdateResiliencyPolicyCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateResiliencyPolicyCommandInput} for command's `input` shape.
        * @see {@link UpdateResiliencyPolicyCommandOutput} for command's `response` shape.
        * @see {@link ResiliencehubClientResolvedConfig | config} for ResiliencehubClient's `config` shape.
        *
        */
    export class UpdateResiliencyPolicyCommand extends $Command<UpdateResiliencyPolicyCommandInput, UpdateResiliencyPolicyCommandOutput, ResiliencehubClientResolvedConfig> {
            readonly input: UpdateResiliencyPolicyCommandInput;
            constructor(input: UpdateResiliencyPolicyCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ResiliencehubClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateResiliencyPolicyCommandInput, UpdateResiliencyPolicyCommandOutput>;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/ResiliencehubClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { AddDraftAppVersionResourceMappingsCommandInput, AddDraftAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/AddDraftAppVersionResourceMappingsCommand";
    import { CreateAppCommandInput, CreateAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateAppCommand";
    import { CreateRecommendationTemplateCommandInput, CreateRecommendationTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateRecommendationTemplateCommand";
    import { CreateResiliencyPolicyCommandInput, CreateResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/CreateResiliencyPolicyCommand";
    import { DeleteAppAssessmentCommandInput, DeleteAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppAssessmentCommand";
    import { DeleteAppCommandInput, DeleteAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteAppCommand";
    import { DeleteRecommendationTemplateCommandInput, DeleteRecommendationTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteRecommendationTemplateCommand";
    import { DeleteResiliencyPolicyCommandInput, DeleteResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DeleteResiliencyPolicyCommand";
    import { DescribeAppAssessmentCommandInput, DescribeAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppAssessmentCommand";
    import { DescribeAppCommandInput, DescribeAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppCommand";
    import { DescribeAppVersionResourcesResolutionStatusCommandInput, DescribeAppVersionResourcesResolutionStatusCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionResourcesResolutionStatusCommand";
    import { DescribeAppVersionTemplateCommandInput, DescribeAppVersionTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeAppVersionTemplateCommand";
    import { DescribeDraftAppVersionResourcesImportStatusCommandInput, DescribeDraftAppVersionResourcesImportStatusCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeDraftAppVersionResourcesImportStatusCommand";
    import { DescribeResiliencyPolicyCommandInput, DescribeResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/DescribeResiliencyPolicyCommand";
    import { ImportResourcesToDraftAppVersionCommandInput, ImportResourcesToDraftAppVersionCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ImportResourcesToDraftAppVersionCommand";
    import { ListAlarmRecommendationsCommandInput, ListAlarmRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAlarmRecommendationsCommand";
    import { ListAppAssessmentsCommandInput, ListAppAssessmentsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppAssessmentsCommand";
    import { ListAppComponentCompliancesCommandInput, ListAppComponentCompliancesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentCompliancesCommand";
    import { ListAppComponentRecommendationsCommandInput, ListAppComponentRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppComponentRecommendationsCommand";
    import { ListAppsCommandInput, ListAppsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppsCommand";
    import { ListAppVersionResourceMappingsCommandInput, ListAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourceMappingsCommand";
    import { ListAppVersionResourcesCommandInput, ListAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionResourcesCommand";
    import { ListAppVersionsCommandInput, ListAppVersionsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListAppVersionsCommand";
    import { ListRecommendationTemplatesCommandInput, ListRecommendationTemplatesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListRecommendationTemplatesCommand";
    import { ListResiliencyPoliciesCommandInput, ListResiliencyPoliciesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListResiliencyPoliciesCommand";
    import { ListSopRecommendationsCommandInput, ListSopRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSopRecommendationsCommand";
    import { ListSuggestedResiliencyPoliciesCommandInput, ListSuggestedResiliencyPoliciesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListSuggestedResiliencyPoliciesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTagsForResourceCommand";
    import { ListTestRecommendationsCommandInput, ListTestRecommendationsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListTestRecommendationsCommand";
    import { ListUnsupportedAppVersionResourcesCommandInput, ListUnsupportedAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ListUnsupportedAppVersionResourcesCommand";
    import { PublishAppVersionCommandInput, PublishAppVersionCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PublishAppVersionCommand";
    import { PutDraftAppVersionTemplateCommandInput, PutDraftAppVersionTemplateCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/PutDraftAppVersionTemplateCommand";
    import { RemoveDraftAppVersionResourceMappingsCommandInput, RemoveDraftAppVersionResourceMappingsCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/RemoveDraftAppVersionResourceMappingsCommand";
    import { ResolveAppVersionResourcesCommandInput, ResolveAppVersionResourcesCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/ResolveAppVersionResourcesCommand";
    import { StartAppAssessmentCommandInput, StartAppAssessmentCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/StartAppAssessmentCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UntagResourceCommand";
    import { UpdateAppCommandInput, UpdateAppCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateAppCommand";
    import { UpdateResiliencyPolicyCommandInput, UpdateResiliencyPolicyCommandOutput } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/commands/UpdateResiliencyPolicyCommand";
    export type ServiceInputTypes = AddDraftAppVersionResourceMappingsCommandInput | CreateAppCommandInput | CreateRecommendationTemplateCommandInput | CreateResiliencyPolicyCommandInput | DeleteAppAssessmentCommandInput | DeleteAppCommandInput | DeleteRecommendationTemplateCommandInput | DeleteResiliencyPolicyCommandInput | DescribeAppAssessmentCommandInput | DescribeAppCommandInput | DescribeAppVersionResourcesResolutionStatusCommandInput | DescribeAppVersionTemplateCommandInput | DescribeDraftAppVersionResourcesImportStatusCommandInput | DescribeResiliencyPolicyCommandInput | ImportResourcesToDraftAppVersionCommandInput | ListAlarmRecommendationsCommandInput | ListAppAssessmentsCommandInput | ListAppComponentCompliancesCommandInput | ListAppComponentRecommendationsCommandInput | ListAppVersionResourceMappingsCommandInput | ListAppVersionResourcesCommandInput | ListAppVersionsCommandInput | ListAppsCommandInput | ListRecommendationTemplatesCommandInput | ListResiliencyPoliciesCommandInput | ListSopRecommendationsCommandInput | ListSuggestedResiliencyPoliciesCommandInput | ListTagsForResourceCommandInput | ListTestRecommendationsCommandInput | ListUnsupportedAppVersionResourcesCommandInput | PublishAppVersionCommandInput | PutDraftAppVersionTemplateCommandInput | RemoveDraftAppVersionResourceMappingsCommandInput | ResolveAppVersionResourcesCommandInput | StartAppAssessmentCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateAppCommandInput | UpdateResiliencyPolicyCommandInput;
    export type ServiceOutputTypes = AddDraftAppVersionResourceMappingsCommandOutput | CreateAppCommandOutput | CreateRecommendationTemplateCommandOutput | CreateResiliencyPolicyCommandOutput | DeleteAppAssessmentCommandOutput | DeleteAppCommandOutput | DeleteRecommendationTemplateCommandOutput | DeleteResiliencyPolicyCommandOutput | DescribeAppAssessmentCommandOutput | DescribeAppCommandOutput | DescribeAppVersionResourcesResolutionStatusCommandOutput | DescribeAppVersionTemplateCommandOutput | DescribeDraftAppVersionResourcesImportStatusCommandOutput | DescribeResiliencyPolicyCommandOutput | ImportResourcesToDraftAppVersionCommandOutput | ListAlarmRecommendationsCommandOutput | ListAppAssessmentsCommandOutput | ListAppComponentCompliancesCommandOutput | ListAppComponentRecommendationsCommandOutput | ListAppVersionResourceMappingsCommandOutput | ListAppVersionResourcesCommandOutput | ListAppVersionsCommandOutput | ListAppsCommandOutput | ListRecommendationTemplatesCommandOutput | ListResiliencyPoliciesCommandOutput | ListSopRecommendationsCommandOutput | ListSuggestedResiliencyPoliciesCommandOutput | ListTagsForResourceCommandOutput | ListTestRecommendationsCommandOutput | ListUnsupportedAppVersionResourcesCommandOutput | PublishAppVersionCommandOutput | PutDraftAppVersionTemplateCommandOutput | RemoveDraftAppVersionResourceMappingsCommandOutput | ResolveAppVersionResourcesCommandOutput | StartAppAssessmentCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateAppCommandOutput | UpdateResiliencyPolicyCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type ResiliencehubClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of ResiliencehubClient class constructor that set the region, credentials and other options.
        */
    export interface ResiliencehubClientConfig extends ResiliencehubClientConfigType {
    }
    type ResiliencehubClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of ResiliencehubClient class. This is resolved and normalized from the {@link ResiliencehubClientConfig | constructor configuration interface}.
        */
    export interface ResiliencehubClientResolvedConfig extends ResiliencehubClientResolvedConfigType {
    }
    /**
        * <p>AWS Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from
        *       disruptions. Resilience Hub offers continuous resiliency assessment and validation that integrates
        *       into your software development lifecycle. This enables you to uncover resiliency weaknesses,
        *       ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your
        *       applications are met, and resolve issues before they are released into production. </p>
        */
    export class ResiliencehubClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ResiliencehubClientResolvedConfig> {
            /**
                * The resolved configuration of ResiliencehubClient class. This is resolved and normalized from the {@link ResiliencehubClientConfig | constructor configuration interface}.
                */
            readonly config: ResiliencehubClientResolvedConfig;
            constructor(configuration: ResiliencehubClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { ResiliencehubServiceException as __BaseException } from "@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/ResiliencehubServiceException";
    /**
        * <p>You don't have permissions to perform the requested operation. The user or role that is
        *       making the request must have at least one IAM permissions policy attached that grants the
        *       required permissions.</p>
        */
    export class AccessDeniedException extends __BaseException {
            readonly name: "AccessDeniedException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
    }
    export enum ResourceMappingType {
            APP_REGISTRY_APP = "AppRegistryApp",
            CFN_STACK = "CfnStack",
            RESOURCE = "Resource",
            RESOURCE_GROUP = "ResourceGroup",
            TERRAFORM = "Terraform"
    }
    export enum PhysicalIdentifierType {
            ARN = "Arn",
            NATIVE = "Native"
    }
    /**
        * <p>Defines a physical resource identifier.</p>
        */
    export interface PhysicalResourceId {
            /**
                * <p>The identifier of the physical resource.</p>
                */
            identifier: string | undefined;
            /**
                * <p>Specifies the type of physical resource identifier.</p>
                *          <dl>
                *             <dt>Arn</dt>
                *             <dd>
                *                <p>The resource identifier is an Amazon Resource Name (ARN) .</p>
                *             </dd>
                *             <dt>Native</dt>
                *             <dd>
                *                <p>The resource identifier is a Resilience Hub-native identifier.</p>
                *             </dd>
                *          </dl>
                */
            type: PhysicalIdentifierType | string | undefined;
            /**
                * <p>The Amazon Web Services Region that the physical resource is located in.</p>
                */
            awsRegion?: string;
            /**
                * <p>The Amazon Web Services account that owns the physical resource.</p>
                */
            awsAccountId?: string;
    }
    export namespace PhysicalResourceId {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhysicalResourceId) => any;
    }
    /**
        * <p>Defines a resource mapping.</p>
        */
    export interface ResourceMapping {
            /**
                * <p>The name of the resource this resource is mapped to.</p>
                */
            resourceName?: string;
            /**
                * <p>The name of the CloudFormation stack this resource is mapped to.</p>
                */
            logicalStackName?: string;
            /**
                * <p>The name of the application this resource is mapped to.</p>
                */
            appRegistryAppName?: string;
            /**
                * <p>The name of the resource group this resource is mapped to.</p>
                */
            resourceGroupName?: string;
            /**
                * <p>Specifies the type of resource mapping.</p>
                *          <dl>
                *             <dt>AppRegistryApp</dt>
                *             <dd>
                *                <p>The resource is mapped to another application. The name of the application is
                *             contained in the <code>appRegistryAppName</code> property.</p>
                *             </dd>
                *             <dt>CfnStack</dt>
                *             <dd>
                *                <p>The resource is mapped to a CloudFormation stack. The name of the CloudFormation stack is contained in
                *             the <code>logicalStackName</code> property.</p>
                *             </dd>
                *             <dt>Resource</dt>
                *             <dd>
                *                <p>The resource is mapped to another resource. The name of the resource is contained in
                *             the <code>resourceName</code> property.</p>
                *             </dd>
                *             <dt>ResourceGroup</dt>
                *             <dd>
                *                <p>The resource is mapped to a resource group. The name of the resource group is
                *             contained in the <code>resourceGroupName</code> property.</p>
                *             </dd>
                *          </dl>
                */
            mappingType: ResourceMappingType | string | undefined;
            /**
                * <p>The identifier of this resource.</p>
                */
            physicalResourceId: PhysicalResourceId | undefined;
            /**
                * <p>
                *       The short name of the Terraform source.
                *     </p>
                */
            terraformSourceName?: string;
    }
    export namespace ResourceMapping {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceMapping) => any;
    }
    export interface AddDraftAppVersionResourceMappingsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p> Mappings used to map logical resources from the template to physical resources. You can
                *       use the mapping type <code>CFN_STACK</code> if the application template uses
                *       a logical stack name. Or you can map individual resources by using the mapping type
                *       <code>RESOURCE</code>. We recommend using the mapping type <code>CFN_STACK</code> if the
                *       application is backed by a CloudFormation stack.</p>
                */
            resourceMappings: ResourceMapping[] | undefined;
    }
    export namespace AddDraftAppVersionResourceMappingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddDraftAppVersionResourceMappingsRequest) => any;
    }
    export interface AddDraftAppVersionResourceMappingsResponse {
            /**
                * <p> The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>Mappings used to map logical resources from the template to physical resources. You can
                *       use the mapping type <code>CFN_STACK</code> if the application template uses
                *       a logical stack name. Or you can map individual resources by using the mapping type
                *       <code>RESOURCE</code>. We recommend using the mapping type <code>CFN_STACK</code> if the
                *       application is backed by a CloudFormation stack.</p>
                */
            resourceMappings: ResourceMapping[] | undefined;
    }
    export namespace AddDraftAppVersionResourceMappingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AddDraftAppVersionResourceMappingsResponse) => any;
    }
    /**
        * <p>Occurs when a conflict with a previous successful write is detected. This generally occurs
        *       when the previous write did not have time to propagate to the host serving the current
        *       request. A retry (with appropriate backoff logic) is the recommended response to this
        *       exception.</p>
        */
    export class ConflictException extends __BaseException {
            readonly name: "ConflictException";
            readonly $fault: "client";
            /**
                * <p>The identifier of the resource that the exception applies to.</p>
                */
            resourceId?: string;
            /**
                * <p>The type of the resource that the exception applies to.</p>
                */
            resourceType?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
    }
    /**
        * <p>This exception occurs when there is an internal failure in the AWS Resilience Hub
        *       service.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    /**
        * <p>The specified resource could not be found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            /**
                * <p>The identifier of the resource that the exception applies to.</p>
                */
            resourceId?: string;
            /**
                * <p>The type of the resource that the exception applies to.</p>
                */
            resourceType?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    /**
        * <p>The limit on the number of requests per second was exceeded.</p>
        */
    export class ThrottlingException extends __BaseException {
            readonly name: "ThrottlingException";
            readonly $fault: "client";
            /**
                * <p>The number of seconds to wait before retrying the operation.</p>
                */
            retryAfterSeconds?: number;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
    }
    /**
        * <p>Indicates that a request was not valid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    /**
        * <p>Defines a recommendation.</p>
        */
    export interface RecommendationItem {
            /**
                * <p>The resource identifier.</p>
                */
            resourceId?: string;
            /**
                * <p>The target account identifier.</p>
                */
            targetAccountId?: string;
            /**
                * <p>The target region.</p>
                */
            targetRegion?: string;
            /**
                * <p>Specifies if the recommendation has already been implemented.</p>
                */
            alreadyImplemented?: boolean;
    }
    export namespace RecommendationItem {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecommendationItem) => any;
    }
    export enum AlarmType {
            CANARY = "Canary",
            COMPOSITE = "Composite",
            EVENT = "Event",
            LOGS = "Logs",
            METRIC = "Metric"
    }
    /**
        * <p>Defines a recommendation for a CloudWatch alarm.</p>
        */
    export interface AlarmRecommendation {
            /**
                * <p>The identifier of the alarm recommendation.</p>
                */
            recommendationId: string | undefined;
            /**
                * <p>The reference identifier of the alarm recommendation.</p>
                */
            referenceId: string | undefined;
            /**
                * <p>The name of the alarm recommendation.</p>
                */
            name: string | undefined;
            /**
                * <p>The description of the recommendation.</p>
                */
            description?: string;
            /**
                * <p>The type of alarm recommendation.</p>
                */
            type: AlarmType | string | undefined;
            /**
                * <p>The application component for the CloudWatch alarm recommendation.</p>
                */
            appComponentName?: string;
            /**
                * <p>The list of CloudWatch alarm recommendations.</p>
                */
            items?: RecommendationItem[];
            /**
                * <p>The prerequisite for the alarm recommendation.</p>
                */
            prerequisite?: string;
    }
    export namespace AlarmRecommendation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AlarmRecommendation) => any;
    }
    export enum AppAssessmentScheduleType {
            DAILY = "Daily",
            DISABLED = "Disabled"
    }
    export enum AppComplianceStatusType {
            CHANGES_DETECTED = "ChangesDetected",
            NOT_ASSESSED = "NotAssessed",
            POLICY_BREACHED = "PolicyBreached",
            POLICY_MET = "PolicyMet"
    }
    export enum AppStatusType {
            ACTIVE = "Active",
            DELETING = "Deleting"
    }
    /**
        * <p>Defines a Resilience Hub application.</p>
        */
    export interface App {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The name for the application.</p>
                */
            name: string | undefined;
            /**
                * <p>The optional description for an app.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn?: string;
            /**
                * <p>The timestamp for when the app was created.</p>
                */
            creationTime: Date | undefined;
            /**
                * <p>The status of the action.</p>
                */
            status?: AppStatusType | string;
            /**
                * <p>The current status of compliance for the resiliency policy.</p>
                */
            complianceStatus?: AppComplianceStatusType | string;
            /**
                * <p>The timestamp for the most recent compliance evaluation.</p>
                */
            lastAppComplianceEvaluationTime?: Date;
            /**
                * <p>The current resiliency score for the application.</p>
                */
            resiliencyScore?: number;
            /**
                * <p>The timestamp for the most recent resiliency score evaluation.</p>
                */
            lastResiliencyScoreEvaluationTime?: Date;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>
                *       Assessment execution schedule with 'Daily' or 'Disabled' values.
                *     </p>
                */
            assessmentSchedule?: AppAssessmentScheduleType | string;
    }
    export namespace App {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: App) => any;
    }
    export enum AssessmentStatus {
            FAILED = "Failed",
            INPROGRESS = "InProgress",
            PENDING = "Pending",
            SUCCESS = "Success"
    }
    export enum DisruptionType {
            AZ = "AZ",
            HARDWARE = "Hardware",
            REGION = "Region",
            SOFTWARE = "Software"
    }
    export enum ComplianceStatus {
            POLICY_BREACHED = "PolicyBreached",
            POLICY_MET = "PolicyMet"
    }
    /**
        * <p>Defines the compliance against the resiliency policy for a disruption.</p>
        */
    export interface DisruptionCompliance {
            /**
                * <p>The Recovery Time Objective (RTO) that is achievable, in seconds</p>
                */
            achievableRtoInSecs?: number;
            /**
                * <p>The current RTO, in seconds.</p>
                */
            currentRtoInSecs?: number;
            /**
                * <p>The RTO reference identifier.</p>
                */
            rtoReferenceId?: string;
            /**
                * <p>The RTO description.</p>
                */
            rtoDescription?: string;
            /**
                * <p>The current RPO, in seconds.</p>
                */
            currentRpoInSecs?: number;
            /**
                * <p>The RPO reference identifier.</p>
                */
            rpoReferenceId?: string;
            /**
                * <p>The RPO description.</p>
                */
            rpoDescription?: string;
            /**
                * <p>The current status of compliance for the resiliency policy.</p>
                */
            complianceStatus: ComplianceStatus | string | undefined;
            /**
                * <p>The Recovery Point Objective (RPO) that is achievable, in seconds.</p>
                */
            achievableRpoInSecs?: number;
            /**
                * <p>The disruption compliance message.</p>
                */
            message?: string;
    }
    export namespace DisruptionCompliance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DisruptionCompliance) => any;
    }
    export enum CostFrequency {
            DAILY = "Daily",
            HOURLY = "Hourly",
            MONTHLY = "Monthly",
            YEARLY = "Yearly"
    }
    /**
        * <p>Defines a cost object.</p>
        */
    export interface Cost {
            /**
                * <p>The cost amount.</p>
                */
            amount: number | undefined;
            /**
                * <p>The cost currency, for example <code>USD</code>.</p>
                */
            currency: string | undefined;
            /**
                * <p>The cost frequency.</p>
                */
            frequency: CostFrequency | string | undefined;
    }
    export namespace Cost {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Cost) => any;
    }
    export enum AssessmentInvoker {
            SYSTEM = "System",
            USER = "User"
    }
    export enum DataLocationConstraint {
            ANY_LOCATION = "AnyLocation",
            SAME_CONTINENT = "SameContinent",
            SAME_COUNTRY = "SameCountry"
    }
    export enum EstimatedCostTier {
            L1 = "L1",
            L2 = "L2",
            L3 = "L3",
            L4 = "L4"
    }
    /**
        * <p>Defines a failure policy.</p>
        */
    export interface FailurePolicy {
            /**
                * <p>The Recovery Time Objective (RTO), in seconds.</p>
                */
            rtoInSecs: number | undefined;
            /**
                * <p>The Recovery Point Objective (RPO), in seconds.</p>
                */
            rpoInSecs: number | undefined;
    }
    export namespace FailurePolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: FailurePolicy) => any;
    }
    export enum ResiliencyPolicyTier {
            CORE_SERVICES = "CoreServices",
            CRITICAL = "Critical",
            IMPORTANT = "Important",
            MISSION_CRITICAL = "MissionCritical",
            NON_CRITICAL = "NonCritical"
    }
    /**
        * <p>Defines a resiliency policy.</p>
        */
    export interface ResiliencyPolicy {
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn?: string;
            /**
                * <p>The name of the policy</p>
                */
            policyName?: string;
            /**
                * <p>The description for the policy.</p>
                */
            policyDescription?: string;
            /**
                * <p>Specifies a high-level geographical location constraint for where your resilience policy
                *       data can be stored.</p>
                */
            dataLocationConstraint?: DataLocationConstraint | string;
            /**
                * <p>The tier for this resiliency policy, ranging from the highest severity
                *         (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p>
                */
            tier?: ResiliencyPolicyTier | string;
            /**
                * <p>Specifies the estimated cost tier of the resiliency policy.</p>
                */
            estimatedCostTier?: EstimatedCostTier | string;
            /**
                * <p>The resiliency policy.</p>
                */
            policy?: Record<string, FailurePolicy>;
            /**
                * <p>The timestamp for when the resiliency policy was created.</p>
                */
            creationTime?: Date;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace ResiliencyPolicy {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResiliencyPolicy) => any;
    }
    /**
        * <p>The overall resiliency score, returned as an object that includes the disruption score and
        *       outage score.</p>
        */
    export interface ResiliencyScore {
            /**
                * <p>The outage score for a valid key.</p>
                */
            score: number | undefined;
            /**
                * <p>The disruption score for a valid key.</p>
                */
            disruptionScore: Record<string, number> | undefined;
    }
    export namespace ResiliencyScore {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResiliencyScore) => any;
    }
    /**
        * <p>
        *       Defines application resource errors.
        *     </p>
        */
    export interface ResourceError {
            /**
                * <p>
                *       This is the identifier of the resource.
                *     </p>
                */
            logicalResourceId?: string;
            /**
                * <p>
                *       This is the identifier of the physical resource.
                *     </p>
                */
            physicalResourceId?: string;
            /**
                * <p>
                *       This is the error message.
                *     </p>
                */
            reason?: string;
    }
    export namespace ResourceError {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceError) => any;
    }
    /**
        * <p>
        *       A list of errors retrieving an application's resources.
        *     </p>
        */
    export interface ResourceErrorsDetails {
            /**
                * <p>
                *       A list of errors retrieving an application's resources.
                *     </p>
                */
            resourceErrors?: ResourceError[];
            /**
                * <p>
                *       This indicates if there are more errors not listed in the resourceErrors list.
                *     </p>
                */
            hasMoreErrors?: boolean;
    }
    export namespace ResourceErrorsDetails {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceErrorsDetails) => any;
    }
    /**
        * <p>Defines an application assessment.</p>
        */
    export interface AppAssessment {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>The version of the application.</p>
                */
            appVersion?: string;
            /**
                * <p>The entity that invoked the assessment.</p>
                */
            invoker: AssessmentInvoker | string | undefined;
            /**
                * <p>The cost for the application.</p>
                */
            cost?: Cost;
            /**
                * <p>The current resiliency score for the application.</p>
                */
            resiliencyScore?: ResiliencyScore;
            /**
                * <p>The application compliance against the resiliency policy.</p>
                */
            compliance?: Record<string, DisruptionCompliance>;
            /**
                * <p>The current status of the compliance for the resiliency policy.</p>
                */
            complianceStatus?: ComplianceStatus | string;
            /**
                * <p>The current status of the assessment for the resiliency policy.</p>
                */
            assessmentStatus: AssessmentStatus | string | undefined;
            /**
                * <p>The starting time for the action.</p>
                */
            startTime?: Date;
            /**
                * <p>The end time for the action.</p>
                */
            endTime?: Date;
            /**
                * <p>Error or warning message from the assessment execution</p>
                */
            message?: string;
            /**
                * <p>The name of the assessment.</p>
                */
            assessmentName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The resiliency policy.</p>
                */
            policy?: ResiliencyPolicy;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>
                *       A resource error object containing a list of errors retrieving an application's resources.
                *     </p>
                */
            resourceErrorsDetails?: ResourceErrorsDetails;
    }
    export namespace AppAssessment {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppAssessment) => any;
    }
    /**
        * <p>Defines an application assessment summary.</p>
        */
    export interface AppAssessmentSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>The version of the application.</p>
                */
            appVersion?: string;
            /**
                * <p>The current status of the assessment for the resiliency policy.</p>
                */
            assessmentStatus: AssessmentStatus | string | undefined;
            /**
                * <p>The entity that invoked the assessment.</p>
                */
            invoker?: AssessmentInvoker | string;
            /**
                * <p>The starting time for the action.</p>
                */
            startTime?: Date;
            /**
                * <p>The end time for the action.</p>
                */
            endTime?: Date;
            /**
                * <p>The message from the assessment run.</p>
                */
            message?: string;
            /**
                * <p>The name of the assessment.</p>
                */
            assessmentName?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The current status of compliance for the resiliency policy.</p>
                */
            complianceStatus?: ComplianceStatus | string;
            /**
                * <p>The cost for the application.</p>
                */
            cost?: Cost;
            /**
                * <p>The current resiliency score for the application.</p>
                */
            resiliencyScore?: number;
    }
    export namespace AppAssessmentSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppAssessmentSummary) => any;
    }
    /**
        * <p>Defines an application component.</p>
        */
    export interface AppComponent {
            /**
                * <p>The name of the application component.</p>
                */
            name: string | undefined;
            /**
                * <p>The type of application component.</p>
                */
            type: string | undefined;
    }
    export namespace AppComponent {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppComponent) => any;
    }
    /**
        * <p>Defines the compliance of an application component against the resiliency policy.</p>
        */
    export interface AppComponentCompliance {
            /**
                * <p>The cost for the application.</p>
                */
            cost?: Cost;
            /**
                * <p>The name of the application component.</p>
                */
            appComponentName?: string;
            /**
                * <p>The compliance of the application component against the resiliency policy.</p>
                */
            compliance?: Record<string, DisruptionCompliance>;
            /**
                * <p>The compliance message.</p>
                */
            message?: string;
            /**
                * <p>The status of the action.</p>
                */
            status?: ComplianceStatus | string;
            /**
                * <p>The current resiliency score for the application.</p>
                */
            resiliencyScore?: ResiliencyScore;
    }
    export namespace AppComponentCompliance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppComponentCompliance) => any;
    }
    /**
        * <p>Defines an application summary.</p>
        */
    export interface AppSummary {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The name of the application.</p>
                */
            name: string | undefined;
            /**
                * <p>The optional description for an app.</p>
                */
            description?: string;
            /**
                * <p>The timestamp for when the app was created.</p>
                */
            creationTime: Date | undefined;
            /**
                * <p>The current status of compliance for the resiliency policy.</p>
                */
            complianceStatus?: AppComplianceStatusType | string;
            /**
                * <p>The current resiliency score for the application.</p>
                */
            resiliencyScore?: number;
            /**
                * <p>
                *       Assessment execution schedule with 'Daily' or 'Disabled' values.
                *     </p>
                */
            assessmentSchedule?: AppAssessmentScheduleType | string;
    }
    export namespace AppSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppSummary) => any;
    }
    /**
        * <p>The version of the application.</p>
        */
    export interface AppVersionSummary {
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
    }
    export namespace AppVersionSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: AppVersionSummary) => any;
    }
    export interface CreateAppRequest {
            /**
                * <p>The name for the application.</p>
                */
            name: string | undefined;
            /**
                * <p>The optional description for an app.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn?: string;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
            /**
                * <p>
                *       Assessment execution schedule with 'Daily' or 'Disabled' values.
                *     </p>
                */
            assessmentSchedule?: AppAssessmentScheduleType | string;
    }
    export namespace CreateAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppRequest) => any;
    }
    export interface CreateAppResponse {
            /**
                * <p>The created application returned as an object with details including compliance status,
                *       creation time, description, resiliency score, and more.</p>
                */
            app: App | undefined;
    }
    export namespace CreateAppResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateAppResponse) => any;
    }
    /**
        * <p>You have exceeded your service quota. To perform the requested action, remove some of the
        *       relevant resources, or use Service Quotas to request a service quota increase.</p>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    export enum TemplateFormat {
            CFN_JSON = "CfnJson",
            CFN_YAML = "CfnYaml"
    }
    export enum RenderRecommendationType {
            ALARM = "Alarm",
            SOP = "Sop",
            TEST = "Test"
    }
    export interface CreateRecommendationTemplateRequest {
            /**
                * <p>Identifiers for the recommendations used to create a recommendation template.</p>
                */
            recommendationIds?: string[];
            /**
                * <p>The format for the recommendation template.</p>
                *          <dl>
                *             <dt>CfnJson</dt>
                *             <dd>
                *                <p>The template is CloudFormation JSON.</p>
                *             </dd>
                *             <dt>CfnYaml</dt>
                *             <dd>
                *                <p>The template is CloudFormation YAML.</p>
                *             </dd>
                *          </dl>
                */
            format?: TemplateFormat | string;
            /**
                * <p>An array of strings that specify the recommendation template type or types.</p>
                *          <dl>
                *             <dt>Alarm</dt>
                *             <dd>
                *                <p>The template is an <a>AlarmRecommendation</a> template.</p>
                *             </dd>
                *             <dt>Sop</dt>
                *             <dd>
                *                <p>The template is a <a>SopRecommendation</a> template.</p>
                *             </dd>
                *             <dt>Test</dt>
                *             <dd>
                *                <p>The template is a <a>TestRecommendation</a> template.</p>
                *             </dd>
                *          </dl>
                */
            recommendationTypes?: (RenderRecommendationType | string)[];
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The name for the recommendation template.</p>
                */
            name: string | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>The name of the Amazon S3 bucket that will contain the recommendation template.</p>
                */
            bucketName?: string;
    }
    export namespace CreateRecommendationTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRecommendationTemplateRequest) => any;
    }
    export enum RecommendationTemplateStatus {
            FAILED = "Failed",
            IN_PROGRESS = "InProgress",
            PENDING = "Pending",
            SUCCESS = "Success"
    }
    /**
        * <p>The location of the Amazon S3 bucket.</p>
        */
    export interface S3Location {
            /**
                * <p>The name of the Amazon S3 bucket.</p>
                */
            bucket?: string;
            /**
                * <p>The prefix for the Amazon S3 bucket.</p>
                */
            prefix?: string;
    }
    export namespace S3Location {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: S3Location) => any;
    }
    /**
        * <p>Defines a recommendation template created with the <a>CreateRecommendationTemplate</a> action.</p>
        */
    export interface RecommendationTemplate {
            /**
                * <p>The file location of the template.</p>
                */
            templatesLocation?: S3Location;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>Identifiers for the recommendations used in the recommendation template.</p>
                */
            recommendationIds?: string[];
            /**
                * <p>An array of strings that specify the recommendation template type or types.</p>
                *          <dl>
                *             <dt>Alarm</dt>
                *             <dd>
                *                <p>The template is an <a>AlarmRecommendation</a> template.</p>
                *             </dd>
                *             <dt>Sop</dt>
                *             <dd>
                *                <p>The template is a <a>SopRecommendation</a> template.</p>
                *             </dd>
                *             <dt>Test</dt>
                *             <dd>
                *                <p>The template is a <a>TestRecommendation</a> template.</p>
                *             </dd>
                *          </dl>
                */
            recommendationTypes: (RenderRecommendationType | string)[] | undefined;
            /**
                * <p>The format of the recommendation template.</p>
                *          <dl>
                *             <dt>CfnJson</dt>
                *             <dd>
                *                <p>The template is CloudFormation JSON.</p>
                *             </dd>
                *             <dt>CfnYaml</dt>
                *             <dd>
                *                <p>The template is CloudFormation YAML.</p>
                *             </dd>
                *          </dl>
                */
            format: TemplateFormat | string | undefined;
            /**
                * <p>The Amazon Resource Name (ARN) for the recommendation template.</p>
                */
            recommendationTemplateArn: string | undefined;
            /**
                * <p>The message for the recommendation template.</p>
                */
            message?: string;
            /**
                * <p>The status of the action.</p>
                */
            status: RecommendationTemplateStatus | string | undefined;
            /**
                * <p>The name for the recommendation template.</p>
                */
            name: string | undefined;
            /**
                * <p>The start time for the action.</p>
                */
            startTime?: Date;
            /**
                * <p>The end time for the action.</p>
                */
            endTime?: Date;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
            /**
                * <p>Indicates if replacements are needed.</p>
                */
            needsReplacements?: boolean;
    }
    export namespace RecommendationTemplate {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecommendationTemplate) => any;
    }
    export interface CreateRecommendationTemplateResponse {
            /**
                * <p>The newly created recommendation template, returned as an object. This object includes the
                *       template's name, format, status, tags, Amazon S3 bucket location, and more.</p>
                */
            recommendationTemplate?: RecommendationTemplate;
    }
    export namespace CreateRecommendationTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRecommendationTemplateResponse) => any;
    }
    export interface CreateResiliencyPolicyRequest {
            /**
                * <p>The name of the policy</p>
                */
            policyName: string | undefined;
            /**
                * <p>The description for the policy.</p>
                */
            policyDescription?: string;
            /**
                * <p>Specifies a high-level geographical location constraint for where your resilience policy
                *       data can be stored.</p>
                */
            dataLocationConstraint?: DataLocationConstraint | string;
            /**
                * <p>The tier for this resiliency policy, ranging from the highest severity
                *         (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p>
                */
            tier: ResiliencyPolicyTier | string | undefined;
            /**
                * <p>The type of resiliency policy to be created, including the recovery time objective (RTO)
                *       and recovery point objective (RPO) in seconds.</p>
                */
            policy: Record<string, FailurePolicy> | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace CreateResiliencyPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResiliencyPolicyRequest) => any;
    }
    export interface CreateResiliencyPolicyResponse {
            /**
                * <p>The type of resiliency policy that was created, including the recovery time objective
                *       (RTO) and recovery point objective (RPO) in seconds.</p>
                */
            policy: ResiliencyPolicy | undefined;
    }
    export namespace CreateResiliencyPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateResiliencyPolicyResponse) => any;
    }
    export interface DeleteAppRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>A boolean option to force the deletion of a Resilience Hub application. </p>
                */
            forceDelete?: boolean;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppRequest) => any;
    }
    export interface DeleteAppResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
    }
    export namespace DeleteAppResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppResponse) => any;
    }
    export interface DeleteAppAssessmentRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteAppAssessmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppAssessmentRequest) => any;
    }
    export interface DeleteAppAssessmentResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The current status of the assessment for the resiliency policy.</p>
                */
            assessmentStatus: AssessmentStatus | string | undefined;
    }
    export namespace DeleteAppAssessmentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteAppAssessmentResponse) => any;
    }
    export interface DeleteRecommendationTemplateRequest {
            /**
                * <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
                */
            recommendationTemplateArn: string | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteRecommendationTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRecommendationTemplateRequest) => any;
    }
    export interface DeleteRecommendationTemplateResponse {
            /**
                * <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
                */
            recommendationTemplateArn: string | undefined;
            /**
                * <p>The status of the action.</p>
                */
            status: RecommendationTemplateStatus | string | undefined;
    }
    export namespace DeleteRecommendationTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRecommendationTemplateResponse) => any;
    }
    export interface DeleteResiliencyPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn: string | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
    }
    export namespace DeleteResiliencyPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResiliencyPolicyRequest) => any;
    }
    export interface DeleteResiliencyPolicyResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn: string | undefined;
    }
    export namespace DeleteResiliencyPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteResiliencyPolicyResponse) => any;
    }
    export interface DescribeAppRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
    }
    export namespace DescribeAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppRequest) => any;
    }
    export interface DescribeAppResponse {
            /**
                * <p>The specified application, returned as an object with details including compliance status,
                *       creation time, description, resiliency score, and more.</p>
                */
            app: App | undefined;
    }
    export namespace DescribeAppResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppResponse) => any;
    }
    export interface DescribeAppAssessmentRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
    }
    export namespace DescribeAppAssessmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppAssessmentRequest) => any;
    }
    export interface DescribeAppAssessmentResponse {
            /**
                * <p>The assessment for an AWS Resilience Hub application, returned as an object. This object
                *       includes Amazon Resource Names (ARNs), compliance information, compliance status, cost,
                *       messages, resiliency scores, and more.</p>
                */
            assessment: AppAssessment | undefined;
    }
    export namespace DescribeAppAssessmentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppAssessmentResponse) => any;
    }
    export interface DescribeAppVersionResourcesResolutionStatusRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId?: string;
    }
    export namespace DescribeAppVersionResourcesResolutionStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppVersionResourcesResolutionStatusRequest) => any;
    }
    export enum ResourceResolutionStatusType {
            FAILED = "Failed",
            IN_PROGRESS = "InProgress",
            PENDING = "Pending",
            SUCCESS = "Success"
    }
    export interface DescribeAppVersionResourcesResolutionStatusResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId: string | undefined;
            /**
                * <p>The status of the action.</p>
                */
            status: ResourceResolutionStatusType | string | undefined;
            /**
                * <p>The returned error message for the request.</p>
                */
            errorMessage?: string;
    }
    export namespace DescribeAppVersionResourcesResolutionStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppVersionResourcesResolutionStatusResponse) => any;
    }
    export interface DescribeAppVersionTemplateRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
    }
    export namespace DescribeAppVersionTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppVersionTemplateRequest) => any;
    }
    export interface DescribeAppVersionTemplateResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The body of the template.</p>
                */
            appTemplateBody: string | undefined;
    }
    export namespace DescribeAppVersionTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeAppVersionTemplateResponse) => any;
    }
    export interface DescribeDraftAppVersionResourcesImportStatusRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
    }
    export namespace DescribeDraftAppVersionResourcesImportStatusRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDraftAppVersionResourcesImportStatusRequest) => any;
    }
    export enum ResourceImportStatusType {
            FAILED = "Failed",
            IN_PROGRESS = "InProgress",
            PENDING = "Pending",
            SUCCESS = "Success"
    }
    export interface DescribeDraftAppVersionResourcesImportStatusResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The status of the action.</p>
                */
            status: ResourceImportStatusType | string | undefined;
            /**
                * <p>The timestamp for when the status last changed.</p>
                */
            statusChangeTime: Date | undefined;
            /**
                * <p>The returned error message for the request.</p>
                */
            errorMessage?: string;
    }
    export namespace DescribeDraftAppVersionResourcesImportStatusResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeDraftAppVersionResourcesImportStatusResponse) => any;
    }
    export interface DescribeResiliencyPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn: string | undefined;
    }
    export namespace DescribeResiliencyPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResiliencyPolicyRequest) => any;
    }
    export interface DescribeResiliencyPolicyResponse {
            /**
                * <p>Information about the specific resiliency policy, returned as an object. This object
                *       includes creation time, data location constraints, its name, description, tags, the recovery
                *       time objective (RTO) and recovery point objective (RPO) in seconds, and more.</p>
                */
            policy: ResiliencyPolicy | undefined;
    }
    export namespace DescribeResiliencyPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DescribeResiliencyPolicyResponse) => any;
    }
    /**
        * <p>
        *       The Terraform s3 state file you need to import.
        *     </p>
        */
    export interface TerraformSource {
            /**
                * <p>
                *       The Terraform s3 state file you need to import.
                *     </p>
                */
            s3StateFileUrl: string | undefined;
    }
    export namespace TerraformSource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TerraformSource) => any;
    }
    export interface ImportResourcesToDraftAppVersionRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The Amazon Resource Names (ARNs) for the resources that you want to import.</p>
                */
            sourceArns?: string[];
            /**
                * <p>
                *       A list of terraform file s3 URLs you need to import.
                *     </p>
                */
            terraformSources?: TerraformSource[];
    }
    export namespace ImportResourcesToDraftAppVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportResourcesToDraftAppVersionRequest) => any;
    }
    export interface ImportResourcesToDraftAppVersionResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The Amazon Resource Names (ARNs) for the resources that you imported.</p>
                */
            sourceArns?: string[];
            /**
                * <p>The status of the action.</p>
                */
            status: ResourceImportStatusType | string | undefined;
            /**
                * <p>
                *       A list of terraform file s3 URLs you need to import.
                *     </p>
                */
            terraformSources?: TerraformSource[];
    }
    export namespace ImportResourcesToDraftAppVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ImportResourcesToDraftAppVersionResponse) => any;
    }
    export interface ListAlarmRecommendationsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAlarmRecommendationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAlarmRecommendationsRequest) => any;
    }
    export interface ListAlarmRecommendationsResponse {
            /**
                * <p>The alarm recommendations for an AWS Resilience Hub application, returned as an object. This
                *       object includes application component names, descriptions, information about whether a
                *       recommendation has already been implemented or not, prerequisites, and more.</p>
                */
            alarmRecommendations: AlarmRecommendation[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAlarmRecommendationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAlarmRecommendationsResponse) => any;
    }
    export interface ListAppAssessmentsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>The name for the assessment.</p>
                */
            assessmentName?: string;
            /**
                * <p>The current status of the assessment for the resiliency policy.</p>
                */
            assessmentStatus?: (AssessmentStatus | string)[];
            /**
                * <p>The current status of compliance for the resiliency policy.</p>
                */
            complianceStatus?: ComplianceStatus | string;
            /**
                * <p>Specifies the entity that invoked a specific assessment, either a <code>User</code> or the
                *         <code>System</code>.</p>
                */
            invoker?: AssessmentInvoker | string;
            /**
                * <p>The default is to sort by ascending <b>startTime</b>.
                * To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
                */
            reverseOrder?: boolean;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAppAssessmentsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppAssessmentsRequest) => any;
    }
    export interface ListAppAssessmentsResponse {
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
            /**
                * <p>The summaries for the specified assessments, returned as an object. This object includes
                *       application versions, associated Amazon Resource Numbers (ARNs), cost, messages, resiliency
                *       scores, and more.</p>
                */
            assessmentSummaries: AppAssessmentSummary[] | undefined;
    }
    export namespace ListAppAssessmentsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppAssessmentsResponse) => any;
    }
    export interface ListAppComponentCompliancesRequest {
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
    }
    export namespace ListAppComponentCompliancesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppComponentCompliancesRequest) => any;
    }
    export interface ListAppComponentCompliancesResponse {
            /**
                * <p>The compliances for an AWS Resilience Hub application component, returned as an object. This
                *       object contains component names, compliances, costs, resiliency scores, outage scores, and
                *       more.</p>
                */
            componentCompliances: AppComponentCompliance[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppComponentCompliancesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppComponentCompliancesResponse) => any;
    }
    export interface ListAppComponentRecommendationsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAppComponentRecommendationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppComponentRecommendationsRequest) => any;
    }
    export enum HaArchitecture {
            BACKUP_AND_RESTORE = "BackupAndRestore",
            MULTI_SITE = "MultiSite",
            NO_RECOVERY_PLAN = "NoRecoveryPlan",
            PILOT_LIGHT = "PilotLight",
            WARM_STANDBY = "WarmStandby"
    }
    export enum ConfigRecommendationOptimizationType {
            BEST_ATTAINABLE = "BestAttainable",
            BEST_AZ_RECOVERY = "BestAZRecovery",
            LEAST_CHANGE = "LeastChange",
            LEAST_COST = "LeastCost",
            LEAST_ERRORS = "LeastErrors"
    }
    /**
        * <p>Defines a disruption compliance recommendation.</p>
        */
    export interface RecommendationDisruptionCompliance {
            /**
                * <p>The expected compliance status after applying the recommended configuration change.</p>
                */
            expectedComplianceStatus: ComplianceStatus | string | undefined;
            /**
                * <p>The expected RTO after applying the recommended configuration change.</p>
                */
            expectedRtoInSecs?: number;
            /**
                * <p>The expected Recovery Time Objective (RTO) description after applying the recommended
                *       configuration change.</p>
                */
            expectedRtoDescription?: string;
            /**
                * <p>The expected RPO after applying the recommended configuration change.</p>
                */
            expectedRpoInSecs?: number;
            /**
                * <p>The expected Recovery Point Objective (RPO) description after applying the recommended
                *       configuration change.</p>
                */
            expectedRpoDescription?: string;
    }
    export namespace RecommendationDisruptionCompliance {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RecommendationDisruptionCompliance) => any;
    }
    /**
        * <p>Defines a configuration recommendation.</p>
        */
    export interface ConfigRecommendation {
            /**
                * <p>The cost for the application.</p>
                */
            cost?: Cost;
            /**
                * <p>The application component name.</p>
                */
            appComponentName?: string;
            /**
                * <p>The current compliance against the resiliency policy before applying the configuration
                *       change.</p>
                */
            compliance?: Record<string, DisruptionCompliance>;
            /**
                * <p>The expected compliance against the resiliency policy after applying the configuration
                *       change.</p>
                */
            recommendationCompliance?: Record<string, RecommendationDisruptionCompliance>;
            /**
                * <p>The type of optimization.</p>
                */
            optimizationType: ConfigRecommendationOptimizationType | string | undefined;
            /**
                * <p>The name of the recommendation configuration.</p>
                */
            name: string | undefined;
            /**
                * <p>The optional description for an app.</p>
                */
            description?: string;
            /**
                * <p>List of the suggested configuration changes.</p>
                */
            suggestedChanges?: string[];
            /**
                * <p>The architecture type.</p>
                */
            haArchitecture?: HaArchitecture | string;
            /**
                * <p>The reference identifier for the recommendation configuration.</p>
                */
            referenceId: string | undefined;
    }
    export namespace ConfigRecommendation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ConfigRecommendation) => any;
    }
    export enum RecommendationComplianceStatus {
            BREACHED_CAN_MEET = "BreachedCanMeet",
            BREACHED_UNATTAINABLE = "BreachedUnattainable",
            MET_CAN_IMPROVE = "MetCanImprove"
    }
    /**
        * <p>Defines recommendations for a Resilience Hub application component, returned as an object. This
        *       object contains component names, configuration recommendations, and recommendation
        *       statuses.</p>
        */
    export interface ComponentRecommendation {
            /**
                * <p>The name of the application component.</p>
                */
            appComponentName: string | undefined;
            /**
                * <p>The recommendation status.</p>
                */
            recommendationStatus: RecommendationComplianceStatus | string | undefined;
            /**
                * <p>The list of recommendations.</p>
                */
            configRecommendations: ConfigRecommendation[] | undefined;
    }
    export namespace ComponentRecommendation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ComponentRecommendation) => any;
    }
    export interface ListAppComponentRecommendationsResponse {
            /**
                * <p>The recommendations for an Resilience Hub application component, returned as an object. This
                *       object contains component names, configuration recommendations, and recommendation
                *       statuses.</p>
                */
            componentRecommendations: ComponentRecommendation[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppComponentRecommendationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppComponentRecommendationsResponse) => any;
    }
    export interface ListAppsRequest {
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
            /**
                * <p>The name for the one of the listed applications.</p>
                */
            name?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
    }
    export namespace ListAppsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppsRequest) => any;
    }
    export interface ListAppsResponse {
            /**
                * <p>Summaries for the Resilience Hub application.</p>
                */
            appSummaries: AppSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppsResponse) => any;
    }
    export interface ListAppVersionResourceMappingsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAppVersionResourceMappingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionResourceMappingsRequest) => any;
    }
    export interface ListAppVersionResourceMappingsResponse {
            /**
                * <p>Mappings used to map logical resources from the template to physical resources. You can
                *       use the mapping type <code>CFN_STACK</code> if the application template uses
                *       a logical stack name. Or you can map individual resources by using the mapping type
                *       <code>RESOURCE</code>. We recommend using the mapping type <code>CFN_STACK</code> if the
                *       application is backed by a CloudFormation stack.</p>
                */
            resourceMappings: ResourceMapping[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppVersionResourceMappingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionResourceMappingsResponse) => any;
    }
    export interface ListAppVersionResourcesRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId?: string;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAppVersionResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionResourcesRequest) => any;
    }
    /**
        * <p>Defines a logical resource identifier.</p>
        */
    export interface LogicalResourceId {
            /**
                * <p>The identifier of the resource.</p>
                */
            identifier: string | undefined;
            /**
                * <p>The name of the CloudFormation stack this resource belongs to.</p>
                */
            logicalStackName?: string;
            /**
                * <p>The name of the resource group that this resource belongs to.</p>
                */
            resourceGroupName?: string;
            /**
                * <p>
                *       The name of the Terraform S3 state file this resource belongs to.
                *     </p>
                */
            terraformSourceName?: string;
    }
    export namespace LogicalResourceId {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: LogicalResourceId) => any;
    }
    /**
        * <p>Defines a physical resource. A physical resource is a resource that exists in your
        *       account. It can be identified using an Amazon Resource Name (ARN) or a Resilience Hub-native
        *       identifier. </p>
        */
    export interface PhysicalResource {
            /**
                * <p>The name of the resource.</p>
                */
            resourceName?: string;
            /**
                * <p>The logical identifier of the resource.</p>
                */
            logicalResourceId: LogicalResourceId | undefined;
            /**
                * <p>The physical identifier of the resource.</p>
                */
            physicalResourceId: PhysicalResourceId | undefined;
            /**
                * <p>The type of resource.</p>
                */
            resourceType: string | undefined;
            /**
                * <p>The application components that belong to this resource.</p>
                */
            appComponents?: AppComponent[];
    }
    export namespace PhysicalResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PhysicalResource) => any;
    }
    export interface ListAppVersionResourcesResponse {
            /**
                * <p>The physical resources in the application version.</p>
                */
            physicalResources: PhysicalResource[] | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId: string | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppVersionResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionResourcesResponse) => any;
    }
    export interface ListAppVersionsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListAppVersionsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionsRequest) => any;
    }
    export interface ListAppVersionsResponse {
            /**
                * <p>The version of the application.</p>
                */
            appVersions: AppVersionSummary[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListAppVersionsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListAppVersionsResponse) => any;
    }
    export interface ListRecommendationTemplatesRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
            /**
                * <p>The default is to sort by ascending <b>startTime</b>.
                * To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
                */
            reverseOrder?: boolean;
            /**
                * <p>The status of the action.</p>
                */
            status?: (RecommendationTemplateStatus | string)[];
            /**
                * <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
                */
            recommendationTemplateArn?: string;
            /**
                * <p>The name for one of the listed recommendation templates.</p>
                */
            name?: string;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListRecommendationTemplatesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRecommendationTemplatesRequest) => any;
    }
    export interface ListRecommendationTemplatesResponse {
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
            /**
                * <p>The recommendation templates for the Resilience Hub applications.</p>
                */
            recommendationTemplates?: RecommendationTemplate[];
    }
    export namespace ListRecommendationTemplatesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRecommendationTemplatesResponse) => any;
    }
    export interface ListResiliencyPoliciesRequest {
            /**
                * <p>The name of the policy</p>
                */
            policyName?: string;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListResiliencyPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResiliencyPoliciesRequest) => any;
    }
    export interface ListResiliencyPoliciesResponse {
            /**
                * <p>The resiliency policies for the Resilience Hub applications.</p>
                */
            resiliencyPolicies: ResiliencyPolicy[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListResiliencyPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListResiliencyPoliciesResponse) => any;
    }
    export interface ListSopRecommendationsRequest {
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
    }
    export namespace ListSopRecommendationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSopRecommendationsRequest) => any;
    }
    export enum SopServiceType {
            SSM = "SSM"
    }
    /**
        * <p>Defines a standard operating procedure (SOP) recommendation.</p>
        */
    export interface SopRecommendation {
            /**
                * <p>The service type.</p>
                */
            serviceType: SopServiceType | string | undefined;
            /**
                * <p>The application component name.</p>
                */
            appComponentName?: string;
            /**
                * <p>The description of the SOP recommendation.</p>
                */
            description?: string;
            /**
                * <p>Identifier for the SOP recommendation.</p>
                */
            recommendationId: string | undefined;
            /**
                * <p>The name of the SOP recommendation.</p>
                */
            name?: string;
            /**
                * <p>The recommendation items.</p>
                */
            items?: RecommendationItem[];
            /**
                * <p>The reference identifier for the SOP recommendation.</p>
                */
            referenceId: string | undefined;
            /**
                * <p>The prerequisite for the SOP recommendation.</p>
                */
            prerequisite?: string;
    }
    export namespace SopRecommendation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: SopRecommendation) => any;
    }
    export interface ListSopRecommendationsResponse {
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
            /**
                * <p>The standard operating procedure (SOP) recommendations for the Resilience Hub
                *       applications.</p>
                */
            sopRecommendations: SopRecommendation[] | undefined;
    }
    export namespace ListSopRecommendationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSopRecommendationsResponse) => any;
    }
    export interface ListSuggestedResiliencyPoliciesRequest {
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListSuggestedResiliencyPoliciesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSuggestedResiliencyPoliciesRequest) => any;
    }
    export interface ListSuggestedResiliencyPoliciesResponse {
            /**
                * <p>The suggested resiliency policies for the Resilience Hub applications.</p>
                */
            resiliencyPolicies: ResiliencyPolicy[] | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListSuggestedResiliencyPoliciesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListSuggestedResiliencyPoliciesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) for a specific resource in your Resilience Hub
                *       application.</p>
                */
            resourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface ListTestRecommendationsRequest {
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
            /**
                * <p>The Amazon Resource Name (ARN) of the assessment. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            assessmentArn: string | undefined;
    }
    export namespace ListTestRecommendationsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTestRecommendationsRequest) => any;
    }
    export enum TestRisk {
            HIGH = "High",
            MEDIUM = "Medium",
            SMALL = "Small"
    }
    export enum TestType {
            AZ = "AZ",
            HARDWARE = "Hardware",
            REGION = "Region",
            SOFTWARE = "Software"
    }
    /**
        * <p>Defines a test recommendation.</p>
        */
    export interface TestRecommendation {
            /**
                * <p>Identifier for the test recommendation.</p>
                */
            recommendationId?: string;
            /**
                * <p>The reference identifier for the test recommendation.</p>
                */
            referenceId: string | undefined;
            /**
                * <p>The name of the application component.</p>
                */
            appComponentName?: string;
            /**
                * <p>The name of the test recommendation.</p>
                */
            name?: string;
            /**
                * <p>The intent of the test recommendation.</p>
                */
            intent?: string;
            /**
                * <p>The level of risk for this test recommendation.</p>
                */
            risk?: TestRisk | string;
            /**
                * <p>The type of test recommendation.</p>
                */
            type?: TestType | string;
            /**
                * <p>The description for the test recommendation.</p>
                */
            description?: string;
            /**
                * <p>The test recommendation items.</p>
                */
            items?: RecommendationItem[];
            /**
                * <p>The prerequisite of the test recommendation.</p>
                */
            prerequisite?: string;
            /**
                * <p>
                *       A list of recommended alarms that are used in the test and must be exported before or with the test.
                *     </p>
                */
            dependsOnAlarms?: string[];
    }
    export namespace TestRecommendation {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TestRecommendation) => any;
    }
    export interface ListTestRecommendationsResponse {
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
            /**
                * <p>The test recommendations for the Resilience Hub application.</p>
                */
            testRecommendations: TestRecommendation[] | undefined;
    }
    export namespace ListTestRecommendationsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTestRecommendationsResponse) => any;
    }
    export interface ListUnsupportedAppVersionResourcesRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId?: string;
            /**
                * <p>Null, or the token from a previous call to get the next set of results.</p>
                */
            nextToken?: string;
            /**
                * <p>The maximum number of results to include in the response. If more results exist than the specified
                * <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
                */
            maxResults?: number;
    }
    export namespace ListUnsupportedAppVersionResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUnsupportedAppVersionResourcesRequest) => any;
    }
    /**
        * <p>Defines a resource that is not supported by Resilience Hub.</p>
        */
    export interface UnsupportedResource {
            /**
                * <p>The logical resource identifier for the unsupported resource.</p>
                */
            logicalResourceId: LogicalResourceId | undefined;
            /**
                * <p>The physical resource identifier for the unsupported resource.</p>
                */
            physicalResourceId: PhysicalResourceId | undefined;
            /**
                * <p>The type of resource.</p>
                */
            resourceType: string | undefined;
    }
    export namespace UnsupportedResource {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UnsupportedResource) => any;
    }
    export interface ListUnsupportedAppVersionResourcesResponse {
            /**
                * <p>The unsupported resources for the application.</p>
                */
            unsupportedResources: UnsupportedResource[] | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId: string | undefined;
            /**
                * <p>The token for the next set of results, or null if there are no more results.</p>
                */
            nextToken?: string;
    }
    export namespace ListUnsupportedAppVersionResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListUnsupportedAppVersionResourcesResponse) => any;
    }
    export interface PublishAppVersionRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
    }
    export namespace PublishAppVersionRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishAppVersionRequest) => any;
    }
    export interface PublishAppVersionResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion?: string;
    }
    export namespace PublishAppVersionResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PublishAppVersionResponse) => any;
    }
    export interface PutDraftAppVersionTemplateRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>A JSON string that contains the body of the app template.</p>
                */
            appTemplateBody: string | undefined;
    }
    export namespace PutDraftAppVersionTemplateRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDraftAppVersionTemplateRequest) => any;
    }
    export interface PutDraftAppVersionTemplateResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>The version of the application.</p>
                */
            appVersion?: string;
    }
    export namespace PutDraftAppVersionTemplateResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: PutDraftAppVersionTemplateResponse) => any;
    }
    export interface RemoveDraftAppVersionResourceMappingsRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The names of the resources to remove from the resource mappings.</p>
                */
            resourceNames?: string[];
            /**
                * <p>The names of the CloudFormation stacks to remove from the resource mappings.</p>
                */
            logicalStackNames?: string[];
            /**
                * <p>The names of the registered applications to remove from the resource mappings.</p>
                */
            appRegistryAppNames?: string[];
            /**
                * <p>The names of the resource groups to remove from the resource mappings.</p>
                */
            resourceGroupNames?: string[];
            /**
                * <p>
                *
                *     </p>
                */
            terraformSourceNames?: string[];
    }
    export namespace RemoveDraftAppVersionResourceMappingsRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveDraftAppVersionResourceMappingsRequest) => any;
    }
    export interface RemoveDraftAppVersionResourceMappingsResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn?: string;
            /**
                * <p>The version of the application.</p>
                */
            appVersion?: string;
    }
    export namespace RemoveDraftAppVersionResourceMappingsResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RemoveDraftAppVersionResourceMappingsResponse) => any;
    }
    export interface ResolveAppVersionResourcesRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
    }
    export namespace ResolveAppVersionResourcesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResolveAppVersionResourcesRequest) => any;
    }
    export interface ResolveAppVersionResourcesResponse {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The identifier for a specific resolution.</p>
                */
            resolutionId: string | undefined;
            /**
                * <p>The status of the action.</p>
                */
            status: ResourceResolutionStatusType | string | undefined;
    }
    export namespace ResolveAppVersionResourcesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResolveAppVersionResourcesResponse) => any;
    }
    export interface StartAppAssessmentRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The version of the application.</p>
                */
            appVersion: string | undefined;
            /**
                * <p>The name for the assessment.</p>
                */
            assessmentName: string | undefined;
            /**
                * <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters.
                * You should not reuse the same client token for other API requests.</p>
                */
            clientToken?: string;
            /**
                * <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource.
                * Each tag consists of a key/value pair.</p>
                */
            tags?: Record<string, string>;
    }
    export namespace StartAppAssessmentRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAppAssessmentRequest) => any;
    }
    export interface StartAppAssessmentResponse {
            /**
                * <p>The assessment created.</p>
                */
            assessment: AppAssessment | undefined;
    }
    export namespace StartAppAssessmentResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: StartAppAssessmentResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource. </p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The tags to assign to the resource. Each tag consists of a key/value pair.</p>
                */
            tags: Record<string, string> | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resource. </p>
                */
            resourceArn: string | undefined;
            /**
                * <p>The keys of the tags to remove.</p>
                */
            tagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateAppRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            appArn: string | undefined;
            /**
                * <p>The optional description for an app.</p>
                */
            description?: string;
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn?: string;
            /**
                * <p>Specifies if the resiliency policy ARN should be cleared.</p>
                */
            clearResiliencyPolicyArn?: boolean;
            /**
                * <p>
                *       Assessment execution schedule with 'Daily' or 'Disabled' values.
                *     </p>
                */
            assessmentSchedule?: AppAssessmentScheduleType | string;
    }
    export namespace UpdateAppRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppRequest) => any;
    }
    export interface UpdateAppResponse {
            /**
                * <p>The specified application, returned as an object with details including compliance status,
                *       creation time, description, resiliency score, and more.</p>
                */
            app: App | undefined;
    }
    export namespace UpdateAppResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateAppResponse) => any;
    }
    export interface UpdateResiliencyPolicyRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is:
                * arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs,
                * see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">
                *                     Amazon Resource Names (ARNs)</a> in the
                *                     <i>AWS General Reference</i>.</p>
                */
            policyArn: string | undefined;
            /**
                * <p>The name of the policy</p>
                */
            policyName?: string;
            /**
                * <p>The description for the policy.</p>
                */
            policyDescription?: string;
            /**
                * <p>Specifies a high-level geographical location constraint for where your resilience policy
                *       data can be stored.</p>
                */
            dataLocationConstraint?: DataLocationConstraint | string;
            /**
                * <p>The tier for this resiliency policy, ranging from the highest severity
                *         (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p>
                */
            tier?: ResiliencyPolicyTier | string;
            /**
                * <p>The type of resiliency policy to be created, including the recovery time objective (RTO)
                *       and recovery point objective (RPO) in seconds.</p>
                */
            policy?: Record<string, FailurePolicy>;
    }
    export namespace UpdateResiliencyPolicyRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResiliencyPolicyRequest) => any;
    }
    export interface UpdateResiliencyPolicyResponse {
            /**
                * <p>The type of resiliency policy that was updated, including the recovery time objective
                *       (RTO) and recovery point objective (RPO) in seconds.</p>
                */
            policy: ResiliencyPolicy | undefined;
    }
    export namespace UpdateResiliencyPolicyResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateResiliencyPolicyResponse) => any;
    }
}

declare module '@aws-sdk/client-resiliencehub/node_modules/@aws-sdk/client-resiliencehub/dist-types/models/ResiliencehubServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Resiliencehub service.
        */
    export class ResiliencehubServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

