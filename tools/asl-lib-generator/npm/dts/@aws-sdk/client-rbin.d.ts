// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   @aws-sdk/types
//   @aws-sdk/smithy-client
//   @aws-sdk/config-resolver
//   @aws-sdk/middleware-host-header
//   @aws-sdk/middleware-retry
//   @aws-sdk/middleware-signing
//   @aws-sdk/middleware-user-agent
//   @aws-sdk/protocol-http

declare module '@aws-sdk/client-rbin' {
    import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
    import { CreateRuleCommandInput, CreateRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/CreateRuleCommand";
    import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/DeleteRuleCommand";
    import { GetRuleCommandInput, GetRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/GetRuleCommand";
    import { ListRulesCommandInput, ListRulesCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListRulesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListTagsForResourceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UntagResourceCommand";
    import { UpdateRuleCommandInput, UpdateRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UpdateRuleCommand";
    import { RbinClient } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    /**
        * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides
        *       descriptions and syntax for each of the actions and data types in Recycle Bin.</p>
        *
        *          <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally
        *       deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are
        *       deleted, they are retained in the Recycle Bin for a time period that you specify.</p>
        *
        *          <p>You can restore a resource from the Recycle Bin at any time before its retention period
        *       expires. After you restore a resource from the Recycle Bin, the resource is removed from the
        *       Recycle Bin, and you can then use it in the same way you use any other resource of that type
        *       in your account. If the retention period expires and the resource is not restored, the resource
        *       is permanently deleted from the Recycle Bin and is no longer available for recovery. For more
        *       information about Recycle Bin, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html">
        *         Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        */
    export class Rbin extends RbinClient {
            /**
                * <p>Creates a Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-create-rule">
                *       Create Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
                */
            createRule(args: CreateRuleCommandInput, options?: __HttpHandlerOptions): Promise<CreateRuleCommandOutput>;
            createRule(args: CreateRuleCommandInput, cb: (err: any, data?: CreateRuleCommandOutput) => void): void;
            createRule(args: CreateRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateRuleCommandOutput) => void): void;
            /**
                * <p>Deletes a Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-delete-rule">
                *       Delete Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
                */
            deleteRule(args: DeleteRuleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteRuleCommandOutput>;
            deleteRule(args: DeleteRuleCommandInput, cb: (err: any, data?: DeleteRuleCommandOutput) => void): void;
            deleteRule(args: DeleteRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteRuleCommandOutput) => void): void;
            /**
                * <p>Gets information about a Recycle Bin retention rule.</p>
                */
            getRule(args: GetRuleCommandInput, options?: __HttpHandlerOptions): Promise<GetRuleCommandOutput>;
            getRule(args: GetRuleCommandInput, cb: (err: any, data?: GetRuleCommandOutput) => void): void;
            getRule(args: GetRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRuleCommandOutput) => void): void;
            /**
                * <p>Lists the Recycle Bin retention rules in the Region.</p>
                */
            listRules(args: ListRulesCommandInput, options?: __HttpHandlerOptions): Promise<ListRulesCommandOutput>;
            listRules(args: ListRulesCommandInput, cb: (err: any, data?: ListRulesCommandOutput) => void): void;
            listRules(args: ListRulesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListRulesCommandOutput) => void): void;
            /**
                * <p>Lists the tags assigned to a retention rule.</p>
                */
            listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
            listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
            /**
                * <p>Assigns tags to the specified retention rule.</p>
                */
            tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
            tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
            /**
                * <p>Unassigns a tag from a retention rule.</p>
                */
            untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
            untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
            /**
                * <p>Updates an existing Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-update-rule">
                *       Update Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
                */
            updateRule(args: UpdateRuleCommandInput, options?: __HttpHandlerOptions): Promise<UpdateRuleCommandOutput>;
            updateRule(args: UpdateRuleCommandInput, cb: (err: any, data?: UpdateRuleCommandOutput) => void): void;
            updateRule(args: UpdateRuleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateRuleCommandOutput) => void): void;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/CreateRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { CreateRuleRequest, CreateRuleResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface CreateRuleCommandInput extends CreateRuleRequest {
    }
    export interface CreateRuleCommandOutput extends CreateRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Creates a Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-create-rule">
        *       Create Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, CreateRuleCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, CreateRuleCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new CreateRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link CreateRuleCommandInput} for command's `input` shape.
        * @see {@link CreateRuleCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class CreateRuleCommand extends $Command<CreateRuleCommandInput, CreateRuleCommandOutput, RbinClientResolvedConfig> {
            readonly input: CreateRuleCommandInput;
            constructor(input: CreateRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateRuleCommandInput, CreateRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/DeleteRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { DeleteRuleRequest, DeleteRuleResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface DeleteRuleCommandInput extends DeleteRuleRequest {
    }
    export interface DeleteRuleCommandOutput extends DeleteRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Deletes a Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-delete-rule">
        *       Delete Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, DeleteRuleCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, DeleteRuleCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new DeleteRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link DeleteRuleCommandInput} for command's `input` shape.
        * @see {@link DeleteRuleCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class DeleteRuleCommand extends $Command<DeleteRuleCommandInput, DeleteRuleCommandOutput, RbinClientResolvedConfig> {
            readonly input: DeleteRuleCommandInput;
            constructor(input: DeleteRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteRuleCommandInput, DeleteRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/GetRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { GetRuleRequest, GetRuleResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface GetRuleCommandInput extends GetRuleRequest {
    }
    export interface GetRuleCommandOutput extends GetRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Gets information about a Recycle Bin retention rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, GetRuleCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, GetRuleCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new GetRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link GetRuleCommandInput} for command's `input` shape.
        * @see {@link GetRuleCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class GetRuleCommand extends $Command<GetRuleCommandInput, GetRuleCommandOutput, RbinClientResolvedConfig> {
            readonly input: GetRuleCommandInput;
            constructor(input: GetRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRuleCommandInput, GetRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListRulesCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListRulesRequest, ListRulesResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface ListRulesCommandInput extends ListRulesRequest {
    }
    export interface ListRulesCommandOutput extends ListRulesResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the Recycle Bin retention rules in the Region.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, ListRulesCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, ListRulesCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new ListRulesCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListRulesCommandInput} for command's `input` shape.
        * @see {@link ListRulesCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class ListRulesCommand extends $Command<ListRulesCommandInput, ListRulesCommandOutput, RbinClientResolvedConfig> {
            readonly input: ListRulesCommandInput;
            constructor(input: ListRulesCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRulesCommandInput, ListRulesCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListTagsForResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { ListTagsForResourceRequest, ListTagsForResourceResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface ListTagsForResourceCommandInput extends ListTagsForResourceRequest {
    }
    export interface ListTagsForResourceCommandOutput extends ListTagsForResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Lists the tags assigned to a retention rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, ListTagsForResourceCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, ListTagsForResourceCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new ListTagsForResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.
        * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class ListTagsForResourceCommand extends $Command<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput, RbinClientResolvedConfig> {
            readonly input: ListTagsForResourceCommandInput;
            constructor(input: ListTagsForResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/TagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { TagResourceRequest, TagResourceResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface TagResourceCommandInput extends TagResourceRequest {
    }
    export interface TagResourceCommandOutput extends TagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Assigns tags to the specified retention rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, TagResourceCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, TagResourceCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new TagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link TagResourceCommandInput} for command's `input` shape.
        * @see {@link TagResourceCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class TagResourceCommand extends $Command<TagResourceCommandInput, TagResourceCommandOutput, RbinClientResolvedConfig> {
            readonly input: TagResourceCommandInput;
            constructor(input: TagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TagResourceCommandInput, TagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UntagResourceCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UntagResourceRequest, UntagResourceResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface UntagResourceCommandInput extends UntagResourceRequest {
    }
    export interface UntagResourceCommandOutput extends UntagResourceResponse, __MetadataBearer {
    }
    /**
        * <p>Unassigns a tag from a retention rule.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, UntagResourceCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, UntagResourceCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new UntagResourceCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UntagResourceCommandInput} for command's `input` shape.
        * @see {@link UntagResourceCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class UntagResourceCommand extends $Command<UntagResourceCommandInput, UntagResourceCommandOutput, RbinClientResolvedConfig> {
            readonly input: UntagResourceCommandInput;
            constructor(input: UntagResourceCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UntagResourceCommandInput, UntagResourceCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UpdateRuleCommand' {
    import { Command as $Command } from "@aws-sdk/smithy-client";
    import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
    import { UpdateRuleRequest, UpdateRuleResponse } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0";
    import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient";
    export interface UpdateRuleCommandInput extends UpdateRuleRequest {
    }
    export interface UpdateRuleCommandOutput extends UpdateRuleResponse, __MetadataBearer {
    }
    /**
        * <p>Updates an existing Recycle Bin retention rule. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-update-rule">
        *       Update Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        * @example
        * Use a bare-bones client and the command you need to make an API call.
        * ```javascript
        * import { RbinClient, UpdateRuleCommand } from "@aws-sdk/client-rbin"; // ES Modules import
        * // const { RbinClient, UpdateRuleCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
        * const client = new RbinClient(config);
        * const command = new UpdateRuleCommand(input);
        * const response = await client.send(command);
        * ```
        *
        * @see {@link UpdateRuleCommandInput} for command's `input` shape.
        * @see {@link UpdateRuleCommandOutput} for command's `response` shape.
        * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
        *
        */
    export class UpdateRuleCommand extends $Command<UpdateRuleCommandInput, UpdateRuleCommandOutput, RbinClientResolvedConfig> {
            readonly input: UpdateRuleCommandInput;
            constructor(input: UpdateRuleCommandInput);
            /**
                * @internal
                */
            resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RbinClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateRuleCommandInput, UpdateRuleCommandOutput>;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/RbinClient' {
    import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
    import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
    import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
    import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
    import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
    import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
    import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
    import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
    import { CreateRuleCommandInput, CreateRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/CreateRuleCommand";
    import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/DeleteRuleCommand";
    import { GetRuleCommandInput, GetRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/GetRuleCommand";
    import { ListRulesCommandInput, ListRulesCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListRulesCommand";
    import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/ListTagsForResourceCommand";
    import { TagResourceCommandInput, TagResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/TagResourceCommand";
    import { UntagResourceCommandInput, UntagResourceCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UntagResourceCommand";
    import { UpdateRuleCommandInput, UpdateRuleCommandOutput } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/commands/UpdateRuleCommand";
    export type ServiceInputTypes = CreateRuleCommandInput | DeleteRuleCommandInput | GetRuleCommandInput | ListRulesCommandInput | ListTagsForResourceCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdateRuleCommandInput;
    export type ServiceOutputTypes = CreateRuleCommandOutput | DeleteRuleCommandOutput | GetRuleCommandOutput | ListRulesCommandOutput | ListTagsForResourceCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdateRuleCommandOutput;
    export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
            /**
                * The HTTP handler to use. Fetch in browser and Https in Nodejs.
                */
            requestHandler?: __HttpHandler;
            /**
                * A constructor for a class implementing the {@link __Hash} interface
                * that computes the SHA-256 HMAC or checksum of a string or binary buffer.
                * @internal
                */
            sha256?: __HashConstructor;
            /**
                * The function that will be used to convert strings into HTTP endpoints.
                * @internal
                */
            urlParser?: __UrlParser;
            /**
                * A function that can calculate the length of a request body.
                * @internal
                */
            bodyLengthChecker?: __BodyLengthCalculator;
            /**
                * A function that converts a stream into an array of bytes.
                * @internal
                */
            streamCollector?: __StreamCollector;
            /**
                * The function that will be used to convert a base64-encoded string to a byte array.
                * @internal
                */
            base64Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a base64-encoded string.
                * @internal
                */
            base64Encoder?: __Encoder;
            /**
                * The function that will be used to convert a UTF8-encoded string to a byte array.
                * @internal
                */
            utf8Decoder?: __Decoder;
            /**
                * The function that will be used to convert binary data to a UTF-8 encoded string.
                * @internal
                */
            utf8Encoder?: __Encoder;
            /**
                * The runtime environment.
                * @internal
                */
            runtime?: string;
            /**
                * Disable dyanamically changing the endpoint of the client based on the hostPrefix
                * trait of an operation.
                */
            disableHostPrefix?: boolean;
            /**
                * Value for how many times a request will be made at most in case of retry.
                */
            maxAttempts?: number | __Provider<number>;
            /**
                * Specifies which retry algorithm to use.
                */
            retryMode?: string | __Provider<string>;
            /**
                * Optional logger for logging debug/info/warn/error.
                */
            logger?: __Logger;
            /**
                * Enables IPv6/IPv4 dualstack endpoint.
                */
            useDualstackEndpoint?: boolean | __Provider<boolean>;
            /**
                * Enables FIPS compatible endpoints.
                */
            useFipsEndpoint?: boolean | __Provider<boolean>;
            /**
                * Unique service identifier.
                * @internal
                */
            serviceId?: string;
            /**
                * The AWS region to which this client will send requests
                */
            region?: string | __Provider<string>;
            /**
                * Default credentials provider; Not available in browser runtime.
                * @internal
                */
            credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
            /**
                * Fetch related hostname, signing name or signing region with given region.
                * @internal
                */
            regionInfoProvider?: RegionInfoProvider;
            /**
                * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header
                * @internal
                */
            defaultUserAgentProvider?: Provider<__UserAgent>;
            /**
                * The {@link DefaultsMode} that will be used to determine how certain default configuration options are resolved in the SDK.
                */
            defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
    }
    type RbinClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;
    /**
        * The configuration interface of RbinClient class constructor that set the region, credentials and other options.
        */
    export interface RbinClientConfig extends RbinClientConfigType {
    }
    type RbinClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;
    /**
        * The resolved configuration interface of RbinClient class. This is resolved and normalized from the {@link RbinClientConfig | constructor configuration interface}.
        */
    export interface RbinClientResolvedConfig extends RbinClientResolvedConfigType {
    }
    /**
        * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides
        *       descriptions and syntax for each of the actions and data types in Recycle Bin.</p>
        *
        *          <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally
        *       deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are
        *       deleted, they are retained in the Recycle Bin for a time period that you specify.</p>
        *
        *          <p>You can restore a resource from the Recycle Bin at any time before its retention period
        *       expires. After you restore a resource from the Recycle Bin, the resource is removed from the
        *       Recycle Bin, and you can then use it in the same way you use any other resource of that type
        *       in your account. If the retention period expires and the resource is not restored, the resource
        *       is permanently deleted from the Recycle Bin and is no longer available for recovery. For more
        *       information about Recycle Bin, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html">
        *         Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        */
    export class RbinClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, RbinClientResolvedConfig> {
            /**
                * The resolved configuration of RbinClient class. This is resolved and normalized from the {@link RbinClientConfig | constructor configuration interface}.
                */
            readonly config: RbinClientResolvedConfig;
            constructor(configuration: RbinClientConfig);
            /**
                * Destroy underlying resources, like sockets. It's usually not necessary to do this.
                * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
                * Otherwise, sockets might stay open for quite a long time before the server terminates them.
                */
            destroy(): void;
    }
    export {};
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/models_0' {
    import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
    import { RbinServiceException as __BaseException } from "@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/RbinServiceException";
    /**
        * <p>Information about the resource tags used to identify resources that are retained by the retention
        *       rule.</p>
        */
    export interface ResourceTag {
            /**
                * <p>The tag key.</p>
                */
            ResourceTagKey: string | undefined;
            /**
                * <p>The tag value.</p>
                */
            ResourceTagValue?: string;
    }
    export namespace ResourceTag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ResourceTag) => any;
    }
    export enum ResourceType {
            EBS_SNAPSHOT = "EBS_SNAPSHOT",
            EC2_IMAGE = "EC2_IMAGE"
    }
    export enum RetentionPeriodUnit {
            DAYS = "DAYS"
    }
    /**
        * <p>Information about the retention period for which the retention rule is to retain resources.</p>
        */
    export interface RetentionPeriod {
            /**
                * <p>The period value for which the retention rule is to retain resources. The period is measured using
                *       the unit specified for <b>RetentionPeriodUnit</b>.</p>
                */
            RetentionPeriodValue: number | undefined;
            /**
                * <p>The unit of time in which the retention period is measured. Currently, only <code>DAYS</code>
                *       is supported.</p>
                */
            RetentionPeriodUnit: RetentionPeriodUnit | string | undefined;
    }
    export namespace RetentionPeriod {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RetentionPeriod) => any;
    }
    /**
        * <p>Information about the tags to assign to the retention rule.</p>
        */
    export interface Tag {
            /**
                * <p>The tag key.</p>
                */
            Key: string | undefined;
            /**
                * <p>The tag value.</p>
                */
            Value: string | undefined;
    }
    export namespace Tag {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: Tag) => any;
    }
    export interface CreateRuleRequest {
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod: RetentionPeriod | undefined;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>Information about the tags to assign to the retention rule.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The resource type to be retained by the retention rule. Currently, only Amazon EBS snapshots
                *       and EBS-backed AMIs are supported. To retain snapshots, specify <code>EBS_SNAPSHOT</code>. To
                *       retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>.</p>
                */
            ResourceType: ResourceType | string | undefined;
            /**
                * <p>Specifies the resource tags to use to identify resources that are to be retained by a
                *   tag-level retention rule. For tag-level retention rules, only deleted resources, of the specified resource type, that
                *   have one or more of the specified tag key and value pairs are retained. If a resource is deleted, but it does not have
                *   any of the specified tag key and value pairs, it is immediately deleted without being retained by the retention rule.</p>
                *          <p>You can add the same tag key and value pair to a maximum or five retention rules.</p>
                *          <p>To create a Region-level retention rule, omit this parameter. A Region-level retention rule
                *       does not have any resource tags specified. It retains all deleted resources of the specified
                *       resource type in the Region in which the rule is created, even if the resources are not tagged.</p>
                */
            ResourceTags?: ResourceTag[];
    }
    export namespace CreateRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleRequest) => any;
    }
    export enum RuleStatus {
            AVAILABLE = "available",
            PENDING = "pending"
    }
    export interface CreateRuleResponse {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier?: string;
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod?: RetentionPeriod;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>Information about the tags assigned to the retention rule.</p>
                */
            Tags?: Tag[];
            /**
                * <p>The resource type retained by the retention rule.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>Information about the resource tags used to identify resources that are retained by the retention
                *       rule.</p>
                */
            ResourceTags?: ResourceTag[];
            /**
                * <p>The state of the retention rule. Only retention rules that are in the <code>available</code>
                *       state retain resources.</p>
                */
            Status?: RuleStatus | string;
    }
    export namespace CreateRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: CreateRuleResponse) => any;
    }
    /**
        * <p>The service could not respond to the request due to an internal problem.</p>
        */
    export class InternalServerException extends __BaseException {
            readonly name: "InternalServerException";
            readonly $fault: "server";
            Message?: string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
    }
    export enum ServiceQuotaExceededExceptionReason {
            SERVICE_QUOTA_EXCEEDED = "SERVICE_QUOTA_EXCEEDED"
    }
    /**
        * <p>The request would cause a service quota for the number of tags per resource to be exceeded.</p>
        */
    export class ServiceQuotaExceededException extends __BaseException {
            readonly name: "ServiceQuotaExceededException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The reason for the exception.</p>
                */
            Reason?: ServiceQuotaExceededExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
    }
    export enum ValidationExceptionReason {
            INVALID_PAGE_TOKEN = "INVALID_PAGE_TOKEN",
            INVALID_PARAMETER_VALUE = "INVALID_PARAMETER_VALUE"
    }
    /**
        * <p>One or more of the parameters in the request is not valid.</p>
        */
    export class ValidationException extends __BaseException {
            readonly name: "ValidationException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The reason for the exception.</p>
                */
            Reason?: ValidationExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
    }
    export interface DeleteRuleRequest {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier: string | undefined;
    }
    export namespace DeleteRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleRequest) => any;
    }
    export interface DeleteRuleResponse {
    }
    export namespace DeleteRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: DeleteRuleResponse) => any;
    }
    export enum ResourceNotFoundExceptionReason {
            RULE_NOT_FOUND = "RULE_NOT_FOUND"
    }
    /**
        * <p>The specified resource was not found.</p>
        */
    export class ResourceNotFoundException extends __BaseException {
            readonly name: "ResourceNotFoundException";
            readonly $fault: "client";
            Message?: string;
            /**
                * <p>The reason for the exception.</p>
                */
            Reason?: ResourceNotFoundExceptionReason | string;
            /**
                * @internal
                */
            constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
    }
    export interface GetRuleRequest {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier: string | undefined;
    }
    export namespace GetRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleRequest) => any;
    }
    export interface GetRuleResponse {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier?: string;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>The resource type retained by the retention rule.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod?: RetentionPeriod;
            /**
                * <p>Information about the resource tags used to identify resources that are retained by the retention
                *       rule.</p>
                */
            ResourceTags?: ResourceTag[];
            /**
                * <p>The state of the retention rule. Only retention rules that are in the <code>available</code>
                *       state retain resources.</p>
                */
            Status?: RuleStatus | string;
    }
    export namespace GetRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: GetRuleResponse) => any;
    }
    export interface ListRulesRequest {
            /**
                * <p>The maximum number of results to return with a single call.
                * 	To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
                */
            MaxResults?: number;
            /**
                * <p>The token for the next page of results.</p>
                */
            NextToken?: string;
            /**
                * <p>The resource type retained by the retention rule. Only retention rules that retain
                *       the specified resource type are listed. Currently, only Amazon EBS snapshots and EBS-backed
                *       AMIs are supported. To list retention rules that retain snapshots, specify
                *       <code>EBS_SNAPSHOT</code>. To list retention rules that retain EBS-backed AMIs, specify
                *       <code>EC2_IMAGE</code>.</p>
                */
            ResourceType: ResourceType | string | undefined;
            /**
                * <p>Information about the resource tags used to identify resources that are retained by the retention
                *       rule.</p>
                */
            ResourceTags?: ResourceTag[];
    }
    export namespace ListRulesRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesRequest) => any;
    }
    /**
        * <p>Information about a Recycle Bin retention rule.</p>
        */
    export interface RuleSummary {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier?: string;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod?: RetentionPeriod;
    }
    export namespace RuleSummary {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: RuleSummary) => any;
    }
    export interface ListRulesResponse {
            /**
                * <p>Information about the retention rules.</p>
                */
            Rules?: RuleSummary[];
            /**
                * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
                */
            NextToken?: string;
    }
    export namespace ListRulesResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListRulesResponse) => any;
    }
    export interface ListTagsForResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the retention rule.</p>
                */
            ResourceArn: string | undefined;
    }
    export namespace ListTagsForResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
    }
    export interface ListTagsForResourceResponse {
            /**
                * <p>Information about the tags assigned to the retention rule.</p>
                */
            Tags?: Tag[];
    }
    export namespace ListTagsForResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
    }
    export interface TagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the retention rule.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>Information about the tags to assign to the retention rule.</p>
                */
            Tags: Tag[] | undefined;
    }
    export namespace TagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceRequest) => any;
    }
    export interface TagResourceResponse {
    }
    export namespace TagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: TagResourceResponse) => any;
    }
    export interface UntagResourceRequest {
            /**
                * <p>The Amazon Resource Name (ARN) of the retention rule.</p>
                */
            ResourceArn: string | undefined;
            /**
                * <p>The tag keys of the tags to unassign. All tags that have the specified tag key are unassigned.</p>
                */
            TagKeys: string[] | undefined;
    }
    export namespace UntagResourceRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceRequest) => any;
    }
    export interface UntagResourceResponse {
    }
    export namespace UntagResourceResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UntagResourceResponse) => any;
    }
    export interface UpdateRuleRequest {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier: string | undefined;
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod?: RetentionPeriod;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>The resource type to be retained by the retention rule. Currently, only Amazon EBS snapshots
                *       and EBS-backed AMIs are supported. To retain snapshots, specify <code>EBS_SNAPSHOT</code>. To
                *       retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>Specifies the resource tags to use to identify resources that are to be retained by a
                *   tag-level retention rule. For tag-level retention rules, only deleted resources, of the specified resource type, that
                *   have one or more of the specified tag key and value pairs are retained. If a resource is deleted, but it does not have
                *   any of the specified tag key and value pairs, it is immediately deleted without being retained by the retention rule.</p>
                *          <p>You can add the same tag key and value pair to a maximum or five retention rules.</p>
                *          <p>To create a Region-level retention rule, omit this parameter. A Region-level retention rule
                *       does not have any resource tags specified. It retains all deleted resources of the specified
                *       resource type in the Region in which the rule is created, even if the resources are not tagged.</p>
                */
            ResourceTags?: ResourceTag[];
    }
    export namespace UpdateRuleRequest {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleRequest) => any;
    }
    export interface UpdateRuleResponse {
            /**
                * <p>The unique ID of the retention rule.</p>
                */
            Identifier?: string;
            /**
                * <p>Information about the retention period for which the retention rule is to retain resources.</p>
                */
            RetentionPeriod?: RetentionPeriod;
            /**
                * <p>The retention rule description.</p>
                */
            Description?: string;
            /**
                * <p>The resource type retained by the retention rule.</p>
                */
            ResourceType?: ResourceType | string;
            /**
                * <p>Information about the resource tags used to identify resources that are retained by the retention
                *       rule.</p>
                */
            ResourceTags?: ResourceTag[];
            /**
                * <p>The state of the retention rule. Only retention rules that are in the <code>available</code>
                *       state retain resources.</p>
                */
            Status?: RuleStatus | string;
    }
    export namespace UpdateRuleResponse {
            /**
                * @internal
                */
            const filterSensitiveLog: (obj: UpdateRuleResponse) => any;
    }
}

declare module '@aws-sdk/client-rbin/node_modules/@aws-sdk/client-rbin/dist-types/models/RbinServiceException' {
    import { ServiceException as __ServiceException, ServiceExceptionOptions as __ServiceExceptionOptions } from "@aws-sdk/smithy-client";
    /**
        * Base exception class for all service exceptions from Rbin service.
        */
    export class RbinServiceException extends __ServiceException {
            /**
                * @internal
                */
            constructor(options: __ServiceExceptionOptions);
    }
}

